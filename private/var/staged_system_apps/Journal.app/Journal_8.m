void sub_10058C7E0(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    v7 = *(void *)&v1[OBJC_IVAR____TtC7Journal15AdminComposerVC_model];
    v8 = IndexPath.row.getter();
    v9 = (uint64_t *)(v7 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
    swift_beginAccess();
    v10 = *v9;
    if ((v10 & 0xC000000000000001) == 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        v11 = *(id *)(v10 + 8 * v8 + 32);
LABEL_6:
        v12 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
        type metadata accessor for MainActor();
        v13 = v2;
        v14 = v11;
        v15 = static MainActor.shared.getter();
        v16 = (void *)swift_allocObject();
        v16[2] = v15;
        v16[3] = &protocol witness table for MainActor;
        v16[4] = v13;
        v16[5] = v14;
        sub_100328A60((uint64_t)v6, (uint64_t)&unk_100811E90, (uint64_t)v16);
        swift_release();

        return;
      }
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
}

uint64_t sub_10058C9B8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10058CA00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_10058A508(a1, v4, v5, v7, v6);
}

uint64_t sub_10058CAC0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10058CB00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100589DE4(a1, v4, v5, v6);
}

unint64_t sub_10058CBB4()
{
  unint64_t result = qword_100803F80;
  if (!qword_100803F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100803F80);
  }
  return result;
}

id sub_10058CBF4()
{
  return sub_100588238(v0);
}

uint64_t sub_10058CBFC()
{
  return swift_deallocObject();
}

uint64_t sub_10058CC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10058CC1C()
{
  return swift_release();
}

void sub_10058CC28()
{
  sub_10058B5BC(*(void **)(v0 + 24));
}

uint64_t sub_10058CC30()
{
  return swift_deallocObject();
}

id sub_10058CC40()
{
  return sub_100587E08(v0);
}

uint64_t sub_10058CC48()
{
  return swift_deallocObject();
}

uint64_t sub_10058CC5C()
{
  return swift_deallocObject();
}

id sub_10058CE10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalTransitionCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalTransitionCoordinator()
{
  return self;
}

void sub_10058CE68(void *a1)
{
  uint64_t v2 = sub_1003860A0();
  swift_unknownObjectRelease();
  if (!v2) {
    return;
  }
  id v3 = [a1 childViewControllers];
  sub_10038625C();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(v4 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  type metadata accessor for FullScreenCollectionViewController();
  if (swift_dynamicCastClass() && sub_100493D34())
  {
    [objc_allocWithZone((Class)type metadata accessor for TimelineToGalleryTransition()) init];
  }
  else
  {
  }
}

unint64_t sub_10058CFAC(void *a1)
{
  type metadata accessor for JurassicNavigationController();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2) {
    return 0;
  }
  id v3 = (void *)v2;
  id v4 = a1;
  id v5 = [v3 viewControllers];
  sub_10038625C();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
LABEL_16:

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_19;
    }
    id v8 = *(id *)(v6 + 32);
  }
  uint64_t v7 = v8;
  swift_bridgeObjectRelease();
  type metadata accessor for FullScreenCollectionViewController();
  uint64_t v9 = swift_dynamicCastClass();
  unint64_t v6 = v9;
  if (!v9)
  {
LABEL_14:

    return v6;
  }
  uint64_t v10 = (void *)(v9 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_journalAssets);
  swift_beginAccess();
  if (*v10 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v11) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (!*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:

    return 0;
  }
LABEL_10:
  if ((sub_100487DEC(v6) & 1) == 0) {
    goto LABEL_20;
  }
  if (*(unsigned char *)(v6 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing) != 1)
  {
    unint64_t v6 = (unint64_t)[objc_allocWithZone((Class)type metadata accessor for GalleryToTimelineTransition()) init];
    goto LABEL_14;
  }

  unint64_t v6 = (unint64_t)objc_retain(*(id *)(v6
                                           + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_interactiveCoordinator));

  return v6;
}

uint64_t sub_10058D1CC()
{
  type metadata accessor for Optional();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s8MetadataC5InputOMa();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10058D2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4 = v3;
  uint64_t v31 = a3;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  v30 = (void (*)(uint64_t, uint64_t, uint64_t))AssociatedConformanceWitness;
  uint64_t v8 = _s8MetadataC5InputOMa();
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v26 - v10);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 32);
  uint64_t v13 = v12(a1, a2, v9);
  uint64_t v14 = swift_release();
  if (!v13)
  {
    v15 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x140))(v14);
    if (v15)
    {
      v16 = v15;
      id v17 = [v15 assetMetaData];

      if (v17)
      {
        uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v27 = v19;
        uint64_t v28 = v18;
        unint64_t v20 = v19;

        _s8MetadataCMa();
        *uint64_t v11 = v28;
        v11[1] = v20;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = swift_allocObject();
        sub_10058EBA4((uint64_t)v11);
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 40);
        unint64_t v22 = v27;
        uint64_t v23 = v28;
        sub_100040D64(v28, v27);
        v30(v21, a1, a2);
        sub_100040DD0(v23, v22);
      }
    }
  }
  if (((uint64_t (*)(uint64_t, uint64_t))v12)(a1, a2))
  {
    sub_10058D574(v31);
    return swift_release();
  }
  else
  {
    uint64_t v25 = swift_checkMetadataState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v31, 1, 1, v25);
  }
}

uint64_t sub_10058D574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v15[-v10];
  v12 = (char *)v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v6 + 16))(v11, v12, v5);
  uint64_t v13 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v4) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a1, v11, v4);
  }
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  sub_10058ECEC(v1, a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v8, a1, v4);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v4);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 40))(v12, v8, v5);
  return swift_endAccess();
}

uint64_t sub_10058D7DC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10058EBA4(a1);
  return v2;
}

void sub_10058D81C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a2 + 32))();
  if (v3)
  {
    uint64_t v4 = sub_10058EED8();
    unint64_t v6 = v5;
    uint64_t v3 = swift_release();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  uint64_t v7 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140);
  uint64_t v8 = ((uint64_t (*)(uint64_t))v7)(v3);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    if (v6 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      sub_100040D64(v4, v6);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DBC(v4, v6);
    }
    [v9 setAssetMetaData:isa];
  }
  uint64_t v11 = (void *)v7();
  if (v11)
  {
    id v12 = v11;
    [v11 setIsUploadedToCloud:0];
    sub_100040DBC(v4, v6);
  }
  else
  {
    sub_100040DBC(v4, v6);
  }
}

uint64_t sub_10058D9B4@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  unint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_10058DC5C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);

  return v4(a2, 0, 1, a1);
}

uint64_t sub_10058DF1C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10058DFE0, 0, 0);
}

uint64_t sub_10058DFE0()
{
  unint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x128))();
  *(void *)(v0 + 72) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v6 = *(void **)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 80) = v7;
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 24);
    *(void *)(v7 + 32) = v6;
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
    id v8 = v6;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10058E304;
    uint64_t v10 = *(void *)(v0 + 64);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, sub_100590380, v7, (char *)&type metadata for () + 8);
  }
  else
  {
    if (qword_1007F7CE8 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void **)(v0 + 40);
    uint64_t v12 = type metadata accessor for Logger();
    sub_100026A54(v12, (uint64_t)qword_100811F38);
    id v13 = v11;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void **)(v0 + 40);
    if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138412290;
      *(void *)(v0 + 16) = v17;
      id v20 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v19 = v1;

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%@ (saveMetadataToCoreData) managed objects isn't set", v18, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_10058E304()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 56);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10058E478, 0, 0);
}

uint64_t sub_10058E478()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10058E4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 assetMetaData];

    if (v7)
    {
      uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    uint64_t v16 = v9;
    unint64_t v17 = v11;
    __chkstk_darwin(v8);
    v15[2] = a1;
    v15[3] = a2;
    sub_100010218(&qword_1007FC120);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v12 = _s8MetadataCMa();
    sub_10058D9B4((void (*)(char *, char *))sub_1005903D8, (uint64_t)v15, (uint64_t)&type metadata for Never, v12, v13, (uint64_t)&v18);
    sub_100040DBC(v16, v17);
    uint64_t v5 = v18;
  }
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(a2 + 40))(v5, a1, a2);
}

uint64_t sub_10058E6D8(uint64_t a1)
{
  __chkstk_darwin(a1);
  __chkstk_darwin(v1);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  uint64_t v2 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v2;
}

BOOL sub_10058EA94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 32))();
  if (v2) {
    swift_release();
  }
  return v2 == 0;
}

uint64_t sub_10058EADC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100811F38);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100811F38);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10058EBA4(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  uint64_t v4 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_OWORD *)(v1 + *(void *)(*(void *)v1 + 112)) = xmmword_1006D6A80;
  uint64_t v5 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v6 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v1;
}

uint64_t sub_10058ECEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = _s8MetadataC5InputOMa();
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v15 - v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v15 - v8, (uint64_t)a1 + *(void *)(v4 + 120), v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v11 + 32))(a2, v9, v5);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v5);
  }
  else
  {
    uint64_t v14 = *v9;
    unint64_t v13 = v9[1];
    sub_10058DC5C(v5, a2);
    return sub_100040DD0(v14, v13);
  }
}

uint64_t sub_10058EED8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 112));
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v5 = *v2;
  if (v4 >> 60 == 11)
  {
    uint64_t v5 = sub_10058EF78(v1);
    uint64_t v6 = *v2;
    unint64_t v7 = v2[1];
    *uint64_t v2 = v5;
    v2[1] = v8;
    sub_100040F10(v5, v8);
    sub_1005903B0(v6, v7);
  }
  sub_1005903C4(v3, v4);
  return v5;
}

uint64_t sub_10058EF78(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = _s8MetadataC5InputOMa();
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v14 - v9, (uint64_t)a1 + *(void *)(v2 + 120), v7, v8);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v10;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  uint64_t v12 = sub_10058E6D8(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12;
}

uint64_t sub_10058F178()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  type metadata accessor for Optional();
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1005903B0(*(void *)(v0 + *(void *)(*(void *)v0 + 112)), *(void *)(v0 + *(void *)(*(void *)v0 + 112) + 8));
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v4 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_10058F2B4()
{
  sub_10058F178();

  return swift_deallocClassInstance();
}

uint64_t _s8MetadataCMa()
{
  return sub_100073C20();
}

uint64_t _s8MetadataC5InputOMa()
{
  return sub_100073C20();
}

uint64_t sub_10058F33C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10058F3D4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      uint64_t v14 = *(void *)a2;
      unint64_t v15 = *((void *)a2 + 1);
      sub_100040D64(*(void *)a2, v15);
      *uint64_t v3 = v14;
      v3[1] = v15;
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_10058F560(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return sub_100040DD0(*(void *)a1, *((void *)a1 + 1));
  }
}

void *sub_10058F664(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    unint64_t v12 = *((void *)a2 + 1);
    sub_100040D64(*(void *)a2, v12);
    char v10 = 0;
    *a1 = v11;
    a1[1] = v12;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10058F7B0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_100040DD0(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      uint64_t v20 = *(void *)a2;
      unint64_t v19 = *((void *)a2 + 1);
      sub_100040D64(v20, v19);
      char v18 = 0;
      *(void *)a1 = v20;
      *((void *)a1 + 1) = v19;
    }
    a1[v7] = v18;
  }
  return a1;
}

_OWORD *sub_10058F9D4(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10058FB0C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_100040DD0(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_10058FD24(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_10058FE58(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x100590020);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100590048(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_100590100(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1005901D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s8MetadataC5InputOMa();
  __chkstk_darwin(v4);
  unsigned int v6 = (uint64_t *)((char *)&v11 - v5);
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  _s8MetadataCMa();
  *unsigned int v6 = v8;
  v6[1] = v7;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = swift_allocObject();
  sub_10058EBA4((uint64_t)v6);
  *a2 = v9;
  return sub_100040D64(v8, v7);
}

uint64_t sub_100590348()
{
  return swift_deallocObject();
}

void sub_100590380()
{
  sub_10058D81C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005903B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100040DBC(a1, a2);
  }
  return a1;
}

uint64_t sub_1005903C4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100040F10(a1, a2);
  }
  return a1;
}

uint64_t sub_1005903D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005901D8(a1, a2);
}

uint64_t static Logger.byoLoggerWith(subsystem:category:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return Logger.init(subsystem:category:)();
}

uint64_t sub_100590474(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EAD0);
}

uint64_t sub_10059048C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EAE8);
}

uint64_t sub_1005904B0(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB00);
}

uint64_t sub_1005904D4(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB18);
}

uint64_t sub_1005904FC(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB30);
}

uint64_t sub_100590520(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB48);
}

uint64_t sub_100590544(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB60);
}

uint64_t sub_100590570(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB78);
}

uint64_t sub_10059059C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EB90);
}

uint64_t sub_1005905C0(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EBA8);
}

uint64_t sub_1005905E4(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EBC0);
}

uint64_t sub_100590608(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EBD8);
}

uint64_t sub_100590624(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EBF0);
}

uint64_t sub_100590650(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC08);
}

uint64_t sub_10059067C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC20);
}

uint64_t sub_1005906A8(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC38);
}

uint64_t sub_1005906D4(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC50);
}

uint64_t sub_100590700(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC68);
}

uint64_t sub_10059072C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC80);
}

uint64_t sub_10059074C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EC98);
}

uint64_t sub_100590774(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ECB0);
}

uint64_t sub_100590798(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ECC8);
}

uint64_t sub_1005907BC(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ECE0);
}

uint64_t sub_1005907E0(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ECF8);
}

uint64_t sub_10059080C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ED10);
}

uint64_t sub_100590830(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ED28);
}

uint64_t sub_10059084C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ED40);
}

uint64_t sub_100590870(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ED58);
}

uint64_t sub_100590888(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ED70);
}

uint64_t sub_1005908B0(uint64_t a1)
{
  return sub_100590940(a1, qword_10083ED88);
}

uint64_t sub_1005908D4(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EDA0);
}

uint64_t sub_1005908F8(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EDB8);
}

uint64_t sub_10059091C(uint64_t a1)
{
  return sub_100590940(a1, qword_10083EDD0);
}

uint64_t sub_100590940(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_100035380(v3, a2);
  sub_100026A54(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.appLoggerWith(category:)()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();

  return Logger.init(subsystem:category:)();
}

uint64_t sub_100590A80(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_100812160);
  v2[4] = swift_task_alloc();
  sub_100010218(&qword_1007FEAE0);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Locale();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v5;
  v2[11] = v4;
  return _swift_task_switch(sub_100590BD4, v5, v4);
}

uint64_t sub_100590BD4()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  sub_10001B220(v0[2], v3, &qword_1007FEAE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[5];
    static Locale.autoupdatingCurrent.getter();
    sub_10001457C(v4, &qword_1007FEAE0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[7] + 32))(v0[8], v0[5], v0[6]);
  }
  uint64_t v5 = v0[4];
  Locale.language.getter();
  uint64_t v6 = type metadata accessor for Locale.Language();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100590D40;
  uint64_t v8 = v0[4];
  return sub_1005946A4(v8);
}

uint64_t sub_100590D40(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 32);
  *(unsigned char *)(*v1 + 104) = a1;
  swift_task_dealloc();
  sub_10001457C(v3, &qword_100812160);
  uint64_t v4 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 80);
  return _swift_task_switch(sub_100590E94, v5, v4);
}

uint64_t sub_100590E94()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 104);
  return v4(v5);
}

void *sub_100590F40()
{
  swift_getKeyPath();
  uint64_t v3 = v0;
  sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1003DBB10(v1, *(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
  return v1;
}

uint64_t sub_100591000(char a1)
{
  *(void *)(v2 + 88) = v1;
  *(unsigned char *)(v2 + 457) = a1;
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v2 + 96) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NWPath.Status();
  *(void *)(v2 + 104) = v3;
  *(void *)(v2 + 112) = *(void *)(v3 - 8);
  *(void *)(v2 + 120) = swift_task_alloc();
  *(void *)(v2 + 128) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for NWPathMonitor.Iterator();
  *(void *)(v2 + 136) = v4;
  *(void *)(v2 + 144) = *(void *)(v4 - 8);
  *(void *)(v2 + 152) = swift_task_alloc();
  sub_100010218(&qword_10080E378);
  *(void *)(v2 + 160) = swift_task_alloc();
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NWPath();
  *(void *)(v2 + 176) = v5;
  *(void *)(v2 + 184) = *(void *)(v5 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  *(void *)(v2 + 208) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  *(void *)(v2 + 216) = v6;
  *(void *)(v2 + 224) = *(void *)(v6 - 8);
  *(void *)(v2 + 232) = swift_task_alloc();
  sub_100010218(&qword_100812160);
  *(void *)(v2 + 240) = swift_task_alloc();
  *(void *)(v2 + 248) = type metadata accessor for MainActor();
  *(void *)(v2 + 256) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 264) = v8;
  *(void *)(v2 + 272) = v7;
  return _swift_task_switch(sub_1005912DC, v8, v7);
}

uint64_t sub_1005912DC()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_getKeyPath();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 280) = OBJC_IVAR____TtC7Journal33SiriSpeechRecognitionAssetManager___observationRegistrar;
  *(void *)(v0 + 288) = sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 296) = v2;
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)(v0 + 304) = v3;
  unsigned int v4 = *(unsigned __int8 *)(v1 + 32);
  if (v4 >> 6)
  {
    if (v4 >> 6 == 1)
    {
      *(void *)(v0 + 80) = v2;
      swift_errorRetain();
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      if (!swift_dynamicCast() || *(unsigned char *)(v0 + 456))
      {
        swift_errorRelease();
        goto LABEL_11;
      }
      swift_release();
      sub_100140A38();
      swift_allocError();
      *unsigned int v13 = 0;
      swift_willThrow();
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int v12 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      if (!(v3 | v2) && v4 == 128)
      {
LABEL_11:
        uint64_t v8 = *(void *)(v0 + 240);
        uint64_t v9 = type metadata accessor for Locale.Language();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
        uint64_t v10 = (void *)swift_task_alloc();
        *(void *)(v0 + 328) = v10;
        *uint64_t v10 = v0;
        v10[1] = sub_100591950;
        uint64_t v11 = *(void *)(v0 + 240);
        return sub_1005946A4(v11);
      }
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int v12 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v12();
  }
  else
  {
    id v5 = (id)v2;
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v6;
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC0D0);
    *uint64_t v6 = v0;
    v6[1] = sub_10059170C;
    return Task.value.getter(v7, v3, (char *)&type metadata for () + 8, v7, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_10059170C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    id v5 = sub_100593160;
  }
  else {
    id v5 = sub_100591848;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100591848()
{
  uint64_t v1 = *(void **)(v0 + 296);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100591950(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 240);
  *(unsigned char *)(*v1 + 458) = a1;
  swift_task_dealloc();
  sub_10001457C(v3, &qword_100812160);
  uint64_t v4 = *(void *)(v2 + 272);
  uint64_t v5 = *(void *)(v2 + 264);
  return _swift_task_switch(sub_100591AA4, v5, v4);
}

uint64_t sub_100591AA4()
{
  if (*(unsigned char *)(v0 + 458) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v1;
    void *v1 = v0;
    v1[1] = sub_100591CF8;
    return sub_10059338C();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 88);
    swift_release();
    sub_100140A38();
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = 0;
    swift_getKeyPath();
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v4;
    *(void *)(v6 + 32) = 0;
    *(unsigned char *)(v6 + 40) = 64;
    *(void *)(v0 + 24) = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_errorRelease();
    swift_release();
    swift_task_dealloc();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_100591CF8(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 459) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  return _swift_task_switch(sub_100591E20, v4, v3);
}

uint64_t sub_100591E20()
{
  if (*(unsigned char *)(v0 + 459))
  {
    uint64_t v1 = *(void *)(v0 + 88);
    swift_release();
    swift_getKeyPath();
    uint64_t v2 = swift_task_alloc();
    *(void *)(v2 + 16) = v1;
    *(_OWORD *)(v2 + 24) = xmmword_1006E3350;
    *(unsigned char *)(v2 + 40) = 0x80;
    *(void *)(v0 + 72) = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
    return v3();
  }
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);
  static Locale.autoupdatingCurrent.getter();
  Locale.collatorIdentifier.getter();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (!v8) {
    goto LABEL_10;
  }
  if (qword_1007F7E08 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100812070;
  id v10 = objc_allocWithZone((Class)SFEntitledAssetConfig);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithLanguage:v11 taskHint:v9];
  *(void *)(v0 + 344) = v12;

  if (!v12)
  {
LABEL_10:
    uint64_t v13 = *(void *)(v0 + 88);
    swift_release();
    sub_100140A38();
    uint64_t v14 = swift_allocError();
    unsigned char *v15 = 0;
    swift_getKeyPath();
    uint64_t v16 = swift_task_alloc();
    *(void *)(v16 + 16) = v13;
    *(void *)(v16 + 24) = v14;
    *(void *)(v16 + 32) = 0;
    *(unsigned char *)(v16 + 40) = 64;
    *(void *)(v0 + 32) = v13;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_errorRelease();
    swift_release();
    swift_task_dealloc();
    swift_allocError();
    *int v17 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_11;
  }
  *(void *)(v0 + 352) = type metadata accessor for NWPathMonitor();
  swift_allocObject();
  *(void *)(v0 + 360) = NWPathMonitor.init()();
  return _swift_task_switch(sub_100592240, 0, 0);
}

uint64_t sub_100592240()
{
  v0[5] = v0[45];
  sub_10059603C(&qword_10080E388, (void (*)(uint64_t))&type metadata accessor for NWPathMonitor);
  swift_retain();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_10059603C(&qword_10080E390, (void (*)(uint64_t))&type metadata accessor for NWPathMonitor.Iterator);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[46] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100592388;
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[17];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_100592388()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[19];
    uint64_t v4 = v2[17];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[18] + 8);
    return v5(v3, v4);
  }
  else
  {
    return _swift_task_switch(sub_1005924C0, 0, 0);
  }
}

uint64_t sub_1005924C0()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[48] = v4;
  v0[49] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[23] + 56))(v0[21], 1, 1, v0[22]);
    uint64_t v5 = v0[33];
    uint64_t v6 = v0[34];
    uint64_t v7 = sub_100592730;
  }
  else
  {
    uint64_t v8 = v0[25];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v0[50] = v9;
    v0[51] = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v9(v8, v3, v1);
    v0[52] = static MainActor.shared.getter();
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v12 = v11;
    uint64_t v7 = sub_100592608;
    uint64_t v5 = v10;
    uint64_t v6 = v12;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100592608()
{
  swift_release();
  return _swift_task_switch(sub_100592670, 0, 0);
}

uint64_t sub_100592670()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[25];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  v1(v4, v2, v3);
  (*(void (**)(void, void, uint64_t, void))(v0[23] + 56))(v0[21], 0, 1, v0[22]);
  uint64_t v5 = v0[33];
  uint64_t v6 = v0[34];
  return _swift_task_switch(sub_100592730, v5, v6);
}

uint64_t sub_100592730()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 384))(v2, 1, v1) == 1)
  {
    sub_10001457C(v2, &qword_10080E378);
LABEL_13:
    if (qword_1007F7DF8 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100026A54(v29, (uint64_t)qword_100812058);
    v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "ASR Model Download: initiating download", v32, 2u);
      swift_slowDealloc();
    }
    v33 = *(void **)(v0 + 344);
    uint64_t v34 = *(void *)(v0 + 88);
    uint64_t v35 = *(void *)(v0 + 96);

    id v36 = [self progressWithTotalUnitCount:100];
    *(void *)(v0 + 424) = v36;
    [v36 setCompletedUnitCount:-1];
    uint64_t v37 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 1, 1, v37);
    swift_retain();
    id v38 = v33;
    id v39 = v36;
    uint64_t v40 = static MainActor.shared.getter();
    v41 = (void *)swift_allocObject();
    v41[2] = v40;
    v41[3] = &protocol witness table for MainActor;
    v41[4] = v34;
    v41[5] = v38;
    v41[6] = v39;
    uint64_t v42 = sub_1005D74B4(v35, (uint64_t)&unk_100812180, (uint64_t)v41);
    *(void *)(v0 + 432) = v42;
    swift_getKeyPath();
    uint64_t v43 = swift_task_alloc();
    *(void *)(v43 + 16) = v34;
    *(void *)(v43 + 24) = v39;
    *(void *)(v43 + 32) = v42;
    *(unsigned char *)(v43 + 40) = 0;
    *(void *)(v0 + 48) = v34;
    id v44 = v39;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
    swift_task_dealloc();
    v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v45;
    uint64_t v46 = sub_100010218((uint64_t *)&unk_1007FC0D0);
    void *v45 = v0;
    v45[1] = sub_100592F08;
    return Task.value.getter(v46, v42, (char *)&type metadata for () + 8, v46, &protocol self-conformance witness table for Error);
  }
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 184) + 32))(*(void *)(v0 + 208), v2, v1);
  NWPath.status.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for NWPath.Status.unsatisfied(_:), v5);
  sub_10059603C(&qword_100806D48, (void (*)(uint64_t))&type metadata accessor for NWPath.Status);
  char v7 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v4, v5);
  v8(v3, v5);
  if (v7)
  {
    v49 = *(void **)(v0 + 344);
    uint64_t v51 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v47 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 88);
    swift_release();
    sub_100140A38();
    uint64_t v11 = swift_allocError();
    unsigned char *v12 = 2;
    swift_getKeyPath();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v11;
    *(void *)(v13 + 32) = 0;
    *(unsigned char *)(v13 + 40) = 64;
    *(void *)(v0 + 64) = v10;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_errorRelease();
    swift_release();
    swift_task_dealloc();
    swift_allocError();
    *uint64_t v14 = 2;
    swift_willThrow();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v51, v47);
  }
  else
  {
    int v17 = *(unsigned __int8 *)(v0 + 457);
    (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 16))(*(void *)(v0 + 192), *(void *)(v0 + 208), *(void *)(v0 + 176));
    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v20 = *(void *)(v0 + 176);
    if (v17 == 1)
    {
      uint64_t v21 = *(void (**)(void, void))(v19 + 8);
      v21(*(void *)(v0 + 192), *(void *)(v0 + 176));
      v21(*(void *)(v0 + 208), *(void *)(v0 + 176));
      goto LABEL_13;
    }
    char v22 = NWPath.isConstrained.getter();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v23(v18, v20);
    if ((v22 & 1) == 0)
    {
      v23(*(void *)(v0 + 208), *(void *)(v0 + 176));
      goto LABEL_13;
    }
    v52 = *(void **)(v0 + 344);
    uint64_t v48 = *(void *)(v0 + 176);
    uint64_t v50 = *(void *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 88);
    swift_release();
    sub_100140A38();
    uint64_t v25 = swift_allocError();
    *uint64_t v26 = 3;
    swift_getKeyPath();
    uint64_t v27 = swift_task_alloc();
    *(void *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = v25;
    *(void *)(v27 + 32) = 0;
    *(unsigned char *)(v27 + 40) = 64;
    *(void *)(v0 + 56) = v24;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_errorRelease();
    swift_release();
    swift_task_dealloc();
    swift_allocError();
    *uint64_t v28 = 3;
    swift_willThrow();
    swift_release();

    v23(v50, v48);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100592F08()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_10059326C;
  }
  else {
    uint64_t v5 = sub_100593044;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100593044()
{
  uint64_t v1 = (void *)v0[53];
  uint64_t v2 = (void *)v0[43];
  swift_release();

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100593160()
{
  uint64_t v1 = *(void **)(v0 + 296);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10059326C()
{
  uint64_t v1 = (void *)v0[53];
  uint64_t v2 = (void *)v0[43];
  swift_release();

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10059338C()
{
  v1[3] = v0;
  sub_100010218(&qword_100812198);
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Locale.Language();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Locale();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[11] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[12] = v5;
  v1[13] = v4;
  return _swift_task_switch(sub_10059350C, v5, v4);
}

uint64_t sub_10059350C()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[4];
  static Locale.autoupdatingCurrent.getter();
  Locale.language.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  Locale.Language.languageCode.getter();
  uint64_t v5 = type metadata accessor for Locale.LanguageCode();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = v0[5];
    sub_10001457C(v0[4], &qword_100812198);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10(0);
  }
  else
  {
    uint64_t v13 = v0[6];
    uint64_t v12 = v0[7];
    uint64_t v14 = v0[4];
    uint64_t v15 = v0[5];
    uint64_t v16 = v0[3];
    v0[14] = Locale.LanguageCode.identifier.getter();
    v0[15] = v17;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    uint64_t v19 = *(void *)(v16 + 40);
    uint64_t v18 = *(void *)(v16 + 48);
    if (qword_1007F7E08 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_100812070;
    char v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 16) + **(int **)(v18 + 16));
    uint64_t v21 = (void *)swift_task_alloc();
    v0[16] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1005937C4;
    return v22(v20, v19, v18);
  }
}

uint64_t sub_1005937C4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  return _swift_task_switch(sub_1005938EC, v4, v3);
}

uint64_t sub_1005938EC()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  swift_release();
  char v4 = sub_100542090(v2, v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = v0[3];
    swift_getKeyPath();
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v5;
    *(_OWORD *)(v6 + 24) = xmmword_1006E3350;
    *(unsigned char *)(v6 + 40) = 0x80;
    v0[2] = v5;
    sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7(v4 & 1);
}

uint64_t sub_100593A80()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100812058);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100812058);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100593B48(uint64_t a1)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1[2] = v1;
  v1[7] = v1 + 15;
  v1[3] = sub_1005965A4;
  uint64_t v4 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_100593C5C;
  v1[13] = &unk_1007B6118;
  v1[14] = v4;
  [ObjCClassFromMetadata supportedLanguagesForTaskHint:a1 completion:v1 + 10];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_100593C5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v1 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return swift_continuation_resume();
}

uint64_t sub_100593CC0(uint64_t a1)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v1[2] = v1;
  v1[7] = v1 + 15;
  v1[3] = sub_100593DD4;
  uint64_t v4 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_100593EC4;
  v1[13] = &unk_1007B6100;
  v1[14] = v4;
  [ObjCClassFromMetadata installedLanguagesForTaskHint:a1 completion:v1 + 10];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_100593DD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 8);
  return v2(v1);
}

uint64_t sub_100593EC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v1 + 64) + 40) = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return swift_continuation_resume();
}

uint64_t sub_100593F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1008121A8 + dword_1008121A8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1001DBEDC;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_10059400C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  NSString v9 = String._bridgeToObjectiveC()();
  v5[18] = v9;
  if (a4)
  {
    v5[14] = a4;
    v5[15] = a5;
    v5[10] = _NSConcreteStackBlock;
    v5[11] = 1107296256;
    v5[12] = sub_100594354;
    v5[13] = &unk_1007B60D8;
    a4 = _Block_copy(v5 + 10);
    swift_retain();
    swift_release();
  }
  v5[19] = a4;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5[2] = v5;
  v5[7] = v5 + 16;
  v5[3] = sub_1005941BC;
  uint64_t v11 = swift_continuation_init();
  v5[10] = _NSConcreteStackBlock;
  v5[11] = 0x40000000;
  v5[12] = sub_1005943B4;
  v5[13] = &unk_1007B60C0;
  v5[14] = v11;
  [ObjCClassFromMetadata fetchAssetWithConfig:a1 clientIdentifier:v9 detailedProgress:a4 completion:v5 + 10];
  return _swift_continuation_await(v5 + 2);
}

uint64_t sub_1005941BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *v0;
  uint64_t v4 = *(const void **)(*v0 + 152);
  uint64_t v5 = *(void **)(*v0 + 144);
  if (*(void *)(v1 + 48))
  {
    swift_willThrow();
    _Block_release(v4);

    uint64_t v6 = *(uint64_t (**)(void))(v3 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v2 + 128);
    uint64_t v9 = *(void *)(v2 + 136);
    _Block_release(*(const void **)(v1 + 152));

    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    return v10(v8, v9);
  }
}

uint64_t sub_100594354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

uint64_t sub_1005943B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

void *sub_100594470@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(a2 + 16) = v6;
  return sub_1003DBB10(v4, v5, v6);
}

uint64_t sub_100594524(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
  swift_getKeyPath();
  sub_1003DBB10(v1, v2, v3);
  sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1003DBB6C(v1, v2, v3);
  return swift_release();
}

uint64_t sub_100594624()
{
  unint64_t v0 = sub_100596244();
  type metadata accessor for SiriSpeechRecognitionAssetManager();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0x80;
  uint64_t result = ObservationRegistrar.init()();
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 48) = &off_1007B5F90;
  qword_10083EDE8 = v1;
  return result;
}

void sub_100594694()
{
  qword_100812070 = 1009;
}

uint64_t sub_1005946A4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_100812198);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Locale();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_100010218(&qword_100812160);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Locale.Language();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[12] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[13] = v6;
  v2[14] = v5;
  return _swift_task_switch(sub_100594854, v6, v5);
}

uint64_t sub_100594854()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  sub_10001B220(v0[2], v3, &qword_100812160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v5 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[6];
    static Locale.autoupdatingCurrent.getter();
    Locale.language.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    sub_10001457C(v4, &qword_100812160);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[10] + 32))(v0[11], v0[8], v0[9]);
  }
  uint64_t v8 = v0[4];
  Locale.Language.languageCode.getter();
  uint64_t v9 = type metadata accessor for Locale.LanguageCode();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v11 = v0[11];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[10];
    sub_10001457C(v0[4], &qword_100812198);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
  else
  {
    uint64_t v17 = v0[3];
    uint64_t v16 = v0[4];
    v0[15] = Locale.LanguageCode.identifier.getter();
    v0[16] = v18;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v16, v9);
    uint64_t v20 = *(void *)(v17 + 40);
    uint64_t v19 = *(void *)(v17 + 48);
    if (qword_1007F7E08 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_100812070;
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 8) + **(int **)(v19 + 8));
    char v22 = (void *)swift_task_alloc();
    v0[17] = v22;
    *char v22 = v0;
    v22[1] = sub_100594B60;
    return v23(v21, v20, v19);
  }
}

uint64_t sub_100594B60(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  return _swift_task_switch(sub_100594C88, v4, v3);
}

uint64_t sub_100594C88()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  swift_release();
  char v7 = sub_100018958(v3, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8(v7 & 1);
}

uint64_t sub_100594D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  type metadata accessor for MainActor();
  v6[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[10] = v8;
  v6[11] = v7;
  return _swift_task_switch(sub_100594E08, v8, v7);
}

uint64_t sub_100594E08()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v0[6];
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v5 = swift_allocObject();
  v0[12] = v5;
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v2;
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  id v6 = v1;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100594F78;
  uint64_t v8 = v0[7];
  return v10(v8, 0xD000000000000011, 0x80000001006876D0, sub_1005960C4, v5, v4, v3);
}

uint64_t sub_100594F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100595364;
  }
  else
  {
    swift_release();
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100595098;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100595098()
{
  uint64_t v13 = v0;
  swift_release();
  if (qword_1007F7DF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100812058);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 120);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 40) = sub_10011EA98(v6, v5, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "ASR Model Download: downloaded model to %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void *)(v0 + 48);
  [*(id *)(v0 + 64) setCompletedUnitCount:100];
  swift_getKeyPath();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v8;
  *(_OWORD *)(v9 + 24) = xmmword_1006E3350;
  *(unsigned char *)(v9 + 40) = 0x80;
  *(void *)(v0 + 32) = v8;
  sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100595364()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[6];
  swift_release();
  swift_release();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 64;
  v0[2] = v2;
  swift_errorRetain();
  sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_errorRelease();
  swift_release();
  swift_task_dealloc();
  if (qword_1007F7DF8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_100812058);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "ASR Model Download: Failed to download asset: %@", v7, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100595648(uint64_t a1, char a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7DF8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100026A54(v11, (uint64_t)qword_100812058);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134218240;
    uint64_t v21 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 1024;
    v20[1] = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "ASR Model Download asset progress: %ld stalled: %{BOOL}d", (uint8_t *)v14, 0x12u);
    swift_slowDealloc();
  }

  if (a1 <= 0) {
    uint64_t v15 = -1;
  }
  else {
    uint64_t v15 = a1;
  }
  [a3 setCompletedUnitCount:v15];
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  *(void *)(v18 + 32) = a4;
  *(unsigned char *)(v18 + 40) = a2 & 1;
  sub_100328A60((uint64_t)v10, (uint64_t)&unk_100812190, v18);
  return swift_release();
}

uint64_t sub_1005958A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 40) = a5;
  *(void *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 32) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10059593C, v7, v6);
}

uint64_t sub_10059593C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v1;
  sub_10059603C(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unsigned int v2 = *(unsigned __int8 *)(v1 + 32);
  if (v2 <= 0x3F)
  {
    int v3 = *(unsigned __int8 *)(v0 + 40);
    if (((((v2 & 1) == 0) ^ v3) & 1) == 0)
    {
      uint64_t v5 = *(void **)(v1 + 16);
      uint64_t v4 = *(void *)(v1 + 24);
      uint64_t v6 = *(void *)(v0 + 24);
      swift_getKeyPath();
      uint64_t v7 = swift_task_alloc();
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = v5;
      *(void *)(v7 + 32) = v4;
      *(unsigned char *)(v7 + 40) = v3;
      *(void *)(v0 + 16) = v6;
      sub_1003DBB10(v5, v4, v2);
      id v8 = v5;
      swift_retain();
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release_n();
      swift_release();
      swift_task_dealloc();
    }
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100595B04()
{
  sub_1003DBB6C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal33SiriSpeechRecognitionAssetManager___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100595BB0()
{
  return type metadata accessor for SiriSpeechRecognitionAssetManager();
}

uint64_t type metadata accessor for SiriSpeechRecognitionAssetManager()
{
  uint64_t result = qword_1008120C0;
  if (!qword_1008120C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100595C04()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *destroy for SiriSpeechRecognitionAssetManager.State(uint64_t a1)
{
  return sub_1003DBB6C(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7Journal33SiriSpeechRecognitionAssetManagerC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1003DBB10(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SiriSpeechRecognitionAssetManager.State(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1003DBB10(*(void **)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1003DBB6C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SiriSpeechRecognitionAssetManager.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1003DBB6C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriSpeechRecognitionAssetManager.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) | (4
                                              * ((*(void *)(a1 + 8) >> 57) & 0x78 | *(void *)(a1 + 8) & 7 | (((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F) << 7)))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SiriSpeechRecognitionAssetManager.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 16382;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(unsigned char *)(result + 16) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_100595E8C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100595EAC(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_100595EBC(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 16) & 1 | ((_BYTE)a2 << 6);
    *(void *)(result + 8) &= 0xFFFFFFFFFFFFFF8uLL;
    *(unsigned char *)(result + 16) = v2;
  }
  else
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSpeechRecognitionAssetManager.State()
{
  return &type metadata for SiriSpeechRecognitionAssetManager.State;
}

void *sub_100595F0C()
{
  return sub_1005961D0();
}

uint64_t sub_100595F24()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100595F74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10002C194;
  return sub_100594D6C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10059603C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100596084()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005960C4(uint64_t a1, char a2)
{
  return sub_100595648(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1005960CC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10059610C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1005958A0(a1, v4, v5, v6, v7);
}

void *sub_1005961D0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void **)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  unsigned __int8 v6 = *(unsigned char *)(v0 + 40);
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v3;
  unsigned __int8 v7 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = v6;
  sub_1003DBB10(v1, v3, v6);
  return sub_1003DBB6C(v4, v5, v7);
}

uint64_t sub_10059622C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10059623C()
{
  return swift_release();
}

unint64_t sub_100596244()
{
  unint64_t result = qword_1008121B0;
  if (!qword_1008121B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1008121B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SiriSpeechRecognitionAssetManager.AssetError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100596350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSpeechRecognitionAssetManager.AssetError()
{
  return &type metadata for SiriSpeechRecognitionAssetManager.AssetError;
}

uint64_t destroy for SiriSpeechRecognitionAssetManager.DownloadTask(id *a1)
{
  return swift_release();
}

uint64_t _s7Journal33SiriSpeechRecognitionAssetManagerC12DownloadTaskVwCP_0(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SiriSpeechRecognitionAssetManager.DownloadTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SiriSpeechRecognitionAssetManager.DownloadTask(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriSpeechRecognitionAssetManager.DownloadTask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriSpeechRecognitionAssetManager.DownloadTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriSpeechRecognitionAssetManager.DownloadTask()
{
  return &type metadata for SiriSpeechRecognitionAssetManager.DownloadTask;
}

unint64_t sub_100596550()
{
  unint64_t result = qword_1008121B8;
  if (!qword_1008121B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008121B8);
  }
  return result;
}

uint64_t sub_1005965A8(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_100596720, 0, 0);
}

uint64_t sub_100596720()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 64);
  static Date.timeIntervalSinceReferenceDate.getter();
  double v6 = v5;
  *(double *)(v0 + 128) = v5;
  id v7 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  *(void *)(v0 + 136) = v7;
  uint64_t v8 = v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_10023D7D4(v8, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3))
  {
    sub_1000ADA74(*(void *)(v0 + 120));
    sub_1002E00EC();
    swift_allocError();
    *uint64_t v9 = 0;
LABEL_15:
    swift_willThrow();

    sub_100597C8C(v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v103 = *(uint64_t (**)(void))(v0 + 8);
    return v103();
  }
  v108 = v7;
  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v16 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v10, v13);
  sub_1000ADA74(v10);
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v19 = v18;
  uint64_t v107 = v17;
  *(void *)(v0 + 144) = v17;
  *(void *)(v0 + 152) = v18;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  uint64_t v20 = self;
  id v21 = [v20 defaultManager];
  sub_100479098(v15);
  URL._bridgeToObjectiveC()(v22);
  uint64_t v24 = v23;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v25(v15, v16);
  *(void *)(v0 + 40) = 0;
  LODWORD(v16) = [v21 createDirectoryAtURL:v24 withIntermediateDirectories:1 attributes:0 error:v0 + 40];

  id v26 = *(id *)(v0 + 40);
  if (!v16)
  {
    v101 = v26;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

LABEL_14:
    id v7 = v108;
    goto LABEL_15;
  }
  uint64_t v27 = *(void *)(v0 + 88);
  uint64_t v28 = *(void *)(v0 + 72);
  id v29 = [v20 defaultManager];
  sub_100478818(v27);
  URL._bridgeToObjectiveC()(v30);
  v32 = v31;
  v25(v27, v28);
  *(void *)(v0 + 48) = 0;
  unsigned int v33 = [v29 createDirectoryAtURL:v32 withIntermediateDirectories:1 attributes:0 error:v0 + 48];

  id v34 = *(id *)(v0 + 48);
  if (!v33)
  {
    v102 = v34;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    goto LABEL_14;
  }
  uint64_t v104 = *(void *)(v0 + 64);
  v35._countAndFlagsBits = v107;
  v35._object = v19;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 8995;
  v36._object = (void *)0xE200000000000000;
  String.append(_:)(v36);
  id v37 = objc_allocWithZone((Class)NSAttributedString);
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v39 = [v37 initWithString:v38];

  [v108 appendAttributedString:v39];
  v40._countAndFlagsBits = v107;
  v40._object = v19;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 8995;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  id v42 = objc_allocWithZone((Class)NSAttributedString);
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v44 = [v42 initWithString:v43];

  [v108 appendAttributedString:v44];
  if (*(unsigned char *)(v104 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) == 1)
  {
    v45._countAndFlagsBits = v107;
    v45._object = v19;
    String.append(_:)(v45);
    v46._countAndFlagsBits = 8995;
    v46._object = (void *)0xE200000000000000;
    String.append(_:)(v46);
    id v47 = objc_allocWithZone((Class)NSAttributedString);
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v49 = [v47 initWithString:v48];

    [v108 appendAttributedString:v49];
  }
  uint64_t v105 = *(void *)(v0 + 64);
  v50._countAndFlagsBits = v107;
  v50._object = v19;
  String.append(_:)(v50);
  v51._countAndFlagsBits = 8995;
  v51._object = (void *)0xE200000000000000;
  String.append(_:)(v51);
  id v52 = objc_allocWithZone((Class)NSAttributedString);
  NSString v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v54 = [v52 initWithString:v53];

  [v108 appendAttributedString:v54];
  v55._countAndFlagsBits = v107;
  v55._object = v19;
  String.append(_:)(v55);
  v56._countAndFlagsBits = 8995;
  v56._object = (void *)0xE200000000000000;
  String.append(_:)(v56);
  id v57 = objc_allocWithZone((Class)NSAttributedString);
  NSString v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v59 = [v57 initWithString:v58];

  [v108 appendAttributedString:v59];
  v60._countAndFlagsBits = v107;
  v60._object = v19;
  String.append(_:)(v60);
  v61._countAndFlagsBits = 8995;
  v61._object = (void *)0xE200000000000000;
  String.append(_:)(v61);
  id v62 = objc_allocWithZone((Class)NSAttributedString);
  NSString v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v64 = [v62 initWithString:v63];

  [v108 appendAttributedString:v64];
  v65 = *(void **)(v105 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (v65)
  {
    id v106 = v65;
    v66 = (void *)sub_1005A818C(v106, 14.0);
    v67._countAndFlagsBits = v107;
    v67._object = v19;
    String.append(_:)(v67);
    v68._countAndFlagsBits = 8995;
    v68._object = (void *)0xE200000000000000;
    String.append(_:)(v68);
    id v69 = objc_allocWithZone((Class)NSAttributedString);
    NSString v70 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v71 = [v69 initWithString:v70];

    [v108 appendAttributedString:v71];
    id v72 = objc_allocWithZone((Class)NSAttributedString);
    NSString v73 = String._bridgeToObjectiveC()();
    id v74 = [v72 initWithString:v73];

    [v108 appendAttributedString:v74];
    [v108 appendAttributedString:v66];
    id v75 = objc_allocWithZone((Class)NSAttributedString);
    NSString v76 = String._bridgeToObjectiveC()();
    id v77 = [v75 initWithString:v76];

    [v108 appendAttributedString:v77];
    v78._countAndFlagsBits = v107;
    v78._object = v19;
    String.append(_:)(v78);
    v79._countAndFlagsBits = 8995;
    v79._object = (void *)0xE200000000000000;
    String.append(_:)(v79);
    id v80 = objc_allocWithZone((Class)NSAttributedString);
    NSString v81 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v82 = [v80 initWithString:v81];

    [v108 appendAttributedString:v82];
  }
  v83._countAndFlagsBits = v107;
  v83._object = v19;
  String.append(_:)(v83);
  v84._countAndFlagsBits = 8995;
  v84._object = (void *)0xE200000000000000;
  String.append(_:)(v84);
  id v85 = objc_allocWithZone((Class)NSAttributedString);
  NSString v86 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v87 = [v85 initWithString:v86];

  [v108 appendAttributedString:v87];
  id v88 = v108;
  unint64_t v89 = sub_100397014((uint64_t)_swiftEmptyArrayStorage);
  v90._countAndFlagsBits = v107;
  v90._object = v19;
  String.append(_:)(v90);
  v91._countAndFlagsBits = 8995;
  v91._object = (void *)0xE200000000000000;
  String.append(_:)(v91);
  unint64_t v92 = sub_100597E90();
  uint64_t v94 = v93;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(v92, v94, 0xD000000000000013, 0x80000001006A6B40, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 160) = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v96._countAndFlagsBits = v107;
  v96._object = v19;
  String.append(_:)(v96);
  v97._countAndFlagsBits = 8995;
  v97._object = (void *)0xE200000000000000;
  String.append(_:)(v97);
  *(void *)(v0 + 168) = 0xD000000000000018;
  *(void *)(v0 + 176) = 0x80000001006A6BE0;
  v98 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v98;
  void *v98 = v0;
  v98[1] = sub_100597294;
  uint64_t v99 = *(void *)(v0 + 56);
  return sub_10059A8F4(v99);
}

uint64_t sub_100597294(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005973C0, 0, 0);
}

uint64_t sub_1005973C0()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  double v6 = *(void **)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 144);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(v2, v1, v4, v3, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 208) = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = v7;
  v9._object = v6;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 8995;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  *(void *)(v0 + 216) = 0xD000000000000016;
  *(void *)(v0 + 224) = 0x80000001006A6B80;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 232) = v11;
  *(void *)uint64_t v11 = v0;
  *(void *)(v11 + 8) = sub_100597544;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v0 + 56);
  return _swift_task_switch(sub_10059817C, 0, 0);
}

uint64_t sub_100597544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100597670, 0, 0);
}

uint64_t sub_100597670()
{
  uint64_t v2 = *((void *)v0 + 30);
  uint64_t v1 = *((void *)v0 + 31);
  uint64_t v4 = *((void *)v0 + 27);
  uint64_t v3 = *((void *)v0 + 28);
  uint64_t v5 = *((void *)v0 + 26);
  uint64_t v7 = *((void *)v0 + 18);
  double v6 = (void *)*((void *)v0 + 19);
  uint64_t v8 = *((void *)v0 + 8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(v2, v1, v4, v3, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = v7;
  v10._object = v6;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8995;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  uint64_t v12 = sub_100598970();
  uint64_t v14 = v13;
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C((uint64_t)v12, v14, 0xD000000000000017, 0x80000001006A6B60, v15);
  uint64_t v16 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = v7;
  v17._object = v6;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 8995;
  v18._object = (void *)0xE200000000000000;
  String.append(_:)(v18);
  uint64_t v19 = *(void **)(v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  uint64_t v20 = 0xE000000000000000;
  if (v19)
  {
    id v21 = v19;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    id v22 = [v21 string];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    v26._countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    v27._countAndFlagsBits = 0x3E7669642F3CLL;
    v27._object = (void *)0xE600000000000000;
    String.append(_:)(v27);

    uint64_t v28 = 0xD000000000000017;
    uint64_t v20 = 0x80000001006A6C80;
  }
  else
  {
    uint64_t v28 = 0;
  }
  uint64_t v30 = *((void *)v0 + 18);
  id v29 = (void *)*((void *)v0 + 19);
  os_log_type_t v31 = (void *)*((void *)v0 + 17);
  double v32 = v0[16];
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(v28, v20, 0xD000000000000012, 0x80000001006A6BA0, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = v30;
  v34._object = v29;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 8995;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(0xD000000000000016, 0x80000001006A6C20, 0xD00000000000001FLL, 0x80000001006A6C00, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = v30;
  v37._object = v29;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 8995;
  v38._object = (void *)0xE200000000000000;
  String.append(_:)(v38);
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(0x3E7669642F3CLL, 0xE600000000000000, 0xD00000000000001FLL, 0x80000001006A6C40, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = v30;
  v40._object = v29;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 8995;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(0xD00000000000001BLL, 0x80000001006A6C60, 0xD00000000000001FLL, 0x80000001006A6B20, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = v30;
  v43._object = v29;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 8995;
  v44._object = (void *)0xE200000000000000;
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  char v45 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059932C(0x3E7669642F3CLL, 0xE600000000000000, 0xD00000000000001FLL, 0x80000001006A6BC0, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100597C8C(v32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v46 = (uint64_t (*)(uint64_t, uint64_t))*((void *)v0 + 1);
  uint64_t v47 = *((void *)v0 + 17);
  return v46(v47, v16);
}

uint64_t sub_100597B98()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008121C0);
  sub_100026A54(v0, (uint64_t)qword_1008121C0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

void sub_100597C8C(double a1)
{
  if (qword_1007F7E10 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_1008121C0);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v5 + 56) = &type metadata for Double;
    *(void *)(v5 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v5 + 32) = Current - a1;
    uint64_t v7 = String.init(format:_:)();
    sub_10011EA98(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "EntryViewModel.buildExportPackage executed in %ss", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

unint64_t sub_100597E90()
{
  uint64_t v20 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v1 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  os_log_type_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v4 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  double v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD00000000000001CLL;
  unint64_t v24 = 0x80000001006A6D40;
  uint64_t v11 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  static Date.FormatStyle.DateStyle.complete.getter();
  static Date.FormatStyle.TimeStyle.omitted.getter();
  uint64_t v12 = Date.formatted(date:time:)();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v20);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x3E7669642F3CLL;
  v16._object = (void *)0xE600000000000000;
  String.append(_:)(v16);
  return v23;
}

uint64_t sub_10059815C(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return _swift_task_switch(sub_10059817C, 0, 0);
}

uint64_t sub_10059817C()
{
  v0[2] = 0;
  uint64_t v1 = v0[5];
  v0[3] = 0xE000000000000000;
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  v0[6] = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = result;
    v0[7] = result;
    if (result)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
      }
      else
      {
        v0[8] = 0;
        uint64_t v5 = v0[6];
        if ((v5 & 0xC000000000000001) != 0) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v5 + 32);
        }
        v0[9] = v6;
        uint64_t v7 = (void *)swift_task_alloc();
        v0[10] = v7;
        *uint64_t v7 = v0;
        v7[1] = sub_100598368;
        uint64_t v8 = v0[4];
        return sub_1003875DC(v8);
      }
      return result;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    v0[7] = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x3E7669642F3CLL;
  v10._object = (void *)0xE600000000000000;
  String.append(_:)(v10);
  uint64_t v11 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
  return v11(0xD00000000000001BLL, 0x80000001006A6CE0);
}

uint64_t sub_100598368(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 88) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_100598640;
  }
  else
  {
    *(void *)(v6 + 96) = a2;
    *(void *)(v6 + 104) = a1;
    uint64_t v7 = sub_10059849C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10059849C()
{
  v1._countAndFlagsBits = *(void *)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 72);
  v1._object = *(void **)(v0 + 96);
  String.append(_:)(v1);
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v0 + 64) + 1;
  if (v3 == *(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(void **)(v0 + 24);
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    v6._countAndFlagsBits = v4;
    v6._object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = 0x3E7669642F3CLL;
    v7._object = (void *)0xE600000000000000;
    String.append(_:)(v7);
    uint64_t v8 = *(uint64_t (**)(unint64_t, unint64_t))(v0 + 8);
    return v8(0xD00000000000001BLL, 0x80000001006A6CE0);
  }
  else
  {
    *(void *)(v0 + 64) = v3;
    uint64_t v10 = *(void *)(v0 + 48);
    if ((v10 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v10 + 8 * v3 + 32);
    }
    *(void *)(v0 + 72) = v11;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v12;
    void *v12 = v0;
    v12[1] = sub_100598368;
    uint64_t v13 = *(void *)(v0 + 32);
    return sub_1003875DC(v13);
  }
}

uint64_t sub_100598640()
{
  if (qword_1007F7E10 != -1) {
    swift_once();
  }
  Swift::String v1 = (void *)v0[9];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_1008121C0);
  id v3 = v1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[9];
  if (v7)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    *(void *)(v9 + 4) = v8;
    *uint64_t v10 = v8;

    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v9 + 14) = v11;
    v10[1] = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "getHTMLAssetGrid error creating HTML export for %@ %@", (uint8_t *)v9, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v8 = v5;
  }
  swift_errorRelease();

  uint64_t v12 = v0[8] + 1;
  if (v12 == v0[7])
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v0[2];
    uint64_t v14 = (void *)v0[3];
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0x3E7669642F3CLL;
    v16._object = (void *)0xE600000000000000;
    String.append(_:)(v16);
    Swift::String v17 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
    return v17(0xD00000000000001BLL, 0x80000001006A6CE0);
  }
  else
  {
    v0[8] = v12;
    uint64_t v19 = v0[6];
    if ((v19 & 0xC000000000000001) != 0) {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v20 = *(id *)(v19 + 8 * v12 + 32);
    }
    v0[9] = v20;
    uint64_t v21 = (void *)swift_task_alloc();
    v0[10] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_100598368;
    uint64_t v22 = v0[4];
    return sub_1003875DC(v22);
  }
}

void *sub_100598970()
{
  uint64_t result = (void *)sub_100339674();
  if (result)
  {
    sub_10033AA5C(result);
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 string];
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_type_t v6 = v5;

      _StringGuts.grow(_:)(60);
      v7._object = (void *)0x80000001006A6CA0;
      v7._countAndFlagsBits = 0xD000000000000030;
      String.append(_:)(v7);
      v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 15906;
      v9._object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      v10._countAndFlagsBits = v4;
      v10._object = v6;
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = 0x3E7669642F3CLL;
      v11._object = (void *)0xE600000000000000;
      String.append(_:)(v11);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100598AB0(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for URL();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_100598B70, 0, 0);
}

uint64_t sub_100598B70()
{
  if (qword_1007F6D18 != -1) {
    swift_once();
  }
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_100806810 + dword_100806810);
  Swift::String v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_100598C48;
  return v3();
}

uint64_t sub_100598C48(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100598D48, 0, 0);
}

uint64_t sub_100598D48()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void **)(v0 + 56);
  unint64_t v2 = 0xE000000000000000;
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v7 = sub_100478A6C(v3, *(UIImage **)(v0 + 56), 0xD000000000000010, 0x80000001006A6D20);
    Swift::String v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "<img src=\"../");
    HIWORD(v20[1]) = -4864;
    Swift::String v10 = (uint64_t *)(v6 + *(int *)(type metadata accessor for ExportOptions() + 36));
    uint64_t v11 = *v10;
    uint64_t v12 = (void *)v10[1];
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 47;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = v7;
    v15._object = v9;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 4075298;
    v16._object = (void *)0xE300000000000000;
    String.append(_:)(v16);

    uint64_t v17 = v20[0];
    unint64_t v2 = v20[1];
  }
  else
  {
    uint64_t v17 = 0;
  }
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v18(v17, v2);
}

_OWORD *sub_100598EE8(_OWORD *a1, void *a2, char a3)
{
  return sub_100598F90(a1, a2, a3, (uint64_t (*)(void *))sub_10001B6A4, (void (*)(void))sub_100548CF4, (void (*)(void))sub_100543F18, type metadata accessor for AttributeName);
}

_OWORD *sub_100598F3C(_OWORD *a1, void *a2, char a3)
{
  return sub_100598F90(a1, a2, a3, (uint64_t (*)(void *))sub_10001B6A4, (void (*)(void))sub_100548D00, (void (*)(void))sub_100543F24, type metadata accessor for TraitKey);
}

_OWORD *sub_100598F90(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), void (*a6)(void), void (*a7)(void))
{
  uint64_t v12 = (void **)v7;
  Swift::String v15 = (void *)*v7;
  unint64_t v17 = a4(a2);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a3 & 1) == 0)
  {
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    uint64_t v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      unint64_t v17 = v26;
      uint64_t v23 = *v12;
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a7(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v23 = *v12;
  if (v21)
  {
LABEL_8:
    unint64_t v24 = (_OWORD *)(v23[7] + 32 * v17);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v24);
    return sub_10002102C(a1, v24);
  }
LABEL_13:
  sub_10059A550(v17, (uint64_t)a2, a1, v23);

  return a2;
}

_OWORD *sub_100599110(_OWORD *a1, void *a2, char a3)
{
  return sub_100598F90(a1, a2, a3, (uint64_t (*)(void *))sub_10001B6A4, (void (*)(void))sub_100548D0C, (void (*)(void))sub_100544268, type metadata accessor for Key);
}

_OWORD *sub_100599164(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  Swift::String v10 = (void *)*v4;
  unint64_t v12 = sub_10001B5D0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100548ED8();
      goto LABEL_7;
    }
    sub_1005445A4(v15, a4 & 1);
    unint64_t v21 = sub_10001B5D0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    BOOL v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v19);
    return sub_10002102C(a1, v19);
  }
LABEL_13:
  sub_10059A5B8(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1005992B8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100599BF4(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10001B8AC, (uint64_t (*)(void))sub_1005490C0, (void (*)(void))sub_1005448A4);
}

void sub_100599300(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_10059932C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10001B5D0(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1005490D8();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_100544E20(v17, a5 & 1);
  unint64_t v23 = sub_10001B5D0(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;

  return swift_bridgeObjectRetain();
}

id sub_1005994B4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10001B9E8((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100549294();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_release();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100545148(v12, a3 & 1);
  unint64_t v18 = sub_10001B9E8((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_10001B284(0, (unint64_t *)&qword_100800A40);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

uint64_t sub_100599628(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10001BA38(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100549440();
    goto LABEL_7;
  }
  sub_100545420(result, a3 & 1);
  uint64_t result = sub_10001BA38(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10059A624(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1005997C4(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10001B77C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1005496D4();
      goto LABEL_7;
    }
    sub_100545844(v13, a3 & 1);
    unint64_t v24 = sub_10001B77C(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = type metadata accessor for AttributedString();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:

  return sub_10059A6DC(v10, a2, a1, v16);
}

uint64_t sub_10059992C(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10001B77C(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100549960();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_100545B04(result, a4 & 1);
  uint64_t result = sub_10001B77C(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100599A6C(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10001BD0C(a3, a4);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_10054A684();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = (double *)(v18[6] + 16 * v12);
    *uint64_t v22 = a3;
    v22[1] = a4;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_10054700C(v15, a2 & 1);
  uint64_t v20 = sub_10001BD0C(a3, a4);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CGSize(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_100599BAC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100599BF4(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10001B77C, (uint64_t (*)(void))sub_10054A82C, (void (*)(void))sub_100547308);
}

uint64_t sub_100599BF4(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void), void (*a6)(void))
{
  uint64_t v10 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = a4(a2);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a3 & 1) == 0)
  {
    uint64_t result = a5();
LABEL_7:
    uint64_t v22 = (void *)*v10;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    *(unsigned char *)(v22[6] + v16) = a2;
    *(void *)(v22[7] + 8 * v16) = a1;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      v22[2] = v27;
      return result;
    }
    goto LABEL_14;
  }
  a6();
  uint64_t result = a4(a2);
  if ((v20 & 1) == (v24 & 1))
  {
    unint64_t v16 = result;
    uint64_t v22 = (void *)*v10;
    if (v20) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100599D58(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10001BDC8(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10054A9D4();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1005474EC(v13, a3 & 1);
  unint64_t v18 = sub_10001BDC8(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_100599E90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_100599EE8(a1, a2, a3, a4, (void (*)(void))sub_10054AB78, (void (*)(void))sub_1005477B8);
}

uint64_t sub_100599EBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_100599EE8(a1, a2, a3, a4, (void (*)(void))sub_10054AB84, (void (*)(void))sub_1005477C4);
}

uint64_t sub_100599EE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  char v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_10001B5D0(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    uint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v25 = sub_10001B5D0(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a2;
  v27[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v30;

  return swift_bridgeObjectRetain();
}

void sub_10059A074(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_10059A0A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  char v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_10001B5D0(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    uint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];

      *(void *)(v23 + 8 * v16) = a1;
      return;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v24 = sub_10001B5D0(a2, a3);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  uint64_t v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  char v26 = (uint64_t *)(v22[6] + 16 * v16);
  *char v26 = a2;
  v26[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v27 = v22[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v29;

  swift_bridgeObjectRetain();
}

id sub_10059A22C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_10001BE38((uint64_t)a3);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_10054AEF8();
LABEL_7:
    uint64_t v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      BOOL v18 = (void *)(v17[7] + 16 * v11);
      swift_bridgeObjectRelease();
      id result = (id)swift_bridgeObjectRelease();
      *BOOL v18 = a1;
      v18[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_100547DFC(v14, a4 & 1);
  unint64_t v20 = sub_10001BE38((uint64_t)a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_10001B284(0, (unint64_t *)&qword_1007F9110);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  *(void *)(v17[6] + 8 * v11) = a3;
  uint64_t v22 = (void *)(v17[7] + 16 * v11);
  *uint64_t v22 = a1;
  v22[1] = a2;
  uint64_t v23 = v17[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17[2] = v25;

  return a3;
}

void sub_10059A3B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10001B5D0(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10054B0C4();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;

      *(void *)uint64_t v21 = a1;
      *(unsigned char *)(v21 + 8) = a2 & 1;
      return;
    }
    goto LABEL_11;
  }
  sub_1005480DC(v17, a5 & 1);
  unint64_t v22 = sub_10001B5D0(a3, a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v24 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v24 = a3;
  v24[1] = a4;
  uint64_t v25 = v20[7] + 16 * v14;
  *(void *)uint64_t v25 = a1;
  *(unsigned char *)(v25 + 8) = a2 & 1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v28;

  swift_bridgeObjectRetain();
}

_OWORD *sub_10059A550(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  id result = sub_10002102C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_10059A5B8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  id result = sub_10002102C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_10059A624(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_10059A6DC(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for AttributedString();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_10059A788(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_10059A7D0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_10059A808(a1, a2, a3, a4, _s4YearVMa, _s4YearVMa);
}

uint64_t sub_10059A7EC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_10059A808(a1, a2, a3, a4, _s5MonthVMa, _s5MonthVMa);
}

uint64_t sub_10059A808(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_10059ABB4(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_10059A8B0(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_10059A8F4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10059A988;
  return sub_100598AB0(a1);
}

uint64_t sub_10059A988(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10059AA88, 0, 0);
}

uint64_t sub_10059AA88()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (void *)v0[4];
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  if (qword_1007F78A0 != -1) {
    swift_once();
  }
  Swift::String v4 = (Swift::String)xmmword_10083E2E8;
  swift_bridgeObjectRetain();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x3E7669642F3CLL;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  uint64_t v6 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
  return v6(0xD00000000000001DLL, 0x80000001006A6D00);
}

uint64_t sub_10059ABB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10059AC20()
{
  unint64_t result = qword_100812210;
  if (!qword_100812210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812210);
  }
  return result;
}

uint64_t sub_10059AC74()
{
  return sub_10059BDDC(&qword_1007FF468, (void (*)(uint64_t))type metadata accessor for JournalEntity);
}

uint64_t sub_10059ACBC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008121F8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008121F8);
  if (qword_1007F7DD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED88);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10059AD84()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100035380(v6, qword_10083EDF0);
  sub_100026A54(v6, (uint64_t)qword_10083EDF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10059AF64(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  sub_100010218(&qword_1007FA1D0);
  v2[5] = swift_task_alloc();
  type metadata accessor for JournalEntity();
  v2[6] = swift_task_alloc();
  v2[7] = type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10059B05C, v4, v3);
}

uint64_t sub_10059B05C()
{
  swift_release();
  if (qword_1007F6DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D360;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    v0[2] = v3;
    char v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(ObjectType);
    swift_unknownObjectRelease();
    if (v6)
    {
      sub_10008A900();
      swift_allocError();
      *uint64_t v7 = 4;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v8 = (uint64_t (*)(void))v0[1];
      goto LABEL_20;
    }
  }
  uint64_t v9 = v0[6];
  IntentParameter.wrappedValue.getter();
  uint64_t v10 = sub_100135968();
  sub_10034E5D4(v9);
  if (!v10)
  {
    if (qword_1007F7E18 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100026A54(v23, (uint64_t)qword_1008121F8);
    BOOL v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "OpenEntryIntent.perform, unable to get viewModel from target", v26, 2u);
      swift_slowDealloc();
    }

    goto LABEL_19;
  }
  id v11 = [self sharedApplication];
  id v12 = [v11 connectedScenes];
  sub_10008A864();
  sub_10059BDDC(&qword_100804000, (void (*)(uint64_t))sub_10008A864);
  uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  BOOL v14 = (void *)sub_1003F1F90(v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      BOOL v16 = (void *)v15;

      if ([v16 delegate])
      {
        type metadata accessor for SceneDelegate();
        uint64_t v17 = swift_dynamicCastClass();
        if (v17)
        {
          uint64_t v18 = v17;
          uint64_t v19 = v0[5];
          uint64_t v20 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
          swift_unknownObjectRetain();
          swift_retain();
          uint64_t v21 = static MainActor.shared.getter();
          unint64_t v22 = (void *)swift_allocObject();
          v22[2] = v21;
          v22[3] = &protocol witness table for MainActor;
          v22[4] = v18;
          v22[5] = v10;
          sub_100328A8C(v19, (uint64_t)&unk_100812240, (uint64_t)v22);
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();

          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_release();
      }
      goto LABEL_19;
    }
  }
  swift_release();
LABEL_19:
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
LABEL_20:
  return v8();
}

uint64_t sub_10059B4AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JournalEntity();
  __chkstk_darwin(v2 - 8);
  sub_10034E570(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10034E5D4(a1);
}

unint64_t sub_10059B544()
{
  unint64_t result = qword_100812218;
  if (!qword_100812218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812218);
  }
  return result;
}

unint64_t sub_10059B59C()
{
  unint64_t result = qword_100812220;
  if (!qword_100812220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812220);
  }
  return result;
}

uint64_t sub_10059B5F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10059B60C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10059B65C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1007F7E20 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100026A54(v2, (uint64_t)qword_10083EDF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10059B704(uint64_t a1)
{
  unint64_t v2 = sub_10059BF2C();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10059B744(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002C194;
  return sub_10059AF64(a1, v4);
}

uint64_t sub_10059B7E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10059B858();
  *a1 = result;
  return result;
}

uint64_t sub_10059B80C(uint64_t a1)
{
  unint64_t v2 = sub_10034E630();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenEntryEntityIntent()
{
  return &type metadata for OpenEntryEntityIntent;
}

uint64_t sub_10059B858()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  os_log_type_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100010218(&qword_100809200);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_100010218(&qword_10080E348);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FF580);
  __chkstk_darwin(v8 - 8);
  uint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_100010218(&qword_100812230);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for JournalEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_10059BDDC(&qword_1007FF3F8, (void (*)(uint64_t))type metadata accessor for JournalEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_10059BDDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10059BE24()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10059BE6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10002C194;
  return sub_100356628(a1, v4, v5, v7, v6);
}

unint64_t sub_10059BF2C()
{
  unint64_t result = qword_100812248;
  if (!qword_100812248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812248);
  }
  return result;
}

uint64_t sub_10059BF80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10059CB00();
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v6;
  swift_release();
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_1008123B8, (uint64_t)v8);
  uint64_t result = swift_release();
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset);
  if (v10)
  {
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v12 = (uint64_t (**)())(v10 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    void *v12 = sub_1005A409C;
    v12[1] = (uint64_t (*)())v11;
    return sub_10001ABB8(v13);
  }
  return result;
}

uint64_t sub_10059C134()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10059CB00();
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v9 = static MainActor.shared.getter();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    v10[4] = v8;
    swift_release();
    sub_100328A60((uint64_t)v2, (uint64_t)&unk_1008123C0, (uint64_t)v10);

    return swift_release();
  }
  return result;
}

id sub_10059C2E8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_labelTextProvider;
  type metadata accessor for WorkoutActivityGridView.LabelTextProvider();
  uint64_t v15 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v15[14] = 0;
  v15[15] = 0;
  v15[16] = 0;
  *(void *)&v11[v14] = v15;
  *(void *)&v11[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset] = 0;
  uint64_t v16 = &v11[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v16[32] = 1;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for WorkoutActivityGridView();
  id v17 = [super initWithFrame:a1, a2, a3, a4];
  sub_10059C490();

  return v17;
}

id sub_10059C490()
{
  uint64_t v1 = v0;
  [v0 setAccessibilityIgnoresInvertColors:1];
  uint64_t v2 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView]];
  id v3 = *(id *)&v1[v2];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  id v4 = sub_10059C668((uint64_t)v1, (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge);
  uint64_t v5 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel];
  *(void *)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel] = v4;

  [v1 addSubview:*(void *)&v1[v5]];
  id v7 = sub_10059C8B4((uint64_t)v1, (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge);
  uint64_t v8 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel];
  *(void *)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel] = v7;

  [v1 addSubview:*(void *)&v1[v8]];
  uint64_t v10 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView]];
  [*(id *)&v1[v5] setAlpha:0.0];
  [*(id *)&v1[v8] setAlpha:0.0];
  [*(id *)&v1[v10] setAlpha:0.0];
  id v11 = *(id *)&v1[v5];

  id v12 = *(id *)&v1[v10];
  id v13 = *(id *)&v1[v8];

  uint64_t v14 = *(void **)&v1[v10];

  return [v14 setContentMode:1];
}

id sub_10059C668(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  switch(*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    default:
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v5)
      {
LABEL_7:
        if (qword_1007F7268 != -1) {
          swift_once();
        }
        uint64_t v6 = &qword_10083D830;
      }
      else
      {
        if (qword_1007F72C0 != -1) {
          swift_once();
        }
        uint64_t v6 = &qword_10083D888;
      }
      [v4 setFont:*v6];
      id v7 = [self whiteColor];
      [v4 setTextColor:v7];

      [v4 setTextAlignment:0];
      [v4 setLineBreakMode:4];
      [v4 setAdjustsFontForContentSizeCategory:1];
      [v4 setMaximumContentSizeCategory:a2];
      return v4;
  }
}

id sub_10059C8B4(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  switch(*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    default:
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v5)
      {
LABEL_7:
        if (qword_1007F7218 != -1) {
          swift_once();
        }
        uint64_t v6 = &qword_10083D7E0;
      }
      else
      {
        if (qword_1007F72B0 != -1) {
          swift_once();
        }
        uint64_t v6 = &qword_10083D878;
      }
      [v4 setFont:*v6];
      id v7 = [self whiteColor];
      [v4 setTextColor:v7];

      [v4 setLineBreakMode:4];
      [v4 setTextAlignment:0];
      [v4 setAdjustsFontForContentSizeCategory:1];
      [v4 setMaximumContentSizeCategory:a2];
      return v4;
  }
}

void sub_10059CB00()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v7 = (char *)&v21 - v6;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset);
  if (v8)
  {
    id v22 = v8;
    Date.init()();
    uint64_t v9 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      default:
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v10)
        {
LABEL_8:
          if (qword_1007F6A60 != -1) {
            swift_once();
          }
          id v11 = &qword_10083CF68;
        }
        else
        {
          if (qword_1007F6A58 != -1) {
            swift_once();
          }
          id v11 = &qword_10083CF60;
        }
        id v12 = (void *)*v11;
        uint64_t v13 = *(unsigned __int8 *)(v0 + v9);
        uint64_t v14 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
        unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v14;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v16 + v15, v4, v1);
        id v17 = self;
        id v18 = v12;
        swift_retain();
        id v19 = [v17 currentTraitCollection];
        uint64_t v20 = v22;
        sub_10017D574(v13, 0, 1, v18, v19, (uint64_t)sub_1005A3DF0, v16);

        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
        swift_release();
        break;
    }
  }
}

uint64_t sub_10059CE94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v24 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  id v17 = v23;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
  aBlock[4] = sub_1005A3F38;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B63B0;
  id v18 = _Block_copy(aBlock);
  id v19 = v17;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = (void *)v24;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  swift_release();
  return swift_release();
}

void sub_10059D26C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v34 - v16;
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v19 = Strong;
    if (a2)
    {
      Swift::String v35 = v8;
      uint64_t v36 = a3;
      Swift::String v34 = v11;
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      *(void *)(v21 + 24) = a2;
      uint64_t v37 = v21;
      char v22 = 1;
      switch(v19[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
      {
        case 5:
          break;
        default:
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
          break;
      }
      id v25 = a2;
      swift_retain_n();
      id v26 = v25;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v17, v36, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
      if ((v22 & 1) == 0)
      {
        sub_10001B220((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_1007FC470);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
        {
          sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
LABEL_15:
          static Animation.easeIn(duration:)();
          sub_10001B284(0, (unint64_t *)&qword_100802730);
          static UIView.animate(_:changes:completion:)();
          swift_release();
          goto LABEL_16;
        }
        uint64_t v27 = v34;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v34, v14, v5);
        uint64_t v28 = v35;
        static Date.now.getter();
        Date.timeIntervalSince(_:)();
        double v30 = v29;
        os_log_type_t v31 = *(void (**)(char *, uint64_t))(v6 + 8);
        v31(v28, v5);
        v31(v27, v5);
        if (v30 >= 0.1) {
          goto LABEL_15;
        }
      }
      sub_10059D7C8(v20, (uint64_t)v26);
LABEL_16:
      swift_release();
      swift_release();

      sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
      swift_release();
      char v32 = v19[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
      v19[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
      if ((v32 & 1) != 0 || !swift_unknownObjectWeakLoadStrong())
      {
      }
      else
      {
        uint64_t v33 = v19;
        sub_100491AF4();
        swift_unknownObjectRelease();

        id v19 = v26;
      }
      goto LABEL_20;
    }
  }
  swift_beginAccess();
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (!v23) {
    return;
  }
  id v19 = (unsigned char *)v23;
  char v24 = *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
  *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
  if ((v24 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
  {
    sub_100491AF4();
    swift_unknownObjectRelease();
  }
LABEL_20:
}

void sub_10059D7C8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setHidden:1];
    uint64_t v5 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
    [*(id *)&v4[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView] setAlpha:1.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel] setAlpha:1.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel] setAlpha:1.0];
    [*(id *)&v4[v5] setAlpha:1.0];
    [*(id *)&v4[v5] setImage:a2];
    uint64_t v6 = self;
    uint64_t v7 = v4;
    id v8 = [v6 blackColor];
    [v7 setBackgroundColor:v8];
  }
}

uint64_t sub_10059D904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  sub_100010218(&qword_1007F9EB0);
  v4[6] = swift_task_alloc();
  uint64_t v5 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v7;
  v4[12] = v6;
  return _swift_task_switch(sub_10059DA28, v7, v6);
}

uint64_t sub_10059DA28()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(char **)(Strong + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset);
    v0[14] = v3;
    if (v3)
    {
      uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling16WorkoutIconAsset_metadata];
      v0[15] = v4;
      if (v4)
      {
        uint64_t v5 = v3;
        swift_retain();
        return _swift_task_switch(sub_10059DB94, 0, 0);
      }
      (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
      uint64_t v6 = v0[6];
      swift_release();

      sub_10001457C(v6, &qword_1007F9EB0);
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10059DB94()
{
  sub_10003B3B4(v0[6]);
  swift_release();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  return _swift_task_switch(sub_10059DC04, v1, v2);
}

uint64_t sub_10059DC04()
{
  uint64_t v1 = v0[6];
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v0[8] + 48))(v1, 1, v0[7]);
  uint64_t v3 = (void *)v0[13];
  if (v2 == 1)
  {

    uint64_t v4 = (void *)v0[14];
    uint64_t v5 = v0[6];
    swift_release();

    sub_10001457C(v5, &qword_1007F9EB0);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    sub_10030A5FC(v1, v0[9]);
    uint64_t v8 = qword_1007F7990;
    id v9 = v3;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)v0[13];
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 setAccessibilityLabel:v11];

    id v12 = v10;
    sub_100466228();
    if (v13)
    {
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v14 = 0;
    }
    uint64_t v15 = (char *)v0[13];
    [v15 setAccessibilityValue:v14];

    v0[16] = *(void *)&v15[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_labelTextProvider];
    swift_retain();
    uint64_t v16 = (void *)swift_task_alloc();
    v0[17] = v16;
    void *v16 = v0;
    v16[1] = sub_10059DE14;
    uint64_t v17 = v0[9];
    return sub_1005A11F4(v17);
  }
}

uint64_t sub_10059DE14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 144) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10059DF70;
  return sub_1005A0ED0();
}

uint64_t sub_10059DF70()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_10059E090, v3, v2);
}

uint64_t sub_10059E090()
{
  uint64_t v2 = (void *)v0[13];
  uint64_t v1 = (void *)v0[14];
  uint64_t v3 = v0[9];
  swift_release();

  sub_10048D358(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10059E120()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v4) + 0x58);
  uint64_t v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v7 = v4;
  v5(7, v6);

  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  NSString v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  swift_release();
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100807C78, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10059E2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_10059E374, v6, v5);
}

uint64_t sub_10059E374()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    sub_10059CB00();
    uint64_t v3 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
    v0[10] = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
    id v4 = *(id *)(v2 + v3);
    UIView.removeAllConstraints()();

    uint64_t v5 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
    v0[11] = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
    id v6 = *(id *)(v2 + v5);
    UIView.removeAllConstraints()();

    uint64_t v7 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
    v0[12] = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
    id v8 = *(id *)(v2 + v7);
    UIView.removeAllConstraints()();

    uint64_t v9 = (void *)swift_task_alloc();
    v0[13] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10059E4D4;
    return sub_1005A0ED0();
  }
  else
  {
    swift_release();
    NSString v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_10059E4D4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10059E5F4, v3, v2);
}

uint64_t sub_10059E5F4()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  [*(id *)(v3 + v1) setMaximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  [*(id *)(v3 + v2) setMaximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
  [*(id *)(v3 + v1) setAdjustsFontForContentSizeCategory:1];
  [*(id *)(v3 + v2) setAdjustsFontForContentSizeCategory:1];
  switch(*(unsigned char *)(v3 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 2:
      sub_10059F940();
      break;
    case 3:
      sub_10059E7C8();
      break;
    case 4:
      uint64_t v4 = v0[11];
      uint64_t v5 = v0[12];
      uint64_t v6 = v0[9];
      [*(id *)(v6 + v0[10]) setHidden:1];
      [*(id *)(v6 + v4) setHidden:1];
      id v7 = *(id *)(v6 + v5);
      sub_1001DCF60(8.0);

      swift_bridgeObjectRelease();
      break;
    case 5:
      sub_1005A01DC();
      break;
    default:
      sub_10059F074();
      break;
  }
  uint64_t v9 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v10 = (char *)v0[9];
  uint64_t v11 = v0[10];
  [v10 layoutIfNeeded];
  [*(id *)&v10[v11] layoutIfNeeded];
  [*(id *)&v10[v9] layoutIfNeeded];
  [*(id *)&v10[v8] layoutIfNeeded];

  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

id sub_10059E7C8()
{
  uint64_t v1 = v0;
  uint64_t v65 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel] setHidden:0];
  uint64_t v2 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel] setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  id v4 = *(id *)&v0[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView];
  id v5 = [v4 superview];
  if (v5)
  {
    uint64_t v6 = v5;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v4 leadingAnchor];
    id v8 = [v6 leadingAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    [v9 setConstant:8.0];
    if (v9)
    {
      id v9 = v9;
      [v9 setActive:1];

      id v4 = v9;
    }
  }
  else
  {
    id v9 = 0;
    uint64_t v6 = v4;
  }

  id v10 = *(id *)&v1[v3];
  id v11 = [v10 superview];
  if (v11)
  {
    uint64_t v12 = v11;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v10 topAnchor];
    id v14 = [v12 topAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:8.0];
    if (v15)
    {
      id v15 = v15;
      [v15 setActive:1];

      id v10 = v15;
    }
  }
  else
  {
    id v15 = 0;
    uint64_t v12 = v10;
  }

  id v16 = *(id *)&v1[v3];
  [v1 frame];
  double v18 = v17 + -16.0;
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v19 = [v16 widthAnchor];
  id v20 = [v19 constraintEqualToConstant:v18];

  [v20 setActive:1];
  id v21 = *(id *)&v1[v3];
  id v22 = sub_1001DD438(0, 1, 8.0);

  uint64_t v23 = *(void **)&v1[v3];
  id v24 = *(id *)&v1[v65];
  id v25 = v23;
  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v26 = [v24 leadingAnchor];
  id v27 = [v25 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  [v28 setConstant:8.0];
  [v28 setActive:1];

  id v29 = [*(id *)&v1[v65] bottomAnchor];
  id v30 = [*(id *)&v1[v3] centerYAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  [v31 setActive:1];
  id v32 = *(id *)&v1[v65];
  id v33 = [v32 superview];
  if (v33)
  {
    Swift::String v34 = v33;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v35 = [v32 trailingAnchor];
    id v36 = [v34 trailingAnchor];
    id v37 = [v35 constraintLessThanOrEqualToAnchor:v36];

    [v37 setConstant:-8.0];
    if (v37)
    {
      id v37 = v37;
      [v37 setActive:1];

      id v32 = v37;
    }
  }
  else
  {
    id v37 = 0;
    Swift::String v34 = v32;
  }

  [*(id *)&v1[v65] setTextAlignment:0];
  id v38 = *(id *)&v1[v65];
  id v39 = [v38 superview];
  if (v39)
  {
    Swift::String v40 = v39;
    [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v38 topAnchor];
    id v42 = [v40 topAnchor];
    id v43 = [v41 constraintGreaterThanOrEqualToAnchor:v42];

    [v43 setConstant:8.0];
    if (v43)
    {
      id v43 = v43;
      [v43 setActive:1];

      id v38 = v43;
    }
  }
  else
  {
    id v43 = 0;
    Swift::String v40 = v38;
  }

  Swift::String v44 = *(void **)&v1[v3];
  id v45 = *(id *)&v1[v2];
  id v46 = v44;
  [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v47 = [v45 leadingAnchor];
  id v48 = [v46 trailingAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  [v49 setConstant:8.0];
  [v49 setActive:1];

  id v50 = [*(id *)&v1[v2] topAnchor];
  id v51 = [*(id *)&v1[v3] centerYAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  [v52 setActive:1];
  id v53 = *(id *)&v1[v2];
  id v54 = [v53 superview];
  if (v54)
  {
    Swift::String v55 = v54;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v56 = [v53 trailingAnchor];
    id v57 = [v55 trailingAnchor];
    id v58 = [v56 constraintLessThanOrEqualToAnchor:v57];

    [v58 setConstant:-8.0];
    if (v58)
    {
      id v58 = v58;
      [v58 setActive:1];

      id v53 = v58;
    }
    id v59 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v58 = 0;
    Swift::String v55 = v53;
    id v59 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v60 = *(id *)&v1[v2];
  id v61 = sub_1001DD438(2, 1, 8.0);

  id v62 = *(void **)&v1[v2];
  NSString v63 = v59[133];

  return [v62 v63];
}

id sub_10059F074()
{
  uint64_t v1 = v0;
  uint64_t v70 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setHidden:0];
  uint64_t v68 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:0];
  uint64_t v2 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView);
  id v4 = [v3 superview];
  if (v4)
  {
    id v5 = v4;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v3 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:8.0];
    if (v8)
    {
      id v8 = v8;
      [v8 setActive:1];

      id v3 = v8;
    }
  }
  else
  {
    id v8 = 0;
    id v5 = v3;
  }

  id v9 = *(id *)(v1 + v2);
  id v10 = [v9 superview];
  if (v10)
  {
    id v11 = v10;
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v9 topAnchor];
    id v13 = [v11 topAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:8.0];
    if (v14)
    {
      id v14 = v14;
      [v14 setActive:1];

      id v9 = v14;
    }
  }
  else
  {
    id v14 = 0;
    id v11 = v9;
  }

  id v15 = *(id *)(v1 + v2);
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v15 heightAnchor];
  id v17 = [v15 widthAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 multiplier:1.0];

  [v18 setActive:1];
  id v19 = *(id *)(v1 + v2);
  id v20 = sub_1001DD438(0, 1, 8.0);

  id v21 = *(void **)(v1 + v2);
  id v22 = *(id *)(v1 + v70);
  id v23 = v21;
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v24 = [v22 leadingAnchor];
  id v25 = [v23 trailingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  [v26 setConstant:12.0];
  [v26 setActive:1];

  id v27 = [*(id *)(v1 + v70) bottomAnchor];
  uint64_t v69 = v2;
  id v28 = [*(id *)(v1 + v2) centerYAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  [v29 setActive:1];
  id v30 = *(id *)(v1 + v70);
  id v31 = [v30 superview];
  if (v31)
  {
    id v32 = v31;
    uint64_t v33 = v1;
    [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v34 = [v30 trailingAnchor];
    id v35 = [v32 trailingAnchor];
    id v36 = [v34 constraintLessThanOrEqualToAnchor:v35];

    [v36 setConstant:-12.0];
    if (v36)
    {
      id v36 = v36;
      [v36 setActive:1];

      id v30 = v36;
    }
    uint64_t v37 = v68;
    id v38 = &stru_1007D7000;
  }
  else
  {
    uint64_t v33 = v1;
    id v36 = 0;
    id v32 = v30;
    uint64_t v37 = v68;
    id v38 = &stru_1007D7000;
  }

  [*(id *)(v33 + v70) setTextAlignment:0];
  uint64_t v39 = v33;
  id v40 = *(id *)(v33 + v37);
  id v41 = [v40 superview];
  if (v41)
  {
    id v42 = v41;
    id v43 = v38;
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v44 = [v40 topAnchor];
    id v45 = [v42 topAnchor];
    id v46 = [v44 constraintGreaterThanOrEqualToAnchor:v45];

    [v46 setConstant:12.0];
    if (v46)
    {
      id v46 = v46;
      [v46 setActive:1];

      id v40 = v46;
    }
    id v38 = v43;
  }
  else
  {
    id v46 = 0;
    id v42 = v40;
  }

  id v47 = *(void **)(v39 + v69);
  id v48 = *(id *)(v39 + v37);
  id v49 = v47;
  [v48 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v50 = [v48 v38[79].name];
  id v51 = [v49 trailingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  [v52 setConstant:12.0];
  [v52 setActive:1];

  id v53 = [*(id *)(v39 + v37) topAnchor];
  id v54 = [*(id *)(v39 + v69) centerYAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  [v55 setActive:1];
  id v56 = *(id *)(v39 + v37);
  id v57 = [v56 superview];
  if (v57)
  {
    id v58 = v57;
    [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v59 = [v56 trailingAnchor];
    id v60 = [v58 trailingAnchor];
    id v61 = [v59 constraintLessThanOrEqualToAnchor:v60];

    [v61 setConstant:-12.0];
    if (v61)
    {
      id v61 = v61;
      [v61 setActive:1];

      id v56 = v61;
    }
    id v62 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v61 = 0;
    id v58 = v56;
    id v62 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v63 = *(id *)(v39 + v37);
  id v64 = sub_1001DD438(2, 1, 8.0);

  uint64_t v65 = *(void **)(v39 + v37);
  v66 = v62[133];

  return [v65 v66];
}

void sub_10059F940()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:0];
  id v61 = (char *)v3;
  [*(id *)(v0 + v3) setTextAlignment:1];
  [*(id *)(v0 + v2) setTextAlignment:1];
  id v4 = *(id *)(v0 + v2);
  id v5 = [v4 superview];
  if (v5)
  {
    id v6 = v5;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v4 topAnchor];
    id v8 = [v6 topAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    [v9 setConstant:12.0];
    if (v9)
    {
      id v9 = v9;
      [v9 setActive:1];

      id v4 = v9;
    }
  }
  else
  {
    id v9 = 0;
    id v6 = v4;
  }

  id v10 = *(id *)(v1 + v2);
  id v11 = [v10 superview];
  if (v11)
  {
    id v12 = v11;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v10 leadingAnchor];
    id v14 = [v12 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:8.0];
    if (v15)
    {
      id v15 = v15;
      [v15 setActive:1];

      id v10 = v15;
    }
  }
  else
  {
    id v15 = 0;
    id v12 = v10;
  }

  id v16 = *(id *)(v1 + v2);
  id v17 = [v16 superview];
  if (v17)
  {
    id v18 = v17;
    [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v16 trailingAnchor];
    id v20 = [v18 trailingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:-8.0];
    if (v21)
    {
      id v21 = v21;
      [v21 setActive:1];

      id v16 = v21;
    }
  }
  else
  {
    id v21 = 0;
    id v18 = v16;
  }

  id v22 = *(id *)&v61[v1];
  id v23 = sub_1001DD438(0, 1, 12.0);

  id v24 = *(id *)&v61[v1];
  id v25 = [v24 superview];
  if (v25)
  {
    id v26 = v25;
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v27 = [v24 leadingAnchor];
    id v28 = [v26 leadingAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:12.0];
    if (v29)
    {
      id v29 = v29;
      [v29 setActive:1];

      id v24 = v29;
    }
  }
  else
  {
    id v29 = 0;
    id v26 = v24;
  }

  id v30 = *(id *)&v61[v1];
  id v31 = [v30 superview];
  if (v31)
  {
    id v32 = v31;
    [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v33 = [v30 trailingAnchor];
    id v34 = [v32 trailingAnchor];
    id v35 = [v33 constraintEqualToAnchor:v34];

    [v35 setConstant:-12.0];
    if (v35)
    {
      id v35 = v35;
      [v35 setActive:1];

      id v30 = v35;
    }
  }
  else
  {
    id v35 = 0;
    id v32 = v30;
  }

  uint64_t v36 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  uint64_t v37 = *(void **)(v1 + v2);
  id v38 = *(id *)(v1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView);
  id v39 = v37;
  [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v40 = [v38 topAnchor];
  id v41 = [v39 bottomAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  [v42 setConstant:5.0];
  [v42 setActive:1];

  id v43 = *(void **)&v61[v1];
  id v44 = *(id *)(v1 + v36);
  id v45 = v43;
  [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v46 = [v44 bottomAnchor];
  id v47 = [v45 topAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  [v48 setConstant:-5.0];
  [v48 setActive:1];

  id v49 = *(id *)(v1 + v36);
  id v50 = [v49 superview];
  if (v50)
  {
    id v51 = v50;
    [v49 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v52 = [v49 leadingAnchor];
    id v53 = [v51 leadingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    [v54 setConstant:12.0];
    if (v54)
    {
      id v54 = v54;
      [v54 setActive:1];

      id v49 = v54;
    }
  }
  else
  {
    id v54 = 0;
    id v51 = v49;
  }

  id v55 = *(id *)(v1 + v36);
  id v56 = [v55 superview];
  if (v56)
  {
    id v57 = v56;
    [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v58 = [v55 trailingAnchor];
    id v59 = [v57 trailingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    [v60 setConstant:-12.0];
    if (v60)
    {
      id v62 = v60;
      [v62 setActive:1];

      id v55 = v62;
    }
    else
    {
      id v62 = 0;
    }
  }
  else
  {
    id v62 = 0;
    id v57 = v55;
  }
}

void sub_1005A01DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:0];
  uint64_t v4 = qword_1007F7268;
  id v5 = *(id *)(v0 + v2);
  if (v4 != -1) {
    swift_once();
  }
  [v5 setFont:qword_10083D830];

  id v6 = *(id *)(v1 + v2);
  id v7 = [v6 superview];
  id v8 = &stru_1007D7000;
  if (v7)
  {
    id v9 = v7;
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v6 topAnchor];
    id v11 = [v9 topAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:25.0];
    if (v12)
    {
      id v12 = v12;
      [v12 setActive:1];

      id v6 = v12;
    }

    id v8 = &stru_1007D7000;
  }
  else
  {
    id v12 = 0;
    id v9 = v6;
  }

  id v13 = *(id *)(v1 + v2);
  id v14 = [v13 superview];
  if (v14)
  {
    id v15 = v14;
    [v13 v8[96].name];
    id v16 = [v13 leadingAnchor];
    id v17 = [v15 leadingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:20.0];
    if (v18)
    {
      id v18 = v18;
      [v18 setActive:1];

      id v13 = v18;
    }

    id v8 = &stru_1007D7000;
  }
  else
  {
    id v18 = 0;
    id v15 = v13;
  }

  id v19 = *(id *)(v1 + v2);
  id v20 = [v19 superview];
  if (v20)
  {
    id v21 = v20;
    [v19 v8[96].name];
    id v22 = [v19 trailingAnchor];
    id v23 = [v21 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:-20.0];
    if (v24)
    {
      id v24 = v24;
      [v24 setActive:1];

      id v19 = v24;
    }

    id v8 = &stru_1007D7000;
  }
  else
  {
    id v24 = 0;
    id v21 = v19;
  }

  [*(id *)(v1 + v2) setTextAlignment:1];
  id v25 = *(id *)(v1 + v3);
  id v26 = sub_1001DD438(0, 1, 25.0);

  id v27 = *(id *)(v1 + v3);
  id v28 = [v27 superview];
  if (v28)
  {
    id v29 = v28;
    [v27 v8[96].name];
    id v30 = [v27 leadingAnchor];
    id v31 = [v29 leadingAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    [v32 setConstant:20.0];
    if (v32)
    {
      id v32 = v32;
      [v32 setActive:1];

      id v27 = v32;
    }

    id v8 = &stru_1007D7000;
  }
  else
  {
    id v32 = 0;
    id v29 = v27;
  }

  id v33 = *(id *)(v1 + v3);
  id v34 = [v33 superview];
  if (v34)
  {
    id v35 = v34;
    [v33 v8[96].name];
    id v36 = [v33 trailingAnchor];
    id v37 = [v35 trailingAnchor];
    id v38 = [v36 constraintEqualToAnchor:v37];

    [v38 setConstant:-20.0];
    if (v38)
    {
      id v38 = v38;
      [v38 setActive:1];

      id v33 = v38;
    }

    id v8 = &stru_1007D7000;
  }
  else
  {
    id v38 = 0;
    id v35 = v33;
  }

  [*(id *)(v1 + v3) setTextAlignment:1];
  uint64_t v39 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  id v40 = *(id *)(v1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView);
  id v41 = [v40 superview];
  if (v41)
  {
    id v42 = v41;
    [v40 v8[96].name];
    id v43 = [v40 leadingAnchor];
    id v44 = [v42 leadingAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    [v45 setConstant:20.0];
    if (v45)
    {
      id v45 = v45;
      [v45 setActive:1];

      id v40 = v45;
    }

    id v8 = &stru_1007D7000;
  }
  else
  {
    id v45 = 0;
    id v42 = v40;
  }

  id v46 = *(void **)(v1 + v2);
  id v47 = *(id *)(v1 + v39);
  id v48 = v46;
  [v47 v8[96].name];
  id v49 = [v47 topAnchor];
  id v50 = v8;
  id v51 = [v48 bottomAnchor];
  id v52 = [v49 constraintEqualToAnchor:v51];

  [v52 setConstant:15.0];
  [v52 setActive:1];

  id v53 = *(id *)(v1 + v39);
  id v54 = [v53 superview];
  if (v54)
  {
    id v55 = v54;
    [v53 v50[96].name];
    id v56 = [v53 trailingAnchor];
    id v57 = [v55 trailingAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57];

    [v58 setConstant:-20.0];
    if (v58)
    {
      id v58 = v58;
      [v58 setActive:1];

      id v53 = v58;
    }
    uint64_t v59 = v3;
    id v60 = &stru_1007D7000;
  }
  else
  {
    id v58 = 0;
    id v55 = v53;
    uint64_t v59 = v3;
    id v60 = &stru_1007D7000;
  }

  id v61 = *(void **)(v1 + v59);
  id v62 = *(id *)(v1 + v39);
  id v66 = v61;
  [v62 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v63 = [v62 v60[66].name];
  id v64 = [v66 topAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  [v65 setConstant:-15.0];
  [v65 setActive:1];
}

id sub_1005A0ADC(uint64_t a1, double a2)
{
  [*(id *)(a1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setAlpha:];
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel);

  return [v4 setAlpha:a2];
}

uint64_t sub_1005A0B44(void *a1)
{
  if (!a1)
  {
    id v13 = *(void **)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView];
    id v14 = (double *)&v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame];
    if (v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame + 32])
    {
      [v13 frame];
      double v16 = v15;
      double v18 = v17;
      double v20 = v19;
      double v22 = v21;
    }
    else
    {
      double v20 = v14[2];
      double v22 = v14[3];
      double v16 = *v14;
      double v18 = v14[1];
      id v23 = v13;
    }
    [v13 setFrame:v16, v18, v20, v22];

    id v12 = 0;
    goto LABEL_8;
  }
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1005A3CF4;
  *(void *)(v5 + 24) = v4;
  v25[4] = sub_10001AC84;
  v25[5] = v5;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  v25[2] = sub_1003F44E4;
  v25[3] = &unk_1007B6338;
  id v6 = _Block_copy(v25);
  id v7 = a1;
  id v8 = v1;
  swift_retain();
  swift_release();
  [(id)v3 performWithoutAnimation:v6];
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v3 & 1) == 0)
  {
    id v10 = *(void **)&v7[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView];
    id v11 = *(id *)&v8[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView];
    [v10 frame];
    [v11 setFrame:];

    id v12 = sub_1005A3CF4;
LABEL_8:
    id v24 = &v1[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame];
    *(_OWORD *)id v24 = 0u;
    *((_OWORD *)v24 + 1) = 0u;
    v24[32] = 1;
    return sub_10001ABB8((uint64_t)v12);
  }
  __break(1u);
  return result;
}

void sub_1005A0DC4(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  id v3 = *(id *)(a1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView);
  UIView.removeAllConstraints()();

  uint64_t v4 = *(void **)(a1 + v2);
  uint64_t v5 = (double *)(a1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame);
  id v15 = v4;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame + 32))
  {
    [v4 frame];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
  }
  else
  {
    double v11 = v5[2];
    double v13 = v5[3];
    double v7 = *v5;
    double v9 = v5[1];
    id v14 = v4;
  }
  [v15 setFrame:v7, v9, v11, v13];
}

void *sub_1005A0EA0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset);
  id v2 = v1;
  return v1;
}

uint64_t sub_1005A0ED0()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for AttributedString();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  sub_100010218(&qword_1007FE5B8);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v4;
  v1[11] = v3;
  return _swift_task_switch(sub_1005A1014, v4, v3);
}

uint64_t sub_1005A1014()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel);
  v0[12] = v2;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_labelTextProvider);
  v0[13] = v3;
  id v4 = v2;
  return _swift_task_switch(sub_1005A10A0, v3, 0);
}

uint64_t sub_1005A10A0()
{
  uint64_t v1 = v0[13];
  v0[14] = *(void *)(v1 + 112);
  v0[15] = *(void *)(v1 + 120);
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1005A1128, v2, v3);
}

uint64_t sub_1005A1128()
{
  if (v0[15])
  {
    NSString v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v1 = 0;
  }
  uint64_t v3 = (void *)v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[2];
  [v3 setText:v1];

  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel);
  v0[16] = v5;
  id v6 = v5;
  return _swift_task_switch(sub_100106AE8, v2, 0);
}

uint64_t sub_1005A11F4(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[13] = swift_task_alloc();
  sub_100010218(&qword_100805980);
  v2[14] = swift_task_alloc();
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080E900);
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v4 = sub_100010218(&qword_1007FE5A0);
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v5 = sub_100010218((uint64_t *)&unk_10080E910);
  v2[21] = v5;
  v2[22] = *(void *)(v5 - 8);
  v2[23] = swift_task_alloc();
  uint64_t v6 = sub_100010218(&qword_1007FE5A8);
  v2[24] = v6;
  v2[25] = *(void *)(v6 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  return _swift_task_switch(sub_1005A149C, v1, 0);
}

uint64_t sub_1005A149C()
{
  uint64_t v1 = *(int **)(v0 + 80);
  uint64_t v2 = *(uint64_t **)(v0 + 64);
  uint64_t v3 = (uint64_t *)((char *)v2 + v1[11]);
  unint64_t v4 = v3[1];
  if (v4)
  {
    uint64_t v5 = *v3;
    unint64_t v6 = v4;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  *(void *)(v0 + 240) = v5;
  *(void *)(v0 + 248) = v6;
  double v7 = (char *)v2 + v1[12];
  if (v7[8])
  {
    uint64_t countAndFlagsBits = *v2;
    double v9 = (void *)v2[1];
    if (v9)
    {
      swift_bridgeObjectRetain();
      object = v9;
    }
    else
    {
      id v31 = self;
      swift_bridgeObjectRetain();
      id v32 = [v31 mainBundle];
      v83._object = (void *)0x800000010069E300;
      v33._uint64_t countAndFlagsBits = 0x74756F6B726F57;
      v33._object = (void *)0xE700000000000000;
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v83._uint64_t countAndFlagsBits = 0xD000000000000018;
      Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)(unint64_t)countAndFlagsBits, (NSBundle)v32, v34, v83);
      uint64_t countAndFlagsBits = v35._countAndFlagsBits;
      object = v35._object;

      uint64_t v1 = *(int **)(v0 + 80);
      uint64_t v2 = *(uint64_t **)(v0 + 64);
    }
    uint64_t v36 = *(void *)(v0 + 216);
    uint64_t v80 = *(void *)(v0 + 208);
    uint64_t v38 = *(void *)(v0 + 192);
    uint64_t v37 = *(void *)(v0 + 200);
    uint64_t v39 = *(void *)(v0 + 72);
    *(void *)(v39 + 112) = countAndFlagsBits;
    *(void *)(v39 + 120) = object;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v40 = [self kilocalories];
    sub_10001B284(0, (unint64_t *)&qword_10080E920);
    Measurement.init(value:unit:)();
    id v41 = (uint64_t *)((char *)v2 + v1[10]);
    uint64_t v25 = *v41;
    id v24 = (void *)v41[1];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v80, v36, v38);
    uint64_t v42 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 208);
    uint64_t v44 = *(void *)(v0 + 192);
    if (v24)
    {
      id v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      swift_bridgeObjectRetain();
      uint64_t v46 = v43;
    }
    else
    {
      uint64_t v81 = *(void *)(v0 + 176);
      uint64_t v75 = *(void *)(v0 + 168);
      uint64_t v76 = *(void *)(v0 + 208);
      uint64_t v54 = *(void *)(v0 + 152);
      uint64_t v55 = *(void *)(v0 + 160);
      uint64_t v56 = *(void *)(v0 + 136);
      uint64_t v73 = *(void *)(v0 + 144);
      uint64_t v57 = *(void *)(v0 + 128);
      uint64_t v69 = *(void *)(v0 + 184);
      uint64_t v71 = *(void *)(v0 + 120);
      uint64_t v58 = *(void *)(v0 + 112);
      static Measurement<>.FormatStyle.UnitWidth.narrow.getter();
      static MeasurementFormatUnitUsage<>.workout.getter();
      static Locale.autoupdatingCurrent.getter();
      sub_1000DA83C();
      FloatingPointFormatStyle.init(locale:)();
      uint64_t v59 = sub_100010218(&qword_10080E930);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
      static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
      sub_10001457C(v58, &qword_100805980);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v71);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v73);
      sub_100014488((unint64_t *)&qword_1007FE5B0, (uint64_t *)&unk_10080E910);
      Measurement<>.formatted<A>(_:)();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v69, v75);
      Swift::String v60 = String.uppercased()();
      uint64_t v25 = v60._countAndFlagsBits;
      id v24 = v60._object;
      swift_bridgeObjectRelease();
      id v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      uint64_t v46 = v76;
    }
    v45(v46, v44);
    uint64_t v61 = *(void *)(v0 + 64);
    double v21 = *(double *)(v61 + 16);
    int v62 = *(unsigned __int8 *)(v61 + 24);
    sub_10048D2F4(v61, *(void *)(v0 + 96));
    if (v62 == 1) {
      double v21 = sub_1005A20DC(*(void *)(v0 + 96));
    }
    uint64_t v63 = *(void *)(v0 + 216);
    uint64_t v64 = *(void *)(v0 + 192);
    sub_10048D358(*(void *)(v0 + 96));
    v45(v63, v64);
  }
  else
  {
    uint64_t v11 = *(void *)v7;
    uint64_t v12 = qword_1007F75E8;
    swift_bridgeObjectRetain();
    if (v12 != -1)
    {
      swift_once();
      uint64_t v1 = *(int **)(v0 + 80);
      uint64_t v2 = *(uint64_t **)(v0 + 64);
    }
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v77 = *(void *)(v0 + 192);
    uint64_t v79 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 72);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1006D6280;
    *(void *)(v16 + 56) = &type metadata for Int;
    *(void *)(v16 + 64) = &protocol witness table for Int;
    *(void *)(v16 + 32) = v11;
    uint64_t v17 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v15 + 112) = v17;
    *(void *)(v15 + 120) = v19;
    swift_bridgeObjectRelease();
    double v20 = (double *)((char *)v2 + v1[13]);
    if (*((unsigned char *)v20 + 8)) {
      double v21 = 0.0;
    }
    else {
      double v21 = *v20;
    }
    id v22 = [self kilocalories];
    sub_10001B284(0, (unint64_t *)&qword_10080E920);
    Measurement.init(value:unit:)();
    id v23 = (uint64_t *)((char *)v2 + v1[18]);
    uint64_t v25 = *v23;
    id v24 = (void *)v23[1];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v79, v13, v77);
    uint64_t v27 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 232);
    uint64_t v29 = *(void *)(v0 + 192);
    uint64_t v28 = *(void *)(v0 + 200);
    if (v24)
    {
      id v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      swift_bridgeObjectRetain();
      v30(v27, v29);
    }
    else
    {
      uint64_t v78 = *(void *)(v0 + 176);
      uint64_t v72 = *(void *)(v0 + 168);
      uint64_t v74 = *(void *)(v0 + 224);
      uint64_t v47 = *(void *)(v0 + 152);
      uint64_t v48 = *(void *)(v0 + 160);
      uint64_t v49 = *(void *)(v0 + 136);
      uint64_t v70 = *(void *)(v0 + 144);
      uint64_t v50 = *(void *)(v0 + 128);
      uint64_t v67 = *(void *)(v0 + 184);
      uint64_t v68 = *(void *)(v0 + 120);
      uint64_t v51 = *(void *)(v0 + 112);
      static Measurement<>.FormatStyle.UnitWidth.narrow.getter();
      static MeasurementFormatUnitUsage<>.workout.getter();
      static Locale.autoupdatingCurrent.getter();
      sub_1000DA83C();
      FloatingPointFormatStyle.init(locale:)();
      uint64_t v52 = sub_100010218(&qword_10080E930);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
      static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
      sub_10001457C(v51, &qword_100805980);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v68);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v70);
      sub_100014488((unint64_t *)&qword_1007FE5B0, (uint64_t *)&unk_10080E910);
      Measurement<>.formatted<A>(_:)();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v67, v72);
      Swift::String v53 = String.uppercased()();
      uint64_t v25 = v53._countAndFlagsBits;
      id v24 = v53._object;
      swift_bridgeObjectRelease();
      id v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v30(v74, v29);
    }
    v30(v26, v29);
  }
  *(double *)(v0 + 272) = v21;
  *(void *)(v0 + 256) = v25;
  *(void *)(v0 + 264) = v24;
  if (qword_1007F6968 != -1) {
    swift_once();
  }
  uint64_t v65 = qword_10083CEE0;
  *(void *)(v0 + 280) = qword_10083CEE0;
  return _swift_task_switch(sub_1005A1C88, v65, 0);
}

uint64_t sub_1005A1C88()
{
  uint64_t v1 = (uint64_t (*)())[*(id *)(*(void *)(v0 + 280) + 112) stringWithDuration:2 durationFormat:*(double *)(v0 + 272)];
  if (v1)
  {
    unint64_t v4 = v1;
    uint64_t v5 = *(void *)(v0 + 72);
    *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v0 + 56) = v6;

    uint64_t v1 = sub_1005A1D28;
    uint64_t v2 = v5;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1005A1D28()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v1 + *(int *)(v0[10] + 32);
  double v3 = *(double *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_10048D2F4(v1, v0[11]);
  uint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v6 = v5 + *(int *)(v0[10] + 64);
    double v3 = *(double *)v6;
    int v7 = *(unsigned __int8 *)(v6 + 8);
    sub_10048D358(v5);
    if (v7) {
      double v3 = 0.0;
    }
  }
  else
  {
    sub_10048D358(v5);
  }
  uint64_t v8 = qword_10083CEE0;
  v0[36] = qword_10083CEE0;
  double v9 = (uint64_t (*)())[objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierHeartRate];
  if (!v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v12 = v9;
  id v13 = [v9 canonicalUnit];

  if (!v13)
  {
LABEL_12:
    __break(1u);
    return _swift_task_switch(v9, v10, v11);
  }
  v0[37] = [self quantityWithUnit:v13 doubleValue:v3 / 60.0];

  double v9 = sub_1005A1E80;
  uint64_t v10 = v8;
  uint64_t v11 = 0;
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_1005A1E80()
{
  uint64_t v1 = (uint64_t (*)())[*(id *)(v0[36] + 112) localizedStringWithHeartRate:v0[37] unitStyle:1];
  if (v1)
  {
    char v4 = v1;
    uint64_t v5 = (void *)v0[37];
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[9];
    v0[38] = v0[7];
    v0[39] = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    v0[40] = v8;
    v0[41] = v10;
    uint64_t v1 = sub_1005A1F44;
    uint64_t v2 = v7;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1005A1F44()
{
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v5 = v0[30];
  unint64_t v4 = v0[31];
  uint64_t v11 = v0[39];
  uint64_t v6 = v0[9];
  Swift::String v7 = String.uppercased()();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1005A282C(v5, v4, v11, v1, v3, v2, v7._countAndFlagsBits, (unint64_t)v7._object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v6 + 128) = v8;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

double sub_1005A20DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  id v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DateComponents();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  __chkstk_darwin(v4);
  Swift::String v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v20 = a1;
  sub_10001B220(a1 + *(int *)(v19 + 24), (uint64_t)v11, (uint64_t *)&unk_1007FC470);
  double v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v11, 1, v12) == 1)
  {
    Date.init()();
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  }
  sub_10001B220(v20 + *(int *)(v19 + 28), (uint64_t)v8, (uint64_t *)&unk_1007FC470);
  if (v21(v8, 1, v12) == 1)
  {
    Date.init()();
    sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
  }
  id v22 = v32;
  static Calendar.current.getter();
  sub_100010218(&qword_1007FB058);
  uint64_t v23 = type metadata accessor for Calendar.Component();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v26 + v25, enum case for Calendar.Component.second(_:), v23);
  sub_1000F5AEC(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v27 = v33;
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v37);
  uint64_t v28 = DateComponents.second.getter();
  LOBYTE(v22) = v29;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v35);
  id v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v15, v12);
  v30(v18, v12);
  double result = (double)v28;
  if (v22) {
    return 0.0;
  }
  return result;
}

void sub_1005A25A4()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset);
}

id sub_1005A2614()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutActivityGridView();
  [super dealloc];
}

uint64_t type metadata accessor for WorkoutActivityGridView()
{
  return self;
}

uint64_t type metadata accessor for WorkoutActivityGridView.LabelTextProvider()
{
  return self;
}

void sub_1005A270C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_labelTextProvider;
  type metadata accessor for WorkoutActivityGridView.LabelTextProvider();
  uint64_t v5 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v5[14] = 0;
  v5[15] = 0;
  v5[16] = 0;
  *(void *)&v0[v4] = v5;
  *(void *)&v0[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v6[32] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_1005A282C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v174 = type metadata accessor for AttributedString();
  uint64_t v164 = *(void *)(v174 - 8);
  __chkstk_darwin(v174 - 8);
  v166 = (char *)&v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_1007FE5B8);
  __chkstk_darwin(v17 - 8);
  v165 = (char *)&v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v173 = (char *)&v163 - v20;
  uint64_t v182 = a1;
  unint64_t v183 = a2;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v21 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v178 = a7;
  unint64_t v179 = a8;
  if ((a8 & 0x2000000000000000) != 0) {
    uint64_t v22 = HIBYTE(a8) & 0xF;
  }
  else {
    uint64_t v22 = a7 & 0xFFFFFFFFFFFFLL;
  }
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v190 = v21;
  uint64_t v186 = v22;
  if (v21)
  {
    if (v22)
    {
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1006D70D0;
      *(void *)(v23 + 56) = &type metadata for String;
      unint64_t v24 = sub_10001B2C0();
      unint64_t v25 = v183;
      *(void *)(v23 + 32) = v182;
      *(void *)(v23 + 40) = v25;
      *(void *)(v23 + 96) = &type metadata for String;
      *(void *)(v23 + 104) = v24;
      *(void *)(v23 + 64) = v24;
      *(void *)(v23 + 72) = a3;
      *(void *)(v23 + 80) = a4;
      *(void *)(v23 + 136) = &type metadata for String;
      *(void *)(v23 + 144) = v24;
      *(void *)(v23 + 112) = a5;
      *(void *)(v23 + 120) = a6;
      *(void *)(v23 + 176) = &type metadata for String;
      *(void *)(v23 + 184) = v24;
      unint64_t v26 = v179;
      *(void *)(v23 + 152) = v178;
      *(void *)(v23 + 160) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1006D7C30;
    *(void *)(v30 + 56) = &type metadata for String;
    unint64_t v31 = sub_10001B2C0();
    unint64_t v32 = v183;
    *(void *)(v30 + 32) = v182;
    *(void *)(v30 + 40) = v32;
    *(void *)(v30 + 96) = &type metadata for String;
    *(void *)(v30 + 104) = v31;
    *(void *)(v30 + 64) = v31;
    *(void *)(v30 + 72) = a3;
    *(void *)(v30 + 80) = a4;
    *(void *)(v30 + 136) = &type metadata for String;
    *(void *)(v30 + 144) = v31;
    *(void *)(v30 + 112) = a5;
    *(void *)(v30 + 120) = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  if (v22)
  {
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1006D7C30;
    *(void *)(v27 + 56) = &type metadata for String;
    unint64_t v28 = sub_10001B2C0();
    *(void *)(v27 + 32) = a5;
    *(void *)(v27 + 40) = a6;
    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v28;
    *(void *)(v27 + 64) = v28;
    *(void *)(v27 + 72) = a3;
    *(void *)(v27 + 80) = a4;
    *(void *)(v27 + 136) = &type metadata for String;
    *(void *)(v27 + 144) = v28;
    unint64_t v29 = v179;
    *(void *)(v27 + 112) = v178;
    *(void *)(v27 + 120) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1006D6270;
  *(void *)(v33 + 56) = &type metadata for String;
  unint64_t v34 = sub_10001B2C0();
  *(void *)(v33 + 32) = a5;
  *(void *)(v33 + 40) = a6;
  *(void *)(v33 + 96) = &type metadata for String;
  *(void *)(v33 + 104) = v34;
  *(void *)(v33 + 64) = v34;
  *(void *)(v33 + 72) = a3;
  *(void *)(v33 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_15:
  uint64_t v35 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v36 = a3;
  uint64_t v37 = a5;
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v194 = _swiftEmptyDictionarySingleton;
  sub_10059992C(v35, v39, 5u, isUniquelyReferenced_nonNull_native);
  *(void *)&long long v193 = v194;
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v42 = swift_allocObject();
  long long v188 = xmmword_1006D6270;
  *(_OWORD *)(v42 + 16) = xmmword_1006D6270;
  *(void *)(v42 + 56) = &type metadata for String;
  unint64_t v43 = sub_10001B2C0();
  uint64_t v180 = v37;
  *(void *)(v42 + 32) = v37;
  *(void *)(v42 + 40) = a6;
  *(void *)(v42 + 96) = &type metadata for String;
  *(void *)(v42 + 104) = v43;
  *(void *)(v42 + 64) = v43;
  *(void *)(v42 + 72) = v36;
  *(void *)(v42 + 80) = a4;
  swift_bridgeObjectRetain();
  uint64_t v181 = a6;
  swift_bridgeObjectRetain();
  uint64_t v44 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v36;
  uint64_t v48 = v190;
  uint64_t v177 = a4;
  if (v190)
  {
    swift_bridgeObjectRelease();
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v188;
    *(void *)(v49 + 56) = &type metadata for String;
    *(void *)(v49 + 64) = v43;
    *(void *)(v49 + 32) = v182;
    *(void *)(v49 + 40) = v183;
    *(void *)(v49 + 96) = &type metadata for String;
    *(void *)(v49 + 104) = v43;
    *(void *)(v49 + 72) = v47;
    *(void *)(v49 + 80) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v46 = v50;
    swift_bridgeObjectRelease();
  }
  unint64_t v51 = v43;
  uint64_t v52 = (void *)v193;
  char v53 = swift_isUniquelyReferenced_nonNull_native();
  v194 = v52;
  sub_10059992C(v44, v46, 2u, v53);
  uint64_t v54 = v194;
  swift_bridgeObjectRelease();
  uint64_t v55 = swift_allocObject();
  long long v193 = xmmword_1006D6280;
  *(_OWORD *)(v55 + 16) = xmmword_1006D6280;
  *(void *)(v55 + 56) = &type metadata for String;
  *(void *)(v55 + 64) = v51;
  *(void *)(v55 + 32) = v180;
  *(void *)(v55 + 40) = v181;
  swift_bridgeObjectRetain();
  uint64_t v56 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  if (v48)
  {
    swift_bridgeObjectRelease();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v193;
    *(void *)(v59 + 56) = &type metadata for String;
    *(void *)(v59 + 64) = v51;
    *(void *)(v59 + 32) = v182;
    *(void *)(v59 + 40) = v183;
    swift_bridgeObjectRetain();
    uint64_t v56 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v58 = v60;
    swift_bridgeObjectRelease();
  }
  char v61 = swift_isUniquelyReferenced_nonNull_native();
  v194 = v54;
  sub_10059992C(v56, v58, 3u, v61);
  v189 = v194;
  swift_bridgeObjectRelease();
  uint64_t v62 = swift_allocObject();
  long long v187 = xmmword_1006D7C30;
  *(_OWORD *)(v62 + 16) = xmmword_1006D7C30;
  *(void *)(v62 + 56) = &type metadata for String;
  *(void *)(v62 + 64) = v51;
  uint64_t v64 = v177;
  uint64_t v63 = v178;
  *(void *)(v62 + 32) = v47;
  *(void *)(v62 + 40) = v64;
  *(void *)(v62 + 96) = &type metadata for String;
  *(void *)(v62 + 104) = v51;
  unint64_t v65 = v179;
  uint64_t v66 = v180;
  uint64_t v67 = v47;
  uint64_t v68 = v181;
  *(void *)(v62 + 72) = v180;
  *(void *)(v62 + 80) = v68;
  *(void *)(v62 + 136) = &type metadata for String;
  *(void *)(v62 + 144) = v51;
  *(void *)(v62 + 112) = v63;
  *(void *)(v62 + 120) = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v69 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  unint64_t v191 = v51;
  uint64_t v192 = v41;
  uint64_t v175 = v67;
  if (v190)
  {
    swift_bridgeObjectRelease();
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v187;
    *(void *)(v72 + 56) = &type metadata for String;
    *(void *)(v72 + 64) = v51;
    *(void *)(v72 + 32) = v182;
    *(void *)(v72 + 40) = v183;
    *(void *)(v72 + 96) = &type metadata for String;
    *(void *)(v72 + 104) = v51;
    *(void *)(v72 + 72) = v67;
    *(void *)(v72 + 80) = v64;
    *(void *)(v72 + 136) = &type metadata for String;
    *(void *)(v72 + 144) = v51;
    *(void *)(v72 + 112) = v66;
    *(void *)(v72 + 120) = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_21:
    uint64_t v69 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v71 = v73;
    uint64_t v74 = v189;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (!v186)
  {
    swift_bridgeObjectRelease();
    uint64_t v160 = swift_allocObject();
    *(_OWORD *)(v160 + 16) = v188;
    unint64_t v161 = v191;
    *(void *)(v160 + 56) = &type metadata for String;
    *(void *)(v160 + 64) = v161;
    uint64_t v162 = v181;
    *(void *)(v160 + 32) = v180;
    *(void *)(v160 + 40) = v162;
    *(void *)(v160 + 96) = &type metadata for String;
    *(void *)(v160 + 104) = v161;
    *(void *)(v160 + 72) = v175;
    *(void *)(v160 + 80) = v177;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  uint64_t v74 = v189;
LABEL_24:
  swift_bridgeObjectRetain();
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  v194 = v74;
  sub_10059992C(v69, v71, 1u, v75);
  uint64_t v76 = v194;
  swift_bridgeObjectRelease();
  char v77 = swift_isUniquelyReferenced_nonNull_native();
  v194 = v76;
  sub_10059992C(v69, v71, 0, v77);
  uint64_t v78 = v194;
  swift_bridgeObjectRelease();
  char v79 = swift_isUniquelyReferenced_nonNull_native();
  v194 = v78;
  sub_10059992C(0, 0xE000000000000000, 4u, v79);
  uint64_t v80 = v194;
  swift_bridgeObjectRelease();
  int64_t v81 = 0;
  uint64_t v82 = v80[8];
  v167 = v80 + 8;
  v176 = v80;
  uint64_t v83 = 1 << *((unsigned char *)v80 + 32);
  uint64_t v84 = -1;
  if (v83 < 64) {
    uint64_t v84 = ~(-1 << v83);
  }
  unint64_t v85 = v84 & v82;
  int64_t v168 = (unint64_t)(v83 + 63) >> 6;
  NSAttributedStringKey v172 = NSFontAttributeName;
  v184 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56);
  v171 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
  v169 = (void (**)(char *, uint64_t, uint64_t))(v164 + 32);
  NSString v86 = _swiftEmptyDictionarySingleton;
  NSAttributedStringKey v170 = NSForegroundColorAttributeName;
  id v87 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  if (v85) {
    goto LABEL_29;
  }
LABEL_30:
  int64_t v91 = v81 + 1;
  if (__OFADD__(v81, 1))
  {
    __break(1u);
    goto LABEL_81;
  }
  if (v91 < v168)
  {
    unint64_t v92 = v167[v91];
    int64_t v93 = v81 + 1;
    if (v92) {
      goto LABEL_43;
    }
    int64_t v93 = v81 + 2;
    if (v81 + 2 >= v168) {
      goto LABEL_78;
    }
    unint64_t v92 = v167[v93];
    if (v92) {
      goto LABEL_43;
    }
    int64_t v93 = v81 + 3;
    if (v81 + 3 >= v168) {
      goto LABEL_78;
    }
    unint64_t v92 = v167[v93];
    if (v92)
    {
LABEL_43:
      int64_t v185 = v93;
      uint64_t v186 = (v92 - 1) & v92;
      unint64_t v90 = __clz(__rbit64(v92)) + (v93 << 6);
      while (1)
      {
        v189 = v86;
        uint64_t v95 = v176[7];
        uint64_t v190 = *(unsigned __int8 *)(v176[6] + v90);
        Swift::String v96 = (uint64_t *)(v95 + 16 * v90);
        uint64_t v98 = *v96;
        uint64_t v97 = v96[1];
        id v99 = objc_allocWithZone((Class)NSMutableAttributedString);
        swift_bridgeObjectRetain();
        *(void *)&long long v187 = v98;
        *(void *)&long long v188 = v97;
        NSString v100 = String._bridgeToObjectiveC()();
        id v101 = [v99 initWithString:v100];

        if (qword_1007F71C8 != -1) {
          swift_once();
        }
        uint64_t v102 = qword_10083D790;
        uint64_t v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = v193;
        unint64_t v104 = v191;
        *(void *)(v103 + 56) = &type metadata for String;
        *(void *)(v103 + 64) = v104;
        *(void *)(v103 + 32) = v182;
        *(void *)(v103 + 40) = v183;
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        id v105 = [v101 mutableString];
        NSString v106 = String._bridgeToObjectiveC()();
        uint64_t v107 = v87;
        id v108 = [v105 v87[122] v106:1];
        uint64_t v110 = v109;

        NSAttributedStringKey v111 = v170;
        [v101 addAttribute:v170 value:v102 range:v108];
        swift_bridgeObjectRelease();
        if (qword_1007F71D0 != -1) {
          swift_once();
        }
        uint64_t v112 = qword_10083D798;
        uint64_t v113 = swift_allocObject();
        *(_OWORD *)(v113 + 16) = v193;
        unint64_t v114 = v191;
        *(void *)(v113 + 56) = &type metadata for String;
        *(void *)(v113 + 64) = v114;
        *(void *)(v113 + 32) = v175;
        *(void *)(v113 + 40) = v177;
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        id v115 = [v101 mutableString];
        NSString v116 = String._bridgeToObjectiveC()();
        id v117 = [v115 v107[122] v116:1];
        uint64_t v119 = v118;

        [v101 addAttribute:v111 value:v112 range:v117];
        swift_bridgeObjectRelease();
        if (qword_1007F71B8 != -1) {
          swift_once();
        }
        uint64_t v120 = qword_10083D780;
        uint64_t v121 = swift_allocObject();
        *(_OWORD *)(v121 + 16) = v193;
        unint64_t v122 = v191;
        *(void *)(v121 + 56) = &type metadata for String;
        *(void *)(v121 + 64) = v122;
        *(void *)(v121 + 32) = v180;
        *(void *)(v121 + 40) = v181;
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        id v123 = [v101 mutableString];
        NSString v124 = String._bridgeToObjectiveC()();
        id v125 = [v123 v107[122] v124 1];
        uint64_t v127 = v126;

        [v101 addAttribute:v111 value:v120 range:v125];
        swift_bridgeObjectRelease();
        if (qword_1007F71C0 != -1) {
          swift_once();
        }
        uint64_t v128 = qword_10083D788;
        uint64_t v129 = swift_allocObject();
        *(_OWORD *)(v129 + 16) = v193;
        unint64_t v130 = v191;
        *(void *)(v129 + 56) = &type metadata for String;
        *(void *)(v129 + 64) = v130;
        *(void *)(v129 + 32) = v178;
        *(void *)(v129 + 40) = v179;
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        id v131 = [v101 mutableString];
        NSString v132 = String._bridgeToObjectiveC()();
        id v133 = [v131 v107[122] v132:1];
        uint64_t v135 = v134;

        [v101 addAttribute:v111 value:v128 range:v133];
        swift_bridgeObjectRelease();
        switch(v190)
        {
          case 5:
            swift_bridgeObjectRelease();
            goto LABEL_58;
          default:
            char v136 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v136 & 1) == 0)
            {
              v137 = &qword_10083D878;
              if (qword_1007F72B0 != -1)
              {
                swift_once();
                v138 = (void *)qword_10083D878;
                if (qword_10083D878) {
                  goto LABEL_60;
                }
                goto LABEL_62;
              }
LABEL_59:
              v138 = (void *)*v137;
              if (v138) {
                goto LABEL_60;
              }
              goto LABEL_62;
            }
LABEL_58:
            v137 = &qword_10083D800;
            if (qword_1007F7238 == -1) {
              goto LABEL_59;
            }
            swift_once();
            v138 = (void *)qword_10083D800;
            if (qword_10083D800)
            {
LABEL_60:
              id v139 = v138;
              break;
            }
LABEL_62:
            id v139 = [objc_allocWithZone((Class)UIFont) init];
            v138 = 0;
            break;
        }
        id v140 = v138;
        id v141 = [v101 mutableString];
        NSString v142 = String._bridgeToObjectiveC()();
        id v143 = [v141 v107[122] v142 1];
        uint64_t v145 = v144;

        [v101 addAttribute:v172 value:v139 range:v143];
        swift_bridgeObjectRelease();
        NSString v86 = v189;
        uint64_t v146 = v174;
        switch(v190)
        {
          case 5:
            swift_bridgeObjectRelease();
            goto LABEL_68;
          default:
            char v147 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v147)
            {
LABEL_68:
              v148 = &qword_10083D7F8;
              if (qword_1007F7230 != -1)
              {
                swift_once();
                v148 = &qword_10083D7F8;
              }
            }
            else
            {
              v148 = &qword_10083D870;
              if (qword_1007F72A8 != -1)
              {
                swift_once();
                v148 = &qword_10083D870;
              }
            }
            id v149 = (id)*v148;
            sub_100049B7C(v149);

            id v150 = v101;
            uint64_t v151 = (uint64_t)v173;
            AttributedString.init(_:)();
            v152 = *v184;
            (*v184)(v151, 0, 1, v146);
            if ((*v171)(v151, 1, v146) == 1)
            {
              sub_10001457C(v151, &qword_1007FE5B8);
              swift_bridgeObjectRetain();
              unint64_t v153 = sub_10001B77C(v190);
              char v155 = v154;
              swift_bridgeObjectRelease();
              if (v155)
              {
                char v156 = swift_isUniquelyReferenced_nonNull_native();
                v194 = v86;
                if ((v156 & 1) == 0)
                {
                  sub_1005496D4();
                  NSString v86 = v194;
                }
                uint64_t v157 = (uint64_t)v165;
                (*(void (**)(char *, unint64_t, uint64_t))(v164 + 32))(v165, v86[7] + *(void *)(v164 + 72) * v153, v146);
                sub_1000F29E0(v153, (uint64_t)v86);
                swift_bridgeObjectRelease();
                uint64_t v158 = 0;
              }
              else
              {
                uint64_t v158 = 1;
                uint64_t v157 = (uint64_t)v165;
              }
              int64_t v81 = v185;
              v152(v157, v158, 1, v146);
              sub_10001457C(v157, &qword_1007FE5B8);

              unint64_t v85 = v186;
              id v87 = v107;
              if (!v186) {
                goto LABEL_30;
              }
            }
            else
            {
              uint64_t v88 = (uint64_t)v166;
              (*v169)(v166, v151, v146);
              char v89 = swift_isUniquelyReferenced_nonNull_native();
              v194 = v86;
              sub_1005997C4(v88, v190, v89);
              NSString v86 = v194;

              swift_bridgeObjectRelease();
              int64_t v81 = v185;
              unint64_t v85 = v186;
              id v87 = v107;
              if (!v186) {
                goto LABEL_30;
              }
            }
LABEL_29:
            int64_t v185 = v81;
            uint64_t v186 = (v85 - 1) & v85;
            unint64_t v90 = __clz(__rbit64(v85)) | (v81 << 6);
            break;
        }
      }
    }
    uint64_t v94 = v81 + 4;
    if (v81 + 4 < v168)
    {
      unint64_t v92 = v167[v94];
      if (v92)
      {
        int64_t v93 = v81 + 4;
        goto LABEL_43;
      }
      while (1)
      {
        int64_t v93 = v94 + 1;
        if (__OFADD__(v94, 1)) {
          break;
        }
        if (v93 >= v168) {
          goto LABEL_78;
        }
        unint64_t v92 = v167[v93];
        ++v94;
        if (v92) {
          goto LABEL_43;
        }
      }
LABEL_81:
      __break(1u);
      JUMPOUT(0x1005A3C50);
    }
  }
LABEL_78:
  swift_release();
  return v86;
}

uint64_t sub_1005A3C80()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005A3CBC()
{
  return swift_deallocObject();
}

void sub_1005A3CF4()
{
  sub_1005A0DC4(*(void *)(v0 + 16));
}

uint64_t sub_1005A3CFC()
{
  return swift_deallocObject();
}

uint64_t sub_1005A3D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005A3D1C()
{
  return swift_release();
}

uint64_t sub_1005A3D24()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1005A3DF0(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10059CE94(a1, v4, v5);
}

uint64_t sub_1005A3E64()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1005A3F38()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10059D26C(v2, v3, v4);
}

uint64_t sub_1005A3F9C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005A3FDC()
{
  sub_10059D7C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005A3FE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10059D904(a1, v4, v5, v6);
}

uint64_t sub_1005A409C()
{
  return sub_10059C134();
}

uint64_t sub_1005A40A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10059D904(a1, v4, v5, v6);
}

uint64_t sub_1005A4164(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_didThumbnailFinishLoading) = a1;
  return sub_1005A45D4();
}

uint64_t sub_1005A4178()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  char v2 = 1;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
        char v2 = 1;
        switch(*(unsigned char *)(v0 + v1))
        {
          case 2:
            goto LABEL_8;
          default:
            char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v4) {
              goto LABEL_5;
            }
            char v2 = 1;
            switch(*(unsigned char *)(v0 + v1))
            {
              case 5:
                goto LABEL_8;
              default:
                char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
                break;
            }
            break;
        }
        goto LABEL_8;
      }
LABEL_5:
      char v2 = 1;
      break;
    default:
LABEL_8:
      swift_bridgeObjectRelease();
      break;
  }
  return v2 & 1;
}

void sub_1005A4454()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];
  [v0 setClipsToBounds:0];
  id v3 = [self defaultCenter];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 addObserver:v0 selector:"handleAllowedVideosNotification:" name:v4 object:0];
}

uint64_t sub_1005A45D4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1005A6740;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B6478;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1005A4854()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC7Journal18VideoAssetGridView_durationLabel;
    id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                               + OBJC_IVAR____TtC7Journal18VideoAssetGridView_durationLabel), "superview"));

    uint64_t v7 = *(void **)&v4[v5];
    if (v6)
    {
      [v4 bringSubviewToFront:v7];
    }
    else
    {
      uint64_t v8 = qword_1007F7250;
      id v9 = v7;
      if (v8 != -1) {
        swift_once();
      }
      [v9 setFont:qword_10083D818];

      uint64_t v10 = *(void **)&v4[v5];
      uint64_t v11 = self;
      id v12 = v10;
      id v13 = [v11 whiteColor];
      [v12 setTextColor:v13];

      uint64_t v14 = *(void **)&v4[v5];
      [v14 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
      [v14 setAdjustsFontForContentSizeCategory:1];
      [v14 setAdjustsFontSizeToFitWidth:1];
      [v4 addSubview:v14];
      uint64_t v15 = qword_1007F7350;
      id v16 = v14;
      if (v15 != -1) {
        swift_once();
      }
      uint64_t v17 = &static Journaling.EntryViewModel.currentAppVersion;
      double v18 = *(double *)&qword_10083D960;
      id v19 = [v16 superview];
      uint64_t v20 = &stru_1007D7000;
      if (v19)
      {
        uint64_t v21 = v19;
        [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v22 = [v16 trailingAnchor];
        id v23 = [v21 trailingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        [v24 setConstant:-v18];
        if (v24)
        {
          id v24 = v24;
          [v24 setActive:1];

          uint64_t v21 = v24;
        }

        uint64_t v17 = &static Journaling.EntryViewModel.currentAppVersion;
        uint64_t v20 = &stru_1007D7000;
      }
      else
      {
        id v24 = 0;
      }

      double v25 = *((double *)v17 + 300);
      id v26 = *(id *)&v4[v5];
      id v27 = [v26 superview];
      if (v27)
      {
        unint64_t v28 = v27;
        [v26 v20[96].name];
        id v29 = [v26 leadingAnchor];
        id v30 = [v28 leadingAnchor];
        id v31 = [v29 constraintGreaterThanOrEqualToAnchor:v30];

        [v31 setConstant:v25];
        if (v31)
        {
          id v31 = v31;
          [v31 setActive:1];

          unint64_t v28 = v31;
        }
      }
      else
      {
        id v31 = 0;
      }

      double v32 = *((double *)v17 + 300);
      uint64_t v33 = qword_1007F7388;
      id v34 = *(id *)&v4[v5];
      if (v33 != -1) {
        swift_once();
      }
      id v35 = sub_1001DD438(0, 1, v32 - *(double *)&qword_10083D998);
    }
    uint64_t v36 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v2, 1, 1, v36);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v38 = static MainActor.shared.getter();
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    v39[4] = v37;
    swift_release();
    sub_1005D74B4((uint64_t)v2, (uint64_t)&unk_100812410, (uint64_t)v39);
    swift_release();
  }
}

uint64_t sub_1005A4DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[32] = v5;
  v4[33] = *(void *)(v5 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v4[38] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v4[39] = v7;
  v4[40] = *(void *)(v7 - 8);
  v4[41] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[42] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[43] = v9;
  v4[44] = v8;
  return _swift_task_switch(sub_1005A4F80, v9, v8);
}

uint64_t sub_1005A4F80()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = *(void **)&Strong[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView];
    if (v3)
    {
      id v4 = v3;
      id v5 = [v4 layer];
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {

      }
      id v7 = [v6 player];
      id v8 = [v7 currentItem];

      if (v8)
      {
        v0[45] = [v8 asset];

        sub_100010218(&qword_1008071B8);
        uint64_t v9 = static AVPartialAsyncProperty<A>.duration.getter();
        v0[46] = v9;
        uint64_t v10 = (void *)swift_task_alloc();
        v0[47] = v10;
        *uint64_t v10 = v0;
        v10[1] = sub_1005A530C;
        return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 20, v9);
      }
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11
    && (id v12 = (void *)v11,
        id v13 = *(void **)(v11 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset),
        id v14 = v13,
        v12,
        v13))
  {
    uint64_t v15 = v0[39];
    uint64_t v16 = v0[40];
    uint64_t v17 = (char *)v0[38];
    sub_100513748(0, 1, v17);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) != 1)
    {
      (*(void (**)(void, void, void))(v0[40] + 32))(v0[41], v0[38], v0[39]);
      id v23 = (uint64_t (*)(uint64_t))((char *)&dword_1007FD558 + dword_1007FD558);
      double v18 = (void *)swift_task_alloc();
      v0[49] = v18;
      *double v18 = v0;
      v18[1] = sub_1005A56C8;
      uint64_t v19 = v0[41];
      return v23(v19);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[40] + 56))(v0[38], 1, 1, v0[39]);
  }
  uint64_t v20 = v0[38];
  swift_release();
  sub_10001457C(v20, (uint64_t *)&unk_100800A60);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1005A530C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_1005A5B7C;
  }
  else
  {

    swift_release();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_1005A5430;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005A5430()
{
  uint64_t v12 = v0[37];
  uint64_t v1 = v0[34];
  uint64_t v15 = v0[36];
  uint64_t v16 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v14 = v0[33];
  swift_release();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[22];
  sub_10001FB8C();
  uint64_t v5 = v0[21];
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v3;
  v8[4] = v5;
  v8[5] = v4;
  v0[12] = sub_1005A68AC;
  v0[13] = v8;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10017D530;
  v0[11] = &unk_1007B6540;
  uint64_t v9 = _Block_copy(v0 + 8);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[30] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v16);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1005A56C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_1005A5ACC;
  }
  else
  {
    v8[50] = a2;
    v8[51] = a3;
    v8[52] = a1;
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_1005A5808;
  }
  return _swift_task_switch(v11, v9, v10);
}

uint64_t sub_1005A5808()
{
  uint64_t v1 = v0[50];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[51];
  uint64_t v18 = v0[39];
  uint64_t v19 = v0[41];
  uint64_t v13 = v0[37];
  uint64_t v15 = v0[36];
  uint64_t v2 = v0[34];
  uint64_t v16 = v0[35];
  uint64_t v17 = v0[40];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[33];
  swift_release();
  sub_10001FB8C();
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v11;
  v7[4] = v1;
  v7[5] = v12;
  v0[6] = sub_1005A688C;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_1007B64F0;
  id v8 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[29] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1005A5ACC()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005A5B7C()
{
  uint64_t v1 = *(void **)(v0 + 360);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1005A5C28(uint64_t a1, CMTimeValue a2, uint64_t a3, CMTimeEpoch a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v8 = (void *)Strong;
  id v9 = *(id *)(Strong + OBJC_IVAR____TtC7Journal18VideoAssetGridView_durationLabel);

  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double Seconds = CMTimeGetSeconds(&v22);
  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double v11 = CMTimeGetSeconds(&v22);
  id v12 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v13 = v12;
  if (v11 < 60.0)
  {
    [v12 setAllowedUnits:192];
    uint64_t v14 = &selRef_setZeroFormattingBehavior_;
    uint64_t v15 = 0x10000;
LABEL_6:
    [v13 *v14 v15];
    goto LABEL_7;
  }
  if (v11 > 3600.0)
  {
    uint64_t v14 = &selRef_setAllowedUnits_;
    uint64_t v15 = 224;
    goto LABEL_6;
  }
LABEL_7:
  id v16 = [v13 stringFromTimeInterval:v11];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    sub_100518238(1uLL, v18, v20);
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v21];
}

void sub_1005A5E38(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal18VideoAssetGridView_durationLabel);

    double v6 = 1.0;
    if (a2) {
      double v6 = 0.0;
    }
    [v5 setAlpha:v6];
  }
}

void sub_1005A5ECC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v2) + 0x58);
  uint64_t v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  id v5 = v2;
  v3(1, v4);

  uint64_t v6 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v7)
  {
    id v8 = v7;
    id v9 = [v8 layer];
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (!v10) {

    }
    id v11 = [v10 player];
    if (v11)
    {
      [v11 rate];
      float v13 = v12;

      if (v13 > 0.0 && (sub_1005A4178() & 1) == 0)
      {
        uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView);
        id v15 = [v14 image];

        if (v15 && ([v14 isHidden] & 1) == 0 && (objc_msgSend(v14, "alpha"), v16 == 1.0))
        {
          sub_1005DF9A0();
        }
        else
        {
          uint64_t v17 = *(void **)(v1 + v6);
          if (v17)
          {
            id v18 = v17;
            id v19 = [v18 layer];
            self;
            unint64_t v20 = (void *)swift_dynamicCastObjCClass();
            if (!v20) {

            }
            id v21 = [v20 player];
            [v21 pause];

            CMTime v22 = *(void **)(v1 + v6);
            if (v22)
            {
              id v23 = v22;
              id v24 = [v23 layer];
              self;
              double v25 = (void *)swift_dynamicCastObjCClass();
              if (!v25) {

              }
              id v26 = [v25 player];
              if (v26)
              {
                CMTimeScale timescale = kCMTimeZero.timescale;
                CMTimeFlags flags = kCMTimeZero.flags;
                CMTimeEpoch epoch = kCMTimeZero.epoch;
                CMTimeValue value = kCMTimeZero.value;
                CMTimeScale v38 = timescale;
                CMTimeFlags v39 = flags;
                CMTimeEpoch v40 = epoch;
                CMTimeEpoch v32 = epoch;
                CMTimeValue v33 = kCMTimeZero.value;
                CMTimeScale v34 = timescale;
                CMTimeFlags v35 = flags;
                CMTimeValue v29 = kCMTimeZero.value;
                CMTimeScale v30 = timescale;
                CMTimeFlags v31 = flags;
                [v26 seekToTime:&value toleranceBefore:&v33 toleranceAfter:&v29];
              }
            }
          }
          sub_1005DFB64();
        }
      }
    }
  }
}

void sub_1005A61F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (v2)
  {
    uint64_t v3 = v2;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10001B738((uint64_t)v15), (v5 & 1) != 0))
    {
      sub_10001B648(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)v15);
    if (*((void *)&v17 + 1))
    {
      sub_100010218(&qword_100800A70);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
        if (v6)
        {
          id v7 = v6;
          uint64_t v8 = UUID.uuidString.getter();
          char v10 = sub_100018958(v8, v9, (void *)0xD000000000000019);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0 || (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded) & 1) == 0)
          {
          }
          else
          {
            id v11 = (void *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction);
            uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction);
            *id v11 = 0;
            v11[1] = 0;
            sub_10001ABB8(v12);
            sub_1005DFB64();
            sub_1005DF9A0();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          float v13 = (void *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction);
          uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction);
          *float v13 = 0;
          v13[1] = 0;
          sub_10001ABB8(v14);
          sub_1005DFB64();
          sub_1005DF9A0();
        }
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v16, &qword_1007FAD50);
    }
  }
}

void sub_1005A6614()
{
}

id sub_1005A6624()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoAssetGridView();
  return [super dealloc];
}

uint64_t sub_1005A666C()
{
  return type metadata accessor for VideoAssetGridView();
}

uint64_t type metadata accessor for VideoAssetGridView()
{
  uint64_t result = qword_1008123F8;
  if (!qword_1008123F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005A66C0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005A6708()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1005A6740()
{
}

uint64_t sub_1005A6748(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005A6758()
{
  return swift_release();
}

uint64_t sub_1005A6760()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005A67A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1005A4DA4(a1, v4, v5, v6);
}

uint64_t sub_1005A6854()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005A688C()
{
  sub_1005A5C28(v0[2], v0[3], v0[4], v0[5]);
}

id sub_1005A68C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for AssetTypesVC();
  v19.receiver = v0;
  v19.super_class = v5;
  [super viewDidLoad];
  NSString v6 = String._bridgeToObjectiveC()();
  [v1 setTitle:v6];

  id result = [v1 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v8 = objc_allocWithZone((Class)sub_100010218(&qword_100812478));
  uint64_t v9 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  char v10 = *(void **)&v1[OBJC_IVAR____TtC7Journal12AssetTypesVC_dataSource];
  *(void *)&v1[OBJC_IVAR____TtC7Journal12AssetTypesVC_dataSource] = v9;

  id result = [v1 tableView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = result;
  id v12 = [objc_allocWithZone((Class)UIRefreshControl) init];
  [v11 setRefreshControl:v12];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  float v13 = result;
  id v14 = [result refreshControl];

  if (v14)
  {
    [v14 addTarget:v1 action:"refreshData" forControlEvents:4096];
  }
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  type metadata accessor for MainActor();
  long long v16 = v1;
  uint64_t v17 = static MainActor.shared.getter();
  id v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v16;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100812480, (uint64_t)v18);
  return (id)swift_release();
}

id sub_1005A6B68(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *a3;
  id v9 = [objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  UITableViewCell.defaultContentConfiguration()();
  sub_100043220(v8);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self _systemImageNamed:v10];

  UIListContentConfiguration.image.setter();
  sub_100041A58(v8);
  UIListContentConfiguration.text.setter();
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  if (qword_1007F6958 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v12 = v21;
  if (*(void *)(v21 + 16) && (unint64_t v13 = sub_10001B8AC(v8), (v14 & 1) != 0)) {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  }
  else {
    uint64_t v15 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v15;
  v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 0x73656972746E6520;
  v17._object = (void *)0xE800000000000000;
  String.append(_:)(v17);
  UIListContentConfiguration.secondaryText.setter();
  v20[3] = v4;
  v20[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  id v18 = sub_100062E54(v20);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v18, v7, v4);
  UITableViewCell.contentConfiguration.setter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t sub_1005A6E5C()
{
  uint64_t v1 = sub_100010218(&qword_100812458);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005A7814();
  sub_100388980();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100794FC0);
  if (qword_1007F6958 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1000CD93C(v9);
  swift_bridgeObjectRelease();
  v8[7] = 1;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  uint64_t result = swift_release();
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal12AssetTypesVC_dataSource);
  if (v6)
  {
    id v7 = v6;
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005A705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_1005A70F4, v6, v5);
}

uint64_t sub_1005A70F4()
{
  if (qword_1007F6958 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_1005A71B8;
  return sub_10007C4D0();
}

uint64_t sub_1005A71B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_1005A72D8, v3, v2);
}

id sub_1005A72D8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  sub_1005A6E5C();
  id result = [v1 tableView];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result refreshControl];

    [v4 endRefreshing];
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v5();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1005A7644()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetTypesVC();
  return [super dealloc];
}

uint64_t type metadata accessor for AssetTypesVC()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AssetTypesVC.Section(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005A7784);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetTypesVC.Section()
{
  return &type metadata for AssetTypesVC.Section;
}

unint64_t sub_1005A77C0()
{
  unint64_t result = qword_100812450;
  if (!qword_100812450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812450);
  }
  return result;
}

unint64_t sub_1005A7814()
{
  unint64_t result = qword_100812460;
  if (!qword_100812460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100812460);
  }
  return result;
}

uint64_t sub_1005A7868@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005A78EC()
{
  return static Published.subscript.setter();
}

uint64_t sub_1005A7970(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100052588;
  return sub_1005A705C(a1, v4, v5, v6);
}

uint64_t sub_1005A7A28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1005A705C(a1, v4, v5, v6);
}

uint64_t sub_1005A7ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1005A7B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_10001B418((uint64_t)&v11);
}

void sub_1005A7B94()
{
  qword_10083EE08 = 0x4024000000000000;
}

void sub_1005A7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v31 = a5;
  uint64_t v8 = sub_100010218(&qword_100812488);
  __chkstk_darwin(v8 - 8);
  NSString v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PresentationIntent.Kind();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PresentationIntent();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C71EC(a1, (uint64_t)v33);
  if (v34)
  {
    uint64_t v30 = a2;
    sub_10001B284(0, &qword_1007F8FA8);
    if (swift_dynamicCast())
    {
      uint64_t v29 = a3;
      id v19 = v32;
      [v32 mutableCopy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10001B284(0, (unint64_t *)&unk_10080A660);
      if (swift_dynamicCast())
      {
        id v20 = v32;
        [v19 firstLineHeadIndent];
        double v22 = fmod(v21, 1.0) + -0.1;
        [v19 headIndent];
        double v24 = fmod(v23, 1.0);
        if (fabs(v22) >= 0.01 || fabs(v24 + -0.1) >= 0.01)
        {
          uint64_t v28 = v29;
          uint64_t v26 = v30;
          id v27 = v31;
        }
        else
        {
          [v20 setFirstLineHeadIndent:0.0];
          [v20 setHeadIndent:0.0];
          (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for PresentationIntent.Kind.blockQuote(_:), v11);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v10, 1, 1, v15);
          PresentationIntent.init(_:identity:parent:)();
          Class isa = PresentationIntent._bridgeToObjectiveC()().super.isa;
          uint64_t v26 = v30;
          id v27 = v31;
          uint64_t v28 = v29;
          [v31 addAttribute:NSPresentationIntentAttributeName value:isa range:v30];

          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
        }
        [v20 setParagraphSpacingBefore:10.0];
        [v27 addAttribute:NSParagraphStyleAttributeName value:v20 range:v26];
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10001B418((uint64_t)v33);
  }
}

void sub_1005A7F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1001C71EC(a1, (uint64_t)v10);
  if (v11)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (swift_dynamicCast())
    {
      if (sub_1002566F4())
      {
        id v8 = [self blackColor];
        [a5 addAttribute:NSForegroundColorAttributeName value:v8 range:a2, a3];
      }
    }
  }
  else
  {
    sub_10001B418((uint64_t)v10);
  }
}

void sub_1005A8094(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6)
{
  sub_1001C71EC(a1, (uint64_t)v12);
  if (v13)
  {
    sub_10001B284(0, (unint64_t *)&unk_10080A670);
    if (swift_dynamicCast())
    {
      id v10 = [v11 fontWithSize:a4];
      [a6 addAttribute:NSFontAttributeName value:v10 range:a2, a3];
    }
  }
  else
  {
    sub_10001B418((uint64_t)v12);
  }
}

uint64_t sub_1005A818C(void *a1, double a2)
{
  id v4 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:a1];
  id v5 = [a1 length];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005A8618;
  *(void *)(v7 + 24) = v6;
  uint64_t v28 = sub_1005A8630;
  uint64_t v29 = v7;
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1005A7B04;
  id v27 = &unk_1007B6698;
  id v8 = _Block_copy(&v24);
  id v9 = v4;
  swift_retain();
  swift_release();
  [a1 enumerateAttribute:NSParagraphStyleAttributeName inRange:0 options:v5 usingBlock:v8];
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v12 = [a1 length];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v9;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1005A8670;
  *(void *)(v14 + 24) = v13;
  uint64_t v28 = sub_1005A86DC;
  uint64_t v29 = v14;
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1005A7B04;
  id v27 = &unk_1007B6710;
  uint64_t v15 = _Block_copy(&v24);
  id v16 = v9;
  swift_retain();
  swift_release();
  [a1 enumerateAttribute:NSForegroundColorAttributeName inRange:0 options:v12 usingBlock:v15];
  _Block_release(v15);
  char v17 = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v18 = [a1 length];
  uint64_t v19 = swift_allocObject();
  *(double *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v16;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1005A86C0;
  *(void *)(v20 + 24) = v19;
  uint64_t v28 = sub_1005A86DC;
  uint64_t v29 = v20;
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1005A7B04;
  id v27 = &unk_1007B6788;
  long double v21 = _Block_copy(&v24);
  id v22 = v16;
  swift_retain();
  swift_release();
  [a1 enumerateAttribute:NSFontAttributeName inRange:0 options:0 usingBlock:v21];
  _Block_release(v21);
  char v23 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0) {
    return (uint64_t)v22;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1005A85E0()
{
  return swift_deallocObject();
}

void sub_1005A8618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005A7BA4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005A8620()
{
  return swift_deallocObject();
}

uint64_t sub_1005A8630()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1005A8658(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005A8668()
{
  return swift_release();
}

void sub_1005A8670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005A7F98(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005A8678()
{
  return swift_deallocObject();
}

uint64_t sub_1005A8688()
{
  return swift_deallocObject();
}

void sub_1005A86C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005A8094(a1, a2, a3, *(double *)(v4 + 16), a4, *(void **)(v4 + 24));
}

uint64_t sub_1005A86CC()
{
  return swift_deallocObject();
}

uint64_t sub_1005A86F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  String.index(before:)();
  return String.subscript.getter();
}

uint64_t sub_1005A8774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 1;
}

uint64_t sub_1005A87A0(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v15 = *(uint64_t (**)(void *, id, double, double, double, double, double))(a1 + 32);
  id v16 = a2;
  id v17 = a3;
  char v18 = v15(a2, v17, a4, a5, a6, a7, a8);

  return v18 & 1;
}

uint64_t sub_1005A8848(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1005A88C8()
{
  uint64_t v1 = v0;
  [v0 setDataDetectorTypes:-1];
  if (qword_1007F7E38 != -1) {
    swift_once();
  }
  [v0 setFont:qword_1008124A8];
  if (qword_1007F7E40 != -1) {
    swift_once();
  }
  [v0 setTextColor:qword_1008124B0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setSupportsAdaptiveImageGlyph:0];
  [v0 setAllowsEditingTextAttributes:1];
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v2 = [v0 textContainer];
  [v2 setLineFragmentPadding:0.0];

  id v3 = [v1 textDropInteraction];
  if (v3)
  {
    uint64_t v4 = v3;
    [v1 removeInteraction:v3];
  }
  id v5 = [v1 textLayoutManager];
  if (v5)
  {
    id v6 = v5;
    id v7 = [v5 textContentManager];

    if (v7)
    {
      self;
      id v8 = (void *)swift_dynamicCastObjCClass();
      if (v8) {
        [v8 setDelegate:v1];
      }
    }
  }
  id v9 = objc_allocWithZone((Class)NSMutableParagraphStyle);
  id v10 = NSParagraphStyleAttributeName;
  id v11 = [v9 init];
  [v11 setParagraphSpacingBefore:8.0];
  sub_10044121C();
  uint64_t v19 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
  *(void *)&long long v18 = v11;
  id v12 = [v1 typingAttributes];
  type metadata accessor for Key(0);
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = v13;
  if (v19)
  {
    sub_10002102C(&v18, v16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100599110(v16, v10, isUniquelyReferenced_nonNull_native);
    uint64_t v17 = v13;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001457C((uint64_t)&v18, &qword_1007FAD50);
    sub_1000F1E94((uint64_t)v10, v16);

    sub_10001457C((uint64_t)v16, &qword_1007FAD50);
  }
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setTypingAttributes:isa];

  sub_1005A8C98();
}

void sub_1005A8C98()
{
  id v1 = [v0 textLayoutManager];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 textViewportLayoutController];

    if (v3)
    {
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v8[4] = sub_1005B4FC0;
      v8[5] = v4;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      v8[2] = sub_1005AADD0;
      v8[3] = &unk_1007B6E18;
      id v5 = _Block_copy(v8);
      swift_release();
      [v3 setRenderingSurfaceUpdater:v5];
      _Block_release(v5);
      uint64_t v6 = _UITextViewportLayoutControllerDidLayoutNotification;
      id v7 = [self defaultCenter];
      [v7 addObserver:v0 selector:"viewportDidLayout" name:v6 object:v3];
    }
  }
}

void sub_1005A8E08()
{
  id v1 = v0;
  if (([v0 isFirstResponder] & 1) == 0
    && (v0[OBJC_IVAR____TtC7Journal14CanvasTextView_isShowingFormattingController] & 1) == 0)
  {
    id v2 = [v0 traitCollection];
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry];
    if (v3)
    {
      uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
      id v5 = v4;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v6 = (void *)sub_100020C00(v2, v4, 0, 8.0);

    if (v6)
    {
      id v7 = sub_1005A90BC(v6);
      [v1 setAttributedText:v7];
      id v8 = objc_allocWithZone((Class)NSMutableParagraphStyle);
      id v9 = NSParagraphStyleAttributeName;
      id v10 = [v8 init];
      [v10 setParagraphSpacingBefore:8.0];
      sub_10044121C();
      uint64_t v18 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
      *(void *)&long long v17 = v10;
      id v11 = [v1 typingAttributes];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v16 = v12;
      if (v18)
      {
        sub_10002102C(&v17, v15);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_100599110(v15, v9, isUniquelyReferenced_nonNull_native);
        uint64_t v16 = v12;

        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10001457C((uint64_t)&v17, &qword_1007FAD50);
        sub_1000F1E94((uint64_t)v9, v15);

        sub_10001457C((uint64_t)v15, &qword_1007FAD50);
      }
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v1 setTypingAttributes:isa];
    }
  }
}

char *sub_1005A90BC(void *a1)
{
  if ([v1 isEditable])
  {
    [a1 mutableCopy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10001B284(0, (unint64_t *)&unk_100812590);
    if (swift_dynamicCast())
    {
      if ((uint64_t)[v20 length] < 1) {
        return (char *)v20;
      }
      id v2 = [v20 string];
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v5 = v4;

      uint64_t v6 = sub_1005A86F4(v3, v5);
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      if (!v8) {
        return (char *)v20;
      }
      if (v6 == 10 && v8 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return (char *)v20;
        }
      }
      uint64_t result = (char *)[v20 length];
      if (__OFSUB__(result, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      id v11 = [v20 attributesAtIndex:result - 1 effectiveRange:0];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v12 + 16))
      {
        uint64_t v13 = NSParagraphStyleAttributeName;
        uint64_t v14 = sub_10001B6A4(v13);
        if (v15)
        {
          sub_10001B648(*(void *)(v12 + 56) + 32 * v14, (uint64_t)&v21);
        }
        else
        {
          long long v21 = 0u;
          long long v22 = 0u;
        }
      }
      else
      {
        long long v21 = 0u;
        long long v22 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v22 + 1))
      {
        sub_10001457C((uint64_t)&v21, &qword_1007FAD50);
        return (char *)v20;
      }
      sub_10001B284(0, &qword_1007F8FA8);
      if (swift_dynamicCast())
      {
        [v20 firstLineHeadIndent];
        double v17 = fmod(v16, 1.0) + -0.1;
        [v20 headIndent];
        if (fabs(v17) >= 0.01 || fabs(fmod(v18, 1.0) + -0.1) >= 0.01) {
          goto LABEL_25;
        }
        uint64_t result = (char *)[v20 length];
        if (!__OFSUB__(result, 1))
        {
          [v20 deleteCharactersInRange:result - 1, 1];
LABEL_25:

          return (char *)v20;
        }
        goto LABEL_29;
      }
      return (char *)v20;
    }
  }

  return (char *)a1;
}

void sub_1005A9424()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry];
  if (v1 && (id v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts)) != 0)
  {
    id v3 = v2;
    id v4 = [v3 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v5 = objc_allocWithZone((Class)NSAttributedString);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [v5 initWithString:v6 attributes:0];

    [v0 setAttributedPlaceholder:v9];
  }
  else
  {
    if (qword_1007F76B8 != -1) {
      swift_once();
    }
    id v7 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [v7 initWithString:v8 attributes:0];

    [v0 setAttributedPlaceholder:v9];
  }
}

void sub_1005A95C4(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for CharacterSet();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  char v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v2 textStorage];
  id v12 = [v11 string];

  if (v12)
  {
    id v13 = [v3 selectedRange];
    id v15 = [v12 paragraphRangeForRange:v13, v14];
    id v17 = [v12 substringWithRange:v15, v16];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    v24[0] = v18;
    v24[1] = v20;
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_100014344();
    uint64_t v21 = StringProtocol.trimmingCharacters(in:)();
    unint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    swift_bridgeObjectRelease();
    sub_1005AC0B4(v21, v23, a1, a2);

    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1005A97A4(int a1)
{
  id v2 = v1;
  LODWORD(v68) = a1;
  uint64_t v3 = type metadata accessor for CharacterSet();
  uint64_t v67 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
  *(void *)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor] = 0;

  id v7 = [v1 textStorage];
  id v8 = [v7 string];

  if (!v8)
  {
    __break(1u);
    return;
  }
  id v9 = [v2 selectedRange];
  id v69 = [v8 paragraphRangeForRange:v9, v10];
  uint64_t v70 = v11;
  id v12 = [v8 substringWithRange:];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  uint64_t v16 = NSParagraphStyleAttributeName;
  id v17 = [v2 typingAttributes];
  type metadata accessor for Key(0);
  uint64_t v19 = v18;
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v71 = v19;
  uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v20 + 16) || (uint64_t v21 = sub_10001B6A4(v16), (v22 & 1) == 0))
  {
    long long v76 = 0u;
    long long v75 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_10001B648(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v75);

  swift_bridgeObjectRelease();
  if (!*((void *)&v76 + 1))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)&v75, &qword_1007FAD50);
    goto LABEL_16;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  id v66 = *(id *)&v73[0];
  [*(id *)&v73[0] mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v23 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  uint64_t v65 = v23;
  id v24 = v66;
  id v64 = *(id *)&v73[0];
  uint64_t v25 = &qword_100811F38[25];
  if ((v68 & 1) == 0
    || (*((unsigned char *)v2 + OBJC_IVAR____TtC7Journal14CanvasTextView_removeListsNextClear) & 1) != 0
    || v70 != 1)
  {
    swift_bridgeObjectRelease();
    id v31 = v24;
LABEL_38:
    *((unsigned char *)v2 + v25[156]) = 0;
    uint64_t v34 = v65;
    id v32 = v64;
    goto LABEL_39;
  }
  uint64_t v68 = OBJC_IVAR____TtC7Journal14CanvasTextView_removeListsNextClear;
  *(void *)&long long v75 = v13;
  *((void *)&v75 + 1) = v15;
  static CharacterSet.whitespaces.getter();
  sub_100014344();
  uint64_t v26 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v28) & 0xF;
  uint64_t v30 = v26 & 0xFFFFFFFFFFFFLL;
  uint64_t v25 = qword_100811F38 + 200;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = v30;
  }
  id v31 = v24;
  if (!v29) {
    goto LABEL_38;
  }
  id v32 = v64;
  id v33 = [v64 textLists];
  sub_10001B284(0, &qword_1007FA0C8);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *((unsigned char *)v2 + v68) = 1;
  uint64_t v34 = v65;
LABEL_39:
  sub_10001B284(0, &qword_1007FA0C8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v32 setTextLists:isa];

  [v32 setFirstLineHeadIndent:0.0];
  [v32 setHeadIndent:0.0];
  *((void *)&v76 + 1) = v34;
  *(void *)&long long v75 = v32;
  uint64_t v57 = v16;
  id v58 = v32;
  id v59 = [v2 typingAttributes];
  uint64_t v60 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v74 = v60;
  if (*((void *)&v76 + 1))
  {
    sub_10002102C(&v75, v73);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v72 = v60;
    sub_100599110(v73, v57, isUniquelyReferenced_nonNull_native);
    uint64_t v74 = v72;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001457C((uint64_t)&v75, &qword_1007FAD50);
    sub_1000F1E94((uint64_t)v57, v73);

    sub_10001457C((uint64_t)v73, &qword_1007FAD50);
  }
  Class v62 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setTypingAttributes:v62];

LABEL_16:
  CMTimeFlags v35 = NSForegroundColorAttributeName;
  id v36 = [v2 typingAttributes];
  uint64_t v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v37 + 16) && (uint64_t v38 = sub_10001B6A4(v35), (v39 & 1) != 0))
  {
    sub_10001B648(*(void *)(v37 + 56) + 32 * v38, (uint64_t)&v75);
  }
  else
  {
    long long v76 = 0u;
    long long v75 = 0u;
  }

  swift_bridgeObjectRelease();
  if (*((void *)&v76 + 1))
  {
    uint64_t v40 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (swift_dynamicCast())
    {
      uint64_t v41 = *(void **)&v73[0];
      sub_10001B284(0, (unint64_t *)&unk_100800920);
      if (qword_1007F7200 != -1) {
        swift_once();
      }
      if (static NSObject.== infix(_:_:)())
      {
        uint64_t v42 = qword_1007F7E40;
        unint64_t v43 = v35;
        if (v42 != -1) {
          swift_once();
        }
        *((void *)&v76 + 1) = v40;
        *(void *)&long long v75 = qword_1008124B0;
        id v44 = (id)qword_1008124B0;
        id v45 = [v2 typingAttributes];
        uint64_t v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v74 = v46;
        if (*((void *)&v76 + 1))
        {
          sub_10002102C(&v75, v73);
          char v47 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = v46;
          sub_100599110(v73, v43, v47);
          uint64_t v74 = v72;

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10001457C((uint64_t)&v75, &qword_1007FAD50);
          sub_1000F1E94((uint64_t)v43, v73);

          sub_10001457C((uint64_t)v73, &qword_1007FAD50);
        }
        Class v48 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v2 setTypingAttributes:v48];
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10001457C((uint64_t)&v75, &qword_1007FAD50);
  }
  id v49 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v49 setParagraphSpacingBefore:8.0];
  sub_10044121C();
  sub_10001B284(0, &qword_1007FA0C8);
  Class v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v49 setTextLists:v50];

  sub_100010218(&qword_100802498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 64) = sub_10001B284(0, (unint64_t *)&unk_10080A660);
  *(void *)(inited + 40) = v49;
  uint64_t v52 = v16;
  id v53 = v49;
  sub_100396DBC(inited);
  id v54 = [v2 textStorage];
  Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v54 addAttributes:v55 range:v69];
}

uint64_t sub_1005AA218()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100812490);
  sub_100026A54(v0, (uint64_t)qword_100812490);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

void sub_1005AA31C()
{
  id v0 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v1 = [v0 fontDescriptorWithSymbolicTraits:0x8000];

  if (v1)
  {
    id v2 = [self fontWithDescriptor:v1 size:0.0];
  }
  else
  {
    id v2 = 0;
  }
  qword_1008124A8 = (uint64_t)v2;
}

id sub_1005AA3D0()
{
  id result = [self labelColor];
  qword_1008124B0 = (uint64_t)result;
  return result;
}

void sub_1005AA40C(id a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC7Journal14CanvasTextView_topAccessoryView;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_topAccessoryView];
  if (v5)
  {
    if (a1)
    {
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      id v6 = a1;
      id v7 = v5;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  [a1 removeFromSuperview];
  id v9 = *(void **)&v2[v4];
  if (v9)
  {
    id v10 = v9;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v2 addSubview:v10];
    uint64_t v11 = self;
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1006D6D20;
    id v13 = [v10 topAnchor];
    id v14 = [v2 contentLayoutGuide];
    id v15 = [v14 topAnchor];

    id v16 = [v13 constraintEqualToAnchor:v15];
    *(void *)(v12 + 32) = v16;
    id v17 = [v10 leadingAnchor];
    id v18 = [v2 frameLayoutGuide];
    id v19 = [v18 leadingAnchor];

    id v20 = [v17 constraintEqualToAnchor:v19];
    *(void *)(v12 + 40) = v20;
    id v21 = [v10 trailingAnchor];
    id v22 = [v2 frameLayoutGuide];
    id v23 = [v22 trailingAnchor];

    id v24 = [v21 constraintEqualToAnchor:v23];
    *(void *)(v12 + 48) = v24;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_1008059B0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 activateConstraints:isa];
  }
}

id sub_1005AA728(void *a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor] = 0;
  v5[OBJC_IVAR____TtC7Journal14CanvasTextView_isShowingFormattingController] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14CanvasTextView_topAccessoryView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC7Journal14CanvasTextView_blockQuoteLayerView;
  type metadata accessor for BlockQuoteLayerView();
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v13 = v5;
  *(void *)&v5[v11] = [v12 init];
  v13[OBJC_IVAR____TtC7Journal14CanvasTextView_removeListsNextClear] = 0;

  v24.receiver = v13;
  v24.super_class = (Class)type metadata accessor for CanvasTextView();
  id v14 = [super initWithFrame:a1 textContainer:a2];
  [v14 setPasteDelegate:v14];
  id v15 = self;
  id v16 = v14;
  id v17 = [v15 clearColor];
  [v16 setBackgroundColor:v17];

  sub_1005A88C8();
  uint64_t v18 = qword_1007F7A78;
  id v19 = v16;
  if (v18 != -1) {
    swift_once();
  }
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 setAccessibilityLabel:v20];

  sub_100010218(&qword_1007FBD30);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1006D6270;
  *(void *)(v21 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v21 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v21 + 48) = type metadata accessor for UITraitLegibilityWeight();
  *(void *)(v21 + 56) = &protocol witness table for UITraitLegibilityWeight;
  id v22 = v19;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v22;
}

id sub_1005AAA4C()
{
  if ([v0 isScrollEnabled]) {
    goto LABEL_6;
  }
  id result = [v0 text];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v2 = result;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6) {
    goto LABEL_6;
  }
  id v7 = [v0 attributedPlaceholder];

  if (!v7
    || ([v0 _preferredMaxLayoutWidth],
        double v9 = v8,
        [v0 textContainerInset],
        double v11 = v9 - v10,
        [v0 textContainerInset],
        double v13 = v11 - v12,
        v13 <= 0.0))
  {
LABEL_6:
    v15.receiver = v0;
    v15.super_class = (Class)type metadata accessor for CanvasTextView();
    return [super intrinsicContentSize];
  }
  id result = [v0 _placeholderLabel];
  if (result)
  {
    id v14 = result;
    [result sizeThatFits:v13];

    [v0 textContainerInset];
    return [v0 textContainerInset];
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_1005AAC90(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v13 = (void *)Strong;
    id v14 = *(id *)(Strong + OBJC_IVAR____TtC7Journal14CanvasTextView_blockQuoteLayerView);
    NSString v15 = String._bridgeToObjectiveC()();
    [a1 addRenderingSurface:v14 key:v15 group:1 placement:0];

    (*(void (**)(uint64_t, double, double, double, double))((swift_isaMask & *v13) + 0x128))(a2, a3, a4, a5, a6);
  }
}

void sub_1005AADD0(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  double v13 = *(void (**)(id, id, double, double, double, double))(a1 + 32);
  swift_retain();
  id v15 = a2;
  id v14 = a3;
  v13(v15, v14, a4, a5, a6, a7);
  swift_release();
}

void sub_1005AAE84()
{
  id v1 = v0;
  id v2 = [v0 attributedText];
  if (!v2) {
    return;
  }
  id v69 = v2;
  [v0 frame];
  CGFloat x = CGRectZero.origin.x;
  double y = CGRectZero.origin.y;
  CGFloat width = CGRectZero.size.width;
  v77.origin.CGFloat x = CGRectZero.origin.x;
  v77.origin.double y = y;
  v77.size.CGFloat width = width;
  v77.size.height = CGRectZero.size.height;
  if (CGRectEqualToRect(v76, v77)
    || (id v6 = [v0 textLayoutManager]) == 0)
  {
    char v39 = v69;
LABEL_19:

    return;
  }
  id v68 = v6;
  id v7 = [v0 textLayoutManager];
  if (!v7
    || (double v8 = v7,
        id v9 = [v7 textViewportLayoutController],
        v8,
        id v10 = [v9 viewportRange],
        v9,
        !v10))
  {

    char v39 = v68;
    goto LABEL_19;
  }
  id v11 = v10;
  id v12 = [v68 documentRange];
  id v13 = [v12 location];

  id v14 = [v68 offsetFromLocation:v13 toLocation:[v11 location]];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  id v15 = [v68 documentRange];
  id v16 = [v15 location];

  id v17 = [v68 offsetFromLocation:v16 toLocation:[v11 endLocation]];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  int64_t v18 = v17 - v14;
  if (__OFSUB__(v17, v14))
  {
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }

  id v19 = *(char **)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_blockQuoteLayerView];
  NSString v20 = &v19[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_quoteAreas];
  swift_beginAccess();
  *(void *)NSString v20 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  [v1 textContainerInset];
  *(void *)&v19[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_barInset] = v21;
  id v22 = *(void **)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_topAccessoryView];
  if (v22)
  {
    [v22 frame];
    *(void *)&v19[OBJC_IVAR____TtC7Journal19BlockQuoteLayerView_topInset] = v23;
  }
  id v24 = [v1 _placeholderLabel];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 setAlpha:1.0];
  }
  if ((uint64_t)[v69 length] < (uint64_t)v17)
  {
    uint64_t v26 = [v69 length];
    int64_t v18 = v26 - v14;
    if (__OFSUB__(v26, v14)) {
      goto LABEL_49;
    }
  }
  id v27 = [v1 textStorage];
  id v28 = [v27 length];

  if (v28)
  {
    id v29 = [v1 textStorage];
    id v30 = [v29 string];

    if (!v30)
    {
LABEL_51:
      __break(1u);
      return;
    }
    id v31 = [v1 textStorage];
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = v30;
    v33[4] = v69;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1005B4EF0;
    *(void *)(v34 + 24) = v33;
    uint64_t v73 = sub_1005B4FCC;
    uint64_t v74 = v34;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v72 = sub_1005A7B04;
    *((void *)&v72 + 1) = &unk_1007B6C10;
    CMTimeFlags v35 = _Block_copy(&aBlock);
    id v36 = v30;
    id v37 = v69;
    swift_retain();
    swift_release();
    [v31 enumerateAttribute:NSParagraphStyleAttributeName inRange:v14 options:v18 usingBlock:0];

    _Block_release(v35);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      [v19 setNeedsDisplay];
      swift_release();

      return;
    }
    goto LABEL_48;
  }
  id v40 = [v1 selectedTextRange];
  if (v40)
  {
    uint64_t v41 = v40;
    id v42 = [v40 start];

    if (v42)
    {
      id v68 = v19;
      unint64_t v43 = NSParagraphStyleAttributeName;
      id v44 = [v1 typingAttributes];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      uint64_t v45 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v45 + 16) && (uint64_t v46 = sub_10001B6A4(v43), (v47 & 1) != 0))
      {
        sub_10001B648(*(void *)(v45 + 56) + 32 * v46, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v72 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v72 + 1))
      {
        sub_10001B284(0, &qword_1007F8FA8);
        if (swift_dynamicCast())
        {
          CGFloat v48 = v70.origin.x;
          id v49 = [v1 beginningOfDocument];
          id v50 = [v1 offsetFromPosition:v49 toPosition:v42];

          [*(id *)&v70.origin.x firstLineHeadIndent];
          double v52 = fmod(v51, 1.0) + -0.1;
          [*(id *)&v70.origin.x headIndent];
          if (fabs(v52) < 0.01 && fabs(fmod(v53, 1.0) + -0.1) < 0.01)
          {
            id v54 = [v1 textStorage];
            id v55 = [v54 length];

            if ((uint64_t)v55 >= (uint64_t)v50)
            {
              id v56 = [v1 textLayoutManager];
              if (v56)
              {
                uint64_t v57 = v56;
                id v58 = sub_10001357C((uint64_t)v50, 0);
                if (v58)
                {
                  id v59 = v58;
                  CGSize size = CGRectNull.size;
                  v70.origin = CGRectNull.origin;
                  v70.CGSize size = size;
                  uint64_t v61 = swift_allocObject();
                  *(void *)(v61 + 16) = &v70;
                  uint64_t v62 = swift_allocObject();
                  *(void *)(v62 + 16) = sub_1005B4F1C;
                  *(void *)(v62 + 24) = v61;
                  uint64_t v73 = sub_1005B4F34;
                  uint64_t v74 = v62;
                  *(void *)&long long aBlock = _NSConcreteStackBlock;
                  *((void *)&aBlock + 1) = 1107296256;
                  *(void *)&long long v72 = sub_1005A87A0;
                  *((void *)&v72 + 1) = &unk_1007B6C88;
                  uint64_t v63 = _Block_copy(&aBlock);
                  swift_retain();
                  swift_release();
                  [v57 enumerateTextSegmentsInRange:v59 type:0 options:0 usingBlock:v63];
                  _Block_release(v63);
                  LOBYTE(v63) = swift_isEscapingClosureAtFileLocation();
                  swift_release();
                  if (v63)
                  {
LABEL_50:
                    __break(1u);
                    goto LABEL_51;
                  }
                  if (!CGRectIsNull(v70))
                  {
                    double y = v70.origin.y;
                    CGFloat x = v70.origin.x;
                    CGFloat width = v70.size.width;
                  }

                  swift_release();
                }
                else
                {

                  CGFloat x = 0.0;
                  double y = 0.0;
                  CGFloat width = 0.0;
                }
              }
            }
            id v64 = *(void **)&v1[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
            id v65 = v64;
            sub_1002F667C(v64, x, y, width);

            id v66 = [v1 _placeholderLabel];
            if (v66)
            {
              id v67 = v66;
              [v67 setAlpha:0.0];
            }
          }
        }
        else
        {
        }
      }
      else
      {

        sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
      }
    }
  }
  [v19 setNeedsDisplay:v68];
}

void sub_1005AB8E8()
{
  id v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for CanvasTextView();
  [super deleteBackward];
  id v2 = [v0 textStorage];
  uint64_t v3 = (uint64_t)[v2 length];

  if (v3 < 1)
  {
    id v24 = NSParagraphStyleAttributeName;
    id v25 = [v1 typingAttributes];
    type metadata accessor for Key(0);
    sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
    uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v26 + 16) && (uint64_t v27 = sub_10001B6A4(v24), (v28 & 1) != 0))
    {
      sub_10001B648(*(void *)(v26 + 56) + 32 * v27, (uint64_t)&v33);
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
    }

    swift_bridgeObjectRelease();
    if (!*((void *)&v34 + 1))
    {
      sub_10001457C((uint64_t)&v33, &qword_1007FAD50);
      return;
    }
    sub_10001B284(0, &qword_1007F8FA8);
    if ((swift_dynamicCast() & 1) == 0) {
      return;
    }
    id v10 = v32;
    id v29 = [v32 textLists];
    sub_10001B284(0, &qword_1007FA0C8);
    unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v30 >> 62))
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
      swift_bridgeObjectRelease();
      if (v31 >= 1) {
        sub_1005A97A4(0);
      }

      return;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  id v4 = [v1 textStorage];
  id v5 = [v4 string];

  if (!v5)
  {
    __break(1u);
    goto LABEL_29;
  }
  id v6 = [v1 selectedRange];
  id v8 = [v5 paragraphRangeForRange:v6, v7];
  id v10 = v9;

  if (__OFADD__(v8, v10))
  {
    __break(1u);
    goto LABEL_27;
  }
  id v11 = [v1 textStorage];
  id v12 = (char *)[v11 length];

  if ((uint64_t)v12 >= (uint64_t)&v10[(void)v8])
  {
    if (!v10)
    {
LABEL_12:
      sub_1005A97A4(1);
      return;
    }
    if (v10 == (char *)1)
    {
      id v13 = [v1 textStorage];
      id v14 = [v13 attributedSubstringFromRange:v8, 1];

      id v15 = [v14 string];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;

      unint64_t v19 = sub_1005A86F4(v16, v18);
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (v21)
      {
        unint64_t v22 = sub_1005B3994(v19, v21);
        if ((v22 & 0x100000000) == 0)
        {
          int v23 = v22;
          swift_bridgeObjectRelease();
          if ((v23 - 14) > 0xFFFFFFFB || (v23 - 8232) < 2 || v23 == 133) {
            goto LABEL_12;
          }
          return;
        }
LABEL_29:
        __break(1u);
      }
    }
  }
}

void sub_1005ABD20()
{
  id v1 = [v0 textStorage];
  id v2 = [v1 string];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v3 >= 1)
  {
    id v4 = [v0 textStorage];
    id v5 = [v4 string];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;

    uint64_t v9 = sub_1005A86F4(v6, v8);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      if (v9 == 10 && v11 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          return;
        }
      }
      uint64_t v13 = String.count.getter();
      id v14 = [v0 textStorage];
      id v15 = [v0 typingAttributes];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v0 selectedRange];
      [v14 setAttributes:isa range:v17, v18];

      id v19 = [v0 textStorage];
      id v20 = [v0 typingAttributes];
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      Class v23 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v21 = [v0 textStorage];
      unint64_t v22 = (char *)[v21 length];

      if (__OFSUB__(v22, v13))
      {
        __break(1u);
      }
      else
      {
        [v19 setAttributes:v23 range:&v22[-v13] length:v13];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1005AC0B4(uint64_t a1, unint64_t a2, id a3, uint64_t a4)
{
  if (!a2) {
    return;
  }
  id v5 = v4;
  id v8 = sub_100013CAC(a1, a2);
  if (!v8) {
    return;
  }
  id v10 = v8;
  uint64_t v11 = v9;
  char v12 = NSParagraphStyleAttributeName;
  id v13 = [v4 typingAttributes];
  type metadata accessor for Key(0);
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v14 + 16) || (uint64_t v15 = sub_10001B6A4(v12), (v16 & 1) == 0))
  {
    long long v61 = 0u;
    long long v62 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  sub_10001B648(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v61);

  swift_bridgeObjectRelease();
  if (!*((void *)&v62 + 1))
  {
LABEL_25:

    sub_10001457C((uint64_t)&v61, &qword_1007FAD50);
    return;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return;
  }
  [v59[0] mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v17 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return;
  }
  id v56 = v59[0];
  uint64_t v57 = v17;
  id v18 = [v5 textStorage];
  id v19 = [v18 string];

  if (!v19)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v20 = [v19 paragraphRangeForRange:a3, a4];
  unint64_t v22 = v21;

  id v58 = (char *)v20;
  id v55 = &v22[(void)v20];
  if (__OFADD__(v20, v22))
  {
    __break(1u);
    goto LABEL_32;
  }
  id v23 = [v5 textStorage];
  id v24 = [v23 string];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = String.count.getter();
  swift_bridgeObjectRelease();
  id v26 = [v5 textStorage];
  id v27 = [v26 string];

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v30 = v29;

  unint64_t v31 = sub_1005A86F4(v28, v30);
  a3 = v32;
  swift_bridgeObjectRelease();
  if (a3)
  {
    unint64_t v33 = sub_1005B3994(v31, (unint64_t)a3);
    if ((v33 & 0x100000000) != 0)
    {
LABEL_36:
      __break(1u);
      return;
    }
    int v34 = v33;
    swift_bridgeObjectRelease();
    if ((v34 - 14) <= 0xFFFFFFFB && (v34 - 8232) >= 2 && v34 != 133) {
      goto LABEL_16;
    }
  }
  if ((char *)v25 == v55)
  {
LABEL_16:
    id v35 = [v5 textStorage];
    id v36 = [v35 attributesAtIndex:v58 effectiveRange:0];

    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    id v55 = (char *)[v5 textStorage];
    id v37 = objc_allocWithZone((Class)NSAttributedString);
    NSString v38 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    a3 = [v37 initWithString:v38 attributes:isa];

    [v55 appendAttributedString:a3];
  }
  id v40 = [v5 textStorage];
  unint64_t v22 = (char *)[v40 length];

  if (__OFADD__(v58, v11))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((uint64_t)v22 >= (uint64_t)&v58[v11])
  {
    id v41 = [v5 textStorage];
    [v41 deleteCharactersInRange:v58, v11];
  }
  [v5 setSelectedRange:v58];
  id v42 = [v5 textStorage];
  id v43 = [v42 string];

  if (!v43) {
    goto LABEL_35;
  }
  unint64_t v22 = [v43 paragraphRangeForRange:v58];
  a3 = v44;

  id v10 = v10;
  id v45 = [v59[0] textLists];
  sub_10001B284(0, &qword_1007FA0C8);
  uint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v61 = v46;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_33:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v59[0] setTextLists:v47];

  id v48 = [v5 textStorage];
  [v48 addAttribute:v12 value:v59[0] range:v22];

  *((void *)&v62 + 1) = v57;
  *(id *)&long long v61 = v59[0];
  id v49 = v12;
  id v50 = v59[0];
  id v51 = [v5 typingAttributes];
  uint64_t v52 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v60 = v52;
  if (*((void *)&v62 + 1))
  {
    sub_10002102C(&v61, v59);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100599110(v59, v49, isUniquelyReferenced_nonNull_native);
    uint64_t v60 = v52;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001457C((uint64_t)&v61, &qword_1007FAD50);
    sub_1000F1E94((uint64_t)v49, v59);

    sub_10001457C((uint64_t)v59, &qword_1007FAD50);
  }
  Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 setTypingAttributes:v54];
}

double sub_1005AC988()
{
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for CanvasTextView();
  [super accessibilityFrame];
  double v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC7Journal14CanvasTextView_topAccessoryView];
  if (v9)
  {
    [v9 accessibilityFrame];
    v27.origin.CGFloat x = v2;
    v27.origin.CGFloat y = v4;
    v27.size.CGFloat width = v6;
    v27.size.CGFloat height = v8;
    CGRect v23 = CGRectIntersection(v22, v27);
    CGFloat x = v23.origin.x;
    CGFloat y = v23.origin.y;
    CGFloat width = v23.size.width;
    CGFloat height = v23.size.height;
    if (!CGRectIsNull(v23))
    {
      *(double *)rect = v2;
      v24.origin.CGFloat x = x;
      v24.origin.CGFloat y = y;
      v24.size.CGFloat width = width;
      v24.size.CGFloat height = height;
      double v14 = CGRectGetHeight(v24);
      if (qword_1007F7380 != -1)
      {
        double v18 = v14;
        swift_once();
        double v14 = v18;
      }
      double v15 = *(double *)&qword_10083D990;
      if (*(double *)&qword_10083D990 >= v14)
      {
        return *(double *)rect;
      }
      else
      {
        v25.origin.CGFloat x = x;
        v25.origin.CGFloat y = y;
        v25.size.CGFloat width = width;
        v25.size.CGFloat height = height;
        CGFloat v16 = CGRectGetHeight(v25) - v15;
        memset(&slice, 0, sizeof(slice));
        memset(&rect[1], 0, 32);
        *(void *)&v26.origin.CGFloat x = rect[0];
        v26.origin.CGFloat y = v4;
        v26.size.CGFloat width = v6;
        v26.size.CGFloat height = v8;
        CGRectDivide(v26, &slice, (CGRect *)&rect[1], v16, CGRectMinYEdge);
        return *(double *)&rect[1];
      }
    }
  }
  return v2;
}

id sub_1005ACB98(uint64_t a1, uint64_t a2)
{
  if (static Selector.== infix(_:_:)())
  {
    unsigned int v5 = [v2 isEditing];
    sub_10001B220(a2, (uint64_t)v38, &qword_1007FAD50);
    if (v5)
    {
      sub_10001B220((uint64_t)v38, (uint64_t)v34, &qword_1007FAD50);
      uint64_t v6 = v35;
      if (v35)
      {
        double v7 = sub_10002E0BC(v34, v35);
        uint64_t v8 = *(void *)(v6 - 8);
        __n128 v9 = __chkstk_darwin(v7);
        uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
        uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v34);
      }
      else
      {
        uint64_t v12 = 0;
      }
      uint64_t v28 = (objc_class *)type metadata accessor for CanvasTextView();
      v33.receiver = v2;
      v33.super_class = v28;
      [super canPerformAction:a1 withSender:v12];
      swift_unknownObjectRelease();
    }
    else
    {
      id v20 = 0;
    }
    sub_10001457C((uint64_t)v38, &qword_1007FAD50);
  }
  else if (static Selector.== infix(_:_:)())
  {
    sub_10001B220(a2, (uint64_t)v38, &qword_1007FAD50);
    uint64_t v13 = v39;
    if (v39)
    {
      double v14 = sub_10002E0BC(v38, v39);
      uint64_t v15 = *(void *)(v13 - 8);
      __n128 v16 = __chkstk_darwin(v14);
      double v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v15 + 16))(v18, v16);
      uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v38);
    }
    else
    {
      uint64_t v19 = 0;
    }
    unint64_t v29 = (objc_class *)type metadata accessor for CanvasTextView();
    v36.receiver = v2;
    v36.super_class = v29;
    [super canPerformAction:a1 withSender:v19];
    swift_unknownObjectRelease();
    if (v20)
    {
      id v30 = [self generalPasteboard];
      id v20 = [v30 hasStrings];
    }
  }
  else
  {
    sub_10001B220(a2, (uint64_t)v38, &qword_1007FAD50);
    uint64_t v21 = v39;
    if (v39)
    {
      CGRect v22 = sub_10002E0BC(v38, v39);
      uint64_t v23 = *(void *)(v21 - 8);
      __n128 v24 = __chkstk_darwin(v22);
      CGRect v26 = (char *)&v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v23 + 16))(v26, v24);
      uint64_t v27 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v21);
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v38);
    }
    else
    {
      uint64_t v27 = 0;
    }
    unint64_t v31 = (objc_class *)type metadata accessor for CanvasTextView();
    v37.receiver = v2;
    v37.super_class = v31;
    [super canPerformAction:a1 withSender:v27];
    swift_unknownObjectRelease();
  }
  return v20;
}

id sub_1005AD074()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasTextView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasTextView()
{
  return self;
}

void sub_1005AD138(id a1, uint64_t a2)
{
  double v3 = v2;
  uint64_t v6 = NSParagraphStyleAttributeName;
  id v7 = [v2 typingAttributes];
  type metadata accessor for Key(0);
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v8 + 16) || (uint64_t v9 = sub_10001B6A4(v6), (v10 & 1) == 0))
  {
    long long v60 = 0u;
    long long v59 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_10001B648(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v59);

  swift_bridgeObjectRelease();
  if (!*((void *)&v60 + 1))
  {
LABEL_9:
    sub_10001457C((uint64_t)&v59, &qword_1007FAD50);
    return;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v11 = *(void **)&v57[0];
  id v12 = [v3 textStorage];
  id v13 = [v12 length];

  if (v13 == a1 && !a2)
  {
    id v14 = [v3 textStorage];
    [v14 beginEditing];

    id v15 = [v3 textStorage];
    id v16 = [v3 typingAttributes];
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v17 = objc_allocWithZone((Class)NSAttributedString);
    NSString v18 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v20 = [v17 initWithString:v18 attributes:isa];

    [v15 appendAttributedString:v20];
    id v21 = [v3 textStorage];
    [v21 endEditing];

    return;
  }
  [*(id *)&v57[0] firstLineHeadIndent];
  double v23 = fmod(v22, 1.0) + -0.1;
  [*(id *)&v57[0] headIndent];
  if (fabs(v23) >= 0.01 || fabs(fmod(v24, 1.0) + -0.1) >= 0.01) {
    goto LABEL_33;
  }
  uint64_t v25 = NSForegroundColorAttributeName;
  id v26 = [v3 typingAttributes];
  uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v27 + 16) && (uint64_t v28 = sub_10001B6A4(v25), (v29 & 1) != 0))
  {
    sub_10001B648(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v59);
  }
  else
  {
    long long v60 = 0u;
    long long v59 = 0u;
  }

  swift_bridgeObjectRelease();
  if (*((void *)&v60 + 1))
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (swift_dynamicCast())
    {
      id v30 = *(void **)&v57[0];
      goto LABEL_22;
    }
  }
  else
  {
    sub_10001457C((uint64_t)&v59, &qword_1007FAD50);
  }
  id v30 = 0;
LABEL_22:
  if (qword_1007F7E40 == -1)
  {
    if (v30) {
      goto LABEL_24;
    }
LABEL_33:

    return;
  }
  swift_once();
  if (!v30) {
    goto LABEL_33;
  }
LABEL_24:
  unint64_t v31 = (void *)qword_1008124B0;
  uint64_t v32 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  id v33 = v31;
  id v34 = v30;
  char v35 = static NSObject.== infix(_:_:)();

  if ((v35 & 1) == 0) {
    goto LABEL_33;
  }
  id v36 = [v3 textStorage];
  id v37 = [v36 string];

  if (v37)
  {
    id v38 = [v3 selectedRange];
    id v40 = [v37 paragraphRangeForRange:v38, v39];
    uint64_t v55 = v41;
    id v56 = v40;

    uint64_t v42 = qword_1007F7200;
    id v43 = v25;
    if (v42 != -1) {
      swift_once();
    }
    *((void *)&v60 + 1) = v32;
    *(void *)&long long v59 = qword_10083D7C8;
    id v44 = (id)qword_10083D7C8;
    id v45 = [v3 typingAttributes];
    uint64_t v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v58 = v46;
    if (*((void *)&v60 + 1))
    {
      sub_10002102C(&v59, v57);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_100599110(v57, v43, isUniquelyReferenced_nonNull_native);
      uint64_t v58 = v46;

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001457C((uint64_t)&v59, &qword_1007FAD50);
      sub_1000F1E94((uint64_t)v43, v57);

      sub_10001457C((uint64_t)v57, &qword_1007FAD50);
    }
    Class v48 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 setTypingAttributes:v48];

    id v49 = [v3 textStorage];
    sub_100010218(&qword_100802498);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    id v51 = (void *)qword_10083D7C8;
    *(void *)(inited + 64) = v32;
    *(void *)(inited + 32) = v43;
    *(void *)(inited + 40) = v51;
    uint64_t v52 = v43;
    id v53 = v51;
    sub_100396DBC(inited);
    Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v49 addAttributes:v54 range:v56];
  }
  else
  {
    __break(1u);
  }
}

void sub_1005AD878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6)
{
  sub_10001B220(a1, (uint64_t)v41, &qword_1007FAD50);
  if (!v42)
  {
    sub_10001457C((uint64_t)v41, &qword_1007FAD50);
    return;
  }
  uint64_t v10 = sub_10001B284(0, &qword_1007F8FA8);
  if (swift_dynamicCast())
  {
    [v40 mutableCopy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10001B284(0, (unint64_t *)&unk_10080A660);
    if ((swift_dynamicCast() & 1) == 0)
    {

      return;
    }
    uint64_t v11 = v40;
    id v12 = [v40 textLists];
    sub_10001B284(0, &qword_1007FA0C8);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v14)
    {

      *a5 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_41:
      swift_bridgeObjectRelease();
      return;
    }
    if ((unint64_t)*a5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_40;
      }
    }
    else if (!*(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_40;
    }
    unint64_t v15 = *a5;
    if ((unint64_t)*a5 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v16)
      {
LABEL_39:
        swift_bridgeObjectRelease();
LABEL_40:
        id v36 = [v11 textLists];
        uint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        *a5 = v37;
        goto LABEL_41;
      }
    }
    if ((v15 & 0xC000000000000001) != 0)
    {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_37;
      }
      id v17 = *(id *)(v15 + 32);
    }
    id v39 = v17;
    swift_bridgeObjectRelease();
    id v18 = [v40 textLists];
    unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v15 >> 62))
    {
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        if ((v15 & 0xC000000000000001) != 0)
        {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v19 = *(id *)(v15 + 32);
        }
        id v20 = v19;
        swift_bridgeObjectRelease();
        id v21 = [v39 markerFormat];
        id v38 = v20;
        id v22 = [v20 markerFormat];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;
        if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26)
        {

          swift_bridgeObjectRelease_n();
LABEL_26:
          swift_bridgeObjectRetain();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v40 setTextLists:isa];

          [v40 copy];
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
          if (swift_dynamicCast())
          {
            id v29 = [a6 textStorage];
            sub_100010218(&qword_100802498);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1006D6280;
            *(void *)(inited + 64) = v10;
            *(void *)(inited + 32) = NSParagraphStyleAttributeName;
            *(void *)(inited + 40) = v40;
            unint64_t v31 = NSParagraphStyleAttributeName;
            id v32 = v40;
            sub_100396DBC(inited);
            type metadata accessor for Key(0);
            sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
            Class v33 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v29 addAttributes:v33 range:a2, a3];
          }
          return;
        }
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_26;
        }

        uint64_t v11 = v40;
        goto LABEL_40;
      }
      goto LABEL_38;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_16;
    }
LABEL_38:

    goto LABEL_39;
  }
}

void sub_1005ADEB8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v13 = (char *)Strong;
    sub_10001B220(a1, (uint64_t)&aBlock, &qword_1007FAD50);
    if (*((void *)&v135 + 1))
    {
      CGFloat v14 = COERCE_DOUBLE(sub_10001B284(0, &qword_1007F8FA8));
      if (swift_dynamicCast())
      {
        [*(id *)&v133.origin.x firstLineHeadIndent];
        double v16 = fmod(v15, 1.0) + -0.1;
        [*(id *)&v133.origin.x headIndent];
        if (fabs(v16) < 0.01 && fabs(fmod(v17, 1.0) + -0.1) < 0.01)
        {
          CGFloat x = v133.origin.x;
          v132[0] = a2;
          v132[1] = (id)a3;
          id v18 = [v13 textStorage];
          id v19 = [v18 attributesAtIndex:a2 effectiveRange:v132];

          type metadata accessor for Key(0);
          sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
          uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          id v21 = sub_1005B3E1C(v20);
          swift_bridgeObjectRelease();
          id v22 = &a2[a3];
          id v23 = [v13 textStorage];
          uint64_t v24 = &stru_1007D7000;
          uint64_t v25 = (char *)[v23 length];

          if ((uint64_t)v25 < (uint64_t)&a2[a3]
            || (id v26 = [v13 textLayoutManager]) == 0)
          {
            double v33 = CGRectZero.origin.x;
            double y = CGRectZero.origin.y;
            double width = CGRectZero.size.width;
            double height = CGRectZero.size.height;
            if (!__OFADD__(a2, a3)) {
              goto LABEL_41;
            }
LABEL_114:
            __break(1u);
            goto LABEL_115;
          }
          char v27 = v26;
          id v23 = v26;
          id v126 = sub_10001357C((uint64_t)a2, a3);
          if (!v126)
          {

            double v33 = 0.0;
            double y = 0.0;
            double width = 0.0;
            double height = 0.0;
            goto LABEL_112;
          }
          id v125 = &a2[a3];
          uint64_t v128 = v21;
          CGSize size = CGRectNull.size;
          v133.origin = CGRectNull.origin;
          v133.CGSize size = size;
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = &v133;
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = sub_1005B4FC8;
          *(void *)(v30 + 24) = v29;
          char v136 = sub_1005B5048;
          uint64_t v137 = v30;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v135 = sub_1005A87A0;
          *((void *)&v135 + 1) = &unk_1007B6DF0;
          unint64_t v31 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          id v23 = v27;
          [v27 enumerateTextSegmentsInRange:v126 type:0 options:0 usingBlock:v31];
          _Block_release(v31);
          LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v31 & 1) == 0)
          {
            BOOL IsNull = CGRectIsNull(v133);
            if (IsNull) {
              double v33 = CGRectZero.origin.x;
            }
            else {
              double v33 = v133.origin.x;
            }
            if (IsNull) {
              double y = CGRectZero.origin.y;
            }
            else {
              double y = v133.origin.y;
            }
            if (IsNull) {
              double width = CGRectZero.size.width;
            }
            else {
              double width = v133.size.width;
            }
            if (IsNull) {
              double height = CGRectZero.size.height;
            }
            else {
              double height = v133.size.height;
            }

            swift_release();
            id v21 = v128;
            id v22 = &a2[a3];
LABEL_112:
            uint64_t v24 = &stru_1007D7000;
            if (!__OFADD__(a2, a3))
            {
LABEL_41:
              if (v22 == objc_msgSend(v13, "selectedRange", v125))
              {
                unint64_t v130 = v21;
                uint64_t v55 = NSParagraphStyleAttributeName;
                id v56 = [v13 typingAttributes];
                uint64_t v57 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                if (*(void *)(v57 + 16) && (uint64_t v58 = sub_10001B6A4(v55), (v59 & 1) != 0))
                {
                  sub_10001B648(*(void *)(v57 + 56) + 32 * v58, (uint64_t)&aBlock);
                }
                else
                {
                  long long aBlock = 0u;
                  long long v135 = 0u;
                }
                id v21 = v130;

                swift_bridgeObjectRelease();
                if (*((void *)&v135 + 1))
                {
                  if (swift_dynamicCast())
                  {
                    CGFloat v60 = v133.origin.x;
                    [*(id *)&v133.origin.x firstLineHeadIndent];
                    double v62 = fmod(v61, 1.0) + -0.1;
                    [*(id *)&v60 headIndent];
                    if (fabs(v62) >= 0.01) {
                      goto LABEL_118;
                    }
                    if (fabs(fmod(v63, 1.0) + -0.1) >= 0.01) {
                      goto LABEL_118;
                    }
                    id v64 = [a6 paragraphRangeForRange:a2, a3];
                    id v66 = [a6 substringWithRange:v64, v65];
                    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    unint64_t v69 = v68;

                    unint64_t v70 = sub_1005A86F4(v67, v69);
                    unint64_t v72 = v71;
                    swift_bridgeObjectRelease();
                    if (!v72) {
                      goto LABEL_118;
                    }
                    unint64_t v73 = sub_1005B3994(v70, v72);
                    if ((v73 & 0x100000000) == 0)
                    {
                      int v74 = v73;
                      swift_bridgeObjectRelease();
                      if ((v74 - 14) <= 0xFFFFFFFB && (v74 - 8232) >= 2 && v74 != 133) {
                        goto LABEL_118;
                      }
                      long long v75 = (char *)[v13 selectedRange];
                      uint64_t v77 = v76;
                      uint64_t v78 = &v75[v76];
                      id v79 = [v13 textStorage];
                      uint64_t v80 = (char *)[v79 v24[79].types];

                      if ((uint64_t)v80 >= (uint64_t)v78
                        && (id v81 = [v13 textLayoutManager]) != 0)
                      {
                        uint64_t v82 = v81;
                        id v83 = sub_10001357C((uint64_t)v75, v77);
                        if (v83)
                        {
                          uint64_t v84 = v83;
                          CGSize v85 = CGRectNull.size;
                          v133.origin = CGRectNull.origin;
                          v133.CGSize size = v85;
                          uint64_t v86 = swift_allocObject();
                          *(void *)(v86 + 16) = &v133;
                          uint64_t v87 = swift_allocObject();
                          *(void *)(v87 + 16) = sub_1005B4FC8;
                          *(void *)(v87 + 24) = v86;
                          char v136 = sub_1005B5048;
                          uint64_t v137 = v87;
                          *(void *)&long long aBlock = _NSConcreteStackBlock;
                          *((void *)&aBlock + 1) = 1107296256;
                          *(void *)&long long v135 = sub_1005A87A0;
                          *((void *)&v135 + 1) = &unk_1007B6D78;
                          uint64_t v88 = _Block_copy(&aBlock);
                          swift_retain();
                          swift_release();
                          [v82 enumerateTextSegmentsInRange:v84 type:0 options:0 usingBlock:v88];
                          _Block_release(v88);
                          LOBYTE(v88) = swift_isEscapingClosureAtFileLocation();
                          swift_release();
                          if ((v88 & 1) == 0)
                          {
                            BOOL v89 = CGRectIsNull(v133);
                            if (v89) {
                              double v90 = CGRectZero.origin.x;
                            }
                            else {
                              double v90 = v133.origin.x;
                            }
                            if (v89) {
                              double v91 = CGRectZero.origin.y;
                            }
                            else {
                              double v91 = v133.origin.y;
                            }
                            if (v89) {
                              double v92 = CGRectZero.size.width;
                            }
                            else {
                              double v92 = v133.size.width;
                            }
                            if (v89) {
                              double v93 = CGRectZero.size.height;
                            }
                            else {
                              double v93 = v133.size.height;
                            }

                            swift_release();
                            goto LABEL_117;
                          }
                          __break(1u);
                          goto LABEL_124;
                        }

                        double v90 = 0.0;
                        double v91 = 0.0;
                        double v92 = 0.0;
                        double v93 = 0.0;
                      }
                      else
                      {
                        double v90 = CGRectZero.origin.x;
                        double v91 = CGRectZero.origin.y;
                        double v92 = CGRectZero.size.width;
                        double v93 = CGRectZero.size.height;
                      }
LABEL_117:
                      v138.origin.CGFloat x = v33;
                      v138.origin.double y = y;
                      v138.size.double width = width;
                      v138.size.double height = height;
                      v140.origin.CGFloat x = v90;
                      v140.origin.double y = v91;
                      v140.size.double width = v92;
                      v140.size.double height = v93;
                      CGRect v139 = CGRectUnion(v138, v140);
                      double v33 = v139.origin.x;
                      double y = v139.origin.y;
                      double width = v139.size.width;
LABEL_118:

                      id v21 = v130;
                      goto LABEL_119;
                    }
LABEL_124:
                    __break(1u);
                    return;
                  }
                }
                else
                {
                  sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
                }
              }
LABEL_119:
              id v124 = *(id *)&v13[OBJC_IVAR____TtC7Journal14CanvasTextView_blockQuoteLayerView];
              sub_1002F667C(v21, v33, y, width);

              return;
            }
            goto LABEL_114;
          }
          __break(1u);
LABEL_122:
          __break(1u);
        }
      }
    }
    else
    {
      sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
    }
    id v37 = [v13 selectedTextRange];
    if (v37)
    {
      id v38 = v37;
      id v39 = (char *)[v37 start];

      if (v39)
      {
        id v40 = NSParagraphStyleAttributeName;
        id v41 = [v13 typingAttributes];
        type metadata accessor for Key(0);
        sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
        uint64_t v42 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v42 + 16) && (uint64_t v43 = sub_10001B6A4(v40), (v44 & 1) != 0))
        {
          sub_10001B648(*(void *)(v42 + 56) + 32 * v43, (uint64_t)&aBlock);
        }
        else
        {
          long long aBlock = 0u;
          long long v135 = 0u;
        }

        swift_bridgeObjectRelease();
        if (!*((void *)&v135 + 1))
        {

          sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
          return;
        }
        sub_10001B284(0, &qword_1007F8FA8);
        if ((swift_dynamicCast() & 1) == 0)
        {

LABEL_39:
          return;
        }
        CGFloat v129 = v133.origin.x;
        id v45 = [v13 beginningOfDocument];
        uint64_t v46 = (uint64_t)[v13 offsetFromPosition:v45 toPosition:v39];

        uint64_t v127 = v46;
        uint64_t v47 = v46 - 1;
        if (v46 >= 1)
        {
          *(void *)&v133.origin.CGFloat x = [a6 paragraphRangeForRange:v47];
          v133.origin.double y = v48;
          id v49 = [v13 textStorage];
          id v50 = [v49 attributesAtIndex:*(void *)&v133.origin.x effectiveRange:&v133];

          uint64_t v51 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
          if (*(void *)(v51 + 16))
          {
            uint64_t v52 = v40;
            uint64_t v53 = sub_10001B6A4(v52);
            if (v54)
            {
              sub_10001B648(*(void *)(v51 + 56) + 32 * v53, (uint64_t)&aBlock);
            }
            else
            {
              long long aBlock = 0u;
              long long v135 = 0u;
            }
          }
          else
          {
            long long aBlock = 0u;
            long long v135 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v135 + 1))
          {
            if (swift_dynamicCast())
            {
              [v132[0] firstLineHeadIndent];
              double v95 = fmod(v94, 1.0) + -0.1;
              [v132[0] headIndent];
              long double v97 = v96;

              double v98 = fmod(v97, 1.0);
              if (fabs(v95) < 0.01 && fabs(v98 + -0.1) < 0.01)
              {

                goto LABEL_39;
              }
            }
          }
          else
          {
            sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
          }
        }
        id v99 = [a7 string:v47];
        uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v102 = v101;

        uint64_t v103 = sub_1005A86F4(v100, v102);
        uint64_t v105 = v104;
        swift_bridgeObjectRelease();
        if (v105)
        {
          if (v103 == 10 && v105 == 0xE100000000000000) {
            char v106 = 1;
          }
          else {
            char v106 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          CGFloat v14 = v129;
          id v22 = v39;
          swift_bridgeObjectRelease();
        }
        else
        {
          char v106 = 0;
          CGFloat v14 = v129;
          id v22 = v39;
        }
        [*(id *)&v14 firstLineHeadIndent];
        double v108 = fmod(v107, 1.0) + -0.1;
        [*(id *)&v14 headIndent];
        if (fabs(v108) < 0.01 && (v106 & 1) != 0 && fabs(fmod(v109, 1.0) + -0.1) < 0.01)
        {
          id v110 = [v13 textStorage];
          id v111 = [v110 length];

          if ((uint64_t)v111 < v127
            || (id v112 = [v13 textLayoutManager]) == 0)
          {
            double v120 = CGRectZero.origin.x;
            double v121 = CGRectZero.origin.y;
            double v122 = CGRectZero.size.width;
LABEL_109:
            id v123 = *(id *)&v13[OBJC_IVAR____TtC7Journal14CanvasTextView_blockQuoteLayerView];
            sub_1002F667C(0, v120, v121, v122);

            return;
          }
          id v23 = v112;
          id v113 = sub_10001357C(v127, 0);
          if (!v113)
          {
LABEL_115:

            double v120 = 0.0;
            double v121 = 0.0;
            double v122 = 0.0;
            goto LABEL_109;
          }
          unint64_t v114 = v113;
          CGSize v115 = CGRectNull.size;
          v133.origin = CGRectNull.origin;
          v133.CGSize size = v115;
          uint64_t v116 = swift_allocObject();
          *(void *)(v116 + 16) = &v133;
          uint64_t v117 = swift_allocObject();
          *(void *)(v117 + 16) = sub_1005B4FC8;
          *(void *)(v117 + 24) = v116;
          char v136 = sub_1005B5048;
          uint64_t v137 = v117;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v135 = sub_1005A87A0;
          *((void *)&v135 + 1) = &unk_1007B6D00;
          uint64_t v118 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v23 enumerateTextSegmentsInRange:v114 type:0 options:0 usingBlock:v118];
          _Block_release(v118);
          LOBYTE(v118) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v118 & 1) == 0)
          {
            BOOL v119 = CGRectIsNull(v133);
            if (v119) {
              double v120 = CGRectZero.origin.x;
            }
            else {
              double v120 = v133.origin.x;
            }
            if (v119) {
              double v121 = CGRectZero.origin.y;
            }
            else {
              double v121 = v133.origin.y;
            }
            if (v119) {
              double v122 = CGRectZero.size.width;
            }
            else {
              double v122 = v133.size.width;
            }

            swift_release();
            goto LABEL_109;
          }
          goto LABEL_122;
        }
      }
    }
  }
}

BOOL sub_1005AEE9C()
{
  double v1 = NSParagraphStyleAttributeName;
  id v2 = [v0 typingAttributes];
  type metadata accessor for Key(0);
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16) || (uint64_t v4 = sub_10001B6A4(v1), (v5 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001B648(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v12);

  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_8:
    sub_10001457C((uint64_t)&v12, &qword_1007FAD50);
    return 0;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if (swift_dynamicCast())
  {
    [v11 firstLineHeadIndent];
    double v7 = fmod(v6, 1.0) + -0.1;
    [v11 headIndent];
    long double v9 = v8;

    if (fabs(v7) < 0.01) {
      return fabs(fmod(v9, 1.0) + -0.1) < 0.01;
    }
  }
  return 0;
}

void sub_1005AF074(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [v3 textStorage];
  id v7 = [v6 string];

  if (!v7) {
    goto LABEL_40;
  }
  id v8 = [v7 paragraphRangeForRange:a1, a2];
  uint64_t v10 = v9;

  id v11 = [v3 undoManager];
  if (v11)
  {
    long long v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v10;
    type metadata accessor for CanvasTextView();
    NSUndoManager.registerUndo<A>(withTarget:handler:)();

    swift_release();
  }
  id v14 = [v3 textStorage];
  [v14 beginEditing];

  long double v15 = NSParagraphStyleAttributeName;
  id v16 = [v3 typingAttributes];
  type metadata accessor for Key(0);
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  uint64_t v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v17 + 16) || (uint64_t v18 = sub_10001B6A4(v15), (v19 & 1) == 0))
  {
    long long aBlock = 0u;
    long long v64 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10001B648(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&aBlock);

  swift_bridgeObjectRelease();
  if (!*((void *)&v64 + 1))
  {
LABEL_10:
    sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
    goto LABEL_11;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if (swift_dynamicCast())
  {
    uint64_t v20 = *(void **)&v67[0];
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v20 = 0;
LABEL_12:
  id v21 = objc_allocWithZone((Class)NSMutableParagraphStyle);
  id v22 = v15;
  id v23 = [v21 init];
  uint64_t v24 = v23;
  if (v20) {
    [v23 setParagraphStyle:v20];
  }
  else {
    [v23 setParagraphSpacingBefore:8.0];
  }
  if (qword_1007F7E28 != -1) {
    swift_once();
  }
  double v25 = *(double *)&qword_10083EE08 + 4.0 + 0.1;
  [v24 setFirstLineHeadIndent:v25];
  [v24 setHeadIndent:v25];
  *((void *)&v64 + 1) = sub_10001B284(0, &qword_1007F8FA8);
  *(void *)&long long aBlock = v24;
  id v26 = [v3 typingAttributes];
  uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v68 = v27;
  if (*((void *)&v64 + 1))
  {
    sub_10002102C(&aBlock, v67);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100599110(v67, v22, isUniquelyReferenced_nonNull_native);
    uint64_t v68 = v27;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
    sub_1000F1E94((uint64_t)v22, v67);

    sub_10001457C((uint64_t)v67, &qword_1007FAD50);
  }
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v30 = &selRef_defaultParagraphStyle;
  [v3 setTypingAttributes:isa];

  id v31 = [v3 typingAttributes];
  id v32 = (NSString *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  double v33 = sub_1005B3E1C((uint64_t)v32);
  swift_bridgeObjectRelease();

  uint64_t v34 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  if (!v33)
  {
    uint64_t v35 = qword_1007F7200;
    id v32 = NSForegroundColorAttributeName;
    if (v35 == -1) {
      goto LABEL_24;
    }
    goto LABEL_38;
  }
  if (!v10) {
    goto LABEL_30;
  }
  while (1)
  {
    uint64_t v30 = (char **)(v62 + v10);
    if (!__OFADD__(v62, v10)) {
      break;
    }
    __break(1u);
LABEL_38:
    swift_once();
LABEL_24:
    id v36 = (void *)qword_10083D7C8;
    *((void *)&v64 + 1) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    *(void *)&long long aBlock = v36;
    id v37 = v36;
    id v38 = [v3 typingAttributes];
    uint64_t v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v68 = v39;
    if (*((void *)&v64 + 1))
    {
      sub_10002102C(&aBlock, v67);
      char v40 = swift_isUniquelyReferenced_nonNull_native();
      sub_100599110(v67, v32, v40);
      uint64_t v68 = v39;

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
      sub_1000F1E94((uint64_t)v32, v67);

      sub_10001457C((uint64_t)v67, &qword_1007FAD50);
    }
    uint64_t v34 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
    id v32 = (NSString *)Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 v30[287] v32];

    if (!v10) {
      goto LABEL_30;
    }
  }
  id v41 = [v3 v34[215]];
  uint64_t v42 = (char **)[v41 length];

  if ((uint64_t)v42 < (uint64_t)v30)
  {
LABEL_30:
    id v43 = [v3 selectedTextRange];
    if (v43)
    {
      char v44 = v43;
      id v45 = [v43 start];

      if (v45)
      {
        id v46 = [v3 beginningOfDocument];
        id v47 = [v3 offsetFromPosition:v46 toPosition:v45];

        id v48 = objc_allocWithZone((Class)NSMutableAttributedString);
        NSString v49 = String._bridgeToObjectiveC()();
        id v50 = [v48 initWithString:v49];

        id v51 = [v3 typingAttributes];
        static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v34 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        Class v52 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v50 setAttributes:v52 range:0];

        id v53 = [v3 textStorage];
        [v53 insertAttributedString:v50 atIndex:v47];
      }
    }

    char v54 = 0;
    goto LABEL_36;
  }
  id v55 = [v3 v34[215]];
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v3;
  uint64_t v57 = swift_allocObject();
  char v54 = sub_1005B4D90;
  *(void *)(v57 + 16) = sub_1005B4D90;
  *(void *)(v57 + 24) = v56;
  uint64_t v65 = sub_100020FA4;
  uint64_t v66 = v57;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v64 = sub_100041E54;
  *((void *)&v64 + 1) = &unk_1007B6AA8;
  uint64_t v58 = _Block_copy(&aBlock);
  id v59 = v3;
  swift_retain();
  swift_release();
  [v55 enumerateAttributesInRange:v62 options:0x100000 usingBlock:v58];

  _Block_release(v58);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v34 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_36:
    id v61 = [v3 v34[215]];
    [v61 endEditing];

    sub_10001ABB8((uint64_t)v54);
    return;
  }
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1005AF9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = swift_getObjectType();
  id v8 = [v4 textStorage];
  id v9 = [v8 string];

  if (v9)
  {
    uint64_t v10 = [v9 paragraphRangeForRange:a1, a2];
    uint64_t v12 = v11;

    id v13 = [v4 undoManager];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v10;
      *(void *)(v15 + 24) = v12;
      type metadata accessor for CanvasTextView();
      NSUndoManager.registerUndo<A>(withTarget:handler:)();

      swift_release();
    }
    id v16 = [v4 textStorage];
    [v16 beginEditing];

    id v17 = [v4 textStorage];
    uint64_t v18 = &stru_1007D7000;
    uint64_t v19 = (uint64_t)[v17 length];

    if (v19 >= 1)
    {
      if (v12)
      {
        NSAttributedStringKey v20 = (NSAttributedStringKey)&v10[v12];
        if (__OFADD__(v10, v12))
        {
          __break(1u);
        }
        else
        {
          id v21 = [v4 textStorage];
          NSAttributedStringKey v22 = (NSAttributedStringKey)[v21 length];

          if ((uint64_t)v22 < (uint64_t)v20) {
            goto LABEL_8;
          }
          id v23 = [v4 textStorage];
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v4;
          *(void *)(v19 + 24) = ObjectType;
          uint64_t v18 = (__objc2_meth *)swift_allocObject();
          v18->imp = (IMP)sub_1005B4E1C;
          v18[1].name = (char *)v19;
          uint64_t v56 = sub_1005B4FD0;
          uint64_t v57 = v18;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v55 = sub_100041E54;
          *((void *)&v55 + 1) = &unk_1007B6B48;
          NSAttributedStringKey v20 = (NSAttributedStringKey)_Block_copy(&aBlock);
          uint64_t v3 = (uint64_t)v57;
          id v24 = v4;
          swift_retain();
          swift_release();
          [v23 enumerateAttributesInRange:v10 options:v12 usingBlock:v20];

          _Block_release(v20);
          LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v23 & 1) == 0)
          {
            id v50 = sub_1005B4E1C;
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_47:
        swift_once();
LABEL_34:
        if (static NSObject.== infix(_:_:)())
        {
          uint64_t v42 = qword_1007F7E40;
          id v43 = v20;
          if (v42 != -1) {
            swift_once();
          }
          *((void *)&v55 + 1) = v3;
          *(void *)&long long aBlock = qword_1008124B0;
          id v44 = (id)qword_1008124B0;
          id v45 = [v4 *(SEL *)(v19 + 2248)];
          uint64_t v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v53 = v46;
          if (*((void *)&v55 + 1))
          {
            sub_10002102C(&aBlock, v52);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_100599110(v52, v43, isUniquelyReferenced_nonNull_native);
            uint64_t v53 = v46;

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
            sub_1000F1E94((uint64_t)v43, v52);

            sub_10001457C((uint64_t)v52, &qword_1007FAD50);
          }
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v4 setTypingAttributes:isa];
        }
        else
        {
        }
        goto LABEL_44;
      }
LABEL_8:
      id v50 = 0;
LABEL_14:
      double v25 = NSParagraphStyleAttributeName;
      id v26 = [v4 typingAttributes];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v27 + 16) && (uint64_t v28 = sub_10001B6A4(v25), (v29 & 1) != 0))
      {
        sub_10001B648(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v55 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v55 + 1))
      {
        sub_10001B284(0, &qword_1007F8FA8);
        if (swift_dynamicCast())
        {
          id v30 = v52[0];
          [v52[0] mutableCopy];
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
          uint64_t v31 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
          if (swift_dynamicCast())
          {
            [v52[0] setFirstLineHeadIndent:0.0];
            [v52[0] setHeadIndent:0.0];
            *((void *)&v55 + 1) = v31;
            *(id *)&long long aBlock = v52[0];
            id v32 = v25;
            id v33 = v52[0];
            id v34 = [v4 typingAttributes];
            uint64_t v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v53 = v35;
            if (*((void *)&v55 + 1))
            {
              sub_10002102C(&aBlock, v52);
              char v36 = swift_isUniquelyReferenced_nonNull_native();
              sub_100599110(v52, v32, v36);
              uint64_t v53 = v35;

              swift_bridgeObjectRelease();
            }
            else
            {
              sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
              sub_1000F1E94((uint64_t)v32, v52);

              sub_10001457C((uint64_t)v52, &qword_1007FAD50);
            }
            Class v37 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v4 setTypingAttributes:v37];
          }
          else
          {
          }
        }
      }
      else
      {
        sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
      }
      NSAttributedStringKey v20 = NSForegroundColorAttributeName;
      id v38 = [v4 typingAttributes];
      uint64_t v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v39 + 16) && (uint64_t v40 = sub_10001B6A4(v20), (v41 & 1) != 0))
      {
        sub_10001B648(*(void *)(v39 + 56) + 32 * v40, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v55 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v55 + 1))
      {
        uint64_t v19 = (uint64_t)&selRef_defaultParagraphStyle;
        uint64_t v3 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
        if (swift_dynamicCast())
        {
          uint64_t v18 = (__objc2_meth *)v52[0];
          sub_10001B284(0, (unint64_t *)&unk_100800920);
          if (qword_1007F7200 == -1) {
            goto LABEL_34;
          }
          goto LABEL_47;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
      }
LABEL_44:
      id v49 = [v4 textStorage];
      [v49 endEditing];

      sub_10001ABB8((uint64_t)v50);
      return;
    }
    sub_1005A97A4(0);
    sub_1005AAE84();
    id v51 = [v4 textStorage];
    [v51 endEditing];
  }
  else
  {
    __break(1u);
  }
}

void sub_1005B0324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!*(void *)(a1 + 16))
  {
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_8;
  }
  id v9 = NSParagraphStyleAttributeName;
  uint64_t v10 = sub_10001B6A4(v9);
  if ((v11 & 1) == 0)
  {
    long long v20 = 0u;
    long long v21 = 0u;

    goto LABEL_8;
  }
  sub_10001B648(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v20);

  if (!*((void *)&v21 + 1))
  {
LABEL_8:
    sub_10001457C((uint64_t)&v20, &qword_1007FAD50);
    goto LABEL_9;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if (swift_dynamicCast())
  {
    uint64_t v12 = v19;
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v12 = 0;
LABEL_10:
  id v13 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  id v14 = v13;
  if (v12) {
    [v13 setParagraphStyle:v12];
  }
  else {
    [v13 setParagraphSpacingBefore:8.0];
  }
  if (qword_1007F7E28 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_10083EE08 + 4.0 + 0.1;
  [v14 setFirstLineHeadIndent:v15];
  [v14 setHeadIndent:v15];
  id v16 = [a5 textStorage];
  [v16 addAttribute:NSParagraphStyleAttributeName value:v14 range:a2, a3];

  id v17 = sub_1005B3E1C(a1);
  if (v17)
  {
    id v18 = v14;
  }
  else
  {
    id v18 = [a5 textStorage];
    if (qword_1007F7200 != -1) {
      swift_once();
    }
    [v18 addAttribute:NSForegroundColorAttributeName value:qword_10083D7C8 range:a2, a3];
  }
}

void sub_1005B05C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!*(void *)(a1 + 16))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_11;
  }
  id v9 = NSParagraphStyleAttributeName;
  uint64_t v10 = sub_10001B6A4(v9);
  if ((v11 & 1) == 0)
  {
    long long v18 = 0u;
    long long v19 = 0u;

    goto LABEL_11;
  }
  sub_10001B648(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v18);

  if (!*((void *)&v19 + 1))
  {
LABEL_11:
    sub_10001457C((uint64_t)&v18, &qword_1007FAD50);
    return;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  [v17 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001B284(0, (unint64_t *)&unk_10080A660);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return;
  }
  [v17 setFirstLineHeadIndent:0.0];
  [v17 setHeadIndent:0.0];
  id v12 = [a5 textStorage];
  [v12 addAttribute:v9 value:v17 range:a2, a3];

  if (!*(void *)(a1 + 16))
  {
    long long v18 = 0u;
    long long v19 = 0u;
LABEL_24:

    goto LABEL_11;
  }
  id v13 = NSForegroundColorAttributeName;
  uint64_t v14 = sub_10001B6A4(v13);
  if (v15)
  {
    sub_10001B648(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }

  if (!*((void *)&v19 + 1)) {
    goto LABEL_24;
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (swift_dynamicCast())
  {
    sub_10001B284(0, (unint64_t *)&unk_100800920);
    if (qword_1007F7200 != -1) {
      swift_once();
    }
    if (static NSObject.== infix(_:_:)())
    {
      id v16 = [a5 textStorage];
      if (qword_1007F7E40 != -1) {
        swift_once();
      }
      [v16 addAttribute:v13 value:qword_1008124B0 range:a2, a3];
    }
    else
    {
    }
  }
  else
  {
  }
}

uint64_t sub_1005B0930(Class isa)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for UITextFormattingViewController.ChangeValue();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  id v8 = (id *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, Class, uint64_t, __n128))(v5 + 16))(v8, isa, v4, v6);
  int v9 = (*(uint64_t (**)(id *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for UITextFormattingViewController.ChangeValue.bold(_:)
    || v9 == enum case for UITextFormattingViewController.ChangeValue.italic(_:)
    || v9 == enum case for UITextFormattingViewController.ChangeValue.underline(_:)
    || v9 == enum case for UITextFormattingViewController.ChangeValue.strikethrough(_:))
  {
    sub_1005ABD20();
    return 1;
  }
  if (v9 == enum case for UITextFormattingViewController.ChangeValue.textColor(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 96))(v8, v4);
    id v13 = *v8;
    if (!sub_1002566F4() && !sub_100256654())
    {
      id v49 = (void **)&v2[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
      id v50 = *(void **)&v2[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
      if (!v50)
      {
        NSString *v49 = v13;
        id v60 = v13;
LABEL_51:
        uint64_t v48 = 1;
        goto LABEL_52;
      }
      uint64_t v48 = 1;
      goto LABEL_42;
    }
    uint64_t v14 = (char *)[v2 selectedRange];
    [v2 selectedRange];
    id v16 = (objc_class *)&v14[v15];
    if (__OFADD__(v14, v15))
    {
      __break(1u);
    }
    else
    {
      id v17 = [v2 textStorage];
      Class isa = (Class)[v17 length];

      if ((uint64_t)isa >= (uint64_t)v16)
      {
        [v2 selectedRange];
        if (v18 >= 1)
        {
          id v19 = [v2 textStorage];
          id v20 = [v2 selectedRange];
          *(void *)&long long v65 = [v2 selectedRange];
          *((void *)&v65 + 1) = v21;
          id v22 = [v19 attributesAtIndex:v20 effectiveRange:&v65];

          [v2 setSelectedRange:v65];
          type metadata accessor for Key(0);
          sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
          uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v24 = qword_1007F7E40;
          double v25 = NSForegroundColorAttributeName;
          if (v24 != -1) {
            swift_once();
          }
          id v26 = (void *)qword_1008124B0;
          uint64_t v66 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
          *(void *)&long long v65 = v26;
          sub_10002102C(&v65, v64);
          id v27 = v26;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v63 = v23;
          sub_100599110(v64, v25, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
          id v29 = [v2 textStorage];
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v30 = [v2 selectedRange];
          [v29 setAttributes:isa range:v30, v31];
        }
      }
      id v32 = (char *)[v2 selectedRange];
      [v2 selectedRange];
      id v34 = &v32[v33];
      if (!__OFADD__(v32, v33))
      {
        id v35 = [v2 textStorage];
        char v36 = (char *)[v35 length];

        if (v34 != v36)
        {
LABEL_40:
          uint64_t v53 = *(void **)&v2[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
          *(void *)&v2[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor] = 0;

          id v49 = (void **)&v2[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
          id v50 = *(void **)&v2[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor];
          if (!v50)
          {
            uint64_t v48 = 0;
            NSString *v49 = 0;
            goto LABEL_52;
          }
          uint64_t v48 = 0;
LABEL_42:
          sub_10001B284(0, (unint64_t *)&qword_1007FC140);
          id v54 = v13;
          id v55 = v50;
          char v56 = static NSObject.== infix(_:_:)();

          if (v48)
          {
            uint64_t v57 = *v49;
            NSString *v49 = v54;
            id v58 = v54;

            if ((v56 & 1) == 0) {
              goto LABEL_51;
            }
            goto LABEL_46;
          }
          id v59 = *v49;
          NSString *v49 = 0;

          if (v56)
          {
LABEL_46:

            return v48;
          }
          uint64_t v48 = 0;
LABEL_52:
          sub_1005ABD20();

          return v48;
        }
        uint64_t v37 = qword_1007F7E40;
        Class isa = NSForegroundColorAttributeName;
        if (v37 == -1)
        {
LABEL_25:
          id v38 = (void *)qword_1008124B0;
          uint64_t v66 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
          *(void *)&long long v65 = v38;
          id v39 = v38;
          id v40 = [v2 typingAttributes];
          type metadata accessor for Key(0);
          sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
          uint64_t v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v63 = v41;
          if (v66)
          {
            sub_10002102C(&v65, v64);
            char v42 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v62 = v41;
            sub_100599110(v64, isa, v42);
            uint64_t v63 = v62;

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10001457C((uint64_t)&v65, &qword_1007FAD50);
            sub_1000F1E94((uint64_t)isa, v64);

            sub_10001457C((uint64_t)v64, &qword_1007FAD50);
          }
          Class v52 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v2 setTypingAttributes:v52];

          goto LABEL_40;
        }
LABEL_55:
        swift_once();
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
  if (v9 == enum case for UITextFormattingViewController.ChangeValue.textList(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 96))(v8, v4);

    sub_1005ABD20();
    id v43 = [v2 selectedRange];
    sub_1005AD138(v43, v44);
    return 1;
  }
  if (v9 != enum case for UITextFormattingViewController.ChangeValue.toggleBlockquote(_:))
  {
    (*(void (**)(id *, uint64_t))(v5 + 8))(v8, v4);
    return 1;
  }
  (*(void (**)(id *, uint64_t))(v5 + 96))(v8, v4);
  int v45 = *(unsigned __int8 *)v8;
  id v46 = [v2 selectedRange];
  if (v45 == 1) {
    sub_1005AF074((uint64_t)v46, v47);
  }
  else {
    sub_1005AF9E8((uint64_t)v46, v47);
  }
  return 0;
}

id sub_1005B124C@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = type metadata accessor for UITextFormattingViewController.FormattingDescriptor();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  __n128 v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v10 = (char *)&v30 - v9;
  [v2 selectedRange:v8];
  if (!v11) {
    goto LABEL_5;
  }
  id v12 = (char *)[v2 selectedRange];
  [v2 selectedRange];
  uint64_t v14 = &v12[v13];
  if (__OFADD__(v12, v13)) {
    __break(1u);
  }
  id result = [v2 attributedText];
  if (result)
  {
    id v16 = result;
    id v17 = (char *)[result length];

    if ((uint64_t)v17 < (uint64_t)v14)
    {
LABEL_5:
      id v18 = [v2 typingAttributes];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      UITextFormattingViewController.FormattingDescriptor.init(attributes:)();
      sub_1005AEE9C();
      UITextFormattingViewController.FormattingDescriptor._blockquote.setter();
      id v19 = NSStrikethroughStyleAttributeName;
      id v20 = [v2 typingAttributes];
      uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v21 + 16) && (uint64_t v22 = sub_10001B6A4(v19), (v23 & 1) != 0)) {
        sub_10001B648(*(void *)(v21 + 56) + 32 * v22, (uint64_t)v32);
      }
      else {
        memset(v32, 0, sizeof(v32));
      }
      uint64_t v24 = v31;

      swift_bridgeObjectRelease();
      sub_10001457C((uint64_t)v32, &qword_1007FAD50);
      UITextFormattingViewController.FormattingDescriptor.strikethroughPresent.setter();
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v24, v10, v3);
    }
    id result = [v2 attributedText];
    if (result)
    {
      [v2 selectedRange];
      UITextFormattingViewController.FormattingDescriptor.init(string:range:)();
      id v25 = [v2 selectedRange];
      *(void *)&v32[0] = v25;
      *((void *)&v32[0] + 1) = v26;
      id v27 = [v2 textStorage];
      id v28 = [v27 attributesAtIndex:v25 effectiveRange:v32];

      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      uint64_t v29 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1005B3CC8(v29);
      swift_bridgeObjectRelease();
      UITextFormattingViewController.FormattingDescriptor._blockquote.setter();
      uint64_t v10 = v6;
      uint64_t v24 = v31;
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v24, v10, v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1005B1768(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9)
{
  if (a1)
  {
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v71 = a6;
      unint64_t v73 = _swiftEmptyArrayStorage;
      id v68 = a3;
      unint64_t v69 = a7;
      unint64_t v70 = a8;
      if (*(void *)(a4 + 16))
      {
        swift_unknownObjectRetain();
        id v18 = NSParagraphStyleAttributeName;
        uint64_t v19 = sub_10001B6A4(v18);
        if (v20)
        {
          sub_10001B648(*(void *)(a4 + 56) + 32 * v19, (uint64_t)&aBlock);

          if (*((void *)&v75 + 1))
          {
            sub_10001B284(0, &qword_1007F8FA8);
            if (swift_dynamicCast())
            {
              id v21 = [v72 textLists];
              sub_10001B284(0, &qword_1007FA0C8);
              uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              unint64_t v73 = (double *)v22;
              swift_bridgeObjectRelease();
            }
LABEL_17:
            id v29 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v17];
            id v30 = [v29 length];
            uint64_t v31 = swift_allocObject();
            *(void *)(v31 + 16) = v29;
            uint64_t v32 = swift_allocObject();
            *(void *)(v32 + 16) = sub_1005B4CEC;
            *(void *)(v32 + 24) = v31;
            uint64_t v76 = sub_1001C7184;
            uint64_t v77 = v32;
            *(void *)&long long aBlock = _NSConcreteStackBlock;
            *((void *)&aBlock + 1) = 1107296256;
            *(void *)&long long v75 = sub_1005A7B04;
            *((void *)&v75 + 1) = &unk_1007B68C8;
            id v33 = _Block_copy(&aBlock);
            id v34 = v29;
            swift_retain();
            swift_release();
            [v34 enumerateAttribute:NSLinkAttributeName inRange:0 options:0 usingBlock:v33];
            _Block_release(v33);
            char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if (isEscapingClosureAtFileLocation)
            {
              __break(1u);
            }
            else
            {
              id v33 = [v34 length];
              uint64_t v36 = swift_allocObject();
              *(void *)(v36 + 16) = v34;
              uint64_t v37 = swift_allocObject();
              *(void *)(v37 + 16) = sub_1005B4D04;
              *(void *)(v37 + 24) = v36;
              uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B4FCC;
              uint64_t v77 = v37;
              *(void *)&long long aBlock = _NSConcreteStackBlock;
              *((void *)&aBlock + 1) = 1107296256;
              *(void *)&long long v75 = sub_1005A7B04;
              *((void *)&v75 + 1) = &unk_1007B6940;
              id v38 = _Block_copy(&aBlock);
              id v39 = v34;
              swift_retain();
              swift_release();
              [v39 enumerateAttribute:NSAttachmentAttributeName inRange:0 options:v33 usingBlock:v38];
              _Block_release(v38);
              char v40 = swift_isEscapingClosureAtFileLocation();
              swift_release();
              if ((v40 & 1) == 0)
              {
                unint64_t v41 = (unint64_t)[v39 length];
                if ((v41 & 0x8000000000000000) == 0)
                {
                  unint64_t v42 = v41;
                  id v33 = NSFontAttributeName;
                  uint64_t v43 = swift_allocObject();
                  *(void *)(v43 + 16) = v39;
                  uint64_t v44 = swift_allocObject();
                  *(void *)(v44 + 16) = sub_1005B4D1C;
                  *(void *)(v44 + 24) = v43;
                  uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B4FCC;
                  uint64_t v77 = v44;
                  *(void *)&long long aBlock = _NSConcreteStackBlock;
                  *((void *)&aBlock + 1) = 1107296256;
                  *(void *)&long long v75 = sub_1005A7B04;
                  *((void *)&v75 + 1) = &unk_1007B69B8;
                  int v45 = _Block_copy(&aBlock);
                  id v46 = v39;
                  swift_retain();
                  swift_release();
                  [v46 enumerateAttribute:NSFontAttributeName inRange:0 options:0 usingBlock:v45];
                  _Block_release(v45);
                  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
                  swift_release();
                  if ((v42 & 1) == 0)
                  {
                    unint64_t v47 = (unint64_t)[v46 length];
                    if ((v47 & 0x8000000000000000) == 0)
                    {
                      unint64_t v48 = v47;
                      id v49 = (void *)swift_allocObject();
                      v49[2] = a5;
                      v49[3] = &v73;
                      v49[4] = v71 + 16;
                      v49[5] = v46;
                      uint64_t v50 = swift_allocObject();
                      *(void *)(v50 + 16) = sub_1005B4D74;
                      *(void *)(v50 + 24) = v49;
                      uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B4FCC;
                      uint64_t v77 = v50;
                      *(void *)&long long aBlock = _NSConcreteStackBlock;
                      *((void *)&aBlock + 1) = 1107296256;
                      *(void *)&long long v75 = sub_1005A7B04;
                      *((void *)&v75 + 1) = &unk_1007B6A30;
                      id v33 = _Block_copy(&aBlock);
                      id v51 = v46;
                      id v52 = a5;
                      swift_retain();
                      swift_release();
                      [v51 enumerateAttribute:NSParagraphStyleAttributeName inRange:0 options:0 usingBlock:v33];
                      _Block_release(v33);
                      LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
                      swift_release();
                      if ((v48 & 1) == 0)
                      {
                        [v51 removeAttribute:NSAdaptiveImageGlyphAttributeName range:0, [v51 length]];
                        sub_100010218(&qword_100802498);
                        uint64_t inited = swift_initStackObject();
                        *(_OWORD *)(inited + 16) = xmmword_1006D6270;
                        *(void *)(inited + 32) = NSForegroundColorAttributeName;
                        uint64_t v54 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
                        *(void *)(inited + 40) = v69;
                        *(void *)(inited + 64) = v54;
                        *(void *)(inited + 72) = NSBackgroundColorAttributeName;
                        *(void *)(inited + 104) = v54;
                        *(void *)(inited + 80) = v70;
                        id v55 = NSForegroundColorAttributeName;
                        id v56 = v69;
                        uint64_t v57 = NSBackgroundColorAttributeName;
                        id v58 = v70;
                        sub_100396DBC(inited);
                        type metadata accessor for Key(0);
                        sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
                        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                        swift_bridgeObjectRelease();
                        [v51 addAttributes:isa range:0 length:[v51 length]];

                        [v51 fixAttributesInRange:0, [v51 length]];
                        id v33 = v51;
                        id v60 = (void *)sub_100020C00(a9, v51, 0, 8.0);

                        if (v60)
                        {
                          [v68 setAttributedStringResult:v60];

LABEL_36:
                          swift_unknownObjectRelease();
                          swift_release();
                          swift_release();
                          swift_release();
                          swift_release();
                          return (id)swift_bridgeObjectRelease();
                        }
                        if (qword_1007F7E30 == -1)
                        {
LABEL_26:
                          uint64_t v61 = type metadata accessor for Logger();
                          sub_100026A54(v61, (uint64_t)qword_100812490);
                          swift_errorRetain();
                          swift_errorRetain();
                          uint64_t v62 = Logger.logObject.getter();
                          os_log_type_t v63 = static os_log_type_t.error.getter();
                          if (os_log_type_enabled(v62, v63))
                          {
                            long long v64 = (uint8_t *)swift_slowAlloc();
                            long long v65 = (void *)swift_slowAlloc();
                            *(_DWORD *)long long v64 = 138412290;
                            if (a2)
                            {
                              swift_errorRetain();
                              uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
                              *(void *)&long long aBlock = v66;
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            }
                            else
                            {
                              *(void *)&long long aBlock = 0;
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                              uint64_t v66 = 0;
                            }
                            void *v65 = v66;
                            swift_errorRelease();
                            swift_errorRelease();
                            _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed to normalize pasted text: %@", v64, 0xCu);
                            sub_100010218((uint64_t *)&unk_1007FC430);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            swift_slowDealloc();
                          }
                          else
                          {
                            swift_errorRelease();
                            swift_errorRelease();
                          }

                          [v68 setNoResult];
                          goto LABEL_36;
                        }
LABEL_43:
                        swift_once();
                        goto LABEL_26;
                      }
LABEL_42:
                      __break(1u);
                      goto LABEL_43;
                    }
LABEL_41:
                    __break(1u);
                    goto LABEL_42;
                  }
LABEL_40:
                  __break(1u);
                  goto LABEL_41;
                }
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
            }
            __break(1u);
            goto LABEL_39;
          }
        }
        else
        {
          long long aBlock = 0u;
          long long v75 = 0u;
        }
      }
      else
      {
        long long aBlock = 0u;
        long long v75 = 0u;
        swift_unknownObjectRetain();
      }
      sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
      goto LABEL_17;
    }
  }
  if (qword_1007F7E30 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_100026A54(v23, (uint64_t)qword_100812490);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    id v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412290;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long aBlock = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      *(void *)&long long aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v28 = 0;
    }
    *id v27 = v28;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to load text for pasting: %@", v26, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return [a3 setNoResult];
}

id sub_1005B23D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001B220(a1, (uint64_t)v16, &qword_1007FAD50);
  if (v17)
  {
    uint64_t v12 = type metadata accessor for URL();
    int v13 = swift_dynamicCast();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, v13 ^ 1u, 1, v12);
  }
  else
  {
    sub_10001457C((uint64_t)v16, &qword_1007FAD50);
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  type metadata accessor for URL();
  int v14 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
  id result = (id)sub_10001457C((uint64_t)v11, (uint64_t *)&unk_100800A60);
  if (!v14) {
    return [a5 removeAttribute:NSLinkAttributeName range:a2 a3];
  }
  return result;
}

uint64_t sub_1005B2598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_10001B220(a1, (uint64_t)v10, &qword_1007FAD50);
  if (!v11) {
    return sub_10001457C((uint64_t)v10, &qword_1007FAD50);
  }
  sub_10001B284(0, &qword_100802480);
  uint64_t result = swift_dynamicCast();
  if (result)
  {

    return (uint64_t)[a5 deleteCharactersInRange:a2, a3];
  }
  return result;
}

void sub_1005B2658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_10001B220(a1, (uint64_t)&v17, &qword_1007FAD50);
  if (!v19)
  {
    sub_10001457C((uint64_t)&v17, &qword_1007FAD50);
    goto LABEL_5;
  }
  sub_10001B284(0, (unint64_t *)&unk_10080A670);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    unint64_t v10 = 0;
    goto LABEL_6;
  }
  id v8 = [v16 fontDescriptor];

  unsigned __int8 v9 = [v8 symbolicTraits];
  unint64_t v10 = v9 & 3;
LABEL_6:
  id v11 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v16 = v11;
  long long v17 = xmmword_1006EB920;
  char v18 = 0;
  sub_10021B55C(&v16, (uint64_t *)&v17, &v15);
  uint64_t v12 = v15;
  id v16 = v15;
  long long v17 = v10;
  char v18 = 0;
  sub_10021B55C(&v16, (uint64_t *)&v17, &v15);

  int v13 = v15;
  id v14 = [self fontWithDescriptor:v15 size:0.0];

  [a5 addAttribute:NSFontAttributeName value:v14 range:a2, a3];
}

void sub_1005B2834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, void *a8)
{
  sub_10001B220(a1, (uint64_t)v21, &qword_1007FAD50);
  if (v22)
  {
    sub_10001B284(0, &qword_1007F8FA8);
    if (swift_dynamicCast())
    {
      [v20 mutableCopy];
      _bridgeAnyObjectToAny(_:)();

      swift_unknownObjectRelease();
      sub_10001B284(0, (unint64_t *)&unk_10080A660);
      if (swift_dynamicCast())
      {
        id v12 = v20;
        goto LABEL_7;
      }
    }
  }
  else
  {
    sub_10001457C((uint64_t)v21, &qword_1007FAD50);
  }
  id v12 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v12 setParagraphSpacingBefore:8.0];
  sub_10044121C();
LABEL_7:
  sub_10001B284(0, &qword_1007FA0C8);
  id v13 = v12;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v13 setTextLists:isa];

  swift_beginAccess();
  if (*a7 != 1)
  {

LABEL_13:
    long long v17 = v13;
    goto LABEL_14;
  }
  id v15 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v15 setParagraphStyle:v13];
  if (qword_1007F7E28 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_10083EE08 + 4.0 + 0.1;
  [v15 setFirstLineHeadIndent:v16];
  [v15 setHeadIndent:v16];

  [v15 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001B284(0, (unint64_t *)&unk_10080A660);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_13;
  }

  long long v17 = v19;
LABEL_14:
  id v18 = v17;
  [a8 addAttribute:NSParagraphStyleAttributeName value:v18 range:a2, a3];
}

id sub_1005B2B7C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v10, (uint64_t *)&unk_100800A60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001457C((uint64_t)v10, (uint64_t *)&unk_100800A60);
    if (qword_1007F7E30 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100026A54(v15, (uint64_t)qword_100812490);
    swift_errorRetain();
    swift_errorRetain();
    double v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)id v18 = 138412290;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v39 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        *(void *)&long long v39 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v20 = 0;
      }
      *uint64_t v19 = v20;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to load URL for pasting: %@", v18, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return [a3 setNoResult];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    URL.formatted()();
    sub_100010218(&qword_100802498);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6270;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v22 = self;
    v36[0] = a3;
    uint64_t v23 = (void *)v22;
    uint64_t v24 = NSFontAttributeName;
    id v25 = [v23 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
    id v38 = v25;
    long long v39 = xmmword_100795008;
    char v40 = 0;
    sub_10021B55C(&v38, (uint64_t *)&v39, &v37);

    uint64_t v26 = v37;
    id v27 = [self fontWithDescriptor:v37 size:0.0];

    uint64_t v28 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
    *(void *)(inited + 40) = v27;
    *(void *)(inited + 64) = v28;
    *(void *)(inited + 72) = NSForegroundColorAttributeName;
    *(void *)(inited + 104) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    *(void *)(inited + 80) = a4;
    id v29 = NSForegroundColorAttributeName;
    id v30 = a4;
    sub_100396DBC(inited);
    id v31 = objc_allocWithZone((Class)NSAttributedString);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v34 = [v31 initWithString:v32 attributes:isa];

    [v36[0] setAttributedStringResult:v34];
    return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

Class sub_1005B3188(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v4 = a2;
  uint64_t v5 = v3();
  swift_release();
  swift_bridgeObjectRelease();

  if (v5)
  {
    v6.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }

  return v6.super.isa;
}

void *sub_1005B33C4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100010218(&qword_1007FA338);
  id v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1005B342C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1005B34A8()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_1005B3528(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1005B3528(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1005B3680(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          uint64_t v11 = sub_1005B33C4(v9, 0),
          unint64_t v12 = sub_1005B3780((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1005B3680(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1005B342C(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1005B342C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_1005B3780(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1005B342C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1005B342C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1005B3994(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1005B3A74(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        _StringObject.sharedUTF8.getter();
      }
      unsigned int v5 = _decodeScalar(_:startingAt:)();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1005B3A74(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1005B3B14(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1005B3B84(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1005B3B14(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1005B342C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1005B3B84(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = _StringObject.sharedUTF8.getter();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return _StringGuts.foreignScalarAlign(_:)();
    }
  }
  return result;
}

uint64_t sub_1005B3CA8(uint64_t a1, uint64_t a2)
{
  return sub_1005B493C(a2);
}

uint64_t sub_1005B3CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005B3CC0()
{
  return swift_release();
}

BOOL sub_1005B3CC8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    goto LABEL_10;
  }
  uint64_t v2 = NSParagraphStyleAttributeName;
  uint64_t v3 = sub_10001B6A4(v2);
  if ((v4 & 1) == 0)
  {
    long long v13 = 0u;
    long long v14 = 0u;

    goto LABEL_10;
  }
  sub_10001B648(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v13);

  if (!*((void *)&v14 + 1))
  {
LABEL_10:
    sub_10001457C((uint64_t)&v13, &qword_1007FAD50);
    return 0;
  }
  sub_10001B284(0, &qword_1007F8FA8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  [v12 firstLineHeadIndent];
  double v6 = fmod(v5, 1.0) + -0.1;
  [v12 headIndent];
  long double v8 = v7;

  double v9 = fmod(v8, 1.0) + -0.1;
  BOOL v10 = fabs(v6) < 0.01;
  return fabs(v9) < 0.01 && v10;
}

void *sub_1005B3E1C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_12;
  }
  uint64_t v2 = NSForegroundColorAttributeName;
  uint64_t v3 = sub_10001B6A4(v2);
  if ((v4 & 1) == 0)
  {
    long long v12 = 0u;
    long long v13 = 0u;

    goto LABEL_12;
  }
  sub_10001B648(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v12);

  if (!*((void *)&v13 + 1))
  {
LABEL_12:
    sub_10001457C((uint64_t)&v12, &qword_1007FAD50);
    return 0;
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  long double v5 = v11;
  if (qword_1007F7E40 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1008124B0;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) != 0
    || (id v8 = [self blackColor],
        char v9 = static NSObject.== infix(_:_:)(),
        v8,
        (v9 & 1) != 0))
  {

    return 0;
  }
  return v5;
}

void sub_1005B3F9C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long double v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  char v9 = (char *)v22 - v8;
  id v10 = [v0 textStorage];
  id v11 = [v10 string];

  if (v11)
  {
    id v12 = [v1 selectedRange];
    id v14 = [v11 lineRangeForRange:v12, v13];
    id v16 = [v11 substringWithRange:v14, v15];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    static CharacterSet.newlines.getter();
    CharacterSet.init(charactersIn:)();
    LOBYTE(v16) = CharacterSet.isSuperset(of:)();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
    v20(v5, v2);
    v20(v9, v2);
    if (v16)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v22[0] = v17;
      v22[1] = v19;
      static CharacterSet.whitespaces.getter();
      sub_100014344();
      StringProtocol.trimmingCharacters(in:)();
      v20(v9, v2);
      uint64_t v21 = String.count.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21)
      {
        sub_1005ABD20();
LABEL_7:

        return;
      }
    }
    sub_1005A97A4(0);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1005B4200()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasTextView_currentSelectedColor] = 0;
  v0[OBJC_IVAR____TtC7Journal14CanvasTextView_isShowingFormattingController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasTextView_topAccessoryView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal14CanvasTextView_blockQuoteLayerView;
  type metadata accessor for BlockQuoteLayerView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v0[OBJC_IVAR____TtC7Journal14CanvasTextView_removeListsNextClear] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1005B42C8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 textColor];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v1 backgroundColor];
    if (v6)
    {
      id v44 = v6;
      uint64_t v7 = swift_allocObject();
      *(unsigned char *)(v7 + 16) = 0;
      id v8 = [v1 typingAttributes];
      type metadata accessor for Key(0);
      sub_1005B4B88((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      uint64_t v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v45 = [v1 traitCollection];
      char v9 = NSParagraphStyleAttributeName;
      id v10 = [v1 typingAttributes];
      uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v11 + 16) && (uint64_t v12 = sub_10001B6A4(v9), (v13 & 1) != 0))
      {
        sub_10001B648(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&aBlock);

        swift_bridgeObjectRelease();
        if (*((void *)&v48 + 1))
        {
          sub_10001B284(0, &qword_1007F8FA8);
          id v14 = v44;
          uint64_t v15 = v7;
          if (swift_dynamicCast())
          {
            [v46 firstLineHeadIndent];
            double v17 = fmod(v16, 1.0) + -0.1;
            [v46 headIndent];
            long double v19 = v18;

            double v20 = fmod(v19, 1.0) + -0.1;
            BOOL v21 = fabs(v17) < 0.01;
            if (fabs(v20) >= 0.01) {
              BOOL v21 = 0;
            }
            *(unsigned char *)(v7 + 16) = v21;
          }
          goto LABEL_12;
        }
      }
      else
      {
        long long aBlock = 0u;
        long long v48 = 0u;

        swift_bridgeObjectRelease();
      }
      sub_10001457C((uint64_t)&aBlock, &qword_1007FAD50);
      id v14 = v44;
      uint64_t v15 = v7;
LABEL_12:
      uint64_t v22 = v43;
      id v23 = [a1 itemProvider:v43];
      sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      unsigned int v25 = [v23 canLoadObjectOfClass:ObjCClassFromMetadata];

      if (v25)
      {
        id v26 = [a1 itemProvider];
        unint64_t v27 = (void *)swift_allocObject();
        v27[2] = a1;
        v27[3] = v22;
        v27[4] = v2;
        v27[5] = v15;
        v27[6] = v5;
        v27[7] = v14;
        v27[8] = v45;
        id v49 = sub_1005B4C80;
        uint64_t v50 = v27;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v48 = sub_1005A8848;
        *((void *)&v48 + 1) = &unk_1007B6850;
        uint64_t v28 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        id v29 = v2;
        swift_retain();
        id v30 = v5;
        id v31 = v14;
        id v32 = v45;
        swift_release();
        id v33 = [v26 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v28];

        _Block_release(v28);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v34 = [a1 itemProvider];
        type metadata accessor for URL();
        sub_1005B4B88((unint64_t *)&unk_100812570, (void (*)(uint64_t))&type metadata accessor for URL);
        int v35 = NSItemProvider.canLoadObject<A>(ofClass:)();

        if (v35)
        {
          id v36 = [a1 itemProvider];
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = a1;
          *(void *)(v37 + 24) = v5;
          swift_unknownObjectRetain();
          id v5 = v5;
          id v38 = NSItemProvider.loadObject<A>(ofClass:completionHandler:)();
          swift_release();
        }
        else
        {
          if (qword_1007F7E30 != -1) {
            swift_once();
          }
          uint64_t v39 = type metadata accessor for Logger();
          sub_100026A54(v39, (uint64_t)qword_100812490);
          char v40 = Logger.logObject.getter();
          os_log_type_t v41 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v40, v41))
          {
            unint64_t v42 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v42 = 0;
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "Paste ignored, not text or URL", v42, 2u);
            swift_slowDealloc();
          }

          [a1 setNoResult];
        }
        swift_release();
      }
      return;
    }
  }

  [a1 setNoResult];
}

uint64_t sub_1005B493C(uint64_t a1)
{
  type metadata accessor for NSUnderlineStyle(0);
  uint64_t v3 = v2;
  uint64_t v20 = v2;
  *(void *)&long long v19 = 0;
  sub_10002102C(&v19, v18);
  swift_bridgeObjectRetain();
  id v4 = NSUnderlineStyleAttributeName;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = a1;
  sub_100599110(v18, v4, isUniquelyReferenced_nonNull_native);
  uint64_t v6 = v21;

  swift_bridgeObjectRelease();
  uint64_t v20 = v3;
  *(void *)&long long v19 = 0;
  sub_10002102C(&v19, v18);
  uint64_t v7 = NSStrikethroughStyleAttributeName;
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_100599110(v18, v7, v8);
  uint64_t v9 = v6;
  uint64_t v21 = v6;

  swift_bridgeObjectRelease();
  uint64_t v10 = qword_1007F7E38;
  uint64_t v11 = NSFontAttributeName;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_1008124A8;
  if (qword_1008124A8)
  {
    uint64_t v20 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
    *(void *)&long long v19 = v12;
    sub_10002102C(&v19, v18);
    id v13 = v12;
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_100599110(v18, v11, v14);
    uint64_t v21 = v9;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000F1E94((uint64_t)v11, &v19);

    sub_10001457C((uint64_t)&v19, &qword_1007FAD50);
  }
  uint64_t v15 = NSLinkAttributeName;
  sub_1000F1E94((uint64_t)v15, &v19);

  sub_10001457C((uint64_t)&v19, &qword_1007FAD50);
  long double v16 = NSParagraphStyleAttributeName;
  sub_1000F1E94((uint64_t)v16, &v19);

  sub_10001457C((uint64_t)&v19, &qword_1007FAD50);
  return v21;
}

uint64_t sub_1005B4B78()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4B88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005B4BD0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

id sub_1005B4C10(uint64_t a1, uint64_t a2)
{
  return sub_1005B2B7C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1005B4C18()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

id sub_1005B4C80(uint64_t a1, uint64_t a2)
{
  return sub_1005B1768(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_1005B4CB4()
{
  return swift_deallocObject();
}

id sub_1005B4CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005B23D0(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005B4CF4()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005B2598(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005B4D0C()
{
  return swift_deallocObject();
}

void sub_1005B4D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005B2658(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005B4D24()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4D34()
{
  return swift_deallocObject();
}

void sub_1005B4D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005B2834(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char **)(v4 + 32), *(void **)(v4 + 40));
}

uint64_t sub_1005B4D80()
{
  return swift_deallocObject();
}

void sub_1005B4D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005B0324(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005B4D98()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4DA8()
{
  return swift_deallocObject();
}

void sub_1005B4DB8()
{
  sub_1005AF9E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005B4DE4()
{
  return swift_deallocObject();
}

void sub_1005B4E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005B05C8(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1005B4E24()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4E34()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4E44()
{
  return sub_1005AF074(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005B4E70()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005B4EA8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005B4EF0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  sub_1005ADEB8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_1005B4EFC()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4F0C()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4F1C(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  return sub_100013684(a3, a4, a5, a6, a1, a2, *(CGRect **)(v6 + 16));
}

uint64_t sub_1005B4F24()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4F34()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1005B4F60()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4F70()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4F80()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4F90()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4FA0()
{
  return swift_deallocObject();
}

uint64_t sub_1005B4FB0()
{
  return swift_deallocObject();
}

void sub_1005B4FC0(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

id sub_1005B504C()
{
  id result = [self whiteColor];
  qword_100812600 = (uint64_t)result;
  return result;
}

id sub_1005B5088()
{
  id result = [self configurationWithPointSize:4 weight:1 scale:13.0];
  qword_100812608 = (uint64_t)result;
  return result;
}

id sub_1005B50D0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal18MediaIndicatorView_mediaImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for MediaIndicatorView();
  [super initWithFrame:a1, a2, a3, a4];
  id v13 = [v12 layer];
  [v13 setCornerRadius:3.0];

  [v12 setClipsToBounds:1];
  sub_1005B5294();

  return v12;
}

void sub_1005B5294()
{
  uint64_t v1 = v0;
  id v2 = [self effectWithStyle:16];
  id v3 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v2];

  [v1 addSubview:v3];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaIndicatorView_mediaImageView];
  [v4 setContentMode:1];
  if (qword_1007F7E48 != -1) {
    swift_once();
  }
  [v4 setTintColor:qword_100812600];
  [v1 addSubview:v4];
  id v5 = [v4 superview];
  if (v5)
  {
    uint64_t v6 = v5;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v4 centerXAnchor];
    id v8 = [v6 centerXAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    [v9 setConstant:0.0];
    if (v9)
    {
      id v10 = v9;
      [v10 setActive:1];
    }
  }
  id v11 = [v4 superview];
  if (v11)
  {
    id v17 = v11;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v4 centerYAnchor];
    id v13 = [v17 centerYAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:0.0];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];

      id v3 = v15;
    }

    long double v16 = v17;
  }
  else
  {
    long double v16 = v3;
  }
}

id sub_1005B5568()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaIndicatorView();
  return [super dealloc];
}

uint64_t type metadata accessor for MediaIndicatorView()
{
  return self;
}

void static OperationsManager.addMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.addAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_1005B55E8(uint64_t a1, void *a2)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_100812658 + *a2);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 addObserver:a1 forKeyPath:v5 options:0 context:0];
}

void static OperationsManager.removeMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.removeAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_1005B56CC(uint64_t a1, void *a2)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_100812658 + *a2);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 removeObserver:a1 forKeyPath:v5];
}

uint64_t sub_1005B5790()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100812640);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100812640);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005B5858()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for OperationsManager()) init];
  qword_100812658 = (uint64_t)result;
  return result;
}

id sub_1005B5888()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal17OperationsManager_mapTableFileAttachmentsQueue;
  uint64_t v2 = self;
  id v3 = v0;
  *(void *)&v0[v1] = [v2 strongToWeakObjectsMapTable];
  uint64_t v4 = OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue;
  *(void *)&v3[v4] = [self strongToWeakObjectsMapTable];
  id v5 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority;
  *(void *)&v3[OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority] = v5;
  uint64_t v7 = qword_1007F6A50;
  id v8 = v5;
  if (v7 != -1) {
    swift_once();
  }
  [v8 setUnderlyingQueue:qword_10083CF58];

  id v9 = *(id *)&v3[v6];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setName:v10];

  id v11 = *(void **)&v3[v6];
  [v11 setMaxConcurrentOperationCount:6];
  [v11 setQualityOfService:9];
  id v12 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority;
  *(void *)&v3[OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority] = v12;
  uint64_t v14 = qword_1007F6A58;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  [v15 setUnderlyingQueue:qword_10083CF60];

  id v16 = *(id *)&v3[v13];
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setName:v17];

  double v18 = *(void **)&v3[v13];
  [v18 setMaxConcurrentOperationCount:6];
  [v18 setQualityOfService:-1];
  id v19 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v20 = OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority;
  *(void *)&v3[OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority] = v19;
  uint64_t v21 = qword_1007F6A60;
  id v22 = v19;
  if (v21 != -1) {
    swift_once();
  }
  [v22 setUnderlyingQueue:qword_10083CF68];

  id v23 = *(id *)&v3[v20];
  NSString v24 = String._bridgeToObjectiveC()();
  [v23 setName:v24];

  unsigned int v25 = *(void **)&v3[v20];
  [v25 setMaxConcurrentOperationCount:2];
  [v25 setQualityOfService:33];
  id v26 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v27 = OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue;
  *(void *)&v3[OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue] = v26;
  uint64_t v28 = qword_1007F7CB8;
  id v29 = v26;
  if (v28 != -1) {
    swift_once();
  }
  [v29 setUnderlyingQueue:qword_10083EA00];

  id v30 = *(id *)&v3[v27];
  NSString v31 = String._bridgeToObjectiveC()();
  [v30 setName:v31];

  id v32 = *(void **)&v3[v27];
  [v32 setMaxConcurrentOperationCount:2];
  [v32 setQualityOfService:-1];
  id v33 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v34 = OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue;
  *(void *)&v3[OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue] = v33;
  uint64_t v35 = qword_1007F7CC0;
  id v36 = v33;
  if (v35 != -1) {
    swift_once();
  }
  [v36 setUnderlyingQueue:qword_10083EA08];

  id v37 = *(id *)&v3[v34];
  NSString v38 = String._bridgeToObjectiveC()();
  [v37 setName:v38];

  uint64_t v39 = *(void **)&v3[v34];
  [v39 setMaxConcurrentOperationCount:2];
  [v39 setQualityOfService:-1];
  id v40 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v41 = OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue;
  *(void *)&v3[OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue] = v40;
  uint64_t v42 = qword_1007F7CC8;
  id v43 = v40;
  if (v42 != -1) {
    swift_once();
  }
  [v43 setUnderlyingQueue:qword_10083EA10];

  id v44 = *(id *)&v3[v41];
  NSString v45 = String._bridgeToObjectiveC()();
  [v44 setName:v45];

  id v46 = *(void **)&v3[v41];
  [v46 setMaxConcurrentOperationCount:1];
  id v47 = v46;
  [v47 setQualityOfService:9];

  v49.receiver = v3;
  v49.super_class = (Class)type metadata accessor for OperationsManager();
  return [super init];
}

void static OperationsManager.getAssetMetaDataOperationsRunningCount()()
{
}

void static OperationsManager.addAssetMetadata(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id static OperationsManager.getRunningAssetsMetadataOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_1005B5F74(a1, a2, &OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
}

id static OperationsManager.cancelAssetMetaDataOperations()()
{
  return sub_1005B67AC("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
}

void static OperationsManager.getAttachmentOperationsRunningCount()()
{
}

void static OperationsManager.addAttachment(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id static OperationsManager.getRunningAttachmentOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_1005B5F74(a1, a2, &OBJC_IVAR____TtC7Journal17OperationsManager_mapTableFileAttachmentsQueue);
}

id sub_1005B5F74(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_100812658 + *a3);
  id v5 = objc_allocWithZone((Class)NSString);
  id v6 = v4;
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithString:v7];

  id v9 = [v6 objectForKey:v8];
  if (v9 && [v9 isCancelled])
  {

    return 0;
  }
  return v9;
}

id static OperationsManager.cancelAttachmentOperations()()
{
  return sub_1005B67AC("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC7Journal17OperationsManager_mapTableFileAttachmentsQueue);
}

void static OperationsManager.getBatchRecordDownloadOperationsRunningCount()()
{
}

id static OperationsManager.addBatchRecordDownload(operation:)(uint64_t a1)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue);

  return [v2 addOperation:a1];
}

id static OperationsManager.cancelBatchRecordOperations()()
{
  return sub_1005B718C("OperationsManager.cancelBatchRecordOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue);
}

id static OperationsManager.cancelAllOngoingDownloads()()
{
  return sub_1005B718C("OperationsManager.cancelBatchRecordOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue);
}

void static OperationsManager.cancelAllThumbnailOperations()()
{
  if (qword_1007F7E58 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100026A54(v0, (uint64_t)qword_100812640);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelAllThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority);
  id v5 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority);
  id v8 = *(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority);
  id v6 = v4;
  id v7 = v5;
  [v8 cancelAllOperations];
  [v6 cancelAllOperations];
  [v7 cancelAllOperations];
}

id static OperationsManager.cancelLowPriorityThumbnailOperations()()
{
  return sub_1005B718C("OperationsManager.cancelLowPriorityThumbnailOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority);
}

id OperationsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationsManager();
  return [super dealloc];
}

void _s7Journal17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  if (qword_1007F7E60 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v5 = qword_100812658;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6D20;
  id v7 = *(void **)(v5 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v7;
  id v8 = *(void **)(v5 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v8;
  id v9 = *(void **)(v5 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v9;
  uint64_t v30 = inited;
  specialized Array._endMutation()();
  unint64_t v10 = v30 & 0xC000000000000001;
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  unint64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
    if (v14 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v15 = *(id *)(v30 + 32 + 8 * v14);
LABEL_8:
    id v29 = v15;
    id v16 = [v15 operations:v28];
    sub_10001B284(0, &qword_1008126C8);
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_10:
        uint64_t v19 = 4;
        while (1)
        {
          id v20 = (v17 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v17 + 8 * v19);
          uint64_t v21 = v20;
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v19 - 4, 1)) {
            break;
          }
          type metadata accessor for ThumbnailCacheOperation();
          uint64_t v23 = swift_dynamicCastClass();
          if (v23)
          {
            NSString v24 = (void *)v23;
            BOOL v25 = *(void *)(v23 + qword_100810AF0) == a1 && *(void *)(v23 + qword_100810AF0 + 8) == a2;
            if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              id v26 = v21;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v27 = v26;
              [v24 setQueuePriority:v28];

              return;
            }
          }

          ++v19;
          if (v22 == v18) {
            goto LABEL_3;
          }
        }
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18) {
        goto LABEL_10;
      }
    }
LABEL_3:
    ++v14;

    swift_bridgeObjectRelease();
    unint64_t v10 = v30 & 0xC000000000000001;
    if (v14 == 3)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

id sub_1005B6774()
{
  return sub_1005B67AC("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
}

id sub_1005B6790()
{
  return sub_1005B67AC("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC7Journal17OperationsManager_mapTableFileAttachmentsQueue);
}

id sub_1005B67AC(const char *a1, void *a2, void *a3)
{
  if (qword_1007F7E58 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100026A54(v6, (uint64_t)qword_100812640);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_100812658;
  [*(id *)(qword_100812658 + *a2) cancelAllOperations];
  id v11 = *(void **)(v10 + *a3);

  return [v11 removeAllObjects];
}

id sub_1005B6900()
{
  return sub_1005B718C("OperationsManager.cancelBatchRecordOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue);
}

void sub_1005B6914()
{
}

void sub_1005B6920()
{
}

void sub_1005B692C(void *a1)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(qword_100812658 + *a1) operations];
  sub_10001B284(0, &qword_1008126C8);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_5:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      id v7 = v6;
      if ([v6 isCancelled])
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

void sub_1005B6B28()
{
}

void *_s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailhF0CSgSS_So03OS_J6_queueCtFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_1007F7E60 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v4 = qword_100812658;
    sub_10001B284(0, (unint64_t *)&unk_100800920);
    if (qword_1007F6A50 != -1) {
      swift_once();
    }
    if (static NSObject.== infix(_:_:)())
    {
      uint64_t v5 = &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority;
    }
    else
    {
      if (qword_1007F6A60 != -1) {
        swift_once();
      }
      char v6 = static NSObject.== infix(_:_:)();
      uint64_t v5 = &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority;
      if (v6) {
        uint64_t v5 = &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority;
      }
    }
    id v7 = [*(id *)(v4 + *v5) operations];
    sub_10001B284(0, &qword_1008126C8);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8 >> 62) {
      break;
    }
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_30;
    }
LABEL_12:
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v8 + 8 * v10);
      id v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      type metadata accessor for ThumbnailCacheOperation();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        id v15 = (void *)v14;
        BOOL v16 = *(void *)(v14 + qword_100810AF0) == a1 && *(void *)(v14 + qword_100810AF0 + 8) == a2;
        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          && ([v15 isCancelled] & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }

      ++v10;
      if (v13 == v9) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_12;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

void _s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailhF0C_So17OS_dispatch_queueCtSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100812658;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6D20;
  char v6 = *(void **)(v4 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v6;
  id v7 = *(void **)(v4 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v7;
  unint64_t v8 = *(void **)(v4 + OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v8;
  uint64_t v30 = inited;
  specialized Array._endMutation()();
  uint64_t v9 = v30;
  unint64_t v10 = v30 & 0xC000000000000001;
  uint64_t v11 = v30 & 0xFFFFFFFFFFFFFF8;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_23;
    }
    id v15 = *(id *)(v30 + 32);
  }
  BOOL v16 = v15;
  id v17 = [v15 underlyingQueue];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = _s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailhF0CSgSS_So03OS_J6_queueCtFZ_0(a1, a2);

    BOOL v16 = v18;
    if (v19) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (*(void *)(v11 + 16) < 2uLL) {
      goto LABEL_23;
    }
    id v20 = *(id *)(v9 + 40);
  }
  uint64_t v21 = v20;
  id v22 = [v20 underlyingQueue];
  if (v22)
  {
    id v23 = v22;
    NSString v24 = _s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailhF0CSgSS_So03OS_J6_queueCtFZ_0(a1, a2);

    uint64_t v21 = v23;
    if (v24) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if (*(void *)(v11 + 16) < 3uLL)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v25 = *(id *)(v9 + 48);
LABEL_19:
  id v26 = v25;
  id v27 = [v25 underlyingQueue];
  if (v27)
  {
    id v28 = v27;
    id v29 = _s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailhF0CSgSS_So03OS_J6_queueCtFZ_0(a1, a2);

    id v26 = v28;
    if (v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }

  swift_bridgeObjectRelease();
}

id _s7Journal17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0E14CacheOperationC_So03OS_G6_queueCtFZ_0(uint64_t a1)
{
  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100812658;
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  if (qword_1007F6A50 != -1) {
    swift_once();
  }
  if (static NSObject.== infix(_:_:)())
  {
    unint64_t v3 = &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority;
  }
  else
  {
    if (qword_1007F6A60 != -1) {
      swift_once();
    }
    char v4 = static NSObject.== infix(_:_:)();
    unint64_t v3 = &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueRegularPriority;
    if (v4) {
      unint64_t v3 = &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueHighPriority;
    }
  }
  uint64_t v5 = *(void **)(v2 + *v3);

  return [v5 addOperation:a1];
}

id sub_1005B7178()
{
  return sub_1005B718C("OperationsManager.cancelLowPriorityThumbnailOperations", &OBJC_IVAR____TtC7Journal17OperationsManager_cacheQueueLowPriority);
}

id sub_1005B718C(const char *a1, void *a2)
{
  if (qword_1007F7E58 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_100812640);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  unint64_t v8 = *(void **)(qword_100812658 + *a2);

  return [v8 cancelAllOperations];
}

void sub_1005B72C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  sub_1005B692C(a4);
  if (v8 <= 99)
  {
    if (qword_1007F7E60 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void **)(qword_100812658 + *a5);
    id v10 = objc_allocWithZone((Class)NSString);
    id v11 = v9;
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [v10 initWithString:v12];

    [v11 setObject:a3 forKey:v13];
    id v14 = *(void **)(qword_100812658 + *a4);
    [v14 addOperation:a3];
  }
}

uint64_t type metadata accessor for OperationsManager()
{
  return self;
}

uint64_t sub_1005B7438()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008126D0);
  sub_100026A54(v0, (uint64_t)qword_1008126D0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005B7534()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_100035380(v4, qword_1008126E8);
  sub_100026A54(v4, (uint64_t)qword_1008126E8);
  if (qword_1007F7E68 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100026A54(v0, (uint64_t)qword_1008126D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)();
}

uint64_t AssetPostprocessingOperation.main@Sendable ()()
{
  v1[30] = v0;
  sub_100010218(&qword_100812708);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for FilePath();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OSSignpostError();
  v1[37] = v3;
  v1[38] = *(void *)(v3 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = sub_100010218(&qword_100800950);
  v1[56] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v1[57] = v4;
  v1[58] = *(void *)(v4 - 8);
  v1[59] = swift_task_alloc();
  v1[60] = sub_100010218((uint64_t *)&unk_100800A60);
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v1[64] = v5;
  v1[65] = *(void *)(v5 - 8);
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  v1[73] = swift_task_alloc();
  v1[74] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[75] = v6;
  v1[76] = *(void *)(v6 - 8);
  v1[77] = swift_task_alloc();
  v1[78] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v1[79] = v7;
  v1[80] = *(void *)(v7 - 8);
  v1[81] = swift_task_alloc();
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  v1[85] = swift_task_alloc();
  v1[86] = swift_task_alloc();
  v1[87] = swift_task_alloc();
  v1[88] = swift_task_alloc();
  v1[89] = swift_task_alloc();
  v1[90] = swift_task_alloc();
  v1[91] = swift_task_alloc();
  v1[92] = swift_task_alloc();
  v1[93] = swift_task_alloc();
  v1[94] = swift_task_alloc();
  v1[95] = swift_task_alloc();
  v1[96] = swift_task_alloc();
  v1[97] = swift_task_alloc();
  v1[98] = swift_task_alloc();
  return _swift_task_switch(sub_1005B7BF8, 0, 0);
}

uint64_t sub_1005B7BF8()
{
  if (qword_1007F7E70 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = type metadata accessor for OSSignposter();
  *(void *)(v0 + 792) = sub_100026A54(v2, (uint64_t)qword_1008126E8);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  id v3 = v1;
  uint64_t v4 = OSSignposter.logHandle.getter();
  os_signpost_type_t v5 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v36 = *(void *)(v0 + 776);
    uint64_t v41 = *(void *)(v0 + 640);
    uint64_t v38 = *(void *)(v0 + 632);
    uint64_t v6 = *(char **)(v0 + 240);
    id v40 = *(void (**)(void))(v41 + 16);
    unint64_t v7 = (v41 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v40();
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = *(void **)&v6[qword_100812728];
    *(void *)(v0 + 232) = v10;
    id v11 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v10;

    os_signpost_id_t v12 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, v5, v12, "AssetPostprocessingOperation", "%@", v8, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v36, v38);
    id v13 = v40;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 640);
    id v15 = *(void **)(v0 + 240);

    id v13 = *(void (**)(void))(v14 + 16);
    unint64_t v7 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  *(void *)(v0 + 800) = v13;
  uint64_t v16 = *(void *)(v0 + 784);
  uint64_t v17 = *(void *)(v0 + 776);
  uint64_t v18 = *(void *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 608);
  uint64_t v42 = *(void *)(v0 + 624);
  uint64_t v20 = *(void *)(v0 + 520);
  uint64_t v21 = *(void *)(v0 + 512);
  uint64_t v22 = *(void *)(v0 + 464);
  uint64_t v37 = *(void *)(v0 + 456);
  uint64_t v39 = *(char **)(v0 + 240);
  *(void *)(v0 + 808) = v7;
  ((void (*)(uint64_t, uint64_t, uint64_t))v13)(v17, v16, v18);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v0 + 816) = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v23 = swift_allocObject();
  *(void *)(v0 + 824) = v23;
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  uint64_t v24 = swift_allocBox();
  *(void *)(v0 + 832) = v24;
  *(void *)(v0 + 840) = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v25, 1, 1, v21);
  uint64_t v26 = swift_allocObject();
  *(void *)(v0 + 848) = v26;
  *(void *)(v26 + 16) = 0;
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 856) = v27;
  *(unsigned char *)(v27 + 16) = 20;
  uint64_t v28 = swift_allocBox();
  *(void *)(v0 + 864) = v28;
  *(void *)(v0 + 872) = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v29, 1, 1, v37);
  *(void *)(v0 + 880) = *(void *)&v39[qword_100812710];
  uint64_t v30 = (void *)swift_allocObject();
  *(void *)(v0 + 888) = v30;
  v30[2] = v39;
  v30[3] = v26;
  v30[4] = v28;
  v30[5] = v27;
  v30[6] = v23;
  v30[7] = v24;
  *(_DWORD *)(v0 + 1224) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  NSString v31 = *(void (**)(uint64_t))(v19 + 104);
  *(void *)(v0 + 896) = v31;
  *(void *)(v0 + 904) = (v19 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v31(v42);
  id v32 = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v33;
  void *v33 = v0;
  v33[1] = sub_1005B80D0;
  uint64_t v34 = *(void *)(v0 + 624);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v33, v34, sub_1005C35B8, v30, (char *)&type metadata for () + 8);
}

uint64_t sub_1005B80D0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 624);
  uint64_t v4 = *(void *)(*(void *)v1 + 608);
  uint64_t v5 = *(void *)(*(void *)v1 + 600);
  v2[115] = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[116] = v6;
  v2[117] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  return _swift_task_switch(sub_1005B8294, 0, 0);
}

uint64_t sub_1005B8294()
{
  uint64_t v87 = v0;
  uint64_t v1 = *(void *)(v0 + 824);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v0 + 944) = v2;
  if (!v2) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(v0 + 840);
  uint64_t v5 = *(void *)(v0 + 520);
  uint64_t v7 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 512);
  swift_beginAccess();
  sub_10001B220(v4, v7, (uint64_t *)&unk_100800A60);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(void *)(v0 + 952) = v8;
  *(void *)(v0 + 960) = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v7, 1, v6) == 1)
  {
    sub_10001457C(*(void *)(v0 + 504), (uint64_t *)&unk_100800A60);
LABEL_8:
    if (qword_1007F7E68 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100026A54(v21, (uint64_t)qword_1008126D0);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "couldn't get info from Core Data", v24, 2u);
      swift_slowDealloc();
    }

    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 1184) = v25;
    *uint64_t v25 = v0;
    uint64_t v26 = sub_1005BDBF8;
LABEL_13:
    v25[1] = v26;
    uint64_t v27 = *(void *)(v0 + 848);
    uint64_t v28 = *(void *)(v0 + 240);
    return sub_1005C22D8(v28, v27);
  }
  uint64_t v9 = *(void *)(v0 + 848);
  uint64_t v10 = *(void *)(v0 + 592);
  uint64_t v11 = *(void *)(v0 + 520);
  uint64_t v12 = *(void *)(v0 + 504);
  uint64_t v13 = *(void *)(v0 + 512);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  *(void *)(v0 + 968) = v14;
  *(void *)(v0 + 976) = (v11 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v14(v10, v12, v13);
  swift_beginAccess();
  id v15 = *(void **)(v9 + 16);
  *(void *)(v0 + 984) = v15;
  if (!v15)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 520) + 8))(*(void *)(v0 + 592), *(void *)(v0 + 512));
    goto LABEL_8;
  }
  uint64_t v16 = *(void *)(v0 + 872);
  uint64_t v17 = *(void *)(v0 + 456);
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 448);
  swift_beginAccess();
  sub_10001B220(v16, v19, &qword_100800950);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) == 1)
  {
    uint64_t v20 = *(void *)(v0 + 448);
    (*(void (**)(void, void))(*(void *)(v0 + 520) + 8))(*(void *)(v0 + 592), *(void *)(v0 + 512));
    sub_10001457C(v20, &qword_100800950);
    goto LABEL_8;
  }
  uint64_t v30 = *(void *)(v0 + 920);
  (*(void (**)(void, void, void))(*(void *)(v0 + 464) + 32))(*(void *)(v0 + 472), *(void *)(v0 + 448), *(void *)(v0 + 456));
  swift_bridgeObjectRetain();
  id v31 = v15;
  static Task<>.checkCancellation()();
  if (v30)
  {
    uint64_t v32 = *(void *)(v0 + 592);
    uint64_t v33 = *(void *)(v0 + 520);
    uint64_t v34 = *(void *)(v0 + 512);
    uint64_t v36 = *(void *)(v0 + 464);
    uint64_t v35 = *(void *)(v0 + 472);
    uint64_t v37 = *(void *)(v0 + 456);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v38 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v39 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      os_signpost_type_t v40 = v39;
      uint64_t v41 = *(void *)(v0 + 384);
      uint64_t v43 = *(void *)(v0 + 296);
      uint64_t v42 = *(void *)(v0 + 304);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v42 + 88))(v41, v43) == enum case for OSSignpostError.doubleEnd(_:))
      {
        id v44 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 384), *(void *)(v0 + 296));
        id v44 = "";
      }
      os_signpost_type_t v57 = v40;
      id v51 = (uint64_t *)(v0 + 776);
      uint64_t v58 = *(void *)(v0 + 720);
      uint64_t v59 = *(void *)(v0 + 640);
      uint64_t v60 = *(void *)(v0 + 632);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v58, v60);
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      os_signpost_id_t v62 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v38, v57, v62, "AssetPostprocessingOperation", v44, v61, 2u);
      swift_slowDealloc();

      uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v53(v58, v60);
    }
    else
    {
      id v51 = (uint64_t *)(v0 + 720);
      uint64_t v52 = *(void *)(v0 + 640);

      uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    }
    uint64_t v63 = *(void *)(v0 + 784);
    uint64_t v64 = *(void *)(v0 + 632);
    v53(*v51, v64);
    swift_release();
    v53(v63, v64);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v65 = *(uint64_t (**)(void))(v0 + 8);
    return v65();
  }
  uint64_t v45 = URL.pathExtension.getter();
  uint64_t v47 = sub_1004648D8(v45, v46);
  swift_bridgeObjectRelease();
  if (v47)
  {
    long long v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 992) = v48;
    *long long v48 = v0;
    v48[1] = sub_1005B8FC8;
    uint64_t v49 = *(void *)(v0 + 848);
    uint64_t v50 = *(void *)(v0 + 576);
LABEL_25:
    uint64_t v56 = *(void *)(v0 + 240);
    return sub_1005C27B0(v50, v3, v2, v56, v49);
  }
  URL.pathExtension.getter();
  char v54 = sub_1004648F0();
  swift_bridgeObjectRelease();
  if (v54)
  {
    id v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 1048) = v55;
    *id v55 = v0;
    v55[1] = sub_1005BA5B4;
    uint64_t v49 = *(void *)(v0 + 848);
    uint64_t v50 = *(void *)(v0 + 568);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  if (URL.pathExtension.getter() == 6709603 && v66 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v67 & 1) == 0)
    {
      if (qword_1007F7E68 != -1) {
        swift_once();
      }
      uint64_t v71 = *(void *)(v0 + 592);
      uint64_t v72 = *(void *)(v0 + 536);
      uint64_t v73 = *(void *)(v0 + 520);
      uint64_t v74 = *(void *)(v0 + 512);
      uint64_t v75 = type metadata accessor for Logger();
      sub_100026A54(v75, (uint64_t)qword_1008126D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v72, v71, v74);
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      BOOL v78 = os_log_type_enabled(v76, v77);
      uint64_t v79 = *(void *)(v0 + 536);
      uint64_t v80 = *(void *)(v0 + 520);
      uint64_t v81 = *(void *)(v0 + 512);
      if (v78)
      {
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        v86[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v82 = 136315138;
        sub_1000FBCDC();
        uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 224) = sub_10011EA98(v83, v84, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        CGSize v85 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v85(v79, v81);
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "unsupported asset type %s", v82, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        CGSize v85 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v85(*(void *)(v0 + 536), *(void *)(v0 + 512));
      }

      *(void *)(v0 + 1120) = v85;
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 1128) = v25;
      *uint64_t v25 = v0;
      uint64_t v26 = sub_1005BCA58;
      goto LABEL_13;
    }
  }
  id v68 = (void *)swift_task_alloc();
  *(void *)(v0 + 1104) = v68;
  *id v68 = v0;
  v68[1] = sub_1005BBB80;
  uint64_t v69 = *(void *)(v0 + 592);
  uint64_t v70 = *(void *)(v0 + 560);
  return sub_10023957C(v70, v69);
}

uint64_t sub_1005B8FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[125] = a2;
  v5[126] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_1005BE854;
  }
  else
  {
    v5[127] = a1;
    uint64_t v6 = sub_1005B913C;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005B913C()
{
  uint64_t v1 = *(void *)(v0 + 856);
  (*(void (**)(void, void, void))(v0 + 968))(*(void *)(v0 + 584), *(void *)(v0 + 576), *(void *)(v0 + 512));
  swift_beginAccess();
  char v2 = *(unsigned char *)(v1 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1024) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1005B924C;
  uint64_t v4 = *(void *)(v0 + 592);
  uint64_t v5 = *(void *)(v0 + 584);
  return sub_100138430(v4, v5, v2);
}

uint64_t sub_1005B924C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 1228) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005B9378, 0, 0);
}

uint64_t sub_1005B9378()
{
  uint64_t v77 = v0;
  if (*(unsigned char *)(v0 + 1228) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 1016);
    uint64_t v2 = *(void *)(v0 + 1008);
    uint64_t v3 = *(void *)(v0 + 1000);
    static Task<>.checkCancellation()();
    if (v2)
    {
      uint64_t v4 = *(void **)(v0 + 984);
      uint64_t v5 = *(void *)(v0 + 592);
      uint64_t v6 = *(void *)(v0 + 584);
      uint64_t v7 = *(void *)(v0 + 520);
      uint64_t v8 = *(void *)(v0 + 512);
      uint64_t v9 = *(void *)(v0 + 464);
      uint64_t v10 = *(void *)(v0 + 472);
      uint64_t v11 = *(void *)(v0 + 456);
      swift_bridgeObjectRelease();

      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v12(v6, v8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
      v12(v5, v8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v13 = OSSignposter.logHandle.getter();
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v14 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        os_signpost_type_t v15 = v14;
        uint64_t v16 = *(void *)(v0 + 320);
        uint64_t v18 = *(void *)(v0 + 296);
        uint64_t v17 = *(void *)(v0 + 304);
        swift_retain();
        checkForErrorAndConsumeState(state:)();
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v16, v18) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v19 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 296));
          uint64_t v19 = "";
        }
        os_signpost_type_t v63 = v15;
        uint64_t v49 = (uint64_t *)(v0 + 776);
        uint64_t v64 = *(void *)(v0 + 656);
        uint64_t v65 = *(void *)(v0 + 640);
        uint64_t v66 = *(void *)(v0 + 632);
        (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v64, v66);
        char v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v67 = 0;
        os_signpost_id_t v68 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, v63, v68, "AssetPostprocessingOperation", v19, v67, 2u);
        swift_slowDealloc();

        id v51 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
        v51(v64, v66);
      }
      else
      {
        uint64_t v49 = (uint64_t *)(v0 + 656);
        uint64_t v50 = *(void *)(v0 + 640);

        id v51 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      }
      uint64_t v69 = *(void *)(v0 + 784);
      uint64_t v70 = *(void *)(v0 + 632);
      v51(*v49, v70);
      swift_release();
      v51(v69, v70);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
      return v71();
    }
    else
    {
      uint64_t v74 = v1;
      uint64_t v75 = v3;
      uint64_t v24 = sub_100464660();
      if (v25) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = v24;
      }
      uint64_t v73 = v26;
      uint64_t v27 = sub_100464660();
      if (v28) {
        uint64_t v29 = 0;
      }
      else {
        uint64_t v29 = v27;
      }
      if (qword_1007F7E68 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 592);
      uint64_t v31 = *(void *)(v0 + 528);
      uint64_t v32 = *(void *)(v0 + 520);
      uint64_t v33 = *(void *)(v0 + 512);
      uint64_t v34 = type metadata accessor for Logger();
      *(void *)(v0 + 1144) = sub_100026A54(v34, (uint64_t)qword_1008126D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
      swift_retain_n();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      BOOL v37 = os_log_type_enabled(v35, v36);
      uint64_t v38 = *(void *)(v0 + 856);
      uint64_t v39 = *(void *)(v0 + 528);
      uint64_t v40 = *(void *)(v0 + 520);
      uint64_t v41 = *(void *)(v0 + 512);
      if (v37)
      {
        double v42 = (double)v29 / (double)v73 * 100.0;
        uint64_t v43 = swift_slowAlloc();
        v76[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136316162;
        uint64_t v72 = v29;
        uint64_t v44 = URL.pathExtension.getter();
        *(void *)(v0 + 176) = sub_10011EA98(v44, v45, v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v46(v39, v41);
        *(_WORD *)(v43 + 12) = 2080;
        swift_beginAccess();
        uint64_t v47 = sub_100041A58(*(unsigned char *)(v38 + 16));
        *(void *)(v0 + 192) = sub_10011EA98(v47, v48, v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 22) = 2048;
        *(void *)(v0 + 200) = v73;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v43 + 32) = 2048;
        *(void *)(v0 + 208) = v72;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v43 + 42) = 2048;
        *(double *)(v0 + 216) = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Resized %s file [%s] %{bytes}ld bytes -> %{bytes}ld bytes (%g%%)", (uint8_t *)v43, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v46(*(void *)(v0 + 528), *(void *)(v0 + 512));

        swift_release_n();
      }
      *(void *)(v0 + 1152) = v46;
      uint64_t v52 = *(void **)(v0 + 984);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 896);
      uint64_t v54 = *(unsigned int *)(v0 + 1224);
      uint64_t v55 = *(void *)(v0 + 616);
      uint64_t v56 = *(void *)(v0 + 600);
      os_signpost_type_t v57 = *(void **)(v0 + 240);
      uint64_t v58 = (void *)swift_allocObject();
      *(void *)(v0 + 1160) = v58;
      v58[2] = v52;
      v58[3] = v74;
      v58[4] = v75;
      v58[5] = v57;
      v53(v55, v54, v56);
      id v59 = v57;
      id v60 = v52;
      uint64_t v61 = (void *)swift_task_alloc();
      *(void *)(v0 + 1168) = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_1005BD1A0;
      uint64_t v62 = *(void *)(v0 + 616);
      return NSManagedObjectContext.perform<A>(schedule:_:)(v61, v62, sub_1005C3704, v58, (char *)&type metadata for () + 8);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 1032) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1005B9E5C;
    uint64_t v21 = *(void *)(v0 + 848);
    uint64_t v22 = *(void *)(v0 + 240);
    return sub_1005C22D8(v22, v21);
  }
}

uint64_t sub_1005B9E5C()
{
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005BEE28;
  }
  else {
    uint64_t v2 = sub_1005B9F9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005B9F9C()
{
  uint64_t v1 = *(void **)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 520);
  uint64_t v5 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v8 = *(void *)(v0 + 456);
  sub_100239B2C();
  swift_allocError();
  *uint64_t v9 = 2;
  swift_willThrow();

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v10(v2, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v12 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v29 = v12;
    uint64_t v13 = *(void *)(v0 + 432);
    uint64_t v15 = *(void *)(v0 + 296);
    uint64_t v14 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v16 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 432), *(void *)(v0 + 296));
      uint64_t v16 = "";
    }
    uint64_t v17 = (uint64_t *)(v0 + 776);
    uint64_t v20 = *(void *)(v0 + 768);
    uint64_t v21 = *(void *)(v0 + 640);
    uint64_t v22 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v20, v22);
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v23 = 0;
    os_signpost_id_t v24 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, v29, v24, "AssetPostprocessingOperation", v16, v23, 2u);
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v19(v20, v22);
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v0 + 768);
    uint64_t v18 = *(void *)(v0 + 640);

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  }
  uint64_t v25 = *(void *)(v0 + 784);
  uint64_t v26 = *(void *)(v0 + 632);
  v19(*v17, v26);
  swift_release();
  v19(v25, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1005BA5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[132] = a2;
  v5[133] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_1005BF418;
  }
  else
  {
    v5[134] = a1;
    uint64_t v6 = sub_1005BA728;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005BA728()
{
  (*(void (**)(void, void, void))(v0 + 968))(*(void *)(v0 + 584), *(void *)(v0 + 568), *(void *)(v0 + 512));
  uint64_t v1 = dword_100805DB8;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 1080) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005BA818;
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100805DB8 + v1))(v3, v4);
}

uint64_t sub_1005BA818(char a1)
{
  *(unsigned char *)(*(void *)v1 + 1229) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005BA944, 0, 0);
}

uint64_t sub_1005BA944()
{
  uint64_t v77 = v0;
  if (*(unsigned char *)(v0 + 1229) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 1072);
    uint64_t v2 = *(void *)(v0 + 1064);
    uint64_t v3 = *(void *)(v0 + 1056);
    static Task<>.checkCancellation()();
    if (v2)
    {
      uint64_t v4 = *(void **)(v0 + 984);
      uint64_t v5 = *(void *)(v0 + 592);
      uint64_t v6 = *(void *)(v0 + 584);
      uint64_t v7 = *(void *)(v0 + 520);
      uint64_t v8 = *(void *)(v0 + 512);
      uint64_t v9 = *(void *)(v0 + 464);
      uint64_t v10 = *(void *)(v0 + 472);
      uint64_t v11 = *(void *)(v0 + 456);
      swift_bridgeObjectRelease();

      os_signpost_type_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v12(v6, v8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
      v12(v5, v8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v13 = OSSignposter.logHandle.getter();
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v14 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        os_signpost_type_t v15 = v14;
        uint64_t v16 = *(void *)(v0 + 320);
        uint64_t v18 = *(void *)(v0 + 296);
        uint64_t v17 = *(void *)(v0 + 304);
        swift_retain();
        checkForErrorAndConsumeState(state:)();
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v16, v18) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v19 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 296));
          uint64_t v19 = "";
        }
        os_signpost_type_t v63 = v15;
        uint64_t v49 = (uint64_t *)(v0 + 776);
        uint64_t v64 = *(void *)(v0 + 656);
        uint64_t v65 = *(void *)(v0 + 640);
        uint64_t v66 = *(void *)(v0 + 632);
        (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v64, v66);
        char v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v67 = 0;
        os_signpost_id_t v68 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, v63, v68, "AssetPostprocessingOperation", v19, v67, 2u);
        swift_slowDealloc();

        id v51 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
        v51(v64, v66);
      }
      else
      {
        uint64_t v49 = (uint64_t *)(v0 + 656);
        uint64_t v50 = *(void *)(v0 + 640);

        id v51 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      }
      uint64_t v69 = *(void *)(v0 + 784);
      uint64_t v70 = *(void *)(v0 + 632);
      v51(*v49, v70);
      swift_release();
      v51(v69, v70);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
      return v71();
    }
    else
    {
      uint64_t v74 = v1;
      uint64_t v75 = v3;
      uint64_t v24 = sub_100464660();
      if (v25) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = v24;
      }
      uint64_t v73 = v26;
      uint64_t v27 = sub_100464660();
      if (v28) {
        uint64_t v29 = 0;
      }
      else {
        uint64_t v29 = v27;
      }
      if (qword_1007F7E68 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 592);
      uint64_t v31 = *(void *)(v0 + 528);
      uint64_t v32 = *(void *)(v0 + 520);
      uint64_t v33 = *(void *)(v0 + 512);
      uint64_t v34 = type metadata accessor for Logger();
      *(void *)(v0 + 1144) = sub_100026A54(v34, (uint64_t)qword_1008126D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v30, v33);
      swift_retain_n();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      BOOL v37 = os_log_type_enabled(v35, v36);
      uint64_t v38 = *(void *)(v0 + 856);
      uint64_t v39 = *(void *)(v0 + 528);
      uint64_t v40 = *(void *)(v0 + 520);
      uint64_t v41 = *(void *)(v0 + 512);
      if (v37)
      {
        double v42 = (double)v29 / (double)v73 * 100.0;
        uint64_t v43 = swift_slowAlloc();
        v76[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136316162;
        uint64_t v72 = v29;
        uint64_t v44 = URL.pathExtension.getter();
        *(void *)(v0 + 176) = sub_10011EA98(v44, v45, v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v46(v39, v41);
        *(_WORD *)(v43 + 12) = 2080;
        swift_beginAccess();
        uint64_t v47 = sub_100041A58(*(unsigned char *)(v38 + 16));
        *(void *)(v0 + 192) = sub_10011EA98(v47, v48, v76);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 22) = 2048;
        *(void *)(v0 + 200) = v73;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v43 + 32) = 2048;
        *(void *)(v0 + 208) = v72;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v43 + 42) = 2048;
        *(double *)(v0 + 216) = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Resized %s file [%s] %{bytes}ld bytes -> %{bytes}ld bytes (%g%%)", (uint8_t *)v43, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v46(*(void *)(v0 + 528), *(void *)(v0 + 512));

        swift_release_n();
      }
      *(void *)(v0 + 1152) = v46;
      uint64_t v52 = *(void **)(v0 + 984);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 896);
      uint64_t v54 = *(unsigned int *)(v0 + 1224);
      uint64_t v55 = *(void *)(v0 + 616);
      uint64_t v56 = *(void *)(v0 + 600);
      os_signpost_type_t v57 = *(void **)(v0 + 240);
      uint64_t v58 = (void *)swift_allocObject();
      *(void *)(v0 + 1160) = v58;
      v58[2] = v52;
      v58[3] = v74;
      v58[4] = v75;
      v58[5] = v57;
      v53(v55, v54, v56);
      id v59 = v57;
      id v60 = v52;
      uint64_t v61 = (void *)swift_task_alloc();
      *(void *)(v0 + 1168) = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_1005BD1A0;
      uint64_t v62 = *(void *)(v0 + 616);
      return NSManagedObjectContext.perform<A>(schedule:_:)(v61, v62, sub_1005C3704, v58, (char *)&type metadata for () + 8);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 1088) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1005BB428;
    uint64_t v21 = *(void *)(v0 + 848);
    uint64_t v22 = *(void *)(v0 + 240);
    return sub_1005C22D8(v22, v21);
  }
}

uint64_t sub_1005BB428()
{
  *(void *)(*(void *)v1 + 1096) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005BF9EC;
  }
  else {
    uint64_t v2 = sub_1005BB568;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005BB568()
{
  uint64_t v1 = *(void **)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 520);
  uint64_t v5 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v8 = *(void *)(v0 + 456);
  sub_100239B2C();
  swift_allocError();
  *uint64_t v9 = 2;
  swift_willThrow();

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v10(v2, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v12 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v29 = v12;
    uint64_t v13 = *(void *)(v0 + 424);
    uint64_t v15 = *(void *)(v0 + 296);
    uint64_t v14 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v13, v15) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v16 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 424), *(void *)(v0 + 296));
      uint64_t v16 = "";
    }
    uint64_t v17 = (uint64_t *)(v0 + 776);
    uint64_t v20 = *(void *)(v0 + 760);
    uint64_t v21 = *(void *)(v0 + 640);
    uint64_t v22 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v20, v22);
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v23 = 0;
    os_signpost_id_t v24 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, v29, v24, "AssetPostprocessingOperation", v16, v23, 2u);
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v19(v20, v22);
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v0 + 760);
    uint64_t v18 = *(void *)(v0 + 640);

    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  }
  uint64_t v25 = *(void *)(v0 + 784);
  uint64_t v26 = *(void *)(v0 + 632);
  v19(*v17, v26);
  swift_release();
  v19(v25, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1005BBB80()
{
  *(void *)(*(void *)v1 + 1112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005C0738;
  }
  else {
    uint64_t v2 = sub_1005BBCC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005BBCC0()
{
  uint64_t v104 = v0;
  uint64_t v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 952);
  uint64_t v2 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 496);
  (*(void (**)(void, void, uint64_t))(v0 + 968))(*(void *)(v0 + 584), *(void *)(v0 + 560), v2);
  type metadata accessor for Journaling();
  sub_1004FD1B0(v3);
  sub_10001B220(v3, v4, (uint64_t *)&unk_100800A60);
  if (v1(v4, 1, v2) == 1)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 272) + 56))(*(void *)(v0 + 256), 1, 1, *(void *)(v0 + 264));
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 552);
    uint64_t v6 = *(void *)(v0 + 544);
    uint64_t v7 = *(void *)(v0 + 520);
    uint64_t v8 = *(void *)(v0 + 512);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 968))(v5, *(void *)(v0 + 488), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    FilePath.init(_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
  }
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v11 = *(void *)(v0 + 256);
  sub_10001457C(*(void *)(v0 + 496), (uint64_t *)&unk_100800A60);
  os_signpost_type_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v12(v11, 1, v9) == 1)
  {
    sub_10001457C(*(void *)(v0 + 256), &qword_100812708);
LABEL_14:
    sub_100239B2C();
    uint64_t v46 = swift_allocError();
    *uint64_t v47 = 2;
    swift_willThrow();
    *(void *)(v0 + 1200) = v46;
    unint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 1208) = v48;
    *unint64_t v48 = v0;
    v48[1] = sub_1005BFFDC;
    uint64_t v49 = *(void *)(v0 + 848);
    uint64_t v50 = *(void *)(v0 + 240);
    return sub_1005C22D8(v50, v49);
  }
  uint64_t v13 = *(void *)(v0 + 584);
  uint64_t v14 = *(void *)(v0 + 552);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 512);
  uint64_t v17 = *(void *)(v0 + 264);
  uint64_t v18 = *(void *)(v0 + 248);
  uint64_t v100 = *(void (**)(void, void, uint64_t))(*(void *)(v0 + 272) + 32);
  v100(*(void *)(v0 + 288), *(void *)(v0 + 256), v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v16);
  FilePath.init(_:)();
  if (v12(v18, 1, v17) == 1)
  {
    uint64_t v19 = *(void *)(v0 + 248);
    (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 264));
    sub_10001457C(v19, &qword_100812708);
    goto LABEL_14;
  }
  v100(*(void *)(v0 + 280), *(void *)(v0 + 248), *(void *)(v0 + 264));
  char v20 = FilePath.removePrefix(_:)();
  uint64_t v21 = *(void *)(v0 + 280);
  uint64_t v22 = *(void *)(v0 + 288);
  uint64_t v24 = *(void *)(v0 + 264);
  uint64_t v23 = *(void *)(v0 + 272);
  if ((v20 & 1) == 0)
  {
    unint64_t v45 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v45(*(void *)(v0 + 280), *(void *)(v0 + 264));
    v45(v22, v24);
    goto LABEL_14;
  }
  uint64_t v25 = FilePath.string.getter();
  uint64_t v27 = v26;
  char v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v28(v21, v24);
  v28(v22, v24);
  uint64_t v29 = *(void *)(v0 + 1112);
  static Task<>.checkCancellation()();
  if (v29)
  {
    uint64_t v30 = *(void **)(v0 + 984);
    uint64_t v31 = *(void *)(v0 + 592);
    uint64_t v32 = *(void *)(v0 + 584);
    uint64_t v33 = *(void *)(v0 + 520);
    uint64_t v34 = *(void *)(v0 + 512);
    uint64_t v35 = *(void *)(v0 + 464);
    uint64_t v36 = *(void *)(v0 + 472);
    uint64_t v37 = *(void *)(v0 + 456);
    swift_bridgeObjectRelease();

    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v38(v32, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
    v38(v31, v34);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v39 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v40 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      os_signpost_type_t v101 = v40;
      uint64_t v41 = *(void *)(v0 + 320);
      uint64_t v43 = *(void *)(v0 + 296);
      uint64_t v42 = *(void *)(v0 + 304);
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v42 + 88))(v41, v43) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v44 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 296));
        uint64_t v44 = "";
      }
      uint64_t v76 = (uint64_t *)(v0 + 776);
      uint64_t v90 = *(void *)(v0 + 656);
      uint64_t v91 = *(void *)(v0 + 640);
      uint64_t v92 = *(void *)(v0 + 632);
      (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v90, v92);
      double v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v93 = 0;
      os_signpost_id_t v94 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v39, v101, v94, "AssetPostprocessingOperation", v44, v93, 2u);
      swift_slowDealloc();

      uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      v78(v90, v92);
    }
    else
    {
      uint64_t v76 = (uint64_t *)(v0 + 656);
      uint64_t v77 = *(void *)(v0 + 640);

      uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    }
    uint64_t v95 = *(void *)(v0 + 784);
    uint64_t v96 = *(void *)(v0 + 632);
    v78(*v76, v96);
    swift_release();
    v78(v95, v96);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long double v97 = *(uint64_t (**)(void))(v0 + 8);
    return v97();
  }
  else
  {
    uint64_t v102 = v27;
    uint64_t v52 = sub_100464660();
    if (v53) {
      uint64_t v54 = 0;
    }
    else {
      uint64_t v54 = v52;
    }
    uint64_t v98 = v54;
    uint64_t v55 = sub_100464660();
    if (v56) {
      uint64_t v57 = 0;
    }
    else {
      uint64_t v57 = v55;
    }
    if (qword_1007F7E68 != -1) {
      swift_once();
    }
    uint64_t v99 = v25;
    uint64_t v58 = *(void *)(v0 + 592);
    uint64_t v59 = *(void *)(v0 + 528);
    uint64_t v60 = *(void *)(v0 + 520);
    uint64_t v61 = *(void *)(v0 + 512);
    uint64_t v62 = type metadata accessor for Logger();
    *(void *)(v0 + 1144) = sub_100026A54(v62, (uint64_t)qword_1008126D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v59, v58, v61);
    swift_retain_n();
    os_signpost_type_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.default.getter();
    BOOL v65 = os_log_type_enabled(v63, v64);
    uint64_t v66 = *(void *)(v0 + 856);
    uint64_t v67 = *(void *)(v0 + 528);
    uint64_t v68 = *(void *)(v0 + 520);
    uint64_t v69 = *(void *)(v0 + 512);
    if (v65)
    {
      uint64_t v70 = swift_slowAlloc();
      v103[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 136316162;
      uint64_t v71 = URL.pathExtension.getter();
      *(void *)(v0 + 176) = sub_10011EA98(v71, v72, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v73(v67, v69);
      *(_WORD *)(v70 + 12) = 2080;
      swift_beginAccess();
      uint64_t v74 = sub_100041A58(*(unsigned char *)(v66 + 16));
      *(void *)(v0 + 192) = sub_10011EA98(v74, v75, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 22) = 2048;
      *(void *)(v0 + 200) = v98;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v70 + 32) = 2048;
      *(void *)(v0 + 208) = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v70 + 42) = 2048;
      *(double *)(v0 + 216) = (double)v57 / (double)v98 * 100.0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Resized %s file [%s] %{bytes}ld bytes -> %{bytes}ld bytes (%g%%)", (uint8_t *)v70, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v73(*(void *)(v0 + 528), *(void *)(v0 + 512));

      swift_release_n();
    }
    *(void *)(v0 + 1152) = v73;
    uint64_t v79 = *(void **)(v0 + 984);
    uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 896);
    uint64_t v81 = *(unsigned int *)(v0 + 1224);
    uint64_t v82 = *(void *)(v0 + 616);
    uint64_t v83 = *(void *)(v0 + 600);
    unint64_t v84 = *(void **)(v0 + 240);
    CGSize v85 = (void *)swift_allocObject();
    *(void *)(v0 + 1160) = v85;
    v85[2] = v79;
    v85[3] = v99;
    v85[4] = v102;
    v85[5] = v84;
    v80(v82, v81, v83);
    id v86 = v84;
    id v87 = v79;
    uint64_t v88 = (void *)swift_task_alloc();
    *(void *)(v0 + 1168) = v88;
    *uint64_t v88 = v0;
    v88[1] = sub_1005BD1A0;
    uint64_t v89 = *(void *)(v0 + 616);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v88, v89, sub_1005C3704, v85, (char *)&type metadata for () + 8);
  }
}

uint64_t sub_1005BCA58()
{
  *(void *)(*(void *)v1 + 1136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005C0DEC;
  }
  else {
    uint64_t v2 = sub_1005BCB98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005BCB98()
{
  uint64_t v1 = *(void **)(v0 + 984);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 1120);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 456);
  sub_100239B2C();
  swift_allocError();
  *uint64_t v7 = 1;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v26(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v9 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v27 = v9;
    uint64_t v10 = *(void *)(v0 + 416);
    uint64_t v12 = *(void *)(v0 + 296);
    uint64_t v11 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v10, v12) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 416), *(void *)(v0 + 296));
      uint64_t v13 = "";
    }
    uint64_t v14 = (uint64_t *)(v0 + 776);
    uint64_t v17 = *(void *)(v0 + 752);
    uint64_t v18 = *(void *)(v0 + 640);
    uint64_t v19 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v17, v19);
    char v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, v27, v21, "AssetPostprocessingOperation", v13, v20, 2u);
    swift_slowDealloc();

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v16(v17, v19);
  }
  else
  {
    uint64_t v14 = (uint64_t *)(v0 + 752);
    uint64_t v15 = *(void *)(v0 + 640);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  }
  uint64_t v22 = *(void *)(v0 + 784);
  uint64_t v23 = *(void *)(v0 + 632);
  v16(*v14, v23);
  swift_release();
  v16(v22, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1005BD1A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1176) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 928))(*(void *)(v2 + 616), *(void *)(v2 + 600));
  swift_release();
  if (v0) {
    uint64_t v3 = sub_1005C13C4;
  }
  else {
    uint64_t v3 = sub_1005BD360;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005BD360()
{
  id v1 = [self defaultManager];
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  *(void *)(v0 + 184) = 0;
  unsigned int v5 = [v1 removeItemAtURL:v3 error:v0 + 184];

  uint64_t v6 = *(void **)(v0 + 184);
  if (v5)
  {
    id v7 = v6;
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 240);
    id v9 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v10 = v8;
    swift_errorRetain();
    id v11 = v10;
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void **)(v0 + 240);
    if (v14)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412546;
      *(void *)(v0 + 160) = v15;
      id v18 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v15;

      *(_WORD *)(v16 + 12) = 2112;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 168) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v17[1] = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%@ error while deleting originalImageFileURL %@", (uint8_t *)v16, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  id v20 = [self defaultCenter];
  if (qword_1007F6E80 != -1) {
    swift_once();
  }
  os_signpost_id_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
  uint64_t v47 = *(void **)(v0 + 984);
  uint64_t v48 = *(void *)(v0 + 592);
  uint64_t v22 = *(void *)(v0 + 584);
  uint64_t v23 = *(void *)(v0 + 512);
  uint64_t v25 = *(void *)(v0 + 464);
  uint64_t v24 = *(void *)(v0 + 472);
  uint64_t v46 = *(void *)(v0 + 456);
  uint64_t v26 = qword_10083D408;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v20 postNotificationName:v26 object:isa];

  v21(v22, v23);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v46);
  v21(v48, v23);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v29 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v30 = *(void *)(v0 + 408);
    uint64_t v31 = *(void *)(v0 + 296);
    uint64_t v32 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v32 + 88))(v30, v31) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v33 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 408), *(void *)(v0 + 296));
      uint64_t v33 = "";
    }
    uint64_t v34 = (uint64_t *)(v0 + 776);
    uint64_t v37 = *(void *)(v0 + 744);
    uint64_t v38 = *(void *)(v0 + 640);
    uint64_t v39 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v37, v39);
    os_signpost_type_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_type_t v40 = 0;
    os_signpost_id_t v41 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v28, v29, v41, "AssetPostprocessingOperation", v33, v40, 2u);
    swift_slowDealloc();

    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v36(v37, v39);
  }
  else
  {
    uint64_t v34 = (uint64_t *)(v0 + 744);
    uint64_t v35 = *(void *)(v0 + 640);

    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  }
  uint64_t v42 = *(void *)(v0 + 784);
  uint64_t v43 = *(void *)(v0 + 632);
  v36(*v34, v43);
  swift_release();
  v36(v42, v43);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1005BDBF8()
{
  *(void *)(*(void *)v1 + 1192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005BE2DC;
  }
  else {
    uint64_t v2 = sub_1005BDD38;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005BDD38()
{
  sub_100239B2C();
  swift_allocError();
  unsigned char *v1 = 2;
  swift_willThrow();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v3 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v20 = v3;
    uint64_t v4 = *(void *)(v0 + 400);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == enum case for OSSignpostError.doubleEnd(_:))
    {
      id v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 400), *(void *)(v0 + 296));
      id v7 = "";
    }
    uint64_t v8 = (uint64_t *)(v0 + 776);
    uint64_t v11 = *(void *)(v0 + 736);
    uint64_t v12 = *(void *)(v0 + 640);
    uint64_t v13 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v11, v13);
    BOOL v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v14 = 0;
    os_signpost_id_t v15 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v20, v15, "AssetPostprocessingOperation", v7, v14, 2u);
    swift_slowDealloc();

    id v10 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v10(v11, v13);
  }
  else
  {
    uint64_t v8 = (uint64_t *)(v0 + 736);
    uint64_t v9 = *(void *)(v0 + 640);

    id v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  uint64_t v16 = *(void *)(v0 + 784);
  uint64_t v17 = *(void *)(v0 + 632);
  v10(*v8, v17);
  swift_release();
  v10(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1005BE2DC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v2 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v19 = v2;
    uint64_t v3 = *(void *)(v0 + 392);
    uint64_t v5 = *(void *)(v0 + 296);
    uint64_t v4 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 392), *(void *)(v0 + 296));
      uint64_t v6 = "";
    }
    id v7 = (uint64_t *)(v0 + 776);
    uint64_t v10 = *(void *)(v0 + 728);
    uint64_t v11 = *(void *)(v0 + 640);
    uint64_t v12 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v10, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v19, v14, "AssetPostprocessingOperation", v6, v13, 2u);
    swift_slowDealloc();

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  else
  {
    id v7 = (uint64_t *)(v0 + 728);
    uint64_t v8 = *(void *)(v0 + 640);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  }
  uint64_t v15 = *(void *)(v0 + 784);
  uint64_t v16 = *(void *)(v0 + 632);
  v9(*v7, v16);
  swift_release();
  v9(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1005BE854()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 456);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  id v7 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v8 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v25 = v8;
    uint64_t v9 = *(void *)(v0 + 376);
    uint64_t v11 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v12 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 376), *(void *)(v0 + 296));
      uint64_t v12 = "";
    }
    uint64_t v13 = (uint64_t *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 712);
    uint64_t v17 = *(void *)(v0 + 640);
    uint64_t v18 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v16, v18);
    os_signpost_type_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_type_t v19 = 0;
    os_signpost_id_t v20 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, v25, v20, "AssetPostprocessingOperation", v12, v19, 2u);
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  else
  {
    uint64_t v13 = (uint64_t *)(v0 + 712);
    uint64_t v14 = *(void *)(v0 + 640);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  }
  uint64_t v21 = *(void *)(v0 + 784);
  uint64_t v22 = *(void *)(v0 + 632);
  v15(*v13, v22);
  swift_release();
  v15(v21, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1005BEE28()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 456);

  os_signpost_type_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v8(v1, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v10 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v27 = v10;
    uint64_t v11 = *(void *)(v0 + 368);
    uint64_t v13 = *(void *)(v0 + 296);
    uint64_t v12 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v11, v13) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v14 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 296));
      uint64_t v14 = "";
    }
    uint64_t v15 = (uint64_t *)(v0 + 776);
    uint64_t v18 = *(void *)(v0 + 704);
    uint64_t v19 = *(void *)(v0 + 640);
    uint64_t v20 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v18, v20);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_signpost_id_t v22 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, v27, v22, "AssetPostprocessingOperation", v14, v21, 2u);
    swift_slowDealloc();

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v17(v18, v20);
  }
  else
  {
    uint64_t v15 = (uint64_t *)(v0 + 704);
    uint64_t v16 = *(void *)(v0 + 640);

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  }
  uint64_t v23 = *(void *)(v0 + 784);
  uint64_t v24 = *(void *)(v0 + 632);
  v17(*v15, v24);
  swift_release();
  v17(v23, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_type_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1005BF418()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 456);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v8 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v25 = v8;
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v11 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v12 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 360), *(void *)(v0 + 296));
      uint64_t v12 = "";
    }
    uint64_t v13 = (uint64_t *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 696);
    uint64_t v17 = *(void *)(v0 + 640);
    uint64_t v18 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v16, v18);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    os_signpost_id_t v20 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, v25, v20, "AssetPostprocessingOperation", v12, v19, 2u);
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  else
  {
    uint64_t v13 = (uint64_t *)(v0 + 696);
    uint64_t v14 = *(void *)(v0 + 640);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  }
  uint64_t v21 = *(void *)(v0 + 784);
  uint64_t v22 = *(void *)(v0 + 632);
  v15(*v13, v22);
  swift_release();
  v15(v21, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1005BF9EC()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 456);

  os_signpost_type_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v8(v1, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v10 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v27 = v10;
    uint64_t v11 = *(void *)(v0 + 352);
    uint64_t v13 = *(void *)(v0 + 296);
    uint64_t v12 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v11, v13) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v14 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 296));
      uint64_t v14 = "";
    }
    uint64_t v15 = (uint64_t *)(v0 + 776);
    uint64_t v18 = *(void *)(v0 + 688);
    uint64_t v19 = *(void *)(v0 + 640);
    uint64_t v20 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v18, v20);
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_signpost_id_t v22 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, v27, v22, "AssetPostprocessingOperation", v14, v21, 2u);
    swift_slowDealloc();

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v17(v18, v20);
  }
  else
  {
    uint64_t v15 = (uint64_t *)(v0 + 688);
    uint64_t v16 = *(void *)(v0 + 640);

    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  }
  uint64_t v23 = *(void *)(v0 + 784);
  uint64_t v24 = *(void *)(v0 + 632);
  v17(*v15, v24);
  swift_release();
  v17(v23, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_type_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1005BFFDC()
{
  *(void *)(*(void *)v1 + 1216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005C0804;
  }
  else {
    uint64_t v2 = sub_1005C011C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005C011C()
{
  uint64_t v28 = *(void *)(v0 + 1112);
  uint64_t v1 = *(void **)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v6 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 456);
  sub_100239B2C();
  swift_allocError();
  unsigned char *v8 = 2;
  swift_willThrow();
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v2, v4);
  if (!v28) {
    v9(*(void *)(v0 + 584), *(void *)(v0 + 512));
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  os_signpost_type_t v10 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v11 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v29 = v11;
    uint64_t v12 = *(void *)(v0 + 344);
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 88))(v12, v14) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 296));
      uint64_t v15 = "";
    }
    uint64_t v16 = (uint64_t *)(v0 + 776);
    uint64_t v19 = *(void *)(v0 + 680);
    uint64_t v20 = *(void *)(v0 + 640);
    uint64_t v21 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v19, v21);
    os_signpost_id_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v22 = 0;
    os_signpost_id_t v23 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, v29, v23, "AssetPostprocessingOperation", v15, v22, 2u);
    swift_slowDealloc();

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v18(v19, v21);
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v0 + 680);
    uint64_t v17 = *(void *)(v0 + 640);

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  }
  uint64_t v24 = *(void *)(v0 + 784);
  uint64_t v25 = *(void *)(v0 + 632);
  v18(*v16, v25);
  swift_release();
  v18(v24, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1005C0738()
{
  v0[150] = v0[139];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[151] = v1;
  void *v1 = v0;
  v1[1] = sub_1005BFFDC;
  uint64_t v2 = v0[106];
  uint64_t v3 = v0[30];
  return sub_1005C22D8(v3, v2);
}

uint64_t sub_1005C0804()
{
  uint64_t v1 = *(void *)(v0 + 1112);
  uint64_t v2 = *(void **)(v0 + 984);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 520);
  uint64_t v5 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v8 = *(void *)(v0 + 456);
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v3, v5);
  if (!v1) {
    v9(*(void *)(v0 + 584), *(void *)(v0 + 512));
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  os_signpost_type_t v10 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v11 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v28 = v11;
    uint64_t v12 = *(void *)(v0 + 336);
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 88))(v12, v14) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 296));
      uint64_t v15 = "";
    }
    uint64_t v16 = (uint64_t *)(v0 + 776);
    uint64_t v19 = *(void *)(v0 + 672);
    uint64_t v20 = *(void *)(v0 + 640);
    uint64_t v21 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v19, v21);
    os_signpost_id_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v22 = 0;
    os_signpost_id_t v23 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, v28, v23, "AssetPostprocessingOperation", v15, v22, 2u);
    swift_slowDealloc();

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v18(v19, v21);
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v0 + 672);
    uint64_t v17 = *(void *)(v0 + 640);

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  }
  uint64_t v24 = *(void *)(v0 + 784);
  uint64_t v25 = *(void *)(v0 + 632);
  v18(*v16, v25);
  swift_release();
  v18(v24, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1005C0DEC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1120);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 464);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 456);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  v1(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v8 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v25 = v8;
    uint64_t v9 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 296);
    uint64_t v10 = *(void *)(v0 + 304);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v12 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 296));
      uint64_t v12 = "";
    }
    uint64_t v13 = (uint64_t *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 664);
    uint64_t v17 = *(void *)(v0 + 640);
    uint64_t v18 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v16, v18);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    os_signpost_id_t v20 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, v25, v20, "AssetPostprocessingOperation", v12, v19, 2u);
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  else
  {
    uint64_t v13 = (uint64_t *)(v0 + 664);
    uint64_t v14 = *(void *)(v0 + 640);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  }
  uint64_t v21 = *(void *)(v0 + 784);
  uint64_t v22 = *(void *)(v0 + 632);
  v15(*v13, v22);
  swift_release();
  v15(v21, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_id_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1005C13C4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 456);

  v1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v1(v2, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  os_signpost_type_t v8 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v9 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v26 = v9;
    uint64_t v10 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v12 = *(void *)(v0 + 296);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v11, v12) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
      uint64_t v13 = "";
    }
    uint64_t v14 = (uint64_t *)(v0 + 776);
    uint64_t v17 = *(void *)(v0 + 648);
    uint64_t v18 = *(void *)(v0 + 640);
    uint64_t v19 = *(void *)(v0 + 632);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 800))(*(void *)(v0 + 776), v17, v19);
    os_signpost_id_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, v26, v21, "AssetPostprocessingOperation", v13, v20, 2u);
    swift_slowDealloc();

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v16(v17, v19);
  }
  else
  {
    uint64_t v14 = (uint64_t *)(v0 + 648);
    uint64_t v15 = *(void *)(v0 + 640);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  }
  uint64_t v22 = *(void *)(v0 + 784);
  uint64_t v23 = *(void *)(v0 + 632);
  v16(*v14, v23);
  swift_release();
  v16(v22, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

void sub_1005C19B8(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v79 = a5;
  uint64_t v76 = a4;
  uint64_t v77 = a2;
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  os_signpost_type_t v8 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v70 - v10;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v12 - 8);
  uint64_t v78 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v70 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v80 = *(uint8_t **)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_projectBox();
  uint64_t v21 = swift_projectBox();
  id v22 = [*(id *)(a1 + qword_100812710) objectWithID:*(void *)(a1 + qword_100812728)];
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
    if (qword_1007F7E68 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_100026A54(v42, (uint64_t)qword_1008126D0);
    id v33 = v22;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v34, v43))
    {

      return;
    }
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    v82[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v80 = v44 + 4;
    id v45 = [v33 CKDescription];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v48 = v47;

    uint64_t v81 = sub_10011EA98(v46, v48, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v43, "unable to get fileAttachmentMO from CoreData, instead fetched %s", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_21;
  }
  uint64_t v24 = (void *)v23;
  uint64_t v75 = v21;
  id v25 = v22;
  id v26 = [v24 filePath];
  if (!v26)
  {
LABEL_5:
    if (qword_1007F7E68 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100026A54(v32, (uint64_t)qword_1008126D0);
    id v33 = v25;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v34, v35))
    {

      return;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    v82[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315138;
    id v37 = [v24 filePath];
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;
    }
    else
    {
      unint64_t v41 = 0xE300000000000000;
      uint64_t v39 = 7104878;
    }
    uint64_t v81 = sub_10011EA98(v39, v41, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "filePath is not valid path: %s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_21:
    return;
  }
  uint64_t v27 = v26;
  uint64_t v72 = v20;
  uint64_t v74 = v19;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  type metadata accessor for Journaling();
  uint64_t v73 = v28;
  sub_1005E6B0C((uint64_t)v16);
  uint64_t v31 = v80;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v80 + 6))(v16, 1, v17) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v16, (uint64_t *)&unk_100800A60);
    goto LABEL_5;
  }
  uint64_t v49 = v31;
  uint64_t v50 = (void **)(v77 + 16);
  v70[1] = v79 + 16;
  id v51 = (void (*)(char *, char *, uint64_t))*((void *)v49 + 4);
  uint64_t v77 = v49 + 32;
  uint64_t v71 = v51;
  v51(v74, v16, v17);
  swift_beginAccess();
  uint64_t v52 = *v50;
  *uint64_t v50 = v24;
  id v53 = v25;

  id v54 = [v24 asset];
  if (v54)
  {
    uint64_t v55 = v54;
    id v56 = [v54 id];

    if (v56)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v57 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v8, 0, 1, v57);
    }
    else
    {
      uint64_t v60 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v8, 1, 1, v60);
    }
    uint64_t v59 = v76;
    sub_10018750C((uint64_t)v8, (uint64_t)v11);
  }
  else
  {
    uint64_t v58 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v11, 1, 1, v58);
    uint64_t v59 = v76;
  }
  uint64_t v61 = (char *)(v59 + 16);
  uint64_t v62 = v72;
  swift_beginAccess();
  sub_100041190((uint64_t)v11, v62, &qword_100800950);
  id v63 = [v24 asset];
  os_log_type_t v64 = v63;
  if (v63)
  {
    id v65 = [v63 assetType];

    if (v65)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  char v66 = sub_100044D84();

  if (v66 == 21) {
    char v66 = 20;
  }
  swift_beginAccess();
  *uint64_t v61 = v66;
  swift_beginAccess();
  uint64_t v67 = v79;
  *(void *)(v79 + 16) = v73;
  *(void *)(v67 + 24) = v30;
  swift_bridgeObjectRelease();
  uint64_t v68 = (uint64_t)v78;
  v71(v78, v74, v17);
  (*((void (**)(uint64_t, void, uint64_t, uint64_t))v80 + 7))(v68, 0, 1, v17);
  uint64_t v69 = v75;
  swift_beginAccess();
  sub_100041190(v68, v69, (uint64_t *)&unk_100800A60);
}

uint64_t sub_1005C22D8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_1005C2398, 0, 0);
}

uint64_t sub_1005C2398()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v0[2];
  uint64_t v6 = swift_allocObject();
  v0[7] = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  swift_retain();
  id v7 = v5;
  os_signpost_type_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  void *v8 = v0;
  v8[1] = sub_1005C24D4;
  uint64_t v9 = v0[6];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v8, v9, sub_1005C395C, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1005C24D4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1005C26CC;
  }
  else {
    uint64_t v5 = sub_1005C2668;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005C2668()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005C26CC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1005C2730(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    id v3 = v2;
    [v3 setNeedsProcessing:0];
    sub_1005C30F0();
  }
}

uint64_t sub_1005C27B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  sub_100010218((uint64_t *)&unk_100800A60);
  v5[15] = swift_task_alloc();
  return _swift_task_switch(sub_1005C2878, 0, 0);
}

uint64_t sub_1005C2878()
{
  uint64_t v39 = v0;
  uint64_t v1 = v0[15];
  id v2 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithString:v3];

  id v5 = [v4 lastPathComponent];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v0[2] = v6;
  v0[3] = v8;
  v0[4] = 46;
  v0[5] = 0xE100000000000000;
  v0[6] = 0x64657A697365725FLL;
  v0[7] = 0xE90000000000002ELL;
  unint64_t v37 = sub_100014344();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  id v9 = [v4 stringByDeletingLastPathComponent];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v10 = objc_allocWithZone((Class)NSString);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithString:v11];

  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 stringByAppendingPathComponent:v13];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  type metadata accessor for Journaling();
  sub_1005E6B0C(v1);
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v1, 1, v18) == 1)
  {
    sub_10001457C(v0[15], (uint64_t *)&unk_100800A60);
    if (qword_1007F7E68 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100026A54(v20, (uint64_t)qword_1008126D0);
    swift_bridgeObjectRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      swift_bridgeObjectRetain();
      v0[8] = sub_10011EA98(v15, v17, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "unable to create resizedImageFileURL from path %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v31 = (void *)swift_task_alloc();
    v0[16] = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_1005C2E30;
    uint64_t v33 = v0[13];
    uint64_t v32 = v0[14];
    return sub_1005C22D8(v33, v32);
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v19 + 32))(v0[10], v0[15], v18);
    id v24 = [self defaultManager];
    URL._bridgeToObjectiveC()(v25);
    uint64_t v27 = v26;
    v0[9] = 0;
    unsigned int v28 = [v24 removeItemAtURL:v26 error:v0 + 9];

    uint64_t v29 = (void *)v0[9];
    if (v28)
    {
      id v30 = v29;
    }
    else
    {
      id v35 = v29;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v36(v15, v17);
  }
}

uint64_t sub_1005C2E30()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    NSString v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_1005C2FB8, 0, 0);
  }
}

uint64_t sub_1005C2FB8()
{
  sub_100239B2C();
  swift_allocError();
  unsigned char *v1 = 2;
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1005C307C(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  [a1 setFilePath:v2];

  [a1 setNeedsProcessing:0];
  return sub_1005C30F0();
}

id sub_1005C30F0()
{
  uint64_t v1 = *(void **)(v0 + qword_100812710);
  id v10 = 0;
  if ([v1 save:&v10]) {
    return v10;
  }
  id v3 = v10;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_1007F7E68 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_1008126D0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    id v9 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v10 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "error saving context: %@", v7, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return (id)swift_willThrow();
}

void AssetPostprocessingOperation.init()()
{
}

void sub_1005C3354()
{
}

void sub_1005C3384()
{
  uint64_t v1 = *(void **)(v0 + qword_100812710);
}

id AssetPostprocessingOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetPostprocessingOperation();
  return [super dealloc];
}

void sub_1005C33FC(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_100812710);
}

uint64_t sub_1005C3448(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *objc_super v2 = v1;
  v2[1] = sub_1002B1644;
  return AssetPostprocessingOperation.main@Sendable ()();
}

uint64_t sub_1005C34D8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005C3510()
{
  return swift_deallocObject();
}

uint64_t sub_1005C3548()
{
  return swift_deallocObject();
}

uint64_t sub_1005C3558()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1005C35B8()
{
  sub_1005C19B8(*(void *)(v0 + 16), *(uint8_t **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1005C35DC(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1005C3604(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  os_log_type_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1005C36BC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1005C3704()
{
  return sub_1005C307C(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for AssetPostprocessingOperation()
{
  uint64_t result = qword_100812758;
  if (!qword_100812758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005C3770()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005C37B8()
{
  return type metadata accessor for AssetPostprocessingOperation();
}

unsigned char *storeEnumTagSinglePayload for AssetPostprocessingOperation.AssetPostprocessingOperationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C388CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetPostprocessingOperation.AssetPostprocessingOperationError()
{
  return &type metadata for AssetPostprocessingOperation.AssetPostprocessingOperationError;
}

unint64_t sub_1005C38C8()
{
  unint64_t result = qword_100812858;
  if (!qword_100812858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812858);
  }
  return result;
}

uint64_t sub_1005C391C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005C395C()
{
  sub_1005C2730(*(void *)(v0 + 16));
}

void sub_1005C397C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  id v12 = (char *)&v20 - v11;
  id v13 = [v1 id:v10];
  if (v13)
  {
    id v14 = v13;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v15(v4, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v15(v12, v4, v5);
      if (qword_1007F6BA0 != -1) {
        swift_once();
      }
      sub_100438714((uint64_t)v12);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_1000ADA74((uint64_t)v4);
  if (qword_1007F7E78 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100026A54(v16, (uint64_t)qword_100812860);
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "(purgeCache) unable to get assetId from an asset", v19, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1005C3C78()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100812860);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100812860);
  if (qword_1007F7D40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1005C3D40(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  int v8 = a4 & 1;
  uint64_t v68 = type metadata accessor for URL.DirectoryHint();
  uint64_t v9 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v56 = (uint64_t)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v55 - v15;
  __chkstk_darwin(v16);
  uint64_t v71 = (char *)&v55 - v17;
  __chkstk_darwin(v18);
  uint64_t v58 = (char *)&v55 - v19;
  uint64_t v61 = a3;
  uint64_t v62 = a5;
  int v59 = v8;
  int v60 = a1;
  uint64_t v20 = sub_1003209E8(a5, 0, a3, v8, 0, 1, a1);
  uint64_t v22 = v21;
  if (qword_1007F6BA0 != -1)
  {
    uint64_t v54 = v20;
    swift_once();
    uint64_t v20 = v54;
  }
  uint64_t v67 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v23 = (void (**)(char *, uint64_t))(v12 + 8);
  unsigned int v72 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v24 = 1;
  id v25 = &static Journaling.EntryViewModel.currentAppVersion;
  id v63 = (void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  unint64_t v57 = (v9 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v26 = v66;
  do
  {
    id v35 = v23;
    uint64_t v36 = v20;
    id v37 = sub_10017F100(v20, v22);
    id v38 = [v37 imageByPreparingForDisplay];

    if (!v38)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v70 = v24;
    uint64_t v39 = *(void **)(*(void *)(*((void *)v25 + 50) + 16) + qword_10080D450);
    id v40 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    uint64_t v69 = v36;
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v40 initWithString:v41];

    [v39 removeObjectForKey:v42];
    swift_bridgeObjectRelease();

    uint64_t v43 = qword_1007F6EF8;
    swift_bridgeObjectRetain();
    if (v43 != -1) {
      swift_once();
    }
    uint64_t v44 = v72;
    if (qword_10083D468)
    {
      uint64_t v45 = v56;
      sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v56);
      uint64_t v65 = v22;
      uint64_t v46 = v67;
      uint64_t v47 = v68;
      uint64_t v27 = *v63;
      (*v63)(v11, v44, v68);
      sub_100014344();
      unint64_t v48 = v55;
      URL.appending<A>(components:directoryHint:)();
      os_log_type_t v64 = *v46;
      v64(v11, v47);
      uint64_t v23 = v35;
      uint64_t v49 = *v35;
      v49((char *)v45, v66);
      v27(v11, v72, v47);
      uint64_t v22 = v65;
      uint64_t v44 = v72;
      URL.appending<A>(components:directoryHint:)();
      v64(v11, v47);
      uint64_t v26 = v66;
      v49(v48, v66);
    }
    else
    {
      static URL.cachesDirectory.getter();
      uint64_t v27 = *v63;
      uint64_t v23 = v35;
    }
    uint64_t v73 = v69;
    uint64_t v74 = v22;
    uint64_t v28 = v44;
    uint64_t v29 = v68;
    v27(v11, v28, v68);
    sub_100014344();
    id v30 = v58;
    uint64_t v31 = v71;
    URL.appending<A>(path:directoryHint:)();
    (*v67)(v11, v29);
    uint64_t v32 = *v23;
    (*v23)(v31, v26);
    sub_1005C4730();
    v32(v30, v26);
    swift_bridgeObjectRelease_n();
    uint64_t v33 = v70;
    uint64_t v20 = sub_1003209E8(v62, v70, v61, v59, 0, 1, v60);
    uint64_t v22 = v34;
    uint64_t v24 = v33 + 1;
    id v25 = &static Journaling.EntryViewModel.currentAppVersion;
  }
  while (v24 != 102);
  swift_bridgeObjectRelease();
  if (qword_1007F7E78 != -1) {
    swift_once();
  }
  uint64_t v50 = type metadata accessor for Logger();
  sub_100026A54(v50, (uint64_t)qword_100812860);
  id v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v51, v52))
  {
    id v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "(purgeCache) Infinite loop, exiting", v53, 2u);
    swift_slowDealloc();
  }
}

void sub_1005C437C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  for (uint64_t i = 0; i != 6; ++i)
  {
    int v7 = *((unsigned __int8 *)&off_100795020 + i + 32);
    switch(*((unsigned char *)&off_100795020 + i + 32))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          sub_1005C3D40(v7, a1, 0, 1, a1);
          sub_1005C3D40(v7, a1, 1, 0, a1);
          sub_1005C3D40(v7, a1, 2, 0, a1);
        }
        break;
    }
  }
  if (qword_1007F7E78 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100026A54(v9, (uint64_t)qword_100812860);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_100321288();
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v15 = sub_10011EA98(v13, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Purged cache for asset %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1005C4730()
{
  id v0 = [self defaultManager];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  id v14 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v14];

  id v5 = v14;
  if (v4)
  {
    id v6 = v5;
  }
  else
  {
    id v7 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6990 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100026A54(v8, (uint64_t)qword_1007FC520);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Delete data from url error: %@", v11, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_1005C49E0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1005C4A40()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100812880);
  sub_100026A54(v0, (uint64_t)qword_100812880);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

void sub_1005C4BA8(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeLayoutMode;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeLayoutMode);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeLayoutMode) = a1;
  if (v3 != a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static UIViewController.ViewLoading.subscript.getter();
    swift_release();
    swift_release();
    if (*(void *)(v1 + v2) == 4)
    {
      id v7 = &CAFrameRateRangeDefault;
    }
    else
    {
      if (qword_1007F7E88 != -1) {
        swift_once();
      }
      id v7 = (const CAFrameRateRange *)byte_100812898;
    }
    *(float *)&double v5 = v7->maximum;
    *(float *)&double v6 = v7->preferred;
    *(float *)&double v4 = v7->minimum;
    [v8 setPreferredFrameRateRange:v4, v5, v6];
  }
}

uint64_t sub_1005C4CA0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIViewController.ViewLoading.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_1005C4D14()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = &OBJC_PROTOCOL___RCWaveformDataProviding;
  uint64_t v4 = swift_dynamicCastObjCProtocolConditional();
  if (v4) {
    swift_unknownObjectRetain();
  }
  id v5 = [objc_allocWithZone((Class)RCPlatterLeadingWaveformView) initWithFrame:v4 dataProvider:0.0];
  swift_unknownObjectRelease();
  [v5 setStyle:0];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7F88 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100026A54(v0, (uint64_t)qword_10083EFB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  id v7 = (void *)UIColor.init(resource:)();
  [v5 setSliceColor:v7];

  return v5;
}

id sub_1005C4F04()
{
  type metadata accessor for StackAccessoryView();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setSpacing:14.0];
  [v0 setAlignment:3];
  id v1 = sub_1002B22B8();
  [v0 addArrangedSubview:v1];

  id v2 = sub_1002B2318();
  [v0 addArrangedSubview:v2];

  return v0;
}

id sub_1005C4FC4()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = &OBJC_PROTOCOL___RCWaveformDataProviding;
  uint64_t v4 = swift_dynamicCastObjCProtocolConditional();
  if (v4) {
    swift_unknownObjectRetain();
  }
  id v5 = [objc_allocWithZone((Class)RCPlatterMinimalWaveformView) initWithFrame:v4 dataProvider:0.0, 0.0, 0.0, 0.0];
  swift_unknownObjectRelease();
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7F88 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100026A54(v0, (uint64_t)qword_10083EFB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  id v7 = (void *)UIColor.init(resource:)();
  [v5 setSliceColor:v7];

  return v5;
}

id sub_1005C51A0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalCheckmarkView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalCheckmarkView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalCheckmarkView);
  }
  else
  {
    type metadata accessor for AudioRecordingLiveActivityStopButton();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1005C5218(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1005C527C()
{
  type metadata accessor for StackAccessoryView();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAxis:1];
  [v0 setAlignment:3];
  id v1 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView, (uint64_t (*)(uint64_t))sub_1005C4FC4);
  [v0 addArrangedSubview:v1];

  id v2 = sub_1005C51A0();
  [v0 addArrangedSubview:v2];

  return v0;
}

uint64_t sub_1005C5358@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIViewController.ViewLoading.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005C53D8(void **a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static UIViewController.ViewLoading.subscript.setter();
}

void sub_1005C544C()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [self updateLinkForView:v1];

    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v0;
    static UIViewController.ViewLoading.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static UIViewController.ViewLoading.subscript.getter();
    swift_release();
    swift_release();
    if (qword_1007F7E88 != -1) {
      swift_once();
    }
    LODWORD(v5) = *(_DWORD *)byte_100812898;
    LODWORD(v6) = *(_DWORD *)&byte_100812898[4];
    LODWORD(v7) = *(_DWORD *)&byte_100812898[8];
    [v3 setPreferredFrameRateRange:v5, v6, v7];

    swift_getKeyPath();
    swift_getKeyPath();
    static UIViewController.ViewLoading.subscript.getter();
    swift_release();
    swift_release();
    [v3 setEnabled:1];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005C5678()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for ContinuousClock();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  v1[8] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005C577C, v4, v3);
}

uint64_t sub_1005C577C()
{
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v1;
  return _swift_task_switch(sub_1005C5800, v2, v1);
}

uint64_t sub_1005C5800()
{
  objc_msgSend(objc_msgSend(*(id *)(v0 + 16), "systemApertureElementContext"), "requestTransitionToPreferredLayoutMode");
  swift_unknownObjectRelease();
  ContinuousClock.init()();
  uint64_t v3 = (char *)&dword_100812A68 + dword_100812A68;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_100025014;
  return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v3)(3000000000000000000, 0, 0, 0, 1);
}

void sub_1005C5900()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1)) {
    sub_1002B25B8();
  }
  id v3 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  uint64_t v4 = *(void *)(v1 + 16);
  double v5 = *(void (**)(uint64_t, uint64_t))(v4 + 24);
  v5(ObjectType, v4);
  [v3 updateSliceFramesForRecordingTime:];

  id v6 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView, (uint64_t (*)(uint64_t))sub_1005C4FC4);
  v5(ObjectType, v4);
  [v6 updateSliceFramesForRecordingTime:];
}

id sub_1005C5A54(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeLayoutMode] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalCheckmarkView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView] = 0;
  sub_10001B284(0, &qword_100812930);
  UIViewController.ViewLoading.init()();
  *(void *)&v2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingFinishedTask] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___timeLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___stopButton] = 0;
  double v5 = &v2[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager];
  *(void *)double v5 = a1;
  *((void *)v5 + 1) = a2;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for AudioRecordingLiveActivityViewController();
  return [super initWithNibName:0 bundle:0];
}

id sub_1005C5B6C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeLayoutMode] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalCheckmarkView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView] = 0;
  sub_10001B284(0, &qword_100812930);
  UIViewController.ViewLoading.init()();
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = [super initWithCoder:a1];

  return v4;
}

uint64_t sub_1005C5C7C()
{
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalCheckmarkView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView));
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController__updateLink;
  uint64_t v2 = sub_100010218(&qword_100812A60);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1005C5E20()
{
  return type metadata accessor for AudioRecordingDynamicIslandViewController();
}

uint64_t type metadata accessor for AudioRecordingDynamicIslandViewController()
{
  uint64_t result = qword_100812910;
  if (!qword_100812910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005C5E74()
{
  sub_1005C5F34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005C5F34()
{
  if (!qword_100812928)
  {
    sub_10001B284(255, &qword_100812930);
    unint64_t v0 = type metadata accessor for UIViewController.ViewLoading();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100812928);
    }
  }
}

void sub_1005C6270()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    unint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeLayoutMode);
    if (v2 >= 5) {
      char v3 = 3;
    }
    else {
      char v3 = 0x201000303uLL >> (8 * v2);
    }
    sub_1005C62F0(v3);
  }
}

void sub_1005C62F0(char a1)
{
  unint64_t v2 = v1;
  if (qword_1007F7E80 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_100812880);
  double v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    objc_super v7 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    *(_DWORD *)objc_super v7 = 136315138;
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v40 = sub_10011EA98(v8, v9, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Transitioning to layout mode %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  os_log_type_t v10 = self;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  *(unsigned char *)(v11 + 24) = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1005C6B8C;
  *(void *)(v12 + 24) = v11;
  uint64_t v44 = sub_10001AC84;
  uint64_t v45 = v12;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v42 = sub_1003F44E4;
  uint64_t v43 = &unk_1007B7060;
  uint64_t v13 = _Block_copy(&aBlock);
  id v14 = v2;
  swift_retain();
  swift_release();
  [v10 performWithoutAnimation:v13];
  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v16 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
    uint64_t v17 = v16;
    if (a1 == 2) {
      uint64_t v18 = (id *)&UIFontTextStyleTitle3;
    }
    else {
      uint64_t v18 = (id *)&UIFontTextStyleSubheadline;
    }
    [v16 setStyle:a1 == 2];

    id v19 = sub_1002B22B8();
    id v20 = *v18;
    id v21 = [self preferredFontDescriptorWithTextStyle:v20 compatibleWithTraitCollection:0];
    uint64_t v40 = (uint64_t)v21;
    long long aBlock = *(unint64_t *)&UIFontWeightMedium;
    LOBYTE(v42) = 3;
    sub_10021B55C((id *)&v40, (uint64_t *)&aBlock, &v39);
    uint64_t v22 = v39;
    uint64_t v40 = (uint64_t)v39;
    long long aBlock = xmmword_1006E1270;
    LOBYTE(v42) = 2;
    sub_10021B55C((id *)&v40, (uint64_t *)&aBlock, &v39);

    uint64_t v23 = v39;
    id v24 = [self fontWithDescriptor:v39 size:0.0];

    [v19 setFont:v24];
    uint64_t v25 = *(void *)&v14[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8];
    uint64_t ObjectType = swift_getObjectType();
    if (!(*(unsigned __int8 (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25))
    {
      sub_1002B2318();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(aBlock) = 3;
      static UIView.Invalidating.subscript.setter();
      id v27 = sub_1002B2318();
      [v27 setUserInteractionEnabled:0];

      id v28 = sub_1002B22B8();
      uint64_t v29 = self;
      id v30 = [v29 labelColor];
      [v28 setTextColor:v30];

      id v31 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
      id v32 = [v29 labelColor];
      [v31 setSliceColor:v32];

      id v33 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView, (uint64_t (*)(uint64_t))sub_1005C4FC4);
      id v34 = [v29 labelColor];
      [v33 setSliceColor:v34];

      sub_1005C51A0();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(aBlock) = 3;
      static UIView.Invalidating.subscript.setter();
    }
    id v35 = self;
    uint64_t v36 = OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController_activeConstraints;
    sub_10001B284(0, (unint64_t *)&qword_1008059B0);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 deactivateConstraints:isa];

    *(void *)&v14[v36] = sub_1005C6E54(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 activateConstraints:v38];
    swift_release();
  }
}

uint64_t sub_1005C6AB0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1005C6AE8()
{
}

uint64_t sub_1005C6AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005C6B00()
{
  return swift_release();
}

void sub_1005C6B08()
{
  *(CAFrameRateRange *)byte_100812898 = CAFrameRateRange.init(minimum:maximum:preferred:)(48.0, 120.0, (Swift::Float_optional *)0x42400000);
}

uint64_t sub_1005C6B54()
{
  return swift_deallocObject();
}

void sub_1005C6B8C()
{
  sub_1005C6BC8(*(unsigned char *)(v0 + 24));
}

uint64_t sub_1005C6BB8()
{
  return swift_deallocObject();
}

void sub_1005C6BC8(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  int v4 = a1;
  id v5 = sub_1002B2318();
  if (v4 == 2)
  {
    BOOL v6 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
    uint64_t ObjectType = swift_getObjectType();
    BOOL v6 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v7 + 40))(ObjectType, v7) != 0;
  }
  [v5 setHidden:v6];

  id v9 = sub_1002B22B8();
  if (a1)
  {
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
    uint64_t v11 = swift_getObjectType();
    BOOL v12 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 40))(v11, v10) == 0;
  }
  else
  {
    BOOL v12 = 1;
  }
  BOOL v13 = a1 == 0;
  BOOL v14 = a1 != 0;
  uint64_t v15 = v13;
  [v9 setHidden:v12];

  id v16 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  [v16 setHidden:v15];

  id v17 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView, (uint64_t (*)(uint64_t))sub_1005C4F04);
  [v17 setHidden:v15];

  id v18 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView, (uint64_t (*)(uint64_t))sub_1005C527C);
  [v18 setHidden:v14];

  id v19 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView, (uint64_t (*)(uint64_t))sub_1005C4FC4);
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
  uint64_t v21 = swift_getObjectType();
  uint64_t v22 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v20 + 40);
  [v19 setHidden:v22(v21, v20) == 0];

  id v23 = sub_1005C51A0();
  [v23 setHidden:v22(v21, v20) != 0];
}

double *sub_1005C6E54(char a1)
{
  switch(a1)
  {
    case 1:
      return (double *)sub_1005C7498();
    case 2:
      return sub_1005C7BE8();
    case 3:
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1006D6D10;
      id v4 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
      id v5 = [v4 leadingAnchor];

      id v6 = [v1 view];
      if (!v6)
      {
        __break(1u);
        goto LABEL_15;
      }
      uint64_t v7 = v6;
      id v8 = [v6 leadingAnchor];

      id v9 = [v5 constraintEqualToAnchor:v8];
      *(void *)(v3 + 32) = v9;
      id v10 = sub_1002B22B8();
      id v11 = [v10 trailingAnchor];

      id v12 = [v1 view];
      if (!v12)
      {
LABEL_15:
        __break(1u);
        JUMPOUT(0x1005C709CLL);
      }
      BOOL v13 = v12;
      id v14 = [v12 trailingAnchor];

      id v15 = [v11 constraintEqualToAnchor:v14];
      *(void *)(v3 + 40) = v15;
      specialized Array._endMutation()();
      return (double *)v3;
    default:
      return (double *)sub_1005C70AC();
  }
}

id sub_1005C70AC()
{
  uint64_t v1 = v0;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  unint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D6D20;
  id v3 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView, (uint64_t (*)(uint64_t))sub_1005C527C);
  id v4 = [v3 widthAnchor];

  id v5 = [v4 constraintEqualToConstant:45.0];
  *(void *)(v2 + 32) = v5;
  id v6 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView, (uint64_t (*)(uint64_t))sub_1005C527C);
  id v7 = [v6 centerXAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v9 = result;
  id v10 = [result centerXAnchor];

  id v11 = [v7 constraintEqualToAnchor:v10];
  *(void *)(v2 + 40) = v11;
  id v12 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalAccessoryView, (uint64_t (*)(uint64_t))sub_1005C527C);
  id v13 = [v12 centerYAnchor];

  id result = [v1 view];
  if (result)
  {
    id v14 = result;
    id v15 = [result centerYAnchor];

    id v16 = [v13 constraintEqualToAnchor:v15];
    *(void *)(v2 + 48) = v16;
    specialized Array._endMutation()();
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8];
    uint64_t ObjectType = swift_getObjectType();
    if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v17 + 40))(ObjectType, v17))
    {
      id v19 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___minimalWaveformView, (uint64_t (*)(uint64_t))sub_1005C4FC4);
      id v20 = [v19 heightAnchor];

      id v21 = [v20 constraintEqualToConstant:20.0];
      id v22 = v21;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v23 = (uint64_t)result;
      if (result) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain_n();
      if (v23)
      {
LABEL_9:
        if (v23 >= 1)
        {
          uint64_t v24 = 0;
          do
          {
            if ((v2 & 0xC000000000000001) != 0) {
              id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v25 = *(id *)(v2 + 8 * v24 + 32);
            }
            id v27 = v25;
            ++v24;
            LODWORD(v26) = 1144750080;
            [v25 setPriority:v26];
          }
          while (v23 != v24);
          goto LABEL_16;
        }
        __break(1u);
        goto LABEL_18;
      }
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    return (id)v2;
  }
LABEL_19:
  __break(1u);
  return result;
}

id sub_1005C7498()
{
  uint64_t v1 = v0;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  unint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D6D20;
  id v3 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v4 = [v3 leadingAnchor];

  id result = [v1 view];
  if (!result) {
    goto LABEL_34;
  }
  id v6 = result;
  id v7 = [result SBUISA_systemApertureLegibleContentLayoutMarginsGuide];

  id v8 = [v7 leadingAnchor];
  id v9 = [v4 constraintEqualToAnchor:v8];

  *(void *)(v2 + 32) = v9;
  id v10 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v11 = [v10 widthAnchor];

  id v12 = [v11 constraintEqualToConstant:40.0];
  *(void *)(v2 + 40) = v12;
  id v13 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v14 = [v13 heightAnchor];

  id v15 = [v14 constraintEqualToConstant:20.0];
  *(void *)(v2 + 48) = v15;
  unint64_t v48 = v2;
  specialized Array._endMutation()();
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8];
  uint64_t ObjectType = swift_getObjectType();
  LODWORD(v9) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v16 + 40))(ObjectType, v16);
  id v18 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView, (uint64_t (*)(uint64_t))sub_1005C4F04);
  id v19 = v18;
  if (v9)
  {
    id v20 = [v18 trailingAnchor];

    id result = [v1 view];
    if (!result)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    id v21 = result;
    id v22 = [result SBUISA_systemApertureLegibleContentLayoutMarginsGuide];

    id v23 = [v22 trailingAnchor];
    id v19 = [v20 constraintEqualToAnchor:v23];

    id v24 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView, (uint64_t (*)(uint64_t))sub_1005C4F04);
    id v25 = [v24 centerYAnchor];

    id result = [v1 view];
    if (!result)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    double v26 = result;
    id v27 = [result SBUISA_systemApertureLegibleContentLayoutMarginsGuide];

    id v28 = [v27 centerYAnchor];
    id v29 = [v25 constraintEqualToAnchor:v28];

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = (char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      id result = v1 + 2;
      if (!__OFADD__(v1, 2)) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v1 = *(char **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = v1 + 2;
      if (!__OFADD__(v1, 2)) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  id v30 = [v19 centerXAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  id v31 = result;
  id v32 = [result SBUISA_systemApertureTrailingConcentricContentLayoutGuide];

  id v33 = [v32 centerXAnchor];
  id v19 = [v30 constraintEqualToAnchor:v33];

  id v34 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___trailingAccessoryView, (uint64_t (*)(uint64_t))sub_1005C4F04);
  id v35 = [v34 centerYAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_38:
    __break(1u);
    return result;
  }
  uint64_t v36 = result;
  id v37 = [result SBUISA_systemApertureTrailingConcentricContentLayoutGuide];

  id v38 = [v37 centerYAnchor];
  id v29 = [v35 constraintEqualToAnchor:v38];

  if (v2 >> 62) {
    goto LABEL_31;
  }
  uint64_t v39 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)(v39 + 2);
  if (__OFADD__(v39, 2))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  while (1)
  {
LABEL_13:
    sub_1005C88B4((uint64_t)result);
    specialized Array._endMutation()();
    id v40 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v41 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    id v19 = *(id *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v19 >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    if (v48 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      if (!v42) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v42 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v42) {
        goto LABEL_26;
      }
    }
    if (v42 >= 1) {
      break;
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id result = (id)(v47 + 2);
    if (__OFADD__(v47, 2)) {
      goto LABEL_33;
    }
  }
  uint64_t v43 = 0;
  do
  {
    if ((v48 & 0xC000000000000001) != 0) {
      id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v44 = *(id *)(v48 + 8 * v43 + 32);
    }
    uint64_t v46 = v44;
    ++v43;
    LODWORD(v45) = 1144750080;
    [v44 setPriority:v45];
  }
  while (v42 != v43);
LABEL_26:
  swift_bridgeObjectRelease_n();
  return (id)v48;
}

double *sub_1005C7BE8()
{
  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v2 = result;
  id v3 = [result window];

  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  unint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006E8EA0;
  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v5 = result;
  id v6 = [result widthAnchor];

  id v7 = [v3 widthAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v4 + 32) = v8;
  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v9 = result;
  id v10 = [result bottomAnchor];

  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v11 = result;
  id v59 = v3;
  id v12 = [result SBUISA_systemApertureTrailingConcentricContentLayoutGuide];

  id v13 = [v12 bottomAnchor];
  id v14 = [v10 constraintEqualToAnchor:v13];

  *(void *)(v4 + 40) = v14;
  id v15 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v16 = [v15 leadingAnchor];

  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v17 = result;
  id v18 = [result leadingAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18 constant:18.0];
  *(void *)(v4 + 48) = v19;
  id v20 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v21 = [v20 heightAnchor];

  id v22 = [v21 constraintEqualToConstant:46.0];
  *(void *)(v4 + 56) = v22;
  id v23 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v24 = [v23 centerYAnchor];

  id v25 = sub_1002B2318();
  id v26 = [v25 centerYAnchor];

  id v27 = [v24 constraintEqualToAnchor:v26];
  *(void *)(v4 + 64) = v27;
  id v28 = sub_1005C5218(&OBJC_IVAR____TtC7Journal41AudioRecordingDynamicIslandViewController____lazy_storage___leadingWaveformView, (uint64_t (*)(uint64_t))sub_1005C4D14);
  id v29 = [v28 trailingAnchor];

  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v30 = result;
  id v31 = [result SBUISA_systemApertureObstructedAreaLayoutGuide];

  id v32 = [v31 centerXAnchor];
  id v33 = [v29 constraintEqualToAnchor:v32];

  *(void *)(v4 + 72) = v33;
  id v34 = sub_1002B2318();
  id v35 = [v34 widthAnchor];

  id v36 = [v35 constraintEqualToConstant:51.0];
  *(void *)(v4 + 80) = v36;
  id v37 = sub_1002B2318();
  id v38 = [v37 heightAnchor];

  id v39 = [v38 constraintEqualToConstant:51.0];
  *(void *)(v4 + 88) = v39;
  id v40 = sub_1002B2318();
  id v41 = [v40 centerXAnchor];

  id result = (double *)[v0 view];
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v42 = result;
  id v43 = [result SBUISA_systemApertureTrailingConcentricContentLayoutGuide];

  id v44 = [v43 centerXAnchor];
  id v45 = [v41 constraintEqualToAnchor:v44];

  *(void *)(v4 + 96) = v45;
  id v46 = sub_1002B2318();
  id v47 = [v46 centerYAnchor];

  id result = (double *)[v0 view];
  if (result)
  {
    unint64_t v48 = result;
    id v49 = [result SBUISA_systemApertureTrailingConcentricContentLayoutGuide];

    id v50 = [v49 centerYAnchor];
    id v51 = [v47 constraintEqualToAnchor:v50];

    *(void *)(v4 + 104) = v51;
    id result = (double *)specialized Array._endMutation()();
    unint64_t v52 = v4;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
      id result = (double *)swift_bridgeObjectRelease();
      uint64_t v54 = v59;
      if (v53) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v53 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v54 = v59;
      if (v53)
      {
LABEL_12:
        if (v53 >= 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v55 = 0;
          do
          {
            if ((v52 & 0xC000000000000001) != 0) {
              id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v56 = *(id *)(v52 + 8 * v55 + 32);
            }
            uint64_t v58 = v56;
            ++v55;
            LODWORD(v57) = 1144750080;
            [v56 setPriority:v57];
          }
          while (v53 != v55);

          swift_bridgeObjectRelease();
          return (double *)v52;
        }
        __break(1u);
        goto LABEL_24;
      }
    }

    return (double *)v52;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1005C82EC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005C836C(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_1005C83DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_1005C84E0, 0, 0);
}

uint64_t sub_1005C84E0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock();
  uint64_t v5 = sub_10010D0E0((unint64_t *)&unk_100806060, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_10010D0E0(&qword_1007FE748, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  id v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *id v7 = v0;
  v7[1] = sub_1005C8680;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_1005C8680()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1005C883C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1005C883C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005C88B4(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t *v1 = result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioRecordingDynamicIslandViewController.LayoutMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C8A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioRecordingDynamicIslandViewController.LayoutMode()
{
  return &type metadata for AudioRecordingDynamicIslandViewController.LayoutMode;
}

unint64_t sub_1005C8A84()
{
  unint64_t result = qword_100812A70;
  if (!qword_100812A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812A70);
  }
  return result;
}

void sub_1005C8B64()
{
  swift_getObjectType();
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for AppSecureAccessViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  [v1 setAccessibilityViewIsModal:1];

  id v3 = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_gradient;
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_gradient];
  *(void *)&v0[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_gradient] = v3;

  unsigned int v6 = *(void **)&v0[v4];
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v7 = v6;
  unint64_t v8 = sub_1005CA7A0();
  sub_100091570(v8);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 setColors:isa];

  uint64_t v10 = *(void **)&v0[v4];
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v11 = v10;
  id v12 = [v0 view];
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v13 = v12;
  [v12 frame];
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;

  [v11 setFrame:v15, v17, v19, v21];
  id v22 = [v0 view];
  if (!v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v23 = v22;
  id v24 = [v22 layer];

  if (*(void *)&v0[v4])
  {
    [v24 addSublayer:];

    sub_100010218(&qword_1007FBD30);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1006D6280;
    *(void *)(v25 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
    *(void *)(v25 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    uint64_t v26 = UIViewController.registerForTraitChanges<A>(_:handler:)();
    swift_bridgeObjectRelease();
    *(void *)&v0[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_traitChangeRegistration] = v26;
    swift_unknownObjectRelease();
    LOBYTE(v26) = v0[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state];
    id v27 = v0;
    sub_1005C96C8(v27, v26);

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1005C8E5C(unsigned __int8 a1, char a2, unsigned __int8 *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(unsigned char *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = AudioRecordingActivityState.hash(into:);
  *(void *)(v6 + 40) = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state;
  if (a3[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state] == a1)
  {
    unint64_t v8 = a3;
    sub_1005C95E8(a1 == 0);
LABEL_15:
    swift_release();
    return;
  }
  id v9 = a3;
  id v10 = [v9 view];

  if (!v10)
  {
LABEL_19:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  a3[v7] = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(unsigned char *)(v11 + 24) = a1;
  id v12 = v9;
  id v13 = v12;
  if ((a2 & 1) == 0)
  {
    sub_1005C96C8(v12, a1);
    sub_1005C95E8(a1 == 0);
    swift_release();

    goto LABEL_15;
  }
  id v14 = [v12 view];
  if (!v14)
  {

    __break(1u);
    goto LABEL_19;
  }
  double v15 = v14;
  id v16 = [v14 window];

  if (v16)
  {
    [v16 setHidden:0];
    if (([v16 isKeyWindow] & 1) == 0) {
      [v16 makeKeyWindow];
    }
  }
  if (a1) {
    double v17 = 0.0;
  }
  else {
    double v17 = 0.15;
  }
  double v18 = self;
  uint64_t v26 = sub_1005CAAD4;
  uint64_t v27 = v11;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10017D530;
  uint64_t v25 = &unk_1007B72E8;
  double v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1005CA170;
  *(void *)(v20 + 24) = v6;
  uint64_t v26 = sub_1001D3D90;
  uint64_t v27 = v20;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_1001C7318;
  uint64_t v25 = &unk_1007B7338;
  double v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v18 animateWithDuration:0 delay:v19 options:v21 animations:0.25 completion:v17];
  swift_release();

  swift_release();
  _Block_release(v21);
  _Block_release(v19);
}

void sub_1005C920C(unsigned __int8 a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v4;
  *(unsigned char *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  uint64_t v10 = OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state;
  if (v4[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state] == a1)
  {
    swift_retain();
    uint64_t v11 = v4;
    sub_1005C95E8(a1 == 0);
    a3();
LABEL_15:
    swift_release();
    return;
  }
  swift_retain();
  id v12 = v4;
  id v13 = [v12 view];

  if (!v13)
  {
LABEL_19:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  v4[v10] = a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(unsigned char *)(v14 + 24) = a1;
  double v15 = v12;
  id v16 = v15;
  if ((a2 & 1) == 0)
  {
    sub_1005C96C8(v15, a1);
    sub_1005C95E8(a1 == 0);
    a3();
    swift_release();

    goto LABEL_15;
  }
  id v17 = [v15 view];
  if (!v17)
  {

    __break(1u);
    goto LABEL_19;
  }
  double v18 = v17;
  id v19 = [v17 window];

  if (v19)
  {
    [v19 setHidden:0];
    if (([v19 isKeyWindow] & 1) == 0) {
      [v19 makeKeyWindow];
    }
  }
  if (a1) {
    double v20 = 0.0;
  }
  else {
    double v20 = 0.15;
  }
  double v21 = self;
  id v29 = sub_1005CA1AC;
  uint64_t v30 = v14;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017D530;
  objc_super v28 = &unk_1007B71F8;
  id v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1005CA170;
  *(void *)(v23 + 24) = v9;
  id v29 = sub_1001D3D90;
  uint64_t v30 = v23;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_1001C7318;
  objc_super v28 = &unk_1007B7248;
  id v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v21 animateWithDuration:0 delay:v22 options:v24 animations:0.25 completion:v20];
  swift_release();

  swift_release();
  _Block_release(v24);
  _Block_release(v22);
}

void sub_1005C95E8(char a1)
{
  id v3 = [v1 view];
  if (!v3)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = v3;
  id v7 = [v3 window];

  if (v7)
  {
    [v7 setHidden:a1 & 1];
    unsigned int v5 = [v7 isKeyWindow];
    if (a1)
    {
      if (v5)
      {
        uint64_t v6 = &selRef_resignKeyWindow;
LABEL_9:
        [v7 *v6];
      }
    }
    else if ((v5 & 1) == 0)
    {
      uint64_t v6 = &selRef_makeKeyWindow;
      goto LABEL_9;
    }
  }
}

id sub_1005C96C8(void *a1, char a2)
{
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  unsigned int v5 = result;
  [result setHidden:0];

  id result = [a1 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  double v7 = 1.0;
  if (!a2) {
    double v7 = 0.0;
  }
  [result setAlpha:v7];

  return [a1 setNeedsUpdateContentUnavailableConfiguration];
}

uint64_t sub_1005C9784()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for UIBackgroundConfiguration();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100812AD0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  id v11 = sub_100086F30((uint64_t)v9, 0, 0);
  char v13 = v12;
  uint64_t result = sub_1005CA2B4((uint64_t)v9);
  if ((v13 & 1) == 0)
  {
    static UIContentUnavailableConfiguration.empty()();
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [self systemImageNamed:v15];

    UIContentUnavailableConfiguration.image.setter();
    id v17 = [self systemIndigoColor];
    double v18 = (void (*)(long long *, void))UIContentUnavailableConfiguration.imageProperties.modify();
    UIContentUnavailableConfiguration.ImageProperties.tintColor.setter();
    v18(&v29, 0);
    static UIBackgroundConfiguration.clear()();
    UIContentUnavailableConfiguration.background.setter();
    if (qword_1007F7628 != -1) {
      swift_once();
    }
    switch((unint64_t)v11)
    {
      case 0uLL:
        uint64_t v19 = qword_1007F7648;
        swift_bridgeObjectRetain();
        if (v19 == -1) {
          goto LABEL_12;
        }
        goto LABEL_23;
      case 1uLL:
        uint64_t v21 = qword_1007F7640;
        swift_bridgeObjectRetain();
        if (v21 == -1) {
          goto LABEL_12;
        }
        goto LABEL_23;
      case 2uLL:
        uint64_t v22 = qword_1007F7638;
        swift_bridgeObjectRetain();
        if (v22 == -1) {
          goto LABEL_12;
        }
        goto LABEL_23;
      case 4uLL:
        uint64_t v20 = qword_1007F7630;
        swift_bridgeObjectRetain();
        if (v20 == -1) {
          goto LABEL_12;
        }
LABEL_23:
        swift_once();
LABEL_12:
        swift_bridgeObjectRetain();
        unsigned int v23 = v1[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state];
        if (v23 >= 2)
        {
          if (v23 == 2)
          {
            UIContentUnavailableConfiguration.text.setter();
            UIContentUnavailableConfiguration.secondaryText.setter();
          }
          else
          {
            UIContentUnavailableConfiguration.text.setter();
            UIContentUnavailableConfiguration.secondaryText.setter();
            if (qword_1007F7650 != -1) {
              swift_once();
            }
            swift_bridgeObjectRetain();
            id v24 = (void (*)(long long *, void))UIContentUnavailableConfiguration.button.modify();
            UIButton.Configuration.title.setter();
            v24(&v29, 0);
            sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
            *(void *)(swift_allocObject() + 16) = v1;
            uint64_t v25 = v1;
            UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
            uint64_t v26 = (void (*)(long long *, void))UIContentUnavailableConfiguration.buttonProperties.modify();
            UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
            v26(&v29, 0);
          }
          *((void *)&v30 + 1) = v3;
          id v31 = &protocol witness table for UIContentUnavailableConfiguration;
          uint64_t v27 = sub_100062E54((uint64_t *)&v29);
          (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v27, v6, v3);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v31 = 0;
          long long v29 = 0u;
          long long v30 = 0u;
        }
        UIViewController.contentUnavailableConfiguration.setter();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        break;
      default:
        *(void *)&long long v29 = 0;
        *((void *)&v29 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        _StringGuts.grow(_:)(29);
        swift_bridgeObjectRelease();
        *(void *)&long long v29 = 0xD00000000000001BLL;
        *((void *)&v29 + 1) = 0x80000001006A7790;
        id v32 = v11;
        v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v28);
        swift_bridgeObjectRelease();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1005C9E2CLL);
    }
  }
  return result;
}

id sub_1005C9F58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppSecureAccessViewController();
  [super dealloc];
}

uint64_t type metadata accessor for AppSecureAccessViewController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AppSecureAccessViewController.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005CA0DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSecureAccessViewController.State()
{
  return &type metadata for AppSecureAccessViewController.State;
}

unint64_t sub_1005CA118()
{
  unint64_t result = qword_100812AC8;
  if (!qword_100812AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812AC8);
  }
  return result;
}

uint64_t sub_1005CA174()
{
  return swift_deallocObject();
}

id sub_1005CA1AC()
{
  return sub_1005C96C8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1005CA1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005CA1C8()
{
  return swift_release();
}

uint64_t sub_1005CA1D0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005CA208(uint64_t a1)
{
  id v1 = *(void **)(a1 + OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_gradient);
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = sub_1005CA7A0();
    sub_100091570(v3);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setColors:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005CA2B4(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100812AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005CA314()
{
  return swift_deallocObject();
}

uint64_t sub_1005CA34C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16)
                              + OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_onAuthenticate))();
}

uint64_t sub_1005CA384(unsigned __int8 a1, char a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(unsigned char *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = sub_1005CAA3C;
  *(void *)(v8 + 40) = a4;
  uint64_t v9 = OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state;
  if (a3[OBJC_IVAR____TtC7Journal29AppSecureAccessViewController_state] == a1)
  {
    swift_retain_n();
    uint64_t v10 = a3;
    sub_1005C95E8(a1 == 0);
    sub_100084684();
    swift_release();
LABEL_15:
    return swift_release();
  }
  swift_retain_n();
  id v11 = a3;
  id v12 = [v11 view];

  if (!v12)
  {
LABEL_19:
    swift_release_n();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  a3[v9] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(unsigned char *)(v13 + 24) = a1;
  uint64_t v14 = v11;
  NSString v15 = v14;
  if ((a2 & 1) == 0)
  {
    sub_1005C96C8(v14, a1);
    sub_1005C95E8(a1 == 0);
    sub_100084684();
    swift_release();
    swift_release();

    goto LABEL_15;
  }
  id v16 = [v14 view];
  if (!v16)
  {

    swift_release();
    __break(1u);
    goto LABEL_19;
  }
  id v17 = v16;
  id v18 = [v16 window];

  if (v18)
  {
    [v18 setHidden:0];
    if (([v18 isKeyWindow] & 1) == 0) {
      [v18 makeKeyWindow];
    }
  }
  if (a1) {
    double v19 = 0.0;
  }
  else {
    double v19 = 0.15;
  }
  uint64_t v20 = self;
  long long v29 = sub_1005CAAD4;
  uint64_t v30 = v13;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_10017D530;
  Swift::String v28 = &unk_1007B73B0;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1005CA170;
  *(void *)(v22 + 24) = v8;
  long long v29 = sub_1001D3D90;
  uint64_t v30 = v22;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_1001C7318;
  Swift::String v28 = &unk_1007B7400;
  unsigned int v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v20 animateWithDuration:0 delay:v21 options:v23 animations:0.25 completion:v19];
  swift_release();

  swift_release();
  _Block_release(v23);
  _Block_release(v21);
  return swift_release();
}

uint64_t sub_1005CA7A0()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6D20;
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F8000 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100026A54(v0, (uint64_t)qword_10083F120);
  unsigned int v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  uint64_t v7 = (void *)UIColor.init(resource:)();
  id v8 = [v7 CGColor];

  *(void *)(v4 + 32) = v8;
  if (qword_1007F7FF8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100026A54(v0, (uint64_t)qword_10083F108);
  v6(v3, v9, v0);
  uint64_t v10 = (void *)UIColor.init(resource:)();
  id v11 = [v10 CGColor];

  *(void *)(v4 + 40) = v11;
  if (qword_1007F7FF0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100026A54(v0, (uint64_t)qword_10083F0F0);
  v6(v3, v12, v0);
  uint64_t v13 = (void *)UIColor.init(resource:)();
  id v14 = [v13 CGColor];

  *(void *)(v4 + 48) = v14;
  uint64_t v17 = v4;
  specialized Array._endMutation()();
  return v17;
}

void sub_1005CAA3C()
{
}

uint64_t sub_1005CAA48()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005CAA88()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  sub_1005C95E8(*(unsigned char *)(v0 + 24) == 0);
  return v1();
}

uint64_t sub_1005CAC04(char a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(void *)(v13 + 32) = v11;
  *(unsigned char *)(v13 + 40) = a2;
  *(unsigned char *)(v13 + 41) = a1;
  *(void *)(v13 + 48) = ObjectType;
  swift_release();
  sub_100328A60((uint64_t)v9, (uint64_t)&unk_100802A08, v13);
  swift_release();
  UIView.removeAllConstraints()();
  if ((a2 | 2) == 2)
  {
    id v14 = *(void **)(v3 + OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterView);
    id v15 = [self tertiarySystemFillColor];
    [v14 setBackgroundColor:v15];
    double v16 = 4.0;
  }
  else
  {
    uint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterView);
    id v15 = [self clearColor];
    [v17 setBackgroundColor:v15];
    double v16 = 0.0;
  }

  sub_1001DCF60(v16);
  return swift_bridgeObjectRelease();
}

void sub_1005CAE48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterView];
  [v1 addSubview:v2];
  id v3 = [v2 superview];
  if (v3)
  {
    uint64_t v4 = v3;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v2 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:4.0];
    if (v7)
    {
      id v8 = v7;
      [v8 setActive:1];
    }
  }

  id v9 = [v2 superview];
  if (v9)
  {
    uint64_t v10 = v9;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v2 trailingAnchor];
    id v12 = [v10 trailingAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:-4.0];
    id v14 = v13;
    [v14 setActive:1];
  }
  [v2 _setCornerRadius:4.0];
  id v15 = [v2 heightAnchor];
  id v16 = [v1 heightAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 multiplier:0.2];

  [v17 setActive:1];
  id v18 = *(void **)&v1[OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterLabel];
  id v19 = [self secondaryLabelColor];
  [v18 setTextColor:v19];

  [v18 setTextAlignment:1];
  if (qword_1007F72A0 != -1) {
    swift_once();
  }
  [v18 setFont:qword_10083D868];
  [v18 setNumberOfLines:1];
  [v18 setMinimumScaleFactor:0.6];
  [v18 setAdjustsFontForContentSizeCategory:1];
  [v18 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [v2 addSubview:v18];
  id v55 = [objc_allocWithZone((Class)UIView) init];
  [v1 addSubview:v55];
  id v20 = [v55 superview];
  if (v20)
  {
    uint64_t v21 = v20;
    [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v55 leadingAnchor];
    id v23 = [v21 leadingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:0.0];
    id v25 = v24;
    [v25 setActive:1];
  }
  id v26 = [v55 superview];
  if (v26)
  {
    uint64_t v27 = v26;
    [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v55 trailingAnchor];
    id v29 = [v27 trailingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    [v30 setConstant:0.0];
    id v31 = v30;
    [v31 setActive:1];
  }
  id v32 = [v55 superview];
  if (v32)
  {
    id v33 = v32;
    [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v34 = [v55 topAnchor];
    id v35 = [v33 topAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    [v36 setConstant:12.0];
    id v37 = v36;
    [v37 setActive:1];
  }
  id v38 = [v55 bottomAnchor];
  id v39 = [v2 topAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  [v40 setActive:1];
  id v41 = *(void **)&v1[OBJC_IVAR____TtC7Journal23CanvasFallbackAssetView_symbolImageView];
  [v41 removeFromSuperview];
  [v55 addSubview:v41];
  id v42 = [v41 superview];
  if (v42)
  {
    id v43 = v42;
    [v41 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v44 = [v41 centerXAnchor];
    id v45 = [v43 centerXAnchor];
    id v46 = [v44 constraintEqualToAnchor:v45];

    [v46 setConstant:0.0];
    id v47 = v46;
    [v47 setActive:1];
  }
  id v48 = [v41 superview];
  if (v48)
  {
    id v49 = v48;
    [v41 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v50 = [v41 centerYAnchor];
    id v51 = [v49 centerYAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51];

    [v52 setConstant:0.0];
    id v53 = v52;
    [v53 setActive:1];

    uint64_t v54 = v49;
  }
  else
  {
    uint64_t v54 = v55;
  }
}

uint64_t sub_1005CB68C()
{
  return swift_bridgeObjectRelease();
}

id sub_1005CB6E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SymbolAndPlatterFallbackView();
  return [super dealloc];
}

uint64_t type metadata accessor for SymbolAndPlatterFallbackView()
{
  return self;
}

uint64_t sub_1005CB798()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005CB7D0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

id sub_1005CB810()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterView;
  id v2 = objc_allocWithZone((Class)UIView);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterLabel;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)UILabel) init];
  id v5 = &v3[OBJC_IVAR____TtC7Journal28SymbolAndPlatterFallbackView_platterText];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SymbolAndPlatterFallbackView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1005CAE48();

  return v6;
}

void sub_1005CB8E8(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(ObjectType, a2);
    id v6 = (void *)v5;
    uint64_t v7 = OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset;
    if (!*(void *)(v2 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset))
    {
      if (!v5) {
        return;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v7 = OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset;
    if (!*(void *)(v2 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset)) {
      return;
    }
    id v6 = 0;
  }
  uint64_t v8 = *(void *)(v2 + v7 + 8);
  uint64_t v9 = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 80))(v9, v8);
  id v11 = (void *)v10;
  if (!v6)
  {
    if (!v10) {
      return;
    }
    goto LABEL_13;
  }
  if (v10)
  {
    _s5AssetCMa();
    id v12 = v6;
    char v13 = static NSObject.== infix(_:_:)();

    if (v13) {
      return;
    }
    goto LABEL_14;
  }
LABEL_11:
  id v11 = v6;
LABEL_13:

LABEL_14:

  sub_1005CC620();
}

id sub_1005CBA00(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  *uint64_t v9 = 0;
  v9[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal13SlimAssetView_journalEntry] = 0;
  v4[OBJC_IVAR____TtC7Journal13SlimAssetView_isEditing] = 0;
  swift_weakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAssetDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView;
  id v11 = objc_allocWithZone((Class)UIView);
  id v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer;
  sub_10001B284(0, (unint64_t *)&unk_100812C20);
  *(void *)&v12[v13] = sub_1002FD34C(3, 5, (unint64_t)_swiftEmptyArrayStorage, kCAGradientLayerAxial);
  uint64_t v14 = OBJC_IVAR____TtC7Journal13SlimAssetView_iconView;
  *(void *)&v12[v14] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal13SlimAssetView_label;
  *(void *)&v12[v15] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v16 = OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel;
  *(void *)&v12[v16] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v12[OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint] = 0;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [self systemImageNamed:v17];

  if (v18)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1006D6D10;
    *(void *)(v19 + 32) = [self whiteColor];
    if (qword_1007F71F0 != -1) {
      swift_once();
    }
    id v20 = (void *)qword_10083D7B8;
    *(void *)(v19 + 40) = qword_10083D7B8;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    id v21 = v20;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v23 = [self configurationWithPaletteColors:isa];

    id v24 = [v18 imageWithConfiguration:v23];
  }
  else
  {
    id v24 = 0;
  }
  *(void *)&v12[OBJC_IVAR____TtC7Journal13SlimAssetView_fallbackIcon] = v24;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v12[OBJC_IVAR____TtC7Journal13SlimAssetView_outerCornerRadius] = _Q0;

  v33.receiver = v12;
  v33.super_class = (Class)type metadata accessor for SlimAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_1005CE54C();
  [v30 setClipsToBounds:1];
  id v31 = [objc_allocWithZone((Class)UIContextMenuInteraction) initWithDelegate:v30];
  [v30 addInteraction:v31];

  return v30;
}

uint64_t sub_1005CBE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = type metadata accessor for Date();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[13] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[14] = v8;
  v5[15] = v7;
  return _swift_task_switch(sub_1005CBF58, v8, v7);
}

uint64_t sub_1005CBF58()
{
  uint64_t v1 = (char *)v0[5];
  uint64_t v2 = &v1[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  v0[16] = v3;
  if (v3)
  {
    uint64_t v4 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    v3;
    id v6 = [v1 traitCollection];
    v0[17] = v6;
    uint64_t v10 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(v4 + 48) + **(int **)(v4 + 48));
    uint64_t v7 = (void *)swift_task_alloc();
    v0[18] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1005CC10C;
    return v10(v6, ObjectType, v4);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1005CC10C(uint64_t a1)
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 136);
  uint64_t v4 = *(void **)(*v1 + 128);
  *(void *)(*v1 + 152) = a1;
  swift_task_dealloc();

  uint64_t v5 = *(void *)(v2 + 120);
  uint64_t v6 = *(void *)(v2 + 112);
  return _swift_task_switch(sub_1005CC26C, v6, v5);
}

uint64_t sub_1005CC26C()
{
  uint64_t v1 = v0[19];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[19];
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    uint64_t v5 = v0[7];
    uint64_t v6 = v0[8];
    uint64_t v7 = v0[6];
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_100045944(v4, v3);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5);
    uint64_t v11 = v0[11];
    if (v10 == 1)
    {
      swift_retain_n();
      id v12 = v2;
      sub_1000AC7D4(v11);
    }
    else
    {
      uint64_t v14 = v0[9];
      uint64_t v13 = v0[10];
      uint64_t v16 = v0[7];
      uint64_t v15 = v0[8];
      (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v13, v0[11], v16);
      swift_retain_n();
      id v26 = v2;
      static Date.now.getter();
      Date.timeIntervalSince(_:)();
      double v18 = v17;
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v19(v14, v16);
      v19(v13, v16);
      if (v18 < 0.1)
      {
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          id v21 = (void *)Strong;
          uint64_t v22 = v0[12];
          id v23 = *(id *)(Strong + OBJC_IVAR____TtC7Journal13SlimAssetView_iconView);

          [v23 setImage:v26];
          swift_release();
          swift_release();

LABEL_9:
          sub_1000AC7D4(v22);
          swift_release();
          goto LABEL_10;
        }
LABEL_8:
        swift_release();
        swift_release();
        uint64_t v22 = v0[12];
        goto LABEL_9;
      }
    }
    static Animation.easeIn(duration:)();
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    static UIView.animate(_:changes:completion:)();
    swift_release();
    goto LABEL_8;
  }
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

void sub_1005CC598(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal13SlimAssetView_iconView);

    [v5 setImage:a2];
  }
}

uint64_t sub_1005CC620()
{
  uint64_t v1 = v0;
  uint64_t v179 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v179);
  uint64_t v180 = (char *)v174 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v178 = (char *)v174 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v177 = (char *)v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString.InterpolationOptions();
  uint64_t v175 = *(void *)(v7 - 8);
  uint64_t v176 = v7;
  __chkstk_darwin(v7);
  v174[0] = (char *)v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  v174[1] = (char *)v174 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v11 - 8);
  v197 = (char *)v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for AttributedString();
  uint64_t v202 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  v196 = (char *)v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v181 = (char *)v174 - v15;
  __chkstk_darwin(v16);
  uint64_t v182 = (char *)v174 - v17;
  __chkstk_darwin(v18);
  v200 = (char *)v174 - v19;
  uint64_t v20 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v174 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v23);
  long long v193 = (char *)v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  id v28 = (char *)v174 - v27;
  __chkstk_darwin(v29);
  id v31 = (char *)v174 - v30;
  Date.init()();
  id v32 = *(void **)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView];
  id v199 = self;
  id v33 = [v199 systemBackgroundColor];
  id v192 = v32;
  [v32 setBackgroundColor:v33];

  uint64_t v34 = type metadata accessor for TaskPriority();
  uint64_t v35 = *(void *)(v34 - 8);
  NSAttributedStringKey v190 = *(NSAttributedStringKey *)(v35 + 56);
  *(void *)&long long v191 = v34;
  v189 = (NSString *)(v35 + 56);
  ((void (*)(char *, uint64_t, uint64_t))v190)(v22, 1, 1);
  id v36 = *(void (**)(char *, uint64_t (*)(void, void), uint64_t))(v24 + 16);
  v195 = v31;
  long long v187 = v36;
  uint64_t v188 = v24 + 16;
  v36(v28, (uint64_t (*)(void, void))v31, v23);
  type metadata accessor for MainActor();
  id v37 = v1;
  uint64_t v38 = static MainActor.shared.getter();
  uint64_t v39 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v40 = (v39 + 40) & ~v39;
  uint64_t v184 = v39 | 7;
  uint64_t v185 = v40 + v25;
  id v41 = (char *)swift_allocObject();
  *((void *)v41 + 2) = v38;
  *((void *)v41 + 3) = &protocol witness table for MainActor;
  *((void *)v41 + 4) = v37;
  uint64_t v186 = v40;
  id v42 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v194 = (uint64_t (*)(void, void))v28;
  uint64_t v201 = v23;
  unint64_t v183 = v42;
  v42(&v41[v40], v28, v23);
  v203 = v22;
  sub_100328A60((uint64_t)v22, (uint64_t)&unk_100812C08, (uint64_t)v41);
  swift_release();
  id v43 = self;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v37;
  aBlock[4] = sub_1005D37F0;
  aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B76D0;
  id v45 = _Block_copy(aBlock);
  id v46 = (char *)v37;
  swift_release();
  [v43 animateWithDuration:0 delay:v45 options:0 animations:0.11 completion:0.0];
  _Block_release(v45);
  uint64_t v47 = OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer;
  id v48 = *(void **)&v46[OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer];
  id v49 = self;
  id v50 = v48;
  id v51 = [v49 mainScreen];
  [v51 bounds];
  CGFloat v53 = v52;
  CGFloat v55 = v54;
  CGFloat v57 = v56;
  CGFloat v59 = v58;

  v205.origin.CGFloat x = v53;
  v205.origin.double y = v55;
  v205.size.double width = v57;
  v205.size.double height = v59;
  double v60 = ceil(CGRectGetWidth(v205));
  if (qword_1007F7448 != -1) {
    swift_once();
  }
  [v50 setFrame:0.0, 0.0, v60, *(double *)&qword_10083DA58];

  [*(id *)&v46[v47] setMasksToBounds:1];
  [v192 setClipsToBounds:1];
  [*(id *)&v46[OBJC_IVAR____TtC7Journal13SlimAssetView_iconView] setImage:*(void *)&v46[OBJC_IVAR____TtC7Journal13SlimAssetView_fallbackIcon]];
  uint64_t v61 = v194;
  Date.init()();
  uint64_t v62 = (uint64_t)v203;
  ((void (*)(char *, uint64_t, uint64_t, void))v190)(v203, 1, 1, v191);
  id v63 = v193;
  uint64_t v64 = v201;
  v187(v193, v61, v201);
  uint64_t v65 = v46;
  uint64_t v66 = static MainActor.shared.getter();
  uint64_t v67 = (char *)swift_allocObject();
  *((void *)v67 + 2) = v66;
  *((void *)v67 + 3) = &protocol witness table for MainActor;
  *((void *)v67 + 4) = v65;
  v183(&v67[v186], v63, v64);
  sub_100328A60(v62, (uint64_t)&unk_100812C10, (uint64_t)v67);
  swift_release();
  uint64_t v68 = *(void (**)(void, void))(v24 + 8);
  long long v193 = (char *)(v24 + 8);
  v194 = (uint64_t (*)(void, void))v68;
  v68(v61, v64);
  v203 = v65;
  uint64_t v69 = &v65[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  uint64_t v70 = *(void **)&v65[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  if (!v70
    || (uint64_t v71 = *((void *)v69 + 1),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v71 + 8),
        id v74 = v70,
        v73(ObjectType, v71),
        uint64_t v76 = v75,
        v74,
        !v76))
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v77 = v200;
  id v192 = (id)sub_100010218(&qword_100802498);
  uint64_t inited = swift_initStackObject();
  long long v191 = xmmword_1006D6270;
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v79 = qword_1007F72A0;
  NSAttributedStringKey v190 = NSFontAttributeName;
  if (v79 != -1) {
    swift_once();
  }
  uint64_t v80 = (void *)qword_10083D868;
  uint64_t v81 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
  *(void *)(inited + 40) = v80;
  *(void *)(inited + 64) = v81;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  id v82 = v80;
  v189 = NSForegroundColorAttributeName;
  id v83 = [v199 labelColor];
  id v84 = [v83 colorWithAlphaComponent:0.6];

  uint64_t v85 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  *(void *)(inited + 104) = v85;
  *(void *)(inited + 80) = v84;
  sub_100396DBC(inited);
  AttributeContainer.init(_:)();
  AttributedString.init(_:attributes:)();
  NSString v86 = *(NSString *)v69;
  if (*(void *)v69)
  {
    uint64_t v87 = *((void *)v69 + 1);
    uint64_t v88 = swift_getObjectType();
    uint64_t v89 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 16);
    id v90 = v86;
    uint64_t v91 = v89(v88, v87);
    uint64_t v77 = v200;
    uint64_t v92 = v91;
    unint64_t v94 = v93;

    if (v94)
    {
      NSString v95 = *(NSString *)v69;
      if (*(void *)v69)
      {
        uint64_t v188 = v92;
        uint64_t v96 = *((void *)v69 + 1);
        uint64_t v97 = swift_getObjectType();
        uint64_t v98 = *(uint64_t (**)(uint64_t, uint64_t))(v96 + 24);
        id v99 = v95;
        uint64_t v100 = v98(v97, v96);
        unint64_t v102 = (unint64_t)v101;

        if (!v102)
        {
          swift_bridgeObjectRelease();
          uint64_t v77 = v200;
          goto LABEL_36;
        }
        uint64_t v103 = HIBYTE(v94) & 0xF;
        if ((v94 & 0x2000000000000000) == 0) {
          uint64_t v103 = v188 & 0xFFFFFFFFFFFFLL;
        }
        uint64_t v77 = v200;
        if (v103)
        {
          uint64_t v104 = HIBYTE(v102) & 0xF;
          if ((v102 & 0x2000000000000000) == 0) {
            uint64_t v104 = v100 & 0xFFFFFFFFFFFFLL;
          }
          if (v104)
          {
            uint64_t v186 = v100;
            long long v187 = (void (*)(char *, uint64_t (*)(void, void), uint64_t))v102;
            uint64_t v105 = swift_initStackObject();
            *(_OWORD *)(v105 + 16) = v191;
            NSAttributedStringKey v106 = v190;
            *(void *)(v105 + 32) = v190;
            uint64_t v107 = qword_1007F7290;
            NSAttributedStringKey v190 = v106;
            if (v107 != -1) {
              swift_once();
            }
            double v108 = (void *)qword_10083D858;
            *(void *)(v105 + 40) = qword_10083D858;
            long double v109 = v189;
            *(void *)(v105 + 64) = v81;
            *(void *)(v105 + 72) = v109;
            id v110 = v108;
            v189 = v109;
            id v111 = [v199 labelColor];
            id v112 = [v111 colorWithAlphaComponent:0.6];

            *(void *)(v105 + 104) = v85;
            *(void *)(v105 + 80) = v112;
            sub_100396DBC(v105);
            AttributeContainer.init(_:)();
            AttributedString.init(_:attributes:)();
            uint64_t v113 = swift_initStackObject();
            *(_OWORD *)(v113 + 16) = v191;
            unint64_t v114 = (void *)qword_10083D858;
            NSAttributedStringKey v115 = v190;
            *(void *)(v113 + 32) = v190;
            *(void *)(v113 + 40) = v114;
            *(void *)(v113 + 64) = v81;
            uint64_t v116 = v189;
            *(void *)(v113 + 72) = v189;
            uint64_t v117 = v115;
            id v118 = v114;
            BOOL v119 = v116;
            id v120 = [v199 labelColor];
            id v121 = [v120 colorWithAlphaComponent:0.4];

            *(void *)(v113 + 104) = v85;
            *(void *)(v113 + 80) = v121;
            sub_100396DBC(v113);
            AttributeContainer.init(_:)();
            AttributedString.init(_:attributes:)();
            uint64_t v122 = v198;
            if (*(void *)v69)
            {
              if (sub_100041A58(*(unsigned char *)(*(void *)v69 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type)) == 0x6E695069746C756DLL
                && v123 == 0xEB0000000070614DLL)
              {
                swift_bridgeObjectRelease();
LABEL_28:
                String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                v125._uint64_t countAndFlagsBits = 10794;
                v125._object = (void *)0xE200000000000000;
                String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v125);
                aBlock[0] = _swiftEmptyArrayStorage;
                v197 = (char *)sub_1005D375C(&qword_1007FEAF8, (void (*)(uint64_t))&type metadata accessor for AttributedString.InterpolationOptions);
                sub_100010218(&qword_1007FEB00);
                sub_10011AE0C(&qword_1007FEB08, &qword_1007FEB00);
                uint64_t v126 = v174[0];
                uint64_t v127 = v176;
                dispatch thunk of SetAlgebra.init<A>(_:)();
                String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
                uint64_t v128 = *(void (**)(uint64_t, uint64_t))(v175 + 8);
                v128(v126, v127);
                v129._uint64_t countAndFlagsBits = 0x20B7C2202A2ALL;
                v129._object = (void *)0xA600000000000000;
                String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v129);
                aBlock[0] = _swiftEmptyArrayStorage;
                dispatch thunk of SetAlgebra.init<A>(_:)();
                String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
                v128(v126, v127);
                v130._uint64_t countAndFlagsBits = 0;
                v130._object = (void *)0xE000000000000000;
                String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v130);
                String.LocalizationValue.init(stringInterpolation:)();
                uint64_t v131 = type metadata accessor for Locale();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v178, 1, 1, v131);
                aBlock[0] = _swiftEmptyArrayStorage;
                sub_1005D375C(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
                sub_100010218(&qword_1007FEB18);
                sub_10011AE0C((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
                dispatch thunk of SetAlgebra.init<A>(_:)();
                NSString v132 = v196;
                AttributedString.init(localized:defaultValue:options:table:bundle:locale:comment:)();
                uint64_t v133 = v202;
                uint64_t v134 = *(void (**)(char *, uint64_t))(v202 + 8);
                uint64_t v135 = v198;
                v134(v181, v198);
                v134(v182, v135);
                v134(v200, v135);
                uint64_t v77 = v200;
                (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v200, v132, v135);
                goto LABEL_36;
              }
              char v124 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v124) {
                goto LABEL_28;
              }
              if (*(void *)v69)
              {
                if (sub_100041A58(*(unsigned char *)(*(void *)v69 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type)) == 0x4D664F6574617473
                  && v136 == 0xEB00000000646E69)
                {
                  swift_bridgeObjectRelease();
LABEL_34:
                  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
                  v138._uint64_t countAndFlagsBits = 10794;
                  v138._object = (void *)0xE200000000000000;
                  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v138);
                  aBlock[0] = _swiftEmptyArrayStorage;
                  id v192 = (id)sub_1005D375C(&qword_1007FEAF8, (void (*)(uint64_t))&type metadata accessor for AttributedString.InterpolationOptions);
                  *(void *)&long long v191 = sub_100010218(&qword_1007FEB00);
                  v197 = (char *)sub_10011AE0C(&qword_1007FEB08, &qword_1007FEB00);
                  uint64_t v139 = v174[0];
                  uint64_t v140 = v176;
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
                  id v141 = *(void (**)(uint64_t, uint64_t))(v175 + 8);
                  v141(v139, v140);
                  v142._uint64_t countAndFlagsBits = 0x20B7C2202A2ALL;
                  v142._object = (void *)0xA600000000000000;
                  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v142);
                  aBlock[0] = _swiftEmptyArrayStorage;
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)();
                  v141(v139, v140);
                  v143._uint64_t countAndFlagsBits = 0;
                  v143._object = (void *)0xE000000000000000;
                  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v143);
                  String.LocalizationValue.init(stringInterpolation:)();
                  uint64_t v144 = type metadata accessor for Locale();
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v178, 1, 1, v144);
                  aBlock[0] = _swiftEmptyArrayStorage;
                  sub_1005D375C(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
                  sub_100010218(&qword_1007FEB18);
                  sub_10011AE0C((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  uint64_t v145 = v196;
                  AttributedString.init(localized:defaultValue:options:table:bundle:locale:comment:)();
                  uint64_t v146 = v202;
                  char v147 = *(void (**)(char *, uint64_t))(v202 + 8);
                  v147(v181, v122);
                  v147(v182, v122);
                  v147(v77, v122);
                  (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v77, v145, v122);
                  goto LABEL_36;
                }
                char v137 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v137) {
                  goto LABEL_34;
                }
              }
            }
            v148 = *(void (**)(char *, uint64_t))(v202 + 8);
            v148(v181, v122);
            v148(v182, v122);
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
  }
LABEL_36:
  id v149 = *(void **)&v203[OBJC_IVAR____TtC7Journal13SlimAssetView_label];
  [v149 setAdjustsFontForContentSizeCategory:0];
  sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
  uint64_t v150 = v198;
  (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v196, v77, v198);
  uint64_t v151 = NSAttributedString.init(_:)();
  [v149 setAttributedText:v151];

  [v149 setAdjustsFontForContentSizeCategory:1];
  NSString v152 = *(NSString *)v69;
  if (!*(void *)v69
    || (uint64_t v153 = *((void *)v69 + 1),
        uint64_t v154 = swift_getObjectType(),
        char v155 = *(uint64_t (**)(uint64_t, uint64_t))(v153 + 32),
        id v156 = v152,
        uint64_t v157 = v155(v154, v153),
        unint64_t v159 = v158,
        v156,
        !v159))
  {
LABEL_46:
    unint64_t v161 = v203;
    [*(id *)&v203[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel] setText:0];
    NSString v166 = *(NSString *)v69;
    if (!*(void *)v69) {
      goto LABEL_51;
    }
LABEL_47:
    uint64_t v167 = *((void *)v69 + 1);
    uint64_t v168 = swift_getObjectType();
    v169 = *(void (**)(uint64_t, uint64_t))(v167 + 16);
    id v170 = v166;
    v169(v168, v167);
    uint64_t v172 = v171;

    if (v172)
    {
      NSString v166 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v166 = 0;
    }
    unint64_t v161 = v203;
    goto LABEL_51;
  }
  uint64_t v160 = HIBYTE(v159) & 0xF;
  if ((v159 & 0x2000000000000000) == 0) {
    uint64_t v160 = v157 & 0xFFFFFFFFFFFFLL;
  }
  if (!v160)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  unint64_t v161 = v203;
  uint64_t v162 = *(void **)&v203[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel];
  NSString v163 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v162 setText:v163];

  if (qword_1007F7290 != -1) {
    swift_once();
  }
  [v162 setFont:qword_10083D858];
  id v164 = [v199 labelColor];
  id v165 = [v164 colorWithAlphaComponent:0.4];

  [v162 setTextColor:v165];
  NSString v166 = *(NSString *)v69;
  if (*(void *)v69) {
    goto LABEL_47;
  }
LABEL_51:
  [v161 setAccessibilityValue:v166];

  if (*(void *)&v161[OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView]) {
    [v161 bringSubviewToFront:];
  }
  (*(void (**)(char *, uint64_t))(v202 + 8))(v77, v150);
  return v194(v195, v201);
}

uint64_t sub_1005CDD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = type metadata accessor for Date();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[13] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[14] = v8;
  v5[15] = v7;
  return _swift_task_switch(sub_1005CDE84, v8, v7);
}

uint64_t sub_1005CDE84()
{
  uint64_t v1 = (char *)v0[5];
  uint64_t v2 = &v1[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  v0[16] = v3;
  if (v3)
  {
    uint64_t v4 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    v3;
    id v6 = [v1 traitCollection];
    v0[17] = v6;
    uint64_t v10 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(v4 + 56) + **(int **)(v4 + 56));
    uint64_t v7 = (void *)swift_task_alloc();
    v0[18] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1005CE038;
    return v10(v6, ObjectType, v4);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1005CE038(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 136);
  uint64_t v4 = *(void **)(*v1 + 128);
  *(void *)(*v1 + 152) = a1;
  swift_task_dealloc();

  uint64_t v5 = *(void *)(v2 + 120);
  uint64_t v6 = *(void *)(v2 + 112);
  return _swift_task_switch(sub_1005CE198, v6, v5);
}

uint64_t sub_1005CE198()
{
  uint64_t v1 = v0[19];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[19];
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    uint64_t v5 = v0[7];
    uint64_t v6 = v0[8];
    uint64_t v7 = v0[6];
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_100045944(v4, v3);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5);
    uint64_t v11 = v0[11];
    if (v10 == 1)
    {
      swift_retain_n();
      id v12 = v2;
      sub_1000AC7D4(v11);
    }
    else
    {
      uint64_t v14 = v0[9];
      uint64_t v13 = v0[10];
      uint64_t v16 = v0[7];
      uint64_t v15 = v0[8];
      (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v13, v0[11], v16);
      swift_retain_n();
      id v26 = v2;
      static Date.now.getter();
      Date.timeIntervalSince(_:)();
      double v18 = v17;
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v19(v14, v16);
      v19(v13, v16);
      if (v18 < 0.1)
      {
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v21 = (void *)Strong;
          uint64_t v22 = v0[12];
          id v23 = *(id *)(Strong + OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView);

          [v23 setBackgroundColor:v26];
          swift_release();
          swift_release();

LABEL_9:
          sub_1000AC7D4(v22);
          swift_release();
          goto LABEL_10;
        }
LABEL_8:
        swift_release();
        swift_release();
        uint64_t v22 = v0[12];
        goto LABEL_9;
      }
    }
    static Animation.easeIn(duration:)();
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    static UIView.animate(_:changes:completion:)();
    swift_release();
    goto LABEL_8;
  }
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

void sub_1005CE4C4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView);

    [v5 setBackgroundColor:a2];
  }
}

void sub_1005CE54C()
{
  uint64_t v1 = v0;
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView];
  [v1 addSubview:v2];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  aBlock[4] = sub_1005D37F0;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B7658;
  id v5 = _Block_copy(aBlock);
  uint64_t v6 = v1;
  swift_release();
  [v3 animateWithDuration:0 delay:v5 options:0 animations:0.11 completion:0.0];
  _Block_release(v5);
  uint64_t v7 = OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer;
  uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer];
  uint64_t v9 = self;
  id v10 = v8;
  id v11 = [v9 mainScreen];
  [v11 bounds];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v107.origin.CGFloat x = v13;
  v107.origin.double y = v15;
  v107.size.double width = v17;
  v107.size.double height = v19;
  double v20 = ceil(CGRectGetWidth(v107));
  if (qword_1007F7448 != -1) {
    swift_once();
  }
  [v10 setFrame:0.0, 0.0, v20, *(double *)&qword_10083DA58];

  [*(id *)&v6[v7] setMasksToBounds:1];
  [v2 setClipsToBounds:1];
  id v21 = [v2 layer];
  [v21 insertSublayer:*(void *)&v6[v7] atIndex:0];

  id v22 = *(id *)&v6[v7];
  [v6 bounds];
  [v22 setFrame:];

  sub_100010218(&qword_1007FBD30);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1006D6280;
  *(void *)(v23 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v23 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  UIView.registerForTraitChanges(_:action:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v24 = OBJC_IVAR____TtC7Journal13SlimAssetView_iconView;
  [*(id *)&v6[OBJC_IVAR____TtC7Journal13SlimAssetView_iconView] setImage:*(void *)&v6[OBJC_IVAR____TtC7Journal13SlimAssetView_fallbackIcon]];
  [v6 addSubview:*(void *)&v6[v24]];
  uint64_t v25 = *(void **)&v6[OBJC_IVAR____TtC7Journal13SlimAssetView_label];
  [v6 addSubview:v25];
  id v105 = *(id *)&v6[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel];
  [v6 addSubview:];
  uint64_t v103 = v24;
  id v26 = *(id *)&v6[v24];
  id v27 = [v26 superview];
  id v28 = &stru_1007D7000;
  if (v27)
  {
    uint64_t v29 = v27;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v30 = [v26 leadingAnchor];
    id v31 = [v29 leadingAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    [v32 setConstant:4.0];
    if (v32)
    {
      id v32 = v32;
      id v28 = &stru_1007D7000;
      [v32 setActive:1];

      uint64_t v29 = v32;
    }
    else
    {
      id v28 = &stru_1007D7000;
    }
    uint64_t v33 = v103;
  }
  else
  {
    id v32 = 0;
    uint64_t v33 = v103;
  }

  id v34 = *(id *)&v6[v33];
  id v35 = [v34 superview];
  if (v35)
  {
    id v36 = v35;
    [v34 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v37 = [v34 topAnchor];
    id v38 = [v36 topAnchor];
    id v39 = [v37 constraintEqualToAnchor:v38];

    [v39 setConstant:4.0];
    if (v39)
    {
      id v39 = v39;
      id v28 = &stru_1007D7000;
      [v39 setActive:1];

      id v36 = v39;
    }
    else
    {
      id v28 = &stru_1007D7000;
    }
  }
  else
  {
    id v39 = 0;
  }

  id v40 = *(id *)&v6[v33];
  id v41 = sub_1001DD438(0, 1, 4.0);

  id v42 = *(id *)&v6[v33];
  [v42 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v43 = [v42 heightAnchor];
  id v44 = [v42 widthAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 multiplier:1.0];

  [v45 v28[90].name:1];
  [*(id *)&v6[v33] setContentMode:1];
  id v46 = [v25 superview];
  if (v46)
  {
    uint64_t v47 = v46;
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v48 = [v25 centerYAnchor];
    id v49 = [v47 centerYAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49];

    [v50 setConstant:0.0];
    id v51 = v50;
    [v51 v28[90].name:1];
  }
  id v52 = [v25 superview];
  if (v52)
  {
    CGFloat v53 = v52;
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v54 = [v25 topAnchor];
    id v55 = [v53 topAnchor];
    id v56 = [v54 constraintGreaterThanOrEqualToAnchor:v55];

    [v56 setConstant:0.0];
    if (v56)
    {
      id v57 = v56;
      [v57 setActive:1];

      LODWORD(v58) = 1132068864;
      [v57 setPriority:v58];
      CGFloat v53 = v57;
    }
  }
  id v59 = sub_1001DD438(2, 1, 0.0);
  if (v59)
  {
    uint64_t v61 = v59;
    LODWORD(v60) = 1132068864;
    [v59 setPriority:v60];
  }
  id v62 = *(id *)&v6[v33];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v63 = [v25 leadingAnchor];
  id v64 = [v62 trailingAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  [v65 setConstant:6.0];
  [v65 setActive:1];

  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v66 = [v25 trailingAnchor];
  id v67 = [v105 leadingAnchor];
  id v68 = [v66 constraintEqualToAnchor:v67];

  [v68 setConstant:-6.0];
  [v68 setActive:1];
  LODWORD(v69) = 1132068864;
  [v68 setPriority:v69];

  [v25 setLineBreakMode:4];
  [v25 setAdjustsFontForContentSizeCategory:1];
  [v105 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v70 = [v105 centerYAnchor];
  id v71 = [v25 centerYAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  [v72 setActive:1];
  id v73 = [v105 superview];
  if (v73)
  {
    id v74 = v73;
    [v105 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v75 = [v105 topAnchor];
    id v76 = [v74 topAnchor];
    id v77 = [v75 constraintGreaterThanOrEqualToAnchor:v76];

    [v77 setConstant:0.0];
    if (v77)
    {
      id v78 = v77;
      [v78 setActive:1];

      LODWORD(v79) = 1132068864;
      [v78 setPriority:v79];
      id v74 = v78;
    }
  }
  id v80 = sub_1001DD438(2, 1, 0.0);
  if (v80)
  {
    id v82 = v80;
    LODWORD(v81) = 1132068864;
    [v80 setPriority:v81];
  }
  LODWORD(v81) = 1148846080;
  [v105 setContentCompressionResistancePriority:0 forAxis:v81];
  LODWORD(v83) = 1148846080;
  [v105 setContentHuggingPriority:0 forAxis:v83];
  LODWORD(v84) = 1132068864;
  [v25 setContentCompressionResistancePriority:0 forAxis:v84];
  if (qword_1007F7400 != -1) {
    swift_once();
  }
  double v85 = *(double *)&qword_10083DA10;
  id v86 = [v105 superview];
  if (v86)
  {
    uint64_t v87 = v86;
    [v105 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v88 = [v105 trailingAnchor];
    id v89 = [v87 trailingAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89];

    [v90 setConstant:-v85];
    if (v90)
    {
      id v91 = v90;
      [v91 setActive:1];
    }
    uint64_t v92 = &selRef_drawMapRect_zoomScale_inContext_;
    unint64_t v93 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v90 = 0;
    uint64_t v92 = &selRef_drawMapRect_zoomScale_inContext_;
    unint64_t v93 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  unint64_t v94 = *(void **)&v104[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint];
  *(void *)&v104[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint] = v90;

  [v105 v93[137]:4];
  [v105 v92[136]:1];
  sub_1005D1CBC();
  [v104 setIsAccessibilityElement:1];
  NSString v95 = *(NSString *)&v104[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  if (v95)
  {
    uint64_t v96 = *(void *)&v104[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
    id v99 = v95;
    v98(ObjectType, v96);
    uint64_t v101 = v100;

    if (v101)
    {
      NSString v95 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v95 = 0;
    }
  }
  [v104 setAccessibilityLabel:v95];

  id v102 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v104 action:"tapped"];
  [v104 addGestureRecognizer:v102];
  sub_1005CFFA0();
}

uint64_t sub_1005CF314()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)aBlock - v9;
  id v11 = self;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  aBlock[4] = sub_1005D3374;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B75B8;
  CGFloat v13 = _Block_copy(aBlock);
  double v14 = v0;
  swift_release();
  [v11 animateWithDuration:0 delay:v13 options:0 animations:0.11 completion:0.0];
  _Block_release(v13);
  uint64_t v15 = OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer;
  double v16 = *(void **)&v14[OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer];
  CGFloat v17 = self;
  id v18 = v16;
  id v19 = [v17 mainScreen];
  [v19 bounds];
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;

  v36.origin.CGFloat x = v21;
  v36.origin.double y = v23;
  v36.size.double width = v25;
  v36.size.double height = v27;
  double Width = CGRectGetWidth(v36);
  if (qword_1007F7448 != -1) {
    swift_once();
  }
  [v18 setFrame:0.0, 0.0, ceil(Width), *(double *)&qword_10083DA58];

  [*(id *)&v14[v15] setMasksToBounds:1];
  [*(id *)&v14[OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView] setClipsToBounds:1];
  [*(id *)&v14[OBJC_IVAR____TtC7Journal13SlimAssetView_iconView] setImage:*(void *)&v14[OBJC_IVAR____TtC7Journal13SlimAssetView_fallbackIcon]];
  Date.init()();
  uint64_t v29 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v3, 1, 1, v29);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  type metadata accessor for MainActor();
  id v30 = v14;
  uint64_t v31 = static MainActor.shared.getter();
  unint64_t v32 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v31;
  *((void *)v33 + 3) = &protocol witness table for MainActor;
  *((void *)v33 + 4) = v30;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v33[v32], v7, v4);
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100812BF8, (uint64_t)v33);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

void sub_1005CF79C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 40);
    id v6 = v2;
    unint64_t v7 = v5(ObjectType, v3);

    uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer);
    if (v7)
    {
      id v9 = v8;
      sub_100091570(v7);
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      Class v10 = isa;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer);
  }
  id v9 = v8;
  Class v10 = 0;
LABEL_6:
  Class v12 = v10;
  [v9 setColors:];
}

void sub_1005CF8C8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView;
  if (!*(void *)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView])
  {
    type metadata accessor for CanvasAssetDeleteView();
    id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v3 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v2;

    uint64_t v4 = *(void **)&v0[v1];
    if (v4)
    {
      uint64_t v5 = v4;
      [v0 addSubview:v5];
      if (qword_1007F70D8 != -1) {
        swift_once();
      }
      double v6 = *(double *)&xmmword_10083D680;
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v7 = [v5 widthAnchor];
      id v8 = [v7 constraintEqualToConstant:v6];

      [v8 setActive:1];
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v9 = [v5 heightAnchor];
      id v10 = [v5 widthAnchor];
      id v11 = [v9 constraintEqualToAnchor:v10 multiplier:1.0];

      [v11 setActive:1];
      id v12 = [v5 superview];
      if (v12)
      {
        CGFloat v13 = v12;
        [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v14 = [v5 topAnchor];
        id v15 = [v13 topAnchor];
        id v16 = [v14 constraintEqualToAnchor:v15];

        [v16 setConstant:0.0];
        id v17 = v16;
        [v17 setActive:1];
      }
      id v18 = [v5 superview];
      if (v18)
      {
        id v19 = v18;
        [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v20 = [v5 trailingAnchor];
        id v21 = [v19 trailingAnchor];
        id v22 = [v20 constraintEqualToAnchor:v21];

        [v22 setConstant:0.0];
        id v23 = v22;
        [v23 setActive:1];
      }
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      CGFloat v25 = (void (**)())&v5[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_tapCompletion];
      *CGFloat v25 = sub_1005D336C;
      v25[1] = (void (*)())v24;
      swift_release();
      uint64_t v26 = OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint;
      [*(id *)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint] setActive:0];
      CGFloat v27 = *(void **)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel];
      [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v28 = [v27 trailingAnchor];
      id v29 = [v5 leadingAnchor];
      id v30 = [v28 constraintEqualToAnchor:v29];

      [v30 setConstant:-0.0];
      [v30 setActive:1];
      id v31 = *(id *)&v0[v26];
      *(void *)&v0[v26] = v30;
    }
  }
}

void sub_1005CFD70()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_100447084(2u);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1005CFDE8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView);
  if (v2)
  {
    [v2 removeFromSuperview];
    uint64_t v3 = *(void **)(v0 + v1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)(v0 + v1) = 0;

  uint64_t v4 = OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint);
  if (v5) {
    [v5 setActive:0];
  }
  double v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel);
  if (qword_1007F7400 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_10083DA10;
  id v8 = [v6 superview];
  if (v8)
  {
    id v9 = v8;
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v6 trailingAnchor];
    id v11 = [v9 trailingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:-v7];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
  }
  else
  {
    id v12 = 0;
  }
  id v14 = *(void **)(v0 + v4);
  *(void *)(v0 + v4) = v12;
}

uint64_t sub_1005CFFA0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  double v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  double v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1005D3364;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B7568;
  id v9 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1005D375C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

void sub_1005D0270()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void *)&Strong[OBJC_IVAR____TtC7Journal13SlimAssetView_journalEntry];
    if (!v2)
    {

      return;
    }
    swift_retain();
    id v3 = [v1 layer];
    if (qword_1007F7C98 != -1) {
      swift_once();
    }
    long long v36 = xmmword_10083E980;
    long long v37 = *(_OWORD *)&qword_10083E990;
    long long v38 = xmmword_10083E9A0;
    long long v39 = *(_OWORD *)&qword_10083E9B0;
    [v3 setCornerRadii:&v36];

    uint64_t v4 = OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView;
    id v5 = [*(id *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView] layer];
    long long v36 = xmmword_10083E980;
    long long v37 = *(_OWORD *)&qword_10083E990;
    long long v38 = xmmword_10083E9A0;
    long long v39 = *(_OWORD *)&qword_10083E9B0;
    [v5 setCornerRadii:&v36];

    id v6 = [v1 layer];
    double v7 = &v1[OBJC_IVAR____TtC7Journal13SlimAssetView_outerCornerRadius];
    uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_outerCornerRadius];
    uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_outerCornerRadius + 8];
    [v6 cornerRadii];
    *(void *)&long long v37 = v8;
    *((void *)&v37 + 1) = v9;
    [v6 setCornerRadii:&v36];

    id v10 = [v1 layer];
    uint64_t v11 = *(void *)v7;
    uint64_t v12 = *((void *)v7 + 1);
    [v10 cornerRadii];
    *(void *)&long long v36 = v11;
    *((void *)&v36 + 1) = v12;
    [v10 setCornerRadii:&v36];

    id v13 = [*(id *)&v1[v4] layer];
    uint64_t v14 = *(void *)v7;
    uint64_t v15 = *((void *)v7 + 1);
    [v13 cornerRadii];
    *(void *)&long long v37 = v14;
    *((void *)&v37 + 1) = v15;
    [v13 setCornerRadii:&v36];

    id v16 = [*(id *)&v1[v4] layer];
    uint64_t v17 = *(void *)v7;
    uint64_t v18 = *((void *)v7 + 1);
    [v16 cornerRadii];
    *(void *)&long long v36 = v17;
    *((void *)&v36 + 1) = v18;
    [v16 setCornerRadii:&v36];

    unint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v35 == 1) {
        goto LABEL_7;
      }
    }
    else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
LABEL_7:
      id v20 = (void *)sub_100339674();
      if (v20)
      {
        sub_10033AA5C(v20);
        id v22 = v21;

        swift_release();
        return;
      }
      id v23 = [v1 layer];
      uint64_t v24 = *(void *)v7;
      uint64_t v25 = *((void *)v7 + 1);
      [v23 cornerRadii];
      *(void *)&long long v38 = v24;
      *((void *)&v38 + 1) = v25;
      [v23 setCornerRadii:&v36];

      id v26 = [v1 layer];
      uint64_t v27 = *(void *)v7;
      uint64_t v28 = *((void *)v7 + 1);
      [v26 cornerRadii];
      *(void *)&long long v39 = v27;
      *((void *)&v39 + 1) = v28;
      [v26 setCornerRadii:&v36];

      id v29 = [*(id *)&v1[v4] layer];
      uint64_t v30 = *(void *)v7;
      uint64_t v31 = *((void *)v7 + 1);
      [v29 cornerRadii];
      *(void *)&long long v38 = v30;
      *((void *)&v38 + 1) = v31;
      [v29 setCornerRadii:&v36];

      id v32 = [*(id *)&v1[v4] layer];
      uint64_t v33 = *(void *)v7;
      uint64_t v34 = *((void *)v7 + 1);
      [v32 cornerRadii];
      *(void *)&long long v39 = v33;
      *((void *)&v39 + 1) = v34;
      [v32 setCornerRadii:&v36];

      goto LABEL_13;
    }

LABEL_13:
    swift_release();
  }
}

uint64_t sub_1005D06E0()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  double v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v24 - v9;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_journalEntry];
    if (v13)
    {
      uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
      if ((unint64_t)v14 >> 62)
      {
        uint64_t v22 = v14 & 0xFFFFFFFFFFFFFF8;
        if (v14 < 0) {
          uint64_t v22 = *(void *)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
        }
        uint64_t v24 = *(char **)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
        uint64_t v25 = (char *)v22;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t result = v23 - 1;
        if (!__OFSUB__(v23, 1)) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        uint64_t result = v15 - 1;
        if (!__OFSUB__(v15, 1))
        {
LABEL_5:
          IndexPath.init(item:section:)();
          uint64_t v16 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
          type metadata accessor for MainActor();
          swift_retain();
          swift_retain();
          uint64_t v25 = v0;
          uint64_t v17 = static MainActor.shared.getter();
          unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
          uint64_t v24 = v3;
          unint64_t v19 = (v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
          id v20 = (char *)swift_allocObject();
          *((void *)v20 + 2) = v17;
          *((void *)v20 + 3) = &protocol witness table for MainActor;
          *((void *)v20 + 4) = v12;
          *((void *)v20 + 5) = v13;
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v20[v18], v7, v4);
          uint64_t v21 = (uint64_t)v24;
          *(void *)&v20[v19] = v25;
          sub_100328A8C(v21, (uint64_t)&unk_100812BE8, (uint64_t)v20);
          swift_release();
          swift_release();
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        }
      }
      __break(1u);
      return result;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1005D0A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v6;
  v4[11] = v5;
  return _swift_task_switch(sub_1005D0B00, v6, v5);
}

uint64_t sub_1005D0B00()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = (void *)Strong,
        uint64_t v3 = Strong + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset,
        uint64_t v4 = *(void **)(Strong + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset),
        v0[12] = v4,
        uint64_t v5 = *(void *)(v3 + 8),
        v4,
        v2,
        v4))
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 72) + **(int **)(v5 + 72));
    double v7 = (void *)swift_task_alloc();
    v0[13] = v7;
    *double v7 = v0;
    v7[1] = sub_1005D0D30;
    return v12(ObjectType, v5);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    v0[14] = v9;
    if (v9)
    {
      id v10 = (void *)swift_task_alloc();
      v0[15] = v10;
      *id v10 = v0;
      v10[1] = sub_1005D0F64;
      return sub_1005D1104();
    }
    else
    {
      swift_release();
      uint64_t v11 = (uint64_t (*)(void))v0[1];
      return v11();
    }
  }
}

uint64_t sub_1005D0D30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 96);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1005D0E70, v4, v3);
}

uint64_t sub_1005D0E70()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[14] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[15] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1005D0F64;
    return sub_1005D1104();
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1005D0F64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 112);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1005D10A4, v4, v3);
}

uint64_t sub_1005D10A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005D1104()
{
  v1[5] = v0;
  uint64_t v2 = type metadata accessor for IndexSet();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v4;
  v1[11] = v3;
  return _swift_task_switch(sub_1005D11F8, v4, v3);
}

uint64_t sub_1005D11F8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal13SlimAssetView_journalEntry);
  v0[12] = v2;
  if (v2)
  {
    swift_retain();
    sub_1000E56EC();
    if (*(void *)(v1 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset))
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 80))(ObjectType, v3);
      v0[13] = v5;
      uint64_t v6 = (unint64_t *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v7 = *v6;
      swift_bridgeObjectRetain();
      sub_10046519C((uint64_t)v5, v7);
      char v9 = v8;
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        uint64_t result = IndexSet.init(integer:)();
        if (*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v12 = v17 - 1;
          if (!__OFSUB__(v17, 1)) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v11 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v12 = v11 - 1;
          if (!__OFSUB__(v11, 1))
          {
LABEL_6:
            uint64_t v13 = v12 & ~(v12 >> 63);
            uint64_t v14 = (void *)swift_task_alloc();
            v0[14] = v14;
            *uint64_t v14 = v0;
            v14[1] = sub_1005D1458;
            uint64_t v15 = v0[8];
            return sub_1000EB9E4(v15, v13);
          }
        }
        __break(1u);
        return result;
      }
    }
    swift_release();
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100447084(0);
      swift_unknownObjectRelease();
    }
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1005D1458()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1005D1578, v3, v2);
}

uint64_t sub_1005D1578()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100447084(0);
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

double *sub_1005D16C8()
{
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for SlimAssetView();
  [super accessibilityCustomActions];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10001B284(0, (unint64_t *)&unk_10080C360);
    uint64_t v3 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v24 = v3;
  if (qword_1007F7B10 != -1) {
    swift_once();
  }
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1005D37B0;
  uint64_t v22 = v4;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  unint64_t v19 = sub_1005D2A64;
  id v20 = &unk_1007B7748;
  unint64_t v7 = _Block_copy(&aBlock);
  id v8 = [v5 initWithName:v6 actionHandler:v7];

  _Block_release(v7);
  swift_release();
  swift_release();
  id v9 = v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (qword_1007F7A20 != -1) {
    swift_once();
  }
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v11 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1005D3114;
  uint64_t v22 = v10;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  unint64_t v19 = sub_1005D2A64;
  id v20 = &unk_1007B7770;
  uint64_t v13 = _Block_copy(&aBlock);
  id v14 = [v11 initWithName:v12 actionHandler:v13];

  _Block_release(v13);
  swift_release();
  swift_release();
  id v15 = v14;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v24;
}

BOOL sub_1005D1B34()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    unint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_100328A60((uint64_t)v2, (uint64_t)&unk_100812C18, (uint64_t)v7);
    swift_release();
  }
  return Strong != 0;
}

void sub_1005D1CBC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_isEditing) == 1)
  {
    if (qword_1007F79C0 != -1) {
      swift_once();
    }
    uint64_t v1 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v2 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v11[4] = sub_1005D3114;
    v11[5] = v1;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1005D2A64;
    v11[3] = &unk_1007B7518;
    uint64_t v4 = _Block_copy(v11);
    id v5 = [v2 initWithName:v3 actionHandler:v4];

    _Block_release(v4);
    swift_release();
    swift_release();
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_label);
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1006D6D00;
    *(void *)(v7 + 32) = v5;
    v11[0] = v7;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&unk_10080C360);
    id v8 = v5;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 setAccessibilityCustomActions:isa];
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_label);
    [v10 setAccessibilityCustomActions:0];
  }
}

BOOL sub_1005D1F20()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100447084(2u);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  return Strong != 0;
}

id sub_1005D1FA8(uint64_t a1, CGFloat a2, CGFloat a3)
{
  if ([v3 isHidden]) {
    goto LABEL_8;
  }
  uint64_t v7 = OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView;
  id v8 = *(void **)&v3[OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView];
  if (!v8) {
    goto LABEL_8;
  }
  [v8 frame];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  if (qword_1007F70D8 != -1) {
    swift_once();
  }
  v22.origin.CGFloat x = v10;
  v22.origin.double y = v12;
  v22.size.double width = v14;
  v22.size.double height = v16;
  CGRect v23 = CGRectInset(v22, -*(double *)&xmmword_10083D680, -*(double *)&xmmword_10083D680);
  v21.CGFloat x = a2;
  v21.double y = a3;
  if (CGRectContainsPoint(v23, v21))
  {
    uint64_t v17 = *(void **)&v3[v7];
    if (v17) {
      id v18 = v17;
    }
  }
  else
  {
LABEL_8:
    v20.receiver = v3;
    v20.super_class = (Class)type metadata accessor for SlimAssetView();
    return [super hitTest:a1 withEvent:a2];
  }
  return v17;
}

uint64_t sub_1005D215C()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 80))(ObjectType, v1);
}

void sub_1005D21B8()
{
  swift_release();
  swift_weakDestroy();
  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_slimAssetDelegate);

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13SlimAssetView_fallbackIcon);
}

id sub_1005D2298()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SlimAssetView();
  [super dealloc];
}

uint64_t type metadata accessor for SlimAssetView()
{
  return self;
}

Class sub_1005D23DC()
{
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  if (qword_1007F7620 != -1) {
LABEL_29:
  }
    swift_once();
  uint64_t v0 = qword_1007F7C10;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10083E8F8;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v2 = v1;
  NSString v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F7618 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1007F7C18;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (id)qword_10083E900;
  uint64_t v6 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v6;
  UIMenuElementSize preferredElementSize = v7;
  specialized Array._endMutation()();
  id v31 = v3;
  id v34 = v6;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v37.value.super.Class isa = 0;
  v37.is_nil = 0;
  v30.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v37, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  id v9 = [(objc_class *)v30.super.super.isa children];
  sub_10001B284(0, (unint64_t *)&unk_100807680);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_10:
      unint64_t v35 = v10 & 0xC000000000000001;
      uint64_t v12 = 4;
      uint64_t v32 = v11;
      unint64_t v33 = v10;
      while (1)
      {
        if (v35) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(v10 + 8 * v12);
        }
        CGFloat v14 = v13;
        uint64_t v15 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        self;
        uint64_t v16 = swift_dynamicCastObjCClass();
        if (!v16) {
          goto LABEL_12;
        }
        uint64_t v17 = (void *)v16;
        id v18 = v14;
        id v19 = [v17 title];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        id v23 = [v34 title];
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

        if (v20 == v24 && v22 == v26)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v11 = v32;
        }
        else
        {
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v32;
          if ((v28 & 1) == 0)
          {

            unint64_t v10 = v33;
LABEL_12:

            if (v15 == v11) {
              break;
            }
            goto LABEL_13;
          }
        }
        [v17 setState:1];

        unint64_t v10 = v33;
        if (v15 == v11) {
          break;
        }
LABEL_13:
        ++v12;
      }
    }
  }

  swift_bridgeObjectRelease_n();
  return v30.super.super.isa;
}

uint64_t sub_1005D2880()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v7 = static MainActor.shared.getter();
    Swift::String v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v6;
    swift_release();
    sub_100328A60((uint64_t)v2, (uint64_t)&unk_100812BD0, (uint64_t)v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_1005D2A64(uint64_t a1, void *a2)
{
  NSString v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

id sub_1005D2ABC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_10001B284(0, (unint64_t *)&unk_100807680);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  NSString v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_1005D2B4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_journalEntry] = 0;
  v0[OBJC_IVAR____TtC7Journal13SlimAssetView_isEditing] = 0;
  swift_weakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAssetDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC7Journal13SlimAssetView_backgroundView;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal13SlimAssetView_gradientLayer;
  sub_10001B284(0, (unint64_t *)&unk_100812C20);
  *(void *)&v1[v4] = sub_1002FD34C(3, 5, (unint64_t)_swiftEmptyArrayStorage, kCAGradientLayerAxial);
  uint64_t v5 = OBJC_IVAR____TtC7Journal13SlimAssetView_iconView;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal13SlimAssetView_label;
  *(void *)&v1[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabel;
  *(void *)&v1[v7] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_xPlatterView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_trailingLabelTrailingMarginConstraint] = 0;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  if (v9)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1006D6D10;
    *(void *)(v10 + 32) = [self whiteColor];
    if (qword_1007F71F0 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)qword_10083D7B8;
    *(void *)(v10 + 40) = qword_10083D7B8;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    id v12 = v11;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [self configurationWithPaletteColors:isa];

    id v15 = [v9 imageWithConfiguration:v14];
  }
  else
  {
    id v15 = 0;
  }
  *(void *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_fallbackIcon] = v15;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v1[OBJC_IVAR____TtC7Journal13SlimAssetView_outerCornerRadius] = _Q0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1005D2E90()
{
  if (v0[OBJC_IVAR____TtC7Journal13SlimAssetView_isEditing] != 1) {
    return 0;
  }
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = self;
  v7[4] = sub_1005D2FFC;
  v7[5] = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1005D2ABC;
  v7[3] = &unk_1007B74A0;
  uint64_t v3 = _Block_copy(v7);
  uint64_t v4 = v0;
  swift_retain();
  swift_release();
  id v5 = [v2 configurationWithIdentifier:0 previewProvider:0 actionProvider:v3];
  swift_release();
  _Block_release(v3);
  return v5;
}

uint64_t sub_1005D2FC4()
{
  return swift_deallocObject();
}

Class sub_1005D2FFC()
{
  return sub_1005D23DC();
}

uint64_t sub_1005D3004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005D3014()
{
  return swift_release();
}

uint64_t sub_1005D301C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005D3054()
{
  return sub_1005D2880();
}

uint64_t sub_1005D3060(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1005D0A68(a1, v4, v5, v6);
}

BOOL sub_1005D3114()
{
  return sub_1005D1F20();
}

uint64_t sub_1005D3134()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1005D322C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100052588;
  return sub_1003835BC(a1, v5, v6, v7, v8, v9);
}

void sub_1005D3364()
{
}

void sub_1005D336C()
{
}

void sub_1005D3374()
{
  sub_1005CF79C(*(void *)(v0 + 16));
}

uint64_t sub_1005D3380(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100052588;
  return sub_1005CBE14(a1, v5, v6, v7, v8);
}

void sub_1005D3480()
{
  sub_1005CC598(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005D348C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100052588;
  return sub_1005CDD40(a1, v5, v6, v7, v8);
}

uint64_t sub_1005D358C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1005D3660(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1005CBE14(a1, v5, v6, v7, v8);
}

uint64_t sub_1005D375C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1005D37A8()
{
  sub_1005CE4C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

BOOL sub_1005D37B0()
{
  return sub_1005D1B34();
}

void sub_1005D3804()
{
  id v0 = [self systemIndigoColor];
  id v1 = [v0 colorWithAlphaComponent:0.15];

  qword_100812C30 = (uint64_t)v1;
}

char *sub_1005D3874(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_xPlatterView] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_deleteBanner];
  *uint64_t v9 = AudioRecordingActivityState.hash(into:);
  v9[1] = 0;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v4[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_outerCornerRadius] = _Q0;
  v4[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_isEditing] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIcon] = 0;
  v4[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIconImageNeedsUpdate] = 0;
  v32.receiver = v4;
  v32.super_class = (Class)type metadata accessor for CanvasPhotosMemoriesBanner();
  id v15 = [super initWithFrame:a1, a2, a3, a4];
  [v15 setClipsToBounds:1];
  uint64_t v16 = qword_1007F7E90;
  uint64_t v17 = (char *)v15;
  if (v16 != -1) {
    swift_once();
  }
  [v17 setBackgroundColor:qword_100812C30];

  sub_1005D4018();
  if (qword_1007F7C98 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_10083E990;
  uint64_t v19 = unk_10083E998;
  uint64_t v20 = *(void *)&v17[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_outerCornerRadius];
  uint64_t v21 = *(void *)&v17[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_outerCornerRadius + 8];
  id v22 = [v17 layer];
  long long v25 = v24;
  uint64_t v26 = v18;
  uint64_t v27 = v19;
  uint64_t v28 = v20;
  uint64_t v29 = v21;
  uint64_t v30 = v20;
  uint64_t v31 = v21;
  [v22 setCornerRadii:&v25];

  return v17;
}

id sub_1005D3AA0()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for CanvasPhotosMemoriesBanner();
  v10.receiver = v0;
  v10.super_class = v4;
  [super layoutSubviews];
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIconImageNeedsUpdate) == 1)
  {
    *((unsigned char *)v0 + OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIconImageNeedsUpdate) = 0;
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v7;
    swift_release();
    sub_100328C78((uint64_t)v3, (uint64_t)&unk_100812C98, (uint64_t)v9);
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_1005D3C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_1005D3CB0, v6, v5);
}

uint64_t sub_1005D3CB0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = (void *)Strong,
        unint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIcon),
        *(void *)(v0 + 80) = v3,
        id v4 = v3,
        v2,
        v3))
  {
    if (qword_1007F6D18 != -1) {
      swift_once();
    }
    uint64_t v8 = (uint64_t (*)(void))((char *)&dword_100806810 + dword_100806810);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1005D3E1C;
    return v8();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1005D3E1C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_1005D3F44, v4, v3);
}

uint64_t sub_1005D3F44()
{
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 80);
  swift_release();
  [v2 setImage:v1];

  **(unsigned char **)(v0 + 40) = 0;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1005D4018()
{
  id v1 = [objc_allocWithZone((Class)UIImageView) init];
  [v1 setContentMode:1];
  [v1 _setCornerRadius:4.0];
  uint64_t v2 = self;
  id v3 = [v2 labelColor];
  [v1 setTintColor:v3];

  [v0 addSubview:v1];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v1 widthAnchor];
  id v5 = [v4 constraintEqualToConstant:20.0];

  [v5 setActive:1];
  id v6 = [v1 superview];
  if (v6)
  {
    uint64_t v7 = v6;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v8 = [v1 centerYAnchor];
    id v9 = [v7 centerYAnchor];
    id v10 = [v8 constraintEqualToAnchor:v9];

    [v10 setConstant:0.0];
    id v11 = v10;
    [v11 setActive:1];
  }
  id v12 = [v1 superview];
  if (v12)
  {
    id v13 = v12;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v14 = [v1 leadingAnchor];
    id v15 = [v13 leadingAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15];

    [v16 setConstant:6.0];
    id v17 = v16;
    [v17 setActive:1];
  }
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIcon];
  *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIcon] = v1;
  id v19 = v1;

  v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIconImageNeedsUpdate] = 1;
  id v20 = [objc_allocWithZone((Class)UILabel) init];
  id v38 = v20;
  if (qword_1007F72A0 != -1)
  {
    swift_once();
    id v20 = v38;
  }
  [v20 setFont:qword_10083D868];
  id v21 = [v2 labelColor];
  [v38 setTextColor:v21];

  if (qword_1007F78A0 != -1) {
    swift_once();
  }
  NSString v22 = String._bridgeToObjectiveC()();
  [v38 setText:v22];

  [v38 setNumberOfLines:0];
  [v0 addSubview:v38];
  [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v23 = [v38 leadingAnchor];
  id v24 = [v19 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  [v25 setConstant:6.0];
  [v25 setActive:1];

  id v26 = [v38 superview];
  if (v26)
  {
    uint64_t v27 = v26;
    [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v38 topAnchor];
    id v29 = [v27 topAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    [v30 setConstant:6.0];
    id v31 = v30;
    [v31 setActive:1];
  }
  id v32 = [v38 superview];
  if (v32)
  {
    unint64_t v33 = v32;
    [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v34 = [v38 trailingAnchor];
    id v35 = [v33 trailingAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    [v36 setConstant:0.0];
    id v37 = v36;
    [v37 setActive:1];

    id v19 = v37;
    id v38 = v33;
  }
}

void sub_1005D4674()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_xPlatterView;
  if (!*(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_xPlatterView])
  {
    type metadata accessor for CanvasAssetDeleteView();
    id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v3 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v2;

    id v4 = *(void **)&v0[v1];
    if (v4)
    {
      id v5 = v4;
      [v0 addSubview:v5];
      if (qword_1007F70D8 != -1) {
        swift_once();
      }
      double v6 = *(double *)&xmmword_10083D680;
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v7 = [v5 widthAnchor];
      id v8 = [v7 constraintEqualToConstant:v6];

      [v8 setActive:1];
      double v9 = *((double *)&xmmword_10083D680 + 1);
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v10 = [v5 heightAnchor];
      id v11 = [v10 constraintEqualToConstant:v9];

      [v11 setActive:1];
      id v12 = [v5 superview];
      id v13 = &selRef_drawMapRect_zoomScale_inContext_;
      if (v12)
      {
        id v14 = v12;
        [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v15 = [v5 topAnchor];
        id v16 = [v14 topAnchor];
        id v17 = [v15 constraintEqualToAnchor:v16];

        id v13 = &selRef_drawMapRect_zoomScale_inContext_;
        [v17 setConstant:0.0];
        id v18 = v17;
        [v18 setActive:1];
      }
      id v19 = [v5 superview];
      if (v19)
      {
        id v20 = v19;
        [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v21 = v13;
        id v22 = [v5 trailingAnchor];
        id v23 = [v20 trailingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        [v24 v21[86] 0.0];
        id v25 = v24;
        [v25 setActive:1];
      }
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v27 = (uint64_t (**)())&v5[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_tapCompletion];
      *uint64_t v27 = sub_1005D4B98;
      v27[1] = (uint64_t (*)())v26;

      swift_release();
    }
  }
}

uint64_t sub_1005D4A28()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = *(void (**)(void))(result + OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_deleteBanner);
    swift_retain();

    v2();
    return swift_release();
  }
  return result;
}

id sub_1005D4AA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasPhotosMemoriesBanner();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasPhotosMemoriesBanner()
{
  return self;
}

uint64_t sub_1005D4B60()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005D4B98()
{
  return sub_1005D4A28();
}

uint64_t sub_1005D4BA0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005D4BE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1005D3C18(a1, v4, v5, v6);
}

void sub_1005D4C94()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_xPlatterView] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_deleteBanner];
  void *v1 = AudioRecordingActivityState.hash(into:);
  v1[1] = 0;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_outerCornerRadius] = _Q0;
  v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_isEditing] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIcon] = 0;
  v0[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_bannerIconImageNeedsUpdate] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1005D4D58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id sub_1005D4D6C()
{
  id v1 = [objc_allocWithZone(v0) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static UIView.Invalidating.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  static UIView.Invalidating.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.setter();
  return v3;
}

uint64_t sub_1005D4EDC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_1005D4F50()
{
  return sub_1005D4F78();
}

double sub_1005D4F64()
{
  return sub_1005D4F78();
}

double sub_1005D4F78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1005D4FE4()
{
  double v1 = v0;
  id v19 = [v0 layer];
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = (void *)v2;
    swift_getKeyPath();
    swift_getKeyPath();
    static UIView.Invalidating.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v4 = v20;
    if ((unint64_t)v20 >> 62) {
      goto LABEL_18;
    }
    uint64_t v5 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      while (1)
      {
        id v22 = _swiftEmptyArrayStorage;
        sub_100095B44(0, v5 & ~(v5 >> 63), 0);
        if (v5 < 0) {
          break;
        }
        uint64_t v6 = 0;
        id v7 = v22;
        while (v5 != v6)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(v4 + 8 * v6 + 32);
          }
          uint64_t v9 = v8;
          id v10 = [v8 CGColor:v19];
          type metadata accessor for CGColor(0);
          uint64_t v21 = v11;

          *(void *)&long long v20 = v10;
          id v22 = v7;
          unint64_t v13 = *((void *)v7 + 2);
          unint64_t v12 = *((void *)v7 + 3);
          if (v13 >= v12 >> 1)
          {
            sub_100095B44(v12 > 1, v13 + 1, 1);
            id v7 = v22;
          }
          ++v6;
          *((void *)v7 + 2) = v13 + 1;
          sub_10002102C(&v20, &v7[4 * v13 + 4]);
          if (v5 == v6) {
            goto LABEL_19;
          }
        }
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v5) {
          goto LABEL_19;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_19:
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v3 setColors:isa];

      id v15 = [v1 effectiveUserInterfaceLayoutDirection];
      swift_getKeyPath();
      swift_getKeyPath();
      static UIView.Invalidating.subscript.getter();
      swift_release();
      swift_release();
      if (v15 == (id)1) {
        double v16 = 1.0 - *(double *)&v20;
      }
      else {
        double v16 = *(double *)&v20;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static UIView.Invalidating.subscript.getter();
      swift_release();
      swift_release();
      [v3 setStartPoint:v16, *((double *)&v20 + 1)];
      id v17 = [v1 effectiveUserInterfaceLayoutDirection];
      swift_getKeyPath();
      swift_getKeyPath();
      static UIView.Invalidating.subscript.getter();
      swift_release();
      swift_release();
      if (v17 == (id)1) {
        double v18 = 1.0 - *(double *)&v20;
      }
      else {
        double v18 = *(double *)&v20;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static UIView.Invalidating.subscript.getter();
      swift_release();
      swift_release();
      [v3 setEndPoint:v18, *((double *)&v20 + 1)];
    }
  }
  else
  {
  }
}

id sub_1005D5480(double a1, double a2, double a3, double a4)
{
  uint64_t v30 = sub_100010218(&qword_100812D10);
  uint64_t v9 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UIView.Invalidations.Layout();
  __chkstk_darwin(v12);
  uint64_t v13 = sub_100010218(&qword_100812D18);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = &v4[OBJC_IVAR____TtC7Journal12GradientView__colors];
  id v32 = _swiftEmptyArrayStorage;
  double v18 = v4;
  UIView.Invalidations.Layout.init()();
  sub_100010218(&qword_10080C750);
  sub_1005D5DCC();
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  id v19 = &v18[OBJC_IVAR____TtC7Journal12GradientView__startPoint];
  static UnitPoint.top.getter();
  id v32 = v20;
  uint64_t v33 = v21;
  UIView.Invalidations.Layout.init()();
  sub_1005D5EC0();
  UIView.Invalidating.init(wrappedValue:_:)();
  id v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v23 = v30;
  v22(v19, v11, v30);
  id v24 = &v18[OBJC_IVAR____TtC7Journal12GradientView__endPoint];
  static UnitPoint.bottom.getter();
  id v32 = v25;
  uint64_t v33 = v26;
  UIView.Invalidations.Layout.init()();
  UIView.Invalidating.init(wrappedValue:_:)();
  v22(v24, v11, v23);

  uint64_t v27 = (objc_class *)type metadata accessor for GradientView();
  v31.receiver = v18;
  v31.super_class = v27;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1005D57C0(void *a1)
{
  id v25 = a1;
  uint64_t v24 = sub_100010218(&qword_100812D10);
  uint64_t v2 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIView.Invalidations.Layout();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100010218(&qword_100812D18);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v1[OBJC_IVAR____TtC7Journal12GradientView__colors];
  uint64_t v27 = _swiftEmptyArrayStorage;
  uint64_t v11 = v1;
  UIView.Invalidations.Layout.init()();
  sub_100010218(&qword_10080C750);
  sub_1005D5DCC();
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal12GradientView__startPoint];
  static UnitPoint.top.getter();
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  UIView.Invalidations.Layout.init()();
  sub_1005D5EC0();
  UIView.Invalidating.init(wrappedValue:_:)();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v16 = v24;
  v15(v12, v4, v24);
  id v17 = &v11[OBJC_IVAR____TtC7Journal12GradientView__endPoint];
  static UnitPoint.bottom.getter();
  uint64_t v27 = v18;
  uint64_t v28 = v19;
  UIView.Invalidations.Layout.init()();
  UIView.Invalidating.init(wrappedValue:_:)();
  v15(v17, v4, v16);

  long long v20 = (objc_class *)type metadata accessor for GradientView();
  v26.receiver = v11;
  v26.super_class = v20;
  uint64_t v21 = v25;
  [super initWithCoder:v25];

  return v22;
}

id sub_1005D5AEC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GradientView();
  return [super dealloc];
}

uint64_t sub_1005D5C1C()
{
  return type metadata accessor for GradientView();
}

uint64_t type metadata accessor for GradientView()
{
  uint64_t result = qword_100812CE0;
  if (!qword_100812CE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005D5C70()
{
  sub_1005D5D3C();
  if (v0 <= 0x3F)
  {
    sub_1005D5E40();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1005D5D3C()
{
  if (!qword_100812CF0)
  {
    sub_100014440(&qword_10080C750);
    type metadata accessor for UIView.Invalidations.Layout();
    sub_1005D5DCC();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100812CF0);
    }
  }
}

unint64_t sub_1005D5DCC()
{
  unint64_t result = qword_100812CF8;
  if (!qword_100812CF8)
  {
    sub_100014440(&qword_10080C750);
    sub_100088B90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812CF8);
  }
  return result;
}

void sub_1005D5E40()
{
  if (!qword_100812D00)
  {
    type metadata accessor for UIView.Invalidations.Layout();
    sub_1005D5EC0();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100812D00);
    }
  }
}

unint64_t sub_1005D5EC0()
{
  unint64_t result = qword_100812D08;
  if (!qword_100812D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100812D08);
  }
  return result;
}

uint64_t sub_1005D5F14@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005D5F94(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static UIView.Invalidating.subscript.setter();
}

double sub_1005D600C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1005D6020(a1);
}

double sub_1005D6020@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_1005D609C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1005D6020(a1);
}

uint64_t sub_1005D60C4(uint64_t a1, void **a2)
{
  return sub_1005D60D8(a1, a2);
}

uint64_t sub_1005D60D8(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_1005D614C(uint64_t a1, void **a2)
{
  return sub_1005D60D8(a1, a2);
}

double sub_1005D6174@<D0>(_OWORD *a1@<X8>)
{
  return sub_1005D6020(a1);
}

uint64_t sub_1005D619C(uint64_t a1, void **a2)
{
  return sub_1005D60D8(a1, a2);
}

void sub_1005D62EC()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for NoThumbUISlider();
  [super layoutSubviews];
  id v1 = [v0 layer];
  id v2 = [v1 sublayers];

  if (!v2) {
    return;
  }
  unint64_t v3 = sub_1005D6668();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_15;
    }
    id v5 = *(id *)(v4 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = [v6 sublayers];

  if (!v7) {
    return;
  }
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2) {
      goto LABEL_12;
    }
    goto LABEL_16;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9 < 2) {
    goto LABEL_12;
  }
LABEL_16:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return;
    }
    id v10 = *(id *)(v3 + 40);
  }
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  [v11 bounds];
  [v11 setCornerRadius:CGRectGetHeight(v13) * 0.5];
}

id sub_1005D6610()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoThumbUISlider();
  [super dealloc];
}

uint64_t type metadata accessor for NoThumbUISlider()
{
  return self;
}

unint64_t sub_1005D6668()
{
  unint64_t result = qword_100812D48;
  if (!qword_100812D48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100812D48);
  }
  return result;
}

void sub_1005D66A8(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController);
  *(void *)(a1 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController) = a2;
  id v4 = a2;

  id v5 = [v4 presentationController];
  if (v5)
  {
    id v6 = v5;
    [v5 setDelegate:a1];
  }
}

void sub_1005D674C(char a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController);
  if (v2)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v5 = (void *)Strong;
      id v6 = v2;
      id v7 = sub_100584E48();

      if (!v7) {
        sub_100447084(2u);
      }
    }
    else
    {
      id v8 = v2;
    }
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(unsigned char *)(v10 + 24) = 0;
    v12[4] = sub_1005D749C;
    v12[5] = v10;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10017D530;
    v12[3] = &unk_1007B78C0;
    uint64_t v11 = _Block_copy(v12);
    swift_release();
    [v2 dismissViewControllerAnimated:a1 & 1 completion:v11];
    _Block_release(v11);
  }
}

void sub_1005D68BC(char a1, char a2)
{
  unint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController);
  if (v3)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v7 = (void *)Strong;
      id v8 = v3;
      uint64_t v9 = sub_100584E48();

      if (!v9) {
        sub_100447084(2u);
      }
    }
    else
    {
      id v10 = v3;
    }
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(unsigned char *)(v12 + 24) = a1 & 1;
    v14[4] = sub_1005D6E74;
    v14[5] = v12;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10017D530;
    void v14[3] = &unk_1007B7870;
    CGRect v13 = _Block_copy(v14);
    swift_release();
    [v3 dismissViewControllerAnimated:a2 & 1 completion:v13];
    _Block_release(v13);
  }
}

void sub_1005D6A34(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for Notification();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = *(void **)&Strong[OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController];
    *(void *)&Strong[OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController] = 0;
  }
  id v9 = [self defaultCenter];
  if (qword_1007F6E98 != -1) {
    swift_once();
  }
  long long v21 = 0u;
  long long v22 = 0u;
  id v10 = (id)qword_10083D420;
  Notification.init(name:object:userInfo:)();
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  [v9 postNotification:isa];

  swift_beginAccess();
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    CGRect v13 = (void *)v12;
    uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v14)
    {
      sub_100447390();
    }
  }
  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    swift_unknownObjectWeakAssign();
  }
  if (a2)
  {
    swift_beginAccess();
    uint64_t v17 = swift_unknownObjectWeakLoadStrong();
    if (v17)
    {
      double v18 = (void *)v17;
      uint64_t v19 = *(void (**)(void))(v17 + OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_onDelete);
      swift_retain();

      v19();
      swift_release();
    }
  }
}

id sub_1005D6D4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenAssetControllerCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenAssetControllerCoordinator()
{
  return self;
}

uint64_t sub_1005D6E04()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005D6E3C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005D6E74()
{
  sub_1005D6A34(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1005D6E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005D6E90()
{
  return swift_release();
}

void sub_1005D6E98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v4[OBJC_IVAR____TtC7Journal36FullScreenAssetControllerCoordinator_presentedController]) {
    sub_1005D674C(1);
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a3, v10, v12);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  swift_bridgeObjectRetain();
  if (sub_10018B5BC()) {
    char v16 = 1;
  }
  else {
    char v16 = *(unsigned char *)(a2 + 16);
  }
  id v17 = objc_allocWithZone((Class)type metadata accessor for FullScreenCollectionViewController());
  double v18 = sub_1002E6F0C((uint64_t)v14, v15, v16);
  *(void *)&v18[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_delegate + 8] = &off_1007B7810;
  swift_unknownObjectWeakAssign();
  uint64_t v19 = OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry;
  *(void *)&v18[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry] = a2;
  swift_retain();
  swift_release();
  uint64_t v20 = *(void *)&v18[v19];
  if (v20) {
    v18[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave] = (*(unsigned char *)(v20 + 16) & 1) == 0;
  }
  id v21 = [objc_allocWithZone((Class)type metadata accessor for JurassicNavigationController()) initWithRootViewController:v18];
  if (a4)
  {
    swift_unknownObjectRetain();
    [v21 setModalPresentationStyle:5];
    [v21 setModalPresentationCapturesStatusBarAppearance:1];
    [v21 setTransitioningDelegate:a4];
    swift_unknownObjectRelease();
  }
  id v22 = [v21 sheetPresentationController];
  if (v22)
  {
    uint64_t v23 = v22;
    [v22 _setWantsFullScreen:1];
    [v23 _setAllowsInteractiveDismissWhenFullScreen:1];
  }
  id v24 = [v21 view];
  if (v24)
  {
    id v25 = v24;
    id v26 = [self effectWithStyle:9];
    id v27 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v26];
    uint64_t v28 = self;
    id v29 = v27;
    id v30 = [v28 clearColor];
    [v29 setBackgroundColor:v30];

    id v31 = v29;
    [v25 bounds];
    [v31 setFrame:];

    [v31 setAutoresizingMask:18];
    [v31 setUserInteractionEnabled:0];
    [v25 insertSubview:v31 atIndex:0];

    id v32 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
    [v32 configureWithTransparentBackground];
    id v33 = [v21 navigationBar];
    [v33 setScrollEdgeAppearance:v32];

    id v34 = [v21 navigationBar];
    [v34 setCompactAppearance:v32];

    id v35 = [v21 navigationBar];
    [v35 setStandardAppearance:v32];

    if (qword_1007F6C18 != -1) {
      swift_once();
    }
    sub_100242018(0, 1);
    id v36 = a1;
    id v37 = [v36 presentedViewController];
    if (v37)
    {
      do
      {
        id v38 = v37;

        id v37 = [v38 presentedViewController];
        id v36 = v38;
      }
      while (v37);
    }
    else
    {
      id v38 = v36;
    }
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v5;
    *(void *)(v39 + 24) = v21;
    aBlock[4] = sub_1005D7494;
    aBlock[5] = v39;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007B7910;
    id v40 = _Block_copy(aBlock);
    id v41 = v5;
    id v42 = v21;
    swift_release();
    [v38 presentViewController:v42 animated:1 completion:v40];
    _Block_release(v40);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005D7454()
{
  return swift_deallocObject();
}

void sub_1005D7494()
{
  sub_1005D66A8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005D74B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10001457C(a1, &qword_1007FA1D0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1005D763C()
{
  uint64_t v1 = (unint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry)
                          + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        JUMPOUT(0x1005D7F04);
      }
      for (uint64_t i = 0; i != v3; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v2 + 8 * i + 32);
        }
        uint64_t v6 = v5;
        uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_type;
        switch(*((unsigned char *)v5 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type))
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x10:
          case 0x11:
          case 0x12:
          case 0x13:
          case 0x14:
            char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v8)
            {
LABEL_5:
            }
            else
            {
              switch(*((unsigned char *)v6 + v7))
              {
                case 1:
                  goto LABEL_13;
                default:
                  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v9) {
                    goto LABEL_5;
                  }
                  switch(*((unsigned char *)v6 + v7))
                  {
                    case 2:
                      goto LABEL_13;
                    default:
                      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v10) {
                        goto LABEL_5;
                      }
                      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized ContiguousArray._endMutation()();
                      break;
                  }
                  break;
              }
            }
            break;
          default:
LABEL_13:

            swift_bridgeObjectRelease();
            break;
        }
      }
      swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_25;
      }
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_24;
  }
LABEL_22:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v11 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_24:
  swift_release();
  return v11;
}

uint64_t sub_1005D8000()
{
  uint64_t v82 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v82);
  double v81 = (uint64_t *)((char *)&v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_100010218(&qword_1007F9E10);
  uint64_t v92 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  unint64_t v93 = (void (***)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v86);
  double v85 = (uint64_t *)((char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = sub_100010218((uint64_t *)&unk_100804090);
  uint64_t v4 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  NSString v95 = (void (***)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v89);
  id v88 = (uint64_t *)((char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v87 = sub_100010218((uint64_t *)&unk_100804080);
  uint64_t v7 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  char v9 = (uint64_t *)((char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v10 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry)
                  + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  uint64_t v11 = *v10;
  if ((unint64_t)*v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_55:
    uint64_t v15 = (char *)_swiftEmptyArrayStorage;
LABEL_56:
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_55;
  }
LABEL_3:
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    unint64_t v94 = v11 & 0xC000000000000001;
    double v83 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    double v79 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v15 = (char *)_swiftEmptyArrayStorage;
    id v78 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56);
    long long v90 = xmmword_1006D6A80;
    uint64_t v91 = v12;
    uint64_t v92 = v11;
    while (1)
    {
      if (v94) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v11 + 8 * v14 + 32);
      }
      double v18 = v17;
      _s10PhotoAssetCMa(0);
      uint64_t v19 = swift_dynamicCastClass();
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
        if (*(void *)(v19 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
        {
          id v22 = v18;
        }
        else
        {
          uint64_t v23 = *(void **)(v19 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
          if (v23)
          {
            id v24 = v18;
            id v25 = [v23 assetMetaData];
            if (v25)
            {
              id v26 = v25;
              uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v29 = v28;

              id v30 = v88;
              *id v88 = v27;
              v30[1] = v29;
              uint64_t v12 = v91;
              swift_storeEnumTagMultiPayload();
              sub_100010218((uint64_t *)&unk_10080F2E0);
              uint64_t v31 = swift_allocObject();
              (*v83)(v31 + *(void *)(*(void *)v31 + 104), 1, 1, v87);
              *(_OWORD *)(v31 + *(void *)(*(void *)v31 + 112)) = v90;
              uint64_t v32 = (uint64_t)v30;
              uint64_t v11 = v92;
              sub_10002C4EC(v32, v31 + *(void *)(*(void *)v31 + 120), (uint64_t *)&unk_10080F2C0);
              *(void *)(v20 + v21) = v31;
              swift_release();
            }
            if (!*(void *)(v20 + v21))
            {
LABEL_23:
              uint64_t v37 = _s10PhotoAssetC9PhotoDataVMa(0);
              (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 1, 1, v37);
LABEL_24:

              sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100804080);
              goto LABEL_25;
            }
          }
          else
          {
            id v36 = v18;
            if (!*(void *)(v20 + v21)) {
              goto LABEL_23;
            }
          }
        }
        swift_retain();
        sub_1000395AC((uint64_t)v9);
        swift_release();
        uint64_t v33 = _s10PhotoAssetC9PhotoDataVMa(0);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v9, 1, v33) == 1) {
          goto LABEL_24;
        }
        uint64_t v35 = *v9;
        uint64_t v34 = v9[1];
        swift_bridgeObjectRetain();
        sub_1001905C4((uint64_t)v9, _s10PhotoAssetC9PhotoDataVMa);
        if (v34) {
          goto LABEL_47;
        }
      }
LABEL_25:
      _s14LivePhotoAssetCMa(0);
      uint64_t v38 = swift_dynamicCastClass();
      if (!v38) {
        goto LABEL_38;
      }
      uint64_t v39 = v38;
      uint64_t v40 = OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
      if (*(void *)(v38 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
      {
        id v41 = v18;
LABEL_32:
        swift_retain();
        id v52 = v95;
        sub_1000398E0((uint64_t)v95);
        swift_release();
        uint64_t v53 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53) != 1)
        {
          id v54 = v95;
          uint64_t v35 = *v95;
          uint64_t v34 = v95[1];
          swift_bridgeObjectRetain();
          sub_1001905C4((uint64_t)v54, _s14LivePhotoAssetC13LivePhotoDataVMa);
          if (v34) {
            goto LABEL_47;
          }

          goto LABEL_38;
        }
        goto LABEL_37;
      }
      id v42 = *(void **)(v38 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v42)
      {
        id v43 = v18;
        id v44 = [v42 assetMetaData];
        if (v44)
        {
          id v45 = v44;
          uint64_t v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v48 = v47;

          id v49 = v85;
          *double v85 = v46;
          v49[1] = v48;
          uint64_t v12 = v91;
          swift_storeEnumTagMultiPayload();
          sub_100010218(&qword_1007F99C0);
          uint64_t v50 = swift_allocObject();
          (*v79)(v50 + *(void *)(*(void *)v50 + 104), 1, 1, v84);
          *(_OWORD *)(v50 + *(void *)(*(void *)v50 + 112)) = v90;
          uint64_t v51 = (uint64_t)v49;
          uint64_t v11 = v92;
          sub_10002C4EC(v51, v50 + *(void *)(*(void *)v50 + 120), (uint64_t *)&unk_10080F2B0);
          *(void *)(v39 + v40) = v50;
          swift_release();
        }
        if (*(void *)(v39 + v40)) {
          goto LABEL_32;
        }
      }
      else
      {
        id v55 = v18;
        if (*(void *)(v39 + v40)) {
          goto LABEL_32;
        }
      }
      uint64_t v56 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v95, 1, 1, v56);
LABEL_37:

      sub_10001457C((uint64_t)v95, (uint64_t *)&unk_100804090);
LABEL_38:
      _s10VideoAssetCMa(0);
      uint64_t v57 = swift_dynamicCastClass();
      if (!v57) {
        goto LABEL_7;
      }
      uint64_t v58 = v57;
      uint64_t v59 = OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
      if (*(void *)(v57 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
      {
        id v60 = v18;
      }
      else
      {
        uint64_t v61 = *(void **)(v57 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
        if (v61)
        {
          id v62 = v18;
          id v63 = [v61 assetMetaData];
          if (v63)
          {
            id v64 = v63;
            uint64_t v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v67 = v66;

            id v68 = v81;
            *double v81 = v65;
            v68[1] = v67;
            uint64_t v12 = v91;
            swift_storeEnumTagMultiPayload();
            sub_100010218((uint64_t *)&unk_10080F2D0);
            uint64_t v69 = swift_allocObject();
            (*v78)(v69 + *(void *)(*(void *)v69 + 104), 1, 1, v80);
            *(_OWORD *)(v69 + *(void *)(*(void *)v69 + 112)) = v90;
            uint64_t v70 = (uint64_t)v68;
            uint64_t v11 = v92;
            sub_10002C4EC(v70, v69 + *(void *)(*(void *)v69 + 120), (uint64_t *)&unk_10080F2A0);
            *(void *)(v58 + v59) = v69;
            swift_release();
          }
          if (!*(void *)(v58 + v59))
          {
LABEL_52:
            uint64_t v77 = _s10VideoAssetC9VideoDataVMa(0);
            (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v93, 1, 1, v77);
LABEL_53:

            sub_10001457C((uint64_t)v93, &qword_1007F9E10);
            goto LABEL_8;
          }
        }
        else
        {
          id v76 = v18;
          if (!*(void *)(v58 + v59)) {
            goto LABEL_52;
          }
        }
      }
      swift_retain();
      id v71 = v93;
      sub_100039C14((uint64_t)v93);
      swift_release();
      uint64_t v72 = _s10VideoAssetC9VideoDataVMa(0);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v71, 1, v72) == 1) {
        goto LABEL_53;
      }
      id v73 = v93;
      uint64_t v35 = *v93;
      uint64_t v34 = v93[1];
      swift_bridgeObjectRetain();
      sub_1001905C4((uint64_t)v73, _s10VideoAssetC9VideoDataVMa);
      if (v34)
      {
LABEL_47:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_1002A54A0(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        unint64_t v75 = *((void *)v15 + 2);
        unint64_t v74 = *((void *)v15 + 3);
        if (v75 >= v74 >> 1) {
          uint64_t v15 = sub_1002A54A0((char *)(v74 > 1), v75 + 1, 1, v15);
        }
        *((void *)v15 + 2) = v75 + 1;
        char v16 = &v15[16 * v75];
        *((void *)v16 + 4) = v35;
        *((void *)v16 + 5) = v34;
      }

LABEL_7:
LABEL_8:
      if (v12 == ++v14) {
        goto LABEL_56;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_1005D8B0C(uint64_t a1, uint64_t a2)
{
}

void sub_1005D8B14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  id v156 = (char *)v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  v169 = (char *)v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v168 = (char *)v155 - v9;
  __chkstk_darwin(v10);
  uint64_t v174 = (char *)v155 - v11;
  if (sub_100542088(9, a1))
  {
    NSManagedObjectContext.performAndWait<A>(_:)();
    if (LOBYTE(v187[0]) == 1)
    {
      sub_100443DC8();
      return;
    }
  }
  v155[1] = 0;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v180 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v171 = OBJC_IVAR____TtC7Journal20CanvasViewController_overflowBarButtonItem;
  uint64_t v177 = OBJC_IVAR____TtC7Journal20CanvasViewController_textView;
  uint64_t v167 = OBJC_IVAR____TtC7Journal20CanvasViewController_assetsGridView;
  uint64_t v179 = OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry;
  uint64_t v159 = OBJC_IVAR____TtC7Journal20CanvasViewController_slimAssetViewHeightConstraint;
  uint64_t v158 = OBJC_IVAR____TtC7Journal20CanvasViewController_slimAssetView;
  uint64_t v176 = OBJC_IVAR____TtC7Journal20CanvasViewController_gridStackView;
  NSString v166 = &v1[OBJC_IVAR____TtC7Journal20CanvasViewController_titleDate];
  uint64_t v173 = OBJC_IVAR____TtC7Journal20CanvasViewController_bundleTitleView;
  uint64_t v172 = OBJC_IVAR____TtC7Journal20CanvasViewController_titleDividerView;
  int64_t v181 = (unint64_t)(v13 + 63) >> 6;
  id v165 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  id v164 = (void (**)(uint64_t, char *, uint64_t))(v6 + 40);
  UIContentSizeCategory v163 = UIContentSizeCategoryLarge;
  uint64_t v162 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v182 = 0;
  v155[2] = (char *)&type metadata for () + 8;
  uint64_t v175 = v1;
  uint64_t v178 = a1;
  while (2)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v182 << 6);
LABEL_21:
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v17))
      {
        case 1:
          sub_100451060();
          sub_100224F38();
          unint64_t v188 = (unint64_t)&type metadata for JournalFeatureFlags;
          unint64_t v189 = sub_10005F364();
          LOBYTE(v187[0]) = 6;
          char v51 = isFeatureEnabled(_:)();
          _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v187);
          if ((v51 & 1) == 0)
          {
            id v52 = *(void **)&v2[v171];
            if (v52)
            {
              id v53 = v52;
              Class isa = sub_100449F38().super.super.isa;
              [v53 setMenu:isa];
            }
            sub_100450A18();
          }
          continue;
        case 2:
        case 0xA:
          uint64_t v21 = *(char **)&v2[v173];
          uint64_t v22 = *(void *)&v2[v179];
          uint64_t v23 = (unsigned char *)(v22 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle);
          [v21 setHidden:(*(unsigned char *)(v22 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) & 1) == 0];
          [*(id *)&v2[v172] setHidden:(*v23 & 1) == 0];
          id v24 = *(char **)&v2[v177];
          uint64_t v25 = OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry;
          *(void *)&v24[OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry] = v22;
          swift_retain();
          swift_release();
          sub_1005A8E08();
          uint64_t v26 = *(void *)&v24[v25];
          if (v26 && (uint64_t v27 = *(void **)(v26 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts)) != 0)
          {
            id v28 = v27;
            id v29 = [v28 string];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v30 = objc_allocWithZone((Class)NSAttributedString);
            unint64_t v31 = v15;
            NSString v32 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v33 = [v30 initWithString:v32 attributes:0];

            unint64_t v15 = v31;
            uint64_t v2 = v175;
            [v24 setAttributedPlaceholder:v33];
          }
          else
          {
            if (qword_1007F76B8 != -1) {
              swift_once();
            }
            id v34 = objc_allocWithZone((Class)NSAttributedString);
            swift_bridgeObjectRetain();
            NSString v35 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v33 = [v34 initWithString:v35 attributes:0];

            [v24 setAttributedPlaceholder:v33];
          }

          uint64_t v36 = *(void *)&v24[v25];
          if (v36 && (uint64_t v37 = *(void **)(v36 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts)) != 0)
          {
            id v38 = v37;
            id v39 = [v38 string];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v40 = objc_allocWithZone((Class)NSAttributedString);
            unint64_t v41 = v15;
            NSString v42 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v43 = [v40 initWithString:v42 attributes:0];

            unint64_t v15 = v41;
            uint64_t v2 = v175;
            [v24 setAttributedPlaceholder:v43];

            a1 = v178;
          }
          else
          {
            a1 = v178;
            if (qword_1007F76B8 != -1) {
              swift_once();
            }
            id v44 = objc_allocWithZone((Class)NSAttributedString);
            swift_bridgeObjectRetain();
            NSString v45 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v43 = [v44 initWithString:v45 attributes:0];

            [v24 setAttributedPlaceholder:v43];
          }

          uint64_t v46 = OBJC_IVAR____TtC7Journal22CanvasMomentsTitleView_journalEntry;
          *(void *)&v21[OBJC_IVAR____TtC7Journal22CanvasMomentsTitleView_journalEntry] = v22;
          swift_retain_n();
          swift_release();
          uint64_t v47 = *(void *)&v21[v46];
          if (v47 && (uint64_t v48 = *(void **)(v47 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title)) != 0)
          {
            id v49 = [v48 string];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            NSString v50 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v50 = String._bridgeToObjectiveC()();
          }
          [v21 setText:v50];
          swift_release();

          sub_10044DEB8();
          sub_100399AA4(*(unsigned char *)(v22 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner));
          continue;
        case 3:
          uint64_t v55 = *(void *)&v2[v179] + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
          swift_beginAccess();
          uint64_t v56 = *v165;
          uint64_t v57 = v174;
          uint64_t v58 = v170;
          (*v165)(v174, v55, v170);
          uint64_t v59 = v2;
          id v60 = v168;
          v56(v168, (uint64_t)v57, v58);
          uint64_t v61 = (uint64_t)v166;
          swift_beginAccess();
          (*v164)(v61, v60, v58);
          swift_endAccess();
          id v62 = [v59 traitCollection];
          id v63 = [v62 preferredContentSizeCategory];

          LOBYTE(v62) = static UIContentSizeCategory.> infix(_:_:)();
          id v64 = [v59 navigationItem];
          v56(v60, v61, v58);
          uint64_t v65 = (uint64_t)v169;
          static Date.now.getter();
          sub_1002AB594(2, v62 & 1, v65);
          uint64_t v66 = *v162;
          (*v162)(v65, v58);
          uint64_t v67 = v60;
          uint64_t v2 = v59;
          v66((uint64_t)v67, v58);
          NSString v68 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v64 setTitle:v68];

          v66((uint64_t)v174, v58);
          a1 = v178;
          goto LABEL_48;
        case 4:
          id v73 = *(char **)&v2[v176];
          uint64_t v74 = *(void *)&v2[v179];
          uint64_t v75 = OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry;
          *(void *)&v73[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry] = v74;
          swift_retain_n();
          swift_release();
          uint64_t v76 = *(void *)&v73[v75];
          if (!v76)
          {
            swift_release();
            goto LABEL_81;
          }
          uint64_t v160 = v74;
          uint64_t v77 = OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinuteCanvasTipTask;
          uint64_t v78 = *(void *)&v73[OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinuteCanvasTipTask];
          unint64_t v161 = v15;
          swift_retain();
          if (v78)
          {
            swift_retain();
            sub_100010218((uint64_t *)&unk_1007FC0D0);
            Task.cancel()();
            swift_release();
          }
          uint64_t v87 = (uint64_t)v156;
          uint64_t v88 = type metadata accessor for TaskPriority();
          uint64_t v89 = *(void *)(v88 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v87, 1, 1, v88);
          type metadata accessor for MainActor();
          long long v90 = v73;
          uint64_t v91 = static MainActor.shared.getter();
          uint64_t v92 = (void *)swift_allocObject();
          v92[2] = v91;
          v92[3] = &protocol witness table for MainActor;
          v92[4] = v90;
          uint64_t v157 = v90;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88) == 1)
          {
            sub_10001457C(v87, &qword_1007FA1D0);
            if (!v92[2]) {
              goto LABEL_68;
            }
          }
          else
          {
            TaskPriority.rawValue.getter();
            (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
            if (!v92[2]) {
              goto LABEL_68;
            }
          }
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v93 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v95 = v94;
          swift_unknownObjectRelease();
          if (v95 | v93)
          {
            uint64_t v183 = 0;
            uint64_t v184 = 0;
            uint64_t v185 = v93;
            uint64_t v186 = v95;
          }
LABEL_68:
          *(void *)&v73[v77] = swift_task_create();
          swift_release();
          if (*(unsigned char *)(v76 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) == 1) {
            sub_100399AA4(1);
          }
          uint64_t v96 = (unint64_t *)(v76 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
          swift_beginAccess();
          unint64_t v97 = *v96;
          if (v97 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
            if (!v98)
            {
LABEL_79:
              swift_bridgeObjectRelease_n();
              swift_release();
              swift_release();
              uint64_t v2 = v175;
              a1 = v178;
              goto LABEL_80;
            }
          }
          else
          {
            uint64_t v98 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (!v98) {
              goto LABEL_79;
            }
          }
          _s15ReflectionAssetCMa();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          uint64_t v100 = 4;
          while (2)
          {
            if ((v97 & 0xC000000000000001) != 0) {
              id v101 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v101 = *(id *)(v97 + 8 * v100);
            }
            id v102 = v101;
            uint64_t v103 = v100 - 3;
            if (__OFADD__(v100 - 4, 1))
            {
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
              JUMPOUT(0x1005DA280);
            }
            if (![v101 isKindOfClass:ObjCClassFromMetadata])
            {

              ++v100;
              if (v103 == v98) {
                goto LABEL_79;
              }
              continue;
            }
            break;
          }
          swift_bridgeObjectRelease_n();
          uint64_t v104 = swift_dynamicCastClass();
          a1 = v178;
          if (!v104)
          {
            swift_release();
            swift_release();

            goto LABEL_88;
          }
          sub_1003F2ABC(v187);
          unint64_t v105 = v188;
          if (v188 >> 60 == 11)
          {
            id v106 = objc_allocWithZone((Class)NSAttributedString);
            NSString v107 = String._bridgeToObjectiveC()();
            id v108 = [v106 initWithString:v107];

            goto LABEL_138;
          }
          uint64_t v109 = v187[0];
          uint64_t v110 = v187[1];
          uint64_t v111 = v187[2];
          sub_10033AA50();
          if (v105 >> 60 == 15)
          {

            sub_100040F54(v109, v110, v111, v105);
            swift_release();
            swift_release();
LABEL_88:
            uint64_t v2 = v175;
LABEL_80:
            unint64_t v15 = v161;
          }
          else
          {
            sub_100040F10(v111, v105);
            uint64_t v140 = v111;
            id v108 = sub_100041F24(v111, v105);

            sub_100040F54(v109, v110, v140, v105);
            sub_100040F54(v109, v110, v140, v105);
LABEL_138:
            id v141 = v175;
            unint64_t v15 = v161;
            if (v108)
            {

              sub_100399628();
            }
            swift_release();
            swift_release();
            uint64_t v2 = v141;
          }
LABEL_81:
          sub_100399628();
          sub_10044DEB8();
          continue;
        case 5:
          sub_10037E174();
          sub_10037E484(0);
          sub_10045157C();
          double v79 = (unint64_t *)(*(void *)&v2[v179]
                                   + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
          swift_beginAccess();
          unint64_t v80 = *v79;
          if (*v79 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
            if (!v81) {
              goto LABEL_93;
            }
          }
          else
          {
            uint64_t v81 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (!v81) {
              goto LABEL_93;
            }
          }
          unint64_t v82 = v80 & 0xC000000000000001;
          if ((v80 & 0xC000000000000001) != 0) {
            double v83 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            double v83 = *(id *)(v80 + 32);
          }
          uint64_t v84 = v83;
          char v85 = (*(uint64_t (**)(void))((swift_isaMask & *v83) + 0x200))();

          if (v85) {
            goto LABEL_91;
          }
          if (v81 != 1)
          {
            if (v82) {
              uint64_t v86 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v86 = *(id *)(v80 + 40);
            }
            id v112 = v86;
            char v113 = (*(uint64_t (**)(void))((swift_isaMask & *v86) + 0x200))();

            if (v113)
            {
LABEL_91:
              char v114 = 1;
              goto LABEL_94;
            }
            if (v81 != 2)
            {
              uint64_t v134 = 6;
              while (1)
              {
                uint64_t v135 = v2;
                if (v82) {
                  uint64_t v136 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  uint64_t v136 = *(id *)(v80 + 8 * v134);
                }
                char v137 = v136;
                uint64_t v138 = v134 - 3;
                if (__OFADD__(v134 - 4, 1)) {
                  goto LABEL_170;
                }
                char v114 = (*(uint64_t (**)(void))((swift_isaMask & *v136) + 0x200))();

                if (v114) {
                  break;
                }
                ++v134;
                BOOL v139 = v138 == v81;
                uint64_t v2 = v135;
                if (v139) {
                  goto LABEL_94;
                }
              }
              uint64_t v2 = v135;
LABEL_94:
              swift_bridgeObjectRelease_n();
              NSAttributedStringKey v115 = *(void **)&v2[v159];
              if (v115)
              {
                if (v114)
                {
                  uint64_t v116 = qword_1007F7448;
                  id v117 = v115;
                  if (v116 != -1) {
                    swift_once();
                  }
                  double v118 = *(double *)&qword_10083DA58;
                }
                else
                {
                  id v119 = v115;
                  double v118 = 0.0;
                }
                [v115 setConstant:v118];
              }
              id v120 = *(char **)&v2[v158];
              unint64_t v121 = *v79;
              if (v121 >> 62)
              {
                swift_bridgeObjectRetain_n();
                uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
                if (v122)
                {
LABEL_103:
                  unint64_t v123 = v121 & 0xC000000000000001;
                  if ((v121 & 0xC000000000000001) != 0) {
                    char v124 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    char v124 = *(id *)(v121 + 32);
                  }
                  Swift::String v125 = v124;
                  uint64_t v126 = v2;
                  if ((*(uint64_t (**)(void))((swift_isaMask & *v124) + 0x200))()) {
                    goto LABEL_111;
                  }

                  if (v122 != 1)
                  {
                    if (v123) {
                      uint64_t v127 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      uint64_t v127 = *(id *)(v121 + 40);
                    }
                    Swift::String v125 = v127;
                    if ((*(uint64_t (**)(void))((swift_isaMask & *v127) + 0x200))())
                    {
LABEL_111:
                      swift_bridgeObjectRelease_n();
                      swift_getObjectType();
                      uint64_t v128 = swift_conformsToProtocol2();
                      if (v128) {
                        uint64_t v129 = v128;
                      }
                      else {
                        uint64_t v129 = 0;
                      }
                      if (v128) {
                        Swift::String v130 = v125;
                      }
                      else {
                        Swift::String v130 = 0;
                      }
                      if (v130)
                      {
LABEL_148:
                        Swift::String v142 = &v120[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
                        uint64_t v144 = *(void **)&v120[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
                        uint64_t v143 = *(void *)&v120[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8];
                        *(void *)Swift::String v142 = v130;
                        *((void *)v142 + 1) = v129;
                        id v145 = v130;
                        if (v144)
                        {
                          uint64_t ObjectType = swift_getObjectType();
                          uint64_t v147 = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 80))(ObjectType, v143);
                          v148 = (void *)v147;
                          if (!*(void *)v142)
                          {
                            if (!v147) {
                              goto LABEL_162;
                            }
LABEL_158:
                            NSString v152 = v148;
LABEL_160:

LABEL_161:
                            sub_1005CC620();
                            goto LABEL_162;
                          }
                        }
                        else
                        {
                          if (!*(void *)v142) {
                            goto LABEL_162;
                          }
                          v148 = 0;
                        }
                        uint64_t v149 = *((void *)v142 + 1);
                        uint64_t v150 = swift_getObjectType();
                        uint64_t v151 = (*(uint64_t (**)(uint64_t, uint64_t))(v149 + 80))(v150, v149);
                        NSString v152 = (void *)v151;
                        if (v148)
                        {
                          if (v151)
                          {
                            _s5AssetCMa();
                            id v153 = v148;
                            char v154 = static NSObject.== infix(_:_:)();

                            if (v154) {
                              goto LABEL_162;
                            }
                            goto LABEL_161;
                          }
                          goto LABEL_158;
                        }
                        if (v151) {
                          goto LABEL_160;
                        }
LABEL_162:

                        [v120 setHidden:(v114 & 1) == 0];
                        [v120 setAccessibilityElementsHidden:(v114 & 1) == 0];
                        a1 = v178;
                        uint64_t v2 = v126;
                        continue;
                      }

LABEL_147:
                      Swift::String v130 = 0;
                      uint64_t v129 = 0;
                      goto LABEL_148;
                    }

                    if (v122 != 2)
                    {
                      uint64_t v131 = 6;
                      do
                      {
                        NSString v132 = v123
                             ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                             : *(id *)(v121 + 8 * v131);
                        Swift::String v125 = v132;
                        uint64_t v133 = v131 - 3;
                        if (__OFADD__(v131 - 4, 1)) {
                          goto LABEL_172;
                        }
                        if ((*(uint64_t (**)(void))((swift_isaMask & *v132) + 0x200))()) {
                          goto LABEL_111;
                        }

                        ++v131;
                      }
                      while (v133 != v122);
                    }
                  }
LABEL_146:
                  swift_bridgeObjectRelease_n();
                  goto LABEL_147;
                }
              }
              else
              {
                uint64_t v122 = *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain_n();
                if (v122) {
                  goto LABEL_103;
                }
              }
              uint64_t v126 = v2;
              goto LABEL_146;
            }
          }
LABEL_93:
          char v114 = 0;
          goto LABEL_94;
        case 7:
LABEL_48:
          unint64_t v188 = (unint64_t)&type metadata for JournalFeatureFlags;
          unint64_t v189 = sub_10005F364();
          LOBYTE(v187[0]) = 6;
          char v69 = isFeatureEnabled(_:)();
          _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v187);
          if ((v69 & 1) == 0)
          {
            uint64_t v70 = *(void **)&v2[v171];
            if (v70)
            {
              id v71 = v70;
              Class v72 = sub_100449F38().super.super.isa;
              [v71 setMenu:v72];
            }
          }
          continue;
        case 8:
        case 9:
          continue;
        default:
          sub_1005A8E08();
          continue;
      }
    }
    break;
  }
  if (__OFADD__(v182++, 1)) {
    goto LABEL_169;
  }
  if (v182 < v181)
  {
    unint64_t v19 = *(void *)(v180 + 8 * v182);
    if (!v19)
    {
      int64_t v20 = v182 + 1;
      if (v182 + 1 >= v181) {
        goto LABEL_167;
      }
      unint64_t v19 = *(void *)(v180 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v182 + 2;
        if (v182 + 2 >= v181) {
          goto LABEL_167;
        }
        unint64_t v19 = *(void *)(v180 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v182 + 3;
          if (v182 + 3 >= v181) {
            goto LABEL_167;
          }
          unint64_t v19 = *(void *)(v180 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v182 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_171;
              }
              if (v182 >= v181) {
                goto LABEL_167;
              }
              unint64_t v19 = *(void *)(v180 + 8 * v182);
              ++v20;
              if (v19) {
                goto LABEL_20;
              }
            }
          }
        }
      }
      int64_t v182 = v20;
    }
LABEL_20:
    unint64_t v15 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v182 << 6);
    goto LABEL_21;
  }
LABEL_167:
  swift_release();
  sub_100444C34();
}

uint64_t sub_1005DA2AC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005DA2EC@<X0>(char *a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (id *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v22 - v16;
  sub_100168580(v1, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v5);
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v11 = (id *)((char *)v11 + *(int *)(sub_100010218(&qword_10080B3F0) + 48));
      goto LABEL_4;
    default:
LABEL_4:
      sub_1005DE684((uint64_t)v11, (uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      sub_100168580((uint64_t)v17, (uint64_t)v14, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        unint64_t v19 = v23;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v14, v5);
      }
      else
      {
        type metadata accessor for Journaling();
        sub_1005E6B0C((uint64_t)v4);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_100052EAC((uint64_t)v4);
          uint64_t v20 = 1;
          unint64_t v19 = v23;
          goto LABEL_10;
        }
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v21(v8, v4, v5);
        unint64_t v19 = v23;
        v21(v23, v8, v5);
      }
      uint64_t v20 = 0;
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v19, v20, 1, v5);
      return sub_1005DC414((uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
  }
}

uint64_t sub_1005DA6B4()
{
  uint64_t v1 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100168580(v0 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v3, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = 0x6567616D69;
      uint64_t v5 = type metadata accessor for AssetAttachment.AssetType;
      goto LABEL_4;
    case 2u:
      sub_1005DC414((uint64_t)v3, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      uint64_t v4 = 0x6F65646976;
      break;
    case 3u:
      sub_1005DC414((uint64_t)v3, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      uint64_t v4 = 0x6F69647561;
      break;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_100010218(&qword_10080B3F0);
      sub_1005DC414((uint64_t)&v3[*(int *)(v6 + 48)], type metadata accessor for AssetAttachment.AssetType.FilePathType);
      uint64_t v4 = 0x726568746FLL;
      break;
    default:
      uint64_t v4 = 0x6567616D69;
      uint64_t v5 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_4:
      sub_1005DC414((uint64_t)v3, v5);
      break;
  }
  return v4;
}

unint64_t sub_1005DA880()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  unint64_t v22 = 0xD000000000000012;
  unint64_t v23 = 0x80000001006A7CC0;
  v21._uint64_t countAndFlagsBits = *(void *)(v0 + 16);
  v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x203A656D616E20;
  v9._object = (void *)0xE700000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = sub_1005DA6B4();
  v10._object = (void *)0xE500000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  unint64_t v11 = v22;
  sub_1005DA2EC(v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100052EAC((uint64_t)v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 0x203A6C727520;
    v21._object = (void *)0xE600000000000000;
    sub_1005DE0DC((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v13._uint64_t countAndFlagsBits = 0x3A73747369786520;
    v13._object = (void *)0xE900000000000020;
    String.append(_:)(v13);
    id v14 = [self defaultManager];
    URL.path.getter();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v16 = [v14 fileExistsAtPath:v15];

    if (v16) {
      uint64_t v17 = 1702195828;
    }
    else {
      uint64_t v17 = 0x65736C6166;
    }
    if (v16) {
      unint64_t v18 = 0xE400000000000000;
    }
    else {
      unint64_t v18 = 0xE500000000000000;
    }
    unint64_t v19 = v18;
    String.append(_:)(*(Swift::String *)&v17);
    swift_bridgeObjectRelease();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v22;
  }
  return v11;
}

uint64_t sub_1005DAC10()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100812D90);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100812D90);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005DACD8()
{
  sub_1005DC414(v0 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1005DAD64()
{
  return type metadata accessor for AssetAttachment(0);
}

uint64_t type metadata accessor for AssetAttachment(uint64_t a1)
{
  return sub_10003352C(a1, qword_100812DD0);
}

uint64_t sub_1005DAD8C()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AssetAttachment.AssetType(uint64_t a1)
{
  return sub_10003352C(a1, qword_100812ED8);
}

char *sub_1005DAE54(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        Swift::String v13 = *a2;
        *(void *)a1 = *a2;
        id v14 = v13;
        goto LABEL_18;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 4u:
        Swift::String v8 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v8;
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(sub_100010218(&qword_10080B3F0) + 48);
        Swift::String v10 = &a1[v9];
        unint64_t v11 = (char **)((char *)a2 + v9);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = type metadata accessor for URL();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        }
        else
        {
          uint64_t v15 = v11[1];
          *(void *)Swift::String v10 = *v11;
          *((void *)v10 + 1) = v15;
          swift_bridgeObjectRetain();
        }
        goto LABEL_17;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v6 = type metadata accessor for URL();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        }
        else
        {
LABEL_16:
          unsigned int v16 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v16;
          swift_bridgeObjectRetain();
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for AssetAttachment.AssetType.FilePathType(uint64_t a1)
{
  return sub_10003352C(a1, qword_100812F80);
}

void sub_1005DB1DC(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_6;
    case 1u:
      uint64_t v2 = *a1;

      break;
    case 4u:
      swift_bridgeObjectRelease();
      a1 = (void **)((char *)a1 + *(int *)(sub_100010218(&qword_10080B3F0) + 48));
LABEL_6:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v3 = type metadata accessor for URL();
        uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
        v4(a1, v3);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

void *sub_1005DB308(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = *(void **)a2;
      *a1 = *(void *)a2;
      id v5 = v4;
      goto LABEL_15;
    case 2u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_8;
    case 3u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_8;
      }
      goto LABEL_11;
    case 4u:
      uint64_t v7 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_100010218(&qword_10080B3F0) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      Swift::String v10 = (void *)(a2 + v8);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      }
      else
      {
        uint64_t v13 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v13;
        swift_bridgeObjectRetain();
      }
      goto LABEL_14;
    default:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_8:
        uint64_t v6 = type metadata accessor for URL();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      }
      else
      {
LABEL_11:
        uint64_t v12 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
      }
LABEL_14:
      swift_storeEnumTagMultiPayload();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void **sub_1005DB620(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1005DC414((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        id v10 = v9;
        goto LABEL_16;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v5 = *(int *)(sub_100010218(&qword_10080B3F0) + 48);
        uint64_t v6 = (void **)((char *)a1 + v5);
        uint64_t v7 = (void **)((char *)a2 + v5);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v8 = type metadata accessor for URL();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        }
        else
        {
          *uint64_t v6 = *v7;
          v6[1] = v7[1];
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v4 = type metadata accessor for URL();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        }
        else
        {
LABEL_12:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *sub_1005DB984(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 2u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 3u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_7:
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_11:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      goto LABEL_13;
    case 4u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_100010218(&qword_10080B3F0) + 48);
      uint64_t v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1005DBCD0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005DC414((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 2u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 3u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v7 = type metadata accessor for URL();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_12:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        goto LABEL_14;
      case 4u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(sub_100010218(&qword_10080B3F0) + 48);
        uint64_t v9 = (char *)a1 + v8;
        id v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1005DC048()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType.FilePathType(319);
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v5 = v3;
    uint64_t v6 = v3;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1005DC0F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005DC1F8(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for URL();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_1005DC288(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1005DC338(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1005DC414((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005DC414(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1005DC474(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1005DC52C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005DC414((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005DC608()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005DC69C(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v104 - v10;
  __chkstk_darwin(v12);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath);
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath + 8)) {
    return v19;
  }
  unint64_t v105 = v14;
  id v106 = v18;
  id v108 = (char *)&v104 - v15;
  uint64_t v109 = v17;
  uint64_t v111 = v13;
  uint64_t v112 = v16;
  uint64_t v20 = self;
  swift_bridgeObjectRetain();
  id v107 = v20;
  id v21 = [v20 defaultManager];
  URL.path.getter();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v20) = [v21 fileExistsAtPath:v22];

  uint64_t v110 = a1;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    sub_1000352C4();
    swift_allocError();
    *id v44 = 0;
    swift_willThrow();
    uint64_t v45 = v111;
LABEL_31:
    uint64_t v94 = v112;
    uint64_t v95 = v109;
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v96 = type metadata accessor for Logger();
    sub_100026A54(v96, (uint64_t)qword_100812D90);
    (*(void (**)(uint64_t, void *, uint64_t))(v94 + 16))(v95, v110, v45);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v97 = Logger.logObject.getter();
    os_log_type_t v98 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = swift_slowAlloc();
      uint64_t v110 = (void *)swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      uint64_t v115 = v111;
      *(_DWORD *)uint64_t v99 = 136315394;
      sub_1005DE0DC((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v100 = dispatch thunk of CustomStringConvertible.description.getter();
      v114._uint64_t countAndFlagsBits = sub_10011EA98(v100, v101, &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v45);
      *(_WORD *)(v99 + 12) = 2112;
      swift_errorRetain();
      uint64_t v102 = _swift_stdlib_bridgeErrorToNSError();
      v114._uint64_t countAndFlagsBits = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v110 = v102;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "JournalEntryAssetMO error saving attachment file with source URL %s: %@", (uint8_t *)v99, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v45);
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  id v23 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v25 = [v23 initWithString:v24];

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 stringByAppendingPathComponent:v26];

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();

  uint64_t v115 = v28;
  unint64_t v116 = v30;
  uint64_t v31 = URL.pathExtension.getter();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (v34)
  {
    v114._uint64_t countAndFlagsBits = 46;
    v114._object = (void *)0xE100000000000000;
    v35._uint64_t countAndFlagsBits = URL.pathExtension.getter();
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    String.append(_:)(v114);
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = v111;
  uint64_t v37 = v112;
  type metadata accessor for Journaling();
  swift_bridgeObjectRetain();
  sub_1005E6B0C((uint64_t)v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v5, 1, v36) == 1)
  {
    sub_100052EAC((uint64_t)v5);
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_100026A54(v38, (uint64_t)qword_100812D90);
    uint64_t v40 = v115;
    unint64_t v39 = v116;
    swift_bridgeObjectRetain();
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      v114._uint64_t countAndFlagsBits = swift_slowAlloc();
      *(_DWORD *)id v43 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v113 = sub_10011EA98(v40, v39, &v114._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Error is saveAttachmentFile. Failed to create targetURL. relativePath: %s", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v108, v5, v36);
  id v46 = [v107 defaultManager];
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v47);
  id v49 = v48;
  NSString v50 = *(void (**)(char *, uint64_t))(v37 + 8);
  v50(v11, v36);
  sub_100010218(&qword_10080F9C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSFileProtectionKey;
  uint64_t v52 = qword_1007F6EF8;
  id v53 = NSFileProtectionKey;
  if (v52 != -1) {
    swift_once();
  }
  id v54 = (void *)qword_10083D470;
  type metadata accessor for URLFileProtection(0);
  *(void *)(inited + 64) = v55;
  *(void *)(inited + 40) = v54;
  id v56 = v54;
  sub_10039687C(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1005DE0DC(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v114._uint64_t countAndFlagsBits = 0;
  unsigned int v58 = [v46 createDirectoryAtURL:v49 withIntermediateDirectories:1 attributes:isa error:&v114];

  id v59 = (id)v114._countAndFlagsBits;
  if (!v58)
  {
    uint64_t v67 = v59;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    NSString v68 = v108;
LABEL_30:
    uint64_t v45 = v111;
    v50(v68, v111);
    goto LABEL_31;
  }
  id v60 = [v107 defaultManager];
  uint64_t v61 = v108;
  URL._bridgeToObjectiveC()(v62);
  id v64 = v63;
  v114._uint64_t countAndFlagsBits = 0;
  unsigned int v65 = [v60 removeItemAtURL:v63 error:&v114];

  if (v65)
  {
    id v66 = (id)v114._countAndFlagsBits;
  }
  else
  {
    id v69 = (id)v114._countAndFlagsBits;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  id v70 = [v107 defaultManager];
  URL._bridgeToObjectiveC()(v71);
  id v73 = v72;
  URL._bridgeToObjectiveC()(v74);
  uint64_t v76 = v75;
  v114._uint64_t countAndFlagsBits = 0;
  unsigned int v77 = [v70 copyItemAtURL:v73 toURL:v75 error:&v114];

  if (!v77)
  {
    id v93 = (id)v114._countAndFlagsBits;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    NSString v68 = v61;
    goto LABEL_30;
  }
  id v78 = (id)v114._countAndFlagsBits;
  sub_10036AF38();
  if (qword_1007F7E98 != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  sub_100026A54(v79, (uint64_t)qword_100812D90);
  uint64_t v80 = v111;
  uint64_t v81 = *(void (**)(uint64_t, char *, uint64_t))(v112 + 16);
  unint64_t v82 = v105;
  v81((uint64_t)v105, v61, v111);
  double v83 = v106;
  v81((uint64_t)v106, v61, v80);
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    v114._uint64_t countAndFlagsBits = v112;
    *(_DWORD *)uint64_t v86 = 136315394;
    uint64_t v110 = (void *)(v86 + 4);
    sub_1005DE0DC((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v113 = sub_10011EA98(v87, v88, &v114._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v50(v82, v80);
    *(_WORD *)(v86 + 12) = 2048;
    uint64_t v89 = sub_100464660();
    if (v90) {
      uint64_t v91 = 0;
    }
    else {
      uint64_t v91 = v89;
    }
    v50(v83, v80);
    uint64_t v113 = v91;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "JournalEntryAssetMO saved file %s with size %ld", (uint8_t *)v86, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v92 = v108;
  }
  else
  {
    v50(v83, v80);

    v50(v82, v80);
    uint64_t v92 = v61;
  }
  v50(v92, v80);
  return v115;
}

uint64_t sub_1005DD45C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5, void *a6)
{
  uint64_t v89 = a5;
  uint64_t v86 = a1;
  uint64_t v11 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v81 - v17;
  __chkstk_darwin(v19);
  uint64_t v25 = *(void *)&v6[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath];
  NSString v24 = *(void **)&v6[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath + 8];
  if (v24)
  {
    uint64_t v84 = a2;
    uint64_t v87 = v23;
    id v85 = v6;
    unint64_t v82 = v22;
    double v83 = v21;
    unint64_t v88 = (char *)&v81 - v20;
    v92._uint64_t countAndFlagsBits = 47;
    v92._object = (void *)0xE100000000000000;
    swift_bridgeObjectRetain();
    v26._uint64_t countAndFlagsBits = a3;
    v26._object = a4;
    String.append(_:)(v26);
    uint64_t countAndFlagsBits = v92._countAndFlagsBits;
    object = v92._object;
    v92._uint64_t countAndFlagsBits = v25;
    v92._object = v24;
    swift_bridgeObjectRetain();
    v29._uint64_t countAndFlagsBits = countAndFlagsBits;
    v29._object = object;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v91 = v92;
    if (a6)
    {
      v92._uint64_t countAndFlagsBits = 46;
      v92._object = (void *)0xE100000000000000;
      v30._uint64_t countAndFlagsBits = (uint64_t)v89;
      v30._object = a6;
      String.append(_:)(v30);
      String.append(_:)(v92);
      swift_bridgeObjectRelease();
    }
    uint64_t v31 = v14;
    type metadata accessor for Journaling();
    swift_bridgeObjectRetain();
    sub_1005E6B0C((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v32 = v87;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v13, 1, v14) == 1)
    {
      swift_bridgeObjectRelease();
      sub_100052EAC((uint64_t)v13);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v88, v13, v14);
    id v33 = [self defaultManager];
    URL.deletingLastPathComponent()();
    URL._bridgeToObjectiveC()(v34);
    uint64_t v36 = v35;
    uint64_t v37 = *(void (**)(char *, uint64_t))(v32 + 8);
    v37(v18, v14);
    sub_100010218(&qword_10080F9C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSFileProtectionKey;
    uint64_t v39 = qword_1007F6EF8;
    uint64_t v40 = NSFileProtectionKey;
    if (v39 != -1) {
      swift_once();
    }
    unint64_t v41 = (void *)qword_10083D470;
    type metadata accessor for URLFileProtection(0);
    *(void *)(inited + 64) = v42;
    *(void *)(inited + 40) = v41;
    id v43 = v41;
    sub_10039687C(inited);
    type metadata accessor for FileAttributeKey(0);
    sub_1005DE0DC(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v92._uint64_t countAndFlagsBits = 0;
    unsigned int v45 = [v33 createDirectoryAtURL:v36 withIntermediateDirectories:1 attributes:isa error:&v92];

    id v46 = (id)v92._countAndFlagsBits;
    if (!v45)
    {
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      v37(v88, v14);
      if (qword_1007F7E98 != -1) {
        swift_once();
      }
      uint64_t v48 = type metadata accessor for Logger();
      sub_100026A54(v48, (uint64_t)qword_100812D90);
      id v49 = v85;
      swift_errorRetain();
      id v50 = v49;
      swift_errorRetain();
      char v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        id v54 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 138412546;
        v91._uint64_t countAndFlagsBits = (uint64_t)v50;
        id v55 = v50;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v54 = v50;

        *(_WORD *)(v53 + 12) = 2112;
        swift_errorRetain();
        uint64_t v56 = _swift_stdlib_bridgeErrorToNSError();
        v91._uint64_t countAndFlagsBits = v56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v54[1] = v56;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "%@, error saving attachment file from data: %@", (uint8_t *)v53, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
      return 0;
    }
    Data.write(to:options:)();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    sub_100026A54(v58, (uint64_t)qword_100812D90);
    id v59 = v88;
    id v60 = *(void (**)(uint64_t, char *, uint64_t))(v87 + 16);
    uint64_t v61 = v82;
    v60((uint64_t)v82, v88, v31);
    id v62 = v83;
    v60((uint64_t)v83, v59, v31);
    id v63 = v85;
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    int v66 = v65;
    uint64_t v89 = v64;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v84 = v31;
      uint64_t v68 = v67;
      id v69 = (void *)swift_slowAlloc();
      id v85 = v69;
      uint64_t v87 = swift_slowAlloc();
      v92._uint64_t countAndFlagsBits = v87;
      *(_DWORD *)uint64_t v68 = 138412802;
      LODWORD(v86) = v66;
      uint64_t v90 = (uint64_t)v63;
      id v70 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v69 = v63;

      *(_WORD *)(v68 + 12) = 2080;
      sub_1005DE0DC((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v71 = v84;
      uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v90 = sub_10011EA98(v72, v73, &v92._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v37(v61, v71);
      *(_WORD *)(v68 + 22) = 2048;
      uint64_t v74 = v83;
      uint64_t v75 = sub_100464660();
      unsigned int v77 = v89;
      if (v76) {
        uint64_t v78 = 0;
      }
      else {
        uint64_t v78 = v75;
      }
      v37(v74, v71);
      uint64_t v90 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v86, "%@ - saved file [from data] %s with size %ld", (uint8_t *)v68, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v79 = v88;
      uint64_t v80 = v71;
    }
    else
    {
      v37(v62, v31);

      v37(v61, v31);
      uint64_t v79 = v59;
      uint64_t v80 = v31;
    }
    v37(v79, v80);
    return v91._countAndFlagsBits;
  }
  return v25;
}

void sub_1005DDE88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v26 = a8;
  uint64_t v27 = a5;
  int v29 = a7;
  uint64_t v28 = a6;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = sub_1005E6FF4(a2, a3, a4);
  if (v16)
  {
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 setFilePath:v18];

    [v17 setNeedsProcessing:v29 & 1];
    return;
  }
  v24[1] = a3;
  void v24[2] = a4;
  id v25 = a1;
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v20 = [v19 initWithContext:v26];
  UUID.init()();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  [v20 setId:isa];

  NSString v22 = String._bridgeToObjectiveC()();
  [v20 setFilePath:v22];

  [v20 setNeedsProcessing:v29 & 1];
  if (a2 < -32768)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a2 >= 0x8000)
  {
LABEL_8:
    __break(1u);
    return;
  }
  [v20 setIndex:(__int16)a2];
  NSString v23 = String._bridgeToObjectiveC()();
  [v20 setName:v23];

  [v25 addFileAttachmentsObject:v20];
}

uint64_t sub_1005DE0DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005DE124(void *a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  *(void *)&double v3 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v5 = (uint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = [a1 filePath:v3];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    signed int v11 = [a1 index];
    id v12 = [a1 name];
    uint64_t v44 = v2;
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    uint64_t v42 = v11;
    id v24 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    uint64_t v43 = v8;
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [v24 initWithString:v25];

    id v27 = [v26 lastPathComponent];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v28 = objc_allocWithZone((Class)NSString);
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [v28 initWithString:v29];

    id v31 = [v30 stringByDeletingPathExtension];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    if (v16)
    {
      if (v14 == 0x6567616D69 && v16 == 0xE500000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v5 = v43;
LABEL_14:
        Swift::String v35 = v5;
LABEL_17:
        uint64_t v37 = v42;
        v35[1] = v10;
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        type metadata accessor for AssetAttachment(0);
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v37;
        sub_1005DE684((uint64_t)v5, v38 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
        uint64_t v39 = (uint64_t *)(v38 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
        *uint64_t v39 = v32;
        v39[1] = v34;
        return v38;
      }
      uint64_t v36 = v43;
      if (v14 == 0x6F65646976 && v16 == 0xE500000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v5 = v36;
        goto LABEL_14;
      }
      if (v14 == 0x6F69647561 && v16 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();

LABEL_30:
        *uint64_t v5 = v36;
        goto LABEL_14;
      }
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();

      if (v41)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {

      uint64_t v36 = v43;
    }
    Swift::String v35 = (uint64_t *)((char *)v5 + *(int *)(sub_100010218(&qword_10080B3F0) + 48));
    *uint64_t v5 = v14;
    v5[1] = v16;
    *Swift::String v35 = v36;
    goto LABEL_17;
  }
  if (qword_1007F7E98 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100026A54(v17, (uint64_t)qword_100812D90);
  id v18 = a1;
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    NSString v22 = (void *)swift_slowAlloc();
    *(_DWORD *)id v21 = 138412290;
    id v45 = v18;
    id v23 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v22 = v18;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "AssetAttachment.init error, missing filePath. AttachmentMO: %@", v21, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1005DE684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_1005DE6EC(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal42NavigationLargeTitleAccessoryContainerView_contentView] = a1;
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for NavigationLargeTitleAccessoryContainerView();
  id v3 = a1;
  id v4 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 addSubview:v3];
  uint64_t v5 = self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1006D6D30;
  id v7 = [v3 topAnchor];
  id v8 = [v4 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v6 + 32) = v9;
  id v10 = [v3 leadingAnchor];
  id v11 = [v4 leadingAnchor];
  id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v3 trailingAnchor];
  id v14 = [v4 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v6 + 48) = v15;
  id v16 = [v3 bottomAnchor];
  id v17 = [v4 bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v6 + 56) = v18;
  specialized Array._endMutation()();
  sub_1001E3DF8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];

  return v4;
}

id sub_1005DEA24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationLargeTitleAccessoryContainerView();
  return [super dealloc];
}

uint64_t type metadata accessor for NavigationLargeTitleAccessoryContainerView()
{
  return self;
}

void *sub_1005DEA8C(void *a1, void *a2)
{
  id v3 = v2;
  id v6 = [a1 format];
  sub_1005DEF90();
  if (static NSObject.== infix(_:_:)())
  {
    id v7 = a1;

    return v7;
  }
  id v9 = (void *)v2[2];
  if (!v9) {
    goto LABEL_6;
  }
  id v10 = [v9 outputFormat];
  if (!v10
    || (id v11 = v10,
        id v12 = a2,
        id v13 = v11,
        char v14 = static NSObject.== infix(_:_:)(),
        v13,
        v13,
        v12,
        (v14 & 1) == 0))
  {
LABEL_6:
    id v15 = [objc_allocWithZone((Class)AVAudioConverter) initFromFormat:v6 toFormat:a2];
    id v16 = (void *)v3[2];
    v3[2] = v15;

    id v17 = (void *)v3[2];
    if (!v17) {
      goto LABEL_16;
    }
    [v17 setPrimeMethod:2];
  }
  id v18 = (void *)v3[2];
  if (v18)
  {
    id v19 = v18;
    id v20 = [v19 outputFormat];
    [v20 sampleRate];
    double v22 = v21;

    id v23 = [v19 inputFormat];
    [v23 sampleRate];
    double v25 = v24;

    double v26 = ceil(v22 / v25 * (double)[a1 frameLength]);
    if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -1.0)
      {
        if (v26 < 4294967300.0)
        {
          uint64_t v27 = v26;
          id v28 = [v19 outputFormat];
          id v3 = [objc_allocWithZone((Class)AVAudioPCMBuffer) initWithPCMFormat:v28 frameCapacity:v27];

          if (v3)
          {
            uint64_t v29 = swift_allocObject();
            *(unsigned char *)(v29 + 16) = 0;
            id v30 = (void *)swift_allocObject();
            v30[2] = v29;
            v30[3] = a1;
            aBlock[4] = sub_1005DF074;
            aBlock[5] = v30;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = (id)1107296256;
            aBlock[2] = sub_100304C74;
            aBlock[3] = &unk_1007B79C0;
            id v31 = _Block_copy(aBlock);
            swift_retain();
            id v32 = a1;
            swift_release();
            aBlock[0] = 0;
            id v33 = [v19 convertToBuffer:v3 error:aBlock withInputFromBlock:v31];
            _Block_release(v31);
            id v34 = aBlock[0];
            Swift::String v35 = v34;
            if (v33 == (id)3)
            {
              sub_1005DEFD0();
              swift_allocError();
              *uint64_t v36 = v35;
              id v37 = v35;
              swift_willThrow();

              swift_release();
            }
            else
            {

              swift_release();
            }
          }
          else
          {
            sub_1005DEFD0();
            swift_allocError();
            *uint64_t v39 = 2;
            swift_willThrow();
          }
          return v3;
        }
LABEL_22:
        __break(1u);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_16:
  sub_1005DEFD0();
  swift_allocError();
  *uint64_t v38 = 1;
  swift_willThrow();

  return v3;
}

void *sub_1005DEEDC(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  id v7 = (unsigned char *)(a3 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(a3 + 16))
  {
    a4 = 0;
    uint64_t v8 = 1;
  }
  else
  {
    id v9 = a4;
    uint64_t v8 = 0;
  }
  *a2 = v8;
  swift_beginAccess();
  *id v7 = 1;
  return a4;
}

uint64_t type metadata accessor for BufferConverter()
{
  return self;
}

unint64_t sub_1005DEF90()
{
  unint64_t result = qword_1008130A8;
  if (!qword_1008130A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1008130A8);
  }
  return result;
}

unint64_t sub_1005DEFD0()
{
  unint64_t result = qword_1008130B0;
  if (!qword_1008130B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008130B0);
  }
  return result;
}

uint64_t sub_1005DF024()
{
  return swift_deallocObject();
}

uint64_t sub_1005DF034()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_1005DF074(uint64_t a1, uint64_t *a2)
{
  return sub_1005DEEDC(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1005DF07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005DF08C()
{
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for BufferConverter.Error(void *a1, void **a2)
{
  id v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for BufferConverter.Error(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void **assignWithCopy for BufferConverter.Error(void **a1, void **a2)
{
  id v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = v7;
      id v10 = v7;
      return a1;
    }
LABEL_12:
    *a1 = v7;
    return a1;
  }
  if (v8 > 1)
  {

    id v7 = *a2;
    goto LABEL_12;
  }
  *a1 = v7;
  id v9 = v7;

  return a1;
}

void **assignWithTake for BufferConverter.Error(void **a1, void **a2)
{
  id v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  unsigned int v6 = v5 + 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for BufferConverter.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BufferConverter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1005DF2BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1005DF2DC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *unint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BufferConverter.Error()
{
  return &type metadata for BufferConverter.Error;
}

void sub_1005DF320()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 layer];
    self;
    id v4 = (void *)swift_dynamicCastObjCClass();
    if (!v4) {

    }
    id v5 = [v4 player];
    [v5 pause];
  }
}

id sub_1005DF3FC()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];

  return [v0 setClipsToBounds:0];
}

void sub_1005DF4FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  NSString v2 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x58);
  uint64_t v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  id v4 = v1;
  v2(1, v3);
}

void sub_1005DF5A8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded) = 1;
    id v9 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
    if (v9)
    {
      uint64_t v17 = v2;
      uint64_t v10 = qword_1007F6A58;
      id v11 = v9;
      if (v10 != -1) {
        swift_once();
      }
      v16[1] = qword_10083CF60;
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      *(void *)(v13 + 24) = v11;
      aBlock[4] = sub_1000D6F40;
      aBlock[5] = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      aBlock[3] = &unk_1007B7C30;
      char v14 = _Block_copy(aBlock);
      id v15 = v11;
      swift_retain();
      static DispatchQoS.unspecified.getter();
      id v18 = _swiftEmptyArrayStorage;
      sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_10001B1BC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v14);

      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release();
      swift_release();
    }
  }
}

void *sub_1005DF8E8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
  id v2 = v1;
  return v1;
}

id sub_1005DF918()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal14VideoAssetView____lazy_storage___player;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView____lazy_storage___player);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView____lazy_storage___player);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)AVPlayer) init];
    [v4 setResourceConservationLevelWhilePaused:2];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1005DF9A0()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction);
  void *v1 = 0;
  v1[1] = 0;
  sub_10001ABB8(v2);
  uint64_t v3 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    [v8 pause];

    id v9 = *(void **)(v0 + v3);
    if (v9)
    {
      id v10 = v9;
      id v11 = [v10 layer];
      self;
      uint64_t v12 = (void *)swift_dynamicCastObjCClass();
      if (!v12) {

      }
      id v13 = [v12 player];
      if (v13)
      {
        [v13 replaceCurrentItemWithPlayerItem:0];
      }
      char v14 = *(void **)(v0 + v3);
      if (v14)
      {
        id v15 = v14;
        id v16 = [v15 layer];
        self;
        uint64_t v17 = (void *)swift_dynamicCastObjCClass();
        if (!v17) {

        }
        [v17 setPlayer:0];
      }
    }
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded) = 0;
}

void sub_1005DFB64()
{
  uint64_t v1 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  __chkstk_darwin(v7);
  id v9 = (char *)&v32 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  id v18 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
  if (v18 && !*(void *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailOverride))
  {
    uint64_t v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v15;
    uint64_t v41 = v14;
    id v38 = v18;
    uint64_t v42 = v17;
    Date.init()();
    uint64_t v37 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v19)
        {
LABEL_9:
          if (qword_1007F6A60 != -1) {
            swift_once();
          }
          id v20 = &qword_10083CF68;
        }
        else
        {
          if (qword_1007F6A58 != -1) {
            swift_once();
          }
          id v20 = &qword_10083CF60;
        }
        id v36 = (id)*v20;
        UUID.init()();
        id v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v34(v3, v9, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
        Swift::String v35 = v9;
        uint64_t v21 = v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_latestImageRequestID;
        swift_beginAccess();
        sub_100041190((uint64_t)v3, v21, &qword_100800950);
        swift_endAccess();
        LODWORD(v37) = *(unsigned __int8 *)(v0 + v37);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        double v22 = v39;
        v34(v39, v9, v4);
        uint64_t v24 = v40;
        uint64_t v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v12, v42, v41);
        unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        unint64_t v26 = (v6 + *(unsigned __int8 *)(v24 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v33;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v25, v22, v4);
        (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v26, v12, v23);
        id v28 = self;
        swift_retain();
        id v29 = [v28 currentTraitCollection];
        id v30 = v36;
        id v31 = v38;
        sub_10017D574(v37, 0, 1, v36, v29, (uint64_t)sub_1005E4B48, v27);

        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v23);
        swift_release();
        break;
    }
  }
}

uint64_t sub_1005E0104(void **a1)
{
  uint64_t v2 = v1;
  memset(v30, 0, sizeof(v30));
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (!v4) {
    goto LABEL_6;
  }
  id v5 = v4;
  id v6 = [v5 layer];
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7) {

  }
  id v8 = [v7 player];
  if (v8)
  {
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v9 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
    __C::CMTime v31 = CMTime.init(value:timescale:)(1, 600);
    Swift::Int64 value = v31.value;
    Swift::Int32 timescale = v31.timescale;
    Swift::Int64 epoch = v31.epoch;
    uint64_t v13 = HIDWORD(*(void *)&v31.timescale);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v28 = sub_1005E49A0;
    uint64_t v29 = v15;
    long long aBlock = _NSConcreteStackBlock;
    unint64_t v25 = 1107296256;
    unint64_t v26 = sub_1002DB33C;
    uint64_t v27 = &unk_1007B7C58;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    long long aBlock = (void **)value;
    unint64_t v25 = __PAIR64__(v13, timescale);
    unint64_t v26 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
    id v17 = [v8 addPeriodicTimeObserverForInterval:&aBlock queue:v14 usingBlock:v16];
    _Block_release(v16);

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10001457C((uint64_t)v30, &qword_1007FAD50);
    sub_1000685B8((uint64_t)&aBlock, (uint64_t)v30);
  }
  else
  {
LABEL_6:
    id v9 = 0;
  }
  id v18 = *(void **)(v2 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerTimeControlStatusObserver);
  *(void *)(v2 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerTimeControlStatusObserver) = v9;
  id v19 = v9;

  sub_10001B220((uint64_t)v30, (uint64_t)&aBlock, &qword_1007FAD50);
  uint64_t v20 = v2 + OBJC_IVAR____TtC7Journal14VideoAssetView_timeObserver;
  swift_beginAccess();
  sub_100041190((uint64_t)&aBlock, v20, &qword_1007FAD50);
  swift_endAccess();
  long long aBlock = a1;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  double v22 = *(void **)(v2 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerStatusObserver);
  *(void *)(v2 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerStatusObserver) = v21;

  return sub_10001457C((uint64_t)v30, &qword_1007FAD50);
}

uint64_t sub_1005E04A4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerStatusObserver) = 0;

  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerTimeControlStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerTimeControlStatusObserver) = 0;

  uint64_t v3 = v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_timeObserver;
  swift_beginAccess();
  sub_10001B220(v3, (uint64_t)&v10, &qword_1007FAD50);
  if (!*((void *)&v11 + 1)) {
    return sub_10001457C((uint64_t)&v10, &qword_1007FAD50);
  }
  sub_10002102C(&v10, &v12);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    if (v8)
    {
      sub_10002E0BC(&v12, v13);
      [v8 removeTimeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
    }
  }
  long long v10 = 0u;
  long long v11 = 0u;
  swift_beginAccess();
  sub_100041190((uint64_t)&v10, v3, &qword_1007FAD50);
  swift_endAccess();
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v12);
}

void sub_1005E064C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (!v2) {
    return;
  }
  id v3 = v2;
  id v4 = [v3 layer];
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5) {

  }
  id v6 = [v5 player];
  if (v6)
  {
    [v6 currentTime];

    uint64_t v7 = *(void **)(v0 + v1);
    if (!v7) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + v1);
    if (!v7) {
      goto LABEL_15;
    }
  }
  id v8 = v7;
  id v9 = [v8 layer];
  self;
  long long v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10) {

  }
  id v11 = [v10 player];
  if (v11)
  {
    id v12 = [v11 currentItem];

    if (v12)
    {
      [v12 duration];

      if (v6 && (static CMTime.== infix(_:_:)() & 1) != 0) {
        goto LABEL_16;
      }
      goto LABEL_21;
    }
  }
LABEL_15:
  if (!v6)
  {
LABEL_16:
    uint64_t v13 = *(void **)(v0 + v1);
    if (!v13) {
      return;
    }
    id v14 = v13;
    id v15 = [v14 layer];
    self;
    uint64_t v16 = (void *)swift_dynamicCastObjCClass();
    if (!v16) {

    }
    id v17 = [v16 player];
    if (v17)
    {
      CMTimeEpoch epoch = kCMTimeZero.epoch;
      v24[0] = kCMTimeZero.value;
      v24[1] = *(void *)&kCMTimeZero.timescale;
      void v24[2] = epoch;
      [v17 seekToTime:v24];
    }
  }
LABEL_21:
  id v19 = *(void **)(v0 + v1);
  if (v19)
  {
    id v20 = v19;
    id v21 = [v20 layer];
    self;
    double v22 = (void *)swift_dynamicCastObjCClass();
    if (!v22) {

    }
    id v23 = [v22 player];
    [v23 play];
  }
}

uint64_t sub_1005E0950()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008130B8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008130B8);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005E0A18(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_didThumbnailFinishLoading) = result;
  return result;
}

void sub_1005E0A28(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset;
  id v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
  if (a1)
  {
    if (!v4) {
      goto LABEL_9;
    }
    id v5 = a1;
    _s10VideoAssetCMa(0);
    id v6 = v4;
    id v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)();

    if (v5) {
      return;
    }
    id v4 = *(void **)((char *)v2 + v3);
    if (!v4) {
      goto LABEL_9;
    }
  }
  else if (!v4)
  {
    return;
  }
  sub_100042B1C(*((unsigned char *)v4 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type));
  if (!v8)
  {
LABEL_9:
    NSString v9 = 0;
    goto LABEL_10;
  }
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_10:
  [v2 setAccessibilityLabel:v9];

  sub_1005DFB64();
  id v10 = *(id *)((char *)v2 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v10) {
    id v10 = [v10 setAlpha:0.0];
  }
  (*(void (**)(id))((swift_isaMask & *v2) + 0x2C8))(v10);
  uint64_t v11 = *(void *)((char *)v2 + v3);
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (void (**)())(v11 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    uint64_t v14 = *(void *)(v11 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    *uint64_t v13 = sub_1005E4E58;
    v13[1] = (void (*)())v12;
    sub_10001ABB8(v14);
    uint64_t v15 = *(void *)((char *)v2 + v3);
    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v17 = (void (**)())(v15 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdateMediaFile);
      uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdateMediaFile);
      *id v17 = sub_1005E4E60;
      v17[1] = (void (*)())v16;
      sub_10001ABB8(v18);
    }
  }
}

void sub_1005E0C3C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1005DFB64();
  }
}

void sub_1005E0C90()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x2C8))();
  }
}

void *sub_1005E0D1C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  NSString v9 = &v4[OBJC_IVAR____TtC7Journal14VideoAssetView_timeObserver];
  *(_OWORD *)NSString v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(void *)&v4[OBJC_IVAR____TtC7Journal14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC7Journal14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView] = 0;
  uint64_t v13 = &v12[OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  v12[OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded] = 0;
  v12[OBJC_IVAR____TtC7Journal14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC7Journal14VideoAssetView_latestImageRequestID];
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v16 = [super initWithFrame:a1, a2, a3, a4];
  id v17 = *(void (**)(void))((swift_isaMask & *v16) + 0x298);
  uint64_t v18 = v16;
  v17();

  return v18;
}

void *sub_1005E0F30(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Journal14VideoAssetView_timeObserver];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC7Journal14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v4 = OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView;
  id v5 = objc_allocWithZone((Class)UIImageView);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC7Journal14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v6[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView] = 0;
  id v7 = &v6[OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v6[OBJC_IVAR____TtC7Journal14VideoAssetView_isLoaded] = 0;
  v6[OBJC_IVAR____TtC7Journal14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v6[OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset] = 0;
  *(void *)&v6[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v8 = &v6[OBJC_IVAR____TtC7Journal14VideoAssetView_latestImageRequestID];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v10 = [super initWithCoder:a1];
  id v11 = v10;
  if (v10)
  {
    uint64_t v12 = *(void (**)(void))((swift_isaMask & *v10) + 0x298);
    uint64_t v13 = v10;
    v12();
  }
  return v11;
}

uint64_t sub_1005E1128()
{
  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_delegate);
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_timeObserver, &qword_1007FAD50);

  sub_10001ABB8(*(void *)(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_finishPlayingAction));
  return sub_10001457C(v0 + OBJC_IVAR____TtC7Journal14VideoAssetView_latestImageRequestID, &qword_100800950);
}

id sub_1005E1200()
{
  sub_1005DF9A0();
  sub_1005E04A4();
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView];
  *(void *)&v0[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView] = 0;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VideoAssetView();
  return [super dealloc];
}

uint64_t sub_1005E1414()
{
  return type metadata accessor for VideoAssetView();
}

uint64_t type metadata accessor for VideoAssetView()
{
  uint64_t result = qword_100813160;
  if (!qword_100813160) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005E1468(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  Swift::String v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  id v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  id v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  id v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  aBlock[4] = sub_1005E4D80;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B7D20;
  objc_super v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  double v22 = v34;
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v25 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_1005E193C(uint64_t a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v65 = a4;
  id v69 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  __chkstk_darwin(v5);
  id v62 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v60 - v8;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v60 - v12;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v64 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v60 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v60 - v26;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      uint64_t v29 = a2;
      uint64_t v30 = Strong;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v69, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      id v69 = v30;
      uint64_t v31 = (uint64_t)&v30[OBJC_IVAR____TtC7Journal14VideoAssetView_latestImageRequestID];
      swift_beginAccess();
      sub_10001B220(v31, (uint64_t)v24, &qword_100800950);
      uint64_t v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
      sub_10001B220((uint64_t)v27, (uint64_t)v18, &qword_100800950);
      sub_10001B220((uint64_t)v24, v32, &qword_100800950);
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      if (v33((uint64_t)v18, 1, v13) == 1)
      {
        id v34 = v29;
        id v35 = v29;
        sub_10001457C((uint64_t)v24, &qword_100800950);
        sub_10001457C((uint64_t)v27, &qword_100800950);
        if (v33(v32, 1, v13) == 1)
        {
          sub_10001457C((uint64_t)v18, &qword_100800950);
          goto LABEL_18;
        }
      }
      else
      {
        sub_10001B220((uint64_t)v18, (uint64_t)v21, &qword_100800950);
        if (v33(v32, 1, v13) != 1)
        {
          uint64_t v42 = v64;
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v64, v32, v13);
          sub_1000E4FD0((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
          id v43 = v29;
          char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v45 = *(void (**)(char *, uint64_t))(v14 + 8);
          v45(v42, v13);
          sub_10001457C((uint64_t)v24, &qword_100800950);
          sub_10001457C((uint64_t)v27, &qword_100800950);
          v45(v21, v13);
          id v34 = v29;
          sub_10001457C((uint64_t)v18, &qword_100800950);
          if (v44)
          {
LABEL_18:
            id v46 = v69;
            [*(id *)&v69[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView] setImage:v34];
            char v47 = 1;
            (*(void (**)(uint64_t))((swift_isaMask & *(void *)v46) + 0x258))(1);
            swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v49 = v67;
            uint64_t v48 = (uint64_t)v68;
            uint64_t v50 = v66;
            switch(v46[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
            {
              case 5:
                break;
              default:
                char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
                break;
            }
            swift_retain_n();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v48, v65, v49);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v49);
            if ((v47 & 1) == 0)
            {
              uint64_t v51 = v63;
              sub_10001B220(v48, v63, (uint64_t *)&unk_1007FC470);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v49) == 1)
              {
                sub_10001457C(v51, (uint64_t *)&unk_1007FC470);
LABEL_27:
                static Animation.easeIn(duration:)();
                sub_10001B284(0, (unint64_t *)&qword_100802730);
                static UIView.animate(_:changes:completion:)();
                swift_release();
                goto LABEL_28;
              }
              os_log_type_t v52 = v61;
              (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v61, v51, v49);
              uint64_t v53 = v62;
              static Date.now.getter();
              Date.timeIntervalSince(_:)();
              double v55 = v54;
              uint64_t v56 = *(void (**)(char *, uint64_t))(v50 + 8);
              v56(v53, v49);
              v56(v52, v49);
              if (v55 >= 0.1) {
                goto LABEL_27;
              }
            }
            swift_beginAccess();
            uint64_t v57 = swift_unknownObjectWeakLoadStrong();
            if (v57)
            {
              uint64_t v58 = (void *)v57;
              id v59 = *(id *)(v57 + OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView);

              [v59 setAlpha:1.0];
              swift_release_n();

LABEL_29:
              sub_10001457C(v48, (uint64_t *)&unk_1007FC470);
              swift_release();
              return;
            }
LABEL_28:
            swift_release();
            swift_release();

            goto LABEL_29;
          }
LABEL_19:

          return;
        }
        id v41 = v29;
        sub_10001457C((uint64_t)v24, &qword_100800950);
        sub_10001457C((uint64_t)v27, &qword_100800950);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
        id v34 = v29;
      }
      sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FEB40);
      goto LABEL_19;
    }
  }
  swift_beginAccess();
  uint64_t v36 = swift_unknownObjectWeakLoadStrong();
  if (v36)
  {
    uint64_t v37 = (void *)v36;
    int v38 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v36 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v38 == 1 || !swift_unknownObjectWeakLoadStrong())
    {
    }
    else
    {
      sub_100491AF4();

      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t v39 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v39)
  {
    uint64_t v40 = v39;
    (*(void (**)(void))((swift_isaMask & *v39) + 0x258))(0);
  }
}

void sub_1005E2350()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView);

    [v2 setAlpha:1.0];
  }
}

uint64_t sub_1005E23CC(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v59 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (unsigned char *)result;
    uint64_t v56 = v3;
    sub_100513748(0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_10001457C((uint64_t)v11, (uint64_t *)&unk_100800A60);
      char v18 = v17[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
      v17[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
      if ((v18 & 1) == 0)
      {
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v19 = v17;
          sub_100491AF4();

          swift_unknownObjectRelease();
        }
      }
      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v21 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v65 = sub_1005E47D4;
      uint64_t v66 = (void *)v21;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v62 = 1107296256;
      uint64_t v63 = sub_10017D530;
      id v64 = &unk_1007B7AC8;
      uint64_t v22 = _Block_copy(&aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_10001B1BC();
      uint64_t v23 = v56;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v5, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v8, v58);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      if (sub_100320C64(v17[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType]))
      {
        id v24 = [self sharedInstance];
        long long aBlock = 0;
        unsigned int v25 = [v24 setCategory:AVAudioSessionCategoryPlayback withOptions:1 error:&aBlock];

        if (v25)
        {
          uint64_t v26 = aBlock;
        }
        else
        {
          uint64_t v29 = aBlock;
          uint64_t v30 = (void *)_convertNSErrorToError(_:)();

          swift_willThrow();
          if (qword_1007F7EA0 != -1) {
            swift_once();
          }
          uint64_t v31 = type metadata accessor for Logger();
          sub_100026A54(v31, (uint64_t)qword_1008130B8);
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v32 = Logger.logObject.getter();
          os_log_type_t v33 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v32, v33))
          {
            os_log_t v54 = v32;
            id v34 = (uint8_t *)swift_slowAlloc();
            uint64_t v53 = (void **)swift_slowAlloc();
            long long aBlock = v53;
            id v55 = v30;
            os_log_type_t v52 = v34;
            *(_DWORD *)id v34 = 136315138;
            uint64_t v51 = v34 + 4;
            swift_getErrorValue();
            uint64_t v35 = Error.localizedDescription.getter();
            uint64_t v60 = sub_10011EA98(v35, v36, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            os_log_t v37 = v54;
            _os_log_impl((void *)&_mh_execute_header, v54, v33, "Failed to set video player audio: %s", v52, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
        }
        id v38 = objc_allocWithZone((Class)AVURLAsset);
        URL._bridgeToObjectiveC()(v39);
        id v41 = v40;
        id v42 = [v38 initWithURL:v40 options:0];
        id v55 = v42;

        id v43 = [objc_allocWithZone((Class)AVPlayerItem) initWithAsset:v42];
        id v44 = sub_1005DF918();
        [v44 replaceCurrentItemWithPlayerItem:v43];

        sub_10001B284(0, (unint64_t *)&qword_100805AB0);
        os_log_t v54 = (os_log_t)static OS_dispatch_queue.main.getter();
        uint64_t v45 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v46 = (void *)swift_allocObject();
        v46[2] = v45;
        v46[3] = a2;
        v46[4] = v43;
        uint64_t v65 = sub_1005E483C;
        uint64_t v66 = v46;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v62 = 1107296256;
        uint64_t v63 = sub_10017D530;
        id v64 = &unk_1007B7B18;
        char v47 = _Block_copy(&aBlock);
        id v48 = a2;
        uint64_t v53 = (void **)v43;
        swift_release();
        static DispatchQoS.unspecified.getter();
        long long aBlock = (void **)_swiftEmptyArrayStorage;
        sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100010218(&qword_100804DB0);
        sub_10001B1BC();
        uint64_t v49 = v56;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        os_log_t v50 = v54;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v47);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v5, v49);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v8, v58);
      }
      else
      {
        int v27 = v17[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
        v17[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
        if (v27 == 1 || !swift_unknownObjectWeakLoadStrong())
        {
        }
        else
        {
          id v28 = v17;
          sub_100491AF4();

          swift_unknownObjectRelease();
        }
      }
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return result;
}

void sub_1005E2DBC(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = OBJC_IVAR____TtC7Journal14VideoAssetView_playerView;
    uint64_t v7 = *(void **)(Strong + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
    if (v7) {
      goto LABEL_8;
    }
    type metadata accessor for VideoPlayerView();
    id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v9 = [v8 layer];
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10) {
      [v10 setVideoGravity:AVLayerVideoGravityResizeAspectFill];
    }

    id v11 = [v8 layer];
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    if (v12) {
      [v12 setToneMapToStandardDynamicRange:(*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x2D0))() & 1];
    }

    uint64_t v13 = *(void **)((char *)v5 + v6);
    *(void *)((char *)v5 + v6) = v8;
    id v14 = v8;

    [v5 addSubview:v14];
    uint64_t v7 = *(void **)((char *)v5 + v6);
    if (v7)
    {
LABEL_8:
      id v15 = v7;
      id v16 = [v15 layer];
      self;
      uint64_t v17 = (void *)swift_dynamicCastObjCClass();

      if (v17)
      {
        id v18 = sub_1005DF918();
        [v17 setPlayer:v18];

        id v16 = v18;
      }

      uint64_t v19 = *(void **)((char *)v5 + v6);
      if (v19)
      {
        id v20 = v19;
        id v21 = [v20 layer];
        self;
        uint64_t v22 = (void *)swift_dynamicCastObjCClass();
        if (!v22) {

        }
        id v23 = [v22 player];
        if (v23)
        {
          id v24 = [v23 currentItem];

          if (v24)
          {

            unsigned int v25 = *(void **)((char *)v5 + v6);
            if (v25)
            {
              id v26 = v25;
              id v27 = [v26 layer];
              self;
              id v28 = (void *)swift_dynamicCastObjCClass();
              if (!v28) {

              }
              id v29 = [v28 player];
              if (v29)
              {
                id v30 = [v29 currentItem];

                if (v30)
                {

                  if ((sub_100320C64(*((unsigned char *)v5 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType)) & 1) != 0
                    && !UIAccessibilityIsReduceMotionEnabled())
                  {
                    uint64_t v31 = self;
                    uint64_t v32 = swift_allocObject();
                    swift_unknownObjectWeakInit();
                    uint64_t v33 = swift_allocObject();
                    *(void *)(v33 + 16) = v32;
                    *(void *)(v33 + 24) = 0x3FF0000000000000;
                    uint64_t v61 = sub_10011B82C;
                    uint64_t v62 = v33;
                    long long aBlock = _NSConcreteStackBlock;
                    unint64_t v58 = 1107296256;
                    uint64_t v59 = sub_10017D530;
                    uint64_t v60 = &unk_1007B7B68;
                    id v34 = _Block_copy(&aBlock);
                    swift_release();
                    [v31 animateWithDuration:0 delay:v34 options:0 animations:0.3 completion:0.0];
                    _Block_release(v34);
                  }
                }
              }
            }
            if ((sub_100320C64(*((unsigned char *)v5 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType)) & 1) != 0
              && !UIAccessibilityIsReduceMotionEnabled())
            {
              uint64_t v35 = *(void **)((char *)v5 + v6);
              if (v35)
              {
                id v36 = v35;
                id v37 = [v36 layer];
                self;
                id v38 = (void *)swift_dynamicCastObjCClass();
                if (!v38) {

                }
                id v39 = [v38 player];
                [v39 setMuted:1];

                uint64_t v40 = *(void **)((char *)v5 + v6);
                if (v40)
                {
                  id v41 = v40;
                  id v42 = [v41 layer];
                  self;
                  id v43 = (void *)swift_dynamicCastObjCClass();
                  if (!v43) {

                  }
                  id v44 = [v43 player];
                  [v44 play];
                }
              }
              id v45 = [self defaultCenter];
              if (qword_1007F6EA8 != -1) {
                swift_once();
              }
              uint64_t v46 = qword_10083D430;
              sub_100010218(&qword_1007FB618);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_1006D6280;
              long long aBlock = (void **)0xD000000000000015;
              unint64_t v58 = 0x800000010069DCA0;
              AnyHashable.init<A>(_:)();
              uint64_t v48 = UUID.uuidString.getter();
              *(void *)(inited + 96) = &type metadata for String;
              *(void *)(inited + 72) = v48;
              *(void *)(inited + 80) = v49;
              sub_100396738(inited);
              Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v45 postNotificationName:v46 object:0 userInfo:isa];
            }
          }
        }
      }
    }
    [*(id *)((char *)v5 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setHidden:1];
    [*(id *)((char *)v5 + OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView) setAlpha:1.0];
    uint64_t v51 = self;
    id v52 = [v51 defaultCenter];
    [v52 removeObserver:v5 name:AVPlayerItemDidPlayToEndTimeNotification object:0];

    id v53 = [v51 defaultCenter];
    os_log_t v54 = v5;
    id v55 = sub_1005DF918();
    id v56 = [v55 currentItem];

    [v53 addObserver:v54 selector:"finishedPlayingWithNotification:" name:AVPlayerItemDidPlayToEndTimeNotification object:v56];
    sub_1005E0104(a3);
  }
}

void sub_1005E356C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setAlpha:1.0];
  }
}

void sub_1005E3724(SEL *a1, double a2, double a3, double a4, double a5)
{
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  [super a1:a2 a3:a4 a5:a5];
  id v11 = *(id *)&v5[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  [v5 bounds];
  [v11 setFrame:];

  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView];
  [v5 bounds];
  [v12 setFrame:];
  uint64_t v13 = *(void **)&v5[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView];
  if (v13)
  {
    id v14 = v13;
    [v5 bounds];
    [v14 setFrame:];
  }
}

void sub_1005E3830()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for VideoAssetView();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  [v0 bounds];
  [v1 setFrame:];

  id v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView];
  [v0 bounds];
  [v2 setFrame:];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal14VideoAssetView_playerView];
  if (v3)
  {
    id v4 = v3;
    [v0 bounds];
    [v4 setFrame:];
  }
}

void sub_1005E3954(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = *(void **)(Strong + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
    if (v4)
    {
      id v5 = v4;
      [v5 setAlpha:a1];
    }
  }
}

void sub_1005E39DC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10031C344();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1005E3A50(CMTimeValue a1, unint64_t a2, CMTimeEpoch a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();

    if (v8)
    {
      sub_10031E22C(a1, a2, a3);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1005E3AF0(void **a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (void *)result;
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = v10;
    aBlock[4] = sub_1005E49E8;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007B7CA8;
    objc_super v15 = _Block_copy(aBlock);
    uint64_t v19 = v6;
    id v16 = v15;
    id v17 = v12;
    id v18 = v10;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  return result;
}

id sub_1005E3DEC(uint64_t a1, void *a2)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10031C850();
    swift_unknownObjectRelease();
  }
  id result = [a2 status];
  if (result == (id)1)
  {
    char v5 = *(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if ((v5 & 1) == 0)
    {
      id result = (id)swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_100491AF4();
        return (id)swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1005E3F5C()
{
  sub_10001A7A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_1005E40C0(void *a1, uint64_t a2, uint64_t (*a3)(void), SEL *a4)
{
  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return [super a4];
}

void sub_1005E4114(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for VideoPlayerView();
  uint64_t v12 = *a7;
  id v13 = v14.receiver;
  [super v12:a2, a3, a4, a5];
  [v13 layoutSubviews];
}

void sub_1005E41A8(void *a1)
{
  id v3 = [v1 layer];
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4) {

  }
  id v19 = [v4 player];
  if (v19)
  {
    id v5 = [v19 currentItem];
    if (v5 && (objc_super v6 = v5, v7 = [v5 status], v6, v7 == (id)1))
    {
      [a1 currentTime];
      uint64_t v8 = aBlock;
      int v10 = v21;
      int v9 = HIDWORD(v21);
      id v11 = v22;
      [a1 rate];
      int v13 = v12;
      [v19 rate];
      if (v14 <= 0.0)
      {
        uint64_t v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(_DWORD *)(v16 + 24) = v13;
        *(void *)(v16 + 28) = v8;
        *(_DWORD *)(v16 + 36) = v10;
        *(_DWORD *)(v16 + 40) = v9;
        *(void *)(v16 + 44) = v11;
        id v24 = sub_1005E48B8;
        uint64_t v25 = v16;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v21 = 1107296256;
        uint64_t v22 = sub_1001C7318;
        id v23 = &unk_1007B7BE0;
        id v17 = _Block_copy(&aBlock);
        swift_release();
        LODWORD(v18) = v13;
        [v19 prerollAtRate:v17 completionHandler:v18];
        _Block_release(v17);
      }
      else
      {
        [v19 seekToTime:&aBlock];
      }
    }
    else
    {
    }
  }
}

void sub_1005E4410(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = Strong;
    if (a1 > 0.0)
    {
      id v12 = [Strong layer];
      self;
      int v13 = (void *)swift_dynamicCastObjCClass();
      if (!v13) {

      }
      id v14 = [v13 player];
      v18[0] = a4;
      v18[1] = a5;
      _OWORD v18[2] = a6;
      [v14 seekToTime:v18];

      id v15 = [v11 layer];
      self;
      uint64_t v16 = (void *)swift_dynamicCastObjCClass();
      if (!v16) {

      }
      id v17 = [v16 player];
      [v17 play];
    }
  }
}

id sub_1005E4650()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoPlayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for VideoPlayerView()
{
  return self;
}

void sub_1005E46AC(char a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
  if (v2)
  {
    id v4 = v2;
    id v5 = [v4 layer];
    self;
    objc_super v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6) {

    }
    id v7 = [v6 player];
    [v7 setMuted:a1 & 1];
  }
}

uint64_t sub_1005E479C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1005E47D4()
{
}

uint64_t sub_1005E47DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005E47EC()
{
  return swift_release();
}

uint64_t sub_1005E47F4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005E483C()
{
  sub_1005E2DBC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1005E4848()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005E4880()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005E48B8(uint64_t a1)
{
  sub_1005E4410(*(float *)(v1 + 24), a1, *(void *)(v1 + 16), *(void *)(v1 + 28), *(void *)(v1 + 36), *(void *)(v1 + 44));
}

uint64_t sub_1005E48D0()
{
  swift_release();

  return swift_deallocObject();
}

const char *sub_1005E4910()
{
  return "status";
}

id sub_1005E491C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 status];
  *a2 = result;
  return result;
}

uint64_t sub_1005E4950(void **a1)
{
  return sub_1005E3AF0(a1);
}

const char *sub_1005E4958()
{
  return "timeControlStatus";
}

id sub_1005E4964@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 timeControlStatus];
  *a2 = result;
  return result;
}

void sub_1005E4998()
{
}

void sub_1005E49A0(CMTimeValue a1, unint64_t a2, CMTimeEpoch a3)
{
}

uint64_t sub_1005E49A8()
{
  return swift_deallocObject();
}

id sub_1005E49E8()
{
  return sub_1005E3DEC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005E49F0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1005E4B48(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1005E1468(a1, v7, v1 + v4, v8);
}

uint64_t sub_1005E4C20()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_1005E4D80()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_1005E193C(v5, v6, (char *)(v0 + v2), v7);
}

void sub_1005E4E50()
{
}

void sub_1005E4E58()
{
}

void sub_1005E4E60()
{
}

uint64_t sub_1005E4EA4()
{
  uint64_t v1 = sub_100010218(&qword_1008026B8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AnyTip();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_1007FD5F0);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1007930C0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tip;
  swift_beginAccess();
  sub_1005E50CC(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1005E5134((uint64_t)v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  sub_100010218(&qword_1007FC218);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6280;
  *(void *)(v10 + 32) = AnyTip.id.getter();
  *(void *)(v10 + 40) = v11;
  *(unsigned char *)(v10 + 48) = 1;
  long long v12 = xmmword_1006EC0A0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1005E50CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1008026B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E5134(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1008026B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for LeadingNavigationBarTitleModifier(uint64_t a1)
{
  sub_10002B8D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LeadingNavigationBarTitleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1000C04A4(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LeadingNavigationBarTitleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1000C04A4(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_10002B8D0(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LeadingNavigationBarTitleModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_10002B8D0(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LeadingNavigationBarTitleModifier()
{
  return &type metadata for LeadingNavigationBarTitleModifier;
}

uint64_t sub_1005E5320()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005E533C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  int v21 = a3;
  uint64_t v20 = a2;
  uint64_t v6 = sub_100010218(&qword_1008131D0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1008131D8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_100010218(&qword_1008131E0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.topBarLeading.getter();
  uint64_t v24 = a1;
  uint64_t v25 = v20;
  char v26 = v21 & 1;
  uint64_t v27 = v22;
  sub_100010218(&qword_1008131E8);
  sub_1005E604C();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.principal.getter();
  ToolbarItem<>.init(placement:content:)();
  double v18 = &v8[*(int *)(v6 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v17, v14);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v12, v9);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1005E5644@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  LODWORD(v57) = a1;
  uint64_t v54 = a2;
  uint64_t v2 = type metadata accessor for AccessibilityTraits();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  id v53 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100010218(&qword_1007F95B0);
  __chkstk_darwin(v58);
  uint64_t v48 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = type metadata accessor for DynamicTypeSize();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v50 = sub_100010218(&qword_1007F95B8);
  __chkstk_darwin(v50);
  uint64_t v46 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v47 = (uint64_t)&v46 - v17;
  uint64_t v18 = sub_100010218(&qword_1008131F8);
  uint64_t v51 = *(void *)(v18 - 8);
  uint64_t v52 = v18;
  __chkstk_darwin(v18);
  uint64_t v49 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.title2.getter();
  Font.bold()();
  swift_release();
  uint64_t v20 = (void *)Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  uint64_t v59 = v20;
  uint64_t v60 = v22;
  LOBYTE(v61) = v24 & 1;
  uint64_t v62 = v26;
  uint64_t v27 = v9;
  id v28 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  v28(v14, enum case for DynamicTypeSize.large(_:), v8);
  v28(v11, enum case for DynamicTypeSize.xxLarge(_:), v8);
  sub_1005E616C(&qword_1007F9608, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v30 = v58;
    uint64_t v31 = &v7[*(int *)(v58 + 48)];
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v32(v7, v14, v8);
    uint64_t v57 = v31;
    v32(v31, v11, v8);
    uint64_t v33 = v48;
    id v34 = &v48[*(int *)(v30 + 48)];
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v35(v48, v7, v8);
    v35(v34, v31, v8);
    id v36 = v46;
    v32(v46, v33, v8);
    id v37 = *(void (**)(char *, uint64_t))(v27 + 8);
    v37(v34, v8);
    id v38 = &v33[*(int *)(v58 + 48)];
    v32(v33, v7, v8);
    v32(v38, v57, v8);
    uint64_t v39 = v50;
    v32(&v36[*(int *)(v50 + 36)], v38, v8);
    v37(v33, v8);
    uint64_t v40 = (uint64_t)v36;
    uint64_t v41 = v47;
    sub_1005E61B4(v40, v47);
    uint64_t v42 = sub_100014488(&qword_1007F9648, &qword_1007F95B8);
    id v43 = v49;
    View.dynamicTypeSize<A>(_:)();
    sub_1005E621C(v41);
    sub_10002B8D0((uint64_t)v59, v60, (char)v61);
    swift_bridgeObjectRelease();
    id v44 = v53;
    static AccessibilityTraits.isHeader.getter();
    uint64_t v59 = &type metadata for Text;
    uint64_t v60 = v39;
    uint64_t v61 = &protocol witness table for Text;
    uint64_t v62 = v42;
    swift_getOpaqueTypeConformance2();
    uint64_t v45 = v52;
    View.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v43, v45);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005E5C50(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_1005E5C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v32 = a2;
  uint64_t v28 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v3 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1008131A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  uint64_t v27 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1008131A8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  uint64_t v31 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = v2[1];
  uint64_t v24 = *v2;
  uint64_t v25 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *((unsigned char *)v2 + 16);
  uint64_t v23 = v2[3];
  uint64_t v15 = sub_100010218(&qword_1008131B0);
  uint64_t v16 = sub_100014488(&qword_1008131B8, &qword_1008131B0);
  View.navigationTitle(_:)();
  uint64_t v17 = v28;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v28);
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v25;
  uint64_t v19 = v26;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v19);
  uint64_t v33 = v24;
  uint64_t v34 = v13;
  char v35 = v14;
  uint64_t v36 = v23;
  sub_100010218(&qword_1008131C0);
  uint64_t v37 = v19;
  uint64_t v38 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_100014488(&qword_1008131C8, &qword_1008131C0);
  uint64_t v21 = v30;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v20, v21);
}

uint64_t sub_1005E5FFC()
{
  return sub_1005E602C((uint64_t (*)(void, void, void, void))sub_1005E533C);
}

uint64_t sub_1005E6014()
{
  return sub_1005E602C((uint64_t (*)(void, void, void, void))sub_1005E5644);
}

uint64_t sub_1005E602C(uint64_t (*a1)(void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

unint64_t sub_1005E604C()
{
  unint64_t result = qword_1008131F0;
  if (!qword_1008131F0)
  {
    sub_100014440(&qword_1008131E8);
    sub_100014440(&qword_1007F95B8);
    sub_100014488(&qword_1007F9648, &qword_1007F95B8);
    swift_getOpaqueTypeConformance2();
    sub_1005E616C((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008131F0);
  }
  return result;
}

uint64_t sub_1005E616C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E61B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F95B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E621C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F95B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005E627C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1005E63B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v12 = (char *)&v29 - v11;
  id result = [v0 entry];
  if (result)
  {
    char v14 = result;
    uint64_t v15 = sub_1005E7338();
    uint64_t v17 = v16;

    if (v17)
    {
      id v18 = [v1 id];
      if (v18)
      {
        uint64_t v19 = v18;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
      }
      sub_10018750C((uint64_t)v8, (uint64_t)v12);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2))
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v12, v2);
        sub_10001457C((uint64_t)v12, &qword_100800950);
        uint64_t v24 = UUID.uuidString.getter();
        uint64_t v26 = v25;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        uint64_t v31 = 47;
        unint64_t v32 = 0xE100000000000000;
        v27._uint64_t countAndFlagsBits = v24;
        v27._object = v26;
        String.append(_:)(v27);
        swift_bridgeObjectRelease();
        uint64_t v29 = v15;
        uint64_t v30 = v17;
        swift_bridgeObjectRetain();
        uint64_t v29 = String.init<A>(_:)();
        uint64_t v30 = v28;
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (id)v29;
      }
      swift_bridgeObjectRelease();
      sub_10001457C((uint64_t)v12, &qword_100800950);
      if (qword_1007F7EA8 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100026A54(v20, (uint64_t)qword_100813200);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "JournalEntryAssetMO.attachmentDirectoryPath is nil since id is nil", v23, 2u);
        swift_slowDealloc();
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1005E6760()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - v8;
  sub_1005E63B4();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    return sub_10001457C((uint64_t)v2, (uint64_t *)&unk_100800A60);
  }
  type metadata accessor for Journaling();
  sub_1005E6B0C((uint64_t)v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_10001457C((uint64_t)v2, (uint64_t *)&unk_100800A60);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
  if (qword_1007F7EA8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100026A54(v11, (uint64_t)qword_100813200);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)char v14 = 136315138;
    v19[1] = v14 + 4;
    sub_1000FBCDC();
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v19[2] = sub_10011EA98(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v6, v3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Deleting asset attachments directory: %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v6, v3);
  }

  sub_1005E78F8((uint64_t)v9, "JournalEntryAssetMO.purgeStoredFiles.deleteFile file doesn't exist: %s", "JournalEntryAssetMO.purgeAssetStorage, failed to delete file: %@");
  return ((uint64_t (*)(char *, uint64_t))v17)(v9, v3);
}

uint64_t sub_1005E6B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FD1B0((uint64_t)v4);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001457C((uint64_t)v4, (uint64_t *)&unk_100800A60);
    uint64_t v7 = 1;
  }
  else
  {
    URL.appendingPathComponent(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t sub_1005E6C68()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t result = sub_1005E7338();
  if (v11)
  {
    type metadata accessor for Journaling();
    sub_1005E6B0C((uint64_t)v2);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      return sub_10001457C((uint64_t)v2, (uint64_t *)&unk_100800A60);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
      if (qword_1007F7EA8 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_100026A54(v12, (uint64_t)qword_100813200);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
      os_log_type_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315138;
        v19[1] = v15 + 4;
        sub_1000FBCDC();
        uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
        v19[2] = sub_10011EA98(v16, v17, &v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        id v18 = *(void (**)(char *, uint64_t))(v4 + 8);
        v18(v6, v3);
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Deleting entry attachments directory: %s", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        id v18 = *(void (**)(char *, uint64_t))(v4 + 8);
        v18(v6, v3);
      }

      sub_1005E78F8((uint64_t)v9, "JournalEntryMO.purgeStoredFiles.deleteFile file doesn't exist: %s", "JournalEntryMO.purgeAssetStorage, failed to delete file: %@");
      return ((uint64_t (*)(char *, uint64_t))v18)(v9, v3);
    }
  }
  return result;
}

id sub_1005E6FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [v3 fileAttachments];
  if (!v12)
  {
    sub_1005E7230();
    id v12 = (id)NSSet.init(arrayLiteral:)();
  }
  NSSet.makeIterator()();

  NSFastEnumerationIterator.next()();
  if (!v28)
  {
    id v13 = 0;
    goto LABEL_19;
  }
  uint64_t v23 = v8;
  uint64_t v24 = v7;
  while (1)
  {
    sub_10002102C(&v27, &v26);
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_6;
    }
    id v13 = v25;
    if ((int)[v25 index] == a1)
    {
      id v14 = [v13 name];
      if (v14) {
        break;
      }
    }
LABEL_5:

LABEL_6:
    NSFastEnumerationIterator.next()();
    if (!v28)
    {
      id v13 = 0;
      goto LABEL_17;
    }
  }
  uint64_t v15 = v14;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (v16 != a2 || v18 != a3)
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_17;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v8 = v23;
  uint64_t v7 = v24;
LABEL_19:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v13;
}

unint64_t sub_1005E7230()
{
  unint64_t result = qword_100800958;
  if (!qword_100800958)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100800958);
  }
  return result;
}

uint64_t sub_1005E7270()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100813200);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100813200);
  if (qword_1007F7D40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005E7338()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  id v12 = (char *)&v21 - v11;
  id v13 = [v1 id:v10];
  if (v13)
  {
    id v14 = v13;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  sub_10018750C((uint64_t)v8, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2))
  {
    sub_10001457C((uint64_t)v12, &qword_100800950);
    if (qword_1007F7EA8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100026A54(v15, (uint64_t)qword_100813200);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "JournalEntryMO.attachmentDirectoryPath is nil since id is nil", v18, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v12, v2);
    sub_10001457C((uint64_t)v12, &qword_100800950);
    uint64_t v19 = UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v19;
}

void sub_1005E760C(uint64_t a1)
{
  sub_1005E78F8(a1, "JournalEntryMO.purgeStoredFiles.deleteFile file doesn't exist: %s", "JournalEntryMO.purgeAssetStorage, failed to delete file: %@");
}

id sub_1005E7674(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin(v5).n128_u64[0];
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v2 fileAttachments:v7];
  if (!v10)
  {
    sub_1005E7230();
    id v10 = (id)NSSet.init(arrayLiteral:)();
  }
  NSSet.makeIterator()();

  NSFastEnumerationIterator.next()();
  if (!v24)
  {
    id v11 = 0;
    goto LABEL_19;
  }
  uint64_t v20 = v5;
  while (1)
  {
    sub_10002102C(&v23, &v22);
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_6;
    }
    id v11 = v21;
    id v12 = [v21 name];
    if (v12) {
      break;
    }
LABEL_5:

LABEL_6:
    NSFastEnumerationIterator.next()();
    if (!v24)
    {
      id v11 = 0;
      goto LABEL_18;
    }
  }
  id v13 = v12;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (v14 != a1 || v16 != a2)
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_18;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v5 = v20;
LABEL_19:
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v11;
}

void sub_1005E7890(uint64_t a1)
{
  sub_1005E78F8(a1, "JournalEntryAssetMO.purgeStoredFiles.deleteFile file doesn't exist: %s", "JournalEntryAssetMO.purgeAssetStorage, failed to delete file: %@");
}

void sub_1005E78F8(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v34 = a2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = self;
  id v10 = [v9 defaultManager];
  URL.path.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v12 = [v10 fileExistsAtPath:v11];

  if (v12)
  {
    id v13 = [v9 defaultManager];
    URL._bridgeToObjectiveC()(v14);
    uint64_t v16 = v15;
    uint64_t v36 = 0;
    unsigned int v17 = [v13 removeItemAtURL:v15 error:&v36];

    char v18 = v36;
    if (v17)
    {
      uint64_t v19 = v18;
    }
    else
    {
      uint64_t v34 = v36;
      long long v26 = v36;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F7EA8 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_100026A54(v27, (uint64_t)qword_100813200);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 138412290;
        swift_errorRetain();
        unint64_t v32 = (char *)_swift_stdlib_bridgeErrorToNSError();
        uint64_t v36 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v31 = v32;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, a3, v30, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    if (qword_1007F7EA8 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100026A54(v20, (uint64_t)qword_100813200);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      long long v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = (char *)swift_slowAlloc();
      *(_DWORD *)long long v23 = 136315138;
      sub_1000FBCDC();
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v35 = sub_10011EA98(v24, v25, (uint64_t *)&v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, v34, v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

uint64_t sub_1005E7E28()
{
  return UUID.uuidString.getter();
}

uint64_t sub_1005E7E5C@<X0>(char *a1@<X8>)
{
  return sub_1003B2D58(a1);
}

uint64_t sub_1005E7E84@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v6 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v65 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v64 - 8);
  __chkstk_darwin(v64 - 8);
  uint64_t v63 = &v53[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v62 = &v53[-v11];
  uint64_t v70 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v70);
  id v69 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  unsigned int v77 = &v53[-v14];
  uint64_t v15 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v15 - 8);
  uint64_t v60 = &v53[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v79 = &v53[-v18];
  uint64_t v78 = type metadata accessor for URL();
  uint64_t v67 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v57 = &v53[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  os_log_type_t v22 = &v53[-v21];
  uint64_t v83 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v83);
  uint64_t v75 = (id *)&v53[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  long long v26 = (id *)&v53[-v25];
  unint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (v27 >> 62) {
    goto LABEL_41;
  }
  uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v28)
  {
LABEL_42:
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v61, 1, 1, v78);
  }
  while (1)
  {
    unint64_t v82 = v27 & 0xC000000000000001;
    uint64_t v74 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v67 + 48);
    uint64_t v72 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
    unint64_t v73 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v67 + 32);
    uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v56 = (void (**)(void))(v8 + 32);
    uint64_t v55 = (void (**)(unsigned char *, uint64_t))(v8 + 8);
    uint64_t v58 = (void (**)(unsigned char *, uint64_t))(v67 + 8);
    uint64_t v29 = 4;
    int v68 = a2;
    uint64_t v71 = a1;
    uint64_t v80 = v28;
    unint64_t v81 = v27;
    uint64_t v66 = v22;
LABEL_7:
    uint64_t v30 = v29 - 4;
    if (v82) {
      break;
    }
    uint64_t v8 = *(void *)(v27 + 8 * v29);
    swift_retain();
    uint64_t v31 = v29 - 3;
    if (!__OFADD__(v30, 1)) {
      goto LABEL_12;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain_n();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    if (!v28) {
      goto LABEL_42;
    }
  }
  uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  uint64_t v31 = v29 - 3;
  if (__OFADD__(v30, 1)) {
    goto LABEL_40;
  }
LABEL_12:
  uint64_t v32 = v8 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
  sub_100168580(v8 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v26, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (a2) {
        goto LABEL_39;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      sub_1001684C0((uint64_t)v26);
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v33 = v75;
      sub_100168580(v32, (uint64_t)v75, type metadata accessor for AssetAttachment.AssetType);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = v78;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          (*v72)(v79, 1, 1, v35);
          break;
        case 4:
          uint64_t v36 = v75;
          swift_bridgeObjectRelease();
          uint64_t v33 = (id *)((char *)v36 + *(int *)(sub_100010218(&qword_10080B3F0) + 48));
          goto LABEL_21;
        default:
LABEL_21:
          uint64_t v37 = (uint64_t)v33;
          uint64_t v38 = v77;
          sub_10016851C(v37, (uint64_t)v77);
          uint64_t v39 = (uint64_t)v38;
          uint64_t v40 = v69;
          sub_100168580(v39, (uint64_t)v69, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            (*v73)(v79, v40, v35);
            uint64_t v41 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v42 = v60;
            sub_1005E6B0C((uint64_t)v60);
            swift_bridgeObjectRelease();
            if ((*v74)(v42, 1, v35) == 1)
            {
              sub_10001457C((uint64_t)v42, (uint64_t *)&unk_100800A60);
              uint64_t v41 = 1;
            }
            else
            {
              id v43 = *v73;
              id v44 = v57;
              (*v73)(v57, v42, v35);
              uint64_t v45 = v44;
              os_log_type_t v22 = v66;
              v43(v79, v45, v35);
              uint64_t v41 = 0;
            }
            a2 = v68;
          }
          (*v72)(v79, v41, 1, v35);
          sub_1001684C0((uint64_t)v77);
          break;
      }
      char v76 = (char *)v26 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
      if ((*v74)(v79, 1, v35) == 1)
      {
        sub_10001457C((uint64_t)v79, (uint64_t *)&unk_100800A60);
        uint64_t v46 = (uint64_t)v76;
        goto LABEL_37;
      }
      (*v73)(v22, v79, v35);
      URL.pathExtension.getter();
      swift_bridgeObjectRetain();
      uint64_t v47 = v63;
      static UTType.data.getter();
      uint64_t v48 = (uint64_t)v65;
      UTType.init(filenameExtension:conformingTo:)();
      uint64_t v49 = v64;
      if ((*v59)(v48, 1, v64) == 1)
      {
        sub_10001457C(v48, &qword_1007F99B8);
        swift_bridgeObjectRelease();
        uint64_t v46 = (uint64_t)v76;
LABEL_36:
        os_log_type_t v22 = v66;
        (*v58)(v66, v78);
        a2 = v68;
LABEL_37:
        sub_1001684C0(v46);
        swift_release();
        a1 = v71;
        goto LABEL_6;
      }
      (*v56)();
      static UTType.image.getter();
      int v54 = UTType.conforms(to:)();
      uint64_t v50 = *v55;
      (*v55)(v47, v49);
      v50(v62, v49);
      swift_bridgeObjectRelease();
      uint64_t v46 = (uint64_t)v76;
      if ((v54 & 1) == 0) {
        goto LABEL_36;
      }
      a2 = v68;
      os_log_type_t v22 = v66;
      if ((v68 & 1) == 0)
      {
        uint64_t v51 = *(void *)(v8 + 16);
        (*v58)(v66, v78);
        sub_1001684C0(v46);
        a1 = v71;
        if (v51 == v71) {
          goto LABEL_39;
        }
LABEL_5:
        swift_release();
LABEL_6:
        unint64_t v27 = v81;
        ++v29;
        if (v31 == v80) {
          goto LABEL_42;
        }
        goto LABEL_7;
      }
      (*v58)(v66, v78);
      sub_1001684C0(v46);
LABEL_39:
      swift_bridgeObjectRelease_n();
      sub_1005DA2EC(v61);
      return swift_release();
    default:
      sub_1001684C0((uint64_t)v26);
      if (a2) {
        goto LABEL_39;
      }
LABEL_16:
      if (*(void *)(v8 + 16) == a1) {
        goto LABEL_39;
      }
      goto LABEL_5;
  }
}

uint64_t sub_1005E885C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[18] = v14;
  v9[19] = v8;
  v9[16] = a7;
  v9[17] = a8;
  v9[14] = a5;
  v9[15] = a6;
  v9[12] = a3;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  uint64_t v10 = type metadata accessor for URL.DirectoryHint();
  v9[20] = v10;
  v9[21] = *(void *)(v10 - 8);
  v9[22] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v9[23] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  v9[24] = v11;
  v9[25] = *(void *)(v11 - 8);
  v9[26] = swift_task_alloc();
  v9[27] = swift_task_alloc();
  v9[28] = swift_task_alloc();
  v9[29] = swift_task_alloc();
  v9[30] = swift_task_alloc();
  return _swift_task_switch(sub_1005E8A20, 0, 0);
}

uint64_t sub_1005E8A20()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(int *)(type metadata accessor for ExportOptions() + 20);
  if (*(unsigned char *)(v1 + v2)) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(char **)(v0 + 184);
  sub_1005E7E84(0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_10001457C(*(void *)(v0 + 184), (uint64_t *)&unk_100800A60);
LABEL_16:
    int v41 = *(unsigned __int8 *)(v1 + v2);
    id v42 = [self traitCollectionWithUserInterfaceStyle:1];
    *(void *)(v0 + 248) = v42;
    if (qword_1007F6A58 != -1) {
      swift_once();
    }
    if (v41) {
      char v43 = 2;
    }
    else {
      char v43 = 5;
    }
    uint64_t v44 = *(void *)(v0 + 152);
    uint64_t v45 = (void *)qword_10083CF60;
    *(void *)(v0 + 256) = qword_10083CF60;
    id v46 = v45;
    uint64_t v47 = swift_task_alloc();
    *(void *)(v0 + 264) = v47;
    *(void *)(v47 + 16) = v44;
    *(unsigned char *)(v47 + 24) = v43;
    *(void *)(v47 + 32) = 0;
    *(unsigned char *)(v47 + 40) = 0;
    *(void *)(v47 + 48) = v46;
    *(void *)(v47 + 56) = v42;
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v48;
    uint64_t v49 = sub_100010218(&qword_10080E750);
    *uint64_t v48 = v0;
    v48[1] = sub_1005E9174;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 48, 0, 0, 0xD00000000000003BLL, 0x800000010069DE20, sub_10045C140, v47, v49);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 200) + 32))(*(void *)(v0 + 240), *(void *)(v0 + 184), *(void *)(v0 + 192));
  uint64_t v6 = URL.pathExtension.getter();
  char v8 = sub_1004648D8(v6, v7);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 192));
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v50 = *(void *)(v0 + 224);
  uint64_t v56 = *(void *)(v0 + 200);
  uint64_t v51 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 160);
  sub_100478818(v9);
  *(void *)(v0 + 32) = UUID.uuidString.getter();
  *(void *)(v0 + 40) = v13;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for URL.DirectoryHint.inferFromPath(_:), v12);
  sub_100014344();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v55(v9, v51);
  URL.pathExtension.getter();
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  v55(v50, v51);
  uint64_t v14 = URL.lastPathComponent.getter();
  uint64_t v52 = v15;
  id v16 = [self defaultManager];
  URL._bridgeToObjectiveC()(v17);
  uint64_t v19 = v18;
  URL._bridgeToObjectiveC()(v20);
  os_log_type_t v22 = v21;
  *(void *)(v0 + 64) = 0;
  LODWORD(v12) = [v16 copyItemAtURL:v19 toURL:v21 error:v0 + 64];

  id v23 = *(id *)(v0 + 64);
  if (!v12)
  {
    uint64_t v32 = v23;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F7EB0 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100026A54(v33, (uint64_t)qword_100813218);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      id v53 = (void *)swift_slowAlloc();
      buf = v36;
      *(_DWORD *)uint64_t v36 = 138412290;
      swift_errorRetain();
      uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v53 = v37;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Asset.createImageHTML error %@", buf, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v38 = *(void *)(v0 + 232);
    uint64_t v39 = *(void *)(v0 + 240);
    uint64_t v40 = *(void *)(v0 + 192);
    swift_errorRelease();
    v55(v38, v40);
    v55(v39, v40);
    goto LABEL_16;
  }
  uint64_t v25 = *(void *)(v0 + 232);
  uint64_t v24 = *(void *)(v0 + 240);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = sub_100386E04(v14, v52, *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144));
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  v55(v25, v26);
  v55(v24, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v30(v27, v29);
}

uint64_t sub_1005E9174()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1005E92B8, 0, 0);
}

uint64_t sub_1005E92B8()
{
  uint64_t v1 = *(void **)(v0 + 248);

  if (!*(void *)(v0 + 48))
  {
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v23 = *(void *)(v0 + 200);
    long long v52 = *(_OWORD *)(v0 + 128);
    uint64_t v24 = *(void **)(v0 + 112);
    uint64_t v58 = *(void *)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 104);
    int v54 = *(void **)(v0 + 144);
    uint64_t v56 = *(void **)(v0 + 96);
    uint64_t v26 = *(void *)(v0 + 80);
    uint64_t v51 = *(void *)(v0 + 88);
    unint64_t v27 = sub_10015F114(v21, v26);
    uint64_t v29 = v28;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    if (v24) {
      uint64_t v30 = v25;
    }
    else {
      uint64_t v30 = 0x6361626C6C616620;
    }
    if (v24) {
      uint64_t v31 = v24;
    }
    else {
      uint64_t v31 = (void *)0xEF74657373615F6BLL;
    }
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_100386E04(v27, v29, v26, v51, v56, v30, v31, v58, (void *)v52, *((uint64_t *)&v52 + 1), v54);
    uint64_t v44 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v57 = *(UIImage **)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 160);
  sub_100478818(v3);
  *(void *)(v0 + 16) = UUID.uuidString.getter();
  *(void *)(v0 + 24) = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v8);
  sub_100014344();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  URL.appendingPathExtension(_:)();
  v10(v2, v5);
  uint64_t v11 = URL.lastPathComponent.getter();
  uint64_t v13 = v12;
  uint64_t v14 = UIImageHEICRepresentation(v57);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v55 = v10;
    uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    Data.write(to:options:)();
    uint64_t v19 = *(void *)(v0 + 208);
    uint64_t v20 = *(void *)(v0 + 192);
    uint64_t v42 = sub_100386E04(v11, v13, *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(void *)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144));
    uint64_t v44 = v43;
    sub_100040DD0(v16, v18);

    swift_bridgeObjectRelease();
    v55(v19, v20);
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v45(v42, v44);
  }
  swift_bridgeObjectRelease();
  if (qword_1007F7EB0 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void **)(v0 + 152);
  uint64_t v34 = type metadata accessor for Logger();
  sub_100026A54(v34, (uint64_t)qword_100813218);
  id v35 = v33;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = *(void **)(v0 + 152);
  if (v38)
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    id v53 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412290;
    *(void *)(v0 + 56) = v39;
    id v41 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v53 = v39;

    _os_log_impl((void *)&_mh_execute_header, v36, v37, "getHTMLAssetGrid can't get image data for %@", v40, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v36 = *(NSObject **)(v0 + 152);
  }
  uint64_t v47 = *(void *)(v0 + 208);
  uint64_t v48 = *(void *)(v0 + 192);

  sub_1002E00EC();
  swift_allocError();
  unsigned char *v49 = 6;
  swift_willThrow();

  v10(v47, v48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_1005E98F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100813218);
  sub_100026A54(v0, (uint64_t)qword_100813218);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t destroy for InsightsMosaicView(uint64_t a1)
{
  swift_release();
  sub_100026DF8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));

  return swift_release();
}

uint64_t initializeWithCopy for InsightsMosaicView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_100026CCC(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InsightsMosaicView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_100026CCC(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_100026DF8(v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for InsightsMosaicView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  sub_100026DF8(v5, v6);
  char v7 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v7;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsMosaicView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsMosaicView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsMosaicView()
{
  return &type metadata for InsightsMosaicView;
}

uint64_t sub_1005E9C90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005E9CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800000);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001773E0();
  EnvironmentValues.subscript.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v11 = type metadata accessor for InsightsFamily();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    EnvironmentValues.widgetFamily.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = type metadata accessor for WidgetFamily();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 0, 3, v12);
    return sub_10001457C((uint64_t)v10, &qword_100800000);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1005EC77C((uint64_t)v10, a2, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  }
}

uint64_t sub_1005E9ED4(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100800000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InsightsFamily();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EC694(a1, (uint64_t)v8);
  sub_1005EC694((uint64_t)v8, (uint64_t)v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_1001773E0();
  EnvironmentValues.subscript.setter();
  return sub_1005EC6F8((uint64_t)v8);
}

uint64_t sub_1005EA028()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1005EA098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v36 = type metadata accessor for RedactionReasons();
  uint64_t v38 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  os_log_type_t v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_100813238);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100813240);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100010218(&qword_100813248);
  __chkstk_darwin(v32);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100813250);
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  __chkstk_darwin(v13);
  uint64_t v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EA534((uint64_t)v1, (uint64_t)v6);
  uint64_t KeyPath = swift_getKeyPath();
  long long v40 = *v1;
  sub_100010218(&qword_100813258);
  State.projectedValue.getter();
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  char v18 = v43;
  sub_10001B220((uint64_t)v6, v10, &qword_100813238);
  uint64_t v19 = v10 + *(int *)(v8 + 44);
  *(void *)uint64_t v19 = KeyPath;
  *(void *)(v19 + 8) = v16;
  *(void *)(v19 + 16) = v17;
  uint64_t v20 = v32;
  *(unsigned char *)(v19 + 24) = v18;
  uint64_t v21 = (uint64_t)v12;
  sub_10001457C((uint64_t)v6, &qword_100813238);
  LOBYTE(v6) = *((unsigned char *)v2 + 40);
  uint64_t v22 = swift_retain();
  sub_100666C70(v22, (char)v6);
  swift_release();
  LOBYTE(KeyPath) = sub_10046AE60();
  swift_release();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = KeyPath & 1;
  sub_10001B220(v10, v21, &qword_100813240);
  uint64_t v25 = (uint64_t *)(v21 + *(int *)(v20 + 36));
  *uint64_t v25 = v23;
  v25[1] = (uint64_t)sub_10002BD30;
  v25[2] = v24;
  sub_10001457C(v10, &qword_100813240);
  uint64_t v26 = swift_retain();
  sub_100666C70(v26, (char)v6);
  swift_release();
  LOBYTE(v10) = sub_10046AE60();
  swift_release();
  if (v10)
  {
    unint64_t v27 = v37;
    static RedactionReasons.invalidated.getter();
    uint64_t v28 = v36;
  }
  else
  {
    id v41 = _swiftEmptyArrayStorage;
    sub_1005EC644(&qword_100813260, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_100010218(&qword_100813268);
    sub_100014488(&qword_100813270, &qword_100813268);
    uint64_t v29 = v36;
    unint64_t v27 = v37;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v28 = v29;
  }
  sub_1005EC3F0();
  uint64_t v30 = v33;
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v28);
  sub_10001457C(v21, &qword_100813248);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v39, v30, v35);
}

uint64_t sub_1005EA534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v34[0] = a2;
  uint64_t v3 = sub_100010218(&qword_1008132B8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - v8;
  uint64_t v10 = sub_100010218(&qword_1008132C0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v34 - v15;
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 16);
  char v19 = *(unsigned char *)(a1 + 24);
  sub_100026CCC(v18, v19);
  char v20 = sub_100666714(v18, v19);
  sub_100026DF8(v18, v19);
  *(void *)uint64_t v16 = v17;
  v16[8] = v20 & 1;
  uint64_t v21 = sub_100010218(&qword_1008132C8);
  sub_1005EA860(a1, (uint64_t)&v16[*(int *)(v21 + 44)]);
  uint64_t v22 = &v16[*(int *)(v11 + 60)];
  LocalizedStringKey.init(stringLiteral:)();
  *(void *)uint64_t v22 = Text.init(_:tableName:bundle:comment:)();
  *((void *)v22 + 1) = v23;
  v22[16] = v24 & 1;
  *((void *)v22 + 3) = v25;
  sub_100026CCC(v18, v19);
  LOBYTE(v22) = sub_100666714(v18, v19);
  sub_100026DF8(v18, v19);
  *(void *)uint64_t v9 = v17;
  v9[8] = v22 & 1;
  uint64_t v26 = sub_100010218(&qword_1008132D0);
  sub_1005EB3A8(a1, (uint64_t)&v9[*(int *)(v26 + 44)]);
  unint64_t v27 = &v9[*(int *)(v4 + 60)];
  LocalizedStringKey.init(stringLiteral:)();
  *(void *)unint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  *((void *)v27 + 1) = v28;
  v27[16] = v29 & 1;
  *((void *)v27 + 3) = v30;
  sub_10001B220((uint64_t)v16, (uint64_t)v13, &qword_1008132C0);
  sub_10001B220((uint64_t)v9, (uint64_t)v6, &qword_1008132B8);
  uint64_t v31 = v34[0];
  sub_10001B220((uint64_t)v13, v34[0], &qword_1008132C0);
  uint64_t v32 = sub_100010218(&qword_1008132D8);
  sub_10001B220((uint64_t)v6, v31 + *(int *)(v32 + 48), &qword_1008132B8);
  sub_10001457C((uint64_t)v9, &qword_1008132B8);
  sub_10001457C((uint64_t)v16, &qword_1008132C0);
  sub_10001457C((uint64_t)v6, &qword_1008132B8);
  return sub_10001457C((uint64_t)v13, &qword_1008132C0);
}

uint64_t sub_1005EA860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v100 = type metadata accessor for Font.TextStyle();
  uint64_t v95 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v99 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for InsightsPreviousStreakView();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)sub_100010218(&qword_100813348);
  __chkstk_darwin(v7);
  uint64_t v98 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v97 = (_WORD *)((char *)&v84 - v10);
  __chkstk_darwin(v11);
  uint64_t v96 = (_WORD *)((char *)&v84 - v12);
  __chkstk_darwin(v13);
  uint64_t v101 = (uint64_t)&v84 - v14;
  uint64_t v15 = sub_100010218(&qword_100813350);
  __chkstk_darwin(v15 - 8);
  uint64_t v102 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v104 = (uint64_t)&v84 - v18;
  uint64_t v19 = sub_100010218(&qword_100813358);
  char v20 = (int *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v84 - v24;
  char v26 = *(unsigned char *)(a1 + 40);
  uint64_t v27 = swift_retain();
  sub_100666C70(v27, v26);
  swift_release();
  char v28 = sub_1004BB4F8();
  swift_release();
  *(_WORD *)uint64_t v22 = 512;
  void v22[2] = (v28 & 1) == 0;
  sub_100602508((uint64_t)&v22[v20[13]]);
  char v29 = &v22[v20[14]];
  char v106 = 0;
  State.init(wrappedValue:)();
  uint64_t v30 = v108;
  *char v29 = v107;
  *((void *)v29 + 1) = v30;
  uint64_t v31 = &v22[v20[15]];
  *(void *)uint64_t v31 = swift_getKeyPath();
  *((void *)v31 + 1) = 0;
  *((_WORD *)v31 + 8) = 0;
  uint64_t v32 = &v22[v20[16]];
  *(void *)uint64_t v32 = swift_getKeyPath();
  v32[8] = 0;
  uint64_t v33 = &v22[v20[17]];
  *(void *)uint64_t v33 = swift_getKeyPath();
  v33[8] = 0;
  AccessibilityFocusState.init<>()();
  uint64_t v103 = v25;
  sub_10002C4EC((uint64_t)v22, (uint64_t)v25, &qword_100813358);
  uint64_t v34 = swift_retain();
  sub_100666C70(v34, v26);
  swift_release();
  char v35 = sub_1004BB4F8();
  swift_release();
  if (v35)
  {
    uint64_t v36 = (uint64_t)v96;
    *uint64_t v96 = 257;
    *(unsigned char *)(v36 + 2) = 0;
    uint64_t v85 = v36 + v7[11];
    os_log_type_t v37 = &v6[v4[5]];
    uint64_t v38 = type metadata accessor for StreakSummary();
    uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
    id v93 = v39;
    v39(v37, 1, 1, v38);
    v39(&v6[v4[6]], 1, 1, v38);
    *uint64_t v6 = 0;
    long long v40 = (uint64_t *)&v6[v4[7]];
    *long long v40 = swift_getKeyPath();
    uint64_t v94 = sub_100010218(&qword_100813370);
    swift_storeEnumTagMultiPayload();
    id v41 = &v6[v4[8]];
    *(void *)id v41 = swift_getKeyPath();
    v41[8] = 0;
    uint64_t v42 = &v6[v4[9]];
    *(void *)uint64_t v42 = swift_getKeyPath();
    v42[8] = 0;
    char v43 = (uint64_t *)&v6[v4[10]];
    *char v43 = swift_getKeyPath();
    uint64_t v92 = sub_100010218(&qword_1008156E0);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = &v6[v4[11]];
    *(void *)uint64_t v44 = swift_getKeyPath();
    v44[8] = 0;
    uint64_t v45 = (uint64_t *)&v6[v4[12]];
    uint64_t *v45 = swift_getKeyPath();
    uint64_t v91 = sub_100010218(&qword_1007F9480);
    swift_storeEnumTagMultiPayload();
    id v46 = &v6[v4[13]];
    uint64_t v47 = type metadata accessor for InsightsDataManager(0);
    uint64_t v48 = sub_1005EC644((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    uint64_t v89 = v47;
    uint64_t v90 = v48;
    *(void *)id v46 = Environment.init<A>(_:)();
    v46[8] = v49 & 1;
    uint64_t v107 = 0x4046000000000000;
    unsigned int v88 = enum case for Font.TextStyle.title(_:);
    uint64_t v95 = *(void *)(v95 + 104);
    ((void (*)(char *))v95)(v99);
    unint64_t v87 = sub_1000DA83C();
    ScaledMetric.init(wrappedValue:relativeTo:)();
    uint64_t v86 = type metadata accessor for InsightsPreviousStreakView;
    sub_1005EC77C((uint64_t)v6, v85, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    uint64_t v50 = v36 + v7[12];
    char v106 = 0;
    State.init(wrappedValue:)();
    uint64_t v51 = v108;
    *(unsigned char *)uint64_t v50 = v107;
    *(void *)(v50 + 8) = v51;
    uint64_t v52 = v36 + v7[13];
    *(void *)uint64_t v52 = swift_getKeyPath();
    *(void *)(v52 + 8) = 0;
    *(_WORD *)(v52 + 16) = 0;
    uint64_t v53 = v36 + v7[14];
    *(void *)uint64_t v53 = swift_getKeyPath();
    *(unsigned char *)(v53 + 8) = 0;
    uint64_t v54 = v36 + v7[15];
    *(void *)uint64_t v54 = swift_getKeyPath();
    *(unsigned char *)(v54 + 8) = 0;
    AccessibilityFocusState.init<>()();
    sub_10002C4EC(v36, v101, &qword_100813348);
    uint64_t v55 = (uint64_t)v97;
    *unint64_t v97 = 258;
    *(unsigned char *)(v55 + 2) = 0;
    uint64_t v85 = v55 + v7[11];
    uint64_t v56 = v38;
    uint64_t v57 = v38;
    uint64_t v58 = v93;
    v93(&v6[v4[5]], 1, 1, v57);
    v58(&v6[v4[6]], 1, 1, v56);
    *uint64_t v6 = 1;
    uint64_t v59 = (uint64_t *)&v6[v4[7]];
    *uint64_t v59 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = &v6[v4[8]];
    *(void *)uint64_t v60 = swift_getKeyPath();
    v60[8] = 0;
    uint64_t v61 = &v6[v4[9]];
    *(void *)uint64_t v61 = swift_getKeyPath();
    v61[8] = 0;
    uint64_t v62 = (uint64_t *)&v6[v4[10]];
    *uint64_t v62 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = &v6[v4[11]];
    *(void *)uint64_t v63 = swift_getKeyPath();
    v63[8] = 0;
    uint64_t v64 = (uint64_t *)&v6[v4[12]];
    *uint64_t v64 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = &v6[v4[13]];
    *(void *)uint64_t v65 = Environment.init<A>(_:)();
    v65[8] = v66 & 1;
    uint64_t v107 = 0x4046000000000000;
    ((void (*)(char *, void, uint64_t))v95)(v99, v88, v100);
    ScaledMetric.init(wrappedValue:relativeTo:)();
    sub_1005EC77C((uint64_t)v6, v85, (uint64_t (*)(void))v86);
    uint64_t v67 = v55 + v7[12];
    char v106 = 0;
    State.init(wrappedValue:)();
    uint64_t v68 = v108;
    *(unsigned char *)uint64_t v67 = v107;
    *(void *)(v67 + 8) = v68;
    uint64_t v69 = v55 + v7[13];
    *(void *)uint64_t v69 = swift_getKeyPath();
    *(void *)(v69 + 8) = 0;
    *(_WORD *)(v69 + 16) = 0;
    uint64_t v70 = v55 + v7[14];
    *(void *)uint64_t v70 = swift_getKeyPath();
    *(unsigned char *)(v70 + 8) = 0;
    uint64_t v71 = v55 + v7[15];
    *(void *)uint64_t v71 = swift_getKeyPath();
    *(unsigned char *)(v71 + 8) = 0;
    AccessibilityFocusState.init<>()();
    sub_10002C4EC(v55, v36, &qword_100813348);
    uint64_t v72 = v101;
    sub_10001B220(v101, v55, &qword_100813348);
    uint64_t v73 = v98;
    sub_10001B220(v36, v98, &qword_100813348);
    uint64_t v74 = v102;
    sub_10001B220(v55, v102, &qword_100813348);
    uint64_t v75 = sub_100010218(&qword_100813378);
    sub_10001B220(v73, v74 + *(int *)(v75 + 48), &qword_100813348);
    sub_10001457C(v36, &qword_100813348);
    sub_10001457C(v72, &qword_100813348);
    sub_10001457C(v73, &qword_100813348);
    sub_10001457C(v55, &qword_100813348);
    uint64_t v76 = sub_100010218(&qword_100813360);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v74, 0, 1, v76);
    uint64_t v77 = v104;
    sub_10002C4EC(v74, v104, &qword_100813350);
    uint64_t v78 = v74;
  }
  else
  {
    uint64_t v79 = sub_100010218(&qword_100813360);
    uint64_t v77 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v104, 1, 1, v79);
    uint64_t v78 = v102;
  }
  uint64_t v80 = (uint64_t)v103;
  sub_10001B220((uint64_t)v103, (uint64_t)v22, &qword_100813358);
  sub_10001B220(v77, v78, &qword_100813350);
  uint64_t v81 = v105;
  sub_10001B220((uint64_t)v22, v105, &qword_100813358);
  uint64_t v82 = sub_100010218(&qword_100813368);
  sub_10001B220(v78, v81 + *(int *)(v82 + 48), &qword_100813350);
  sub_10001457C(v77, &qword_100813350);
  sub_10001457C(v80, &qword_100813358);
  sub_10001457C(v78, &qword_100813350);
  return sub_10001457C((uint64_t)v22, &qword_100813358);
}

uint64_t sub_1005EB3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v111 = sub_100010218(&qword_1008132E0);
  __chkstk_darwin(v111);
  uint64_t v4 = &v97[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v112 = &v97[-v6];
  uint64_t v108 = sub_100010218(&qword_1008132E8);
  __chkstk_darwin(v108);
  uint64_t v8 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v102 = &v97[-v10];
  uint64_t v105 = sub_100010218(&qword_1008132F0);
  __chkstk_darwin(v105);
  uint64_t v107 = &v97[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = sub_100010218(&qword_1008132F8);
  __chkstk_darwin(v106);
  uint64_t v100 = &v97[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v101 = &v97[-v14];
  uint64_t v15 = sub_100010218(&qword_100813300);
  __chkstk_darwin(v15 - 8);
  uint64_t v110 = &v97[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v109 = &v97[-v18];
  uint64_t v104 = (int *)sub_100010218(&qword_100813308);
  __chkstk_darwin(v104);
  char v20 = (int *)&v97[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  Swift::String v114 = &v97[-v22];
  uint64_t v23 = sub_100010218(&qword_100813310);
  __chkstk_darwin(v23 - 8);
  unint64_t v116 = &v97[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  uint64_t v27 = &v97[-v26];
  uint64_t v28 = sub_100010218(&qword_100813318);
  char v29 = (int *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = &v97[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t)&v97[-v33];
  *(_WORD *)uint64_t v31 = 771;
  v31[2] = 0;
  sub_100175C10((uint64_t *)&v31[v29[13]]);
  char v35 = &v31[v29[14]];
  char v124 = 0;
  State.init(wrappedValue:)();
  uint64_t v36 = v121;
  *char v35 = v120;
  *((void *)v35 + 1) = v36;
  os_log_type_t v37 = &v31[v29[15]];
  *(void *)os_log_type_t v37 = swift_getKeyPath();
  *((void *)v37 + 1) = 0;
  *((_WORD *)v37 + 8) = 0;
  uint64_t v38 = &v31[v29[16]];
  *(void *)uint64_t v38 = swift_getKeyPath();
  v38[8] = 0;
  uint64_t v39 = &v31[v29[17]];
  *(void *)uint64_t v39 = swift_getKeyPath();
  v39[8] = 0;
  AccessibilityFocusState.init<>()();
  uint64_t v115 = v34;
  sub_10002C4EC((uint64_t)v31, v34, &qword_100813318);
  int v40 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v41 = swift_retain();
  sub_100666C70(v41, v40);
  swift_release();
  LOBYTE(v34) = sub_1004BB6D0();
  swift_release();
  if (v34)
  {
    int v98 = v40;
    uint64_t v99 = v27;
    *(_WORD *)char v20 = 4;
    *((unsigned char *)v20 + 2) = 0;
    uint64_t v42 = v104;
    char v43 = (char *)v20 + v104[11];
    *(void *)char v43 = 0;
    v43[8] = 1;
    *((void *)v43 + 2) = 0;
    v43[24] = 1;
    *((void *)v43 + 4) = 0;
    v43[40] = 1;
    *((void *)v43 + 6) = swift_getKeyPath();
    v43[56] = 0;
    uint64_t v44 = (int *)type metadata accessor for InsightsJournaledDaysView();
    uint64_t v45 = (uint64_t *)&v43[v44[8]];
    uint64_t *v45 = swift_getKeyPath();
    sub_100010218(&qword_1007F9480);
    swift_storeEnumTagMultiPayload();
    id v46 = &v43[v44[9]];
    *(void *)id v46 = swift_getKeyPath();
    v46[8] = 0;
    uint64_t v47 = &v43[v44[10]];
    uint64_t v48 = type metadata accessor for InsightsDataManager(0);
    uint64_t v49 = sub_1005EC644((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    uint64_t v103 = v48;
    uint64_t v113 = v49;
    *(void *)uint64_t v47 = Environment.init<A>(_:)();
    v47[8] = v50 & 1;
    *(void *)&v43[v44[11]] = 0;
    uint64_t v51 = (char *)v20 + v42[12];
    char v124 = 0;
    State.init(wrappedValue:)();
    uint64_t v52 = v121;
    *uint64_t v51 = v120;
    *((void *)v51 + 1) = v52;
    uint64_t v53 = (char *)v20 + v42[13];
    *(void *)uint64_t v53 = swift_getKeyPath();
    *((void *)v53 + 1) = 0;
    *((_WORD *)v53 + 8) = 0;
    uint64_t v54 = (char *)v20 + v42[14];
    *(void *)uint64_t v54 = swift_getKeyPath();
    v54[8] = 0;
    uint64_t v55 = (char *)v20 + v42[15];
    *(void *)uint64_t v55 = swift_getKeyPath();
    v55[8] = 0;
    AccessibilityFocusState.init<>()();
    sub_10002C4EC((uint64_t)v20, (uint64_t)v114, &qword_100813308);
    uint64_t v122 = &type metadata for JournalFeatureFlags;
    unint64_t v123 = sub_10005F364();
    LOBYTE(v120) = 12;
    LOBYTE(v44) = isFeatureEnabled(_:)();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v120);
    uint64_t v104 = v20;
    if ((v44 & 1) == 0) {
      goto LABEL_6;
    }
    uint64_t v56 = swift_retain();
    uint64_t v57 = sub_100666C70(v56, v98);
    swift_release();
    swift_getKeyPath();
    uint64_t v120 = v57;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v58 = *(void *)(v57 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 24);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v59 = *(void *)(v58 + 16);
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v60 = (uint64_t)v100;
      *uint64_t v100 = 5;
      *(unsigned char *)(v60 + 2) = 0;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v62 = Environment.init<A>(_:)();
      *(void *)(v60 + 8) = 0;
      *(void *)(v60 + 16) = KeyPath;
      *(unsigned char *)(v60 + 24) = 0;
      *(void *)(v60 + 32) = v62;
      *(unsigned char *)(v60 + 40) = v63 & 1;
      *(void *)(v60 + 48) = 0;
      char v124 = 0;
      State.init(wrappedValue:)();
      uint64_t v64 = v121;
      *(unsigned char *)(v60 + 56) = v120;
      *(void *)(v60 + 64) = v64;
      *(void *)(v60 + 72) = swift_getKeyPath();
      *(void *)(v60 + 80) = 0;
      *(_WORD *)(v60 + 88) = 0;
      *(void *)(v60 + 96) = swift_getKeyPath();
      *(unsigned char *)(v60 + 104) = 0;
      *(void *)(v60 + 112) = swift_getKeyPath();
      *(unsigned char *)(v60 + 120) = 0;
      AccessibilityFocusState.init<>()();
      uint64_t v65 = v101;
      sub_10002C4EC(v60, (uint64_t)v101, &qword_1008132F8);
      sub_10001B220((uint64_t)v65, (uint64_t)v107, &qword_1008132F8);
      swift_storeEnumTagMultiPayload();
      sub_100014488(&qword_100813330, &qword_1008132F8);
      sub_100014488(&qword_100813338, &qword_1008132E8);
      uint64_t v66 = (uint64_t)v109;
      _ConditionalContent<>.init(storage:)();
      uint64_t v67 = (uint64_t)v65;
      uint64_t v68 = &qword_1008132F8;
    }
    else
    {
LABEL_6:
      *(_WORD *)uint64_t v8 = 6;
      v8[2] = 0;
      uint64_t v72 = swift_getKeyPath();
      uint64_t v73 = swift_getKeyPath();
      uint64_t v74 = Environment.init<A>(_:)();
      *((void *)v8 + 1) = 0;
      *((void *)v8 + 2) = v72;
      v8[24] = 0;
      *((void *)v8 + 4) = v73;
      v8[40] = 0;
      *((void *)v8 + 6) = v74;
      v8[56] = v75 & 1;
      *((void *)v8 + 8) = 0;
      char v124 = 0;
      State.init(wrappedValue:)();
      uint64_t v76 = v121;
      v8[72] = v120;
      *((void *)v8 + 10) = v76;
      *((void *)v8 + 11) = swift_getKeyPath();
      *((void *)v8 + 12) = 0;
      *((_WORD *)v8 + 52) = 0;
      *((void *)v8 + 14) = swift_getKeyPath();
      v8[120] = 0;
      *((void *)v8 + 16) = swift_getKeyPath();
      v8[136] = 0;
      AccessibilityFocusState.init<>()();
      uint64_t v77 = v102;
      sub_10002C4EC((uint64_t)v8, (uint64_t)v102, &qword_1008132E8);
      sub_10001B220((uint64_t)v77, (uint64_t)v107, &qword_1008132E8);
      swift_storeEnumTagMultiPayload();
      sub_100014488(&qword_100813330, &qword_1008132F8);
      sub_100014488(&qword_100813338, &qword_1008132E8);
      uint64_t v66 = (uint64_t)v109;
      _ConditionalContent<>.init(storage:)();
      uint64_t v67 = (uint64_t)v77;
      uint64_t v68 = &qword_1008132E8;
    }
    sub_10001457C(v67, v68);
    *(_WORD *)uint64_t v4 = 7;
    v4[2] = 0;
    LOBYTE(v120) = 1;
    char v124 = 1;
    char v119 = 1;
    uint64_t v78 = swift_getKeyPath();
    char v118 = 0;
    uint64_t v79 = swift_getKeyPath();
    uint64_t v80 = Environment.init<A>(_:)();
    char v81 = v120;
    char v82 = v124;
    char v83 = v119;
    char v84 = v118;
    *((void *)v4 + 1) = 0;
    v4[16] = v81;
    *((void *)v4 + 3) = 0;
    v4[32] = v82;
    *((void *)v4 + 5) = 0;
    v4[48] = v83;
    *((void *)v4 + 7) = v78;
    v4[64] = v84;
    *((void *)v4 + 9) = v79;
    v4[80] = 0;
    *((void *)v4 + 11) = v80;
    v4[96] = v85 & 1;
    *((void *)v4 + 13) = 0;
    char v124 = 0;
    State.init(wrappedValue:)();
    uint64_t v86 = v121;
    v4[112] = v120;
    *((void *)v4 + 15) = v86;
    *((void *)v4 + 16) = swift_getKeyPath();
    *((void *)v4 + 17) = 0;
    *((_WORD *)v4 + 72) = 0;
    *((void *)v4 + 19) = swift_getKeyPath();
    v4[160] = 0;
    *((void *)v4 + 21) = swift_getKeyPath();
    v4[176] = 0;
    AccessibilityFocusState.init<>()();
    unint64_t v87 = v112;
    sub_10002C4EC((uint64_t)v4, (uint64_t)v112, &qword_1008132E0);
    unsigned int v88 = v114;
    uint64_t v89 = (uint64_t)v104;
    sub_10001B220((uint64_t)v114, (uint64_t)v104, &qword_100813308);
    uint64_t v90 = v110;
    sub_10001B220(v66, (uint64_t)v110, &qword_100813300);
    sub_10001B220((uint64_t)v87, (uint64_t)v4, &qword_1008132E0);
    uint64_t v71 = v116;
    sub_10001B220(v89, (uint64_t)v116, &qword_100813308);
    uint64_t v91 = v66;
    uint64_t v92 = sub_100010218(&qword_100813340);
    sub_10001B220((uint64_t)v90, (uint64_t)&v71[*(int *)(v92 + 48)], &qword_100813300);
    sub_10001B220((uint64_t)v4, (uint64_t)&v71[*(int *)(v92 + 64)], &qword_1008132E0);
    sub_10001457C((uint64_t)v87, &qword_1008132E0);
    sub_10001457C(v91, &qword_100813300);
    sub_10001457C((uint64_t)v88, &qword_100813308);
    sub_10001457C((uint64_t)v4, &qword_1008132E0);
    sub_10001457C((uint64_t)v90, &qword_100813300);
    sub_10001457C(v89, &qword_100813308);
    uint64_t v93 = sub_100010218(&qword_100813320);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v71, 0, 1, v93);
    uint64_t v27 = v99;
    sub_10002C4EC((uint64_t)v71, (uint64_t)v99, &qword_100813310);
    uint64_t v70 = v117;
  }
  else
  {
    uint64_t v69 = sub_100010218(&qword_100813320);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v27, 1, 1, v69);
    uint64_t v71 = v116;
    uint64_t v70 = v117;
  }
  uint64_t v94 = v115;
  sub_10001B220(v115, (uint64_t)v31, &qword_100813318);
  sub_10001B220((uint64_t)v27, (uint64_t)v71, &qword_100813310);
  sub_10001B220((uint64_t)v31, v70, &qword_100813318);
  uint64_t v95 = sub_100010218(&qword_100813328);
  sub_10001B220((uint64_t)v71, v70 + *(int *)(v95 + 48), &qword_100813310);
  sub_10001457C((uint64_t)v27, &qword_100813310);
  sub_10001457C(v94, &qword_100813318);
  sub_10001457C((uint64_t)v71, &qword_100813310);
  return sub_10001457C((uint64_t)v31, &qword_100813318);
}

uint64_t sub_1005EC168@<X0>(uint64_t a1@<X8>)
{
  return sub_1005EA098(a1);
}

uint64_t sub_1005EC1AC@<X0>(uint64_t a1@<X8>)
{
  sub_1005EC5C8();
  uint64_t result = EnvironmentValues.subscript.getter();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_1005EC208@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EC694(a1, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for WidgetFamily();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 3, v7);
  if ((result - 2) >= 2)
  {
    if (!result) {
      uint64_t result = sub_1005EC6F8((uint64_t)v6);
    }
    char v9 = 0;
  }
  else
  {
    char v9 = 1;
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1005EC2EC()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1005EC310(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedactionReasons();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.redactionReasons.setter();
}

uint64_t sub_1005EC3E0()
{
  return swift_deallocObject();
}

unint64_t sub_1005EC3F0()
{
  unint64_t result = qword_100813278;
  if (!qword_100813278)
  {
    sub_100014440(&qword_100813248);
    sub_1005EC490();
    sub_100014488((unint64_t *)&qword_1007FCBC0, &qword_1007FCBC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813278);
  }
  return result;
}

unint64_t sub_1005EC490()
{
  unint64_t result = qword_100813280;
  if (!qword_100813280)
  {
    sub_100014440(&qword_100813240);
    sub_1005EC530();
    sub_100014488(&qword_1008132A0, &qword_1008132A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813280);
  }
  return result;
}

unint64_t sub_1005EC530()
{
  unint64_t result = qword_100813288;
  if (!qword_100813288)
  {
    sub_100014440(&qword_100813238);
    sub_100014488(&qword_100813290, &qword_100813298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813288);
  }
  return result;
}

unint64_t sub_1005EC5C8()
{
  unint64_t result = qword_1008132B0;
  if (!qword_1008132B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008132B0);
  }
  return result;
}

uint64_t sub_1005EC644(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005EC694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005EC6F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InsightsFamily();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005EC754()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1005EC77C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005EC7E4()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for InsightID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005EC90CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightID()
{
  return &type metadata for InsightID;
}

unint64_t sub_1005EC948()
{
  unint64_t result = qword_100813398;
  if (!qword_100813398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813398);
  }
  return result;
}

uint64_t sub_1005EC99C()
{
  sub_1005EC5C8();
  EnvironmentValues.subscript.getter();
  return v1;
}

ValueMetadata *type metadata accessor for SelectedInsightKey()
{
  return &type metadata for SelectedInsightKey;
}

uint64_t sub_1005EC9EC()
{
  return static Binding.constant(_:)();
}

uint64_t sub_1005ECA30@<X0>(uint64_t a1@<X8>)
{
  if (qword_1007F7EB8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_100813388;
  char v3 = byte_100813390;
  *(void *)a1 = qword_100813380;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  swift_retain();

  return swift_retain();
}

uint64_t getEnumTagSinglePayload for InsightsMosaicLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsMosaicLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsMosaicLayout()
{
  return &type metadata for InsightsMosaicLayout;
}

uint64_t sub_1005ECB5C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v235) = a2;
  uint64_t v5 = type metadata accessor for InsightsMosaicLayout.Row();
  uint64_t v233 = *(void *)(v5 - 8);
  uint64_t v234 = v5;
  __chkstk_darwin(v5);
  uint64_t v237 = (uint64_t)&v192 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v218 = (char *)&v192 - v8;
  __chkstk_darwin(v9);
  uint64_t v217 = (uint64_t)&v192 - v10;
  __chkstk_darwin(v11);
  uint64_t v215 = (uint64_t)&v192 - v12;
  __chkstk_darwin(v13);
  uint64_t v216 = (uint64_t)&v192 - v14;
  __chkstk_darwin(v15);
  v222 = (char *)&v192 - v16;
  __chkstk_darwin(v17);
  v204 = (char *)&v192 - v18;
  __chkstk_darwin(v19);
  v200 = (char *)&v192 - v20;
  __chkstk_darwin(v21);
  unint64_t v203 = (unint64_t)&v192 - v22;
  __chkstk_darwin(v23);
  uint64_t v207 = (uint64_t)&v192 - v24;
  __chkstk_darwin(v25);
  uint64_t v206 = (uint64_t)&v192 - v26;
  uint64_t v27 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v27 - 8);
  uint64_t v220 = (uint64_t)&v192 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v221 = (uint64_t)&v192 - v30;
  __chkstk_darwin(v31);
  unint64_t v227 = (unint64_t)&v192 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t)&v192 - v34;
  __chkstk_darwin(v36);
  v223 = (char *)&v192 - v37;
  __chkstk_darwin(v38);
  uint64_t v202 = (uint64_t)&v192 - v39;
  __chkstk_darwin(v40);
  v224 = (uint64_t *)((char *)&v192 - v41);
  __chkstk_darwin(v42);
  v229 = (unint64_t *)((char *)&v192 - v43);
  __chkstk_darwin(v44);
  uint64_t v226 = (uint64_t)&v192 - v45;
  __chkstk_darwin(v46);
  v232 = (char *)&v192 - v47;
  uint64_t v48 = type metadata accessor for LayoutSubview();
  int64_t v49 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  v236 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v192 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v51);
  unint64_t v53 = (unint64_t)&v192 - v52;
  __chkstk_darwin(v54);
  v219 = (char *)&v192 - v55;
  __chkstk_darwin(v56);
  uint64_t v58 = (char *)&v192 - v57;
  __chkstk_darwin(v59);
  uint64_t v201 = (char *)&v192 - v60;
  __chkstk_darwin(v61);
  v208 = (char *)&v192 - v62;
  __chkstk_darwin(v63);
  v225 = (void (**)(char *, uint64_t, uint64_t))((char *)&v192 - v64);
  uint64_t v65 = (char *)type metadata accessor for LayoutSubviews();
  __n128 v68 = __chkstk_darwin(v65);
  if ((v235 & 1) == 0)
  {
    unint64_t v214 = v53;
    uint64_t v213 = a3;
    (*(void (**)(char *, uint64_t, char *, __n128))(v67 + 16))((char *)&v192 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v65, v68);
    uint64_t v87 = sub_1005EEB24();
    if (*(void *)(v87 + 16) && (unint64_t v88 = sub_10001BED8(0), (v89 & 1) != 0))
    {
      uint64_t v90 = *(void *)(*(void *)(v87 + 56) + 8 * v88);
      uint64_t v237 = *(void *)(v90 + 16);
      uint64_t v91 = *(unsigned __int8 *)(v49 + 80);
      v228 = (char *)(v90 + ((v91 + 32) & ~v91));
      v197 = (double *)v90;
      swift_bridgeObjectRetain();
      if (!*(void *)(v87 + 16)) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v237 = 0;
      uint64_t v91 = *(unsigned __int8 *)(v49 + 80);
      v228 = (char *)_swiftEmptyArrayStorage + ((v91 + 32) & ~v91);
      v197 = _swiftEmptyArrayStorage;
      if (!*(void *)(v87 + 16)) {
        goto LABEL_19;
      }
    }
    unint64_t v92 = sub_10001BED8(1u);
    if (v93)
    {
      uint64_t v94 = *(void *)(*(void *)(v87 + 56) + 8 * v92);
      uint64_t v65 = (char *)(v94 + ((v91 + 32) & ~(unint64_t)v91));
      unint64_t v73 = (2 * *(void *)(v94 + 16)) | 1;
      v212 = (double *)v94;
      swift_bridgeObjectRetain();
      if (!*(void *)(v87 + 16)) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v65 = (char *)_swiftEmptyArrayStorage + ((v91 + 32) & ~(unint64_t)v91);
    unint64_t v73 = 1;
    v212 = _swiftEmptyArrayStorage;
    if (!*(void *)(v87 + 16)) {
      goto LABEL_23;
    }
LABEL_20:
    unint64_t v95 = sub_10001BED8(2u);
    if (v96)
    {
      uint64_t v97 = *(void *)(*(void *)(v87 + 56) + 8 * v95);
      uint64_t v98 = *(void *)(v97 + 16);
      CGRect v205 = (char *)(v97 + ((v91 + 32) & ~(unint64_t)v91));
      unint64_t v235 = (2 * v98) | 1;
      v211 = (double *)v97;
      swift_bridgeObjectRetain();
      if (!*(void *)(v87 + 16)) {
        goto LABEL_26;
      }
LABEL_24:
      unint64_t v99 = sub_10001BED8(3u);
      if (v100)
      {
        uint64_t v101 = *(void *)(*(void *)(v87 + 56) + 8 * v99);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v102 = *(void *)(v101 + 16);
        v210 = (double *)v101;
        id v199 = (char *)(v101 + ((v91 + 32) & ~(unint64_t)v91));
        uint64_t v198 = (2 * v102) | 1;
LABEL_27:
        v239 = _swiftEmptyArrayStorage;
        long long v240 = 0u;
        long long v241 = 0u;
        long long v242 = 0u;
        uint64_t v243 = 0;
        v230 = v58;
        uint64_t v231 = v35;
        uint64_t v103 = (uint64_t)v232;
        int64_t v209 = v49;
        if (v73 == 1)
        {
          v236 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
          v236(v232, 1, 1, v48);
        }
        else
        {
          unint64_t v196 = v73;
          uint64_t v106 = *(void *)(v49 + 72);
          uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
          v107(v232, v65, v48);
          v236 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
          v236((char *)v103, 0, 1, v48);
          uint64_t v108 = *(unsigned int (**)(void (**)(void, void), uint64_t, uint64_t))(v49 + 48);
          if (v108((void (**)(void, void))v103, 1, v48) != 1)
          {
            uint64_t v193 = v106;
            v195 = v65;
            v194 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
            v194((char *)v225, v103, v48);
            if (v235 == 1)
            {
              uint64_t v110 = 1;
              unint64_t v111 = v196;
              uint64_t v109 = v226;
            }
            else
            {
              uint64_t v109 = v226;
              v107((char *)v226, v205, v48);
              uint64_t v110 = 0;
              unint64_t v111 = v196;
            }
            uint64_t v112 = 1;
            v236((char *)v109, v110, 1, v48);
            uint64_t v113 = (void (*)(uint64_t, char *, uint64_t))v107;
            if ((v111 & 0xFFFFFFFFFFFFFFFELL) != 2)
            {
              v107((char *)v229, &v195[v193], v48);
              uint64_t v112 = 0;
            }
            v232 = (char *)(v111 >> 1);
            v236((char *)v229, v112, 1, v48);
            Swift::String v114 = (void (**)(void, void))v224;
            sub_1005F18BC(v226, (uint64_t)v224);
            if (v108(v114, 1, v48) == 1)
            {
              sub_10001457C((uint64_t)v114, &qword_1007FD208);
            }
            else
            {
              uint64_t v115 = v208;
              v194(v208, (uint64_t)v114, v48);
              sub_1005F19E4();
              LayoutSubview.subscript.getter();
              if (v238 == 1)
              {
                uint64_t v116 = *(int *)(sub_100010218(&qword_1008133D8) + 48);
                uint64_t v117 = v206;
                v113(v206, v115, v48);
                *(void *)(v117 + v116) = 0;
                swift_storeEnumTagMultiPayload();
                unint64_t v118 = sub_1002A74DC(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
                unint64_t v120 = *(void *)(v118 + 16);
                unint64_t v119 = *(void *)(v118 + 24);
                if (v120 >= v119 >> 1) {
                  unint64_t v118 = sub_1002A74DC(v119 > 1, v120 + 1, 1, v118);
                }
                int64_t v49 = v209;
                uint64_t v65 = v195;
                *(void *)(v118 + 16) = v120 + 1;
                v224 = (uint64_t *)((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80));
                unint64_t v69 = *(void *)(v233 + 72);
                sub_1005F1A54(v206, (uint64_t)v224 + v118 + v69 * v120);
                v239 = (double *)v118;
                uint64_t v121 = sub_100010218(&qword_1008133D0);
                uint64_t v122 = v207 + *(int *)(v121 + 48);
                unint64_t v123 = (double (**)(uint64_t))(v207 + *(int *)(v121 + 64));
                v113(v207, (char *)v225, v48);
                sub_1005F18BC((uint64_t)v229, v122);
                uint64_t KeyPath = swift_getKeyPath();
                *unint64_t v123 = sub_1005F1A38;
                v123[1] = (double (*)(uint64_t))KeyPath;
                swift_storeEnumTagMultiPayload();
                a3 = (uint64_t)v239;
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  a3 = sub_1002A74DC(0, *(void *)(a3 + 16) + 1, 1, a3);
                }
                uint64_t v58 = v230;
                uint64_t v35 = v231;
                unint64_t v126 = *(void *)(a3 + 16);
                unint64_t v125 = *(void *)(a3 + 24);
                a1 = v126 + 1;
                if (v126 >= v125 >> 1) {
                  a3 = sub_1002A74DC(v125 > 1, v126 + 1, 1, a3);
                }
                *(void *)(a3 + 16) = a1;
                sub_1005F1A54(v207, (uint64_t)v224 + a3 + v126 * v69);
                swift_release();
                v239 = (double *)a3;
                (*(void (**)(char *, uint64_t))(v49 + 8))(v208, v48);
                unint64_t v73 = (unint64_t)v225;
                goto LABEL_67;
              }
              (*(void (**)(char *, uint64_t))(v209 + 8))(v115, v48);
            }
            sub_1005F19E4();
            unint64_t v73 = (unint64_t)v225;
            LayoutSubview.subscript.getter();
            if (v238 == 1)
            {
              uint64_t v127 = sub_100010218(&qword_1008133C0);
              unint64_t v69 = v203;
              uint64_t v128 = v203 + *(int *)(v127 + 48);
              unint64_t v129 = v203 + *(int *)(v127 + 64);
              sub_1005F18BC(v226, v203);
              sub_1005F18BC((uint64_t)v229, v128);
              v113(v129, (char *)v73, v48);
              swift_storeEnumTagMultiPayload();
              a1 = (uint64_t)v239;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                a1 = sub_1002A74DC(0, *(void *)(a1 + 16) + 1, 1, a1);
              }
              uint64_t v58 = v230;
              uint64_t v35 = v231;
              int64_t v49 = v209;
              uint64_t v65 = v195;
            }
            else
            {
              uint64_t v130 = v202;
              sub_1005F18BC((uint64_t)v229, v202);
              if (v108((void (**)(void, void))v130, 1, v48) == 1)
              {
                sub_10001457C(v130, &qword_1007FD208);
                int64_t v49 = v209;
                unint64_t v73 = (unint64_t)v225;
                uint64_t v65 = v195;
                uint64_t v131 = v226;
                unint64_t v69 = (unint64_t)v204;
              }
              else
              {
                NSString v132 = v201;
                v194(v201, v130, v48);
                LayoutSubview.subscript.getter();
                uint64_t v131 = v226;
                unint64_t v69 = (unint64_t)v204;
                if (v238 == 1)
                {
                  uint64_t v133 = sub_100010218(&qword_1008133C0);
                  unint64_t v69 = (unint64_t)v200;
                  uint64_t v134 = (uint64_t)&v200[*(int *)(v133 + 48)];
                  uint64_t v135 = &v200[*(int *)(v133 + 64)];
                  uint64_t v136 = v132;
                  unint64_t v73 = (unint64_t)v225;
                  v113((uint64_t)v200, (char *)v225, v48);
                  v236((char *)v69, 0, 1, v48);
                  sub_1005F18BC(v131, v134);
                  v113((uint64_t)v135, v136, v48);
                  swift_storeEnumTagMultiPayload();
                  a1 = (uint64_t)v239;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v65 = v195;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    a1 = sub_1002A74DC(0, *(void *)(a1 + 16) + 1, 1, a1);
                  }
                  uint64_t v58 = v230;
                  uint64_t v35 = v231;
                  unint64_t v139 = *(void *)(a1 + 16);
                  unint64_t v138 = *(void *)(a1 + 24);
                  a3 = v139 + 1;
                  int64_t v49 = v209;
                  if (v139 >= v138 >> 1) {
                    a1 = sub_1002A74DC(v138 > 1, v139 + 1, 1, a1);
                  }
                  *(void *)(a1 + 16) = a3;
                  sub_1005F1A54(v69, a1+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v139);
                  v239 = (double *)a1;
                  (*(void (**)(char *, uint64_t))(v49 + 8))(v201, v48);
                  goto LABEL_67;
                }
                int64_t v49 = v209;
                (*(void (**)(char *, uint64_t))(v209 + 8))(v132, v48);
                unint64_t v73 = (unint64_t)v225;
                uint64_t v65 = v195;
              }
              uint64_t v140 = sub_100010218(&qword_1008133C8);
              unint64_t v141 = v69 + *(int *)(v140 + 48);
              uint64_t v142 = v69 + *(int *)(v140 + 64);
              sub_1005F18BC(v131, v69);
              v113(v141, (char *)v73, v48);
              sub_1005F18BC((uint64_t)v229, v142);
              swift_storeEnumTagMultiPayload();
              a1 = (uint64_t)v239;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                a1 = sub_1002A74DC(0, *(void *)(a1 + 16) + 1, 1, a1);
              }
              uint64_t v58 = v230;
              uint64_t v35 = v231;
            }
            unint64_t v53 = *(void *)(a1 + 16);
            int64_t v74 = *(void *)(a1 + 24);
            a3 = v53 + 1;
            if (v53 < (unint64_t)v74 >> 1) {
              goto LABEL_66;
            }
            goto LABEL_145;
          }
          uint64_t v58 = v230;
          uint64_t v35 = v231;
          unint64_t v73 = v196;
        }
        sub_10001457C(v103, &qword_1007FD208);
        unint64_t v53 = 0;
        unint64_t v69 = 0;
        while (1)
        {
          sub_100010218(&qword_1008133E0);
          uint64_t v143 = swift_allocObject();
          *(_OWORD *)(v143 + 16) = xmmword_1006D7C30;
          uint64_t v144 = v205;
          *(void *)(v143 + 32) = v211;
          *(void *)(v143 + 40) = v144;
          unint64_t v145 = v235;
          *(void *)(v143 + 48) = v69;
          *(void *)(v143 + 56) = v145;
          *(void *)(v143 + 64) = v212;
          *(void *)(v143 + 72) = v65;
          *(void *)(v143 + 80) = v53;
          *(void *)(v143 + 88) = v73;
          uint64_t v146 = v199;
          *(void *)(v143 + 96) = v210;
          *(void *)(v143 + 104) = v146;
          uint64_t v147 = v198;
          *(void *)(v143 + 112) = 0;
          *(void *)(v143 + 120) = v147;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          sub_1000C940C(v143, (void (*)(char *))sub_1005EF194, 0);
          unint64_t v69 = v227;
          uint64_t v148 = v237;
          if (!v237)
          {
LABEL_130:
            a1 = (uint64_t)v223;
            v236(v223, 1, 1, v48);
LABEL_131:
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t result = sub_10001457C(a1, &qword_1007FD208);
            unint64_t v73 = (unint64_t)v239;
            long long v71 = v240;
            long long v104 = v241;
            long long v105 = v242;
            uint64_t v72 = v243;
            a3 = v213;
            goto LABEL_132;
          }
          int64_t v49 = 0;
          a3 = v209 + 16;
          v232 = *(char **)(v209 + 16);
          unint64_t v235 = v209 + 56;
          uint64_t v226 = *(void *)(v209 + 72);
          v229 = (unint64_t *)(v209 + 48);
          v225 = (void (**)(char *, uint64_t, uint64_t))(v209 + 32);
          v224 = (uint64_t *)(v209 + 8);
          while (1)
          {
            unint64_t v53 = v148 - v49;
            BOOL v149 = v148 <= v49;
            int64_t v74 = (int64_t)&v246;
            a1 = (uint64_t)v223;
            if (v149) {
              break;
            }
            ((void (*)(char *, char *, uint64_t))v232)(v223, &v228[v226 * v49], v48);
            v236((char *)a1, 0, 1, v48);
            unint64_t v73 = *v229;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v229)(a1, 1, v48) == 1) {
              goto LABEL_131;
            }
            uint64_t v65 = (char *)*v225;
            (*v225)(v58, a1, v48);
            int64_t v74 = v49 + 1;
            if (v49 + 1 == v237)
            {
              uint64_t v150 = 1;
            }
            else
            {
              if (v49 + 1 >= v237) {
                goto LABEL_138;
              }
              ((void (*)(uint64_t, char *, uint64_t))v232)(v35, &v228[v226 * v74], v48);
              uint64_t v150 = 0;
            }
            v236((char *)v35, v150, 1, v48);
            int64_t v74 = v237;
            if (v53 >= 2)
            {
              int64_t v74 = v49 + 2;
              if (__OFADD__(v49, 2)) {
                goto LABEL_139;
              }
            }
            if (v237 < v74) {
              goto LABEL_134;
            }
            if (v74 < v49) {
              goto LABEL_135;
            }
            if (v74 == v237)
            {
              uint64_t v151 = 1;
            }
            else
            {
              if (v74 >= v237) {
                goto LABEL_140;
              }
              ((void (*)(unint64_t, char *, uint64_t))v232)(v69, &v228[v74 * v226], v48);
              uint64_t v151 = 0;
            }
            v236((char *)v69, v151, 1, v48);
            sub_1005F19E4();
            uint64_t v152 = v69;
            id v153 = v230;
            LayoutSubview.subscript.getter();
            if (v238 == 1)
            {
              uint64_t v154 = sub_100010218(&qword_1008133B0);
              uint64_t v155 = (uint64_t)&v222[*(int *)(v154 + 48)];
              uint64_t v156 = (uint64_t)&v222[*(int *)(v154 + 64)];
              ((void (*)(char *, char *, uint64_t))v232)(v222, v153, v48);
              sub_1005F18BC(v231, v155);
              sub_1005F18BC(v152, v156);
              swift_storeEnumTagMultiPayload();
              unint64_t v157 = (unint64_t)v239;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v157 = sub_1002A74DC(0, *(void *)(v157 + 16) + 1, 1, v157);
              }
              unint64_t v73 = *(void *)(v157 + 16);
              unint64_t v158 = *(void *)(v157 + 24);
              uint64_t v58 = v230;
              uint64_t v35 = v231;
              if (v73 >= v158 >> 1) {
                unint64_t v157 = sub_1002A74DC(v158 > 1, v73 + 1, 1, v157);
              }
              *(void *)(v157 + 16) = v73 + 1;
              uint64_t v159 = v157
                   + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))
                   + *(void *)(v233 + 72) * v73;
              uint64_t v160 = &v245;
LABEL_124:
              sub_1005F1A54(*(v160 - 32), v159);
              v239 = (double *)v157;
              goto LABEL_125;
            }
            uint64_t v161 = v221;
            sub_1005F18BC(v231, v221);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73)(v161, 1, v48) == 1)
            {
              sub_10001457C(v161, &qword_1007FD208);
            }
            else
            {
              uint64_t v162 = v219;
              ((void (*)(char *, uint64_t, uint64_t))v65)(v219, v161, v48);
              LayoutSubview.subscript.getter();
              if (v238 == 1)
              {
                uint64_t v163 = sub_100010218(&qword_1008133A8);
                uint64_t v164 = v216;
                uint64_t v165 = v216 + *(int *)(v163 + 48);
                uint64_t v166 = v216 + *(int *)(v163 + 64);
                uint64_t v167 = (void (*)(uint64_t, char *, uint64_t))v232;
                ((void (*)(uint64_t, char *, uint64_t))v232)(v216, v230, v48);
                v236((char *)v164, 0, 1, v48);
                sub_1005F18BC(v227, v165);
                v167(v166, v162, v48);
                swift_storeEnumTagMultiPayload();
                unint64_t v168 = (unint64_t)v239;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v168 = sub_1002A74DC(0, *(void *)(v168 + 16) + 1, 1, v168);
                }
                uint64_t v58 = v230;
                uint64_t v35 = v231;
                unint64_t v73 = *(void *)(v168 + 16);
                unint64_t v169 = *(void *)(v168 + 24);
                if (v73 >= v169 >> 1) {
                  unint64_t v168 = sub_1002A74DC(v169 > 1, v73 + 1, 1, v168);
                }
                *(void *)(v168 + 16) = v73 + 1;
                sub_1005F1A54(v216, v168+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v73);
                v239 = (double *)v168;
                ((void (*)(char *, uint64_t))*v224)(v219, v48);
                goto LABEL_125;
              }
              ((void (*)(char *, uint64_t))*v224)(v162, v48);
            }
            uint64_t v170 = v220;
            sub_1005F18BC(v227, v220);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73)(v170, 1, v48) == 1)
            {
              sub_10001457C(v170, &qword_1007FD208);
            }
            else
            {
              unint64_t v171 = v214;
              ((void (*)(unint64_t, uint64_t, uint64_t))v65)(v214, v170, v48);
              LayoutSubview.subscript.getter();
              if (v238 == 1)
              {
                uint64_t v172 = sub_100010218(&qword_1008133A8);
                uint64_t v173 = v215;
                uint64_t v174 = v215 + *(int *)(v172 + 48);
                uint64_t v175 = v215 + *(int *)(v172 + 64);
                uint64_t v65 = v232;
                ((void (*)(uint64_t, char *, uint64_t))v232)(v215, v230, v48);
                v236((char *)v173, 0, 1, v48);
                uint64_t v35 = v231;
                sub_1005F18BC(v231, v174);
                ((void (*)(uint64_t, unint64_t, uint64_t))v65)(v175, v171, v48);
                swift_storeEnumTagMultiPayload();
                unint64_t v176 = (unint64_t)v239;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v176 = sub_1002A74DC(0, *(void *)(v176 + 16) + 1, 1, v176);
                }
                unint64_t v73 = *(void *)(v176 + 16);
                unint64_t v177 = *(void *)(v176 + 24);
                uint64_t v58 = v230;
                if (v73 >= v177 >> 1) {
                  unint64_t v176 = sub_1002A74DC(v177 > 1, v73 + 1, 1, v176);
                }
                *(void *)(v176 + 16) = v73 + 1;
                sub_1005F1A54(v215, v176+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v73);
                v239 = (double *)v176;
                ((void (*)(unint64_t, uint64_t))*v224)(v214, v48);
                goto LABEL_125;
              }
              ((void (*)(unint64_t, uint64_t))*v224)(v171, v48);
            }
            uint64_t v58 = v230;
            uint64_t v178 = v227;
            if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))v73)(v227, 1, v48) != 1)
            {
              uint64_t v187 = sub_100010218(&qword_1008133B8);
              unint64_t v188 = v218;
              uint64_t v189 = (uint64_t)&v218[*(int *)(v187 + 48)];
              uint64_t v190 = (uint64_t)&v218[*(int *)(v187 + 64)];
              ((void (*)(char *, char *, uint64_t))v232)(v218, v58, v48);
              v236(v188, 0, 1, v48);
              sub_1005F18BC(v231, v189);
              sub_1005F18BC(v178, v190);
              swift_storeEnumTagMultiPayload();
              unint64_t v157 = (unint64_t)v239;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v157 = sub_1002A74DC(0, *(void *)(v157 + 16) + 1, 1, v157);
              }
              unint64_t v73 = *(void *)(v157 + 16);
              unint64_t v191 = *(void *)(v157 + 24);
              uint64_t v35 = v231;
              if (v73 >= v191 >> 1) {
                unint64_t v157 = sub_1002A74DC(v191 > 1, v73 + 1, 1, v157);
              }
              *(void *)(v157 + 16) = v73 + 1;
              uint64_t v159 = v157
                   + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))
                   + *(void *)(v233 + 72) * v73;
              uint64_t v160 = &v244;
              goto LABEL_124;
            }
            uint64_t v179 = sub_100010218(&qword_1008133D0);
            uint64_t v180 = v217 + *(int *)(v179 + 48);
            int64_t v181 = (double (**)(uint64_t))(v217 + *(int *)(v179 + 64));
            ((void (*)(uint64_t, char *, uint64_t))v232)(v217, v58, v48);
            sub_1005F18BC(v231, v180);
            uint64_t v182 = swift_getKeyPath();
            *int64_t v181 = sub_1005F1A38;
            v181[1] = (double (*)(uint64_t))v182;
            swift_storeEnumTagMultiPayload();
            unint64_t v183 = (unint64_t)v239;
            swift_retain();
            uint64_t v184 = v48;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v183 = sub_1002A74DC(0, *(void *)(v183 + 16) + 1, 1, v183);
            }
            unint64_t v186 = *(void *)(v183 + 16);
            unint64_t v185 = *(void *)(v183 + 24);
            unint64_t v73 = v186 + 1;
            if (v186 >= v185 >> 1) {
              unint64_t v183 = sub_1002A74DC(v185 > 1, v186 + 1, 1, v183);
            }
            *(void *)(v183 + 16) = v73;
            sub_1005F1A54(v217, v183+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v186);
            swift_release();
            v239 = (double *)v183;
            uint64_t v48 = v184;
            uint64_t v35 = v231;
LABEL_125:
            int64_t v74 = v237;
            a1 = v237;
            unint64_t v69 = v227;
            if (v53 >= 3)
            {
              a1 = v49 + 3;
              if (__OFADD__(v49, 3)) {
                goto LABEL_141;
              }
            }
            if (v237 < a1) {
              goto LABEL_136;
            }
            if (a1 < v49) {
              goto LABEL_137;
            }
            sub_10001457C(v35, &qword_1007FD208);
            ((void (*)(char *, uint64_t))*v224)(v58, v48);
            sub_10001457C(v69, &qword_1007FD208);
            uint64_t v148 = v237;
            int64_t v49 = a1;
            if (a1 == v237) {
              goto LABEL_130;
            }
          }
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          do
          {
            __break(1u);
LABEL_145:
            a1 = sub_1002A74DC((unint64_t)v74 > 1, a3, 1, a1);
LABEL_66:
            *(void *)(a1 + 16) = a3;
            sub_1005F1A54(v69, a1+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v53);
            v239 = (double *)a1;
LABEL_67:
            int64_t v74 = 2;
            if (v196 >= 4) {
              unint64_t v53 = 2;
            }
            else {
              unint64_t v53 = (unint64_t)v232;
            }
            if ((unint64_t)v232 < v53) {
              goto LABEL_143;
            }
            int64_t v74 = v235 >> 1;
            unint64_t v69 = v235 != 1;
          }
          while (v235 >> 1 < v69);
          sub_10001457C((uint64_t)v229, &qword_1007FD208);
          sub_10001457C(v226, &qword_1007FD208);
          (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v73, v48);
          unint64_t v73 = v196;
        }
      }
LABEL_26:
      swift_bridgeObjectRelease();
      id v199 = (char *)_swiftEmptyArrayStorage + ((v91 + 32) & ~(unint64_t)v91);
      uint64_t v198 = 1;
      v210 = _swiftEmptyArrayStorage;
      goto LABEL_27;
    }
LABEL_23:
    CGRect v205 = (char *)_swiftEmptyArrayStorage + ((v91 + 32) & ~(unint64_t)v91);
    unint64_t v235 = 1;
    v211 = _swiftEmptyArrayStorage;
    if (!*(void *)(v87 + 16)) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  unint64_t v69 = sub_1005F1AE4((unint64_t *)&qword_10080C8B8);
  uint64_t result = dispatch thunk of Collection.count.getter();
  long long v71 = 0uLL;
  uint64_t v72 = 0;
  unint64_t v73 = (unint64_t)_swiftEmptyArrayStorage;
  if (result)
  {
    uint64_t v35 = result;
    uint64_t v58 = (char *)a1;
    v238 = _swiftEmptyArrayStorage;
    sub_100096024(0, result & ~(result >> 63), 0);
    dispatch thunk of Collection.startIndex.getter();
    if (v35 < 0) {
      goto LABEL_142;
    }
    unint64_t v235 = v48;
    uint64_t v213 = a3;
    char v75 = (void (**)(char *))(v49 + 16);
    v232 = (char *)(v49 + 8);
    uint64_t v76 = (char *)v236;
    uint64_t v77 = v237;
    do
    {
      uint64_t v78 = v65;
      uint64_t v79 = v58;
      uint64_t v80 = v78;
      char v81 = (void (*)(double **, void))dispatch thunk of Collection.subscript.read();
      char v82 = *v75;
      unint64_t v83 = v235;
      (*v75)(v76);
      v81(&v239, 0);
      uint64_t v84 = *(int *)(sub_100010218(&qword_1008133D8) + 48);
      ((void (*)(uint64_t, char *, unint64_t))v82)(v77, v76, v83);
      *(void *)(v77 + v84) = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, unint64_t))v232)(v76, v83);
      unint64_t v73 = (unint64_t)v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100096024(0, *(void *)(v73 + 16) + 1, 1);
        unint64_t v73 = (unint64_t)v238;
      }
      unint64_t v86 = *(void *)(v73 + 16);
      unint64_t v85 = *(void *)(v73 + 24);
      if (v86 >= v85 >> 1)
      {
        sub_100096024(v85 > 1, v86 + 1, 1);
        unint64_t v73 = (unint64_t)v238;
      }
      *(void *)(v73 + 16) = v86 + 1;
      uint64_t v77 = v237;
      sub_1005F1A54(v237, v73+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v86);
      uint64_t v58 = v79;
      uint64_t v65 = v80;
      uint64_t result = dispatch thunk of Collection.formIndex(after:)();
      --v35;
    }
    while (v35);
    long long v104 = 0uLL;
    long long v105 = 0uLL;
    a3 = v213;
    long long v71 = 0uLL;
  }
  else
  {
    long long v104 = 0uLL;
    long long v105 = 0uLL;
  }
LABEL_132:
  *(void *)a3 = v73;
  *(_OWORD *)(a3 + 8) = v71;
  *(_OWORD *)(a3 + 24) = v104;
  *(_OWORD *)(a3 + 40) = v105;
  *(void *)(a3 + 56) = v72;
  return result;
}

uint64_t sub_1005EEB24()
{
  uint64_t v0 = type metadata accessor for LayoutSubview();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v58 = &v47[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v62 = &v47[-v4];
  uint64_t v5 = type metadata accessor for LayoutSubviews();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v59 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100010218(&qword_1008133F0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = _swiftEmptyDictionarySingleton;
  sub_1005F1AE4(&qword_1008133F8);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v15 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t v16 = sub_1005F1AE4((unint64_t *)&qword_10080C8B8);
  uint64_t v17 = *v15;
  uint64_t v60 = v16;
  dispatch thunk of Collection.endIndex.getter();
  if (v17 == v64[0])
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v10, 1, 1, v0);
  }
  else
  {
    uint64_t v55 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16);
    uint64_t v56 = (void (**)(unsigned char *))(v1 + 16);
    uint64_t v57 = (void *)(v1 + 56);
    unint64_t v53 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v1 + 48);
    uint64_t v54 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v61 = v1;
    uint64_t v63 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 32);
    uint64_t v18 = _swiftEmptyDictionarySingleton;
    long long v48 = xmmword_1006D6280;
    uint64_t v51 = v10;
    uint64_t v52 = v0;
    uint64_t v50 = v5;
    while (1)
    {
      uint64_t v21 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*v56)(v10);
      v21(v64, 0);
      uint64_t v22 = v59;
      (*v55)(v59, v14, v5);
      dispatch thunk of Collection.formIndex(after:)();
      (*v54)(v22, v5);
      uint64_t v23 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))*v57;
      ((void (*)(unsigned char *, void, uint64_t, uint64_t))*v57)(v10, 0, 1, v0);
      if ((*v53)(v10, 1, v0) == 1) {
        break;
      }
      int64_t v49 = v23;
      uint64_t v24 = *v63;
      (*v63)(v62, v10, v0);
      sub_1005F1B28();
      LayoutSubview.subscript.getter();
      if (LOBYTE(v64[0]) == 4) {
        unsigned __int8 v25 = 3;
      }
      else {
        unsigned __int8 v25 = v64[0];
      }
      unint64_t v27 = sub_10001BED8(v25);
      uint64_t v28 = v18[2];
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      char v31 = v26;
      uint64_t v32 = v61;
      if (v18[3] < v30)
      {
        sub_100548408(v30, 1);
        uint64_t v18 = v65;
        unint64_t v33 = sub_10001BED8(v25);
        if ((v31 & 1) != (v34 & 1)) {
          goto LABEL_25;
        }
        unint64_t v27 = v33;
      }
      if (v31)
      {
        uint64_t v18 = v65;
        uint64_t v35 = v65[7];
        v24(v58, v62, v0);
        unint64_t v36 = *(void *)(v35 + 8 * v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v35 + 8 * v27) = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v36 = sub_1002A7510(0, *(void *)(v36 + 16) + 1, 1, v36);
          *(void *)(v35 + 8 * v27) = v36;
        }
        unint64_t v39 = *(void *)(v36 + 16);
        unint64_t v38 = *(void *)(v36 + 24);
        if (v39 >= v38 >> 1)
        {
          unint64_t v36 = sub_1002A7510(v38 > 1, v39 + 1, 1, v36);
          *(void *)(v35 + 8 * v27) = v36;
        }
        *(void *)(v36 + 16) = v39 + 1;
        unint64_t v19 = v36
            + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))
            + *(void *)(v61 + 72) * v39;
        uint64_t v0 = v52;
        v24((unsigned char *)v19, v58, v52);
      }
      else
      {
        sub_100010218(&qword_100806200);
        unint64_t v40 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = v48;
        unint64_t v42 = v41 + v40;
        uint64_t v0 = v52;
        v24((unsigned char *)v42, v62, v52);
        v18[(v27 >> 6) + 8] |= 1 << v27;
        *(unsigned char *)(v18[6] + v27) = v25;
        *(void *)(v18[7] + 8 * v27) = v41;
        uint64_t v43 = v18[2];
        BOOL v44 = __OFADD__(v43, 1);
        uint64_t v45 = v43 + 1;
        if (v44) {
          goto LABEL_24;
        }
        _OWORD v18[2] = v45;
      }
      uint64_t v20 = *v15;
      uint64_t v5 = v50;
      dispatch thunk of Collection.endIndex.getter();
      uint64_t v10 = v51;
      if (v20 == v64[0])
      {
        v49(v51, 1, 1, v0);
        break;
      }
    }
  }
  sub_10001457C((uint64_t)v14, &qword_1008133F0);
  return (uint64_t)v65;
}

uint64_t sub_1005EF194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005F19E4();
  LayoutSubview.subscript.getter();
  if (v8 == 1)
  {
    uint64_t v4 = *(int *)(sub_100010218(&qword_1008133D8) + 48);
    uint64_t v5 = type metadata accessor for LayoutSubview();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
    *(void *)(a2 + v4) = 0;
  }
  else
  {
    uint64_t v6 = type metadata accessor for LayoutSubview();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  }
  type metadata accessor for InsightsMosaicLayout.Row();
  return swift_storeEnumTagMultiPayload();
}

double sub_1005EF2A0(uint64_t a1)
{
  sub_1005F1AB8(a1);
  swift_getAtKeyPath();
  sub_100179324(a1);
  return v3;
}

void sub_1005EF2FC(uint64_t a1, char a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __n128 v59 = a3;
  uint64_t v61 = type metadata accessor for LayoutSubview();
  uint64_t v9 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for InsightsMosaicLayout.Row();
  uint64_t v62 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v57 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - v14;
  double v16 = *(double *)&a1;
  if (a2) {
    double v16 = 10.0;
  }
  if (v16 != *(double *)(a6 + 8))
  {
    double v17 = v59.n128_f64[0];
    double v18 = (v16 + v59.n128_f64[0] * -11.0) / 12.0;
    *(double *)(a6 + 8) = v16;
    *(void *)(a6 + 16) = 0;
    *(float64x2_t *)(a6 + 24) = vaddq_f64(vmulq_n_f64((float64x2_t)xmmword_1006EC430, v17), vmulq_n_f64((float64x2_t)xmmword_1006EC450, v18));
    *(float64x2_t *)(a6 + 40) = vaddq_f64(vmulq_n_f64((float64x2_t)xmmword_1006EC440, v17), vmulq_n_f64((float64x2_t)xmmword_1006EC460, v18));
    *(double *)(a6 + 56) = v17 * 8.0 + v18 * 9.0;
    unint64_t v19 = *(void *)a6;
    uint64_t v20 = *(void *)(*(void *)a6 + 16);
    if (v20)
    {
      unint64_t v21 = 0;
      uint64_t v60 = (void (**)(char *, uint64_t))(v9 + 8);
      unint64_t v53 = (void (**)(char *, char *, uint64_t))(v9 + 32);
      uint64_t v52 = (void (**)(uint64_t, char *, uint64_t))(v9 + 16);
      uint64_t v55 = v11;
      uint64_t v54 = v20;
      while (2)
      {
        if (v21 < *(void *)(v19 + 16))
        {
          unint64_t v22 = v21 + 1;
          unint64_t v23 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
          uint64_t v24 = *(void *)(v62 + 72) * v21;
          sub_1005F17F0(v19 + v23 + v24, (uint64_t)v15);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1005F1924((uint64_t)v15);
              double v27 = *(double *)(a6 + 32);
              goto LABEL_22;
            case 2u:
              uint64_t v35 = sub_100010218(&qword_1008133D0);
              uint64_t v36 = (uint64_t)&v15[*(int *)(v35 + 48)];
              uint64_t v37 = *(double (**)(void *))&v15[*(int *)(v35 + 64)];
              uint64_t v38 = *(void *)(a6 + 8);
              v65[0] = v19;
              v65[1] = v38;
              long long v39 = *(_OWORD *)(a6 + 32);
              long long v56 = *(_OWORD *)(a6 + 16);
              long long v66 = v56;
              long long v67 = v39;
              long long v68 = *(_OWORD *)(a6 + 48);
              swift_bridgeObjectRetain();
              double v40 = v37(v65);
              swift_bridgeObjectRelease();
              swift_release();
              *(double *)(a6 + 16) = *(double *)&v56 + v40;
              sub_10001457C(v36, &qword_1007FD208);
              (*v60)(v15, v61);
              goto LABEL_24;
            case 3u:
              uint64_t v41 = sub_100010218(&qword_1008133C8);
              unint64_t v42 = &v15[*(int *)(v41 + 48)];
              uint64_t v43 = (uint64_t)&v15[*(int *)(v41 + 64)];
              *(double *)(a6 + 16) = *(double *)(a6 + 40) + *(double *)(a6 + 16);
              sub_10001457C(v43, &qword_1007FD208);
              (*v60)(v42, v61);
              sub_10001457C((uint64_t)v15, &qword_1007FD208);
              goto LABEL_24;
            case 4u:
            case 5u:
              uint64_t v25 = sub_100010218(&qword_1008133C0);
              uint64_t v26 = (uint64_t)&v15[*(int *)(v25 + 48)];
              (*v60)(&v15[*(int *)(v25 + 64)], v61);
              sub_10001457C(v26, &qword_1007FD208);
              sub_10001457C((uint64_t)v15, &qword_1007FD208);
              double v27 = *(double *)(a6 + 56);
              goto LABEL_22;
            case 6u:
              uint64_t v44 = sub_100010218(&qword_1008133B8);
              uint64_t v45 = (uint64_t)&v15[*(int *)(v44 + 48)];
              sub_10001457C((uint64_t)&v15[*(int *)(v44 + 64)], &qword_1007FD208);
              sub_10001457C(v45, &qword_1007FD208);
              sub_10001457C((uint64_t)v15, &qword_1007FD208);
              double v27 = *(double *)(a6 + 32);
              goto LABEL_22;
            case 7u:
              uint64_t v46 = sub_100010218(&qword_1008133B0);
              uint64_t v47 = (uint64_t)&v15[*(int *)(v46 + 48)];
              sub_10001457C((uint64_t)&v15[*(int *)(v46 + 64)], &qword_1007FD208);
              sub_10001457C(v47, &qword_1007FD208);
              (*v60)(v15, v61);
              goto LABEL_21;
            case 8u:
              uint64_t v48 = sub_100010218(&qword_1008133A8);
              uint64_t v49 = (uint64_t)&v15[*(int *)(v48 + 48)];
              (*v60)(&v15[*(int *)(v48 + 64)], v61);
              sub_10001457C(v49, &qword_1007FD208);
              sub_10001457C((uint64_t)v15, &qword_1007FD208);
LABEL_21:
              double v27 = *(double *)(a6 + 48);
LABEL_22:
              double v34 = v27 + *(double *)(a6 + 16);
              goto LABEL_23;
            default:
              uint64_t v28 = v58;
              (*v53)(v58, v15, v61);
              char v64 = 0;
              char v63 = 1;
              LayoutSubview.sizeThatFits(_:)();
              double v30 = v29;
              uint64_t v31 = *(int *)(sub_100010218(&qword_1008133D8) + 48);
              uint64_t v32 = v57;
              (*v52)(v57, v28, v61);
              *(double *)(v32 + v31) = v30;
              swift_storeEnumTagMultiPayload();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)a6 = v19;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v19 = sub_1000F00E0(v19);
                *(void *)a6 = v19;
              }
              uint64_t v20 = v54;
              if (v21 >= *(void *)(v19 + 16)) {
                goto LABEL_30;
              }
              sub_1005F1980(v57, v19 + v23 + v24);
              (*v60)(v58, v61);
              double v34 = v30 + *(double *)(a6 + 16);
LABEL_23:
              *(double *)(a6 + 16) = v34;
LABEL_24:
              unint64_t v19 = *(void *)a6;
              uint64_t v50 = *(void *)(*(void *)a6 + 16);
              if (v50) {
                BOOL v51 = v21 == v50 - 1;
              }
              else {
                BOOL v51 = 0;
              }
              if (!v51) {
                *(double *)(a6 + 16) = *(double *)(a6 + 16) + v59.n128_f64[0];
              }
              ++v21;
              if (v20 != v22) {
                continue;
              }
              return;
          }
        }
        break;
      }
      __break(1u);
LABEL_30:
      __break(1u);
      JUMPOUT(0x1005EF970);
    }
  }
}

uint64_t sub_1005EF994(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v16 - 8);
  uint64_t v207 = (uint64_t)&v194 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v206 = (uint64_t)&v194 - v19;
  __chkstk_darwin(v20);
  uint64_t v228 = (uint64_t)&v194 - v21;
  __chkstk_darwin(v22);
  uint64_t v225 = (uint64_t)&v194 - v23;
  __chkstk_darwin(v24);
  CGRect v205 = (char *)&v194 - v25;
  __chkstk_darwin(v26);
  uint64_t v204 = (uint64_t)&v194 - v27;
  __chkstk_darwin(v28);
  double v30 = (char *)&v194 - v29;
  __chkstk_darwin(v31);
  uint64_t v224 = (uint64_t)&v194 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v194 - v34;
  __chkstk_darwin(v36);
  v223 = (char *)&v194 - v37;
  __chkstk_darwin(v38);
  uint64_t v203 = (uint64_t)&v194 - v39;
  __chkstk_darwin(v40);
  uint64_t v231 = (char *)&v194 - v41;
  __chkstk_darwin(v42);
  uint64_t v229 = (uint64_t)&v194 - v43;
  __chkstk_darwin(v44);
  uint64_t v222 = (uint64_t)&v194 - v45;
  __chkstk_darwin(v46);
  uint64_t v202 = (uint64_t)&v194 - v47;
  __chkstk_darwin(v48);
  uint64_t v201 = (uint64_t)&v194 - v49;
  __chkstk_darwin(v50);
  uint64_t v227 = (uint64_t)&v194 - v51;
  __chkstk_darwin(v52);
  uint64_t v221 = (uint64_t)&v194 - v53;
  __chkstk_darwin(v54);
  uint64_t v200 = (uint64_t)&v194 - v55;
  __chkstk_darwin(v56);
  uint64_t v199 = (uint64_t)&v194 - v57;
  __chkstk_darwin(v58);
  uint64_t v226 = (uint64_t)&v194 - v59;
  __chkstk_darwin(v60);
  uint64_t v220 = (uint64_t)&v194 - v61;
  __chkstk_darwin(v62);
  uint64_t v198 = (uint64_t)&v194 - v63;
  __chkstk_darwin(v64);
  uint64_t v197 = (uint64_t)&v194 - v65;
  __chkstk_darwin(v66);
  uint64_t v219 = (uint64_t)&v194 - v67;
  __chkstk_darwin(v68);
  uint64_t v218 = (uint64_t)&v194 - v69;
  __chkstk_darwin(v70);
  uint64_t v196 = (uint64_t)&v194 - v71;
  __chkstk_darwin(v72);
  uint64_t v217 = (uint64_t)&v194 - v73;
  uint64_t v74 = type metadata accessor for LayoutSubview();
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v216 = (char *)&v194 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v77);
  uint64_t v215 = (char *)&v194 - v78;
  __chkstk_darwin(v79);
  unint64_t v214 = (char *)&v194 - v80;
  __chkstk_darwin(v81);
  uint64_t v213 = (char *)&v194 - v82;
  __chkstk_darwin(v83);
  v212 = (char *)&v194 - v84;
  __chkstk_darwin(v85);
  v211 = (char *)&v194 - v86;
  __chkstk_darwin(v87);
  v210 = (char *)&v194 - v88;
  uint64_t v232 = type metadata accessor for InsightsMosaicLayout.Row();
  uint64_t v89 = *(void *)(v232 - 8);
  __n128 v90 = __chkstk_darwin(v232);
  unint64_t v92 = (char *)&v194 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90.n128_f64[0] = a7;
  sub_1005EF2FC(a1, a2 & 1, v90, v93, v94, a11);
  uint64_t v236 = a11;
  uint64_t result = *(void *)a11;
  uint64_t v96 = *(void *)(*(void *)a11 + 16);
  if (v96)
  {
    v195 = v35;
    uint64_t v97 = result + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    int64_t v209 = v30;
    uint64_t v98 = *(void *)(v89 + 72);
    uint64_t v233 = (void (**)(char *, char *, uint64_t))(v75 + 32);
    unint64_t v235 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
    uint64_t v234 = (void (**)(char *, uint64_t))(v75 + 8);
    uint64_t v194 = result;
    swift_bridgeObjectRetain();
    unint64_t v99 = &qword_1007FD208;
    uint64_t v100 = (uint64_t)v231;
    uint64_t v101 = v232;
    uint64_t v230 = v98;
    do
    {
      sub_1005F17F0(v97, (uint64_t)v92);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          long long v104 = v210;
          (*v233)(v210, v92, v74);
          uint64_t v105 = v236;
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          LayoutSubview.place(at:anchor:proposal:)();
          uint64_t v106 = v104;
          unint64_t v99 = &qword_1007FD208;
          uint64_t v101 = v232;
          (*v234)(v106, v74);
          double v102 = *(double *)(v105 + 32);
          break;
        case 2u:
          uint64_t v107 = sub_100010218(&qword_1008133D0);
          uint64_t v108 = (uint64_t)&v92[*(int *)(v107 + 48)];
          uint64_t v109 = *(double (**)(uint64_t *))&v92[*(int *)(v107 + 64)];
          (*v233)(v211, v92, v74);
          uint64_t v110 = v217;
          sub_1005F1854(v108, v217);
          uint64_t v111 = *(void *)(v236 + 56);
          uint64_t v240 = *(void *)v236;
          long long v112 = *(_OWORD *)(v236 + 24);
          long long v241 = *(_OWORD *)(v236 + 8);
          long long v242 = v112;
          long long v208 = *(_OWORD *)(v236 + 40);
          long long v243 = v208;
          uint64_t v244 = v111;
          v109(&v240);
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          LayoutSubview.place(at:anchor:proposal:)();
          uint64_t v113 = v110;
          uint64_t v114 = v196;
          sub_1005F18BC(v113, v196);
          if ((*v235)(v114, 1, v74) == 1)
          {
            uint64_t v115 = v114;
            unint64_t v99 = &qword_1007FD208;
            sub_10001457C(v115, &qword_1007FD208);
            uint64_t v116 = v234;
          }
          else
          {
            v109(&v240);
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            uint64_t v116 = v234;
            (*v234)((char *)v114, v74);
            unint64_t v99 = &qword_1007FD208;
          }
          long long v158 = *(_OWORD *)(v236 + 16);
          v239[0] = *(_OWORD *)v236;
          long long v159 = *(_OWORD *)(v236 + 32);
          long long v160 = *(_OWORD *)(v236 + 48);
          v239[1] = v158;
          v239[2] = v159;
          v239[3] = v160;
          double v102 = v109((uint64_t *)v239);
          swift_release();
          sub_10001457C(v217, &qword_1007FD208);
          (*v116)(v211, v74);
          goto LABEL_46;
        case 3u:
          uint64_t v117 = sub_100010218(&qword_1008133C8);
          unint64_t v118 = &v92[*(int *)(v117 + 48)];
          uint64_t v119 = (uint64_t)&v92[*(int *)(v117 + 64)];
          uint64_t v120 = v218;
          sub_1005F1854((uint64_t)v92, v218);
          (*v233)(v212, v118, v74);
          sub_1005F1854(v119, v219);
          uint64_t v121 = v197;
          sub_1005F18BC(v120, v197);
          uint64_t v122 = *v235;
          if ((*v235)(v121, 1, v74) == 1)
          {
            sub_10001457C(v121, &qword_1007FD208);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            (*v234)((char *)v121, v74);
          }
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          uint64_t v161 = v212;
          LayoutSubview.place(at:anchor:proposal:)();
          uint64_t v162 = v219;
          uint64_t v163 = v198;
          sub_1005F18BC(v219, v198);
          if (v122(v163, 1, v74) == 1)
          {
            uint64_t v164 = v162;
            unint64_t v99 = &qword_1007FD208;
            sub_10001457C(v164, &qword_1007FD208);
            (*v234)(v161, v74);
            sub_10001457C(v218, &qword_1007FD208);
            sub_10001457C(v163, &qword_1007FD208);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            uint64_t v182 = v163;
            LayoutSubview.place(at:anchor:proposal:)();
            sub_10001457C(v162, &qword_1007FD208);
            unint64_t v183 = *v234;
            (*v234)(v161, v74);
            sub_10001457C(v218, &qword_1007FD208);
            v183((char *)v182, v74);
            unint64_t v99 = &qword_1007FD208;
          }
          double v102 = *(double *)(v236 + 40);
LABEL_46:
          uint64_t v100 = (uint64_t)v231;
          uint64_t v101 = v232;
          goto LABEL_5;
        case 4u:
          uint64_t v123 = sub_100010218(&qword_1008133C0);
          uint64_t v124 = (uint64_t)&v92[*(int *)(v123 + 48)];
          unint64_t v125 = &v92[*(int *)(v123 + 64)];
          uint64_t v126 = v220;
          sub_1005F1854((uint64_t)v92, v220);
          sub_1005F1854(v124, v226);
          (*v233)(v213, v125, v74);
          uint64_t v127 = v126;
          uint64_t v128 = v199;
          sub_1005F18BC(v127, v199);
          unint64_t v129 = *v235;
          if ((*v235)(v128, 1, v74) == 1)
          {
            sub_10001457C(v128, v99);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            (*v234)((char *)v128, v74);
          }
          uint64_t v165 = v200;
          sub_1005F18BC(v226, v200);
          if (v129(v165, 1, v74) == 1)
          {
            sub_10001457C(v165, v99);
            uint64_t v98 = v230;
            uint64_t v166 = v99;
            uint64_t v167 = v234;
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            uint64_t v166 = v99;
            uint64_t v167 = v234;
            (*v234)((char *)v165, v74);
            uint64_t v98 = v230;
          }
          uint64_t v184 = v236;
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          unint64_t v185 = v213;
          LayoutSubview.place(at:anchor:proposal:)();
          (*v167)(v185, v74);
          sub_10001457C(v226, v166);
          sub_10001457C(v220, v166);
          double v102 = *(double *)(v184 + 56);
          unint64_t v99 = v166;
          uint64_t v101 = v232;
          goto LABEL_56;
        case 5u:
          uint64_t v130 = sub_100010218(&qword_1008133C0);
          uint64_t v131 = (uint64_t)&v92[*(int *)(v130 + 48)];
          NSString v132 = &v92[*(int *)(v130 + 64)];
          uint64_t v133 = v221;
          sub_1005F1854((uint64_t)v92, v221);
          sub_1005F1854(v131, v227);
          (*v233)(v214, v132, v74);
          uint64_t v134 = v201;
          sub_1005F18BC(v133, v201);
          uint64_t v135 = *v235;
          if ((*v235)(v134, 1, v74) == 1)
          {
            sub_10001457C(v134, v99);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            (*v234)((char *)v134, v74);
          }
          uint64_t v168 = v202;
          sub_1005F18BC(v227, v202);
          if (v135(v168, 1, v74) == 1)
          {
            sub_10001457C(v168, v99);
            unint64_t v169 = v231;
            uint64_t v170 = v99;
            unint64_t v171 = v234;
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            uint64_t v170 = v99;
            unint64_t v171 = v234;
            (*v234)((char *)v168, v74);
            unint64_t v169 = v231;
          }
          uint64_t v186 = v236;
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          uint64_t v187 = v214;
          LayoutSubview.place(at:anchor:proposal:)();
          (*v171)(v187, v74);
          sub_10001457C(v227, v170);
          sub_10001457C(v221, v170);
          double v102 = *(double *)(v186 + 56);
          unint64_t v99 = v170;
          uint64_t v101 = v232;
          goto LABEL_4;
        case 6u:
          uint64_t v136 = sub_100010218(&qword_1008133B8);
          uint64_t v137 = (uint64_t)&v92[*(int *)(v136 + 48)];
          uint64_t v138 = (uint64_t)&v92[*(int *)(v136 + 64)];
          uint64_t v139 = v222;
          sub_1005F1854((uint64_t)v92, v222);
          sub_1005F1854(v137, v229);
          sub_1005F1854(v138, v100);
          uint64_t v140 = v203;
          sub_1005F18BC(v139, v203);
          unint64_t v141 = *v235;
          if ((*v235)(v140, 1, v74) == 1)
          {
            sub_10001457C(v140, v99);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            uint64_t v100 = (uint64_t)v231;
            (*v234)((char *)v140, v74);
          }
          uint64_t v172 = (uint64_t)v223;
          sub_1005F18BC(v229, (uint64_t)v223);
          if (v141(v172, 1, v74) == 1)
          {
            sub_10001457C(v172, v99);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            (*v234)(v223, v74);
          }
          uint64_t v188 = v100;
          uint64_t v189 = v100;
          uint64_t v190 = (uint64_t)v195;
          sub_1005F18BC(v188, (uint64_t)v195);
          if (v141(v190, 1, v74) == 1)
          {
            sub_10001457C(v189, v99);
            sub_10001457C(v229, v99);
            sub_10001457C(v222, v99);
            sub_10001457C(v190, v99);
            double v102 = *(double *)(v236 + 32);
          }
          else
          {
            uint64_t v193 = v236;
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            sub_10001457C(v189, v99);
            sub_10001457C(v229, v99);
            sub_10001457C(v222, v99);
            (*v234)((char *)v190, v74);
            double v102 = *(double *)(v193 + 32);
          }
          uint64_t v100 = v189;
          uint64_t v98 = v230;
          uint64_t v101 = v232;
          break;
        case 7u:
          uint64_t v142 = sub_100010218(&qword_1008133B0);
          uint64_t v143 = (uint64_t)&v92[*(int *)(v142 + 48)];
          uint64_t v144 = (uint64_t)&v92[*(int *)(v142 + 64)];
          (*v233)(v215, v92, v74);
          uint64_t v145 = v224;
          sub_1005F1854(v143, v224);
          sub_1005F1854(v144, (uint64_t)v209);
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          LayoutSubview.place(at:anchor:proposal:)();
          uint64_t v146 = v145;
          uint64_t v147 = v204;
          sub_1005F18BC(v146, v204);
          uint64_t v148 = *v235;
          if ((*v235)(v147, 1, v74) == 1)
          {
            unint64_t v99 = &qword_1007FD208;
            sub_10001457C(v147, &qword_1007FD208);
            uint64_t v149 = (uint64_t)v205;
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            (*v234)((char *)v147, v74);
            uint64_t v149 = (uint64_t)v205;
            unint64_t v99 = &qword_1007FD208;
          }
          uint64_t v173 = (uint64_t)v209;
          sub_1005F18BC((uint64_t)v209, v149);
          unsigned int v174 = v148(v149, 1, v74);
          unint64_t v169 = v231;
          uint64_t v101 = v232;
          if (v174 == 1)
          {
            sub_10001457C(v173, &qword_1007FD208);
            sub_10001457C(v224, &qword_1007FD208);
            (*v234)(v215, v74);
            sub_10001457C(v149, &qword_1007FD208);
            double v102 = *(double *)(v236 + 48);
          }
          else
          {
            uint64_t v175 = v236;
            uint64_t v176 = v149;
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            sub_10001457C(v173, &qword_1007FD208);
            sub_10001457C(v224, &qword_1007FD208);
            unint64_t v177 = *v234;
            (*v234)(v215, v74);
            uint64_t v178 = v176;
            uint64_t v101 = v232;
            v177((char *)v178, v74);
            unint64_t v99 = &qword_1007FD208;
            double v102 = *(double *)(v175 + 48);
          }
LABEL_4:
          uint64_t v100 = (uint64_t)v169;
LABEL_5:
          uint64_t v98 = v230;
          break;
        case 8u:
          uint64_t v150 = v101;
          uint64_t v151 = sub_100010218(&qword_1008133A8);
          uint64_t v152 = (uint64_t)&v92[*(int *)(v151 + 48)];
          id v153 = &v92[*(int *)(v151 + 64)];
          uint64_t v154 = v225;
          sub_1005F1854((uint64_t)v92, v225);
          sub_1005F1854(v152, v228);
          (*v233)(v216, v153, v74);
          uint64_t v155 = v154;
          uint64_t v156 = v206;
          sub_1005F18BC(v155, v206);
          unint64_t v157 = *v235;
          if ((*v235)(v156, 1, v74) == 1)
          {
            sub_10001457C(v156, v99);
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            (*v234)((char *)v156, v74);
          }
          uint64_t v179 = v207;
          sub_1005F18BC(v228, v207);
          if (v157(v179, 1, v74) == 1)
          {
            sub_10001457C(v179, v99);
            uint64_t v180 = v99;
            int64_t v181 = v234;
          }
          else
          {
            static UnitPoint.topLeading.getter();
            char v238 = 0;
            char v237 = 0;
            LayoutSubview.place(at:anchor:proposal:)();
            uint64_t v180 = v99;
            int64_t v181 = v234;
            (*v234)((char *)v179, v74);
          }
          uint64_t v101 = v150;
          uint64_t v191 = v236;
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 0;
          uint64_t v192 = v216;
          LayoutSubview.place(at:anchor:proposal:)();
          (*v181)(v192, v74);
          sub_10001457C(v228, v180);
          sub_10001457C(v225, v180);
          double v102 = *(double *)(v191 + 48);
          unint64_t v99 = v180;
LABEL_56:
          uint64_t v100 = (uint64_t)v231;
          break;
        default:
          double v102 = *(double *)&v92[*(int *)(sub_100010218(&qword_1008133D8) + 48)];
          uint64_t v103 = v210;
          (*v233)(v210, v92, v74);
          static UnitPoint.topLeading.getter();
          char v238 = 0;
          char v237 = 1;
          LayoutSubview.place(at:anchor:proposal:)();
          (*v234)(v103, v74);
          break;
      }
      a4 = a4 + v102 + a7;
      v97 += v98;
      --v96;
    }
    while (v96);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1005F165C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1005ECB5C(a1, *(unsigned __int8 *)(v2 + 8), (uint64_t)v7);
  long long v4 = v7[1];
  *a2 = v7[0];
  a2[1] = v4;
  double result = *(double *)&v8;
  long long v6 = v9;
  a2[2] = v8;
  a2[3] = v6;
  return result;
}

double sub_1005F16A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, __n128 a5, uint64_t a6, uint64_t a7)
{
  a5.n128_u64[0] = *v7;
  sub_1005EF2FC(a1, a2 & 1, a5, a3, a4, a7);
  return *(double *)(a7 + 8);
}

uint64_t sub_1005F16E8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  return sub_1005EF994(a1, a2 & 1, a7, a8, a9, a10, *v10, a3, a4 & 1, a5, a6);
}

uint64_t sub_1005F1708()
{
  return Layout.explicitAlignment(of:in:proposal:subviews:cache:)();
}

unint64_t sub_1005F1750()
{
  unint64_t result = qword_1008133A0;
  if (!qword_1008133A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008133A0);
  }
  return result;
}

uint64_t type metadata accessor for InsightsMosaicLayout.Row()
{
  uint64_t result = qword_100813478;
  if (!qword_100813478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005F17F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsMosaicLayout.Row();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F1854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FD208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F18BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FD208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F1924(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InsightsMosaicLayout.Row();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005F1980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsMosaicLayout.Row();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005F19E4()
{
  unint64_t result = qword_1008133E8;
  if (!qword_1008133E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008133E8);
  }
  return result;
}

double sub_1005F1A38(uint64_t a1)
{
  return sub_1005EF2A0(a1);
}

uint64_t sub_1005F1A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsMosaicLayout.Row();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F1AB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005F1AE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LayoutSubviews();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005F1B28()
{
  unint64_t result = qword_100813400;
  if (!qword_100813400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813400);
  }
  return result;
}

char *sub_1005F1B7C(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = type metadata accessor for LayoutSubview();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 2u:
        uint64_t v10 = type metadata accessor for LayoutSubview();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
        v12(a1, a2, v10);
        uint64_t v13 = sub_100010218(&qword_1008133D0);
        uint64_t v14 = *(int *)(v13 + 48);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v14], 1, v10))
        {
          uint64_t v17 = sub_100010218(&qword_1007FD208);
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          v12(v15, v16, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
        }
        uint64_t v43 = *(int *)(v13 + 64);
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        uint64_t v46 = *((void *)v45 + 1);
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v46;
        swift_retain();
        break;
      case 3u:
        uint64_t v18 = type metadata accessor for LayoutSubview();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
        if (v20(a2, 1, v18))
        {
          uint64_t v21 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
          uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
        }
        else
        {
          uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
          v22(a1, a2, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
        uint64_t v47 = sub_100010218(&qword_1008133C8);
        v22(&a1[*(int *)(v47 + 48)], &a2[*(int *)(v47 + 48)], v18);
        uint64_t v48 = *(int *)(v47 + 64);
        uint64_t v49 = &a1[v48];
        uint64_t v50 = &a2[v48];
        if (v20(v50, 1, v18)) {
          goto LABEL_36;
        }
        v22(v49, v50, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v49, 0, 1, v18);
        break;
      case 4u:
        uint64_t v23 = type metadata accessor for LayoutSubview();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
        if (v25(a2, 1, v23))
        {
          uint64_t v26 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(a1, a2, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
        }
        uint64_t v51 = sub_100010218(&qword_1008133C0);
        uint64_t v52 = *(int *)(v51 + 48);
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        if (!v25(&a2[v52], 1, v23)) {
          goto LABEL_47;
        }
        goto LABEL_39;
      case 5u:
        uint64_t v23 = type metadata accessor for LayoutSubview();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
        if (v27(a2, 1, v23))
        {
          uint64_t v28 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(a1, a2, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
        }
        uint64_t v51 = sub_100010218(&qword_1008133C0);
        uint64_t v55 = *(int *)(v51 + 48);
        uint64_t v53 = &a1[v55];
        uint64_t v54 = &a2[v55];
        if (v27(&a2[v55], 1, v23)) {
          goto LABEL_39;
        }
        goto LABEL_47;
      case 6u:
        uint64_t v29 = type metadata accessor for LayoutSubview();
        uint64_t v30 = *(void *)(v29 - 8);
        uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        if (v31(a2, 1, v29))
        {
          uint64_t v32 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(a1, a2, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
        }
        uint64_t v56 = sub_100010218(&qword_1008133B8);
        uint64_t v57 = *(int *)(v56 + 48);
        uint64_t v58 = &a1[v57];
        uint64_t v59 = &a2[v57];
        if (v31(&a2[v57], 1, v29))
        {
          uint64_t v60 = sub_100010218(&qword_1007FD208);
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v58, v59, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v58, 0, 1, v29);
        }
        uint64_t v65 = *(int *)(v56 + 64);
        uint64_t v49 = &a1[v65];
        uint64_t v50 = &a2[v65];
        if (v31(v50, 1, v29)) {
          goto LABEL_36;
        }
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v49, v50, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v49, 0, 1, v29);
        break;
      case 7u:
        uint64_t v33 = type metadata accessor for LayoutSubview();
        uint64_t v34 = *(void *)(v33 - 8);
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
        v35(a1, a2, v33);
        uint64_t v36 = sub_100010218(&qword_1008133B0);
        uint64_t v37 = *(int *)(v36 + 48);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        if (v68(&a2[v37], 1, v33))
        {
          uint64_t v40 = sub_100010218(&qword_1007FD208);
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          v35(v38, v39, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v33);
        }
        uint64_t v61 = *(int *)(v36 + 64);
        uint64_t v49 = &a1[v61];
        uint64_t v50 = &a2[v61];
        if (v68(v50, 1, v33))
        {
LABEL_36:
          uint64_t v62 = sub_100010218(&qword_1007FD208);
          memcpy(v49, v50, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          v35(v49, v50, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v49, 0, 1, v33);
        }
        break;
      case 8u:
        uint64_t v23 = type metadata accessor for LayoutSubview();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
        if (v41(a2, 1, v23))
        {
          uint64_t v42 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(a1, a2, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
        }
        uint64_t v51 = sub_100010218(&qword_1008133A8);
        uint64_t v63 = *(int *)(v51 + 48);
        uint64_t v53 = &a1[v63];
        uint64_t v54 = &a2[v63];
        if (v41(&a2[v63], 1, v23))
        {
LABEL_39:
          uint64_t v64 = sub_100010218(&qword_1007FD208);
          memcpy(v53, v54, *(void *)(*(void *)(v64 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(&a1[*(int *)(v51 + 64)], &a2[*(int *)(v51 + 64)], v23);
        }
        else
        {
LABEL_47:
          uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
          v66(v53, v54, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v53, 0, 1, v23);
          v66(&a1[*(int *)(v51 + 64)], &a2[*(int *)(v51 + 64)], v23);
        }
        break;
      default:
        uint64_t v6 = type metadata accessor for LayoutSubview();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = sub_100010218(&qword_1008133D8);
        *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005F2964(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t v3 = type metadata accessor for LayoutSubview();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = a1;
      goto LABEL_3;
    case 2:
      uint64_t v10 = type metadata accessor for LayoutSubview();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v12(a1, v10);
      uint64_t v13 = a1 + *(int *)(sub_100010218(&qword_1008133D0) + 48);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
        v12(v13, v10);
      }
      return swift_release();
    case 3:
      uint64_t v14 = type metadata accessor for LayoutSubview();
      uint64_t v39 = *(void *)(v14 - 8);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
      int v16 = v15(a1, 1, v14);
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      if (!v16) {
        v36(a1, v14);
      }
      uint64_t v17 = sub_100010218(&qword_1008133C8);
      v36(a1 + *(int *)(v17 + 48), v14);
      uint64_t v18 = a1 + *(int *)(v17 + 64);
      uint64_t result = v15(v18, 1, v14);
      if (result) {
        return result;
      }
      uint64_t v19 = v18;
      uint64_t v20 = v14;
      uint64_t v21 = v36;
      goto LABEL_34;
    case 4:
    case 5:
      uint64_t v7 = type metadata accessor for LayoutSubview();
      uint64_t v38 = *(void *)(v7 - 8);
      uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (!v8(a1, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(a1, v7);
      }
      uint64_t v9 = &qword_1008133C0;
      goto LABEL_31;
    case 6:
      uint64_t v22 = type metadata accessor for LayoutSubview();
      uint64_t v40 = *(void *)(v22 - 8);
      uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
      if (!v23(a1, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a1, v22);
      }
      uint64_t v24 = sub_100010218(&qword_1008133B8);
      uint64_t v25 = a1 + *(int *)(v24 + 48);
      if (!v23(v25, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v25, v22);
      }
      uint64_t v26 = a1 + *(int *)(v24 + 64);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(v26, 1, v22);
      if (result) {
        return result;
      }
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
      uint64_t v6 = v26;
      uint64_t v5 = v22;
      goto LABEL_3;
    case 7:
      uint64_t v27 = type metadata accessor for LayoutSubview();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v41(a1, v27);
      uint64_t v29 = sub_100010218(&qword_1008133B0);
      uint64_t v30 = a1 + *(int *)(v29 + 48);
      uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      if (!v31(v30, 1, v27)) {
        v41(v30, v27);
      }
      uint64_t v32 = a1 + *(int *)(v29 + 64);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v31)(v32, 1, v27);
      if (result) {
        return result;
      }
      uint64_t v6 = v32;
      uint64_t v5 = v27;
      uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v41;
LABEL_3:
      uint64_t result = v4(v6, v5);
      break;
    case 8:
      uint64_t v7 = type metadata accessor for LayoutSubview();
      uint64_t v38 = *(void *)(v7 - 8);
      uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (!v8(a1, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(a1, v7);
      }
      uint64_t v9 = &qword_1008133A8;
LABEL_31:
      uint64_t v33 = sub_100010218(v9);
      uint64_t v34 = a1 + *(int *)(v33 + 48);
      unsigned int v35 = v8(v34, 1, v7);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      if (!v35)
      {
        uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        v21(v34, v7);
        uint64_t v21 = v37;
      }
      uint64_t v19 = a1 + *(int *)(v33 + 64);
      uint64_t v20 = v7;
LABEL_34:
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v21)(v19, v20);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1005F2FF8(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = type metadata accessor for LayoutSubview();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      break;
    case 2u:
      uint64_t v11 = type metadata accessor for LayoutSubview();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v13(a1, a2, v11);
      uint64_t v14 = sub_100010218(&qword_1008133D0);
      uint64_t v15 = *(int *)(v14 + 48);
      int v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
      {
        uint64_t v18 = sub_100010218(&qword_1007FD208);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        v13(v16, v17, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      uint64_t v38 = *(int *)(v14 + 64);
      uint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v41;
      swift_retain();
      break;
    case 3u:
      uint64_t v19 = type metadata accessor for LayoutSubview();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v21(a2, 1, v19))
      {
        uint64_t v22 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
      }
      else
      {
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        v23(a1, a2, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      }
      uint64_t v42 = sub_100010218(&qword_1008133C8);
      v23(&a1[*(int *)(v42 + 48)], &a2[*(int *)(v42 + 48)], v19);
      uint64_t v43 = *(int *)(v42 + 64);
      uint64_t v44 = &a1[v43];
      uint64_t v45 = &a2[v43];
      if (v21(v45, 1, v19)) {
        goto LABEL_28;
      }
      v23(v44, v45, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v44, 0, 1, v19);
      break;
    case 4u:
    case 5u:
      uint64_t v4 = type metadata accessor for LayoutSubview();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v6(a2, 1, v4))
      {
        uint64_t v7 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v37 = &qword_1008133C0;
      goto LABEL_31;
    case 6u:
      uint64_t v24 = type metadata accessor for LayoutSubview();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(a2, 1, v24))
      {
        uint64_t v27 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(a1, a2, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
      }
      uint64_t v46 = sub_100010218(&qword_1008133B8);
      uint64_t v47 = *(int *)(v46 + 48);
      uint64_t v48 = &a1[v47];
      uint64_t v49 = &a2[v47];
      if (v26(&a2[v47], 1, v24))
      {
        uint64_t v50 = sub_100010218(&qword_1007FD208);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v48, v49, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      }
      uint64_t v60 = *(int *)(v46 + 64);
      uint64_t v44 = &a1[v60];
      uint64_t v45 = &a2[v60];
      if (v26(v45, 1, v24)) {
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v44, v45, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v44, 0, 1, v24);
      break;
    case 7u:
      uint64_t v28 = type metadata accessor for LayoutSubview();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
      v30(a1, a2, v28);
      uint64_t v31 = sub_100010218(&qword_1008133B0);
      uint64_t v32 = *(int *)(v31 + 48);
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      if (v61(&a2[v32], 1, v28))
      {
        uint64_t v35 = sub_100010218(&qword_1007FD208);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v30(v33, v34, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
      }
      uint64_t v51 = *(int *)(v31 + 64);
      uint64_t v44 = &a1[v51];
      uint64_t v45 = &a2[v51];
      if (v61(v45, 1, v28))
      {
LABEL_28:
        uint64_t v52 = sub_100010218(&qword_1007FD208);
        memcpy(v44, v45, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        v30(v44, v45, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v44, 0, 1, v28);
      }
      break;
    case 8u:
      uint64_t v4 = type metadata accessor for LayoutSubview();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v6(a2, 1, v4))
      {
        uint64_t v36 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v37 = &qword_1008133A8;
LABEL_31:
      uint64_t v53 = sub_100010218(v37);
      uint64_t v54 = *(int *)(v53 + 48);
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      if (v6(&a2[v54], 1, v4))
      {
        uint64_t v57 = sub_100010218(&qword_1007FD208);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&a1[*(int *)(v53 + 64)], &a2[*(int *)(v53 + 64)], v4);
      }
      else
      {
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v58(v55, v56, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v55, 0, 1, v4);
        v58(&a1[*(int *)(v53 + 64)], &a2[*(int *)(v53 + 64)], v4);
      }
      break;
    default:
      uint64_t v8 = type metadata accessor for LayoutSubview();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = sub_100010218(&qword_1008133D8);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1005F3AEC(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1005F1924((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for LayoutSubview();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 2u:
        uint64_t v11 = type metadata accessor for LayoutSubview();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        v13(a1, a2, v11);
        uint64_t v14 = sub_100010218(&qword_1008133D0);
        uint64_t v15 = *(int *)(v14 + 48);
        int v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
        {
          uint64_t v18 = sub_100010218(&qword_1007FD208);
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          v13(v16, v17, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
        }
        uint64_t v38 = *(int *)(v14 + 64);
        uint64_t v39 = &a1[v38];
        uint64_t v40 = &a2[v38];
        uint64_t v41 = *((void *)v40 + 1);
        *(void *)uint64_t v39 = *(void *)v40;
        *((void *)v39 + 1) = v41;
        swift_retain();
        break;
      case 3u:
        uint64_t v19 = type metadata accessor for LayoutSubview();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        if (v21(a2, 1, v19))
        {
          uint64_t v22 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        }
        else
        {
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
          v23(a1, a2, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        uint64_t v42 = sub_100010218(&qword_1008133C8);
        v23(&a1[*(int *)(v42 + 48)], &a2[*(int *)(v42 + 48)], v19);
        uint64_t v43 = *(int *)(v42 + 64);
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        if (v21(v45, 1, v19)) {
          goto LABEL_29;
        }
        v23(v44, v45, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v44, 0, 1, v19);
        break;
      case 4u:
      case 5u:
        uint64_t v4 = type metadata accessor for LayoutSubview();
        uint64_t v5 = *(void *)(v4 - 8);
        uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
        if (v6(a2, 1, v4))
        {
          uint64_t v7 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        }
        uint64_t v37 = &qword_1008133C0;
        goto LABEL_32;
      case 6u:
        uint64_t v24 = type metadata accessor for LayoutSubview();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        uint64_t v62 = v25;
        if (v26(a2, 1, v24))
        {
          uint64_t v27 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(a1, a2, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
        }
        uint64_t v46 = sub_100010218(&qword_1008133B8);
        uint64_t v47 = *(int *)(v46 + 48);
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        if (v26(&a2[v47], 1, v24))
        {
          uint64_t v50 = sub_100010218(&qword_1007FD208);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v48, v49, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v48, 0, 1, v24);
        }
        uint64_t v60 = *(int *)(v46 + 64);
        uint64_t v44 = &a1[v60];
        uint64_t v45 = &a2[v60];
        if (v26(v45, 1, v24)) {
          goto LABEL_29;
        }
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v44, v45, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v44, 0, 1, v24);
        break;
      case 7u:
        uint64_t v28 = type metadata accessor for LayoutSubview();
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
        v30(a1, a2, v28);
        uint64_t v31 = sub_100010218(&qword_1008133B0);
        uint64_t v32 = *(int *)(v31 + 48);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        if (v61(&a2[v32], 1, v28))
        {
          uint64_t v35 = sub_100010218(&qword_1007FD208);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          v30(v33, v34, v28);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
        }
        uint64_t v51 = *(int *)(v31 + 64);
        uint64_t v44 = &a1[v51];
        uint64_t v45 = &a2[v51];
        if (v61(v45, 1, v28))
        {
LABEL_29:
          uint64_t v52 = sub_100010218(&qword_1007FD208);
          memcpy(v44, v45, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          v30(v44, v45, v28);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v44, 0, 1, v28);
        }
        break;
      case 8u:
        uint64_t v4 = type metadata accessor for LayoutSubview();
        uint64_t v5 = *(void *)(v4 - 8);
        uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
        if (v6(a2, 1, v4))
        {
          uint64_t v36 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        }
        uint64_t v37 = &qword_1008133A8;
LABEL_32:
        uint64_t v53 = sub_100010218(v37);
        uint64_t v54 = *(int *)(v53 + 48);
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        if (v6(&a2[v54], 1, v4))
        {
          uint64_t v57 = sub_100010218(&qword_1007FD208);
          memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&a1[*(int *)(v53 + 64)], &a2[*(int *)(v53 + 64)], v4);
        }
        else
        {
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
          v58(v55, v56, v4);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v55, 0, 1, v4);
          v58(&a1[*(int *)(v53 + 64)], &a2[*(int *)(v53 + 64)], v4);
        }
        break;
      default:
        uint64_t v8 = type metadata accessor for LayoutSubview();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = sub_100010218(&qword_1008133D8);
        *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005F45E8(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = type metadata accessor for LayoutSubview();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      break;
    case 2u:
      uint64_t v11 = type metadata accessor for LayoutSubview();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(a1, a2, v11);
      uint64_t v14 = sub_100010218(&qword_1008133D0);
      uint64_t v15 = *(int *)(v14 + 48);
      int v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
      {
        uint64_t v18 = sub_100010218(&qword_1007FD208);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        v13(v16, v17, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
      }
      *(_OWORD *)&a1[*(int *)(v14 + 64)] = *(_OWORD *)&a2[*(int *)(v14 + 64)];
      break;
    case 3u:
      uint64_t v19 = type metadata accessor for LayoutSubview();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v21(a2, 1, v19))
      {
        uint64_t v22 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      }
      else
      {
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v23(a1, a2, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      }
      uint64_t v38 = sub_100010218(&qword_1008133C8);
      v23(&a1[*(int *)(v38 + 48)], &a2[*(int *)(v38 + 48)], v19);
      uint64_t v39 = *(int *)(v38 + 64);
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      if (v21(v41, 1, v19)) {
        goto LABEL_28;
      }
      v23(v40, v41, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v40, 0, 1, v19);
      break;
    case 4u:
    case 5u:
      uint64_t v4 = type metadata accessor for LayoutSubview();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v6(a2, 1, v4))
      {
        uint64_t v7 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v37 = &qword_1008133C0;
      goto LABEL_31;
    case 6u:
      uint64_t v24 = type metadata accessor for LayoutSubview();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(a2, 1, v24))
      {
        uint64_t v27 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(a1, a2, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
      }
      uint64_t v42 = sub_100010218(&qword_1008133B8);
      uint64_t v43 = *(int *)(v42 + 48);
      uint64_t v44 = &a1[v43];
      uint64_t v45 = &a2[v43];
      if (v26(&a2[v43], 1, v24))
      {
        uint64_t v46 = sub_100010218(&qword_1007FD208);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v44, v45, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v44, 0, 1, v24);
      }
      uint64_t v56 = *(int *)(v42 + 64);
      uint64_t v40 = &a1[v56];
      uint64_t v41 = &a2[v56];
      if (v26(v41, 1, v24)) {
        goto LABEL_28;
      }
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v40, v41, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v40, 0, 1, v24);
      break;
    case 7u:
      uint64_t v28 = type metadata accessor for LayoutSubview();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      v30(a1, a2, v28);
      uint64_t v31 = sub_100010218(&qword_1008133B0);
      uint64_t v32 = *(int *)(v31 + 48);
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      if (v57(&a2[v32], 1, v28))
      {
        uint64_t v35 = sub_100010218(&qword_1007FD208);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v30(v33, v34, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
      }
      uint64_t v47 = *(int *)(v31 + 64);
      uint64_t v40 = &a1[v47];
      uint64_t v41 = &a2[v47];
      if (v57(v41, 1, v28))
      {
LABEL_28:
        uint64_t v48 = sub_100010218(&qword_1007FD208);
        memcpy(v40, v41, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        v30(v40, v41, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
      }
      break;
    case 8u:
      uint64_t v4 = type metadata accessor for LayoutSubview();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v6(a2, 1, v4))
      {
        uint64_t v36 = sub_100010218(&qword_1007FD208);
        memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      uint64_t v37 = &qword_1008133A8;
LABEL_31:
      uint64_t v49 = sub_100010218(v37);
      uint64_t v50 = *(int *)(v49 + 48);
      uint64_t v51 = &a1[v50];
      uint64_t v52 = &a2[v50];
      if (v6(&a2[v50], 1, v4))
      {
        uint64_t v53 = sub_100010218(&qword_1007FD208);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&a1[*(int *)(v49 + 64)], &a2[*(int *)(v49 + 64)], v4);
      }
      else
      {
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v54(v51, v52, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v51, 0, 1, v4);
        v54(&a1[*(int *)(v49 + 64)], &a2[*(int *)(v49 + 64)], v4);
      }
      break;
    default:
      uint64_t v8 = type metadata accessor for LayoutSubview();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_100010218(&qword_1008133D8);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1005F50D0(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1005F1924((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for LayoutSubview();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        break;
      case 2u:
        uint64_t v11 = type metadata accessor for LayoutSubview();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v13(a1, a2, v11);
        uint64_t v14 = sub_100010218(&qword_1008133D0);
        uint64_t v15 = *(int *)(v14 + 48);
        int v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
        {
          uint64_t v18 = sub_100010218(&qword_1007FD208);
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          v13(v16, v17, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
        }
        *(_OWORD *)&a1[*(int *)(v14 + 64)] = *(_OWORD *)&a2[*(int *)(v14 + 64)];
        break;
      case 3u:
        uint64_t v19 = type metadata accessor for LayoutSubview();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        if (v21(a2, 1, v19))
        {
          uint64_t v22 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        }
        else
        {
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
          v23(a1, a2, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        uint64_t v38 = sub_100010218(&qword_1008133C8);
        v23(&a1[*(int *)(v38 + 48)], &a2[*(int *)(v38 + 48)], v19);
        uint64_t v39 = *(int *)(v38 + 64);
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        if (v21(v41, 1, v19)) {
          goto LABEL_29;
        }
        v23(v40, v41, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v40, 0, 1, v19);
        break;
      case 4u:
      case 5u:
        uint64_t v4 = type metadata accessor for LayoutSubview();
        uint64_t v5 = *(void *)(v4 - 8);
        uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
        if (v6(a2, 1, v4))
        {
          uint64_t v7 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        }
        uint64_t v37 = &qword_1008133C0;
        goto LABEL_32;
      case 6u:
        uint64_t v24 = type metadata accessor for LayoutSubview();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        uint64_t v58 = v25;
        if (v26(a2, 1, v24))
        {
          uint64_t v27 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 32))(a1, a2, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
        }
        uint64_t v42 = sub_100010218(&qword_1008133B8);
        uint64_t v43 = *(int *)(v42 + 48);
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        if (v26(&a2[v43], 1, v24))
        {
          uint64_t v46 = sub_100010218(&qword_1007FD208);
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v44, v45, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v44, 0, 1, v24);
        }
        uint64_t v56 = *(int *)(v42 + 64);
        uint64_t v40 = &a1[v56];
        uint64_t v41 = &a2[v56];
        if (v26(v41, 1, v24)) {
          goto LABEL_29;
        }
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v40, v41, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v40, 0, 1, v24);
        break;
      case 7u:
        uint64_t v28 = type metadata accessor for LayoutSubview();
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v30(a1, a2, v28);
        uint64_t v31 = sub_100010218(&qword_1008133B0);
        uint64_t v32 = *(int *)(v31 + 48);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        if (v57(&a2[v32], 1, v28))
        {
          uint64_t v35 = sub_100010218(&qword_1007FD208);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          v30(v33, v34, v28);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
        }
        uint64_t v47 = *(int *)(v31 + 64);
        uint64_t v40 = &a1[v47];
        uint64_t v41 = &a2[v47];
        if (v57(v41, 1, v28))
        {
LABEL_29:
          uint64_t v48 = sub_100010218(&qword_1007FD208);
          memcpy(v40, v41, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          v30(v40, v41, v28);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
        }
        break;
      case 8u:
        uint64_t v4 = type metadata accessor for LayoutSubview();
        uint64_t v5 = *(void *)(v4 - 8);
        uint64_t v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
        if (v6(a2, 1, v4))
        {
          uint64_t v36 = sub_100010218(&qword_1007FD208);
          memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        }
        uint64_t v37 = &qword_1008133A8;
LABEL_32:
        uint64_t v49 = sub_100010218(v37);
        uint64_t v50 = *(int *)(v49 + 48);
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        if (v6(&a2[v50], 1, v4))
        {
          uint64_t v53 = sub_100010218(&qword_1007FD208);
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&a1[*(int *)(v49 + 64)], &a2[*(int *)(v49 + 64)], v4);
        }
        else
        {
          uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
          v54(v51, v52, v4);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v51, 0, 1, v4);
          v54(&a1[*(int *)(v49 + 64)], &a2[*(int *)(v49 + 64)], v4);
        }
        break;
      default:
        uint64_t v8 = type metadata accessor for LayoutSubview();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = sub_100010218(&qword_1008133D8);
        *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1005F5BC0()
{
  uint64_t v0 = type metadata accessor for LayoutSubview();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v11;
    uint64_t v13 = v2;
    sub_1005F5D78();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v14 = &v10;
      swift_getTupleTypeLayout3();
      uint64_t v15 = &v9;
      swift_getTupleTypeLayout3();
      int v16 = &v8;
      swift_getTupleTypeLayout3();
      uint64_t v17 = &v7;
      swift_getTupleTypeLayout3();
      uint64_t v18 = &v6;
      swift_getTupleTypeLayout3();
      uint64_t v19 = &v5;
      swift_getTupleTypeLayout3();
      uint64_t v20 = &v4;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_1005F5D78()
{
  if (!qword_100813488)
  {
    type metadata accessor for LayoutSubview();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100813488);
    }
  }
}

ValueMetadata *type metadata accessor for InsightsMosaicLayout.IsExpanded()
{
  return &type metadata for InsightsMosaicLayout.IsExpanded;
}

uint64_t initializeWithCopy for InsightsMosaicLayout.Cache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsMosaicLayout.Cache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for InsightsMosaicLayout.Cache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for InsightsMosaicLayout.Cache()
{
  return &type metadata for InsightsMosaicLayout.Cache;
}

unsigned char *storeEnumTagSinglePayload for InsightsMosaicLayout.Size(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005F5FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsMosaicLayout.Size()
{
  return &type metadata for InsightsMosaicLayout.Size;
}

unint64_t sub_1005F6020()
{
  unint64_t result = qword_1008134B8[0];
  if (!qword_1008134B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1008134B8);
  }
  return result;
}

void sub_1005F6074()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1001B6688();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1005F6180(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  uint64_t v41 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v9 = *(void *)(v41 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = (v10 & 0xF8) + 16;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  int v14 = (v10 | v7) & 0x100000;
  if ((v11 | v7) != 7
    || v14 != 0
    || (v13 & 0xFFFFFFFFFFFFFFF8)
     + ((v12
       + ((((((v8 + ((v7 + 3) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 41) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
     + 17 > 0x18)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + (((v11 | v7) + 16) & ~(v11 | v7));
  }
  else
  {
    uint64_t v40 = ~v11;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
    *(unsigned char *)(a1 + 2) = *((unsigned char *)a2 + 2);
    uint64_t v18 = (uint64_t)a2 + v7;
    unint64_t v19 = (a1 + v7 + 3) & ~(unint64_t)v7;
    unint64_t v20 = (v18 + 3) & ~(unint64_t)v7;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v19, v20, v5);
    unint64_t v21 = (v8 + v19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v8 + v20) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
    *(void *)(v21 + 8) = *(void *)(v22 + 8);
    unint64_t v23 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    LOBYTE(v20) = *(unsigned char *)(v24 + 17);
    uint64_t v27 = *(unsigned __int8 *)(v24 + 16);
    swift_retain();
    sub_1005F64BC(v25, v26, v27, v20);
    *(void *)unint64_t v23 = v25;
    *(void *)(v23 + 8) = v26;
    *(unsigned char *)(v23 + 16) = v27;
    *(unsigned char *)(v23 + 17) = v20;
    unint64_t v28 = (v23 + 25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v24 + 25) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = *(void *)v29;
    LOBYTE(v26) = *(unsigned char *)(v29 + 8);
    sub_100026CCC(*(void *)v29, v26);
    *(void *)unint64_t v28 = v30;
    *(unsigned char *)(v28 + 8) = v26;
    unint64_t v31 = (v23 + 41) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v24 + 41) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = *(void *)v32;
    LOBYTE(v26) = *(unsigned char *)(v32 + 8);
    sub_100026CCC(*(void *)v32, v26);
    *(void *)unint64_t v31 = v33;
    *(unsigned char *)(v31 + 8) = v26;
    uint64_t v34 = (void *)((v12 + v31) & v40);
    uint64_t v35 = (const void *)((v12 + v32) & v40);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v35, 1, v41))
    {
      memcpy(v34, v35, v13);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v34, v35, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0, 1, v41);
    }
    *((unsigned char *)v34 + v13) = *((unsigned char *)v35 + v13);
    unint64_t v37 = ((unint64_t)v34 + v13) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = ((unint64_t)v35 + v13) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v37 + 8) = *(void *)(v38 + 8);
    *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1005F64BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1005F6500(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = v2 + 8;
  unint64_t v4 = (a1 + *(unsigned __int8 *)(v2 + 80) + 3) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v4);
  unint64_t v5 = (*(void *)(v3 + 56) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1005F6678(*(void *)v6, *(void *)(v6 + 8), *(unsigned __int8 *)(v6 + 16), *(unsigned char *)(v6 + 17));
  sub_100026DF8(*(void *)((v6 + 25) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v6 + 25) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v7 = (v6 + 41) & 0xFFFFFFFFFFFFFFF8;
  sub_100026DF8(*(void *)v7, *(unsigned char *)(v7 + 8));
  uint64_t v8 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v11 = (v7 + v10 + 9) & ~v10;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }

  return swift_release();
}

uint64_t sub_1005F6678(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    swift_release();
  }

  return swift_release();
}

unsigned char *sub_1005F66B8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 3] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 3] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  unint64_t v12 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  LOBYTE(v5) = *(unsigned char *)(v13 + 17);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 16);
  swift_retain();
  sub_1005F64BC(v14, v15, v16, v5);
  *(void *)unint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  *(unsigned char *)(v12 + 16) = v16;
  *(unsigned char *)(v12 + 17) = v5;
  unint64_t v17 = (v12 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v13 + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v15) = *(unsigned char *)(v18 + 8);
  sub_100026CCC(*(void *)v18, v15);
  *(void *)unint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v15;
  unint64_t v20 = (v12 + 41) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v13 + 41) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  LOBYTE(v15) = *(unsigned char *)(v21 + 8);
  sub_100026CCC(*(void *)v21, v15);
  *(void *)unint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v15;
  uint64_t v23 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = v25 + 16;
  unint64_t v27 = v25 + 16 + v20;
  unint64_t v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (char *)(v27 & v28);
  uint64_t v30 = (char *)((v26 + v21) & v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23))
  {
    int v31 = *(_DWORD *)(v24 + 84);
    size_t v32 = *(void *)(v24 + 64);
    if (v31) {
      size_t v33 = v32;
    }
    else {
      size_t v33 = v32 + 1;
    }
    memcpy(v29, v30, v33);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v29, v30, v23);
    uint64_t v35 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
    uint64_t v34 = v24 + 56;
    v35(v29, 0, 1, v23);
    int v31 = *(_DWORD *)(v34 + 28);
    size_t v32 = *(void *)(v34 + 8);
  }
  if (v31) {
    size_t v36 = v32;
  }
  else {
    size_t v36 = v32 + 1;
  }
  unint64_t v37 = (unint64_t)&v29[v36];
  unint64_t v38 = (unint64_t)&v30[v36];
  *(unsigned char *)unint64_t v37 = *(unsigned char *)v38;
  v37 &= 0xFFFFFFFFFFFFFFF8;
  v38 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
  swift_retain();
  return a1;
}

unsigned char *sub_1005F6934(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 3] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 3] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_retain();
  swift_release();
  unint64_t v12 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  LOBYTE(v10) = *(unsigned char *)(v13 + 17);
  unsigned __int8 v16 = *(unsigned char *)(v13 + 16);
  sub_1005F64BC(*(void *)v13, v15, v16, v10);
  uint64_t v17 = *(void *)v12;
  uint64_t v18 = *(void *)(v12 + 8);
  char v19 = *(unsigned char *)(v12 + 17);
  *(void *)unint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  uint64_t v20 = *(unsigned __int8 *)(v12 + 16);
  *(unsigned char *)(v12 + 16) = v16;
  *(unsigned char *)(v12 + 17) = v10;
  sub_1005F6678(v17, v18, v20, v19);
  unint64_t v21 = (v12 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v13 + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)v22;
  LOBYTE(v15) = *(unsigned char *)(v22 + 8);
  sub_100026CCC(*(void *)v22, v15);
  uint64_t v24 = *(void *)v21;
  char v25 = *(unsigned char *)(v21 + 8);
  *(void *)unint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = v15;
  sub_100026DF8(v24, v25);
  unint64_t v26 = (v12 + 41) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v13 + 41) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  LOBYTE(v15) = *(unsigned char *)(v27 + 8);
  sub_100026CCC(*(void *)v27, v15);
  uint64_t v29 = *(void *)v26;
  char v30 = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v15;
  sub_100026DF8(v29, v30);
  uint64_t v31 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(_DWORD *)(v32 + 80) & 0xF8;
  uint64_t v34 = v33 + 16;
  unint64_t v35 = v33 + 16 + v26;
  unint64_t v36 = ~v33 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (char *)(v35 & v36);
  unint64_t v38 = (char *)((v34 + v27) & v36);
  uint64_t v39 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v32 + 48);
  LODWORD(v27) = v39(v35 & v36, 1, v31);
  int v40 = v39((unint64_t)v38, 1, v31);
  if (v27)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v37, v38, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v31);
      goto LABEL_12;
    }
    int v41 = *(_DWORD *)(v32 + 84);
    size_t v42 = *(void *)(v32 + 64);
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v37, v38, v31);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
    int v41 = *(_DWORD *)(v32 + 84);
    size_t v42 = *(void *)(v32 + 64);
  }
  if (v41) {
    size_t v43 = v42;
  }
  else {
    size_t v43 = v42 + 1;
  }
  memcpy(v37, v38, v43);
LABEL_12:
  if (*(_DWORD *)(v32 + 84)) {
    uint64_t v44 = *(void *)(v32 + 64);
  }
  else {
    uint64_t v44 = *(void *)(v32 + 64) + 1;
  }
  unint64_t v45 = (unint64_t)&v37[v44];
  unint64_t v46 = (unint64_t)&v38[v44];
  *(unsigned char *)unint64_t v45 = *(unsigned char *)v46;
  unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v45 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v46 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v47 + 16) = *(unsigned char *)(v48 + 16);
  return a1;
}

unsigned char *sub_1005F6C64(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 3] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 3] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v10 = *v11;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v14 = *(_OWORD *)v13;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  *(_OWORD *)unint64_t v12 = v14;
  unint64_t v15 = (v12 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v13 + 25) & 0xFFFFFFFFFFFFFFF8;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  unint64_t v18 = (v12 + 41) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v13 + 41) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v13) = *(unsigned char *)(v19 + 8);
  *(void *)unint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = v13;
  uint64_t v20 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v23 = v22 + 16;
  unint64_t v24 = v22 + 16 + v18;
  unint64_t v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (char *)(v24 & v25);
  unint64_t v27 = (char *)((v23 + v19) & v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v27, 1, v20))
  {
    int v28 = *(_DWORD *)(v21 + 84);
    size_t v29 = *(void *)(v21 + 64);
    if (v28) {
      size_t v30 = v29;
    }
    else {
      size_t v30 = v29 + 1;
    }
    memcpy(v26, v27, v30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v27, v20);
    uint64_t v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
    uint64_t v31 = v21 + 56;
    v32(v26, 0, 1, v20);
    int v28 = *(_DWORD *)(v31 + 28);
    size_t v29 = *(void *)(v31 + 8);
  }
  if (v28) {
    size_t v33 = v29;
  }
  else {
    size_t v33 = v29 + 1;
  }
  unint64_t v34 = (unint64_t)&v26[v33];
  unint64_t v35 = (unint64_t)&v27[v33];
  *(unsigned char *)unint64_t v34 = *(unsigned char *)v35;
  v34 &= 0xFFFFFFFFFFFFFFF8;
  v35 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  return a1;
}

unsigned char *sub_1005F6E8C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (unint64_t)&a1[v6 + 3] & ~v6;
  uint64_t v8 = (unint64_t)&a2[v6 + 3] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 24) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  unint64_t v12 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v14 = *(unsigned char *)(v13 + 16);
  char v15 = *(unsigned char *)(v13 + 17);
  uint64_t v16 = *(void *)v12;
  uint64_t v17 = *(void *)(v12 + 8);
  char v18 = *(unsigned char *)(v12 + 17);
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
  uint64_t v19 = *(unsigned __int8 *)(v12 + 16);
  *(unsigned char *)(v12 + 16) = v14;
  *(unsigned char *)(v12 + 17) = v15;
  sub_1005F6678(v16, v17, v19, v18);
  unint64_t v20 = (v12 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v13 + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  LOBYTE(v21) = *(unsigned char *)(v21 + 8);
  uint64_t v23 = *(void *)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v21;
  sub_100026DF8(v23, v24);
  unint64_t v25 = (v12 + 41) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v13 + 41) & 0xFFFFFFFFFFFFFFF8;
  char v27 = *(unsigned char *)(v26 + 8);
  uint64_t v28 = *(void *)v25;
  char v29 = *(unsigned char *)(v25 + 8);
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = v27;
  sub_100026DF8(v28, v29);
  uint64_t v30 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(_DWORD *)(v31 + 80) & 0xF8;
  uint64_t v33 = v32 + 16;
  unint64_t v34 = v32 + 16 + v25;
  unint64_t v35 = ~v32 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (char *)(v34 & v35);
  unint64_t v37 = (char *)((v33 + v26) & v35);
  unint64_t v38 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v26) = v38(v34 & v35, 1, v30);
  int v39 = v38((unint64_t)v37, 1, v30);
  if (v26)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v36, v37, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v36, 0, 1, v30);
      goto LABEL_12;
    }
    int v40 = *(_DWORD *)(v31 + 84);
    size_t v41 = *(void *)(v31 + 64);
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v36, v37, v30);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v30);
    int v40 = *(_DWORD *)(v31 + 84);
    size_t v41 = *(void *)(v31 + 64);
  }
  if (v40) {
    size_t v42 = v41;
  }
  else {
    size_t v42 = v41 + 1;
  }
  memcpy(v36, v37, v42);
LABEL_12:
  if (*(_DWORD *)(v31 + 84)) {
    uint64_t v43 = *(void *)(v31 + 64);
  }
  else {
    uint64_t v43 = *(void *)(v31 + 64) + 1;
  }
  unint64_t v44 = (unint64_t)&v36[v43];
  unint64_t v45 = (unint64_t)&v37[v43];
  *(unsigned char *)unint64_t v44 = *(unsigned char *)v45;
  unint64_t v46 = v44 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v44 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v45 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  return a1;
}

uint64_t sub_1005F7180(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(type metadata accessor for AccessibilityTechnologies() - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  else {
    unsigned int v12 = v11;
  }
  if (v7 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = v7;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  int v15 = *(_DWORD *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  if (v10) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = v16 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = *(void *)(v6 + 64) + 7;
  uint64_t v19 = v15 & 0xF8;
  unint64_t v20 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = v19 + 16;
  if (a2 <= v13) {
    goto LABEL_33;
  }
  unint64_t v22 = (v17 & 0xFFFFFFFFFFFFFFF8)
      + ((v21
        + ((((((v18 + ((v14 + 3) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & 0xFFFFFFFFFFFFFFF8)) & v20)
      + 17;
  char v23 = 8 * v22;
  if (v22 <= 3)
  {
    unsigned int v26 = ((a2 - v13 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v26))
    {
      int v24 = *(_DWORD *)((char *)a1 + v22);
      if (!v24) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    if (v26 > 0xFF)
    {
      int v24 = *(unsigned __int16 *)((char *)a1 + v22);
      if (!*(unsigned __int16 *)((char *)a1 + v22)) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
    if (v26 < 2)
    {
LABEL_33:
      uint64_t v30 = ((unint64_t)a1 + v14 + 3) & ~v14;
      if (v7 >= v12)
      {
        unint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
        return v34(v30, v7, v5);
      }
      else
      {
        unint64_t v31 = (v18 + v30) & 0xFFFFFFFFFFFFFFF8;
        if (v13 > 0x7FFFFFFE)
        {
          unsigned int v35 = (*(uint64_t (**)(unint64_t))(v9 + 48))((v21
                                                                       + ((((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & 0xFFFFFFFFFFFFFFF8)) & v20);
          if (v35 >= 2) {
            return v35 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          unint64_t v32 = *(void *)(v31 + 8);
          if (v32 >= 0xFFFFFFFF) {
            LODWORD(v32) = -1;
          }
          int v33 = v32 - 1;
          if (v33 < 0) {
            int v33 = -1;
          }
          return (v33 + 1);
        }
      }
    }
  }
  int v24 = *((unsigned __int8 *)a1 + v22);
  if (!*((unsigned char *)a1 + v22)) {
    goto LABEL_33;
  }
LABEL_23:
  int v27 = (v24 - 1) << v23;
  if (v22 <= 3)
  {
    int v28 = v22;
  }
  else
  {
    int v27 = 0;
    int v28 = 4;
  }
  switch(v28)
  {
    case 2:
      int v29 = *a1;
      break;
    case 3:
      int v29 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v29 = *(_DWORD *)a1;
      break;
    default:
      int v29 = *(unsigned __int8 *)a1;
      break;
  }
  return v13 + (v29 | v27) + 1;
}

void sub_1005F7484(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(type metadata accessor for AccessibilityTechnologies() - 8);
  int v13 = *(_DWORD *)(v11 + 80);
  int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(void *)(v8 + 64);
  if (v12) {
    unsigned int v16 = v12 - 1;
  }
  else {
    unsigned int v16 = 0;
  }
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v9 <= v17) {
    unsigned int v18 = v17;
  }
  else {
    unsigned int v18 = v9;
  }
  uint64_t v19 = v15 + 7;
  unint64_t v20 = (((((v15 + 7 + ((v14 + 3) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ~(unint64_t)(v13 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (v13 & 0xF8) + 16;
  if (v12) {
    size_t v23 = *(void *)(v11 + 64);
  }
  else {
    size_t v23 = *(void *)(v11 + 64) + 1;
  }
  size_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + ((v22 + v20) & v21) + 17;
  if (a3 <= v18) {
    goto LABEL_23;
  }
  if (v24 <= 3)
  {
    unsigned int v25 = ((a3 - v18 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v25))
    {
      int v10 = 4;
      if (v18 < a2) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v25 >= 0x100) {
      int v10 = 2;
    }
    else {
      int v10 = v25 > 1;
    }
LABEL_23:
    if (v18 < a2) {
      goto LABEL_24;
    }
LABEL_16:
    switch(v10)
    {
      case 1:
        a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_31;
      case 2:
        *(_WORD *)&a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_31;
      case 3:
        goto LABEL_65;
      case 4:
        *(_DWORD *)&a1[v24] = 0;
        goto LABEL_30;
      default:
LABEL_30:
        if (a2)
        {
LABEL_31:
          uint64_t v28 = (unint64_t)&a1[v14 + 3] & ~v14;
          if (v9 >= v17)
          {
            uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
            v30(v28, a2, v9, v7);
          }
          else
          {
            unint64_t v29 = (v19 + v28) & 0xFFFFFFFFFFFFFFF8;
            if (v18 > 0x7FFFFFFE)
            {
              unint64_t v31 = (unsigned char *)((v22 + ((((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & 0xFFFFFFFFFFFFFFF8)) & v21);
              if (v17 >= a2)
              {
                if (v16 >= a2)
                {
                  int v39 = *(void (**)(unint64_t, void))(v11 + 56);
                  v39((v22 + ((((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & 0xFFFFFFFFFFFFFFF8)) & v21, (a2 + 1));
                }
                else
                {
                  if (v23 <= 3) {
                    int v37 = ~(-1 << (8 * v23));
                  }
                  else {
                    int v37 = -1;
                  }
                  if (v23)
                  {
                    int v36 = v37 & (~v16 + a2);
                    if (v23 <= 3) {
                      int v38 = v23;
                    }
                    else {
                      int v38 = 4;
                    }
                    bzero(v31, v23);
                    switch(v38)
                    {
                      case 2:
                        *(_WORD *)unint64_t v31 = v36;
                        break;
                      case 3:
                        *(_WORD *)unint64_t v31 = v36;
                        v31[2] = BYTE2(v36);
                        break;
                      case 4:
                        goto LABEL_59;
                      default:
                        goto LABEL_48;
                    }
                  }
                }
              }
              else
              {
                int v32 = v23 & 0xFFFFFFF8;
                size_t v33 = (v23 & 0xFFFFFFF8) + 17;
                int v34 = ~v17 + a2;
                int v35 = (~(_BYTE)v17 + a2);
                if (v33 >= 4) {
                  int v36 = v34;
                }
                else {
                  int v36 = v35;
                }
                bzero((void *)((v22 + ((((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & 0xFFFFFFFFFFFFFFF8)) & v21), v33);
                if (v32 == -16) {
LABEL_48:
                }
                  *unint64_t v31 = v36;
                else {
LABEL_59:
                }
                  *(_DWORD *)unint64_t v31 = v36;
              }
            }
            else
            {
              *(void *)(v29 + 8) = a2;
            }
          }
        }
        break;
    }
    return;
  }
  int v10 = 1;
  if (v18 >= a2) {
    goto LABEL_16;
  }
LABEL_24:
  unsigned int v26 = ~v18 + a2;
  if (v24 < 4)
  {
    int v27 = (v26 >> (8 * v24)) + 1;
    bzero(a1, v24);
    *a1 = v26 & ~(-1 << (8 * v24));
  }
  else
  {
    bzero(a1, v24);
    *(_DWORD *)a1 = v26;
    int v27 = 1;
  }
  switch(v10)
  {
    case 1:
      a1[v24] = v27;
      break;
    case 2:
      *(_WORD *)&a1[v24] = v27;
      break;
    case 3:
LABEL_65:
      __break(1u);
      JUMPOUT(0x1005F78B4);
    case 4:
      *(_DWORD *)&a1[v24] = v27;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for InsightsButton()
{
  return sub_100073C20();
}

uint64_t sub_1005F7904()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005F7948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v283 = a2;
  uint64_t v282 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v281 = *(void *)(v282 - 8);
  __chkstk_darwin(v282);
  v280 = (char *)v196 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = type metadata accessor for FocusInteractions();
  uint64_t v278 = *(void *)(v279 - 8);
  __chkstk_darwin(v279);
  v277 = (char *)v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = *(void *)(a1 - 8);
  uint64_t v275 = *(void *)(v301 + 64);
  __chkstk_darwin(v5);
  v276 = (char *)v196 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v274 = (char *)v196 - v8;
  uint64_t v297 = type metadata accessor for ContentShapeKinds();
  uint64_t v299 = *(void *)(v297 - 8);
  __chkstk_darwin(v297);
  v296 = (char *)v196 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v295 = type metadata accessor for RoundedCornerStyle();
  uint64_t v298 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  v294 = (char *)v196 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v293);
  v292 = (char *)v196 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = a1;
  uint64_t v300 = *(void *)(a1 + 16);
  sub_100014440(&qword_100813540);
  type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100813548);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v13 = sub_100014440(&qword_1008000E8);
  uint64_t v302 = *(void *)(a1 + 24);
  uint64_t v14 = v302;
  uint64_t v15 = sub_100014488(&qword_100813550, &qword_100813540);
  uint64_t v340 = v14;
  uint64_t v341 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_100014488(&qword_100813558, &qword_100813548);
  uint64_t v338 = WitnessTable;
  uint64_t v339 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = sub_100014488(&qword_100800160, &qword_1008000E8);
  uint64_t v334 = v12;
  v335 = (void (*)(void, void, void))v13;
  uint64_t v336 = v18;
  uint64_t v337 = v19;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v334 = v12;
  v335 = (void (*)(void, void, void))v13;
  uint64_t v336 = v18;
  uint64_t v337 = v19;
  uint64_t OpaqueTypeConformance2 = (void (*)(char *, uint64_t))swift_getOpaqueTypeConformance2();
  uint64_t v20 = type metadata accessor for VStack();
  v262 = *(void (**)(char *, char *, uint64_t))(v20 - 8);
  __chkstk_darwin(v20);
  v249 = (char *)v196 - v21;
  uint64_t v226 = v20;
  uint64_t v22 = type metadata accessor for ModifiedContent();
  v268 = *(void (***)(char *, uint64_t))(v22 - 8);
  __chkstk_darwin(v22);
  v239 = (char *)v196 - v23;
  uint64_t v229 = v22;
  uint64_t v24 = type metadata accessor for ModifiedContent();
  uint64_t v263 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  v248 = (char *)v196 - v25;
  uint64_t v235 = v24;
  uint64_t v26 = type metadata accessor for ModifiedContent();
  uint64_t v285 = v26;
  uint64_t v260 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  long long v242 = (char *)v196 - v27;
  uint64_t v225 = swift_getWitnessTable();
  uint64_t v332 = v225;
  v333 = &protocol witness table for _PaddingLayout;
  uint64_t v228 = swift_getWitnessTable();
  uint64_t v330 = v228;
  v331 = &protocol witness table for _FlexFrameLayout;
  uint64_t v234 = swift_getWitnessTable();
  uint64_t v328 = v234;
  v329 = &protocol witness table for _GeometryGroupEffect;
  v286 = (void (*)(void, void, void))swift_getWitnessTable();
  uint64_t v334 = v26;
  v335 = v286;
  v289 = (char *)&opaque type descriptor for <<opaque return type of View.invalidatableContent(_:)>>;
  uint64_t v243 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v259 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  uint64_t v227 = (char *)v196 - v28;
  sub_100014440(&qword_100813560);
  uint64_t v287 = type metadata accessor for ModifiedContent();
  v253 = *(uint64_t (***)(void))(v287 - 8);
  __chkstk_darwin(v287);
  char v238 = (char *)v196 - v29;
  sub_100014440(&qword_100813568);
  uint64_t v30 = type metadata accessor for ModifiedContent();
  v272 = *(void (**)(char *, uint64_t))(v30 - 8);
  __chkstk_darwin(v30);
  char v237 = (char *)v196 - v31;
  sub_100014440(&qword_100813570);
  uint64_t v197 = v30;
  uint64_t v32 = type metadata accessor for ModifiedContent();
  uint64_t v265 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  v247 = (char *)v196 - v33;
  uint64_t v201 = v32;
  uint64_t v34 = type metadata accessor for ModifiedContent();
  uint64_t v267 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  v251 = (char *)v196 - v35;
  sub_100014440(&qword_100813578);
  uint64_t v203 = v34;
  uint64_t v36 = type metadata accessor for ModifiedContent();
  uint64_t v270 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v246 = (char *)v196 - v37;
  sub_100014440(&qword_100813580);
  uint64_t v209 = v36;
  uint64_t v38 = type metadata accessor for ModifiedContent();
  uint64_t v266 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  v250 = (char *)v196 - v39;
  sub_100014440(&qword_100813588);
  uint64_t v211 = v38;
  uint64_t v40 = type metadata accessor for ModifiedContent();
  uint64_t v271 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v244 = (char *)v196 - v41;
  sub_100014440(&qword_100813590);
  uint64_t v212 = v40;
  uint64_t v42 = type metadata accessor for ModifiedContent();
  uint64_t v273 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  v288 = (char *)v196 - v43;
  uint64_t v334 = v285;
  v335 = v286;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  v196[1] = v44;
  uint64_t v45 = sub_100014488(&qword_100813598, &qword_100813560);
  uint64_t v326 = v44;
  uint64_t v327 = v45;
  uint64_t v46 = swift_getWitnessTable();
  v196[2] = v46;
  uint64_t v47 = sub_100014488(&qword_1008135A0, &qword_100813568);
  uint64_t v324 = v46;
  uint64_t v325 = v47;
  uint64_t v48 = swift_getWitnessTable();
  v196[3] = v48;
  uint64_t v49 = sub_100014488(&qword_1008135A8, &qword_100813570);
  uint64_t v322 = v48;
  uint64_t v323 = v49;
  uint64_t v198 = swift_getWitnessTable();
  uint64_t v320 = v198;
  v321 = &protocol witness table for _ShadowEffect;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v202 = v50;
  uint64_t v51 = sub_100014488(&qword_1008135B0, &qword_100813578);
  uint64_t v318 = v50;
  uint64_t v319 = v51;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v206 = v52;
  uint64_t v53 = sub_100014488(&qword_1008135B8, &qword_100813580);
  uint64_t v316 = v52;
  uint64_t v317 = v53;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v208 = v54;
  uint64_t v55 = sub_100014488(&qword_1008135C0, &qword_100813588);
  uint64_t v314 = v54;
  uint64_t v315 = v55;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v210 = v56;
  uint64_t v57 = sub_100014488(&qword_1008135C8, &qword_100813590);
  uint64_t v312 = v56;
  uint64_t v313 = v57;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v334 = v42;
  v335 = (void (*)(void, void, void))v58;
  uint64_t v214 = v42;
  uint64_t v215 = v58;
  uint64_t v59 = v58;
  uint64_t v60 = swift_getOpaqueTypeMetadata2();
  uint64_t v236 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  v284 = (char *)v196 - v61;
  uint64_t v334 = v42;
  v335 = (void (*)(void, void, void))v59;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v334 = v60;
  v335 = (void (*)(void, void, void))v62;
  uint64_t v63 = v60;
  uint64_t v221 = v60;
  uint64_t v222 = v62;
  uint64_t v64 = v62;
  uint64_t v65 = swift_getOpaqueTypeMetadata2();
  uint64_t v232 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v220 = (char *)v196 - v66;
  uint64_t v334 = v63;
  v335 = (void (*)(void, void, void))v64;
  uint64_t v67 = swift_getOpaqueTypeConformance2();
  uint64_t v334 = v65;
  v335 = (void (*)(void, void, void))v67;
  uint64_t v68 = v65;
  uint64_t v204 = v65;
  uint64_t v205 = v67;
  uint64_t v69 = v67;
  uint64_t v70 = swift_getOpaqueTypeMetadata2();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v223 = v70;
  uint64_t v224 = v71;
  __chkstk_darwin(v70);
  uint64_t v218 = (char *)v196 - v72;
  sub_100014440(&qword_1007FCBC8);
  uint64_t v73 = type metadata accessor for ModifiedContent();
  uint64_t v233 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v217 = (char *)v196 - v74;
  sub_100014440(&qword_1008135D0);
  uint64_t v216 = v73;
  uint64_t v75 = type metadata accessor for ModifiedContent();
  uint64_t v231 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v219 = (char *)v196 - v76;
  uint64_t v334 = v68;
  v335 = (void (*)(void, void, void))v69;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  uint64_t v207 = v77;
  uint64_t v78 = sub_100014488((unint64_t *)&qword_1007FCBC0, &qword_1007FCBC8);
  uint64_t v310 = v77;
  uint64_t v311 = v78;
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v213 = v79;
  uint64_t v80 = sub_100014488(&qword_1008135D8, &qword_1008135D0);
  uint64_t v308 = v79;
  uint64_t v309 = v80;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v334 = v75;
  v335 = (void (*)(void, void, void))v81;
  uint64_t v82 = v75;
  uint64_t v199 = v75;
  uint64_t v200 = v81;
  uint64_t v83 = v81;
  uint64_t v84 = swift_getOpaqueTypeMetadata2();
  uint64_t v258 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  v289 = (char *)v196 - v85;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v261 = v84;
  uint64_t v86 = type metadata accessor for ModifiedContent();
  uint64_t v264 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  v257 = (char *)v196 - v87;
  uint64_t v334 = v82;
  v335 = (void (*)(void, void, void))v83;
  uint64_t v88 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = sub_1005FAF98((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v230 = v88;
  uint64_t v306 = v88;
  uint64_t v307 = v89;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v269 = v86;
  uint64_t v334 = v86;
  v335 = (void (*)(void, void, void))v90;
  uint64_t v245 = v90;
  uint64_t v254 = swift_getOpaqueTypeMetadata2();
  uint64_t v252 = *(void *)(v254 - 8);
  __chkstk_darwin(v254);
  uint64_t v240 = (char *)v196 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92);
  long long v241 = (char *)v196 - v93;
  uint64_t v303 = v300;
  uint64_t v304 = v302;
  uint64_t v94 = v291;
  uint64_t v305 = v291;
  static HorizontalAlignment.center.getter();
  unint64_t v95 = v249;
  VStack.init(alignment:spacing:content:)();
  uint64_t v96 = v290;
  uint64_t v97 = v94;
  sub_1005FA52C(v290);
  uint64_t v98 = v239;
  uint64_t v99 = v226;
  View.padding(_:)();
  (*((void (**)(char *, uint64_t))v262 + 1))(v95, v99);
  static Alignment.center.getter();
  uint64_t v100 = v229;
  uint64_t v101 = v248;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v268[1](v98, v100);
  double v102 = v242;
  uint64_t v103 = v235;
  View.modifier<A>(_:)();
  (*(void (**)(char *, uint64_t))(v263 + 8))(v101, v103);
  long long v104 = v227;
  uint64_t v105 = v285;
  View.invalidatableContent(_:)();
  (*(void (**)(char *, uint64_t))(v260 + 8))(v102, v105);
  static Color.black.getter();
  uint64_t v106 = (char *)(v94 + *(int *)(v96 + 48));
  char v107 = *v106;
  uint64_t v108 = (void (*)(void, void, void))*((void *)v106 + 1);
  LOBYTE(v334) = v107;
  v335 = v108;
  sub_100010218(&qword_1008014F0);
  State.wrappedValue.getter();
  uint64_t v109 = Color.opacity(_:)();
  swift_release();
  uint64_t v334 = v109;
  static Edge.Set.all.getter();
  uint64_t v110 = v238;
  uint64_t v111 = v243;
  View.overlay<A>(_:ignoresSafeAreaEdges:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v259 + 8))(v104, v111);
  char v112 = static Edge.Set.all.getter();
  uint64_t v113 = v237;
  uint64_t v114 = v287;
  sub_100618160(v112);
  ((void (*)(char *, uint64_t))v253[1])(v110, v114);
  LODWORD(v285) = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v115 = v298;
  uint64_t v116 = *(void (***)(char *, uint64_t))(v298 + 104);
  uint64_t v263 = v298 + 104;
  v268 = v116;
  uint64_t v117 = v294;
  uint64_t v118 = v295;
  ((void (*)(char *))v116)(v294);
  uint64_t v119 = v292;
  uint64_t v120 = &v292[*(int *)(v293 + 20)];
  uint64_t v121 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  uint64_t v260 = v115 + 16;
  v262 = v121;
  v121(v120, v117, v118);
  __asm { FMOV            V0.2D, #12.0 }
  long long v259 = _Q0;
  *uint64_t v119 = _Q0;
  uint64_t v127 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v298 = v115 + 8;
  uint64_t OpaqueTypeConformance2 = v127;
  v127(v117, v118);
  OpaqueTypeMetadata2 = sub_1005FAF98(&qword_1008135E0, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
  uint64_t v128 = v247;
  uint64_t v129 = v197;
  View.clipShape<A>(_:style:)();
  v253 = &type metadata accessor for RoundedRectangle;
  sub_1005FAF30((uint64_t)v119, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*((void (**)(char *, uint64_t))v272 + 1))(v113, v129);
  uint64_t v130 = v251;
  uint64_t v131 = v201;
  sub_100639328();
  (*(void (**)(char *, uint64_t))(v265 + 8))(v128, v131);
  LOBYTE(v334) = *(unsigned char *)(v97 + 1);
  sub_1005F1B28();
  NSString v132 = v246;
  uint64_t v133 = v203;
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v267 + 8))(v130, v133);
  LOBYTE(v334) = sub_1005FA1D0(v96);
  sub_1005F19E4();
  uint64_t v134 = v250;
  uint64_t v135 = v209;
  View.layoutValue<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v270 + 8))(v132, v135);
  uint64_t v136 = v97;
  sub_1005FA1D0(v96);
  uint64_t v137 = v244;
  uint64_t v138 = v211;
  View.zIndex(_:)();
  (*(void (**)(char *, uint64_t))(v266 + 8))(v134, v138);
  uint64_t v139 = v296;
  static ContentShapeKinds.interaction.getter();
  sub_1005FAB58();
  uint64_t v140 = v212;
  View.contentShape<A>(_:_:eoFill:)();
  unint64_t v141 = *(void (**)(char *, uint64_t))(v299 + 8);
  v299 += 8;
  v272 = v141;
  v141(v139, v297);
  (*(void (**)(char *, uint64_t))(v271 + 8))(v137, v140);
  uint64_t v142 = v301;
  uint64_t v271 = *(void *)(v301 + 16);
  uint64_t v287 = v301 + 16;
  uint64_t v143 = v274;
  uint64_t v144 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v271)(v274, v97, v96);
  uint64_t v145 = *(unsigned __int8 *)(v142 + 80);
  uint64_t v146 = (v145 + 32) & ~v145;
  uint64_t v270 = v146;
  uint64_t v275 = v145 | 7;
  uint64_t v147 = swift_allocObject();
  uint64_t v148 = v300;
  uint64_t v149 = v302;
  *(void *)(v147 + 16) = v300;
  *(void *)(v147 + 24) = v149;
  uint64_t v150 = v147 + v146;
  v286 = *(void (**)(void, void, void))(v142 + 32);
  uint64_t v301 = v142 + 32;
  uint64_t v151 = v144;
  v286(v150, v143, v144);
  uint64_t v152 = v214;
  id v153 = v288;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v273 + 8))(v153, v152);
  uint64_t v154 = v151;
  uint64_t v155 = v151;
  uint64_t v156 = (void (*)(char *, uint64_t, uint64_t))v271;
  ((void (*)(char *, uint64_t, uint64_t))v271)(v143, v136, v155);
  uint64_t v157 = swift_allocObject();
  uint64_t v158 = v302;
  *(void *)(v157 + 16) = v148;
  *(void *)(v157 + 24) = v158;
  uint64_t v159 = v270;
  v286(v157 + v270, v143, v154);
  long long v160 = v276;
  v156(v276, v136, v154);
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v148;
  *(void *)(v161 + 24) = v158;
  uint64_t v162 = v161 + v159;
  uint64_t v163 = v154;
  v286(v162, v160, v154);
  uint64_t v165 = v220;
  uint64_t v164 = v221;
  uint64_t v166 = v284;
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v236 + 8))(v166, v164);
  uint64_t v167 = v277;
  static FocusInteractions.activate.getter();
  uint64_t v168 = v218;
  uint64_t v169 = v204;
  View.focusable(_:interactions:)();
  (*(void (**)(char *, uint64_t))(v278 + 8))(v167, v279);
  (*(void (**)(char *, uint64_t))(v232 + 8))(v165, v169);
  uint64_t v170 = v291;
  unint64_t v171 = v217;
  uint64_t v172 = v223;
  View.disabled(_:)();
  (*(void (**)(char *, uint64_t))(v224 + 8))(v168, v172);
  uint64_t v173 = v296;
  static ContentShapeKinds.accessibility.getter();
  unsigned int v174 = v294;
  uint64_t v175 = v295;
  ((void (*)(char *, void, uint64_t))v268)(v294, v285, v295);
  uint64_t v176 = v292;
  v262(&v292[*(int *)(v293 + 20)], v174, v175);
  _OWORD *v176 = v259;
  OpaqueTypeConformance2(v174, v175);
  unint64_t v177 = v219;
  uint64_t v178 = v216;
  View.contentShape<A>(_:_:eoFill:)();
  sub_1005FAF30((uint64_t)v176, (uint64_t (*)(void))v253);
  v272(v173, v297);
  (*(void (**)(char *, uint64_t))(v233 + 8))(v171, v178);
  uint64_t v179 = v280;
  static AccessibilityChildBehavior.contain.getter();
  uint64_t v180 = v199;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v281 + 8))(v179, v282);
  (*(void (**)(char *, uint64_t))(v231 + 8))(v177, v180);
  sub_1005FA1D0(v163);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v181 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v183 = v182;
  LOBYTE(v178) = v184 & 1;
  sub_1005FA844(v170, v300, v302);
  unint64_t v185 = v257;
  uint64_t v186 = v261;
  uint64_t v187 = v289;
  View.accessibilityAction(named:_:)();
  swift_release();
  sub_10002B8D0(v181, v183, v178);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v258 + 8))(v187, v186);
  sub_100010218(&qword_100801B28);
  AccessibilityFocusState.projectedValue.getter();
  uint64_t v188 = v240;
  uint64_t v189 = v269;
  uint64_t v190 = (void (*)(void, void, void))v245;
  View.accessibilityFocused(_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v264 + 8))(v185, v189);
  uint64_t v334 = v189;
  v335 = v190;
  uint64_t v191 = swift_getOpaqueTypeConformance2();
  uint64_t v192 = v241;
  uint64_t v193 = v254;
  sub_1000B29EC(v188, v254, v191);
  uint64_t v194 = *(void (**)(char *, uint64_t))(v252 + 8);
  v194(v188, v193);
  sub_1000B29EC(v192, v193, v191);
  return ((uint64_t (*)(char *, uint64_t))v194)(v192, v193);
}

uint64_t sub_1005F99F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v65 = a4;
  uint64_t v6 = sub_100010218(&qword_1008000E8);
  __chkstk_darwin(v6);
  uint64_t v77 = (uint64_t)&OpaqueTypeMetadata2 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a3;
  uint64_t v8 = type metadata accessor for InsightsButton();
  uint64_t v75 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v74 = (char *)&OpaqueTypeMetadata2 - v9;
  uint64_t v10 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v10 - 8);
  uint64_t v69 = (char *)&OpaqueTypeMetadata2 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(void *)(a2 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&OpaqueTypeMetadata2 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014440(&qword_100813540);
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v72 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&OpaqueTypeMetadata2 - v16;
  sub_100014440(&qword_100813548);
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v63 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v76 = (char *)&OpaqueTypeMetadata2 - v19;
  uint64_t v20 = sub_100014488(&qword_100813550, &qword_100813540);
  uint64_t v84 = a3;
  uint64_t v85 = v20;
  uint64_t v73 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_100014488(&qword_100813558, &qword_100813548);
  uint64_t v68 = WitnessTable;
  uint64_t v82 = WitnessTable;
  uint64_t v83 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_100014488(&qword_100800160, &qword_1008000E8);
  uint64_t v78 = v18;
  uint64_t v79 = v6;
  uint64_t v64 = v6;
  uint64_t v61 = v23;
  uint64_t v80 = v23;
  uint64_t v81 = v24;
  uint64_t v60 = v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v62 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v58 = (char *)&OpaqueTypeMetadata2 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v27 = __chkstk_darwin(v26);
  uint64_t v59 = (char *)&OpaqueTypeMetadata2 - v28;
  uint64_t v29 = v70;
  uint64_t v30 = v67;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v67 + 16))(v14, v70 + *(int *)(v8 + 44), a2, v27);
  swift_getKeyPath();
  LOBYTE(v23) = sub_1005FA1D0(v8);
  uint64_t v31 = type metadata accessor for WidgetFamily();
  char v32 = 1;
  if (v23) {
    uint64_t v33 = 2;
  }
  else {
    uint64_t v33 = 1;
  }
  uint64_t v34 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v69, v33, 3, v31);
  uint64_t v71 = v17;
  View.environment<A>(_:_:)();
  swift_release();
  sub_1005FAF30(v34, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, a2);
  swift_getKeyPath();
  uint64_t v35 = v29 + *(int *)(v8 + 60);
  uint64_t v36 = *(void *)v35;
  char v37 = *(unsigned char *)(v35 + 8);
  sub_100026CCC(*(void *)v35, v37);
  char v38 = sub_100666714(v36, v37);
  uint64_t v39 = v36;
  char v40 = v37;
  uint64_t v41 = v29;
  uint64_t v43 = v74;
  uint64_t v42 = v75;
  sub_100026DF8(v39, v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v41, v8);
  if ((v38 & 1) == 0) {
    char v32 = v43[2];
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v8);
  LOBYTE(v78) = v32;
  uint64_t v44 = v76;
  uint64_t v45 = v73;
  uint64_t v46 = v71;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v45);
  uint64_t v47 = v77;
  sub_1005FA390(v8, v77);
  type metadata accessor for DynamicTypeSize();
  sub_1005FAF98(&qword_100800128, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v49 = v58;
    uint64_t v50 = v64;
    uint64_t v51 = v61;
    uint64_t v52 = v60;
    View.dynamicTypeSize<A>(_:)();
    sub_1005FAFE0(v47);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v18);
    uint64_t v78 = v18;
    uint64_t v79 = v50;
    uint64_t v80 = v51;
    uint64_t v81 = v52;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v54 = v59;
    uint64_t v55 = OpaqueTypeMetadata2;
    sub_1000B29EC(v49, OpaqueTypeMetadata2, OpaqueTypeConformance2);
    uint64_t v56 = *(void (**)(char *, uint64_t))(v62 + 8);
    v56(v49, v55);
    sub_1000B29EC(v54, v55, OpaqueTypeConformance2);
    return ((uint64_t (*)(char *, uint64_t))v56)(v54, v55);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1005FA1D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __n128 v4 = __chkstk_darwin(a1);
  uint64_t v6 = (unsigned __int8 *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *(unsigned __int8 *)(v1 + 2);
  (*(void (**)(unsigned __int8 *, __n128))(v3 + 16))(v6, v4);
  if (v7 == 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v6, a1);
    return 1;
  }
  else
  {
    uint64_t v9 = &v6[*(int *)(a1 + 52)];
    uint64_t v10 = *(void *)v9;
    uint64_t v11 = *((void *)v9 + 1);
    uint64_t v12 = v9[16];
    int v13 = v9[17];
    sub_1005F64BC(*(void *)v9, v11, v12, v9[17]);
    uint64_t v14 = sub_100667598(v10, v11, v12 | (v13 << 8));
    uint64_t v16 = v15;
    char v18 = v17;
    sub_1005F6678(v10, v11, v12, v13);
    v21[1] = v14;
    v21[2] = v16;
    char v22 = v18;
    sub_100010218(&qword_1008135F0);
    Binding.wrappedValue.getter();
    swift_release();
    swift_release();
    int v19 = v23;
    int v20 = *v6;
    (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v6, a1);
    return v19 != 9 && v19 == v20;
  }
}

uint64_t sub_1005FA390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v9 = sub_1005FA1D0(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  }
  else
  {
    uint64_t v10 = &v7[*(int *)(a1 + 56)];
    uint64_t v11 = *(void *)v10;
    char v12 = v10[8];
    sub_100026CCC(*(void *)v10, v12);
    char v13 = sub_100666714(v11, v12);
    sub_100026DF8(v11, v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
    if ((v13 & 1) == 0)
    {
      uint64_t v14 = (unsigned int *)&enum case for DynamicTypeSize.xxLarge(_:);
      goto LABEL_6;
    }
  }
  uint64_t v14 = (unsigned int *)&enum case for DynamicTypeSize.accessibility5(_:);
LABEL_6:
  uint64_t v15 = *v14;
  uint64_t v16 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
}

double sub_1005FA52C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 1);
  BOOL v8 = sub_1005FA1D0(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  if (v8)
  {
    char v9 = 1;
  }
  else
  {
    uint64_t v10 = &v5[*(int *)(a1 + 56)];
    uint64_t v11 = *(void *)v10;
    char v12 = v10[8];
    sub_100026CCC(*(void *)v10, v12);
    char v9 = sub_100666714(v11, v12);
    sub_100026DF8(v11, v12);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  double result = 0.0;
  switch(v6)
  {
    case 1:
      return result;
    case 2:
      goto LABEL_7;
    case 3:
    case 4:
      double result = 12.0;
      break;
    default:
      if (v9) {
LABEL_7:
      }
        double result = 16.0;
      break;
  }
  return result;
}

uint64_t sub_1005FA6B8()
{
  return swift_release();
}

uint64_t sub_1005FA73C()
{
  uint64_t v0 = type metadata accessor for InsightsButton();
  sub_1005FA1D0(v0);
  sub_100010218(&qword_1008014F0);
  return State.wrappedValue.setter();
}

uint64_t sub_1005FA7C4()
{
  return sub_1005FA6B8();
}

uint64_t (*sub_1005FA844(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = type metadata accessor for InsightsButton();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return sub_1005FABB0;
}

uint64_t sub_1005FA97C()
{
  uint64_t v0 = type metadata accessor for InsightsButton();
  BOOL v1 = sub_1005FA1D0(v0);
  sub_1005FA9F8(!v1, v0);
  sub_100010218(&qword_100801B28);
  return AccessibilityFocusState.wrappedValue.setter();
}

uint64_t sub_1005FA9F8(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = v2 + *(int *)(a2 + 52);
    uint64_t v5 = *(void *)v4;
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t v7 = *(unsigned __int8 *)(v4 + 16);
    int v8 = *(unsigned __int8 *)(v4 + 17);
    sub_1005F64BC(*(void *)v4, v6, v7, *(unsigned char *)(v4 + 17));
    sub_100667598(v5, v6, v7 | (v8 << 8));
    sub_1005F6678(v5, v6, v7, v8);
  }
  else
  {
    uint64_t result = sub_1005FA1D0(a2);
    if ((result & 1) == 0) {
      return result;
    }
    uint64_t v10 = v2 + *(int *)(a2 + 52);
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v13 = *(unsigned __int8 *)(v10 + 16);
    int v14 = *(unsigned __int8 *)(v10 + 17);
    sub_1005F64BC(*(void *)v10, v12, v13, *(unsigned char *)(v10 + 17));
    sub_100667598(v11, v12, v13 | (v14 << 8));
    sub_1005F6678(v11, v12, v13, v14);
  }
  sub_100010218(&qword_1008135F0);
  Binding.wrappedValue.setter();
  swift_release();
  return swift_release();
}

uint64_t sub_1005FAB4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005F99F0(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1005FAB58()
{
  unint64_t result = qword_1008135E8;
  if (!qword_1008135E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008135E8);
  }
  return result;
}

uint64_t sub_1005FABB8()
{
  type metadata accessor for InsightsButton();

  return sub_1005FA73C();
}

uint64_t sub_1005FAC48()
{
  type metadata accessor for InsightsButton();

  return sub_1005FA7C4();
}

uint64_t sub_1005FACD0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for InsightsButton();
  uint64_t v3 = (int *)(v2 - 8);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v2 + 44), v1);
  swift_release();
  sub_1005F6678(*(void *)(v4 + v3[15]), *(void *)(v4 + v3[15] + 8), *(unsigned __int8 *)(v4 + v3[15] + 16), *(unsigned char *)(v4 + v3[15] + 17));
  sub_100026DF8(*(void *)(v4 + v3[16]), *(unsigned char *)(v4 + v3[16] + 8));
  sub_100026DF8(*(void *)(v4 + v3[17]), *(unsigned char *)(v4 + v3[17] + 8));
  uint64_t v5 = v4 + v3[18];
  uint64_t v6 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  sub_100010218(&qword_100801B28);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005FAEA4()
{
  return sub_1005FA6B8();
}

uint64_t sub_1005FAF08()
{
  return sub_1005FA97C();
}

uint64_t sub_1005FAF30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005FAF98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005FAFE0(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1008000E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005FB040()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for AssetContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005FB8D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetContentType()
{
  return &type metadata for AssetContentType;
}

unint64_t sub_1005FB914()
{
  unint64_t result = qword_1008135F8;
  if (!qword_1008135F8)
  {
    sub_100014440(&qword_100813600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008135F8);
  }
  return result;
}

uint64_t sub_1005FB970()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_1005FBBCC(unsigned __int8 *a1, char *a2)
{
  return sub_10017C754(*a1, *a2);
}

Swift::Int sub_1005FBBD8()
{
  return sub_1002317DC();
}

uint64_t sub_1005FBBE0()
{
  return sub_100231B14();
}

Swift::Int sub_1005FBBE8()
{
  return sub_100231EC0();
}

unint64_t sub_1005FBBF0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005FBD50(*a1);
  *a2 = result;
  return result;
}

void sub_1005FBC20(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x636973756DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x74736163646F70;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C6369747261;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1802465122;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 30324;
      a1[1] = 0xE200000000000000;
      break;
    case 5:
      *a1 = 0xD000000000000010;
      a1[1] = 0x80000001006856C0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1005FBCE8(void *a1@<X8>)
{
  *a1 = &off_100793040;
}

unint64_t sub_1005FBCFC()
{
  unint64_t result = qword_100813608;
  if (!qword_100813608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813608);
  }
  return result;
}

unint64_t sub_1005FBD50(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100791A08, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_1005FBD9C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_1007F9EB0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_1005FBEA8, 0, 0);
}

uint64_t sub_1005FBEA8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_1003F3C1C(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(*(void *)(v0 + 32), &qword_1007F9EB0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unsigned int v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xE000000000000000);
  }
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  sub_1005FF3E0(*(void *)(v0 + 32), v7, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v8 = *(void *)(v7 + 16);
  char v9 = *(unsigned char *)(v7 + 24);
  sub_100600BE8(v7, v6, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v10 = *(void *)(v0 + 64);
  if (v9)
  {
    uint64_t v11 = v10 + *(int *)(*(void *)(v0 + 40) + 52);
    uint64_t v8 = *(void *)v11;
    char v12 = *(unsigned char *)(v11 + 8);
    sub_1005FF448(v10, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
    if (v12)
    {
      uint64_t v13 = *(uint64_t **)(v0 + 72);
      uint64_t v14 = *(void *)(v0 + 56);
      uint64_t v15 = *(void *)(v0 + 40);
      uint64_t v16 = (char *)v13 + *(int *)(v15 + 48);
      uint64_t v17 = *(void *)v16;
      *(void *)(v0 + 112) = *(void *)v16;
      int v18 = v16[8];
      *(unsigned char *)(v0 + 168) = v18;
      if (v17 < 2) {
        int v19 = 1;
      }
      else {
        int v19 = v18;
      }
      if (v19) {
        unint64_t v20 = 0xD000000000000196;
      }
      else {
        unint64_t v20 = 0;
      }
      if (v19) {
        uint64_t v21 = 0x80000001006A8090;
      }
      else {
        uint64_t v21 = 0xE000000000000000;
      }
      uint64_t v22 = sub_1005FC98C(v13);
      unint64_t v24 = sub_1005FCB18(v22, v23);
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v27._uint64_t countAndFlagsBits = v24;
      v27._object = v26;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v20;
      *(void *)(v0 + 120) = v21;
      uint64_t v28 = (uint64_t *)((char *)v13 + *(int *)(v15 + 40));
      uint64_t v29 = *v28;
      unint64_t v30 = v28[1];
      sub_100600BE8((uint64_t)v13, v14, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      uint64_t v31 = *(void *)(v0 + 56);
      uint64_t v32 = *(void *)(v0 + 40);
      if (v30)
      {
        unint64_t v33 = v30;
      }
      else
      {
        uint64_t v35 = (uint64_t *)(v31 + *(int *)(v32 + 72));
        uint64_t v29 = *v35;
        unint64_t v33 = v35[1];
        swift_bridgeObjectRetain();
      }
      if (v19) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = 0x80000001006A8230;
      }
      if (v19) {
        uint64_t v37 = 0;
      }
      else {
        uint64_t v37 = 0xD000000000000011;
      }
      uint64_t v38 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      sub_1005FF448(v31, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      uint64_t v39 = (uint64_t *)(v38 + *(int *)(v32 + 44));
      uint64_t v40 = *v39;
      unint64_t v41 = v39[1];
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_1005FCBCC(v29, v33, v40, v41, 0, 0);
      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = v44;
      swift_bridgeObjectRelease();
      uint64_t v45 = (void *)swift_task_alloc();
      *(void *)(v0 + 136) = v45;
      void *v45 = v0;
      v45[1] = sub_1005FC658;
      uint64_t v46 = *(void *)(v0 + 16);
      return sub_1005E885C(v46, 0, 0, v37, v36, v47, v21, v42);
    }
  }
  else
  {
    sub_1005FF448(v10, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  }
  *(void *)(v0 + 80) = v8;
  if (qword_1007F6968 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_10083CEE0;
  *(void *)(v0 + 88) = qword_10083CEE0;
  return _swift_task_switch(sub_1005FC314, v34, 0);
}

uint64_t sub_1005FC314()
{
  uint64_t v1 = (uint64_t (*)())[*(id *)(*(void *)(v0 + 88) + 112) stringWithDuration:2 durationFormat:*(double *)(v0 + 80)];
  if (v1)
  {
    unsigned int v4 = v1;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    *(void *)(v0 + 96) = v5;
    *(void *)(v0 + 104) = v7;
    uint64_t v1 = sub_1005FC3C0;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1005FC3C0()
{
  uint64_t v39 = *(void **)(v0 + 104);
  uint64_t v37 = *(void *)(v0 + 96);
  uint64_t v1 = *(uint64_t **)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  unsigned int v4 = (char *)v1 + *(int *)(v3 + 48);
  uint64_t v5 = *(void *)v4;
  *(void *)(v0 + 112) = *(void *)v4;
  int v6 = v4[8];
  *(unsigned char *)(v0 + 168) = v6;
  if (v5 < 2) {
    int v7 = 1;
  }
  else {
    int v7 = v6;
  }
  if (v7) {
    unint64_t v8 = 0xD000000000000196;
  }
  else {
    unint64_t v8 = 0;
  }
  if (v7) {
    unint64_t v9 = 0x80000001006A8090;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v10 = sub_1005FC98C(v1);
  unint64_t v12 = sub_1005FCB18(v10, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v9;
  uint64_t v36 = v8;
  *(void *)(v0 + 120) = v9;
  uint64_t v17 = (uint64_t *)((char *)v1 + *(int *)(v3 + 40));
  uint64_t v18 = *v17;
  unint64_t v19 = v17[1];
  sub_100600BE8((uint64_t)v1, v2, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v20 = *(void *)(v0 + 56);
  uint64_t v21 = *(void *)(v0 + 40);
  if (v19)
  {
    unint64_t v22 = v19;
  }
  else
  {
    unsigned __int8 v23 = (uint64_t *)(v20 + *(int *)(v21 + 72));
    uint64_t v18 = *v23;
    unint64_t v22 = v23[1];
    swift_bridgeObjectRetain();
  }
  if (v7) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = 0x80000001006A8230;
  }
  if (v7) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = 0xD000000000000011;
  }
  uint64_t v26 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_1005FF448(v20, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  Swift::String v27 = (uint64_t *)(v26 + *(int *)(v21 + 44));
  uint64_t v28 = *v27;
  unint64_t v29 = v27[1];
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1005FCBCC(v18, v22, v28, v29, v37, v39);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v32;
  swift_bridgeObjectRelease();
  unint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v33;
  void *v33 = v0;
  v33[1] = sub_1005FC658;
  uint64_t v34 = *(void *)(v0 + 16);
  return sub_1005E885C(v34, 0, 0, v25, v24, v36, v16, v30);
}

uint64_t sub_1005FC658(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 144) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    int v7 = sub_1005FC8E0;
  }
  else
  {
    *(void *)(v6 + 152) = a2;
    *(void *)(v6 + 160) = a1;
    swift_bridgeObjectRelease();
    int v7 = sub_1005FC824;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005FC824()
{
  sub_1005FF448(v0[9], _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1005FC8E0()
{
  sub_1005FF448(*(void *)(v0 + 72), _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005FC98C(uint64_t *a1)
{
  uint64_t v2 = (char *)a1 + *(int *)(_s16WorkoutIconAssetC15WorkoutIconDataVMa(0) + 48);
  if ((v2[8] & 1) != 0 || (uint64_t v3 = *(void *)v2, *(uint64_t *)v2 < 2))
  {
    uint64_t countAndFlagsBits = *a1;
    if (!a1[1])
    {
      id v6 = [self mainBundle];
      v10._object = (void *)0x800000010069E300;
      v7._uint64_t countAndFlagsBits = 0x74756F6B726F57;
      v7._object = (void *)0xE700000000000000;
      v8._uint64_t countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      v10._uint64_t countAndFlagsBits = 0xD000000000000018;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)(unint64_t)countAndFlagsBits, (NSBundle)v6, v8, v10)._countAndFlagsBits;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1007F75E8 != -1) {
      swift_once();
    }
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1006D6280;
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = v3;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
  }
  return countAndFlagsBits;
}

unint64_t sub_1005FCB18(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  if (a2) {
    uint64_t v4 = a2;
  }
  else {
    a1 = 0;
  }
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = a1;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x3E7669642F3CLL;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  return 0xD00000000000001ELL;
}

unint64_t sub_1005FCBCC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  if (a4)
  {
    uint64_t v12 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease();
      unint64_t v32 = 0x80000001006A82E0;
      uint64_t v13 = a3;
      unint64_t v14 = a4;
      goto LABEL_11;
    }
  }
  if (a2)
  {
    uint64_t v15 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v15)
    {
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease();
      unint64_t v32 = 0x80000001006A82B0;
      uint64_t v13 = a1;
      unint64_t v14 = a2;
LABEL_11:
      String.append(_:)(*(Swift::String *)&v13);
      v16._uint64_t countAndFlagsBits = 0x3E6E6170732F3CLL;
      v16._object = (void *)0xE700000000000000;
      String.append(_:)(v16);
      uint64_t v17 = sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      if (v19 >= v18 >> 1) {
        uint64_t v17 = sub_1002A54A0((char *)(v18 > 1), v19 + 1, 1, v17);
      }
      *((void *)v17 + 2) = v19 + 1;
      uint64_t v20 = &v17[16 * v19];
      *((void *)v20 + 4) = 0xD000000000000026;
      *((void *)v20 + 5) = v32;
      if (a6) {
        goto LABEL_14;
      }
      goto LABEL_20;
    }
  }
  uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  if (a6)
  {
LABEL_14:
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = a5;
    v21._object = a6;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = 0x3E6E6170732F3CLL;
    v22._object = (void *)0xE700000000000000;
    String.append(_:)(v22);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1002A54A0(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v24 = *((void *)v17 + 2);
    unint64_t v23 = *((void *)v17 + 3);
    if (v24 >= v23 >> 1) {
      uint64_t v17 = sub_1002A54A0((char *)(v23 > 1), v24 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v24 + 1;
    uint64_t v25 = &v17[16 * v24];
    *((void *)v25 + 4) = 0xD000000000000026;
    *((void *)v25 + 5) = 0x80000001006A8280;
    goto LABEL_21;
  }
LABEL_20:
  if (*((void *)v17 + 2))
  {
LABEL_21:
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease();
    sub_100010218(&qword_100800A70);
    sub_1000245BC();
    uint64_t v26 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    v29._uint64_t countAndFlagsBits = v26;
    v29._object = v28;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._uint64_t countAndFlagsBits = 0x3E7669642F3CLL;
    v30._object = (void *)0xE600000000000000;
    String.append(_:)(v30);
    return 0xD000000000000021;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1005FCEF4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_1005FBD9C(a1);
}

double sub_1005FCF88@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9EB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16WorkoutIconAsset_metadata))
  {
    swift_retain();
    sub_10003B3B4((uint64_t)v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_1005FF3E0((uint64_t)v5, (uint64_t)v10, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = sub_1005FE08C(&qword_1007F9EB8, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
      *(void *)(a1 + 40) = sub_1005FE08C(&qword_10080E120, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
      uint64_t v11 = sub_100062E54((uint64_t *)a1);
      sub_1005FF3E0((uint64_t)v10, (uint64_t)v11, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v8);
  }
  sub_10001457C((uint64_t)v5, &qword_1007F9EB0);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_1005FD1B4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218((uint64_t *)&unk_10080E8F0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1005FD2A4, 0, 0);
}

uint64_t sub_1005FD2A4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_1003F3E44(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(*(void *)(v0 + 32), (uint64_t *)&unk_10080E8F0);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xE000000000000000);
  }
  else
  {
    sub_1005FF3E0(*(void *)(v0 + 32), *(void *)(v0 + 56), _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
    if (qword_1007F6968 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = qword_10083CEE0;
    *(void *)(v0 + 64) = qword_10083CEE0;
    *(void *)(v0 + 72) = *(void *)(v6 + 32);
    *(unsigned char *)(v0 + 144) = *(unsigned char *)(v6 + 40);
    return _swift_task_switch(sub_1005FD410, v7, 0);
  }
}

uint64_t sub_1005FD410()
{
  double v1 = *(double *)(v0 + 72);
  if (*(unsigned char *)(v0 + 144)) {
    double v1 = 0.0;
  }
  uint64_t v2 = (uint64_t (*)())[*(id *)(*(void *)(v0 + 64) + 112) stringWithDuration:2 durationFormat:v1];
  if (v2)
  {
    uint64_t v5 = v2;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    *(void *)(v0 + 80) = v6;
    *(void *)(v0 + 88) = v8;
    uint64_t v2 = sub_1005FD4CC;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1005FD4CC()
{
  uint64_t v2 = v0[10];
  double v1 = (void *)v0[11];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void **)(v3 + 24);
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1005FCB18(v5, v6);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v0[12] = 0x80000001006A8090;
  uint64_t v11 = (uint64_t *)(v3 + *(int *)(v4 + 48));
  uint64_t v12 = *v11;
  unint64_t v13 = v11[1];
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1005FCBCC(0, 0, v12, v13, v2, v1);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[13] = v16;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[14] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1005FD660;
  uint64_t v18 = v0[2];
  return sub_1005E885C(v18, 0, 0, 0, 0, 0xD000000000000196, 0x80000001006A8090, v14);
}

uint64_t sub_1005FD660(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 120) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    unint64_t v7 = sub_1005FD874;
  }
  else
  {
    *(void *)(v6 + 128) = a2;
    *(void *)(v6 + 136) = a1;
    unint64_t v7 = sub_1005FD7D4;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005FD7D4()
{
  sub_1005FF448(v0[7], _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1005FD874()
{
  sub_1005FF448(*(void *)(v0 + 56), _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005FD904(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1006016CC;
  return sub_1005FD1B4(a1);
}

double sub_1005FD998@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v35[-v7];
  uint64_t v9 = sub_100010218((uint64_t *)&unk_10080E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v13 = *((void *)v12 - 1);
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling17WorkoutRouteAsset_metadata))
  {
    swift_retain();
    sub_10003B6E8((uint64_t)v11);
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_1005FF3E0((uint64_t)v11, (uint64_t)v16, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
      uint64_t v17 = sub_1005FDD74();
      uint64_t v18 = *((void *)v16 + 3);
      uint64_t v42 = *((void *)v16 + 2);
      uint64_t v43 = v17;
      uint64_t v41 = *((void *)v16 + 4);
      int v40 = v16[40];
      sub_100045944((uint64_t)&v16[v12[7]], (uint64_t)v8);
      sub_100045944((uint64_t)&v16[v12[8]], (uint64_t)v5);
      uint64_t v19 = v12[10];
      uint64_t v20 = &v16[v12[9]];
      uint64_t v21 = *(void *)v20;
      int v36 = v20[8];
      uint64_t v22 = *(void *)&v16[v19];
      int v39 = v16[v19 + 8];
      unint64_t v23 = (uint64_t *)&v16[v12[11]];
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = (uint64_t *)&v16[v12[12]];
      uint64_t v27 = v26[1];
      uint64_t v37 = *v26;
      uint64_t v38 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005FF448((uint64_t)v16, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
      uint64_t v28 = (int *)_s16WorkoutRouteDataVMa(0);
      *(void *)(a1 + 24) = v28;
      *(void *)(a1 + 32) = sub_1005FE08C(&qword_100813640, (void (*)(uint64_t))_s16WorkoutRouteDataVMa);
      *(void *)(a1 + 40) = sub_1005FE08C(&qword_100813648, (void (*)(uint64_t))_s16WorkoutRouteDataVMa);
      Swift::String v29 = sub_100062E54((uint64_t *)a1);
      *Swift::String v29 = v42;
      v29[1] = v18;
      v29[2] = v41;
      *((unsigned char *)v29 + 24) = v40;
      sub_100062DA4((uint64_t)v8, (uint64_t)v29 + v28[6]);
      sub_100062DA4((uint64_t)v5, (uint64_t)v29 + v28[7]);
      uint64_t v31 = (char *)v29 + v28[8];
      *(void *)uint64_t v31 = v21;
      v31[8] = v36;
      unint64_t v32 = (char *)v29 + v28[9];
      *(void *)unint64_t v32 = v38;
      v32[8] = v39;
      unint64_t v33 = (uint64_t *)((char *)v29 + v28[10]);
      void *v33 = v24;
      v33[1] = v25;
      uint64_t v34 = (uint64_t *)((char *)v29 + v28[11]);
      *uint64_t v34 = v37;
      v34[1] = v27;
      *(uint64_t *)((char *)v29 + v28[12]) = v43;
      return result;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *, __n128))(v13 + 56))(v11, 1, 1, v12, v14);
  }
  sub_10001457C((uint64_t)v11, (uint64_t *)&unk_10080E8F0);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_1005FDD74()
{
  uint64_t v0 = _s10RoutePointVMa(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (unint64_t *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = sub_1004A8CD8();
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  unint64_t v6 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_14;
  }
LABEL_4:
  unint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100095D40(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v5 = v23;
    unint64_t v22 = v6 & 0xC000000000000001;
    unint64_t v10 = v6;
    do
    {
      if (v22) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v6 + 8 * v9 + 32);
      }
      uint64_t v12 = v11;
      [v11 coordinate:v22];
      uint64_t v14 = v13;
      [v12 coordinate];
      uint64_t v16 = v15;
      id v17 = [v12 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      [v12 speed];
      uint64_t v19 = v18;

      *uint64_t v3 = v14;
      v3[1] = v16;
      *(void *)((char *)v3 + *(int *)(v0 + 28)) = v19;
      unint64_t v23 = v5;
      unint64_t v21 = *((void *)v5 + 2);
      unint64_t v20 = *((void *)v5 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_100095D40(v20 > 1, v21 + 1, 1);
        uint64_t v5 = v23;
      }
      ++v9;
      *((void *)v5 + 2) = v21 + 1;
      sub_1005FF3E0((uint64_t)v3, (uint64_t)v5+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v21, _s10RoutePointVMa);
      unint64_t v6 = v10;
    }
    while (v7 != v9);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005FDFDC(uint64_t a1)
{
  uint64_t result = sub_1005FE08C(&qword_100813610, (void (*)(uint64_t))_s17WorkoutRouteAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005FE034(uint64_t a1)
{
  uint64_t result = sub_1005FE08C(&qword_100813620, (void (*)(uint64_t))_s16WorkoutIconAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005FE08C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005FE0D4(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1008137E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_100600CE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    _s10RoutePointVMa(0);
    v8[13] = 2;
    type metadata accessor for Date();
    sub_1005FE08C(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1005FE2E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100010218(&qword_1008137D8);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s10RoutePointVMa(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100600CE4();
  unint64_t v10 = v25;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v11 = v23;
  char v29 = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  *uint64_t v9 = v12;
  char v28 = 1;
  KeyedDecodingContainer.decode(_:forKey:)();
  v9[1] = v13;
  char v27 = 2;
  sub_1005FE08C(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v20 = v7;
  uint64_t v14 = *(void (**)(void))(v22 + 32);
  uint64_t v25 = (char *)v9 + *(int *)(v7 + 24);
  v14();
  char v26 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v24);
  uint64_t v17 = v21;
  *(void *)((char *)v9 + *(int *)(v20 + 28)) = v16;
  sub_100600BE8((uint64_t)v9, v17, _s10RoutePointVMa);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_1005FF448((uint64_t)v9, _s10RoutePointVMa);
}

unint64_t sub_1005FE690(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      unint64_t result = 0x6D69547472617473;
      break;
    case 3:
      unint64_t result = 0x656D6954646E65;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 6:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    case 8:
      unint64_t result = 0x73746E696F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005FE7A8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1008137C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_100600B94();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v9 = _s16WorkoutRouteDataVMa(0);
    LOBYTE(v12) = 2;
    type metadata accessor for Date();
    sub_1005FE08C(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 48));
    v11[15] = 8;
    sub_100010218(&qword_1008137A8);
    sub_100600C50(&qword_1008137C8, &qword_1008137D0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005FEB20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v40 = sub_100010218(&qword_100813798);
  uint64_t v10 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (int *)_s16WorkoutRouteDataVMa(0);
  __chkstk_darwin(v41);
  uint64_t v42 = a1;
  uint64_t v43 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100600B94();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v42);
  }
  uint64_t v38 = v6;
  uint64_t v14 = v10;
  LOBYTE(v45) = 0;
  uint64_t v15 = v40;
  uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v17 = v43;
  *uint64_t v43 = v16;
  v17[1] = v18;
  LOBYTE(v45) = 1;
  v17[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  *((unsigned char *)v17 + 24) = v19 & 1;
  type metadata accessor for Date();
  LOBYTE(v45) = 2;
  sub_1005FE08C(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v20 = v41;
  sub_100062DA4((uint64_t)v9, (uint64_t)v17 + v41[6]);
  LOBYTE(v45) = 3;
  uint64_t v21 = (uint64_t)v38;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_100062DA4(v21, (uint64_t)v17 + v20[7]);
  LOBYTE(v45) = 4;
  uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v23 = (char *)v17 + v20[8];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v45) = 5;
  uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v26 = (uint64_t)v42;
  char v27 = (char *)v17 + v20[9];
  *(void *)char v27 = v25;
  v27[8] = v28 & 1;
  LOBYTE(v45) = 6;
  uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  Swift::String v30 = (uint64_t *)((char *)v17 + v20[10]);
  uint64_t *v30 = v29;
  v30[1] = v31;
  LOBYTE(v45) = 7;
  uint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  unint64_t v33 = (uint64_t *)((char *)v17 + v41[11]);
  uint64_t *v33 = v32;
  v33[1] = v34;
  sub_100010218(&qword_1008137A8);
  char v44 = 8;
  sub_100600C50(&qword_1008137B0, &qword_1008137B8);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v15);
  uint64_t v35 = (uint64_t)v43;
  *(uint64_t *)((char *)v43 + v41[12]) = v45;
  sub_100600BE8(v35, v39, _s16WorkoutRouteDataVMa);
  _s7Journal19DynamicWaveformViewVwxx_0(v26);
  return sub_1005FF448(v35, _s16WorkoutRouteDataVMa);
}

uint64_t sub_1005FF1A0()
{
  uint64_t result = 0x656475746974616CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6465657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005FF238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100601150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005FF260(uint64_t a1)
{
  unint64_t v2 = sub_100600CE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005FF29C(uint64_t a1)
{
  unint64_t v2 = sub_100600CE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005FF2D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005FE2E4(a1, a2);
}

uint64_t sub_1005FF2F0(void *a1)
{
  return sub_1005FE0D4(a1);
}

unint64_t sub_1005FF308()
{
  return sub_1005FE690(*v0);
}

uint64_t sub_1005FF310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100601314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005FF338(uint64_t a1)
{
  unint64_t v2 = sub_100600B94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005FF374(uint64_t a1)
{
  unint64_t v2 = sub_100600B94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005FF3B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005FEB20(a1, a2);
}

uint64_t sub_1005FF3C8(void *a1)
{
  return sub_1005FE7A8(a1);
}

uint64_t sub_1005FF3E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005FF448(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s16WorkoutRouteDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100813740);
}

uint64_t _s10RoutePointVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1008136A8);
}

uint64_t *sub_1005FF4E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_1005FF5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_1005FF638(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_1005FF6D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_1005FF770(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *sub_1005FF808(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1005FF8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FF8B4);
}

uint64_t sub_1005FF8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_1005FF924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FF938);
}

uint64_t sub_1005FF938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1005FF9AC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1005FFA48(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    char v28 = (void *)((char *)v4 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *char v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)((char *)v4 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1005FFCF0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005FFE28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100600080(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006003D8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100600604(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100600920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100600934);
}

uint64_t sub_100600934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 48));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1006009FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100600A10);
}

uint64_t sub_100600A10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 48)) = (a2 - 1);
  }
  return result;
}

void sub_100600AD4()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100600B94()
{
  unint64_t result = qword_1008137A0;
  if (!qword_1008137A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008137A0);
  }
  return result;
}

uint64_t sub_100600BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100600C50(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(&qword_1008137A8);
    sub_1005FE08C(a2, (void (*)(uint64_t))_s10RoutePointVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100600CE4()
{
  unint64_t result = qword_1008137E0;
  if (!qword_1008137E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008137E0);
  }
  return result;
}

unsigned char *_s10RoutePointV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100600E04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10RoutePointV10CodingKeysOMa()
{
  return &_s10RoutePointV10CodingKeysON;
}

unsigned char *_s16WorkoutRouteDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100600F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16WorkoutRouteDataV10CodingKeysOMa()
{
  return &_s16WorkoutRouteDataV10CodingKeysON;
}

unint64_t sub_100600F44()
{
  unint64_t result = qword_1008137F0;
  if (!qword_1008137F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008137F0);
  }
  return result;
}

unint64_t sub_100600F9C()
{
  unint64_t result = qword_1008137F8;
  if (!qword_1008137F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008137F8);
  }
  return result;
}

unint64_t sub_100600FF4()
{
  unint64_t result = qword_100813800;
  if (!qword_100813800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813800);
  }
  return result;
}

unint64_t sub_10060104C()
{
  unint64_t result = qword_100813808;
  if (!qword_100813808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813808);
  }
  return result;
}

unint64_t sub_1006010A4()
{
  unint64_t result = qword_100813810;
  if (!qword_100813810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813810);
  }
  return result;
}

unint64_t sub_1006010FC()
{
  unint64_t result = qword_100813818;
  if (!qword_100813818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813818);
  }
  return result;
}

uint64_t sub_100601150(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100601314(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010069E350 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73746E696F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1006016D0(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(char *, uint64_t), void (*a5)(_OWORD *__return_ptr, long long *, char *), uint64_t a6)
{
  void (*v48)(_OWORD *__return_ptr, long long *, char *);
  uint64_t v49;
  unsigned int (**v50)(char *, uint64_t, uint64_t);
  void (**v51)(char *, uint64_t);
  void (**v52)(char *);
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  void (**v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  void (**v59)(char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  long long v66;
  long long v67;
  char *v68;

  uint64_t v49 = a6;
  uint64_t v48 = a5;
  uint64_t v59 = a4;
  uint64_t v58 = type metadata accessor for AttributedString.Runs.Run();
  uint64_t v46 = *(void (***)(char *, uint64_t))(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v47 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for AttributedString.Runs.Index();
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v45 - v12;
  uint64_t v13 = sub_100010218(&qword_100813B38);
  __chkstk_darwin(v13 - 8);
  uint64_t v57 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AttributedString.Runs();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100813B40);
  uint64_t v20 = v19 - 8;
  __n128 v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&uint64_t v66 = a1;
  *((void *)&v66 + 1) = a2;
  uint64_t v24 = a2;
  LOBYTE(a2) = a3;
  *(void *)&uint64_t v67 = a3;
  uint64_t v25 = (uint64_t)v59;
  *((void *)&v67 + 1) = v59;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  ((void (*)(char *, void (*)(char *, char *, uint64_t), uint64_t, __n128))v53)(v18, v60, v15, v21);
  sub_1001D7E98(a1, v24, a2, v25);
  sub_100613430(&qword_100813B48, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
  uint64_t v54 = v18;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v26 = &v23[*(int *)(v20 + 44)];
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v63 += 16;
  uint64_t v59 = (void (**)(char *, uint64_t))(v63 - 8);
  uint64_t v60 = v27;
  uint64_t v28 = (uint64_t)v23;
  uint64_t v52 = (void (**)(char *))(v46 + 2);
  uint64_t v55 = v16 + 16;
  uint64_t v51 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 7);
  uint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 6);
  uint64_t v45 = (void (**)(char *, char *, uint64_t))(v46 + 4);
  ++v46;
  while (1)
  {
    uint64_t v29 = v61;
    v60(v68, v26, v61);
    sub_100613430(&qword_100813B50, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
    uint64_t v30 = v62;
    dispatch thunk of Collection.endIndex.getter();
    sub_100613430(&qword_100813B58, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index);
    char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v32 = v28;
    uint64_t v33 = v15;
    uint64_t v34 = *v59;
    (*v59)(v30, v29);
    v34(v68, v29);
    if (v31)
    {
      (*v56)(v57, 1, 1, v58);
      uint64_t v41 = v32;
LABEL_7:
      sub_10001457C(v41, &qword_100813B40);
      return v66;
    }
    uint64_t v35 = v32;
    uint64_t v36 = (void (*)(_OWORD *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v38 = v57;
    uint64_t v37 = v58;
    (*v52)(v57);
    v36(v65, 0);
    uint64_t v39 = v54;
    v53(v54, v35, v33);
    dispatch thunk of Collection.formIndex(after:)();
    (*v51)(v39, v33);
    (*v56)(v38, 0, 1, v37);
    BOOL v40 = (*v50)(v38, 1, v37) == 1;
    uint64_t v41 = v35;
    if (v40) {
      goto LABEL_7;
    }
    uint64_t v15 = v33;
    uint64_t v28 = v41;
    uint64_t v42 = v47;
    (*v45)(v47, v38, v37);
    uint64_t v43 = v64;
    v48(v65, &v66, v42);
    if (v43) {
      break;
    }
    uint64_t v64 = 0;
    (*v46)(v42, v37);
    sub_1001D7EDC(v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1));
    uint64_t v66 = v65[0];
    uint64_t v67 = v65[1];
  }
  (*v46)(v42, v37);
  sub_10001457C(v28, &qword_100813B40);
  return sub_1001D7EDC(v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1));
}

uint64_t sub_100601D9C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __n128 v21 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for AttributedString.Runs();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v27 = a2;
  AttributedString.runs.getter();
  uint64_t v24 = v3;
  uint64_t v25 = a1;
  uint64_t v26 = &v27;
  uint64_t v22 = sub_1006016D0(0, 0, 0, 0, (void (*)(_OWORD *__return_ptr, long long *, char *))sub_1006129B4, (uint64_t)v23);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v11, v3, v6);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return v22;
  }
  else
  {
    v18(v21, (uint64_t)v11, v6);
    uint64_t v19 = Text.init(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  return v19;
}

uint64_t sub_10060201C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, int a8)
{
  uint64_t v55 = a7;
  LODWORD(v49) = a8;
  uint64_t v51 = a6;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v8 = type metadata accessor for AttributeContainer();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = (char *)v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v50 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_100010218(&qword_1007F8EA0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AttributedSubstring();
  uint64_t v52 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  __n128 v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v58 = v49;
  AttributedString.Runs.Run.range.getter();
  sub_100014488((unint64_t *)&qword_1007FFA38, &qword_1007F8EA0);
  AttributedString.subscript.getter();
  sub_10001457C((uint64_t)v18, &qword_1007F8EA0);
  AttributeContainer.init()();
  sub_100613430(&qword_100805F90, (void (*)(uint64_t))&type metadata accessor for AttributedSubstring);
  AttributedStringProtocol.replacingAttributes(_:with:)();
  (*(void (**)(char *, char *))(v53 + 8))(v10, v54);
  sub_100613430(&qword_100813B60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  uint64_t v51 = v21;
  uint64_t v53 = v19;
  char v22 = static AttributedStringProtocol.== infix<A>(_:_:)();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v54 = v15;
  uint64_t v55 = v11;
  v23(v50, v15, v11);
  uint64_t v25 = Text.init(_:)();
  uint64_t v27 = v26;
  char v28 = v24;
  if ((v22 & 1) == 0)
  {
    char v29 = v24 & 1;
    uint64_t v30 = Text.foregroundStyle<A>(_:)();
    uint64_t v32 = v31;
    char v28 = v33;
    sub_10002B8D0(v25, v27, v29);
    swift_bridgeObjectRelease();
    uint64_t v25 = v30;
    uint64_t v27 = v32;
  }
  uint64_t v34 = v48;
  char v35 = v28 & 1;
  if (v48)
  {
    uint64_t v37 = v46;
    char v36 = v47;
    char v38 = v47 & 1;
    uint64_t v39 = v45;
    sub_1000C04A4(v45, v46, v47 & 1);
    swift_bridgeObjectRetain();
    char v57 = v38;
    uint64_t v40 = static Text.+ infix(_:_:)();
    uint64_t v49 = v41;
    uint64_t v50 = (char *)v40;
    uint64_t v48 = v42;
    sub_10002B8D0(v25, v27, v35);
    swift_bridgeObjectRelease();
    sub_1001D7EDC(v39, v37, v36, v34);
    uint64_t v25 = (uint64_t)v50;
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
  return v25;
}

uint64_t sub_100602508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InsightsSetScheduleAction();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (void *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  uint64_t v10 = (int *)type metadata accessor for InsightsCurrentStreakView();
  uint64_t v11 = a1 + v10[5];
  uint64_t *v8 = swift_getKeyPath();
  sub_100010218(&qword_100807970);
  swift_storeEnumTagMultiPayload();
  sub_1006126EC((uint64_t)v8, v11, (uint64_t (*)(void))type metadata accessor for InsightsSetScheduleAction);
  uint64_t v12 = v10[6];
  v22[1] = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)(a1 + v12) = v23;
  uint64_t v13 = (uint64_t *)(a1 + v10[7]);
  *uint64_t v13 = swift_getKeyPath();
  sub_100010218(&qword_100813370);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a1 + v10[8];
  *(void *)uint64_t v14 = swift_getKeyPath();
  *(unsigned char *)(v14 + 8) = 0;
  uint64_t v15 = a1 + v10[9];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v16 = (uint64_t *)(a1 + v10[10]);
  uint64_t *v16 = swift_getKeyPath();
  sub_100010218(&qword_1007F9480);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)(a1 + v10[11]);
  *uint64_t v17 = swift_getKeyPath();
  sub_100010218(&qword_1008156E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a1 + v10[12];
  type metadata accessor for InsightsDataManager(0);
  sub_100613430((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  *(void *)uint64_t v18 = Environment.init<A>(_:)();
  *(unsigned char *)(v18 + 8) = v19 & 1;
  uint64_t v20 = v10[13];
  sub_10060E484();
  *(void *)(a1 + v20) = AppStorage.init<A>(_:store:)();
  *(void *)&long long v23 = 0x4055000000000000;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.subheadline(_:), v2);
  sub_1000DA83C();
  uint64_t result = ScaledMetric.init(wrappedValue:relativeTo:)();
  *(void *)(a1 + v10[15]) = 0x405B800000000000;
  return result;
}

uint64_t type metadata accessor for InsightsCurrentStreakView()
{
  uint64_t result = qword_100813898;
  if (!qword_100813898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100602900@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v129 = a1;
  uint64_t v3 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v3 - 8);
  uint64_t v144 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v143 = (uint64_t)&v112 - v6;
  uint64_t v7 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v127 = *(void *)(v7 - 8);
  uint64_t v128 = v7;
  __chkstk_darwin(v7);
  uint64_t v126 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorScheme();
  uint64_t v141 = *(void *)(v9 - 8);
  uint64_t v142 = v9;
  __chkstk_darwin(v9);
  uint64_t v140 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100010218(&qword_100806E00);
  __chkstk_darwin(v135);
  uint64_t v121 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_100813910);
  __chkstk_darwin(v12 - 8);
  uint64_t v119 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100010218(&qword_100813918);
  __chkstk_darwin(v132);
  uint64_t v120 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100010218(&qword_100813920);
  __chkstk_darwin(v133);
  uint64_t v136 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100010218(&qword_100813928);
  __chkstk_darwin(v134);
  uint64_t v138 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_100010218(&qword_100813930);
  __chkstk_darwin(v137);
  uint64_t v139 = (uint64_t)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100010218(&qword_100813938);
  __chkstk_darwin(v149);
  uint64_t v150 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100813940);
  uint64_t v124 = *(void *)(v19 - 8);
  uint64_t v125 = v19;
  __chkstk_darwin(v19);
  uint64_t v123 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v122 = (char *)&v112 - v22;
  uint64_t v23 = type metadata accessor for RedactionReasons();
  uint64_t v117 = *(void *)(v23 - 8);
  uint64_t v118 = v23;
  __chkstk_darwin(v23);
  uint64_t v116 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v115 = (uint64_t)&v112 - v26;
  uint64_t v27 = type metadata accessor for InsightsCurrentStreakView();
  __chkstk_darwin(v27);
  uint64_t v145 = (uint64_t)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v146 = (uint64_t)&v112 - v30;
  uint64_t v31 = sub_100010218(&qword_100813828);
  __chkstk_darwin(v31 - 8);
  char v33 = (char *)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for StreakSummary();
  uint64_t v130 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v113 = (char *)&v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v151 = (uint64_t)&v112 - v37;
  uint64_t v112 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v112);
  uint64_t v114 = (uint64_t)&v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v112 - v40;
  char v42 = *(unsigned char *)(v1 + *(int *)(v27 + 48) + 8);
  uint64_t v43 = swift_retain();
  uint64_t v44 = sub_100666C70(v43, v42);
  swift_release();
  swift_getKeyPath();
  uint64_t v152 = v44;
  sub_100613430((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t v45 = v27;
  uint64_t v46 = (uint64_t)v33;
  swift_release();
  uint64_t v47 = v44 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_100612CA4(v47, (uint64_t)v41, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  sub_100010218(&qword_100813948);
  AppStorage.wrappedValue.getter();
  BOOL v48 = sub_1004BA788(v152);
  sub_100612D0C((uint64_t)v41, type metadata accessor for InsightsDataManager.Streaks);
  sub_10001B220(v2, (uint64_t)v33, &qword_100813828);
  uint64_t v49 = v146;
  sub_100612CA4(v2, v146, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 48))(v33, 1, v34);
  BOOL v148 = v48;
  uint64_t v147 = v45;
  if (v50 == 1)
  {
    uint64_t v51 = (uint64_t)v113;
    uint64_t v130 = v46;
    uint64_t v52 = v151;
    char v53 = *(unsigned char *)(v49 + *(int *)(v45 + 48) + 8);
    uint64_t v54 = swift_retain();
    uint64_t v55 = sub_100666C70(v54, v53);
    swift_release();
    swift_getKeyPath();
    uint64_t v152 = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v56 = v55 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    uint64_t v57 = v114;
    sub_100612CA4(v56, v114, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    uint64_t v58 = v57;
    if (v48) {
      uint64_t v58 = v57 + *(int *)(v112 + 20);
    }
    sub_100612CA4(v58, v51, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v59 = v52;
    sub_1006126EC(v51, v52, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    sub_100612D0C(v57, type metadata accessor for InsightsDataManager.Streaks);
    sub_100612D0C(v146, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
    sub_10001457C(v130, &qword_100813828);
    uint64_t v60 = v2;
    uint64_t v61 = (uint64_t)v121;
  }
  else
  {
    sub_100612D0C(v49, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
    uint64_t v59 = v151;
    sub_1006126EC((uint64_t)v33, v151, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v60 = v2;
    uint64_t v61 = (uint64_t)v121;
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v120;
  uint64_t v64 = v145;
  uint64_t v65 = *(void *)(v59 + *(int *)(v34 + 28));
  sub_100612CA4(v60, v145, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
  uint64_t v131 = v60;
  if (v65 > 1)
  {
    char v69 = 0;
  }
  else
  {
    uint64_t v66 = v115;
    sub_1006677D4(v115);
    sub_100613430(&qword_100813260, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    uint64_t v67 = v116;
    uint64_t v68 = v118;
    dispatch thunk of SetAlgebra.init()();
    sub_100613430(&qword_1008139A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v69 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v70 = *(void (**)(char *, uint64_t))(v117 + 8);
    v70(v67, v68);
    v70((char *)v66, v68);
    uint64_t v64 = v145;
  }
  int v71 = v148;
  sub_100612D0C(v64, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
  *(void *)uint64_t v62 = static HorizontalAlignment.center.getter();
  *(void *)(v62 + 8) = 0;
  *(unsigned char *)(v62 + 16) = 0;
  uint64_t v72 = sub_100010218(&qword_100813950);
  uint64_t v73 = v131;
  uint64_t v74 = v151;
  sub_100603904(v131, v69 & 1, v151, v71, v62 + *(int *)(v72 + 44));
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220(v62, v63, &qword_100813910);
  uint64_t v76 = v63 + *(int *)(v132 + 36);
  *(void *)uint64_t v76 = KeyPath;
  *(unsigned char *)(v76 + 8) = 1;
  sub_10001457C(v62, &qword_100813910);
  uint64_t v77 = enum case for BlendMode.plusDarker(_:);
  uint64_t v78 = type metadata accessor for BlendMode();
  uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 104);
  v79(v61, v77, v78);
  v79(v61 + *(int *)(v135 + 40), enum case for BlendMode.plusLighter(_:), v78);
  uint64_t v80 = (uint64_t)v136;
  sub_10001B220(v61, (uint64_t)&v136[*(int *)(v133 + 36)], &qword_100806E00);
  sub_10001B220(v63, v80, &qword_100813918);
  sub_10001457C(v61, &qword_100806E00);
  sub_10001457C(v63, &qword_100813918);
  uint64_t v82 = v141;
  uint64_t v81 = v142;
  uint64_t v83 = v74;
  uint64_t v84 = v140;
  (*(void (**)(char *, void, uint64_t))(v141 + 104))(v140, enum case for ColorScheme.dark(_:), v142);
  uint64_t v85 = swift_getKeyPath();
  uint64_t v86 = (uint64_t)v138;
  uint64_t v87 = (uint64_t *)&v138[*(int *)(v134 + 36)];
  uint64_t v88 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))((char *)v87 + *(int *)(v88 + 28), v84, v81);
  *uint64_t v87 = v85;
  sub_10001B220(v80, v86, &qword_100813920);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v81);
  sub_10001457C(v80, &qword_100813920);
  uint64_t v89 = static Alignment.center.getter();
  uint64_t v91 = v90;
  sub_10060D2B4(v148, v83, v73, (uint64_t)&v154);
  uint64_t v152 = v89;
  uint64_t v153 = v91;
  sub_100010218(&qword_100813958);
  sub_100014488(&qword_100813960, &qword_100813958);
  uint64_t v92 = AnyView.init<A>(_:)();
  uint64_t v93 = v139;
  sub_10001B220(v86, v139, &qword_100813928);
  *(void *)(v93 + *(int *)(v137 + 36)) = v92;
  sub_10001457C(v86, &qword_100813928);
  uint64_t v94 = static Animation.spring(response:dampingFraction:blendDuration:)();
  uint64_t v95 = (uint64_t)v150;
  uint64_t v96 = (uint64_t *)&v150[*(int *)(v149 + 36)];
  uint64_t v97 = sub_100010218(&qword_100813968);
  sub_100612CA4(v83, (uint64_t)v96 + *(int *)(v97 + 36), (uint64_t (*)(void))type metadata accessor for StreakSummary);
  *uint64_t v96 = v94;
  sub_10002C4EC(v93, v95, &qword_100813930);
  uint64_t v98 = v143;
  sub_10066780C(v143);
  uint64_t v99 = type metadata accessor for WidgetFamily();
  uint64_t v100 = (uint64_t)v144;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v144, 2, 3, v99);
  LOBYTE(v94) = sub_1006167C4(v98, v100);
  sub_100612D0C(v100, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C(v98, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  uint64_t v101 = v126;
  if (v94) {
    static AccessibilityChildBehavior.contain.getter();
  }
  else {
    static AccessibilityChildBehavior.combine.getter();
  }
  uint64_t v103 = v128;
  double v102 = v129;
  uint64_t v104 = v127;
  uint64_t v106 = v124;
  uint64_t v105 = v125;
  uint64_t v108 = v122;
  char v107 = v123;
  sub_100611EA4();
  uint64_t v109 = (uint64_t)v150;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v103);
  sub_10001457C(v109, &qword_100813938);
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
  v110(v108, v107, v105);
  v110(v102, v108, v105);
  return sub_100612D0C(v151, (uint64_t (*)(void))type metadata accessor for StreakSummary);
}

uint64_t sub_100603904@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v203) = a4;
  uint64_t v232 = a3;
  uint64_t v226 = a5;
  uint64_t v225 = sub_100010218(&qword_1008139D0);
  __chkstk_darwin(v225);
  uint64_t v231 = (uint64_t *)((char *)&v191 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Font.Leading();
  uint64_t v192 = *(void *)(v8 - 8);
  uint64_t v193 = v8;
  __chkstk_darwin(v8);
  uint64_t v191 = (char *)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = _s19DurationFormatStyleVMa(0);
  __chkstk_darwin(v214);
  uint64_t v213 = (char *)&v191 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v11 - 8);
  uint64_t v212 = (uint64_t)&v191 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v207 = *(void *)(v13 - 8);
  uint64_t v208 = v13;
  __chkstk_darwin(v13);
  uint64_t v206 = (char *)&v191 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1008139D8);
  __chkstk_darwin(v15 - 8);
  uint64_t v199 = (uint64_t *)((char *)&v191 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v198 = sub_100010218(&qword_1008139E0);
  __chkstk_darwin(v198);
  uint64_t v200 = (uint64_t)&v191 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_100010218(&qword_1008139E8);
  __chkstk_darwin(v204);
  uint64_t v202 = (uint64_t)&v191 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_1008139F0);
  uint64_t v210 = *(void *)(v19 - 8);
  uint64_t v211 = v19;
  __chkstk_darwin(v19);
  uint64_t v209 = (char *)&v191 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008139F8);
  __chkstk_darwin(v21 - 8);
  uint64_t v218 = (uint64_t)&v191 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v205 = (char *)&v191 - v24;
  __chkstk_darwin(v25);
  uint64_t v230 = (uint64_t)&v191 - v26;
  uint64_t v220 = sub_100010218(&qword_100813A00);
  __chkstk_darwin(v220);
  uint64_t v222 = (uint64_t)&v191 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_100010218(&qword_100813A08);
  __chkstk_darwin(v221);
  uint64_t v197 = (uint64_t *)((char *)&v191 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = sub_100010218(&qword_100813A10);
  __chkstk_darwin(v29 - 8);
  uint64_t v195 = (uint64_t)&v191 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v194 = (uint64_t *)((char *)&v191 - v32);
  __chkstk_darwin(v33);
  uint64_t v196 = (uint64_t)&v191 - v34;
  uint64_t v35 = sub_100010218(&qword_100813A18);
  __chkstk_darwin(v35 - 8);
  uint64_t v224 = (uint64_t)&v191 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v191 - v38;
  uint64_t v40 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v40 - 8);
  uint64_t v201 = (uint64_t)&v191 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v234 = (uint64_t)&v191 - v43;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v191 - v45;
  uint64_t v47 = type metadata accessor for InsightsCurrentStreakView();
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v191 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100010218(&qword_100813A20);
  __chkstk_darwin(v50 - 8);
  uint64_t v52 = (char *)&v191 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100010218(&qword_100813A28);
  __chkstk_darwin(v53);
  uint64_t v219 = (uint64_t)&v191 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)&v191 - v56;
  __chkstk_darwin(v58);
  uint64_t v233 = (uint64_t)&v191 - v59;
  *(void *)uint64_t v52 = static VerticalAlignment.center.getter();
  *((void *)v52 + 1) = 0;
  v52[16] = 1;
  uint64_t v60 = sub_100010218(&qword_100813A30);
  sub_100604E10(a1, a2, v232, (uint64_t)&v52[*(int *)(v60 + 44)]);
  uint64_t v228 = a1;
  sub_100612CA4(a1, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
  LODWORD(v229) = a2;
  uint64_t v223 = v39;
  if (a2)
  {
    sub_10066780C((uint64_t)v46);
    uint64_t v61 = type metadata accessor for WidgetFamily();
    uint64_t v62 = v234;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v234, 2, 3, v61);
    sub_1006167C4((uint64_t)v46, v62);
    sub_100612D0C(v62, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
    sub_100612D0C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  }
  sub_100612D0C((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
  static Alignment.top.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10001B220((uint64_t)v52, (uint64_t)v57, &qword_100813A20);
  uint64_t v63 = &v57[*(int *)(v53 + 36)];
  long long v64 = v259;
  *(_OWORD *)uint64_t v63 = v258;
  *((_OWORD *)v63 + 1) = v64;
  *((_OWORD *)v63 + 2) = v260;
  sub_10001457C((uint64_t)v52, &qword_100813A20);
  sub_10002C4EC((uint64_t)v57, v233, &qword_100813A28);
  uint64_t v65 = v228;
  uint64_t v217 = v228 + *(int *)(v47 + 28);
  sub_10066780C((uint64_t)v46);
  uint64_t v66 = type metadata accessor for WidgetFamily();
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
  uint64_t v69 = v234;
  uint64_t v227 = v66;
  uint64_t v215 = v68;
  uint64_t v216 = v67 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v68)(v234, 2, 3);
  BOOL v70 = sub_1006167C4((uint64_t)v46, v69);
  sub_100612D0C(v69, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  uint64_t v71 = (uint64_t)v46;
  if (v229)
  {
    if (v70) {
      uint64_t v72 = 0x4040000000000000;
    }
    else {
      uint64_t v72 = 0;
    }
    uint64_t v73 = static HorizontalAlignment.center.getter();
    uint64_t v74 = (uint64_t)v194;
    uint64_t *v194 = v73;
    *(void *)(v74 + 8) = 0x4018000000000000;
    *(unsigned char *)(v74 + 16) = 0;
    uint64_t v75 = sub_100010218(&qword_100813AC8);
    sub_10060951C(v65, (uint64_t *)(v74 + *(int *)(v75 + 44)));
    uint64_t v76 = v196;
    sub_10002C4EC(v74, v196, &qword_100813A10);
    sub_10066780C((uint64_t)v46);
    uint64_t v77 = v234;
    v215(v234, 2, 3, v227);
    LOBYTE(v74) = sub_1006167C4(v71, v77);
    sub_100612D0C(v77, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
    sub_100612D0C(v71, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
    if (v74) {
      uint64_t v78 = 0x4040000000000000;
    }
    else {
      uint64_t v78 = 0;
    }
    uint64_t v79 = v195;
    sub_10001B220(v76, v195, &qword_100813A10);
    uint64_t v80 = (uint64_t)v197;
    uint64_t *v197 = v72;
    *(unsigned char *)(v80 + 8) = 0;
    uint64_t v81 = sub_100010218(&qword_100813AD0);
    sub_10001B220(v79, v80 + *(int *)(v81 + 48), &qword_100813A10);
    uint64_t v82 = v80 + *(int *)(v81 + 64);
    *(void *)uint64_t v82 = v78;
    *(unsigned char *)(v82 + 8) = 0;
    sub_10001457C(v79, &qword_100813A10);
    sub_10001B220(v80, v222, &qword_100813A08);
    swift_storeEnumTagMultiPayload();
    sub_100014488(&qword_100813AB0, &qword_100813A08);
    sub_100014488(&qword_100813AB8, &qword_1008139D0);
    uint64_t v83 = (uint64_t)v223;
    _ConditionalContent<>.init(storage:)();
    sub_10001457C(v80, &qword_100813A08);
    uint64_t v84 = v76;
    uint64_t v85 = &qword_100813A10;
  }
  else
  {
    int v86 = v203 & 1;
    uint64_t v87 = 0x4028000000000000;
    if (!v70) {
      uint64_t v87 = 0;
    }
    uint64_t v203 = v87;
    uint64_t v88 = v65 + *(int *)(v47 + 32);
    uint64_t v89 = *(void *)v88;
    uint64_t v229 = v67;
    char v90 = *(unsigned char *)(v88 + 8);
    sub_100026CCC(v89, v90);
    char v91 = sub_100666714(v89, v90);
    sub_100026DF8(v89, v90);
    if (v91) {
      unint64_t v92 = 0xC030000000000000;
    }
    else {
      unint64_t v92 = 0xC022000000000000;
    }
    uint64_t v93 = static HorizontalAlignment.center.getter();
    uint64_t v94 = (uint64_t)v199;
    *uint64_t v199 = v93;
    *(void *)(v94 + 8) = v92;
    *(unsigned char *)(v94 + 16) = 0;
    uint64_t v95 = sub_100010218(&qword_100813A38);
    uint64_t v96 = v232;
    int v97 = v86;
    sub_10060A9A8(v65, v232, v86, (char *)(v94 + *(int *)(v95 + 44)));
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v99 = v200;
    sub_10001B220(v94, v200, &qword_1008139D8);
    uint64_t v100 = v99 + *(int *)(v198 + 36);
    *(void *)uint64_t v100 = KeyPath;
    *(void *)(v100 + 8) = 1;
    *(unsigned char *)(v100 + 16) = 0;
    sub_10001457C(v94, &qword_1008139D8);
    uint64_t v101 = swift_getKeyPath();
    uint64_t v102 = v202;
    sub_10001B220(v99, v202, &qword_1008139E0);
    uint64_t v103 = v204;
    uint64_t v104 = (uint64_t *)(v102 + *(int *)(v204 + 36));
    *uint64_t v104 = v101;
    v104[1] = 0x3FB999999999999ALL;
    sub_10001457C(v99, &qword_1008139E0);
    uint64_t v105 = v206;
    static AccessibilityChildBehavior.ignore.getter();
    unint64_t v106 = sub_100612290();
    uint64_t v200 = v71;
    char v107 = v209;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v207 + 8))(v105, v208);
    sub_10001457C(v102, &qword_1008139E8);
    sub_100612CA4(v96, v212, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v108 = v213;
    static Locale.autoupdatingCurrent.getter();
    LODWORD(v208) = v97;
    unsigned char *v108 = v97;
    sub_100613430(&qword_100813A58, (void (*)(uint64_t))_s19DurationFormatStyleVMa);
    sub_100613430(&qword_100813A60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
    uint64_t v109 = Text.init<A>(_:format:)();
    uint64_t v111 = v110;
    char v113 = v112 & 1;
    uint64_t v243 = v103;
    uint64_t v244 = v106;
    swift_getOpaqueTypeConformance2();
    uint64_t v114 = (uint64_t)v205;
    uint64_t v115 = v211;
    View.accessibilityLabel(_:)();
    sub_10002B8D0(v109, v111, v113);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v210 + 8))(v107, v115);
    sub_10002C4EC(v114, v230, &qword_1008139F8);
    uint64_t v116 = v200;
    sub_10066780C(v200);
    uint64_t v117 = v234;
    uint64_t v118 = v227;
    v215(v234, 2, 3, v227);
    LOBYTE(v105) = sub_1006167C4(v116, v117);
    sub_100612D0C(v117, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
    sub_100612D0C(v116, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
    uint64_t v119 = 0x4024000000000000;
    if ((v105 & 1) == 0) {
      uint64_t v119 = 0;
    }
    uint64_t v209 = (char *)v119;
    uint64_t v120 = v201;
    sub_10066780C(v201);
    int v121 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v229 + 48))(v120, 3, v118);
    if ((v121 - 2) >= 2)
    {
      if (!v121) {
        sub_100612D0C(v120, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
      }
      long long v240 = 0u;
      long long v241 = 0u;
      long long v238 = 0u;
      long long v239 = 0u;
      long long v236 = 0u;
      long long v237 = 0u;
      long long v235 = 0u;
      char v242 = 1;
    }
    else
    {
      uint64_t v234 = sub_10060BB84(v232, v208);
      uint64_t v123 = v122;
      uint64_t v125 = v124;
      uint64_t v127 = v126;
      unsigned int v128 = static HierarchicalShapeStyle.tertiary.getter();
      static Font.footnote.getter();
      uint64_t v129 = v191;
      uint64_t v130 = v192;
      uint64_t v131 = v193;
      (*(void (**)(char *, void, uint64_t))(v192 + 104))(v191, enum case for Font.Leading.tight(_:), v193);
      uint64_t v132 = Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v131);
      uint64_t v133 = swift_getKeyPath();
      unsigned __int8 v134 = static Edge.Set.horizontal.getter();
      EdgeInsets.init(_all:)();
      if (qword_1007F6BD0 != -1)
      {
        uint64_t v232 = v135;
        uint64_t v228 = v136;
        uint64_t v229 = v137;
        uint64_t v227 = v138;
        swift_once();
        uint64_t v138 = v227;
        uint64_t v136 = v228;
        uint64_t v137 = v229;
        uint64_t v135 = v232;
      }
      *(void *)&long long v235 = v234;
      *((void *)&v235 + 1) = v123;
      *(void *)&long long v236 = v125;
      *((void *)&v236 + 1) = v127;
      *(void *)&long long v237 = v128;
      *((void *)&v237 + 1) = v133;
      *(void *)&long long v238 = v132;
      *((void *)&v238 + 1) = v134;
      *(void *)&long long v239 = v135;
      *((void *)&v239 + 1) = v136;
      *(void *)&long long v240 = v137;
      *((void *)&v240 + 1) = v138;
      *(void *)&long long v241 = 0;
      *((void *)&v241 + 1) = qword_10083D1C8;
      char v242 = 0;
      swift_retain();
    }
    sub_100010218(&qword_100813A68);
    sub_1006123F4();
    _ConditionalContent<>.init(storage:)();
    uint64_t v139 = v246;
    uint64_t v227 = v245;
    uint64_t v228 = v244;
    uint64_t v140 = v247;
    uint64_t v232 = v248;
    uint64_t v216 = v243;
    uint64_t v217 = v249;
    uint64_t v234 = v250;
    uint64_t v208 = v251;
    uint64_t v214 = v253;
    uint64_t v215 = v252;
    uint64_t v229 = v254;
    uint64_t v141 = v255;
    uint64_t v142 = v256;
    char v143 = v257;
    uint64_t v144 = v218;
    sub_10001B220(v230, v218, &qword_1008139F8);
    uint64_t v145 = v231;
    *uint64_t v231 = v203;
    *((unsigned char *)v145 + 8) = 0;
    uint64_t v146 = (int *)sub_100010218(&qword_100813AA8);
    sub_10001B220(v144, (uint64_t)v145 + v146[12], &qword_1008139F8);
    uint64_t v147 = (char *)v145 + v146[16];
    *(void *)uint64_t v147 = v209;
    v147[8] = 0;
    BOOL v148 = (char *)v145 + v146[20];
    uint64_t v150 = v216;
    uint64_t v149 = v217;
    uint64_t v152 = v227;
    uint64_t v151 = v228;
    *(void *)BOOL v148 = v216;
    *((void *)v148 + 1) = v151;
    uint64_t v153 = v151;
    uint64_t v227 = v152;
    uint64_t v228 = v151;
    *((void *)v148 + 2) = v152;
    *((void *)v148 + 3) = v139;
    char v154 = v152;
    uint64_t v212 = v140;
    uint64_t v213 = (unsigned char *)v139;
    uint64_t v155 = v140;
    uint64_t v156 = v232;
    *((void *)v148 + 4) = v140;
    *((void *)v148 + 5) = v156;
    uint64_t v157 = v156;
    uint64_t v232 = v156;
    uint64_t v158 = v234;
    *((void *)v148 + 6) = v149;
    *((void *)v148 + 7) = v158;
    uint64_t v159 = v158;
    uint64_t v234 = v158;
    uint64_t v160 = v208;
    uint64_t v162 = v214;
    uint64_t v161 = v215;
    *((void *)v148 + 8) = v208;
    *((void *)v148 + 9) = v161;
    uint64_t v163 = v229;
    *((void *)v148 + 10) = v162;
    *((void *)v148 + 11) = v163;
    uint64_t v164 = v141;
    *((void *)v148 + 12) = v141;
    *((void *)v148 + 13) = v142;
    uint64_t v210 = v142;
    LOBYTE(v140) = v143;
    v148[112] = v143;
    char v189 = v143;
    uint64_t v186 = v141;
    uint64_t v188 = v142;
    uint64_t v211 = v141;
    uint64_t v229 = v163;
    uint64_t v165 = v162;
    uint64_t v166 = v161;
    uint64_t v167 = v160;
    sub_100612600(v150, v153, v154, v139, v155, v157, v149, v159, v160, (uint64_t)v161, v162, v163, v186, v188, v189);
    uint64_t v168 = v210;
    uint64_t v187 = v164;
    uint64_t v183 = v165;
    uint64_t v185 = v163;
    uint64_t v169 = v165;
    uint64_t v214 = v165;
    uint64_t v215 = v166;
    uint64_t v170 = v150;
    uint64_t v171 = v150;
    uint64_t v216 = v150;
    uint64_t v217 = v149;
    uint64_t v172 = v232;
    uint64_t v173 = v234;
    sub_100612600(v170, v228, v227, (uint64_t)v213, v212, v232, v149, v234, v167, (uint64_t)v166, v183, v185, v187, v210, v140);
    uint64_t v184 = v169;
    uint64_t v174 = v171;
    LOBYTE(v169) = v227;
    uint64_t v175 = v228;
    sub_100612670(v174, v228, v227, (uint64_t)v213, v212, v172, v149, v173, v167, (uint64_t)v166, v184, v229, v211, v168, v140);
    sub_10001457C(v218, &qword_1008139F8);
    sub_10001B220((uint64_t)v231, v222, &qword_1008139D0);
    swift_storeEnumTagMultiPayload();
    sub_100014488(&qword_100813AB0, &qword_100813A08);
    sub_100014488(&qword_100813AB8, &qword_1008139D0);
    uint64_t v176 = (uint64_t)v223;
    _ConditionalContent<>.init(storage:)();
    char v190 = v140;
    uint64_t v83 = v176;
    sub_100612670(v216, v175, v169, (uint64_t)v213, v212, v232, v217, v234, v167, (uint64_t)v215, v214, v229, v211, v210, v190);
    sub_10001457C((uint64_t)v231, &qword_1008139D0);
    uint64_t v84 = v230;
    uint64_t v85 = &qword_1008139F8;
  }
  sub_10001457C(v84, v85);
  uint64_t v177 = v233;
  uint64_t v178 = v219;
  sub_10001B220(v233, v219, &qword_100813A28);
  uint64_t v179 = v224;
  sub_10001B220(v83, v224, &qword_100813A18);
  uint64_t v180 = v226;
  sub_10001B220(v178, v226, &qword_100813A28);
  uint64_t v181 = sub_100010218(&qword_100813AC0);
  sub_10001B220(v179, v180 + *(int *)(v181 + 48), &qword_100813A18);
  sub_10001457C(v83, &qword_100813A18);
  sub_10001457C(v177, &qword_100813A28);
  sub_10001457C(v179, &qword_100813A18);
  return sub_10001457C(v178, &qword_100813A28);
}

uint64_t sub_100604E10@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v152 = a3;
  LODWORD(v214) = a2;
  uint64_t v208 = a4;
  uint64_t v5 = type metadata accessor for AccessibilityTraits();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for ContentShapeKinds();
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v185 = (char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for DynamicTypeSize();
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v182 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_10080AA58);
  __chkstk_darwin(v11 - 8);
  uint64_t v181 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for ButtonBorderShape();
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v167 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for BorderedButtonStyle();
  uint64_t v158 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v156 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100010218(&qword_100813BE0);
  uint64_t v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v153 = (char *)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_100010218(&qword_100813BE8);
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v160 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100010218(&qword_100813BF0);
  __chkstk_darwin(v151);
  uint64_t v159 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100010218(&qword_100813BF8);
  __chkstk_darwin(v157);
  uint64_t v165 = (uint64_t)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_100010218(&qword_100813C00);
  __chkstk_darwin(v166);
  uint64_t v168 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_100010218(&qword_100813C08);
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v172 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100010218(&qword_100813C10);
  __chkstk_darwin(v164);
  uint64_t v176 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100010218(&qword_100813C18);
  __chkstk_darwin(v169);
  uint64_t v175 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_100010218(&qword_100813C20);
  __chkstk_darwin(v177);
  uint64_t v178 = (uint64_t)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100010218(&qword_100813C28);
  __chkstk_darwin(v24 - 8);
  uint64_t v180 = (char *)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v179 = (uint64_t)&v151 - v27;
  uint64_t v28 = sub_100010218(&qword_100813C30);
  __chkstk_darwin(v28 - 8);
  uint64_t v207 = (uint64_t *)((char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30);
  uint64_t v215 = (uint64_t)&v151 - v31;
  uint64_t v200 = type metadata accessor for Font.Leading();
  uint64_t v199 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  uint64_t v198 = (char *)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v151 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v151 - v37;
  uint64_t v39 = type metadata accessor for InsightsCurrentStreakView();
  uint64_t v193 = a1 + *(int *)(v39 + 28);
  sub_10066780C((uint64_t)v38);
  uint64_t v40 = type metadata accessor for WidgetFamily();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 56);
  uint64_t v192 = v40;
  uint64_t v191 = v41 + 56;
  v42(v35, 2, 3);
  BOOL v43 = sub_1006167C4((uint64_t)v38, (uint64_t)v35);
  sub_100612D0C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  uint64_t v201 = a1;
  uint64_t v209 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v42;
  if (v43
    && (uint64_t v44 = a1 + *(int *)(v39 + 36),
        uint64_t v45 = *(void *)v44,
        char v46 = *(unsigned char *)(v44 + 8),
        sub_100026CCC(*(void *)v44, v46),
        char v47 = sub_100666714(v45, v46),
        sub_100026DF8(v45, v46),
        (v47 & 1) == 0))
  {
    static Alignment.center.getter();
    uint64_t v48 = 1;
    _FrameLayout.init(width:height:alignment:)();
    int v56 = 0;
    uint64_t v49 = v220;
    uint64_t v50 = v221;
    uint64_t v51 = v222;
    uint64_t v52 = v223;
    int v55 = 1;
    uint64_t v53 = v224;
    uint64_t v54 = v225;
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    int v55 = 0;
    int v56 = 1;
  }
  uint64_t v190 = v5;
  uint64_t v189 = v6;
  uint64_t v188 = v8;
  uint64_t v206 = v48;
  int v205 = v56;
  uint64_t v204 = v49;
  uint64_t v203 = v50;
  uint64_t v202 = v51;
  uint64_t v213 = v52;
  int v212 = v55;
  uint64_t v210 = v54;
  uint64_t v211 = v53;
  if (v214)
  {
    uint64_t v57 = 0;
    uint64_t v200 = 0;
    uint64_t v198 = 0;
    uint64_t v199 = 0;
    uint64_t KeyPath = 0;
    uint64_t v195 = 0;
    uint64_t v196 = 0;
    uint64_t v194 = 0;
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    __int16 v150 = 2;
    uint64_t v149 = 26;
    uint64_t v58 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v60 = v59;
    char v62 = v61 & 1;
    LODWORD(v216) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v63 = Text.foregroundStyle<A>(_:)();
    uint64_t v65 = v64;
    uint64_t KeyPath = v66;
    char v68 = v67 & 1;
    sub_10002B8D0(v58, v60, v62);
    swift_bridgeObjectRelease();
    static Font.headline.getter();
    uint64_t v69 = v199;
    BOOL v70 = v198;
    uint64_t v71 = v200;
    (*(void (**)(char *, void, uint64_t))(v199 + 104))(v198, enum case for Font.Leading.tight(_:), v200);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
    uint64_t v57 = Text.font(_:)();
    uint64_t v200 = v72;
    char v74 = v73;
    uint64_t v199 = v75;
    swift_release();
    uint64_t v198 = (char *)(v74 & 1);
    sub_10002B8D0(v63, v65, v68);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v196 = swift_getKeyPath();
    uint64_t v194 = 0x3FE0000000000000;
    uint64_t v195 = 1;
  }
  uint64_t v76 = v201;
  uint64_t v77 = v192;
  sub_10066780C((uint64_t)v38);
  v209(v35, 2, 3, v77);
  LOBYTE(v77) = sub_1006167C4((uint64_t)v38, (uint64_t)v35);
  sub_100612D0C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  uint64_t v78 = sub_100612D0C((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  if (v77)
  {
    __chkstk_darwin(v78);
    uint64_t v79 = v152;
    *(&v151 - 4) = v76;
    *(&v151 - 3) = v79;
    __chkstk_darwin(v80);
    uint64_t v149 = v76;
    sub_100010218(&qword_100813C48);
    sub_100010218(&qword_100813C50);
    uint64_t v81 = sub_100014440(&qword_100813C58);
    uint64_t v82 = type metadata accessor for IconOnlyLabelStyle();
    uint64_t v83 = sub_100014488(&qword_100813C60, &qword_100813C58);
    uint64_t v84 = sub_100613430(&qword_1008017F8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    uint64_t v216 = v81;
    uint64_t v217 = v82;
    uint64_t v218 = v83;
    uint64_t v219 = v84;
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100813C68, &qword_100813C50);
    uint64_t v85 = v153;
    Menu.init(content:label:)();
    int v86 = v156;
    BorderedButtonStyle.init()();
    sub_100014488(&qword_100813C70, &qword_100813BE0);
    sub_100613430(&qword_100801E30, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    uint64_t v87 = v160;
    uint64_t v88 = v155;
    uint64_t v89 = v161;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v86, v89);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v85, v88);
    char v90 = v167;
    static ButtonBorderShape.circle.getter();
    uint64_t v91 = swift_getKeyPath();
    uint64_t v92 = (uint64_t)v159;
    uint64_t v93 = (uint64_t *)&v159[*(int *)(v151 + 36)];
    uint64_t v94 = sub_100010218(&qword_10080DEB0);
    uint64_t v95 = v170;
    uint64_t v96 = v171;
    (*(void (**)(char *, char *, uint64_t))(v170 + 16))((char *)v93 + *(int *)(v94 + 28), v90, v171);
    *uint64_t v93 = v91;
    uint64_t v97 = v162;
    uint64_t v98 = v163;
    (*(void (**)(uint64_t, char *, uint64_t))(v162 + 16))(v92, v87, v163);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v90, v96);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v87, v98);
    LODWORD(v98) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v99 = v165;
    sub_10001B220(v92, v165, &qword_100813BF0);
    *(_DWORD *)(v99 + *(int *)(v157 + 36)) = v98;
    sub_10001457C(v92, &qword_100813BF0);
    uint64_t v100 = swift_getKeyPath();
    uint64_t v101 = (uint64_t)v181;
    static Material.regular.getter();
    uint64_t v102 = type metadata accessor for Material();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v101, 0, 1, v102);
    uint64_t v103 = (uint64_t)v168;
    uint64_t v104 = (uint64_t *)&v168[*(int *)(v166 + 36)];
    uint64_t v105 = sub_100010218(&qword_100813C78);
    sub_10001B220(v101, (uint64_t)v104 + *(int *)(v105 + 28), &qword_10080AA58);
    *uint64_t v104 = v100;
    sub_10001B220(v99, v103, &qword_100813BF8);
    sub_10001457C(v101, &qword_10080AA58);
    sub_10001457C(v99, &qword_100813BF8);
    uint64_t v106 = v183;
    char v107 = v182;
    uint64_t v108 = v184;
    (*(void (**)(char *, void, uint64_t))(v183 + 104))(v182, enum case for DynamicTypeSize.large(_:), v184);
    sub_100612E50();
    uint64_t v214 = v57;
    uint64_t v109 = v172;
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v108);
    sub_10001457C(v103, &qword_100813C00);
    uint64_t v110 = v185;
    static ContentShapeKinds.interaction.getter();
    uint64_t v111 = (uint64_t)v176;
    char v112 = &v176[*(int *)(v164 + 36)];
    uint64_t v113 = sub_100010218(&qword_100813CA0);
    uint64_t v114 = v186;
    uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v186 + 16);
    uint64_t v116 = v187;
    v115(&v112[*(int *)(v113 + 40)], v110, v187);
    *(void *)char v112 = 0xC020000000000000;
    v112[8] = 0;
    uint64_t v117 = v173;
    uint64_t v118 = v174;
    (*(void (**)(uint64_t, char *, uint64_t))(v173 + 16))(v111, v109, v174);
    uint64_t v119 = *(void (**)(char *, uint64_t))(v114 + 8);
    v119(v110, v116);
    uint64_t v120 = v109;
    uint64_t v57 = v214;
    (*(void (**)(char *, uint64_t))(v117 + 8))(v120, v118);
    static ContentShapeKinds.accessibility.getter();
    uint64_t v121 = (uint64_t)v175;
    uint64_t v122 = &v175[*(int *)(v169 + 36)];
    uint64_t v123 = sub_100010218(&qword_100813CA8);
    v115(&v122[*(int *)(v123 + 40)], v110, v116);
    *uint64_t v122 = 0;
    sub_10001B220(v111, v121, &qword_100813C10);
    v119(v110, v116);
    sub_10001457C(v111, &qword_100813C10);
    uint64_t v124 = v178;
    sub_10001B220(v121, v178, &qword_100813C18);
    *(_OWORD *)(v124 + *(int *)(v177 + 36)) = xmmword_1006ECC60;
    sub_10001457C(v121, &qword_100813C18);
    uint64_t v125 = v188;
    static AccessibilityTraits.isButton.getter();
    sub_100613254(&qword_100813CB0, &qword_100813C20, (void (*)(void))sub_1006130D8);
    uint64_t v126 = (uint64_t)v180;
    View.accessibilityRemoveTraits(_:)();
    (*(void (**)(char *, uint64_t))(v189 + 8))(v125, v190);
    sub_10001457C(v124, &qword_100813C20);
    uint64_t v127 = v179;
    sub_10002C4EC(v126, v179, &qword_100813C28);
    sub_10001B220(v127, v126, &qword_100813C28);
    uint64_t v128 = (uint64_t)v207;
    *uint64_t v207 = 0;
    *(unsigned char *)(v128 + 8) = 1;
    uint64_t v129 = sub_100010218(&qword_100813CD8);
    sub_10001B220(v126, v128 + *(int *)(v129 + 48), &qword_100813C28);
    sub_10001457C(v127, &qword_100813C28);
    sub_10001457C(v126, &qword_100813C28);
    uint64_t v130 = sub_100010218(&qword_100813C38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v128, 0, 1, v130);
    uint64_t v131 = v215;
    sub_10002C4EC(v128, v215, &qword_100813C30);
  }
  else
  {
    uint64_t v133 = sub_100010218(&qword_100813C38);
    uint64_t v131 = v215;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v215, 1, 1, v133);
    uint64_t v128 = (uint64_t)v207;
  }
  uint64_t v132 = v208;
  uint64_t v134 = v206;
  char v135 = v205;
  uint64_t v136 = v204;
  uint64_t v137 = v203;
  uint64_t v138 = v202;
  sub_10001B220(v131, v128, &qword_100813C30);
  *(void *)uint64_t v132 = 0;
  *(void *)(v132 + 8) = v134;
  *(void *)(v132 + 16) = v136;
  *(void *)(v132 + 24) = v137;
  uint64_t v139 = v213;
  *(void *)(v132 + 32) = v138;
  *(void *)(v132 + 40) = v139;
  uint64_t v140 = v210;
  *(void *)(v132 + 48) = v211;
  *(void *)(v132 + 56) = v140;
  *(void *)(v132 + 64) = 0;
  *(unsigned char *)(v132 + 72) = v212;
  *(unsigned char *)(v132 + 73) = v135;
  uint64_t v141 = v57;
  uint64_t v142 = v200;
  *(void *)(v132 + 80) = v57;
  *(void *)(v132 + 88) = v142;
  LOBYTE(v136) = (_BYTE)v198;
  uint64_t v143 = v199;
  *(void *)(v132 + 96) = v198;
  *(void *)(v132 + 104) = v143;
  uint64_t v144 = v195;
  *(void *)(v132 + 112) = KeyPath;
  *(void *)(v132 + 120) = v144;
  uint64_t v145 = v196;
  *(void *)(v132 + 128) = 0;
  *(void *)(v132 + 136) = v145;
  uint64_t v146 = v194;
  *(void *)(v132 + 144) = v194;
  uint64_t v147 = sub_100010218(&qword_100813C40);
  sub_10001B220(v128, v132 + *(int *)(v147 + 64), &qword_100813C30);
  uint64_t v149 = v146;
  sub_100612D6C(v141, v142, v136, v143);
  sub_10001457C(v215, &qword_100813C30);
  sub_10001457C(v128, &qword_100813C30);
  uint64_t v149 = v146;
  return sub_100612DD0(v141, v142, v136, v143);
}

uint64_t sub_10060650C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X8>)
{
  int v146 = a3;
  uint64_t v143 = a2;
  __int16 v150 = a4;
  uint64_t v152 = (void *)sub_100010218(&qword_100813D20);
  uint64_t v149 = *(v152 - 1);
  __chkstk_darwin(v152);
  uint64_t v141 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100010218(&qword_100813D28);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v137 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v138 = (char *)&v115 - v8;
  uint64_t v9 = sub_100010218(&qword_100813828);
  __chkstk_darwin(v9 - 8);
  uint64_t v130 = (uint64_t)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100010218(&qword_100813D30);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100010218(&qword_100813D38);
  __chkstk_darwin(v134);
  uint64_t v135 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v136 = (char *)&v115 - v14;
  uint64_t v15 = sub_100010218(&qword_100813D40);
  __chkstk_darwin(v15 - 8);
  uint64_t v161 = (uint64_t)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v162 = (uint64_t)&v115 - v18;
  uint64_t v160 = type metadata accessor for Divider();
  uint64_t v148 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v159 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v163 = (char *)&v115 - v21;
  uint64_t v22 = type metadata accessor for InsightsCurrentStreakView();
  uint64_t v116 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v117 = v23;
  uint64_t v142 = (uint64_t)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_100010218(&qword_100813D48);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v118 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for DateComponents();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v121 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for Calendar();
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v120 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v27 - 8);
  uint64_t v126 = (uint64_t)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for Date();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v119 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v127 = (char *)&v115 - v31;
  uint64_t v32 = sub_100010218(&qword_100813D50);
  __chkstk_darwin(v32 - 8);
  uint64_t v165 = (uint64_t)&v115 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v166 = (uint64_t)&v115 - v35;
  uint64_t v36 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v36 - 8);
  uint64_t v38 = (char *)&v115 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100010218(&qword_100813D58);
  uint64_t v167 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v158 = (char *)&v115 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  BOOL v43 = (char *)&v115 - v42;
  __chkstk_darwin(v44);
  uint64_t v164 = (char *)&v115 - v45;
  uint64_t v157 = sub_100010218(&qword_100813D60);
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v155 = (char *)&v115 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v115 - v48;
  uint64_t v147 = v22;
  uint64_t v151 = a1;
  sub_100010218(&qword_100813948);
  AppStorage.projectedValue.getter();
  static Animation.spring(response:dampingFraction:blendDuration:)();
  sub_100010218(&qword_100813D68);
  Binding.animation(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v171 = v174;
  uint64_t v172 = v175;
  char v173 = v176;
  swift_retain();
  swift_retain();
  LocalizedStringKey.init(stringLiteral:)();
  *(void *)&long long v168 = Text.init(_:tableName:bundle:comment:)();
  *((void *)&v168 + 1) = v50;
  char v169 = v51 & 1;
  uint64_t v170 = v52;
  sub_100010218(&qword_100813D70);
  sub_100613370(&qword_100813D78, &qword_100813948, (void (*)(void))sub_1006133DC);
  sub_100014488(&qword_100813D88, &qword_100813D70);
  uint64_t v154 = v49;
  Picker.init(selection:label:content:)();
  swift_release();
  swift_release();
  URL.init(string:)();
  uint64_t v53 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v38, 1, v53);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  sub_100010218(&qword_100813D90);
  sub_100014488(&qword_100813D98, &qword_100813D90);
  Link.init(sensitiveUrl:label:)();
  (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v164, v43, v39);
  uint64_t v55 = v147;
  uint64_t v56 = v151;
  long long v168 = *(_OWORD *)(v151 + *(int *)(v147 + 24));
  sub_100010218(&qword_100813CF0);
  State.wrappedValue.getter();
  uint64_t v153 = v39;
  if (v174)
  {
    uint64_t v57 = 1;
    uint64_t v58 = v152;
    uint64_t v59 = v163;
  }
  else
  {
    uint64_t v60 = type metadata accessor for StreakSummary();
    uint64_t v61 = v126;
    sub_10001B220(v143 + *(int *)(v60 + 24), v126, (uint64_t *)&unk_1007FC470);
    uint64_t v62 = v128;
    uint64_t v63 = v129;
    int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v61, 1, v129);
    uint64_t v58 = v152;
    uint64_t v59 = v163;
    if (v64 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v127, v61, v63);
      uint64_t v101 = v120;
      sub_100666410(v120);
      uint64_t v102 = v119;
      static Date.now.getter();
      sub_100010218(&qword_1007FB058);
      uint64_t v103 = type metadata accessor for Calendar.Component();
      uint64_t v104 = *(void *)(v103 - 8);
      unint64_t v105 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
      uint64_t v106 = swift_allocObject();
      *(_OWORD *)(v106 + 16) = xmmword_1006D6280;
      (*(void (**)(unint64_t, void, uint64_t))(v104 + 104))(v106 + v105, enum case for Calendar.Component.day(_:), v103);
      sub_1000F5AEC(v106);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      char v107 = v121;
      Calendar.dateComponents(_:from:to:)();
      swift_bridgeObjectRelease();
      uint64_t v108 = DateComponents.day.getter();
      LOBYTE(v103) = v109;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v107, v125);
      uint64_t v110 = *(void (**)(char *, uint64_t))(v62 + 8);
      v110(v102, v63);
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v101, v123);
      if ((v103 & 1) != 0 || v108)
      {
        v110(v127, v63);
        uint64_t v57 = 1;
        char v65 = v146;
        uint64_t v66 = v145;
        uint64_t v67 = v144;
        uint64_t v59 = v163;
        uint64_t v58 = v152;
        uint64_t v56 = v151;
      }
      else
      {
        uint64_t v56 = v151;
        uint64_t v111 = v142;
        sub_100612CA4(v151, v142, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
        unint64_t v112 = (*(unsigned __int8 *)(v116 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
        uint64_t v113 = swift_allocObject();
        sub_1006126EC(v111, v113 + v112, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
        sub_100010218(&qword_100813DB8);
        sub_100014488(&qword_100813DC0, &qword_100813DB8);
        uint64_t v114 = v118;
        Button.init(action:label:)();
        v110(v127, v63);
        uint64_t v67 = v144;
        uint64_t v66 = v145;
        (*(void (**)(uint64_t, char *, uint64_t))(v144 + 32))(v166, v114, v145);
        uint64_t v57 = 0;
        char v65 = v146;
        uint64_t v59 = v163;
        uint64_t v58 = v152;
      }
      goto LABEL_7;
    }
    sub_10001457C(v61, (uint64_t *)&unk_1007FC470);
    uint64_t v57 = 1;
  }
  char v65 = v146;
  uint64_t v66 = v145;
  uint64_t v67 = v144;
LABEL_7:
  uint64_t v68 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v166, v57, 1, v66);
  Divider.init()();
  uint64_t v69 = v149;
  if ((v65 & 1) == 0)
  {
    uint64_t v70 = v130;
    sub_100612CA4(v143, v130, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v71 = type metadata accessor for StreakSummary();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
    uint64_t v72 = v142;
    sub_100608900(v70, v142);
    char v73 = *(unsigned char *)(v56 + *(int *)(v55 + 48) + 8);
    uint64_t v74 = swift_retain();
    sub_100666C70(v74, v73);
    swift_release();
    type metadata accessor for InsightsDataManager(0);
    sub_100613430(&qword_100813DA0, (void (*)(uint64_t))type metadata accessor for InsightsCurrentStreakView);
    sub_100613430((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    uint64_t v75 = v131;
    View.environment<A>(_:)();
    swift_release();
    sub_100612D0C(v72, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
    uint64_t v76 = (uint64_t)v136;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v136, v75, v133);
    LocalizedStringKey.init(stringLiteral:)();
    Text.init(_:tableName:bundle:comment:)();
    uint64_t v77 = v138;
    SharePreview<>.init(_:)();
    sub_10001B220(v76, v135, &qword_100813D38);
    uint64_t v78 = v139;
    uint64_t v79 = v140;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v137, v77, v140);
    sub_100010218(&qword_100813B18);
    sub_100014488(&qword_100813B20, &qword_100813B18);
    sub_100014488(&qword_100813DA8, &qword_100813D38);
    uint64_t v80 = v141;
    uint64_t v59 = v163;
    ShareLink.init<A>(item:subject:message:preview:label:)();
    uint64_t v81 = v77;
    uint64_t v58 = v152;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v79);
    sub_10001457C(v76, &qword_100813D38);
    (*(void (**)(uint64_t, char *, void *))(v69 + 32))(v162, v80, v58);
    uint64_t v68 = 0;
  }
  uint64_t v82 = v162;
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v69 + 56))(v162, v68, 1, v58);
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
  uint64_t v84 = v155;
  uint64_t v85 = v157;
  v83(v155, v154, v157);
  uint64_t v152 = *(void **)(v167 + 16);
  int v86 = v158;
  ((void (*)(char *, char *, uint64_t))v152)(v158, v164, v153);
  sub_10001B220(v166, v165, &qword_100813D50);
  uint64_t v87 = v148;
  uint64_t v88 = v59;
  uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
  v89(v159, v88, v160);
  sub_10001B220(v82, v161, &qword_100813D40);
  char v90 = v150;
  v83(v150, v84, v85);
  uint64_t v91 = (int *)sub_100010218(&qword_100813DB0);
  uint64_t v92 = v153;
  ((void (*)(char *, char *, uint64_t))v152)(&v90[v91[12]], v86, v153);
  sub_10001B220(v165, (uint64_t)&v90[v91[16]], &qword_100813D50);
  uint64_t v94 = v159;
  uint64_t v93 = v160;
  v89(&v90[v91[20]], v159, v160);
  uint64_t v95 = v161;
  sub_10001B220(v161, (uint64_t)&v90[v91[24]], &qword_100813D40);
  sub_10001457C(v162, &qword_100813D40);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v87 + 8);
  uint64_t v97 = v93;
  v96(v163, v93);
  sub_10001457C(v166, &qword_100813D50);
  uint64_t v98 = *(void (**)(char *, uint64_t))(v167 + 8);
  v167 += 8;
  v98(v164, v92);
  uint64_t v99 = *(void (**)(char *, uint64_t))(v156 + 8);
  uint64_t v100 = v157;
  v99(v154, v157);
  sub_10001457C(v95, &qword_100813D40);
  v96(v94, v97);
  sub_10001457C(v165, &qword_100813D50);
  v98(v158, v92);
  return ((uint64_t (*)(char *, uint64_t))v99)(v155, v100);
}

uint64_t sub_100607C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v1 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  uint64_t v54 = sub_100010218(&qword_100813DC8) - 8;
  __chkstk_darwin(v54);
  uint64_t v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100010218(&qword_100813DD0);
  uint64_t v4 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100010218(&qword_100813DD8);
  __chkstk_darwin(v65);
  uint64_t v58 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100813DE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v59 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v64 = (uint64_t)&v52 - v11;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v14 = v13;
  uint64_t v62 = v13;
  uint64_t v63 = v15;
  uint64_t v16 = v15;
  int v18 = v17 & 1;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v67 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  uint64_t v68 = v12;
  uint64_t v69 = v14;
  uint64_t v55 = v12;
  int v66 = v21 & 1;
  int v56 = v18;
  char v70 = v18;
  uint64_t v71 = v16;
  uint64_t v72 = v67;
  uint64_t v73 = v19;
  char v74 = v21 & 1;
  uint64_t v75 = v20;
  sub_100010218(&qword_100813DE8);
  sub_100014488(&qword_100813DF0, &qword_100813DE8);
  Button.init(action:label:)();
  uint64_t v22 = v53;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v3, v6, v53);
  v3[*(int *)(v54 + 44)] = 2;
  uint64_t v23 = v58;
  sub_10001B220((uint64_t)v3, v58, &qword_100813DC8);
  *(unsigned char *)(v23 + *(int *)(v65 + 36)) = 2;
  sub_10001457C((uint64_t)v3, &qword_100813DC8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v22);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  v25._uint64_t countAndFlagsBits = 8236;
  v25._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v29 = v28;
  LOBYTE(v23) = v30 & 1;
  sub_1006139E0();
  uint64_t v31 = v59;
  uint64_t v32 = v58;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v27, v29, v23);
  swift_bridgeObjectRelease();
  sub_10001457C(v32, &qword_100813DD8);
  uint64_t v33 = v64;
  sub_10002C4EC(v31, v64, &qword_100813DE0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v34 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  LOBYTE(v3) = v39 & 1;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v40 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  LOBYTE(v29) = v45 & 1;
  sub_10001B220(v33, v31, &qword_100813DE0);
  char v77 = (char)v3;
  char v76 = v29;
  uint64_t v46 = v31;
  uint64_t v47 = v57;
  sub_10001B220(v46, v57, &qword_100813DE0);
  uint64_t v48 = sub_100010218(&qword_100813E30);
  uint64_t v49 = v47 + *(int *)(v48 + 48);
  *(void *)uint64_t v49 = v34;
  *(void *)(v49 + 8) = v36;
  *(unsigned char *)(v49 + 16) = (_BYTE)v3;
  *(void *)(v49 + 24) = v38;
  *(_WORD *)(v49 + 32) = 0;
  uint64_t v50 = v47 + *(int *)(v48 + 64);
  *(void *)uint64_t v50 = v40;
  *(void *)(v50 + 8) = v42;
  *(unsigned char *)(v50 + 16) = v29;
  *(void *)(v50 + 24) = v44;
  *(_WORD *)(v50 + 32) = 257;
  sub_1000C04A4(v34, v36, (char)v3);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v40, v42, v29);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v34, v36, (char)v3);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v40, v42, v29);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v55, v62, v56);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v67, v60, v66);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v40, v42, v29);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v34, v36, (char)v3);
  swift_bridgeObjectRelease();
  sub_10001457C(v64, &qword_100813DE0);
  sub_10002B8D0(v40, v42, v76);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v34, v36, v77);
  swift_bridgeObjectRelease();
  return sub_10001457C(v59, &qword_100813DE0);
}

uint64_t sub_1006083C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  char v13 = a3 & 1;
  *(unsigned char *)(a9 + 16) = a3 & 1;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  char v14 = a7 & 1;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(void *)(a9 + 56) = a8;
  sub_1000C04A4(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  sub_1000C04A4(a5, a6, v14);
  swift_bridgeObjectRetain();
  sub_1000C04A4(a1, a2, v13);
  swift_bridgeObjectRetain();
  sub_1000C04A4(a5, a6, v14);
  swift_bridgeObjectRetain();
  sub_10002B8D0(a5, a6, v14);
  swift_bridgeObjectRelease();
  sub_10002B8D0(a1, a2, v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006084C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_1000C04A4(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v3, v5, v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006085C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InsightsCurrentStreakView();
  char v7 = *(unsigned char *)(a1 + *(int *)(v6 + 48) + 8);
  uint64_t v8 = swift_retain();
  sub_100666C70(v8, v7);
  swift_release();
  static Date.now.getter();
  sub_1004BA5E8((uint64_t)v5);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(v6 + 24));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v14 = *v9;
  uint64_t v15 = v10;
  swift_retain();
  sub_100010218(&qword_100813CF0);
  uint64_t result = State.wrappedValue.getter();
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v11;
    uint64_t v15 = v10;
    uint64_t v13 = v16 + 1;
    State.wrappedValue.setter();
    return swift_release();
  }
  return result;
}

uint64_t sub_10060874C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v14 = v13 & 1;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v13 & 1;
  *(void *)(a1 + 64) = v15;
  swift_retain();
  sub_1000C04A4(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v10, v12, v14);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v10, v12, v14);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v3, v5, v9);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100608900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for InsightsSetScheduleAction();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (void *)((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002C4EC(a1, a2, &qword_100813828);
  uint64_t v11 = (int *)type metadata accessor for InsightsCurrentStreakView();
  uint64_t v12 = a2 + v11[5];
  *uint64_t v10 = swift_getKeyPath();
  sub_100010218(&qword_100807970);
  swift_storeEnumTagMultiPayload();
  sub_1006126EC((uint64_t)v10, v12, (uint64_t (*)(void))type metadata accessor for InsightsSetScheduleAction);
  uint64_t v13 = v11[6];
  v23[1] = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)(a2 + v13) = v24;
  char v14 = (uint64_t *)(a2 + v11[7]);
  *char v14 = swift_getKeyPath();
  sub_100010218(&qword_100813370);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a2 + v11[8];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v16 = a2 + v11[9];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  char v17 = (uint64_t *)(a2 + v11[10]);
  *char v17 = swift_getKeyPath();
  sub_100010218(&qword_1007F9480);
  swift_storeEnumTagMultiPayload();
  int v18 = (uint64_t *)(a2 + v11[11]);
  *int v18 = swift_getKeyPath();
  sub_100010218(&qword_1008156E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a2 + v11[12];
  type metadata accessor for InsightsDataManager(0);
  sub_100613430((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  *(void *)uint64_t v19 = Environment.init<A>(_:)();
  *(unsigned char *)(v19 + 8) = v20 & 1;
  uint64_t v21 = v11[13];
  sub_10060E484();
  *(void *)(a2 + v21) = AppStorage.init<A>(_:store:)();
  *(void *)&long long v24 = 0x4055000000000000;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.subheadline(_:), v4);
  sub_1000DA83C();
  uint64_t result = ScaledMetric.init(wrappedValue:relativeTo:)();
  *(void *)(a2 + v11[15]) = 0x405B800000000000;
  return result;
}

uint64_t sub_100608C6C()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100608CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_10060A8F8(a1);
}

uint64_t sub_100608CE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100608D24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_100813C58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1;
  sub_100010218(&qword_100813CE0);
  sub_100014488(&qword_100813CE8, &qword_100813CE0);
  Label.init(title:icon:)();
  IconOnlyLabelStyle.init()();
  sub_100014488(&qword_100813C60, &qword_100813C58);
  sub_100613430(&qword_1008017F8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100608FA8@<X0>(uint64_t a1@<X8>)
{
  return sub_10060A8F8(a1);
}

uint64_t sub_100608FC4()
{
  return PhaseAnimator.init<A, B>(_:trigger:content:animation:)();
}

uint64_t sub_100609124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v28 = sub_100010218(&qword_100800618) - 8;
  __chkstk_darwin(v28);
  uint64_t v2 = (uint64_t *)((char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for SymbolEffectOptions();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for AutomaticSymbolEffect();
  uint64_t v6 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ContentTransition();
  uint64_t v9 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_100813D10);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  uint64_t v16 = Image.init(systemName:)();
  AutomaticSymbolEffect.init()();
  static SymbolEffectOptions.default.getter();
  sub_100613430(&qword_100813D18, (void (*)(uint64_t))&type metadata accessor for AutomaticSymbolEffect);
  uint64_t v17 = v24;
  static ContentTransition.symbolEffect<A>(_:options:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v25;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v2 + *(int *)(v28 + 36), v11, v25);
  *uint64_t v2 = KeyPath;
  sub_10001B220((uint64_t)v2, (uint64_t)v15 + *(int *)(v13 + 44), &qword_100800618);
  uint64_t *v15 = v16;
  swift_retain();
  sub_10001457C((uint64_t)v2, &qword_100800618);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v29;
  sub_10001B220((uint64_t)v15, v29, &qword_100813D10);
  uint64_t v21 = (_OWORD *)(v20 + *(int *)(sub_100010218(&qword_100813CF8) + 36));
  long long v22 = v31;
  *uint64_t v21 = v30;
  v21[1] = v22;
  v21[2] = v32;
  return sub_10001457C((uint64_t)v15, &qword_100813D10);
}

uint64_t sub_10060951C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v135 = a1;
  uint64_t v144 = a2;
  uint64_t v127 = type metadata accessor for ColorResource();
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v125 = (char *)&v101 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for ButtonBorderShape();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v110 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for InsightsCurrentStreakView();
  uint64_t v102 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v103 = v5;
  uint64_t v104 = (uint64_t)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100010218(&qword_100813AD8);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  unint64_t v105 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100010218(&qword_100813AE0);
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v106 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100010218(&qword_100813AE8);
  __chkstk_darwin(v109);
  uint64_t v116 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100010218(&qword_100813AF0);
  __chkstk_darwin(v113);
  uint64_t v120 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100010218(&qword_100813AF8);
  __chkstk_darwin(v119);
  uint64_t v121 = (uint64_t)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100813B00);
  uint64_t v141 = *(void *)(v11 - 8);
  uint64_t v142 = v11;
  __chkstk_darwin(v11);
  uint64_t v118 = (uint64_t)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v117 = (uint64_t)&v101 - v14;
  uint64_t v15 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v15 - 8);
  uint64_t v132 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v131 = (uint64_t)&v101 - v18;
  uint64_t v19 = sub_100010218(&qword_100813B08);
  __chkstk_darwin(v19 - 8);
  uint64_t v143 = (uint64_t)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v150 = (uint64_t)&v101 - v22;
  uint64_t v23 = type metadata accessor for Font.Leading();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  static Font.headline.getter();
  LODWORD(v148) = enum case for Font.Leading.tight(_:);
  long long v32 = *(void (**)(void))(v24 + 104);
  uint64_t v128 = v24 + 104;
  uint64_t KeyPath = (void (*)(char *, void, uint64_t))v32;
  uint64_t v129 = v23;
  v32(v26);
  Font.leading(_:)();
  swift_release();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v130 = v24 + 8;
  uint64_t v136 = v33;
  v33(v26, v23);
  uint64_t v34 = Text.font(_:)();
  uint64_t v36 = v35;
  char v38 = v37;
  swift_release();
  char v39 = v38 & 1;
  char v40 = v31;
  uint64_t v41 = v133;
  sub_10002B8D0(v27, v29, v40);
  swift_bridgeObjectRelease();
  LODWORD(v151[0]) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v42 = Text.foregroundStyle<A>(_:)();
  uint64_t v149 = v43;
  char v45 = v44;
  uint64_t v47 = v46;
  uint64_t v48 = v36;
  uint64_t v49 = v135;
  sub_10002B8D0(v34, v48, v39);
  swift_bridgeObjectRelease();
  sub_10060A530((uint64_t)v151);
  uint64_t v134 = v151[0];
  uint64_t v139 = v151[2];
  uint64_t v140 = v151[1];
  uint64_t v138 = v151[3];
  int v137 = v152;
  static Font.caption.getter();
  uint64_t v50 = v129;
  KeyPath(v26, v148, v129);
  uint64_t v148 = Font.leading(_:)();
  swift_release();
  v136(v26, v50);
  uint64_t KeyPath = (void (*)(char *, void, uint64_t))swift_getKeyPath();
  LODWORD(v136) = static HierarchicalShapeStyle.tertiary.getter();
  uint64_t v51 = v131;
  sub_10066780C(v131);
  uint64_t v52 = type metadata accessor for WidgetFamily();
  uint64_t v53 = (uint64_t)v132;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v132, 2, 3, v52);
  uint64_t v54 = v53;
  LOBYTE(v53) = sub_1006167C4(v51, v53);
  sub_100612D0C(v54, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C(v51, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  uint64_t v145 = v42;
  uint64_t v146 = v47;
  if (v53)
  {
    uint64_t v55 = v104;
    sub_100612CA4(v49, v104, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
    unint64_t v56 = (*(unsigned __int8 *)(v102 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
    uint64_t v57 = swift_allocObject();
    sub_1006126EC(v55, v57 + v56, (uint64_t (*)(void))type metadata accessor for InsightsCurrentStreakView);
    sub_100010218(&qword_100813B18);
    sub_100014488(&qword_100813B20, &qword_100813B18);
    uint64_t v58 = v105;
    Button.init(action:label:)();
    uint64_t v59 = v110;
    BorderedProminentButtonStyle.init()();
    sub_100014488(&qword_100813B28, &qword_100813AD8);
    sub_100613430(&qword_1008017F0, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    uint64_t v60 = v106;
    uint64_t v61 = v108;
    uint64_t v62 = v112;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v59, v62);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v58, v61);
    uint64_t v63 = v49 + *(int *)(v41 + 36);
    uint64_t v64 = *(void *)v63;
    LOBYTE(v58) = *(unsigned char *)(v63 + 8);
    sub_100026CCC(*(void *)v63, (char)v58);
    LOBYTE(v62) = sub_100666714(v64, (char)v58);
    sub_100026DF8(v64, (char)v58);
    uint64_t v65 = v60;
    char v66 = v45;
    uint64_t v67 = v122;
    if (v62) {
      static ButtonBorderShape.automatic.getter();
    }
    else {
      static ButtonBorderShape.capsule.getter();
    }
    uint64_t v70 = v150;
    uint64_t v71 = swift_getKeyPath();
    uint64_t v72 = (uint64_t)v116;
    uint64_t v73 = (uint64_t *)&v116[*(int *)(v109 + 36)];
    uint64_t v74 = sub_100010218(&qword_10080DEB0);
    uint64_t v75 = v123;
    uint64_t v76 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))((char *)v73 + *(int *)(v74 + 28), v67, v124);
    *uint64_t v73 = v71;
    uint64_t v77 = v114;
    uint64_t v78 = v115;
    (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v72, v65, v115);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v67, v76);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v78);
    static Font.subheadline.getter();
    uint64_t v79 = Font.bold()();
    swift_release();
    uint64_t v80 = swift_getKeyPath();
    uint64_t v81 = v120;
    sub_10001B220(v72, v120, &qword_100813AE8);
    uint64_t v82 = (uint64_t *)(v81 + *(int *)(v113 + 36));
    *uint64_t v82 = v80;
    v82[1] = v79;
    sub_10001457C(v72, &qword_100813AE8);
    if (qword_1007F7F58 != -1) {
      swift_once();
    }
    uint64_t v83 = v127;
    uint64_t v84 = sub_100026A54(v127, (uint64_t)qword_10083EF28);
    (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v84, v83);
    Color.init(_:)();
    uint64_t v85 = Color.opacity(_:)();
    swift_release();
    uint64_t v86 = swift_getKeyPath();
    uint64_t v87 = v121;
    sub_10001B220(v81, v121, &qword_100813AF0);
    uint64_t v88 = (uint64_t *)(v87 + *(int *)(v119 + 36));
    *uint64_t v88 = v86;
    v88[1] = v85;
    sub_10001457C(v81, &qword_100813AF0);
    LOBYTE(v86) = static Edge.Set.top.getter();
    uint64_t v89 = v118;
    sub_10001B220(v87, v118, &qword_100813AF8);
    uint64_t v69 = v142;
    uint64_t v90 = v89 + *(int *)(v142 + 36);
    *(unsigned char *)uint64_t v90 = v86;
    *(_OWORD *)(v90 + 8) = 0u;
    *(_OWORD *)(v90 + 24) = 0u;
    *(unsigned char *)(v90 + 40) = 1;
    sub_10001457C(v87, &qword_100813AF8);
    uint64_t v91 = v117;
    sub_10002C4EC(v89, v117, &qword_100813B00);
    sub_10002C4EC(v91, v70, &qword_100813B00);
    uint64_t v68 = 0;
    uint64_t v42 = v145;
    uint64_t v47 = v146;
    char v45 = v66;
  }
  else
  {
    uint64_t v68 = 1;
    uint64_t v69 = v142;
    uint64_t v70 = v150;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v70, v68, 1, v69);
  LODWORD(v142) = v45 & 1;
  uint64_t v92 = v143;
  sub_10001B220(v70, v143, &qword_100813B08);
  uint64_t v93 = v144;
  uint64_t v94 = v149;
  *uint64_t v144 = v42;
  v93[1] = v94;
  *((unsigned char *)v93 + 16) = v45 & 1;
  uint64_t v95 = v134;
  v93[3] = v47;
  v93[4] = v95;
  uint64_t v97 = v139;
  uint64_t v96 = v140;
  v93[5] = v140;
  v93[6] = v97;
  v93[7] = v138;
  *((unsigned char *)v93 + 64) = v137;
  uint64_t v98 = v148;
  v93[9] = (uint64_t)KeyPath;
  v93[10] = v98;
  *((_DWORD *)v93 + 22) = v136;
  uint64_t v99 = sub_100010218(&qword_100813B10);
  sub_10001B220(v92, (uint64_t)v93 + *(int *)(v99 + 64), &qword_100813B08);
  LOBYTE(v93) = v142;
  sub_1000C04A4(v42, v94, v142);
  swift_bridgeObjectRetain();
  sub_1000C2148(v95, v96, v97);
  swift_retain();
  swift_retain();
  sub_10001457C(v150, &qword_100813B08);
  sub_10001457C(v92, &qword_100813B08);
  sub_1000C2204(v95, v96, v97);
  swift_release();
  swift_release();
  sub_10002B8D0(v145, v149, (char)v93);
  return swift_bridgeObjectRelease();
}

double sub_10060A530@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for InsightsCurrentStreakView();
  sub_100010218(&qword_100813948);
  AppStorage.wrappedValue.getter();
  LocalizedStringKey.init(stringLiteral:)();
  Text.init(_:tableName:bundle:comment:)();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10060A694(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InsightsSetScheduleAction();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for InsightsCurrentStreakView() + 20);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_100612CA4(v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for InsightsSetScheduleAction);
  type metadata accessor for MainActor();
  uint64_t v11 = static MainActor.shared.getter();
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  sub_1006126EC((uint64_t)v5, v13 + v12, (uint64_t (*)(void))type metadata accessor for InsightsSetScheduleAction);
  sub_100328A60((uint64_t)v8, (uint64_t)&unk_100813B30, v13);
  return swift_release();
}

uint64_t sub_10060A878()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10060A8CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10060A8F8(a1);
}

uint64_t sub_10060A8F8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10060A968@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10060A9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  uint64_t v119 = a4;
  int v6 = a3 & 1;
  uint64_t v118 = sub_100010218(&qword_100813B68);
  __chkstk_darwin(v118);
  uint64_t v116 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = _s19DurationFormatStyleV10AttributedVMa(0);
  __chkstk_darwin(v111);
  uint64_t v115 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = _s19DurationFormatStyleVMa(0);
  __chkstk_darwin(v109);
  uint64_t v110 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v10 - 8);
  uint64_t v113 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for ContentTransition();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100010218(&qword_100813B70);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100010218(&qword_100813B78);
  __chkstk_darwin(v95);
  uint64_t v98 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100010218(&qword_100813B80);
  __chkstk_darwin(v96);
  uint64_t v103 = (uint64_t)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100010218(&qword_100813B88);
  __chkstk_darwin(v104);
  uint64_t v102 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100010218(&qword_100813B90);
  uint64_t v121 = *(void *)(v20 - 8);
  uint64_t v122 = v20;
  __chkstk_darwin(v20);
  uint64_t v117 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v94 - v23;
  __chkstk_darwin(v24);
  uint64_t v120 = (char *)&v94 - v25;
  uint64_t v112 = a2;
  int v114 = v6;
  sub_10060B640(a2, v6, &v123);
  uint64_t v26 = *((void *)&v123 + 1);
  uint64_t v94 = v123;
  uint64_t v28 = v124;
  uint64_t v27 = v125;
  char v29 = v126;
  uint64_t v30 = a1 + *(int *)(type metadata accessor for InsightsCurrentStreakView() + 32);
  uint64_t v31 = *(void *)v30;
  uint64_t v105 = v30;
  char v32 = *(unsigned char *)(v30 + 8);
  sub_100026CCC(v31, v32);
  LOBYTE(v6) = sub_100666714(v31, v32);
  sub_100026DF8(v31, v32);
  if ((v6 & 1) == 0)
  {
    sub_100010218(&qword_1007FD6E0);
    ScaledMetric.wrappedValue.getter();
  }
  static Font.Weight.semibold.getter();
  uint64_t v33 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v15, 1, 1, v33);
  uint64_t v34 = static Font.system(size:weight:design:)();
  sub_10001457C((uint64_t)v15, &qword_100800590);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v94;
  *(void *)&long long v123 = v94;
  *((void *)&v123 + 1) = v26;
  uint64_t v124 = v28;
  uint64_t v125 = v27;
  char v126 = v29;
  uint64_t v127 = KeyPath;
  uint64_t v128 = v34;
  sub_100010218(&qword_100813B98);
  sub_1006129D4();
  char v37 = v99;
  View.tracking(_:)();
  sub_1000C2204(v36, v26, v28);
  swift_release();
  swift_release();
  static Color.black.getter();
  uint64_t v38 = Color.opacity(_:)();
  swift_release();
  uint64_t v39 = v100;
  uint64_t v40 = (uint64_t)v98;
  uint64_t v41 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v98, v37, v101);
  uint64_t v42 = v40 + *(int *)(v95 + 36);
  *(void *)uint64_t v42 = v38;
  *(_OWORD *)(v42 + 8) = xmmword_1006ECC70;
  *(void *)(v42 + 24) = 0x4000000000000000;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v41);
  LODWORD(v41) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v43 = v103;
  sub_10001B220(v40, v103, &qword_100813B78);
  *(_DWORD *)(v43 + *(int *)(v96 + 36)) = v41;
  sub_10001457C(v40, &qword_100813B78);
  char v44 = v106;
  static ContentTransition.numericText(countsDown:)();
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = (uint64_t)v102;
  uint64_t v47 = (uint64_t *)&v102[*(int *)(v104 + 36)];
  uint64_t v48 = sub_100010218(&qword_100800618);
  uint64_t v49 = v107;
  uint64_t v50 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))((char *)v47 + *(int *)(v48 + 28), v44, v108);
  *uint64_t v47 = v45;
  sub_10001B220(v43, v46, &qword_100813B80);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v50);
  sub_10001457C(v43, &qword_100813B80);
  sub_100612AB4();
  uint64_t v51 = v97;
  View.unredacted()();
  sub_10001457C(v46, &qword_100813B88);
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v51, v122);
  sub_100612CA4(v112, v113, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v52 = v110;
  uint64_t v53 = &v110[*(int *)(v109 + 20)];
  static Locale.autoupdatingCurrent.getter();
  LOBYTE(v50) = v114;
  unsigned char *v52 = v114;
  uint64_t v54 = v115;
  uint64_t v55 = &v115[*(int *)(v111 + 20)];
  uint64_t v56 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v55, v53, v56);
  *uint64_t v54 = v50;
  sub_100612D0C((uint64_t)v52, _s19DurationFormatStyleVMa);
  uint64_t v57 = v116;
  sub_100612CA4((uint64_t)v54, v116, _s19DurationFormatStyleV10AttributedVMa);
  uint64_t v58 = v57 + *(int *)(v118 + 44);
  uint64_t v59 = enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:);
  uint64_t v60 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(v58, v59, v60);
  static Locale.autoupdatingCurrent.getter();
  sub_100612D0C((uint64_t)v54, _s19DurationFormatStyleV10AttributedVMa);
  sub_100014488(&qword_100813BD0, &qword_100813B68);
  sub_100613430(&qword_100813A60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
  uint64_t v61 = Text.init<A>(_:format:)();
  uint64_t v63 = v62;
  char v65 = v64;
  uint64_t v66 = *(void *)v105;
  char v67 = *(unsigned char *)(v105 + 8);
  sub_100026CCC(*(void *)v105, v67);
  LOBYTE(v43) = sub_100666714(v66, v67);
  sub_100026DF8(v66, v67);
  if (v43) {
    static Font.title.getter();
  }
  else {
    static Font.title2.getter();
  }
  uint64_t v68 = Text.font(_:)();
  uint64_t v70 = v69;
  char v72 = v71;
  swift_release();
  char v73 = v72 & 1;
  sub_10002B8D0(v61, v63, v65 & 1);
  swift_bridgeObjectRelease();
  uint64_t v74 = Text.bold()();
  uint64_t v76 = v75;
  char v78 = v77 & 1;
  sub_10002B8D0(v68, v70, v73);
  swift_bridgeObjectRelease();
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  uint64_t v116 = Text.shadow(color:radius:x:y:)();
  uint64_t v80 = v79;
  LOBYTE(v68) = v81;
  uint64_t v118 = v82;
  swift_release();
  sub_10002B8D0(v74, v76, v78);
  swift_bridgeObjectRelease();
  uint64_t v83 = swift_getKeyPath();
  uint64_t v84 = v120;
  uint64_t v85 = v121;
  uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
  uint64_t v87 = v117;
  uint64_t v88 = v122;
  v86(v117, v120, v122);
  uint64_t v89 = v119;
  v86(v119, v87, v88);
  uint64_t v90 = &v89[*(int *)(sub_100010218(&qword_100813BD8) + 48)];
  uint64_t v91 = v116;
  *(void *)uint64_t v90 = v116;
  *((void *)v90 + 1) = v80;
  v90[16] = v68 & 1;
  *((void *)v90 + 3) = v118;
  *((void *)v90 + 4) = v83;
  *((void *)v90 + 5) = 0x3FE3333333333333;
  sub_1000C04A4(v91, v80, v68 & 1);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v85 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v92(v84, v88);
  sub_10002B8D0(v91, v80, v68 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v92)(v87, v88);
}

double sub_10060B640@<D0>(uint64_t a1@<X1>, int a2@<W2>, _OWORD *a3@<X8>)
{
  int v40 = a2;
  uint64_t v41 = a1;
  char v44 = a3;
  uint64_t v43 = sub_100010218(&qword_100813B68);
  __chkstk_darwin(v43);
  char v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = _s19DurationFormatStyleV10AttributedVMa(0);
  __chkstk_darwin(v39);
  int v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s19DurationFormatStyleVMa(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v10 - 8);
  uint64_t v42 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RedactionReasons();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  type metadata accessor for InsightsCurrentStreakView();
  sub_1006677D4((uint64_t)v18);
  sub_100613430(&qword_100813260, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  dispatch thunk of SetAlgebra.init()();
  sub_100613430(&qword_1008139A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v20(v18, v12);
  if (v19)
  {
    char v21 = v40 & 1;
    sub_100612CA4(v41, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v22 = &v9[*(int *)(v7 + 20)];
    static Locale.autoupdatingCurrent.getter();
    *uint64_t v9 = v21;
    uint64_t v23 = &v6[*(int *)(v39 + 20)];
    uint64_t v24 = type metadata accessor for Locale();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v23, v22, v24);
    *int v6 = v21;
    sub_100612D0C((uint64_t)v9, _s19DurationFormatStyleVMa);
    sub_100612CA4((uint64_t)v6, (uint64_t)v4, _s19DurationFormatStyleV10AttributedVMa);
    uint64_t v25 = &v4[*(int *)(v43 + 44)];
    uint64_t v26 = enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.value(_:);
    uint64_t v27 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
    static Locale.autoupdatingCurrent.getter();
    sub_100612D0C((uint64_t)v6, _s19DurationFormatStyleV10AttributedVMa);
    sub_100014488(&qword_100813BD0, &qword_100813B68);
    sub_100613430(&qword_100813A60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
    uint64_t v45 = Text.init<A>(_:format:)();
    uint64_t v46 = v28;
    uint64_t v47 = v29 & 1;
    uint64_t v48 = v30;
    char v49 = 0;
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v45 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v46 = v32;
    uint64_t v47 = v31 & 1;
    uint64_t v48 = v33;
    char v49 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v50;
  long long v35 = v51;
  char v36 = v52;
  char v37 = v44;
  *char v44 = v50;
  v37[1] = v35;
  *((unsigned char *)v37 + 32) = v36;
  return result;
}

uint64_t sub_10060BB84(uint64_t a1, int a2)
{
  int v126 = a2;
  uint64_t v142 = sub_100010218(&qword_1008006B8);
  uint64_t v140 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v138 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = type metadata accessor for AttributeContainer();
  uint64_t v141 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v139 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v110 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v130);
  uint64_t v132 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v133 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v131 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AttributedString();
  uint64_t v136 = *(void *)(v12 - 8);
  uint64_t v137 = v12;
  __chkstk_darwin(v12);
  uint64_t v134 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v135 = (char *)&v96 - v15;
  uint64_t v109 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v107 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = (void (*)(char *, uint64_t))type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v124 = *((void *)v125 - 1);
  __chkstk_darwin(v125);
  long long v123 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v119 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v19 - 8);
  uint64_t v118 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TimeZone();
  __chkstk_darwin(v21 - 8);
  uint64_t v117 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for Locale();
  uint64_t v128 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v115 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100010218(&qword_1007F9538);
  __chkstk_darwin(v24 - 8);
  int v114 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100010218(&qword_1007F9540);
  __chkstk_darwin(v26 - 8);
  uint64_t v112 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Calendar.Component();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for Calendar();
  uint64_t v147 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v33 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for Date.FormatStyle();
  uint64_t v111 = *(void (***)(char *, uint64_t))(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v106 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v113 = (char *)&v96 - v36;
  __chkstk_darwin(v37);
  uint64_t v116 = (char *)&v96 - v38;
  __chkstk_darwin(v39);
  uint64_t v144 = (char *)&v96 - v40;
  uint64_t v41 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v41 - 8);
  uint64_t v43 = (char *)&v96 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Date();
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v96 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  char v49 = (char *)&v96 - v48;
  uint64_t v105 = a1;
  uint64_t v51 = v50;
  sub_10001B220(a1, (uint64_t)v43, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v43, 1, v44) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v49, v43, v44);
    uint64_t v99 = v122 + *(int *)(type metadata accessor for InsightsCurrentStreakView() + 40);
    sub_100666410((uint64_t)v33);
    static Date.now.getter();
    uint64_t v98 = *(void (**)(char *, void, uint64_t))(v29 + 104);
    v98(v31, enum case for Calendar.Component.year(_:), v28);
    uint64_t v129 = v49;
    uint64_t v53 = Calendar.compare(_:to:toGranularity:)();
    uint64_t v54 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v100 = v31;
    uint64_t v102 = v28;
    uint64_t v101 = v29 + 8;
    uint64_t v97 = v54;
    v54(v31, v28);
    uint64_t v55 = *(void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v122 = v44;
    uint64_t v104 = v51 + 8;
    uint64_t v103 = v55;
    v55(v46, v44);
    uint64_t v56 = v147 + 8;
    uint64_t v96 = *(void (**)(char *, uint64_t))(v147 + 8);
    v96(v33, v145);
    uint64_t v57 = type metadata accessor for Date.FormatStyle.DateStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v112, 1, 1, v57);
    uint64_t v58 = type metadata accessor for Date.FormatStyle.TimeStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v114, 1, 1, v58);
    static Locale.autoupdatingCurrent.getter();
    static Calendar.autoupdatingCurrent.getter();
    static TimeZone.autoupdatingCurrent.getter();
    static FormatStyleCapitalizationContext.unknown.getter();
    uint64_t v59 = v111 + 1;
    uint64_t v147 = v56;
    if (v53)
    {
      uint64_t v60 = v106;
      Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
      uint64_t v61 = v107;
      static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
      uint64_t v62 = v113;
      Date.FormatStyle.year(_:)();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v61, v109);
      uint64_t v63 = *v59;
      uint64_t v64 = v146;
      (*v59)(v60, v146);
      char v65 = v119;
      static Date.FormatStyle.Symbol.Month.abbreviated.getter();
      uint64_t v66 = v116;
      Date.FormatStyle.month(_:)();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v65, v121);
      v63(v62, v64);
      char v67 = v123;
      static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
      uint64_t v68 = v144;
      Date.FormatStyle.day(_:)();
      (*(void (**)(char *, void *))(v124 + 8))(v67, v125);
      uint64_t v125 = v63;
      v63(v66, v64);
    }
    else
    {
      uint64_t v69 = v113;
      Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
      uint64_t v70 = v119;
      static Date.FormatStyle.Symbol.Month.abbreviated.getter();
      char v71 = v116;
      Date.FormatStyle.month(_:)();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v70, v121);
      char v72 = *v59;
      uint64_t v73 = v146;
      (*v59)(v69, v146);
      uint64_t v74 = v123;
      static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
      uint64_t v68 = v144;
      Date.FormatStyle.day(_:)();
      (*(void (**)(char *, void *))(v124 + 8))(v74, v125);
      uint64_t v125 = v72;
      v72(v71, v73);
    }
    sub_100666410((uint64_t)v33);
    uint64_t v75 = v100;
    uint64_t v76 = v102;
    v98(v100, enum case for Calendar.Component.weekday(_:), v102);
    uint64_t v77 = Calendar.component(_:from:)();
    v97(v75, v76);
    v96(v33, v145);
    uint64_t v78 = type metadata accessor for StreakSummary();
    uint64_t v111 = v59;
    if (v126)
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v82._uint64_t countAndFlagsBits = 0x1000000000000030;
      v82._object = (void *)0x80000001006A8450;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v82);
      sub_100613430((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
      sub_100014344();
      uint64_t v83 = v122;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
      v84._uint64_t countAndFlagsBits = 3025450;
      v84._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v84);
      String.LocalizationValue.init(stringInterpolation:)();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v133, 1, 1, v127);
      uint64_t v148 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100613430(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      uint64_t v80 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      char v81 = v134;
    }
    else
    {
      uint64_t v79 = *(void *)(v105 + *(int *)(v78 + 28));
      if (v79 == 2)
      {
        String.LocalizationValue.init(stringLiteral:)();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v133, 1, 1, v127);
        uint64_t v148 = (uint64_t)_swiftEmptyArrayStorage;
        sub_100613430(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
        sub_100010218(&qword_1007FEB18);
        sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
        uint64_t v80 = v68;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        char v81 = v134;
        AttributedString.init(localized:options:table:bundle:locale:comment:)();
LABEL_15:
        uint64_t v83 = v122;
        goto LABEL_16;
      }
      uint64_t v83 = v122;
      if ((unint64_t)(v79 - 6) >= 0xFFFFFFFFFFFFFFFDLL)
      {
        switch(v77)
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
            String.LocalizationValue.init(stringLiteral:)();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v133, 1, 1, v127);
            uint64_t v148 = (uint64_t)_swiftEmptyArrayStorage;
            sub_100613430(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
            sub_100010218(&qword_1007FEB18);
            sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
            dispatch thunk of SetAlgebra.init<A>(_:)();
            char v81 = v134;
            AttributedString.init(localized:options:table:bundle:locale:comment:)();
            uint64_t v80 = v144;
            goto LABEL_15;
          default:
            break;
        }
      }
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v85._object = (void *)0x80000001006A8500;
      v85._uint64_t countAndFlagsBits = 0x1000000000000025;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v85);
      sub_100613430((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
      sub_100014344();
      String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
      v86._uint64_t countAndFlagsBits = 3025450;
      v86._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v86);
      String.LocalizationValue.init(stringInterpolation:)();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v133, 1, 1, v127);
      uint64_t v148 = (uint64_t)_swiftEmptyArrayStorage;
      sub_100613430(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      uint64_t v80 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      char v81 = v134;
    }
    AttributedString.init(localized:options:table:bundle:locale:comment:)();
LABEL_16:
    uint64_t v88 = v135;
    uint64_t v87 = v136;
    uint64_t v89 = v137;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v135, v81, v137);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    sub_10017AB0C();
    uint64_t v91 = v138;
    static AttributeContainer.subscript.getter();
    swift_release();
    uint64_t v148 = 2;
    uint64_t v92 = (uint64_t)v139;
    uint64_t v93 = v142;
    AttributeContainer.Builder.callAsFunction(_:)();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v91, v93);
    int v94 = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v52 = sub_100601D9C(v92, v94);
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v92, v143);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v89);
    v125(v80, v146);
    v103(v129, v83);
    return v52;
  }
  sub_10001457C((uint64_t)v43, (uint64_t *)&unk_1007FC470);
  return 0;
}

uint64_t sub_10060D2B4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v143 = a2;
  uint64_t v144 = a3;
  LODWORD(v130) = a1;
  uint64_t v117 = a4;
  uint64_t v142 = type metadata accessor for ScaleTransition();
  uint64_t v138 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v137 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for OpacityTransition();
  uint64_t v136 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v133 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1008139B0);
  uint64_t v140 = *(void *)(v6 - 8);
  uint64_t v141 = v6;
  __chkstk_darwin(v6);
  uint64_t v134 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v135 = (char *)&v117 - v9;
  uint64_t v10 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v10 - 8);
  uint64_t v131 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v132 = (uint64_t)&v117 - v13;
  __chkstk_darwin(v14);
  uint64_t v129 = (char *)&v117 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v117 - v17;
  uint64_t v19 = type metadata accessor for Image.ResizingMode();
  uint64_t v123 = *(void *)(v19 - 8);
  uint64_t v124 = v19;
  __chkstk_darwin(v19);
  uint64_t v122 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for RedactionReasons();
  uint64_t v120 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v119 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v118 = (uint64_t)&v117 - v24;
  uint64_t v25 = type metadata accessor for ImageResource();
  __chkstk_darwin(v25 - 8);
  uint64_t v121 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ColorResource();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100010218(&qword_100800168);
  uint64_t v31 = swift_allocObject();
  long long v127 = xmmword_1006D6270;
  *(_OWORD *)(v31 + 16) = xmmword_1006D6270;
  if (qword_1007F7FE8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100026A54(v27, (uint64_t)qword_10083F0D8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v33(v30, v32, v27);
  *(void *)(v31 + 32) = Color.init(_:)();
  if (qword_1007F7FD8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_100026A54(v27, (uint64_t)qword_10083F0A8);
  v33(v30, v34, v27);
  *(void *)(v31 + 40) = Color.init(_:)();
  *(void *)&long long v169 = v31;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  if (v130)
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = type metadata accessor for StreakSummary();
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  if (*(uint64_t *)(v143 + *(int *)(v36 + 28)) >= 2)
  {
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v127;
    v33(v30, v32, v27);
    *(void *)(v42 + 32) = Color.init(_:)();
    if (qword_1007F7FE0 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_100026A54(v27, (uint64_t)qword_10083F0C0);
    v33(v30, v43, v27);
    *(void *)(v42 + 40) = Color.init(_:)();
    *(void *)&long long v169 = v42;
    specialized Array._endMutation()();
    static UnitPoint.top.getter();
    static UnitPoint.bottom.getter();
    Gradient.init(colors:)();
    LinearGradient.init(gradient:startPoint:endPoint:)();
    uint64_t v37 = v199;
    uint64_t v38 = v200;
    uint64_t v39 = v201;
    uint64_t v40 = v202;
    uint64_t v41 = v203;
  }
LABEL_13:
  uint64_t v125 = v41;
  uint64_t v126 = v40;
  *(void *)&long long v127 = v39;
  uint64_t v128 = v38;
  uint64_t v130 = v37;
  type metadata accessor for InsightsCurrentStreakView();
  uint64_t v44 = v118;
  sub_1006677D4(v118);
  sub_100613430(&qword_100813260, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v45 = v119;
  dispatch thunk of SetAlgebra.init()();
  sub_100613430(&qword_1008139A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v120 + 8);
  v47(v45, v21);
  v47((char *)v44, v21);
  if (v46) {
    type metadata accessor for StreakSummary();
  }
  static ImageResource.wingsBackground(value:)();
  Image.init(_:)();
  char v49 = v122;
  uint64_t v48 = v123;
  uint64_t v50 = v124;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v122, enum case for Image.ResizingMode.stretch(_:), v124);
  uint64_t v143 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  sub_10066780C((uint64_t)v18);
  uint64_t v51 = type metadata accessor for WidgetFamily();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
  uint64_t v54 = (uint64_t)v129;
  v53(v129, 3, 3, v51);
  LODWORD(v124) = sub_1006167C4((uint64_t)v18, v54);
  sub_100612D0C(v54, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_10066780C((uint64_t)v18);
  v53((char *)v54, 2, 3, v51);
  BOOL v55 = sub_1006167C4((uint64_t)v18, v54);
  sub_100612D0C(v54, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  static UnitPoint.center.getter();
  uint64_t v57 = v56;
  unint64_t v59 = v58;
  uint64_t v60 = v132;
  sub_10066780C(v132);
  uint64_t v61 = v131;
  sub_100612CA4(v60, v131, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  int v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v61, 3, v51);
  double v63 = 20.0;
  if ((v62 - 2) >= 2)
  {
    if (!v62) {
      sub_100612D0C(v61, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
    }
    double v63 = 6.0;
  }
  if (v55) {
    double v64 = 1.0;
  }
  else {
    double v64 = 1.12;
  }
  sub_100612D0C(v60, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  char v65 = v133;
  OpacityTransition.init()();
  static UnitPoint.center.getter();
  uint64_t v66 = v137;
  ScaleTransition.init(_:anchor:)();
  uint64_t v67 = sub_100613430(&qword_1008139B8, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v68 = sub_100613430(&qword_1008139C0, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
  uint64_t v69 = v135;
  uint64_t v70 = v139;
  uint64_t v71 = v142;
  Transition.combined<A>(with:)();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v66, v71);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v65, v70);
  uint64_t v73 = v140;
  uint64_t v72 = v141;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v134, v69, v141);
  *(void *)&long long v169 = v70;
  *((void *)&v169 + 1) = v71;
  *(void *)&long long v170 = v67;
  *((void *)&v170 + 1) = v68;
  swift_getOpaqueTypeConformance2();
  uint64_t v142 = AnyTransition.init<A>(_:)();
  LODWORD(v139) = (v124 & 1) == 0;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v72);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v74 = v204;
  uint64_t v75 = v206;
  uint64_t v76 = v208;
  uint64_t v77 = v210;
  uint64_t v78 = v212;
  uint64_t v79 = v214;
  uint64_t v140 = v217;
  uint64_t v141 = v216;
  char v151 = 1;
  char v150 = v205;
  char v149 = v207;
  char v148 = v209;
  char v147 = v211;
  char v146 = v213;
  char v145 = v215;
  uint64_t v80 = static Alignment.center.getter();
  uint64_t v82 = v81;
  sub_10060E1C4(&v169);
  long long v83 = v169;
  long long v84 = v170;
  double v85 = v171;
  char v86 = v151;
  char v87 = v150;
  char v88 = v149;
  char v89 = v148;
  char v90 = v147;
  char v91 = v146;
  char v92 = v145;
  uint64_t v93 = v196;
  uint64_t v94 = v142;
  uint64_t v95 = v143;
  v152[0] = v143;
  v152[1] = 0;
  LOBYTE(v153) = v151;
  char v96 = v139;
  BYTE1(v153) = v139;
  *((double *)&v153 + 1) = v64;
  *(double *)&long long v154 = v64;
  *((void *)&v154 + 1) = v57;
  unint64_t v155 = v59;
  uint64_t v156 = 0;
  *(double *)&long long v157 = v63;
  *((void *)&v157 + 1) = v142;
  *(void *)&long long v158 = v74;
  BYTE8(v158) = v150;
  uint64_t v97 = v75;
  *(void *)&long long v159 = v75;
  BYTE8(v159) = v149;
  uint64_t v98 = v76;
  *(void *)&long long v160 = v76;
  BYTE8(v160) = v148;
  *(void *)&long long v161 = v77;
  BYTE8(v161) = v147;
  *(void *)&long long v162 = v78;
  BYTE8(v162) = v146;
  uint64_t v99 = v79;
  *(void *)&long long v163 = v79;
  BYTE8(v163) = v145;
  uint64_t v101 = v140;
  uint64_t v100 = v141;
  *(void *)&long long v164 = v141;
  *((void *)&v164 + 1) = v140;
  uint64_t v102 = v80;
  *(void *)&long long v165 = v80;
  *((void *)&v165 + 1) = v82;
  long long v166 = v169;
  long long v167 = v170;
  double v168 = v171;
  long long v103 = (unint64_t)v143;
  long long v104 = v153;
  uint64_t v105 = v117;
  *(_OWORD *)(v117 + 112) = v154;
  *(_OWORD *)(v105 + 128) = v59;
  *(_OWORD *)(v105 + 80) = v103;
  *(_OWORD *)(v105 + 96) = v104;
  long long v106 = v157;
  long long v107 = v158;
  long long v108 = v160;
  long long v109 = v161;
  *(_OWORD *)(v105 + 176) = v159;
  *(_OWORD *)(v105 + 192) = v108;
  *(_OWORD *)(v105 + 144) = v106;
  *(_OWORD *)(v105 + 160) = v107;
  long long v110 = v162;
  long long v111 = v164;
  long long v112 = v165;
  *(_OWORD *)(v105 + 240) = v163;
  *(_OWORD *)(v105 + 256) = v111;
  *(_OWORD *)(v105 + 208) = v109;
  *(_OWORD *)(v105 + 224) = v110;
  long long v113 = v166;
  long long v114 = v167;
  *(double *)(v105 + 320) = v168;
  *(_OWORD *)(v105 + 288) = v113;
  *(_OWORD *)(v105 + 304) = v114;
  *(_OWORD *)(v105 + 272) = v112;
  *(void *)uint64_t v105 = v93;
  *(_OWORD *)(v105 + 8) = v197;
  *(_OWORD *)(v105 + 24) = v198;
  uint64_t v115 = v128;
  *(void *)(v105 + 40) = v130;
  *(void *)(v105 + 48) = v115;
  *(void *)(v105 + 56) = v127;
  *(void *)(v105 + 64) = v126;
  *(void *)(v105 + 72) = v125;
  long long v169 = (unint64_t)v95;
  LOBYTE(v170) = v86;
  BYTE1(v170) = v96;
  *((double *)&v170 + 1) = v64;
  double v171 = v64;
  uint64_t v172 = v57;
  unint64_t v173 = v59;
  uint64_t v174 = 0;
  double v175 = v63;
  uint64_t v176 = v94;
  uint64_t v177 = v74;
  char v178 = v87;
  uint64_t v179 = v97;
  char v180 = v88;
  uint64_t v181 = v98;
  char v182 = v89;
  uint64_t v183 = v77;
  char v184 = v90;
  uint64_t v185 = v78;
  char v186 = v91;
  uint64_t v187 = v99;
  char v188 = v92;
  uint64_t v189 = v100;
  uint64_t v190 = v101;
  uint64_t v191 = v102;
  uint64_t v192 = v82;
  long long v193 = v83;
  long long v194 = v84;
  double v195 = v85;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1006121E8((uint64_t)v152);
  sub_100612234((uint64_t)&v169);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_10060E1C4@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v1 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - v5;
  sub_100010218(&qword_1008139C8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D70D0;
  static Color.clear.getter();
  *(void *)(v7 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v7 + 40) = v8;
  static Color.black.getter();
  *(void *)(v7 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v7 + 56) = v9;
  static Color.black.getter();
  type metadata accessor for InsightsCurrentStreakView();
  sub_10066780C((uint64_t)v6);
  uint64_t v10 = type metadata accessor for WidgetFamily();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v3, 2, 3, v10);
  sub_1006167C4((uint64_t)v6, (uint64_t)v3);
  sub_100612D0C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  *(void *)(v7 + 64) = Gradient.Stop.init(color:location:)();
  *(void *)(v7 + 72) = v12;
  static Color.clear.getter();
  sub_10066780C((uint64_t)v6);
  v11(v3, 2, 3, v10);
  sub_1006167C4((uint64_t)v6, (uint64_t)v3);
  sub_100612D0C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_100612D0C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  *(void *)(v7 + 80) = Gradient.Stop.init(color:location:)();
  *(void *)(v7 + 88) = v13;
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  Gradient.init(stops:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v18;
  long long v15 = v19;
  uint64_t v16 = v17;
  *uint64_t v17 = v18;
  v16[1] = v15;
  *((void *)v16 + 4) = v20;
  return result;
}

unint64_t sub_10060E484()
{
  unint64_t result = qword_100813820;
  if (!qword_100813820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813820);
  }
  return result;
}

uint64_t *sub_10060E4D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for StreakSummary();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100010218(&qword_100813828);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v66 = v12;
      if (v13(a2, 1, v11))
      {
        uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      uint64_t v15 = v7[5];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      if (v13((uint64_t *)((char *)a2 + v15), 1, v11))
      {
        uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v16, v17, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v16, 0, 1, v11);
      }
      uint64_t v19 = v7[6];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v13((uint64_t *)((char *)a2 + v19), 1, v11))
      {
        uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v20, v21, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v20, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v23 = a3[5];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[6];
    uint64_t v28 = a3[7];
    uint64_t v29 = (uint64_t *)((char *)a1 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (uint64_t *)((char *)a1 + v28);
    uint64_t v33 = (uint64_t *)((char *)a2 + v28);
    swift_retain();
    sub_100010218(&qword_100813370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = type metadata accessor for WidgetFamily();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v33, 3, v34))
      {
        uint64_t v36 = type metadata accessor for InsightsFamily();
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 3, v34);
      }
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[8];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = *(void *)v39;
    char v41 = v39[8];
    sub_100026CCC(*(void *)v39, v41);
    *(void *)uint64_t v38 = v40;
    v38[8] = v41;
    uint64_t v42 = a3[9];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = *(void *)v44;
    char v46 = v44[8];
    sub_100026CCC(*(void *)v44, v46);
    *(void *)uint64_t v43 = v45;
    v43[8] = v46;
    uint64_t v47 = a3[10];
    uint64_t v48 = (uint64_t *)((char *)a1 + v47);
    char v49 = (uint64_t *)((char *)a2 + v47);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v50 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    }
    else
    {
      *uint64_t v48 = *v49;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = a3[11];
    uint64_t v52 = (uint64_t *)((char *)a1 + v51);
    uint64_t v53 = (uint64_t *)((char *)a2 + v51);
    sub_100010218(&qword_1008156E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v54 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    }
    else
    {
      void *v52 = *v53;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = a3[12];
    uint64_t v56 = a3[13];
    uint64_t v57 = (char *)a1 + v55;
    unint64_t v58 = (char *)a2 + v55;
    uint64_t v59 = *(void *)v58;
    LOBYTE(v58) = v58[8];
    *(void *)uint64_t v57 = v59;
    uint64_t v60 = *(uint64_t *)((char *)a2 + v56);
    v57[8] = (char)v58;
    *(uint64_t *)((char *)a1 + v56) = v60;
    uint64_t v61 = a3[14];
    int v62 = (char *)a1 + v61;
    double v63 = (char *)a2 + v61;
    swift_retain();
    swift_retain();
    uint64_t v64 = sub_100010218(&qword_1007FD6E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
    *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
  }
  return a1;
}

uint64_t sub_10060EC58(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    }
    uint64_t v8 = a1 + *(int *)(v4 + 20);
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = a1 + *(int *)(v4 + 24);
    if (!v7(v9, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  uint64_t v10 = a1 + a2[5];
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v12 = a1 + a2[7];
  sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for WidgetFamily();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_100026DF8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v15 = a1 + a2[10];
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v17 = a1 + a2[11];
  sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v19 = a1 + a2[14];
  uint64_t v20 = sub_100010218(&qword_1007FD6E0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

char *sub_10060F080(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreakSummary();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218(&qword_100813828);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v64 = v10;
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v14, v15, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v14, 0, 1, v9);
    }
    uint64_t v17 = v6[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v18, v19, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v18, 0, 1, v9);
    }
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v21 = a3[5];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  uint64_t v30 = &a1[v26];
  uint64_t v31 = &a2[v26];
  swift_retain();
  sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = type metadata accessor for WidgetFamily();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 3, v32))
    {
      uint64_t v34 = type metadata accessor for InsightsFamily();
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 3, v32);
    }
  }
  else
  {
    *(void *)uint64_t v30 = *(void *)v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[8];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)v37;
  char v39 = v37[8];
  sub_100026CCC(*(void *)v37, v39);
  *(void *)uint64_t v36 = v38;
  v36[8] = v39;
  uint64_t v40 = a3[9];
  char v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = *(void *)v42;
  char v44 = v42[8];
  sub_100026CCC(*(void *)v42, v44);
  *(void *)char v41 = v43;
  v41[8] = v44;
  uint64_t v45 = a3[10];
  char v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  else
  {
    *(void *)char v46 = *(void *)v47;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = a3[11];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = type metadata accessor for RedactionReasons();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  }
  else
  {
    *(void *)uint64_t v50 = *(void *)v51;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = a3[12];
  uint64_t v54 = a3[13];
  uint64_t v55 = &a1[v53];
  uint64_t v56 = &a2[v53];
  uint64_t v57 = *(void *)v56;
  LOBYTE(v56) = v56[8];
  *(void *)uint64_t v55 = v57;
  uint64_t v58 = *(void *)&a2[v54];
  v55[8] = (char)v56;
  *(void *)&a1[v54] = v58;
  uint64_t v59 = a3[14];
  uint64_t v60 = &a1[v59];
  uint64_t v61 = &a2[v59];
  swift_retain();
  swift_retain();
  uint64_t v62 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  return a1;
}

char *sub_10060F7B0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreakSummary();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100612D0C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StreakSummary);
LABEL_7:
      uint64_t v15 = sub_100010218(&qword_100813828);
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      if (a1 == a2) {
        goto LABEL_41;
      }
      goto LABEL_37;
    }
    uint64_t v16 = type metadata accessor for Date();
    uint64_t v86 = *(void *)(v16 - 8);
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
    int v18 = v17(a1, 1, v16);
    int v19 = v17(a2, 1, v16);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(a1, a2, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(a1, 0, 1, v16);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 24))(a1, a2, v16);
LABEL_24:
        uint64_t v29 = v6[5];
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        int v32 = v17(&a1[v29], 1, v16);
        int v33 = v17(v31, 1, v16);
        if (v32)
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v30, v31, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v30, 0, 1, v16);
            goto LABEL_30;
          }
        }
        else
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v86 + 24))(v30, v31, v16);
LABEL_30:
            uint64_t v35 = v6[6];
            uint64_t v36 = &a1[v35];
            uint64_t v37 = &a2[v35];
            int v38 = v17(&a1[v35], 1, v16);
            int v39 = v17(v37, 1, v16);
            if (v38)
            {
              if (!v39)
              {
                (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v36, v37, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v36, 0, 1, v16);
                goto LABEL_36;
              }
            }
            else
            {
              if (!v39)
              {
                (*(void (**)(char *, char *, uint64_t))(v86 + 24))(v36, v37, v16);
LABEL_36:
                *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
                if (a1 == a2) {
                  goto LABEL_41;
                }
                goto LABEL_37;
              }
              (*(void (**)(char *, uint64_t))(v86 + 8))(v36, v16);
            }
            uint64_t v40 = sub_100010218((uint64_t *)&unk_1007FC470);
            memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v86 + 8))(v30, v16);
        }
        uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(a1, v16);
    }
    uint64_t v28 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_24;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v85 = v12;
  if (v13(a2, 1, v11))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  uint64_t v20 = v6[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v13(&a2[v20], 1, v11))
  {
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v21, v22, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v21, 0, 1, v11);
  }
  uint64_t v24 = v6[6];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v25, 0, 1, v11);
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  if (a1 != a2)
  {
LABEL_37:
    uint64_t v41 = a3[5];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    sub_10001457C((uint64_t)&a1[v41], &qword_100807970);
    sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      *(void *)uint64_t v42 = *(void *)v43;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_41:
  uint64_t v45 = a3[6];
  char v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  *(void *)char v46 = *(void *)v47;
  *((void *)v46 + 1) = *((void *)v47 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v48 = a3[7];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = &a2[v48];
    sub_10001457C((uint64_t)&a1[v48], &qword_100813370);
    sub_100010218(&qword_100813370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for WidgetFamily();
      uint64_t v52 = *(void *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 3, v51))
      {
        uint64_t v53 = type metadata accessor for InsightsFamily();
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 3, v51);
      }
    }
    else
    {
      *(void *)uint64_t v49 = *(void *)v50;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v54 = a3[8];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = *(void *)v56;
  char v58 = v56[8];
  sub_100026CCC(*(void *)v56, v58);
  uint64_t v59 = *(void *)v55;
  char v60 = v55[8];
  *(void *)uint64_t v55 = v57;
  v55[8] = v58;
  sub_100026DF8(v59, v60);
  uint64_t v61 = a3[9];
  uint64_t v62 = &a1[v61];
  double v63 = &a2[v61];
  uint64_t v64 = *(void *)v63;
  char v65 = v63[8];
  sub_100026CCC(*(void *)v63, v65);
  uint64_t v66 = *(void *)v62;
  char v67 = v62[8];
  *(void *)uint64_t v62 = v64;
  v62[8] = v65;
  sub_100026DF8(v66, v67);
  if (a1 != a2)
  {
    uint64_t v68 = a3[10];
    uint64_t v69 = &a1[v68];
    uint64_t v70 = &a2[v68];
    sub_10001457C((uint64_t)&a1[v68], &qword_1007F9480);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v71 = type metadata accessor for Calendar();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    }
    else
    {
      *(void *)uint64_t v69 = *(void *)v70;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v72 = a3[11];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    sub_10001457C((uint64_t)&a1[v72], &qword_1008156E0);
    sub_100010218(&qword_1008156E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v75 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
    }
    else
    {
      *(void *)uint64_t v73 = *(void *)v74;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v76 = a3[12];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  uint64_t v79 = *(void *)v78;
  LOBYTE(v78) = v78[8];
  *(void *)uint64_t v77 = v79;
  v77[8] = (char)v78;
  swift_retain();
  swift_release();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_retain();
  swift_release();
  uint64_t v80 = a3[14];
  uint64_t v81 = &a1[v80];
  uint64_t v82 = &a2[v80];
  uint64_t v83 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 24))(v81, v82, v83);
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  return a1;
}

char *sub_100610328(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreakSummary();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218(&qword_100813828);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v59 = v10;
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v11(&a2[v13], 1, v9))
    {
      uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v14, v15, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v14, 0, 1, v9);
    }
    uint64_t v17 = v6[6];
    int v18 = &a1[v17];
    int v19 = &a2[v17];
    if (v11(&a2[v17], 1, v9))
    {
      uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v18, v19, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v18, 0, 1, v9);
    }
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v21 = a3[5];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v26 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WidgetFamily();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 3, v30))
    {
      uint64_t v32 = type metadata accessor for InsightsFamily();
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v27, v28, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 3, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v33 = a3[8];
  uint64_t v34 = a3[9];
  uint64_t v35 = &a1[v33];
  uint64_t v36 = &a2[v33];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  uint64_t v37 = &a1[v34];
  int v38 = &a2[v34];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = a3[10];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  uint64_t v44 = a3[11];
  uint64_t v45 = &a1[v44];
  char v46 = &a2[v44];
  uint64_t v47 = sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = type metadata accessor for RedactionReasons();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v45, v46, v48);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  uint64_t v49 = a3[12];
  uint64_t v50 = a3[13];
  uint64_t v51 = &a1[v49];
  uint64_t v52 = &a2[v49];
  *(void *)uint64_t v51 = *(void *)v52;
  uint64_t v53 = *(void *)&a2[v50];
  v51[8] = v52[8];
  *(void *)&a1[v50] = v53;
  uint64_t v54 = a3[14];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  return a1;
}

char *sub_100610A54(char *a1, char *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreakSummary();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100612D0C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StreakSummary);
LABEL_7:
      uint64_t v15 = sub_100010218(&qword_100813828);
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      if (a1 == a2) {
        goto LABEL_40;
      }
      goto LABEL_37;
    }
    uint64_t v16 = type metadata accessor for Date();
    uint64_t v90 = *(void *)(v16 - 8);
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
    int v18 = v17(a1, 1, v16);
    int v19 = v17(a2, 1, v16);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(a1, a2, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(a1, 0, 1, v16);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 40))(a1, a2, v16);
LABEL_24:
        uint64_t v29 = v6[5];
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        int v32 = v17(&a1[v29], 1, v16);
        int v33 = v17(v31, 1, v16);
        if (v32)
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v30, v31, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v30, 0, 1, v16);
            goto LABEL_30;
          }
        }
        else
        {
          if (!v33)
          {
            (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v30, v31, v16);
LABEL_30:
            uint64_t v35 = v6[6];
            uint64_t v36 = &a1[v35];
            uint64_t v37 = &a2[v35];
            int v38 = v17(&a1[v35], 1, v16);
            int v39 = v17(v37, 1, v16);
            if (v38)
            {
              if (!v39)
              {
                (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v36, v37, v16);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v36, 0, 1, v16);
                goto LABEL_36;
              }
            }
            else
            {
              if (!v39)
              {
                (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v36, v37, v16);
LABEL_36:
                *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
                if (a1 == a2) {
                  goto LABEL_40;
                }
                goto LABEL_37;
              }
              (*(void (**)(char *, uint64_t))(v90 + 8))(v36, v16);
            }
            uint64_t v40 = sub_100010218((uint64_t *)&unk_1007FC470);
            memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v90 + 8))(v30, v16);
        }
        uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(a1, v16);
    }
    uint64_t v28 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_24;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v89 = v12;
  if (v13(a2, 1, v11))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  uint64_t v20 = v6[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v13(&a2[v20], 1, v11))
  {
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v21, v22, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v21, 0, 1, v11);
  }
  uint64_t v24 = v6[6];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v25, 0, 1, v11);
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  if (a1 != a2)
  {
LABEL_37:
    uint64_t v41 = a3[5];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    sub_10001457C((uint64_t)&a1[v41], &qword_100807970);
    uint64_t v44 = sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v42, v43, v45);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
  }
LABEL_40:
  uint64_t v46 = a3[6];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  uint64_t v50 = *(void *)v48;
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)uint64_t v47 = v50;
  *((void *)v47 + 1) = v49;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v51 = a3[7];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    sub_10001457C((uint64_t)&a1[v51], &qword_100813370);
    uint64_t v54 = sub_100010218(&qword_100813370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = type metadata accessor for WidgetFamily();
      uint64_t v56 = *(void *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v53, 3, v55))
      {
        uint64_t v57 = type metadata accessor for InsightsFamily();
        memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v52, v53, v55);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v52, 0, 3, v55);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
  }
  uint64_t v58 = a3[8];
  uint64_t v59 = &a1[v58];
  char v60 = &a2[v58];
  uint64_t v61 = *(void *)v60;
  LOBYTE(v60) = v60[8];
  uint64_t v62 = *(void *)v59;
  char v63 = v59[8];
  *(void *)uint64_t v59 = v61;
  v59[8] = (char)v60;
  sub_100026DF8(v62, v63);
  uint64_t v64 = a3[9];
  char v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  uint64_t v67 = *(void *)v66;
  LOBYTE(v66) = v66[8];
  uint64_t v68 = *(void *)v65;
  char v69 = v65[8];
  *(void *)char v65 = v67;
  v65[8] = (char)v66;
  sub_100026DF8(v68, v69);
  if (a1 != a2)
  {
    uint64_t v70 = a3[10];
    uint64_t v71 = &a1[v70];
    uint64_t v72 = &a2[v70];
    sub_10001457C((uint64_t)&a1[v70], &qword_1007F9480);
    uint64_t v73 = sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v74 = type metadata accessor for Calendar();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v71, v72, v74);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    uint64_t v75 = a3[11];
    uint64_t v76 = &a1[v75];
    uint64_t v77 = &a2[v75];
    sub_10001457C((uint64_t)&a1[v75], &qword_1008156E0);
    uint64_t v78 = sub_100010218(&qword_1008156E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v79 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v76, v77, v79);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
  }
  uint64_t v80 = a3[12];
  uint64_t v81 = &a1[v80];
  uint64_t v82 = &a2[v80];
  uint64_t v83 = *(void *)v82;
  LOBYTE(v82) = v82[8];
  *(void *)uint64_t v81 = v83;
  v81[8] = (char)v82;
  swift_release();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_release();
  uint64_t v84 = a3[14];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  uint64_t v87 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 40))(v85, v86, v87);
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  return a1;
}

uint64_t sub_1006115C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006115D8);
}

uint64_t sub_1006115D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218(&qword_100813828);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for InsightsSetScheduleAction();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_100010218(&qword_100813830);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v15 = sub_100010218(&qword_1008155B0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_11;
  }
  uint64_t v16 = sub_100010218(&qword_100813838);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_11;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(a1 + a3[13]);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v19 = sub_100010218(&qword_1007FD6E0);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
    uint64_t v21 = v19;
    uint64_t v22 = a1 + a3[14];
    return v20(v22, a2, v21);
  }
}

uint64_t sub_100611850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100611864);
}

uint64_t sub_100611864(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100010218(&qword_100813828);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for InsightsSetScheduleAction();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_100010218(&qword_100813830);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v17 = sub_100010218(&qword_1008155B0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_11;
  }
  uint64_t result = sub_100010218(&qword_100813838);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[11];
    goto LABEL_11;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[13]) = (a2 - 1);
  }
  else
  {
    uint64_t v19 = sub_100010218(&qword_1007FD6E0);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    uint64_t v21 = v19;
    uint64_t v22 = a1 + a4[14];
    return v20(v22, a2, a2, v21);
  }
  return result;
}

void sub_100611ADC()
{
  sub_100611DB4(319, &qword_1008138A8, (uint64_t (*)(uint64_t))type metadata accessor for StreakSummary, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100611DB4(319, (unint64_t *)&qword_100807A00, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_100611DB4(319, &qword_1008138B0, (uint64_t (*)(uint64_t))type metadata accessor for InsightsFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_100611DB4(319, (unint64_t *)&qword_1007F94F8, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F)
        {
          sub_100611DB4(319, (unint64_t *)&unk_1008138B8, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
          if (v4 <= 0x3F)
          {
            sub_1000DA7E0();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_100611DB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100611E18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100611E50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_10060201C(*a1, a1[1], a1[2], a1[3], a2, a3, a4, *a5);
  if (!v6)
  {
    *a6 = result;
    a6[1] = v9;
    a6[2] = v10;
    a6[3] = v11;
  }
  return result;
}

unint64_t sub_100611EA4()
{
  unint64_t result = qword_100813970;
  if (!qword_100813970)
  {
    sub_100014440(&qword_100813938);
    sub_100611F44();
    sub_100014488(&qword_1008139A0, &qword_100813968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813970);
  }
  return result;
}

unint64_t sub_100611F44()
{
  unint64_t result = qword_100813978;
  if (!qword_100813978)
  {
    sub_100014440(&qword_100813930);
    sub_100611FE4();
    sub_100014488(&qword_100800188, &qword_100800190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813978);
  }
  return result;
}

unint64_t sub_100611FE4()
{
  unint64_t result = qword_100813980;
  if (!qword_100813980)
  {
    sub_100014440(&qword_100813928);
    sub_100612084();
    sub_100014488(&qword_100800158, &qword_100800120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813980);
  }
  return result;
}

unint64_t sub_100612084()
{
  unint64_t result = qword_100813988;
  if (!qword_100813988)
  {
    sub_100014440(&qword_100813920);
    sub_100612124();
    sub_100014488(&qword_100806E60, &qword_100806E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813988);
  }
  return result;
}

unint64_t sub_100612124()
{
  unint64_t result = qword_100813990;
  if (!qword_100813990)
  {
    sub_100014440(&qword_100813918);
    sub_100014488(&qword_100813998, &qword_100813910);
    sub_100014488(&qword_100800148, &qword_100800150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813990);
  }
  return result;
}

uint64_t sub_1006121E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100612234(uint64_t a1)
{
  return a1;
}

unint64_t sub_100612290()
{
  unint64_t result = qword_100813A40;
  if (!qword_100813A40)
  {
    sub_100014440(&qword_1008139E8);
    sub_100612330();
    sub_100014488(&qword_100800688, &qword_100800690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813A40);
  }
  return result;
}

unint64_t sub_100612330()
{
  unint64_t result = qword_100813A48;
  if (!qword_100813A48)
  {
    sub_100014440(&qword_1008139E0);
    sub_100014488(&qword_100813A50, &qword_1008139D8);
    sub_100014488(&qword_100800678, &qword_100800680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813A48);
  }
  return result;
}

unint64_t sub_1006123F4()
{
  unint64_t result = qword_100813A70;
  if (!qword_100813A70)
  {
    sub_100014440(&qword_100813A68);
    sub_100613254(&qword_100813A78, &qword_100813A80, (void (*)(void))sub_1006124C0);
    sub_100014488(&qword_1008002A8, &qword_1008002B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813A70);
  }
  return result;
}

unint64_t sub_1006124C0()
{
  unint64_t result = qword_100813A88;
  if (!qword_100813A88)
  {
    sub_100014440(&qword_100813A90);
    sub_100612560();
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813A88);
  }
  return result;
}

unint64_t sub_100612560()
{
  unint64_t result = qword_100813A98;
  if (!qword_100813A98)
  {
    sub_100014440(&qword_100813AA0);
    sub_1001BB81C();
    sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813A98);
  }
  return result;
}

uint64_t sub_100612600(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if ((a15 & 1) == 0)
  {
    sub_1001D7E98(result, a2, a3, a4);
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100612670(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if ((a15 & 1) == 0)
  {
    sub_1001D7EDC(result, a2, a3, a4);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1006126EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100612754()
{
  return sub_100613948(sub_10060A694);
}

uint64_t sub_10061277C()
{
  uint64_t v1 = *(void *)(type metadata accessor for InsightsSetScheduleAction() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for OpenURLAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100612888(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for InsightsSetScheduleAction() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10002C194;
  return sub_10063C148(a1, v5, v6, v7);
}

uint64_t sub_100612980()
{
  return 8;
}

uint64_t sub_10061298C()
{
  return swift_release();
}

uint64_t sub_100612994(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1006129A8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1006129B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100611E50(a1, a2, *(char **)(v3 + 16), *(void *)(v3 + 24), *(int **)(v3 + 32), a3);
}

unint64_t sub_1006129D4()
{
  unint64_t result = qword_100813BA0;
  if (!qword_100813BA0)
  {
    sub_100014440(&qword_100813B98);
    sub_100613370(&qword_100813BA8, &qword_100813BB0, (void (*)(void))sub_1000C22B4);
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813BA0);
  }
  return result;
}

unint64_t sub_100612AB4()
{
  unint64_t result = qword_100813BB8;
  if (!qword_100813BB8)
  {
    sub_100014440(&qword_100813B88);
    sub_100612B54();
    sub_100014488(&qword_100800698, &qword_100800618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813BB8);
  }
  return result;
}

unint64_t sub_100612B54()
{
  unint64_t result = qword_100813BC0;
  if (!qword_100813BC0)
  {
    sub_100014440(&qword_100813B80);
    sub_100612BF4();
    sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813BC0);
  }
  return result;
}

unint64_t sub_100612BF4()
{
  unint64_t result = qword_100813BC8;
  if (!qword_100813BC8)
  {
    sub_100014440(&qword_100813B78);
    sub_100014440(&qword_100813B98);
    sub_1006129D4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813BC8);
  }
  return result;
}

uint64_t sub_100612CA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100612D0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100612D6C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000C04A4(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100612DD0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10002B8D0(result, a2, a3 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100612E34@<X0>(char *a1@<X8>)
{
  return sub_10060650C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_100612E40()
{
  return sub_100608D24(*(void *)(v0 + 16));
}

unint64_t sub_100612E50()
{
  unint64_t result = qword_100813C80;
  if (!qword_100813C80)
  {
    sub_100014440(&qword_100813C00);
    sub_100612EF0();
    sub_100014488(&qword_100813C98, &qword_100813C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813C80);
  }
  return result;
}

unint64_t sub_100612EF0()
{
  unint64_t result = qword_100813C88;
  if (!qword_100813C88)
  {
    sub_100014440(&qword_100813BF8);
    sub_100612F90();
    sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813C88);
  }
  return result;
}

unint64_t sub_100612F90()
{
  unint64_t result = qword_100813C90;
  if (!qword_100813C90)
  {
    sub_100014440(&qword_100813BF0);
    sub_100014440(&qword_100813BE0);
    type metadata accessor for BorderedButtonStyle();
    sub_100014488(&qword_100813C70, &qword_100813BE0);
    sub_100613430(&qword_100801E30, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_10080DEC0, &qword_10080DEB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813C90);
  }
  return result;
}

unint64_t sub_1006130D8()
{
  unint64_t result = qword_100813CB8;
  if (!qword_100813CB8)
  {
    sub_100014440(&qword_100813C18);
    sub_100613178();
    sub_100014488(&qword_100813CD0, &qword_100813CA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813CB8);
  }
  return result;
}

unint64_t sub_100613178()
{
  unint64_t result = qword_100813CC0;
  if (!qword_100813CC0)
  {
    sub_100014440(&qword_100813C10);
    sub_100014440(&qword_100813C00);
    sub_100612E50();
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100813CC8, &qword_100813CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813CC0);
  }
  return result;
}

uint64_t sub_10061324C()
{
  return sub_100608FC4();
}

uint64_t sub_100613254(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006132D0()
{
  unint64_t result = qword_100813D08;
  if (!qword_100813D08)
  {
    sub_100014440(&qword_100813D10);
    sub_100014488(&qword_100800698, &qword_100800618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813D08);
  }
  return result;
}

uint64_t sub_100613370(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006133DC()
{
  unint64_t result = qword_100813D80;
  if (!qword_100813D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813D80);
  }
  return result;
}

uint64_t sub_100613430(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10061347C()
{
  uint64_t v1 = (int *)type metadata accessor for InsightsCurrentStreakView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = type metadata accessor for StreakSummary();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    }
    uint64_t v7 = v2 + *(int *)(v3 + 20);
    if (!v6(v7, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
    uint64_t v8 = v2 + *(int *)(v3 + 24);
    if (!v6(v8, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  uint64_t v9 = v2 + v1[5];
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v11 = v2 + v1[7];
  sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for WidgetFamily();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 3, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(v2 + v1[8]), *(unsigned char *)(v2 + v1[8] + 8));
  sub_100026DF8(*(void *)(v2 + v1[9]), *(unsigned char *)(v2 + v1[9] + 8));
  uint64_t v14 = v2 + v1[10];
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = v2 + v1[11];
  sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v18 = v2 + v1[14];
  uint64_t v19 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);

  return swift_deallocObject();
}

uint64_t sub_100613930()
{
  return sub_100613948(sub_1006085C8);
}

uint64_t sub_100613948(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for InsightsCurrentStreakView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1006139BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006083C0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64), *(void *)(v1 + 72), a1);
}

unint64_t sub_1006139E0()
{
  unint64_t result = qword_100813DF8;
  if (!qword_100813DF8)
  {
    sub_100014440(&qword_100813DD8);
    sub_100613A80();
    sub_100014488(&qword_100813E20, &qword_100813E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813DF8);
  }
  return result;
}

unint64_t sub_100613A80()
{
  unint64_t result = qword_100813E00;
  if (!qword_100813E00)
  {
    sub_100014440(&qword_100813DC8);
    sub_100014488(&qword_100813E08, &qword_100813DD0);
    sub_100014488(&qword_100813E10, &qword_100813E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813E00);
  }
  return result;
}

uint64_t sub_100613B44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100613BA0()
{
  uint64_t v1 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  unint64_t v5 = sub_100039114();
  uint64_t v7 = v6;
  int v9 = v8;
  swift_release();
  if (v5 < 2) {
    return 0;
  }
  uint64_t v27 = v7;
  uint64_t v11 = *(void *)(v5 + 16);
  if (v11)
  {
    v26[1] = v9;
    uint64_t v12 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v13 = *(void *)(v2 + 72);
    uint64_t v14 = _swiftEmptyArrayStorage;
    do
    {
      sub_10003F820(v12, (uint64_t)v4);
      uint64_t v16 = &v4[*(int *)(v1 + 40)];
      if ((v16[8] & 1) == 0)
      {
        uint64_t v17 = &v4[*(int *)(v1 + 44)];
        if ((v17[8] & 1) == 0)
        {
          uint64_t v18 = *(void *)v16;
          uint64_t v19 = *(void *)v17;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = (double *)sub_1002A5A10(0, *((void *)v14 + 2) + 1, 1, v14);
          }
          unint64_t v21 = *((void *)v14 + 2);
          unint64_t v20 = *((void *)v14 + 3);
          if (v21 >= v20 >> 1) {
            uint64_t v14 = (double *)sub_1002A5A10((void *)(v20 > 1), v21 + 1, 1, v14);
          }
          *((void *)v14 + 2) = v21 + 1;
          uint64_t v15 = &v14[2 * v21];
          *((void *)v15 + 4) = v18;
          *((void *)v15 + 5) = v19;
        }
      }
      sub_10003F884((uint64_t)v4);
      v12 += v13;
      --v11;
    }
    while (v11);
  }
  sub_10003F810(v5);
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_100388770(v22);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1000CCC9C(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = *((void *)v24 + 2);
  swift_release();
  return v10;
}

uint64_t sub_100613E10()
{
  uint64_t v0 = sub_100613F30();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    uint64_t v4 = sub_100614294();
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      if (qword_1007F7600 != -1) {
        swift_once();
      }
      sub_100010218((uint64_t *)&unk_100806070);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1006D6270;
      *(void *)(v8 + 56) = &type metadata for String;
      unint64_t v9 = sub_10001B2C0();
      *(void *)(v8 + 32) = v2;
      *(void *)(v8 + 40) = v3;
      *(void *)(v8 + 96) = &type metadata for String;
      *(void *)(v8 + 104) = v9;
      *(void *)(v8 + 64) = v9;
      *(void *)(v8 + 72) = v6;
      *(void *)(v8 + 80) = v7;
      uint64_t v10 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = sub_100613F30();
  if (!v12) {
    return sub_100614294();
  }
  return v11;
}

uint64_t sub_100613F30()
{
  uint64_t v1 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  uint64_t v8 = sub_100039114();
  swift_release();
  if (v8 == 1) {
    return 0;
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_10003F810(v9);
  if (!v8) {
    return 0;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    sub_10003F820(v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * (v10 - 1), (uint64_t)v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10009C490((uint64_t)v3);
    return 0;
  }
  sub_10009C54C((uint64_t)v3, (uint64_t)v7);
  unint64_t v13 = v7[1];
  if (!v13) {
    goto LABEL_21;
  }
  uint64_t v11 = *v7;
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = *v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100613BA0();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = v15;
      if (v15 >= 2)
      {
        if (qword_1007F75F0 != -1) {
          swift_once();
        }
        sub_100010218((uint64_t *)&unk_100806070);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1006D6270;
        *(void *)(v18 + 56) = &type metadata for String;
        unint64_t v19 = sub_10001B2C0();
        *(void *)(v18 + 32) = v11;
        *(void *)(v18 + 40) = v13;
        *(void *)(v18 + 96) = &type metadata for Int;
        *(void *)(v18 + 104) = &protocol witness table for Int;
        *(void *)(v18 + 64) = v19;
        *(void *)(v18 + 72) = v17 - 1;
        uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
      }
    }
    sub_10003F884((uint64_t)v7);
  }
  else
  {
LABEL_21:
    unint64_t v20 = v7[3];
    if (!v20)
    {
      sub_10003F884((uint64_t)v7);
      return 0;
    }
    uint64_t v11 = v7[2];
    if ((v20 & 0x2000000000000000) != 0) {
      uint64_t v21 = HIBYTE(v20) & 0xF;
    }
    else {
      uint64_t v21 = v11 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    sub_10003F884((uint64_t)v7);
    if (!v21)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v11;
}

uint64_t sub_100614294()
{
  uint64_t v1 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  uint64_t v8 = sub_100039114();
  swift_release();
  if (v8 == 1) {
    return 0;
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_10003F810(v9);
  if (v8)
  {
    uint64_t v10 = *(void *)(v8 + 16);
    if (v10)
    {
      sub_10003F820(v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * (v10 - 1), (uint64_t)v3);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_10009C490((uint64_t)v3);
    }
    else
    {
      sub_10009C54C((uint64_t)v3, (uint64_t)v7);
      unint64_t v12 = v7[1];
      if (v12)
      {
        if ((v12 & 0x2000000000000000) != 0 ? HIBYTE(v12) & 0xF : *v7 & 0xFFFFFFFFFFFFLL)
        {
          uint64_t v14 = sub_100613BA0();
          if ((v15 & 1) != 0 || v14 < 2)
          {
            uint64_t v11 = v7[2];
            swift_bridgeObjectRetain();
            sub_10003F884((uint64_t)v7);
            return v11;
          }
        }
      }
      sub_10003F884((uint64_t)v7);
    }
    return 0;
  }
  return 0;
}

uint64_t sub_10061450C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_1007F9F50);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s10VisitAssetC9VisitDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_100614630, v5, v4);
}

uint64_t sub_100614630()
{
  if (!*(void *)(v0[3] + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    || (swift_retain(), uint64_t v1 = sub_100039114(), swift_release(), v1 == 1)
    || (uint64_t v2 = swift_bridgeObjectRetain(), sub_10003F810(v2), !v1))
  {
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5(0);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    sub_10003F820(v1+ ((*(unsigned __int8 *)(v0[6] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[6] + 80))+ *(void *)(v0[6] + 72) * (v3 - 1), v0[4]);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, v4, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v10 = v0[4];
    swift_release();
    sub_10009C490(v10);
    goto LABEL_7;
  }
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[5];
  sub_10009C54C(v0[4], v11);
  uint64_t v13 = v11 + *(int *)(v12 + 52);
  unint64_t v14 = *(void *)(v13 + 8);
  if (v14 >> 60 == 15)
  {
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = *(void *)v13;
    sub_100040D64(*(void *)v13, *(void *)(v13 + 8));
    uint64_t v15 = sub_10003F8E0(v16, v14);
    sub_100040DBC(v16, v14);
  }
  v0[11] = v15;
  return _swift_task_switch(sub_100614864, 0, 0);
}

uint64_t sub_100614864()
{
  uint64_t v1 = (void *)v0[2];
  if (v1)
  {
    [v1 displayScale];
    double v3 = v2;
  }
  else
  {
    double v3 = 20.0;
  }
  v0[12] = [self imageForMapItem:v0[11] forScale:v3];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100614964;
  uint64_t v5 = v0[2];
  v4[2] = v0[11];
  v4[3] = v5;
  return _swift_task_switch(sub_1006154E4, 0, 0);
}

uint64_t sub_100614964(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100614A64, 0, 0);
}

uint64_t sub_100614A64()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_100614AC8, v1, v2);
}

uint64_t sub_100614AC8()
{
  swift_release();
  uint64_t v1 = sub_100613BA0();
  if ((v2 & 1) == 0 && v1 >= 2)
  {
    if (qword_1007F7C50 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_10083E938;
    uint64_t v4 = (void *)v0[14];
    uint64_t v5 = (void *)v0[12];
    uint64_t v6 = v0[7];
    if (qword_10083E938)
    {
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
      *(void *)(v7 + 32) = [self whiteColor];
      *(void *)(v7 + 40) = v4;
      specialized Array._endMutation()();
      sub_100088B50();
      id v8 = v4;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v10 = [self configurationWithPaletteColors:isa v7];

      id v11 = [v3 imageWithConfiguration:v10];
      sub_10003F884(v6);
    }
    else
    {
      sub_10003F884(v6);

      id v11 = 0;
    }
    goto LABEL_17;
  }
  if (qword_1007F7C48 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_10083E930;
  if (!qword_10083E930)
  {
    id v11 = (id)v0[14];
    sub_10003F884(v0[7]);
LABEL_16:

    id v11 = (id)v0[12];
    goto LABEL_17;
  }
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D6D10;
  *(void *)(v13 + 32) = [self whiteColor];
  if (qword_1007F71F0 != -1) {
    swift_once();
  }
  unint64_t v14 = (void *)v0[14];
  uint64_t v15 = v0[12];
  uint64_t v16 = v0[7];
  uint64_t v17 = (void *)qword_10083D7B8;
  *(void *)(v13 + 40) = qword_10083D7B8;
  specialized Array._endMutation()();
  sub_100088B50();
  id v18 = v17;
  Class v19 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [self configurationWithPaletteColors:v19, v13];

  id v11 = [v12 imageWithConfiguration:v20];
  sub_10003F884(v16);

  if (v15) {
    goto LABEL_16;
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(id))v0[1];
  return v21(v11);
}

uint64_t sub_100614E38(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_1007F9F50);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s10VisitAssetC9VisitDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_100614F5C, v5, v4);
}

uint64_t sub_100614F5C()
{
  if (!*(void *)(v0[3] + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)
    || (swift_retain(), uint64_t v1 = sub_100039114(), swift_release(), v1 == 1)
    || (uint64_t v2 = swift_bridgeObjectRetain(), sub_10003F810(v2), !v1))
  {
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5(0);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    sub_10003F820(v1+ ((*(unsigned __int8 *)(v0[6] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[6] + 80))+ *(void *)(v0[6] + 72) * (v3 - 1), v0[4]);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, v4, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v10 = v0[4];
    swift_release();
    sub_10009C490(v10);
    goto LABEL_7;
  }
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[5];
  sub_10009C54C(v0[4], v11);
  uint64_t v13 = v11 + *(int *)(v12 + 52);
  unint64_t v14 = *(void *)(v13 + 8);
  if (v14 >> 60 == 15)
  {
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = *(void *)v13;
    sub_100040D64(*(void *)v13, *(void *)(v13 + 8));
    uint64_t v15 = sub_10003F8E0(v16, v14);
    sub_100040DBC(v16, v14);
  }
  v0[11] = v15;
  return _swift_task_switch(sub_100615190, 0, 0);
}

uint64_t sub_100615190()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = self;
  id v4 = [v1 _styleAttributes];
  [v2 displayScale];
  id v5 = [v3 newFillColorForStyleAttributes:v4];

  id v6 = v3;
  if (v5)
  {
    uint64_t v7 = (void *)v0[11];
    id v8 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v5];
  }
  else
  {
    if (qword_1007F71F0 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)v0[11];
    id v8 = (id)qword_10083D7B8;
  }

  v0[12] = v8;
  uint64_t v9 = v0[9];
  uint64_t v10 = v0[10];
  return _swift_task_switch(sub_1006152D8, v9, v10);
}

uint64_t sub_1006152D8()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[7];
  swift_release();
  id v3 = [v1 colorWithAlphaComponent:0.15];

  sub_10003F884(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t sub_10061539C(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_10008F230;
  return sub_10061450C(a1);
}

uint64_t sub_100615430(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_100615624;
  return sub_100614E38(a1);
}

uint64_t sub_1006154C4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1006154E4, 0, 0);
}

uint64_t sub_1006154E4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = [*(id *)(v0 + 16) _styleAttributes];
  if (v1)
  {
    [*(id *)(v0 + 24) displayScale];
    double v4 = v3;
  }
  else
  {
    double v4 = 20.0;
  }
  uint64_t v5 = self;
  id v6 = [v5 newFillColorForStyleAttributes:v2 forScale:v4];

  id v7 = v5;
  if (v6)
  {
    id v8 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v6];
  }
  else
  {
    if (qword_1007F71F0 != -1) {
      swift_once();
    }
    id v8 = (id)qword_10083D7B8;
  }
  uint64_t v9 = *(uint64_t (**)(id))(v0 + 8);
  return v9(v8);
}

void sub_100615628(unsigned char *a1, double a2, double a3)
{
  id v7 = *(void **)(v3 + 32);
  [v7 recordingStartTime];
  double v9 = v8;
  [v7 punchInTime];
  float v12 = 0.0;
  *a1 = [v7 getAmplitudes:&v12 count:1 startTime:v9 + a2 - v10 + -0.1 endTime:v9 + a3 - v10 + -0.1];
  if (v12 != 0.0)
  {
    [v7 runningAverage:0.0];
    powf(1.0 - v11, 3.0);
  }
}

uint64_t sub_1006157AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EnvironmentValues();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100800000);
  __chkstk_darwin(v7 - 8);
  double v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001773E0();
  EnvironmentValues.subscript.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  uint64_t v10 = type metadata accessor for InsightsFamily();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    EnvironmentValues.widgetFamily.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v11 = type metadata accessor for WidgetFamily();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 3, v11);
    return sub_10001457C((uint64_t)v9, &qword_100800000);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_100615AD8((uint64_t)v9, a1);
  }
}

uint64_t sub_1006159BC()
{
  uint64_t v1 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EC694(v0, (uint64_t)v3);
  uint64_t v4 = type metadata accessor for WidgetFamily();
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 3, v4);
  if ((v5 - 2) < 2) {
    return 1;
  }
  if (!v5) {
    sub_1005EC6F8((uint64_t)v3);
  }
  return 0;
}

uint64_t type metadata accessor for InsightsFamily()
{
  uint64_t result = qword_100813ED0;
  if (!qword_100813ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100615AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100615B40()
{
  uint64_t v0 = sub_100010218(&qword_100800000);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001773E0();
  EnvironmentValues.subscript.getter();
  uint64_t v3 = type metadata accessor for InsightsFamily();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1)
  {
    uint64_t v4 = type metadata accessor for WidgetFamily();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 3, v4)) {
      return 1;
    }
    sub_1005EC6F8((uint64_t)v2);
  }
  type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey();
  sub_100616B14(&qword_100800010, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  EnvironmentValues.subscript.getter();
  return v6[15];
}

ValueMetadata *type metadata accessor for InsightsFamilyKey()
{
  return &type metadata for InsightsFamilyKey;
}

uint64_t *sub_100615CC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for WidgetFamily();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_100615E10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetFamily();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_100615EE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_100615FF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *sub_100616164(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_100616274(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_1006163E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006163FC);
}

uint64_t sub_1006163FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetFamily();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_100616468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10061647C);
}

uint64_t sub_10061647C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100616500(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetFamily();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_100616568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetFamily();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t sub_1006165D8()
{
  uint64_t result = type metadata accessor for WidgetFamily();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_100616650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InsightsFamily();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_1006166BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100616720();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_100616720()
{
  unint64_t result = qword_100813EE0;
  if (!qword_100813EE0)
  {
    sub_100014440(&qword_100800000);
    sub_100616B14(&qword_100813EE8, (void (*)(uint64_t))type metadata accessor for InsightsFamily);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813EE0);
  }
  return result;
}

BOOL sub_1006167C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetFamily();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100813EF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_1005EC694(a1, (uint64_t)v13);
  sub_1005EC694(a2, v15);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  switch(v16((uint64_t)v13, 3, v4))
  {
    case 1u:
      if (v16(v15, 3, v4) != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (v16(v15, 3, v4) != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (v16(v15, 3, v4) != 3) {
        goto LABEL_9;
      }
LABEL_5:
      sub_1005EC6F8((uint64_t)v13);
      BOOL v17 = 1;
      break;
    default:
      sub_1005EC694((uint64_t)v13, (uint64_t)v10);
      if (v16(v15, 3, v4))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_9:
        sub_10001457C((uint64_t)v13, &qword_100813EF0);
        BOOL v17 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
        sub_100616B14(&qword_100813EF8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        BOOL v17 = v20[1] == v20[0];
        Class v19 = *(void (**)(char *, uint64_t))(v5 + 8);
        v19(v7, v4);
        v19(v10, v4);
        sub_1005EC6F8((uint64_t)v13);
      }
      break;
  }
  return v17;
}

uint64_t sub_100616B14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100616B5C(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int64_t v10 = a1;
  int64_t v11 = 0;
  int64_t v12 = a1;
  while (1)
  {
    BOOL v13 = v12 <= a2;
    if (a3 > 0) {
      BOOL v13 = v12 >= a2;
    }
    if (v13) {
      break;
    }
    BOOL v14 = __OFADD__(v12, a3);
    v12 += a3;
    if (v14) {
      int64_t v12 = (v12 >> 63) ^ 0x8000000000000000;
    }
    BOOL v14 = __OFADD__(v11++, 1);
    if (v14)
    {
      __break(1u);
      break;
    }
  }
  int v32 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100095C00(0, v11, 0);
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (v11)
  {
    while (1)
    {
      BOOL v17 = v10 <= a2;
      if (a3 > 0) {
        BOOL v17 = v10 >= a2;
      }
      if (v17) {
        break;
      }
      if (__OFADD__(v10, a3)) {
        int64_t v18 = ((v10 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v18 = v10 + a3;
      }
      int64_t v29 = v10;
      char v30 = 0;
      uint64_t result = sub_100616DB0(&v29, a4, a5, &v31);
      if (v6) {
        goto LABEL_37;
      }
      uint64_t v6 = 0;
      double v19 = v31;
      int v32 = v16;
      unint64_t v21 = *((void *)v16 + 2);
      unint64_t v20 = *((void *)v16 + 3);
      if (v21 >= v20 >> 1)
      {
        uint64_t result = sub_100095C00(v20 > 1, v21 + 1, 1);
        uint64_t v16 = v32;
      }
      *((void *)v16 + 2) = v21 + 1;
      v16[v21 + 4] = v19;
      int64_t v10 = v18;
      if (!--v11) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    int64_t v18 = v10;
LABEL_23:
    BOOL v22 = v18 <= a2;
    if (a3 > 0) {
      BOOL v22 = v18 >= a2;
    }
    if (v22)
    {
LABEL_26:
      swift_bridgeObjectRelease();
    }
    else
    {
      while (1)
      {
        int64_t v23 = __OFADD__(v18, a3) ? ((v18 + a3) >> 63) ^ 0x8000000000000000 : v18 + a3;
        int64_t v29 = v18;
        sub_100616DB0(&v29, a4, a5, &v31);
        if (v6) {
          break;
        }
        uint64_t v6 = 0;
        double v24 = v31;
        int v32 = v16;
        unint64_t v26 = *((void *)v16 + 2);
        unint64_t v25 = *((void *)v16 + 3);
        if (v26 >= v25 >> 1)
        {
          sub_100095C00(v25 > 1, v26 + 1, 1);
          uint64_t v16 = v32;
        }
        *((void *)v16 + 2) = v26 + 1;
        v16[v26 + 4] = v24;
        BOOL v27 = v23 <= a2;
        if (a3 > 0) {
          BOOL v27 = v23 >= a2;
        }
        int64_t v18 = v23;
        if (v27) {
          goto LABEL_26;
        }
      }
LABEL_37:
      swift_bridgeObjectRelease();
      swift_release();
    }
    return (uint64_t)v16;
  }
  return result;
}

uint64_t sub_100616DB0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  uint64_t v5 = *a1;
  if (__OFADD__(*a1, a3))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(void *)(a2 + 16) >= *a1 + a3) {
    uint64_t v7 = *a1 + a3;
  }
  else {
    uint64_t v7 = *(void *)(a2 + 16);
  }
  if (v7 < v5) {
    goto LABEL_18;
  }
  if (v5 < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v9 = v7 - v5;
  if (v7 != v5)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100096060(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      goto LABEL_20;
    }
    uint64_t v8 = v16;
    while (v7 != v5)
    {
      double v10 = *(double *)(a2 + 8 * v5 + 32);
      uint64_t v16 = v8;
      unint64_t v12 = *((void *)v8 + 2);
      unint64_t v11 = *((void *)v8 + 3);
      if (v12 >= v11 >> 1)
      {
        sub_100096060(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v16;
      }
      float v13 = v10;
      *((void *)v8 + 2) = v12 + 1;
      *((float *)v8 + v12 + 8) = v13;
      if (v7 == ++v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_15:
  vDSP_Length v14 = *((void *)v8 + 2);
  LODWORD(v16) = 2143289344;
  vDSP_meanv((const float *)v8 + 8, 1, (float *)&v16, v14);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = *(float *)&v16;
  return result;
}

void sub_100616F40()
{
  qword_10083EE20 = 0x404E000000000000;
}

double sub_100616F50(uint64_t a1, double a2)
{
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  double result = 2.5;
  if (v4 && v4 != 2047)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    double v7 = a2 - *(double *)(v2 + 88) * (double)v6;
    if ((unint64_t)v6 >= 2) {
      double v7 = v7 / (double)(v6 - 1);
    }
    double v8 = 1.5;
    if (v7 > 1.5) {
      double v8 = v7;
    }
    if (*(unsigned char *)(v2 + 80)) {
      return v8;
    }
    double result = *(double *)(v2 + 72);
    if (result >= v8) {
      return v8;
    }
  }
  return result;
}

uint64_t sub_100616FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for GeometryProxy();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(double *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, v5, v7);
  if (v11 == 1)
  {
    GeometryProxy.size.getter();
    double v10 = v12;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(a2 + 32);
  sub_10002E0BC((void *)a2, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  uint64_t v16 = sub_100617854(v15, *(unsigned char *)(a2 + 96), v10, *(double *)(a2 + 88));
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a2 + 64))
  {
    double v17 = COERCE_DOUBLE(sub_1001985D0((uint64_t)v16));
    if (v18) {
      double v19 = 0.0;
    }
    else {
      double v19 = v17;
    }
    if (qword_1007F7EC0 != -1) {
      swift_once();
    }
    if (v19 <= *(double *)&qword_10083EE20) {
      double v19 = *(double *)&qword_10083EE20;
    }
  }
  else
  {
    double v19 = *(double *)(a2 + 56);
  }
  sub_100616F50((uint64_t)v16, v10);
  __chkstk_darwin(v20);
  *(void *)&v22[-8] = v16;
  *(double *)&v22[-6] = v19;
  *(void *)&v22[-4] = a1;
  *(void *)&v22[-2] = a2;
  static VerticalAlignment.center.getter();
  v22[3] = 0;
  sub_100617DB8(&qword_1008023B0, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_100010218(&qword_100813F00);
  sub_100617CA4();
  LazyHStack.init(alignment:spacing:pinnedViews:content:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006172D8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = type metadata accessor for GeometryProxy();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v22 = 0;
  uint64_t v23 = v11;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  sub_1004FFB40(a3, (uint64_t)v20);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(double *)(v13 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  unint64_t v14 = v13 + ((v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v15 = v20[5];
  *(_OWORD *)(v14 + 64) = v20[4];
  *(_OWORD *)(v14 + 80) = v15;
  *(unsigned char *)(v14 + 96) = v21;
  long long v16 = v20[1];
  *(_OWORD *)unint64_t v14 = v20[0];
  *(_OWORD *)(v14 + 16) = v16;
  long long v17 = v20[3];
  *(_OWORD *)(v14 + 32) = v20[2];
  *(_OWORD *)(v14 + 48) = v17;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100801A78);
  sub_100010218(&qword_100813F18);
  sub_1001B5294();
  sub_100617D18();
  return ForEach<>.init(_:id:content:)();
}

void sub_1006174F0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v6 = type metadata accessor for TintShapeStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v10);
  unint64_t v12 = (double *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100010218(&qword_100801D78);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*a1 < *(void *)(a2 + 16))
  {
    GeometryProxy.size.getter();
    double v16 = *(double *)(v24 + 88) * 0.5;
    long long v17 = (char *)v12 + *(int *)(v10 + 20);
    uint64_t v18 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v19 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
    double *v12 = v16;
    v12[1] = v16;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_100617F9C((uint64_t)v12, (uint64_t)v15);
    uint64_t v20 = &v15[*(int *)(v13 + 36)];
    long long v21 = v27;
    *(_OWORD *)uint64_t v20 = v26;
    *((_OWORD *)v20 + 1) = v21;
    *((_OWORD *)v20 + 2) = v28;
    sub_100618000((uint64_t)v12);
    TintShapeStyle.init()();
    uint64_t v22 = sub_100010218(&qword_100813F18);
    uint64_t v23 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v25 + *(int *)(v22 + 36), v9, v6);
    sub_10061805C((uint64_t)v15, v23);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1006180C4((uint64_t)v15);
    return;
  }
  __break(1u);
}

__n128 sub_1006177CC@<Q0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  sub_1004FFB40(v1, (uint64_t)v7);
  uint64_t v3 = swift_allocObject();
  long long v4 = v7[5];
  *(_OWORD *)(v3 + 80) = v7[4];
  *(_OWORD *)(v3 + 96) = v4;
  *(unsigned char *)(v3 + 112) = v8;
  long long v5 = v7[1];
  *(_OWORD *)(v3 + 16) = v7[0];
  *(_OWORD *)(v3 + 32) = v5;
  __n128 result = (__n128)v7[3];
  *(_OWORD *)(v3 + 48) = v7[2];
  *(__n128 *)(v3 + 64) = result;
  *a1 = sub_100617C8C;
  a1[1] = (uint64_t (*)(uint64_t))v3;
  return result;
}

double *sub_100617854(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = (*(void *)&a3 >> 52) & 0x7FFLL;
  __n128 result = _swiftEmptyArrayStorage;
  if (!v5) {
    return result;
  }
  if (v5 == 2047) {
    return result;
  }
  double v7 = floor((a3 + 1.5) / (a4 + 1.5));
  if (v7 == 0.0) {
    return result;
  }
  if (v7 == INFINITY) {
    return (double *)swift_bridgeObjectRetain();
  }
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = (uint64_t)v7;
  if (v8 <= (uint64_t)v7) {
    return (double *)swift_bridgeObjectRetain();
  }
  if (a2)
  {
    double v10 = ceil((double)v8 / v7);
    if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
    {
      if (v10 > -9.22337204e18)
      {
        if (v10 < 9.22337204e18)
        {
          uint64_t v11 = (uint64_t)v10;
          if ((uint64_t)v10)
          {
            swift_bridgeObjectRetain();
            return (double *)sub_100616B5C(0, v8, v11, a1, v11);
          }
          goto LABEL_26;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();

  return (double *)sub_100524B34(v9, a1);
}

uint64_t initializeWithCopy for WaveformView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t assignWithCopy for WaveformView(uint64_t a1, uint64_t a2)
{
  sub_1001C2600((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

__n128 initializeWithTake for WaveformView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for WaveformView(uint64_t a1, uint64_t a2)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 97)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformView()
{
  return &type metadata for WaveformView;
}

uint64_t sub_100617C38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100617C54()
{
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100617C8C(uint64_t a1)
{
  return sub_100616FC0(a1, v1 + 16);
}

uint64_t sub_100617C94()
{
  return sub_1006172D8(*(void *)(v0 + 16), *(void *)(v0 + 32), *(void *)(v0 + 40), *(double *)(v0 + 24));
}

unint64_t sub_100617CA4()
{
  unint64_t result = qword_100813F08;
  if (!qword_100813F08)
  {
    sub_100014440(&qword_100813F00);
    sub_100617D18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813F08);
  }
  return result;
}

unint64_t sub_100617D18()
{
  unint64_t result = qword_100813F10;
  if (!qword_100813F10)
  {
    sub_100014440(&qword_100813F18);
    sub_1001B960C();
    sub_100014488(&qword_100813F20, &qword_100813F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813F10);
  }
  return result;
}

uint64_t sub_100617DB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100617E00()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + v4);

  return swift_deallocObject();
}

void sub_100617EE8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2
     + ((*(void *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8);

  sub_1006174F0(a1, v6, v7, a2);
}

uint64_t sub_100617F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100618000(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10061805C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100801D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006180C4(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100801D78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100618124()
{
  return sub_100014488(&qword_100813F30, &qword_100813F38);
}

uint64_t sub_100618160(char a1)
{
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  static Alignment.center.getter();
  sub_100010218(&qword_100813F40);
  sub_1006185B8();
  sub_10061860C();
  View.backgroundPreferenceValue<A, B>(_:alignment:_:)();

  return swift_release();
}

uint64_t sub_100618250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007FF230);
  __chkstk_darwin(v6);
  int64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1007F7FA8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100026A54(v2, (uint64_t)qword_10083F018);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Color.init(_:)();
  uint64_t v11 = (char *)v8 + *(int *)(v6 + 36);
  uint64_t v12 = enum case for BlendMode.normal(_:);
  uint64_t v13 = type metadata accessor for BlendMode();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  v14(v11, v12, v13);
  v14((char *)v8 + *(int *)(v6 + 40), enum case for BlendMode.plusLighter(_:), v13);
  uint64_t *v8 = v10;
  sub_100014488((unint64_t *)&unk_100802710, &qword_1007FF230);
  uint64_t v16 = AnyShapeStyle.init<A>(_:)();
  __int16 v17 = 256;
  sub_100010218(&qword_100813F78);
  sub_100014488(qword_100813F80, &qword_100813F78);
  uint64_t result = AnyView.init<A>(_:)();
  *a1 = result;
  return result;
}

void *sub_1006184D4(void *a1, void *(*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4 = swift_release();
  uint64_t result = a2(&v6, v4);
  *a1 = v6;
  return result;
}

uint64_t sub_100618530()
{
  return View.accessibilityHidden(_:)();
}

uint64_t sub_1006185A0()
{
  return swift_deallocObject();
}

uint64_t sub_1006185B0()
{
  return sub_100618530();
}

unint64_t sub_1006185B8()
{
  unint64_t result = qword_100813F48;
  if (!qword_100813F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813F48);
  }
  return result;
}

unint64_t sub_10061860C()
{
  unint64_t result = qword_100813F50;
  if (!qword_100813F50)
  {
    sub_100014440(&qword_100813F40);
    sub_100618688();
    sub_1000B3AF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813F50);
  }
  return result;
}

unint64_t sub_100618688()
{
  unint64_t result = qword_100813F58;
  if (!qword_100813F58)
  {
    sub_100014440(&qword_100813F60);
    sub_100618704();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813F58);
  }
  return result;
}

unint64_t sub_100618704()
{
  unint64_t result = qword_100813F68;
  if (!qword_100813F68)
  {
    sub_100014440(&qword_100813F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100813F68);
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomBackgroundKey()
{
  return &type metadata for CustomBackgroundKey;
}

uint64_t sub_100618788()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100618818(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1006188D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1006188FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10061894C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10061899C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1006189EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100618A3C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_100618B98(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100618DB0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for InsightsSocialMediaTransfer()
{
  return sub_100073C20();
}

uint64_t sub_100618DF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100618E34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned int v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if ((a3 & 1) == 0) {
    EdgeInsets.init(_all:)();
  }
  v13[1] = v8;
  v13[2] = v9;
  v13[3] = v10;
  void v13[4] = v11;
  char v14 = a3 & 1;
  SafeAreaPaddingModifier.init(edges:insets:)();
  View.modifier<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100618F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  __chkstk_darwin(v3);
  uint64_t v84 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  __chkstk_darwin(v5);
  uint64_t v81 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v7 - 8);
  uint64_t v80 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v98 = *(void *)(a1 + 16);
  uint64_t v9 = v98;
  uint64_t v99 = v10;
  uint64_t v11 = v10;
  v58[0] = v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v75 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  int v13 = (char *)v58 - v12;
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v77 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v65 = (char *)v58 - v15;
  sub_100014440(&qword_100813540);
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v78 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v68 = (char *)v58 - v17;
  sub_100014440(&qword_100814028);
  uint64_t v60 = v16;
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v79 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v70 = (char *)v58 - v19;
  uint64_t v98 = v9;
  uint64_t v99 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v58[1] = OpaqueTypeConformance2;
  unint64_t v21 = sub_10061AAD8();
  uint64_t v96 = OpaqueTypeConformance2;
  unint64_t v97 = v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  v58[2] = WitnessTable;
  uint64_t v23 = sub_100014488(&qword_100813550, &qword_100813540);
  uint64_t v94 = WitnessTable;
  uint64_t v95 = v23;
  uint64_t v76 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = sub_100014488(&qword_100814038, &qword_100814028);
  uint64_t v92 = v24;
  uint64_t v93 = v25;
  uint64_t v59 = v18;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v98 = v18;
  uint64_t v99 = v62;
  uint64_t v67 = &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>;
  uint64_t v64 = swift_getOpaqueTypeMetadata2();
  uint64_t v72 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  long long v27 = (char *)v58 - v26;
  uint64_t v66 = type metadata accessor for ModifiedContent();
  uint64_t v73 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v61 = (char *)v58 - v28;
  sub_100014440(&qword_100813568);
  uint64_t v29 = type metadata accessor for ModifiedContent();
  uint64_t v74 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  char v63 = (char *)v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  char v69 = (char *)v58 - v32;
  static Edge.Set.all.getter();
  View.scenePadding(_:)();
  uint64_t v33 = static Edge.Set.vertical.getter();
  uint64_t v34 = v65;
  uint64_t v35 = OpaqueTypeMetadata2;
  sub_100618E34(v33, 0x4058000000000000, 0);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v13, v35);
  swift_getKeyPath();
  uint64_t v36 = type metadata accessor for WidgetFamily();
  uint64_t v37 = (uint64_t)v80;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v80, 3, 3, v36);
  int v38 = v68;
  View.environment<A>(_:_:)();
  swift_release();
  sub_1005EC6F8(v37);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v34, v14);
  swift_getKeyPath();
  int v39 = v81;
  static Locale.current.getter();
  uint64_t v40 = v70;
  uint64_t v41 = v60;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v39, v83);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v38, v41);
  uint64_t v43 = v84;
  uint64_t v42 = v85;
  uint64_t v44 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for DynamicTypeSize.accessibility3(_:), v86);
  uint64_t v45 = v59;
  uint64_t v46 = v62;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v40, v45);
  static Alignment.center.getter();
  uint64_t v98 = v45;
  uint64_t v99 = v46;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v47 = v64;
  uint64_t v48 = v61;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v27, v47);
  LOBYTE(v44) = static Edge.Set.all.getter();
  uint64_t v90 = v57;
  char v91 = &protocol witness table for _FlexFrameLayout;
  uint64_t v49 = v66;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = v63;
  sub_100618160(v44);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v48, v49);
  uint64_t v52 = sub_100014488(&qword_1008135A0, &qword_100813568);
  uint64_t v88 = v50;
  uint64_t v89 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = v69;
  sub_1000B29EC(v51, v29, v53);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v74 + 8);
  v55(v51, v29);
  sub_1000B29EC(v54, v29, v53);
  return ((uint64_t (*)(char *, uint64_t))v55)(v54, v29);
}

uint64_t sub_100619A54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ColorRenderingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(a1 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getWitnessTable();
  type metadata accessor for ImageRenderer();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v11, v2, a1);
  ImageRenderer.__allocating_init(content:)();
  ImageRenderer.scale.setter();
  ImageRenderer.isOpaque.setter();
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorRenderingMode.nonLinear(_:), v4);
  ImageRenderer.colorMode.setter();
  v14[8] = 0;
  v14[0] = 0;
  ImageRenderer.proposedSize.setter();
  uint64_t v12 = ImageRenderer.uiImage.getter();
  swift_release();
  return v12;
}

uint64_t sub_100619C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = type metadata accessor for UTType();
  __chkstk_darwin(v5 - 8);
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v6 = type metadata accessor for InsightsSocialMediaTransfer();
  v23[1] = swift_getWitnessTable();
  uint64_t v7 = type metadata accessor for DataRepresentation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v13 = (char *)v23 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v23 - v15;
  static UTType.heic.getter();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  DataRepresentation.init(exportedContentType:exporting:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v18(v16, v13, v7);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v13, v7);
  static UTType.jpeg.getter();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v25;
  *(void *)(v20 + 16) = v24;
  *(void *)(v20 + 24) = v21;
  DataRepresentation.init(exportedContentType:exporting:)();
  v18(v13, v10, v7);
  v19(v10, v7);
  sub_10061A6AC((uint64_t)v16, (uint64_t)v13, v6, v7, v7);
  v19(v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v7);
}

uint64_t sub_100619F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_100010218((uint64_t *)&unk_100800A60);
  v3[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CocoaError.Code();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10061A034, 0, 0);
}

uint64_t sub_10061A034()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10061A0C8, v2, v1);
}

uint64_t sub_10061A0C8()
{
  swift_release();
  uint64_t v1 = type metadata accessor for InsightsSocialMediaTransfer();
  *(void *)(v0 + 80) = sub_100619A54(v1);
  return _swift_task_switch(sub_10061A158, 0, 0);
}

uint64_t sub_10061A158()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1
    && (uint64_t v2 = UIImageHEICRepresentation(*(UIImage **)(v0 + 80)), v1, v2))
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v6(v3, v5);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    static CocoaError.Code.coderInvalidValue.getter();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    static CocoaError.error(_:userInfo:url:)();
    sub_100052EAC(v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    int v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_10061A2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_100010218((uint64_t *)&unk_100800A60);
  v3[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CocoaError.Code();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_10061A3E8, 0, 0);
}

uint64_t sub_10061A3E8()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10061A47C, v2, v1);
}

uint64_t sub_10061A47C()
{
  swift_release();
  uint64_t v1 = type metadata accessor for InsightsSocialMediaTransfer();
  *(void *)(v0 + 80) = sub_100619A54(v1);
  return _swift_task_switch(sub_10061A50C, 0, 0);
}

uint64_t sub_10061A50C()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1
    && (uint64_t v2 = UIImageJPEGRepresentation(*(UIImage **)(v0 + 80), 0.75),
        v1,
        v2))
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v6(v3, v5);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    static CocoaError.Code.coderInvalidValue.getter();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    static CocoaError.error(_:userInfo:url:)();
    sub_100052EAC(v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    int v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_10061A6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v10 = __chkstk_darwin(TupleTypeMetadata2);
  int v13 = (char *)&v15 + *(int *)(v12 + 48) - v11;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a4 - 8) + 16))((char *)&v15 - v11, a1, a4, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v13, a2, a5);
  swift_getAssociatedConformanceWitness();
  return TupleTransferRepresentation.init(_:)();
}

uint64_t sub_10061A80C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10061A850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100619C48(*(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10061A85C()
{
  return swift_deallocObject();
}

uint64_t sub_10061A86C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10061AE4C;
  return sub_100619F40(a1, v5, v4);
}

uint64_t sub_10061A914()
{
  return swift_deallocObject();
}

uint64_t sub_10061A924(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10061A9CC;
  return sub_10061A2F4(a1, v5, v4);
}

uint64_t sub_10061A9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

unint64_t sub_10061AAD8()
{
  unint64_t result = qword_100814030;
  if (!qword_100814030)
  {
    type metadata accessor for SafeAreaPaddingModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814030);
  }
  return result;
}

uint64_t sub_10061AB40()
{
  type metadata accessor for InsightsSocialMediaTransfer();
  swift_getWitnessTable();
  type metadata accessor for DataRepresentation();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleTransferRepresentation();

  return swift_getWitnessTable();
}

uint64_t sub_10061ABF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10061AE50()
{
  return AttributeDynamicLookup.subscript.getter();
}

ValueMetadata *_s17JournalAttributesVMa()
{
  return &_s17JournalAttributesVN;
}

ValueMetadata *_s17JournalAttributesV7MeasureOMa()
{
  return &_s17JournalAttributesV7MeasureON;
}

uint64_t sub_10061AEB8(char *a1, char *a2)
{
  return sub_10017D494(*a1, *a2);
}

Swift::Int sub_10061AEC4()
{
  return Hasher._finalize()();
}

uint64_t sub_10061AF3C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10061AFA0()
{
  return Hasher._finalize()();
}

uint64_t sub_10061B014@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100795088, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10061B074(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953066613;
  if (!*v1) {
    uint64_t v2 = 0x65756C6176;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10061B0A8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10061B108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100141410(a1, (uint64_t)v8);
  sub_10061B3C4();
  sub_10061B418();
  uint64_t result = RawRepresentable<>.init(from:)();
  if (!v2)
  {
    int v5 = v8[55];
    uint64_t v6 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
    uint64_t v7 = (unsigned int *)&enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:);
    if (!v5) {
      uint64_t v7 = (unsigned int *)&enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.value(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(a2, *v7, v6);
  }
  return result;
}

uint64_t sub_10061B1D8()
{
  return 0x6572757361656DLL;
}

unint64_t sub_10061B1F0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10061B220()
{
  sub_100179988();

  return static AttributeScope.decodingConfiguration.getter();
}

uint64_t sub_10061B26C()
{
  sub_100179988();

  return static AttributeScope.encodingConfiguration.getter();
}

unint64_t sub_10061B2BC()
{
  unint64_t result = qword_10080BF60;
  if (!qword_10080BF60)
  {
    type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BF60);
  }
  return result;
}

unint64_t sub_10061B318()
{
  unint64_t result = qword_100814040;
  if (!qword_100814040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814040);
  }
  return result;
}

unint64_t sub_10061B370()
{
  unint64_t result = qword_100814048;
  if (!qword_100814048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814048);
  }
  return result;
}

unint64_t sub_10061B3C4()
{
  unint64_t result = qword_100814050;
  if (!qword_100814050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814050);
  }
  return result;
}

unint64_t sub_10061B418()
{
  unint64_t result = qword_100814058;
  if (!qword_100814058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814058);
  }
  return result;
}

unsigned char *_s17JournalAttributesV7MeasureO4NameOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10061B538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17JournalAttributesV7MeasureO4NameOMa()
{
  return &_s17JournalAttributesV7MeasureO4NameON;
}

unint64_t sub_10061B574()
{
  unint64_t result = qword_100814060;
  if (!qword_100814060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814060);
  }
  return result;
}

uint64_t type metadata accessor for InsightsPreviousStreakView()
{
  uint64_t result = qword_1008140C0;
  if (!qword_1008140C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10061B614()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t sub_10061B638(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_10080AA58);
  __chkstk_darwin(v2 - 8);
  sub_10001B220(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10080AA58);
  return EnvironmentValues.backgroundMaterial.setter();
}

uint64_t *sub_10061B6CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    __n128 v10 = (int *)type metadata accessor for StreakSummary();
    uint64_t v11 = *((void *)v10 - 1);
    uint64_t v12 = *(unsigned int (**)(void, void, void))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100010218(&qword_100813828);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v84 = v11;
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v80 = v12;
      uint64_t v81 = v16;
      if (v83(v9, 1, v15))
      {
        uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
      }
      uint64_t v18 = v10[5];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      if (v83(&v9[v18], 1, v15))
      {
        uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v19, v20, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v19, 0, 1, v15);
      }
      uint64_t v22 = v10[6];
      uint64_t v23 = &v8[v22];
      uint64_t v24 = &v9[v22];
      if (v83(&v9[v22], 1, v15))
      {
        uint64_t v25 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v23, v24, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v23, 0, 1, v15);
      }
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      uint64_t v11 = v84;
      (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v8, 0, 1, v10);
      uint64_t v12 = v80;
    }
    uint64_t v26 = a3[6];
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    if (v12((char *)a2 + v26, 1, v10))
    {
      uint64_t v29 = sub_100010218(&qword_100813828);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v85 = v11;
      uint64_t v30 = type metadata accessor for Date();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      uint64_t v82 = v31;
      if (v32(v28, 1, v30))
      {
        uint64_t v33 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v27, v28, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
      }
      uint64_t v34 = v10[5];
      uint64_t v35 = &v27[v34];
      uint64_t v36 = &v28[v34];
      if (v32(&v28[v34], 1, v30))
      {
        uint64_t v37 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v35, v36, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v35, 0, 1, v30);
      }
      uint64_t v38 = v10[6];
      int v39 = &v27[v38];
      uint64_t v40 = &v28[v38];
      if (v32(&v28[v38], 1, v30))
      {
        uint64_t v41 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v39, v40, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v39, 0, 1, v30);
      }
      *(void *)&v27[v10[7]] = *(void *)&v28[v10[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v85 + 56))(v27, 0, 1, v10);
    }
    uint64_t v42 = a3[7];
    uint64_t v43 = (uint64_t *)((char *)v4 + v42);
    uint64_t v44 = (uint64_t *)((char *)a2 + v42);
    sub_100010218(&qword_100813370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = type metadata accessor for WidgetFamily();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v46 + 48))(v44, 3, v45))
      {
        uint64_t v47 = type metadata accessor for InsightsFamily();
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 3, v45);
      }
    }
    else
    {
      *uint64_t v43 = *v44;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = a3[8];
    uint64_t v49 = (char *)v4 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = *(void *)v50;
    char v52 = v50[8];
    sub_100026CCC(*(void *)v50, v52);
    *(void *)uint64_t v49 = v51;
    v49[8] = v52;
    uint64_t v53 = a3[9];
    uint64_t v54 = (char *)v4 + v53;
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = *(void *)v55;
    char v57 = v55[8];
    sub_100026CCC(*(void *)v55, v57);
    *(void *)uint64_t v54 = v56;
    v54[8] = v57;
    uint64_t v58 = a3[10];
    uint64_t v59 = (uint64_t *)((char *)v4 + v58);
    uint64_t v60 = (uint64_t *)((char *)a2 + v58);
    sub_100010218(&qword_1008156E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v61 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    }
    else
    {
      *uint64_t v59 = *v60;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = a3[11];
    char v63 = (char *)v4 + v62;
    uint64_t v64 = (char *)a2 + v62;
    uint64_t v65 = *(void *)v64;
    char v66 = v64[8];
    sub_100026CCC(*(void *)v64, v66);
    *(void *)char v63 = v65;
    v63[8] = v66;
    uint64_t v67 = a3[12];
    uint64_t v68 = (uint64_t *)((char *)v4 + v67);
    char v69 = (uint64_t *)((char *)a2 + v67);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v70 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
    }
    else
    {
      *uint64_t v68 = *v69;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = a3[13];
    uint64_t v72 = a3[14];
    uint64_t v73 = (char *)v4 + v71;
    uint64_t v74 = (char *)a2 + v71;
    uint64_t v75 = *(void *)v74;
    LOBYTE(v74) = v74[8];
    *(void *)uint64_t v73 = v75;
    v73[8] = (char)v74;
    uint64_t v76 = (char *)v4 + v72;
    uint64_t v77 = (char *)a2 + v72;
    swift_retain();
    uint64_t v78 = sub_100010218(&qword_1007FD6E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
  }
  return v4;
}

uint64_t sub_10061C070(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for StreakSummary();
  unsigned int v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v28 = *(void *)(v7 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (!v8(v4, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v4, v7);
    }
    uint64_t v9 = v4 + *(int *)(v5 + 20);
    if (!v8(v9, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v9, v7);
    }
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    if (!v8(v10, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v7);
    }
  }
  uint64_t v11 = a1 + a2[6];
  if (!v6(v11, 1, v5))
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v14(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    uint64_t v15 = v11 + *(int *)(v5 + 20);
    if (!v14(v15, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
    }
    uint64_t v16 = v11 + *(int *)(v5 + 24);
    if (!v14(v16, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    }
  }
  uint64_t v17 = a1 + a2[7];
  sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for WidgetFamily();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_100026DF8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v20 = a1 + a2[10];
  sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v22 = a1 + a2[12];
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v24 = a1 + a2[14];
  uint64_t v25 = sub_100010218(&qword_1007FD6E0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);

  return v26(v24, v25);
}

unsigned char *sub_10061C56C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for StreakSummary();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100010218(&qword_100813828);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v82 = v10;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v78 = v11;
    uint64_t v79 = v14;
    if (v81(v8, 1, v13))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v7, v8, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    uint64_t v16 = v9[5];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    if (v81(&v8[v16], 1, v13))
    {
      uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v17, 0, 1, v13);
    }
    uint64_t v20 = v9[6];
    uint64_t v21 = &v7[v20];
    uint64_t v22 = &v8[v20];
    if (v81(&v8[v20], 1, v13))
    {
      uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v21, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v21, 0, 1, v13);
    }
    *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
    uint64_t v10 = v82;
    (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v7, 0, 1, v9);
    uint64_t v11 = v78;
  }
  uint64_t v24 = a3[6];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v11(&a2[v24], 1, v9))
  {
    uint64_t v27 = sub_100010218(&qword_100813828);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v83 = v10;
    uint64_t v28 = type metadata accessor for Date();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    uint64_t v80 = v29;
    if (v30(v26, 1, v28))
    {
      uint64_t v31 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v25, v26, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
    }
    uint64_t v32 = v9[5];
    uint64_t v33 = &v25[v32];
    uint64_t v34 = &v26[v32];
    if (v30(&v26[v32], 1, v28))
    {
      uint64_t v35 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v33, v34, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v33, 0, 1, v28);
    }
    uint64_t v36 = v9[6];
    uint64_t v37 = &v25[v36];
    uint64_t v38 = &v26[v36];
    if (v30(&v26[v36], 1, v28))
    {
      uint64_t v39 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v37, v38, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v37, 0, 1, v28);
    }
    *(void *)&v25[v9[7]] = *(void *)&v26[v9[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v83 + 56))(v25, 0, 1, v9);
  }
  uint64_t v40 = a3[7];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = type metadata accessor for WidgetFamily();
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v44 + 48))(v42, 3, v43))
    {
      uint64_t v45 = type metadata accessor for InsightsFamily();
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 3, v43);
    }
  }
  else
  {
    void *v41 = *v42;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = a3[8];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  uint64_t v49 = *(void *)v48;
  char v50 = v48[8];
  sub_100026CCC(*(void *)v48, v50);
  *(void *)uint64_t v47 = v49;
  v47[8] = v50;
  uint64_t v51 = a3[9];
  char v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = *(void *)v53;
  char v55 = v53[8];
  sub_100026CCC(*(void *)v53, v55);
  *(void *)char v52 = v54;
  v52[8] = v55;
  uint64_t v56 = a3[10];
  char v57 = &a1[v56];
  uint64_t v58 = &a2[v56];
  sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v59 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  }
  else
  {
    *char v57 = *v58;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = a3[11];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = *(void *)v62;
  char v64 = v62[8];
  sub_100026CCC(*(void *)v62, v64);
  *(void *)uint64_t v61 = v63;
  v61[8] = v64;
  uint64_t v65 = a3[12];
  char v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = type metadata accessor for Calendar();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  }
  else
  {
    void *v66 = *v67;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = a3[13];
  uint64_t v70 = a3[14];
  uint64_t v71 = &a1[v69];
  uint64_t v72 = &a2[v69];
  uint64_t v73 = *(void *)v72;
  LOBYTE(v72) = v72[8];
  *(void *)uint64_t v71 = v73;
  v71[8] = (_BYTE)v72;
  uint64_t v74 = &a1[v70];
  uint64_t v75 = &a2[v70];
  swift_retain();
  uint64_t v76 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
  return a1;
}

unsigned char *sub_10061CEC0(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for StreakSummary();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_100625998((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StreakSummary);
      goto LABEL_7;
    }
    uint64_t v139 = v3;
    uint64_t v142 = v11;
    uint64_t v18 = v8;
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v129 = *(void *)(v19 - 8);
    uint64_t v20 = *(uint64_t (**)(void))(v129 + 48);
    int v21 = v20();
    __src = v18;
    uint64_t v130 = v20;
    uint64_t v132 = v19;
    int v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v18, 1, v19);
    uint64_t v136 = v10;
    if (v21)
    {
      if (v22)
      {
        uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
        uint64_t v24 = v18;
        memcpy(v7, v18, *(void *)(*(void *)(v23 - 8) + 64));
        uint64_t v25 = v132;
      }
      else
      {
        uint64_t v24 = v18;
        uint64_t v25 = v132;
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v7, v18, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v7, 0, 1, v132);
      }
    }
    else if (v22)
    {
      uint64_t v25 = v19;
      (*(void (**)(char *, uint64_t))(v129 + 8))(v7, v19);
      uint64_t v35 = sub_100010218((uint64_t *)&unk_1007FC470);
      uint64_t v24 = v18;
      memcpy(v7, v18, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v18;
      uint64_t v25 = v132;
      (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v7, v18, v132);
    }
    uint64_t v11 = v142;
    uint64_t v144 = v9;
    uint64_t v36 = *(int *)(v9 + 20);
    uint64_t v37 = &v7[v36];
    uint64_t v38 = &v24[v36];
    int v39 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(&v7[v36], 1, v25);
    int v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v38, 1, v25);
    if (v39)
    {
      if (v40)
      {
        uint64_t v41 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v132;
      }
      else
      {
        uint64_t v42 = v132;
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v37, v38, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v37, 0, 1, v132);
      }
    }
    else
    {
      uint64_t v42 = v132;
      if (v40)
      {
        (*(void (**)(char *, uint64_t))(v129 + 8))(v37, v132);
        uint64_t v43 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v37, v38, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v37, v38, v132);
      }
    }
    uint64_t v44 = *(int *)(v144 + 24);
    uint64_t v45 = &v7[v44];
    uint64_t v46 = &__src[v44];
    int v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(&v7[v44], 1, v42);
    int v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v46, 1, v42);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v45, v46, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v45, 0, 1, v132);
LABEL_36:
        uint64_t v10 = v136;
        uint64_t v3 = v139;
        uint64_t v9 = v144;
        *(void *)&v7[*(int *)(v144 + 28)] = *(void *)&__src[*(int *)(v144 + 28)];
        goto LABEL_37;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v45, v46, v132);
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v45, v132);
    }
    uint64_t v49 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_36;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v17 = sub_100010218(&qword_100813828);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v135 = v10;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v133 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v131 = v15;
  uint64_t v138 = v3;
  if (v133(v8, 1, v14))
  {
    uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  uint64_t v143 = v9;
  uint64_t v26 = *(int *)(v9 + 20);
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  uint64_t v29 = v133;
  if (v133(&v8[v26], 1, v14))
  {
    uint64_t v30 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v27, v28, v14);
    uint64_t v29 = v133;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v27, 0, 1, v14);
  }
  uint64_t v31 = *(int *)(v143 + 24);
  uint64_t v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  if (v29(&v8[v31], 1, v14))
  {
    uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v32, v33, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v32, 0, 1, v14);
  }
  uint64_t v10 = v135;
  uint64_t v9 = v143;
  *(void *)&v7[*(int *)(v143 + 28)] = *(void *)&v8[*(int *)(v143 + 28)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v7, 0, 1, v143);
  uint64_t v3 = v138;
LABEL_37:
  uint64_t v50 = v3[6];
  uint64_t v51 = &a1[v50];
  char v52 = &a2[v50];
  int v53 = v11(&a1[v50], 1, v9);
  int v54 = v11(v52, 1, v9);
  if (!v53)
  {
    if (v54)
    {
      sub_100625998((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for StreakSummary);
LABEL_43:
      uint64_t v59 = sub_100010218(&qword_100813828);
      memcpy(v51, v52, *(void *)(*(void *)(v59 - 8) + 64));
      if (a1 == a2) {
        goto LABEL_79;
      }
      goto LABEL_73;
    }
    uint64_t v141 = v3;
    uint64_t v60 = type metadata accessor for Date();
    uint64_t v137 = *(void *)(v60 - 8);
    uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v137 + 48);
    int v62 = v61(v51, 1, v60);
    int v63 = v61(v52, 1, v60);
    if (v62)
    {
      if (!v63)
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v51, v52, v60);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v51, 0, 1, v60);
        goto LABEL_60;
      }
    }
    else
    {
      if (!v63)
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 24))(v51, v52, v60);
LABEL_60:
        uint64_t v146 = v9;
        uint64_t v73 = *(int *)(v9 + 20);
        uint64_t v74 = &v51[v73];
        uint64_t v75 = &v52[v73];
        int v76 = v61(&v51[v73], 1, v60);
        int v77 = v61(v75, 1, v60);
        if (v76)
        {
          if (!v77)
          {
            (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v74, v75, v60);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v74, 0, 1, v60);
            goto LABEL_66;
          }
        }
        else
        {
          if (!v77)
          {
            (*(void (**)(char *, char *, uint64_t))(v137 + 24))(v74, v75, v60);
LABEL_66:
            uint64_t v79 = *(int *)(v146 + 24);
            uint64_t v80 = &v51[v79];
            uint64_t v81 = &v52[v79];
            int v82 = v61(&v51[v79], 1, v60);
            int v83 = v61(v81, 1, v60);
            if (v82)
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v80, v81, v60);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v80, 0, 1, v60);
                goto LABEL_72;
              }
            }
            else
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v137 + 24))(v80, v81, v60);
LABEL_72:
                uint64_t v3 = v141;
                *(void *)&v51[*(int *)(v146 + 28)] = *(void *)&v52[*(int *)(v146 + 28)];
                if (a1 == a2) {
                  goto LABEL_79;
                }
                goto LABEL_73;
              }
              (*(void (**)(char *, uint64_t))(v137 + 8))(v80, v60);
            }
            uint64_t v84 = sub_100010218((uint64_t *)&unk_1007FC470);
            memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
            goto LABEL_72;
          }
          (*(void (**)(char *, uint64_t))(v137 + 8))(v74, v60);
        }
        uint64_t v78 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
        goto LABEL_66;
      }
      (*(void (**)(char *, uint64_t))(v137 + 8))(v51, v60);
    }
    uint64_t v72 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v51, v52, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_60;
  }
  if (v54) {
    goto LABEL_43;
  }
  uint64_t v55 = type metadata accessor for Date();
  uint64_t v56 = *(void *)(v55 - 8);
  char v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v140 = v3;
  if (v57(v52, 1, v55))
  {
    uint64_t v58 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v51, v52, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v51, 0, 1, v55);
  }
  uint64_t v145 = v9;
  uint64_t v64 = *(int *)(v9 + 20);
  uint64_t v65 = &v51[v64];
  char v66 = &v52[v64];
  if (v57(&v52[v64], 1, v55))
  {
    uint64_t v67 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v65, v66, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v65, 0, 1, v55);
  }
  uint64_t v68 = *(int *)(v145 + 24);
  uint64_t v69 = &v51[v68];
  uint64_t v70 = &v52[v68];
  if (v57(&v52[v68], 1, v55))
  {
    uint64_t v71 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v69, v70, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v69, 0, 1, v55);
  }
  *(void *)&v51[*(int *)(v145 + 28)] = *(void *)&v52[*(int *)(v145 + 28)];
  (*(void (**)(char *, void, uint64_t))(v10 + 56))(v51, 0, 1);
  uint64_t v3 = v140;
  if (a1 != a2)
  {
LABEL_73:
    uint64_t v85 = v3[7];
    uint64_t v86 = &a1[v85];
    uint64_t v87 = &a2[v85];
    sub_10001457C((uint64_t)&a1[v85], &qword_100813370);
    sub_100010218(&qword_100813370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v88 = type metadata accessor for WidgetFamily();
      uint64_t v89 = *(void *)(v88 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v89 + 48))(v87, 3, v88))
      {
        uint64_t v90 = type metadata accessor for InsightsFamily();
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v89 + 16))(v86, v87, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 3, v88);
      }
    }
    else
    {
      *uint64_t v86 = *v87;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_79:
  uint64_t v91 = v3[8];
  uint64_t v92 = &a1[v91];
  uint64_t v93 = &a2[v91];
  uint64_t v94 = *(void *)v93;
  char v95 = v93[8];
  sub_100026CCC(*(void *)v93, v95);
  uint64_t v96 = *(void *)v92;
  char v97 = v92[8];
  *(void *)uint64_t v92 = v94;
  v92[8] = v95;
  sub_100026DF8(v96, v97);
  uint64_t v98 = v3[9];
  uint64_t v99 = &a1[v98];
  uint64_t v100 = &a2[v98];
  uint64_t v101 = *(void *)v100;
  char v102 = v100[8];
  sub_100026CCC(*(void *)v100, v102);
  uint64_t v103 = *(void *)v99;
  char v104 = v99[8];
  *(void *)uint64_t v99 = v101;
  v99[8] = v102;
  sub_100026DF8(v103, v104);
  if (a1 != a2)
  {
    uint64_t v105 = v3[10];
    long long v106 = &a1[v105];
    long long v107 = &a2[v105];
    sub_10001457C((uint64_t)&a1[v105], &qword_1008156E0);
    sub_100010218(&qword_1008156E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v108 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
    }
    else
    {
      *long long v106 = *v107;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v109 = v3[11];
  long long v110 = &a1[v109];
  long long v111 = &a2[v109];
  uint64_t v112 = *(void *)v111;
  char v113 = v111[8];
  sub_100026CCC(*(void *)v111, v113);
  uint64_t v114 = *(void *)v110;
  char v115 = v110[8];
  *(void *)long long v110 = v112;
  v110[8] = v113;
  sub_100026DF8(v114, v115);
  if (a1 != a2)
  {
    uint64_t v116 = v3[12];
    uint64_t v117 = &a1[v116];
    uint64_t v118 = &a2[v116];
    sub_10001457C((uint64_t)&a1[v116], &qword_1007F9480);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v119 = type metadata accessor for Calendar();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
    }
    else
    {
      *uint64_t v117 = *v118;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v120 = v3[13];
  uint64_t v121 = &a1[v120];
  uint64_t v122 = &a2[v120];
  uint64_t v123 = *(void *)v122;
  LOBYTE(v122) = v122[8];
  *(void *)uint64_t v121 = v123;
  v121[8] = (_BYTE)v122;
  swift_retain();
  swift_release();
  uint64_t v124 = v3[14];
  uint64_t v125 = &a1[v124];
  uint64_t v126 = &a2[v124];
  uint64_t v127 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v127 - 8) + 24))(v125, v126, v127);
  return a1;
}

unsigned char *sub_10061E0CC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for StreakSummary();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(unsigned int (**)(void, void, void))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100010218(&qword_100813828);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v78 = v10;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    int v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v74 = v11;
    uint64_t v75 = v14;
    if (v77(v8, 1, v13))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v7, v8, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    uint64_t v16 = v9[5];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    if (v77(&v8[v16], 1, v13))
    {
      uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v17, 0, 1, v13);
    }
    uint64_t v20 = v9[6];
    int v21 = &v7[v20];
    int v22 = &v8[v20];
    if (v77(&v8[v20], 1, v13))
    {
      uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v21, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v21, 0, 1, v13);
    }
    *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
    uint64_t v10 = v78;
    (*(void (**)(char *, void, uint64_t, int *))(v78 + 56))(v7, 0, 1, v9);
    uint64_t v11 = v74;
  }
  uint64_t v24 = a3[6];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v11(&a2[v24], 1, v9))
  {
    uint64_t v27 = sub_100010218(&qword_100813828);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v79 = v10;
    uint64_t v28 = type metadata accessor for Date();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    uint64_t v76 = v29;
    if (v30(v26, 1, v28))
    {
      uint64_t v31 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v25, v26, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
    }
    uint64_t v32 = v9[5];
    uint64_t v33 = &v25[v32];
    uint64_t v34 = &v26[v32];
    if (v30(&v26[v32], 1, v28))
    {
      uint64_t v35 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v33, v34, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v33, 0, 1, v28);
    }
    uint64_t v36 = v9[6];
    uint64_t v37 = &v25[v36];
    uint64_t v38 = &v26[v36];
    if (v30(&v26[v36], 1, v28))
    {
      uint64_t v39 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v37, v38, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v37, 0, 1, v28);
    }
    *(void *)&v25[v9[7]] = *(void *)&v26[v9[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v25, 0, 1, v9);
  }
  uint64_t v40 = a3[7];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = sub_100010218(&qword_100813370);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = type metadata accessor for WidgetFamily();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v45 + 48))(v42, 3, v44))
    {
      uint64_t v46 = type metadata accessor for InsightsFamily();
      memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 32))(v41, v42, v44);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v45 + 56))(v41, 0, 3, v44);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  uint64_t v47 = a3[8];
  uint64_t v48 = a3[9];
  uint64_t v49 = &a1[v47];
  uint64_t v50 = &a2[v47];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = &a1[v48];
  char v52 = &a2[v48];
  *(void *)uint64_t v51 = *(void *)v52;
  v51[8] = v52[8];
  uint64_t v53 = a3[10];
  int v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = sub_100010218(&qword_1008156E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = type metadata accessor for RedactionReasons();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 32))(v54, v55, v57);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  uint64_t v58 = a3[11];
  uint64_t v59 = a3[12];
  uint64_t v60 = &a1[v58];
  uint64_t v61 = &a2[v58];
  *(void *)uint64_t v60 = *(void *)v61;
  v60[8] = v61[8];
  int v62 = &a1[v59];
  int v63 = &a2[v59];
  uint64_t v64 = sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v65 = type metadata accessor for Calendar();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 32))(v62, v63, v65);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  uint64_t v66 = a3[13];
  uint64_t v67 = a3[14];
  uint64_t v68 = &a1[v66];
  uint64_t v69 = &a2[v66];
  *(void *)uint64_t v68 = *(void *)v69;
  v68[8] = v69[8];
  uint64_t v70 = &a1[v67];
  uint64_t v71 = &a2[v67];
  uint64_t v72 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
  return a1;
}

unsigned char *sub_10061EA20(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for StreakSummary();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_100625998((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StreakSummary);
      goto LABEL_7;
    }
    uint64_t v139 = v3;
    uint64_t v142 = v11;
    uint64_t v18 = v8;
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v129 = *(void *)(v19 - 8);
    uint64_t v20 = *(uint64_t (**)(void))(v129 + 48);
    int v21 = v20();
    __src = v18;
    uint64_t v130 = v20;
    uint64_t v132 = v19;
    int v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v18, 1, v19);
    uint64_t v136 = v10;
    if (v21)
    {
      if (v22)
      {
        uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
        uint64_t v24 = v18;
        memcpy(v7, v18, *(void *)(*(void *)(v23 - 8) + 64));
        uint64_t v25 = v132;
      }
      else
      {
        uint64_t v24 = v18;
        uint64_t v25 = v132;
        (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v7, v18, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v7, 0, 1, v132);
      }
    }
    else if (v22)
    {
      uint64_t v25 = v19;
      (*(void (**)(char *, uint64_t))(v129 + 8))(v7, v19);
      uint64_t v35 = sub_100010218((uint64_t *)&unk_1007FC470);
      uint64_t v24 = v18;
      memcpy(v7, v18, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v18;
      uint64_t v25 = v132;
      (*(void (**)(char *, char *, uint64_t))(v129 + 40))(v7, v18, v132);
    }
    uint64_t v11 = v142;
    uint64_t v144 = v9;
    uint64_t v36 = *(int *)(v9 + 20);
    uint64_t v37 = &v7[v36];
    uint64_t v38 = &v24[v36];
    int v39 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(&v7[v36], 1, v25);
    int v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v38, 1, v25);
    if (v39)
    {
      if (v40)
      {
        uint64_t v41 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v132;
      }
      else
      {
        uint64_t v42 = v132;
        (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v37, v38, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v37, 0, 1, v132);
      }
    }
    else
    {
      uint64_t v42 = v132;
      if (v40)
      {
        (*(void (**)(char *, uint64_t))(v129 + 8))(v37, v132);
        uint64_t v43 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v37, v38, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 40))(v37, v38, v132);
      }
    }
    uint64_t v44 = *(int *)(v144 + 24);
    uint64_t v45 = &v7[v44];
    uint64_t v46 = &__src[v44];
    int v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(&v7[v44], 1, v42);
    int v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v130)(v46, 1, v42);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v45, v46, v132);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56))(v45, 0, 1, v132);
LABEL_36:
        uint64_t v10 = v136;
        uint64_t v3 = v139;
        uint64_t v9 = v144;
        *(void *)&v7[*(int *)(v144 + 28)] = *(void *)&__src[*(int *)(v144 + 28)];
        goto LABEL_37;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 40))(v45, v46, v132);
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v45, v132);
    }
    uint64_t v49 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_36;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v17 = sub_100010218(&qword_100813828);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v135 = v10;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v133 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v131 = v15;
  uint64_t v138 = v3;
  if (v133(v8, 1, v14))
  {
    uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  uint64_t v143 = v9;
  uint64_t v26 = *(int *)(v9 + 20);
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  uint64_t v29 = v133;
  if (v133(&v8[v26], 1, v14))
  {
    uint64_t v30 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v27, v28, v14);
    uint64_t v29 = v133;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v27, 0, 1, v14);
  }
  uint64_t v31 = *(int *)(v143 + 24);
  uint64_t v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  if (v29(&v8[v31], 1, v14))
  {
    uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v32, v33, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v32, 0, 1, v14);
  }
  uint64_t v10 = v135;
  uint64_t v9 = v143;
  *(void *)&v7[*(int *)(v143 + 28)] = *(void *)&v8[*(int *)(v143 + 28)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v7, 0, 1, v143);
  uint64_t v3 = v138;
LABEL_37:
  uint64_t v50 = v3[6];
  uint64_t v51 = &a1[v50];
  char v52 = &a2[v50];
  int v53 = v11(&a1[v50], 1, v9);
  int v54 = v11(v52, 1, v9);
  if (!v53)
  {
    if (v54)
    {
      sub_100625998((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for StreakSummary);
LABEL_43:
      uint64_t v59 = sub_100010218(&qword_100813828);
      memcpy(v51, v52, *(void *)(*(void *)(v59 - 8) + 64));
      if (a1 == a2) {
        goto LABEL_79;
      }
      goto LABEL_73;
    }
    uint64_t v141 = v3;
    uint64_t v60 = type metadata accessor for Date();
    uint64_t v137 = *(void *)(v60 - 8);
    uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v137 + 48);
    int v62 = v61(v51, 1, v60);
    int v63 = v61(v52, 1, v60);
    if (v62)
    {
      if (!v63)
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v51, v52, v60);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v51, 0, 1, v60);
        goto LABEL_60;
      }
    }
    else
    {
      if (!v63)
      {
        (*(void (**)(char *, char *, uint64_t))(v137 + 40))(v51, v52, v60);
LABEL_60:
        uint64_t v146 = v9;
        uint64_t v73 = *(int *)(v9 + 20);
        uint64_t v74 = &v51[v73];
        uint64_t v75 = &v52[v73];
        int v76 = v61(&v51[v73], 1, v60);
        int v77 = v61(v75, 1, v60);
        if (v76)
        {
          if (!v77)
          {
            (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v74, v75, v60);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v74, 0, 1, v60);
            goto LABEL_66;
          }
        }
        else
        {
          if (!v77)
          {
            (*(void (**)(char *, char *, uint64_t))(v137 + 40))(v74, v75, v60);
LABEL_66:
            uint64_t v79 = *(int *)(v146 + 24);
            uint64_t v80 = &v51[v79];
            uint64_t v81 = &v52[v79];
            int v82 = v61(&v51[v79], 1, v60);
            int v83 = v61(v81, 1, v60);
            if (v82)
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v80, v81, v60);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v80, 0, 1, v60);
                goto LABEL_72;
              }
            }
            else
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v137 + 40))(v80, v81, v60);
LABEL_72:
                uint64_t v3 = v141;
                *(void *)&v51[*(int *)(v146 + 28)] = *(void *)&v52[*(int *)(v146 + 28)];
                if (a1 == a2) {
                  goto LABEL_79;
                }
                goto LABEL_73;
              }
              (*(void (**)(char *, uint64_t))(v137 + 8))(v80, v60);
            }
            uint64_t v84 = sub_100010218((uint64_t *)&unk_1007FC470);
            memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
            goto LABEL_72;
          }
          (*(void (**)(char *, uint64_t))(v137 + 8))(v74, v60);
        }
        uint64_t v78 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
        goto LABEL_66;
      }
      (*(void (**)(char *, uint64_t))(v137 + 8))(v51, v60);
    }
    uint64_t v72 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v51, v52, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_60;
  }
  if (v54) {
    goto LABEL_43;
  }
  uint64_t v55 = type metadata accessor for Date();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v140 = v3;
  if (v57(v52, 1, v55))
  {
    uint64_t v58 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v51, v52, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v51, 0, 1, v55);
  }
  uint64_t v145 = v9;
  uint64_t v64 = *(int *)(v9 + 20);
  uint64_t v65 = &v51[v64];
  uint64_t v66 = &v52[v64];
  if (v57(&v52[v64], 1, v55))
  {
    uint64_t v67 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v65, v66, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v65, 0, 1, v55);
  }
  uint64_t v68 = *(int *)(v145 + 24);
  uint64_t v69 = &v51[v68];
  uint64_t v70 = &v52[v68];
  if (v57(&v52[v68], 1, v55))
  {
    uint64_t v71 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v69, v70, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v69, 0, 1, v55);
  }
  *(void *)&v51[*(int *)(v145 + 28)] = *(void *)&v52[*(int *)(v145 + 28)];
  (*(void (**)(char *, void, uint64_t))(v10 + 56))(v51, 0, 1);
  uint64_t v3 = v140;
  if (a1 != a2)
  {
LABEL_73:
    uint64_t v85 = v3[7];
    uint64_t v86 = &a1[v85];
    uint64_t v87 = &a2[v85];
    sub_10001457C((uint64_t)&a1[v85], &qword_100813370);
    uint64_t v88 = sub_100010218(&qword_100813370);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v89 = type metadata accessor for WidgetFamily();
      uint64_t v90 = *(void *)(v89 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v90 + 48))(v87, 3, v89))
      {
        uint64_t v91 = type metadata accessor for InsightsFamily();
        memcpy(v86, v87, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v90 + 32))(v86, v87, v89);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v90 + 56))(v86, 0, 3, v89);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
    }
  }
LABEL_79:
  uint64_t v92 = v3[8];
  uint64_t v93 = &a1[v92];
  uint64_t v94 = &a2[v92];
  uint64_t v95 = *(void *)v94;
  LOBYTE(v94) = v94[8];
  uint64_t v96 = *(void *)v93;
  char v97 = v93[8];
  *(void *)uint64_t v93 = v95;
  v93[8] = (_BYTE)v94;
  sub_100026DF8(v96, v97);
  uint64_t v98 = v3[9];
  uint64_t v99 = &a1[v98];
  uint64_t v100 = &a2[v98];
  uint64_t v101 = *(void *)v100;
  LOBYTE(v100) = v100[8];
  uint64_t v102 = *(void *)v99;
  char v103 = v99[8];
  *(void *)uint64_t v99 = v101;
  v99[8] = (_BYTE)v100;
  sub_100026DF8(v102, v103);
  if (a1 != a2)
  {
    uint64_t v104 = v3[10];
    uint64_t v105 = &a1[v104];
    long long v106 = &a2[v104];
    sub_10001457C((uint64_t)&a1[v104], &qword_1008156E0);
    uint64_t v107 = sub_100010218(&qword_1008156E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v108 = type metadata accessor for RedactionReasons();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v108 - 8) + 32))(v105, v106, v108);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
    }
  }
  uint64_t v109 = v3[11];
  long long v110 = &a1[v109];
  long long v111 = &a2[v109];
  uint64_t v112 = *(void *)v111;
  LOBYTE(v111) = v111[8];
  uint64_t v113 = *(void *)v110;
  char v114 = v110[8];
  *(void *)long long v110 = v112;
  v110[8] = (_BYTE)v111;
  sub_100026DF8(v113, v114);
  if (a1 != a2)
  {
    uint64_t v115 = v3[12];
    uint64_t v116 = &a1[v115];
    uint64_t v117 = &a2[v115];
    sub_10001457C((uint64_t)&a1[v115], &qword_1007F9480);
    uint64_t v118 = sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v119 = type metadata accessor for Calendar();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v119 - 8) + 32))(v116, v117, v119);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
    }
  }
  uint64_t v120 = v3[13];
  uint64_t v121 = &a1[v120];
  uint64_t v122 = &a2[v120];
  uint64_t v123 = *(void *)v122;
  LOBYTE(v122) = v122[8];
  *(void *)uint64_t v121 = v123;
  v121[8] = (_BYTE)v122;
  swift_release();
  uint64_t v124 = v3[14];
  uint64_t v125 = &a1[v124];
  uint64_t v126 = &a2[v124];
  uint64_t v127 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v127 - 8) + 40))(v125, v126, v127);
  return a1;
}

uint64_t sub_10061FC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10061FC44);
}

uint64_t sub_10061FC44(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_100010218(&qword_100813828);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48);
    return v15(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_100010218(&qword_100813830);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_13;
  }
  uint64_t v13 = sub_100010218(&qword_100813838);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_13;
  }
  uint64_t v14 = sub_100010218(&qword_1008155B0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_13;
  }
  uint64_t v16 = sub_100010218(&qword_1007FD6E0);
  uint64_t v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = &a1[a3[14]];

  return v17(v19, a2, v18);
}

uint64_t sub_10061FE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10061FE74);
}

unsigned char *sub_10061FE74(unsigned char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
    return result;
  }
  uint64_t v8 = sub_100010218(&qword_100813828);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_11:
    uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (unsigned char *)v15(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_100010218(&qword_100813830);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_11;
  }
  uint64_t v13 = sub_100010218(&qword_100813838);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_11;
  }
  uint64_t v14 = sub_100010218(&qword_1008155B0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_11;
  }
  uint64_t v16 = sub_100010218(&qword_1007FD6E0);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = &v5[a4[14]];

  return (unsigned char *)v17(v19, a2, a2, v18);
}

void sub_100620094()
{
  sub_1006202E8(319, &qword_1008138A8, (uint64_t (*)(uint64_t))type metadata accessor for StreakSummary, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_1006202E8(319, &qword_1008138B0, (uint64_t (*)(uint64_t))type metadata accessor for InsightsFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1006202E8(319, (unint64_t *)&unk_1008138B8, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_1006202E8(319, (unint64_t *)&qword_1007F94F8, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F)
        {
          sub_1000DA7E0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1006202E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10062034C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  int v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ColorResource();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FF230);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100010218(&qword_100814120);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100814128);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100010218(&qword_100814130);
  __chkstk_darwin(v39);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = static HorizontalAlignment.leading.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v20 = sub_100010218(&qword_100814138);
  sub_100620864(v2, (uint64_t)&v13[*(int *)(v20 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v13, (uint64_t)v17, &qword_100814120);
  int v22 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  *int v22 = KeyPath;
  v22[1] = 0x3FB999999999999ALL;
  sub_10001457C((uint64_t)v13, &qword_100814120);
  uint64_t v23 = static Alignment.center.getter();
  uint64_t v36 = v24;
  uint64_t v37 = v23;
  if (qword_1007F7FA8 != -1) {
    swift_once();
  }
  uint64_t v25 = v38;
  uint64_t v26 = sub_100026A54(v38, (uint64_t)qword_10083F018);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v26, v25);
  uint64_t v27 = Color.init(_:)();
  uint64_t v28 = (char *)v10 + *(int *)(v8 + 36);
  uint64_t v29 = enum case for BlendMode.normal(_:);
  uint64_t v30 = type metadata accessor for BlendMode();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104);
  v31(v28, v29, v30);
  v31((char *)v10 + *(int *)(v8 + 40), enum case for BlendMode.plusLighter(_:), v30);
  *uint64_t v10 = v27;
  sub_100014488((unint64_t *)&unk_100802710, &qword_1007FF230);
  uint64_t v32 = AnyShapeStyle.init<A>(_:)();
  uint64_t v44 = v37;
  uint64_t v45 = v36;
  uint64_t v46 = 0x403E000000000000;
  char v47 = 1;
  uint64_t v48 = v32;
  __int16 v49 = 256;
  sub_100010218(&qword_100814140);
  sub_100014488(&qword_100814148, &qword_100814140);
  uint64_t v33 = AnyView.init<A>(_:)();
  sub_10001B220((uint64_t)v17, (uint64_t)v19, &qword_100814128);
  *(void *)&v19[*(int *)(v39 + 36)] = v33;
  sub_10001457C((uint64_t)v17, &qword_100814128);
  uint64_t v34 = v40;
  static AccessibilityChildBehavior.combine.getter();
  sub_100625484();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v43);
  return sub_10001457C((uint64_t)v19, &qword_100814130);
}

uint64_t sub_100620864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v3 = sub_100010218(&qword_100814168);
  __chkstk_darwin(v3 - 8);
  uint64_t v81 = (uint64_t *)((char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v101 = sub_100010218(&qword_100814170);
  uint64_t v99 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v80 = (uint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100814178);
  __chkstk_darwin(v6 - 8);
  uint64_t v102 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v100 = (char *)&v80 - v9;
  uint64_t v95 = sub_100010218(&qword_100801900);
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v91 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100801908);
  __chkstk_darwin(v11 - 8);
  uint64_t v90 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100010218(&qword_100814180);
  __chkstk_darwin(v86);
  uint64_t v82 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for AttributedString();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100010218(&qword_100814188);
  __chkstk_darwin(v83);
  uint64_t v94 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100010218(&qword_100814190);
  __chkstk_darwin(v92);
  uint64_t v98 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v89 = (uint64_t)&v80 - v18;
  __chkstk_darwin(v19);
  uint64_t v97 = (uint64_t)&v80 - v20;
  uint64_t v104 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v104);
  int v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for InsightsPreviousStreakView();
  __chkstk_darwin(v23);
  uint64_t v25 = (unsigned __int8 *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100010218(&qword_100813828);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for StreakSummary();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v80 - v34;
  sub_10001B220(a1 + *(int *)(v23 + 20), (uint64_t)v28, &qword_100813828);
  uint64_t v96 = a1;
  sub_100625930(a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  uint64_t v84 = v23;
  if (v36 == 1)
  {
    char v37 = v25[*(int *)(v23 + 52) + 8];
    uint64_t v38 = swift_retain();
    uint64_t v39 = sub_100666C70(v38, v37);
    swift_release();
    swift_getKeyPath();
    uint64_t v106 = v39;
    sub_1006258E8((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v40 = v39 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    sub_100625930(v40, (uint64_t)v22, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    LODWORD(v40) = *v25;
    sub_100625998((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    uint64_t v41 = 32;
    if (v40) {
      uint64_t v41 = 36;
    }
    sub_100625930((uint64_t)&v22[*(int *)(v104 + v41)], (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    sub_1002376B4((uint64_t)v32, (uint64_t)v35);
    sub_100625998((uint64_t)v22, type metadata accessor for InsightsDataManager.Streaks);
    sub_10001457C((uint64_t)v28, &qword_100813828);
  }
  else
  {
    sub_100625998((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    sub_1002376B4((uint64_t)v28, (uint64_t)v35);
  }
  uint64_t v42 = (uint64_t)v35;
  uint64_t v43 = v85;
  uint64_t v44 = v96;
  uint64_t v45 = sub_1006214AC();
  __chkstk_darwin(v45);
  uint64_t v104 = v42;
  __chkstk_darwin(v46);
  sub_100010218(&qword_100800670);
  sub_100010218(&qword_100814198);
  sub_10017AA64();
  sub_100625600();
  char v47 = v91;
  LabeledContent<>.init(content:label:)();
  uint64_t v48 = static Alignment.center.getter();
  uint64_t v49 = v90;
  double v51 = sub_1001A46E4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v90, 0.0, 1, INFINITY, 0, v48, v50);
  (*(void (**)(char *, uint64_t, double))(v93 + 8))(v47, v95, v51);
  uint64_t v52 = v82;
  sub_10001B220(v49, v82, &qword_100801908);
  uint64_t v53 = v52 + *(int *)(v86 + 36);
  *(void *)uint64_t v53 = 0x3FFD333333333333;
  *(_WORD *)(v53 + 8) = 0;
  sub_10001457C(v49, &qword_100801908);
  uint64_t v54 = v94;
  sub_10001B220(v52, v94, &qword_100814180);
  *(void *)(v54 + *(int *)(v83 + 36)) = 0x4000000000000000;
  sub_10001457C(v52, &qword_100814180);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v43, v88);
  uint64_t v55 = sub_100621754();
  uint64_t KeyPath = swift_getKeyPath();
  if (v55)
  {
    uint64_t v105 = v55;
    swift_retain();
    uint64_t v57 = AnyShapeStyle.init<A>(_:)();
  }
  else
  {
    uint64_t v57 = 0;
  }
  uint64_t v58 = (uint64_t)v100;
  uint64_t v59 = v84;
  uint64_t v60 = v89;
  sub_10001B220(v54, v89, &qword_100814188);
  swift_release();
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v92 + 36));
  *uint64_t v61 = KeyPath;
  v61[1] = v57;
  sub_10001457C(v54, &qword_100814188);
  uint64_t v62 = v60;
  uint64_t v63 = v97;
  sub_10002C4EC(v62, v97, &qword_100814190);
  uint64_t v64 = v44 + *(int *)(v59 + 32);
  uint64_t v65 = *(void *)v64;
  char v66 = *(unsigned char *)(v64 + 8);
  sub_100026CCC(*(void *)v64, v66);
  char v67 = sub_100666714(v65, v66);
  sub_100026DF8(v65, v66);
  if (v67)
  {
    uint64_t v68 = static HorizontalAlignment.leading.getter();
    uint64_t v69 = (uint64_t)v81;
    *uint64_t v81 = v68;
    *(void *)(v69 + 8) = 0;
    *(unsigned char *)(v69 + 16) = 0;
    uint64_t v70 = sub_100010218(&qword_1008141E0);
    sub_100621914(v44, (uint64_t *)(v69 + *(int *)(v70 + 44)));
    if (qword_1007F6BE0 != -1) {
      swift_once();
    }
    uint64_t v71 = qword_10083D1D8;
    uint64_t v72 = v80;
    sub_10001B220(v69, v80, &qword_100814168);
    uint64_t v73 = v101;
    *(void *)(v72 + *(int *)(v101 + 36)) = v71;
    swift_retain();
    sub_10001457C(v69, &qword_100814168);
    sub_10002C4EC(v72, v58, &qword_100814170);
    uint64_t v74 = 0;
  }
  else
  {
    uint64_t v74 = 1;
    uint64_t v73 = v101;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v58, v74, 1, v73);
  uint64_t v75 = v98;
  sub_10001B220(v63, v98, &qword_100814190);
  uint64_t v76 = v102;
  sub_10001B220(v58, v102, &qword_100814178);
  uint64_t v77 = v103;
  sub_10001B220(v75, v103, &qword_100814190);
  uint64_t v78 = sub_100010218(&qword_1008141D8);
  sub_10001B220(v76, v77 + *(int *)(v78 + 48), &qword_100814178);
  sub_10001457C(v58, &qword_100814178);
  sub_10001457C(v63, &qword_100814190);
  sub_100625998(v104, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  sub_10001457C(v76, &qword_100814178);
  return sub_10001457C(v75, &qword_100814190);
}

uint64_t sub_1006214AC()
{
  uint64_t v0 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  swift_getKeyPath();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1006258E8(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100179988();
  return AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
}

uint64_t sub_100621754()
{
  uint64_t v1 = type metadata accessor for ColorResource();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[*(int *)(type metadata accessor for InsightsPreviousStreakView() + 44)];
  uint64_t v6 = *(void *)v5;
  char v7 = v5[8];
  sub_100026CCC(*(void *)v5, v7);
  char v8 = sub_100666714(v6, v7);
  sub_100026DF8(v6, v7);
  uint64_t result = 0;
  if (v8)
  {
    if (*v0)
    {
      if (qword_1007F7F70 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_10083EF70;
    }
    else
    {
      if (qword_1007F7F78 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_10083EF88;
    }
    uint64_t v11 = sub_100026A54(v1, (uint64_t)v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
    v12[1] = Color.init(_:)();
    return AnyShapeStyle.init<A>(_:)();
  }
  return result;
}

uint64_t sub_100621914@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v111 = sub_100010218(&qword_100801900);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_100801908);
  __chkstk_darwin(v4 - 8);
  uint64_t v108 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100010218(&qword_100814180);
  __chkstk_darwin(v102);
  uint64_t v107 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for AttributedString();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v100 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100010218(&qword_100814188);
  __chkstk_darwin(v98);
  uint64_t v101 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100010218(&qword_1008141E8);
  __chkstk_darwin(v99);
  uint64_t v118 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v117 = (uint64_t)&v84 - v11;
  uint64_t v86 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v86);
  uint64_t v87 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for InsightsPreviousStreakView();
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100813828);
  __chkstk_darwin(v14 - 8);
  uint64_t v89 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for StreakSummary();
  uint64_t v88 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v85 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v123 = (uint64_t)&v84 - v18;
  uint64_t v19 = sub_100010218(&qword_10080AA58);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Divider();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100010218(&qword_1008141F0);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v84 - v31;
  uint64_t v33 = a1;
  sub_100622918((uint64_t)&v124);
  uint64_t v105 = v124;
  uint64_t v114 = v125;
  uint64_t v113 = v126;
  uint64_t v122 = v127;
  int v121 = v128;
  int v97 = v129;
  uint64_t v115 = v130;
  uint64_t v119 = v131;
  uint64_t v120 = v132;
  uint64_t v96 = v133;
  int v95 = v134;
  uint64_t v94 = v135;
  int v93 = v136;
  Divider.init()();
  uint64_t KeyPath = swift_getKeyPath();
  static Material.ultraThin.getter();
  uint64_t v35 = type metadata accessor for Material();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v21, 0, 1, v35);
  int v36 = (uint64_t *)&v29[*(int *)(v27 + 44)];
  uint64_t v37 = sub_100010218(&qword_100813C78);
  sub_10001B220((uint64_t)v21, (uint64_t)v36 + *(int *)(v37 + 28), &qword_10080AA58);
  *int v36 = KeyPath;
  uint64_t v38 = v91;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v29, v25, v22);
  uint64_t v39 = (uint64_t)v21;
  uint64_t v40 = (unsigned __int8 *)v90;
  sub_10001457C(v39, &qword_10080AA58);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v116 = v29;
  uint64_t v112 = v32;
  sub_10002C4EC((uint64_t)v29, (uint64_t)v32, &qword_1008141F0);
  uint64_t v41 = v33;
  uint64_t v42 = v89;
  sub_10001B220(v41 + *(int *)(v38 + 24), v89, &qword_100813828);
  sub_100625930(v41, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v42, 1, v92) == 1)
  {
    char v43 = v40[*(int *)(v38 + 52) + 8];
    uint64_t v44 = swift_retain();
    uint64_t v45 = sub_100666C70(v44, v43);
    swift_release();
    swift_getKeyPath();
    uint64_t v124 = v45;
    sub_1006258E8((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v46 = v45 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    uint64_t v47 = v46;
    uint64_t v48 = v87;
    sub_100625930(v47, v87, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    LODWORD(v45) = *v40;
    sub_100625998((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    uint64_t v49 = 24;
    if (v45) {
      uint64_t v49 = 28;
    }
    uint64_t v50 = v85;
    sub_100625930(v48 + *(int *)(v86 + v49), v85, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    sub_1002376B4(v50, v123);
    sub_100625998(v48, type metadata accessor for InsightsDataManager.Streaks);
    sub_10001457C(v42, &qword_100813828);
  }
  else
  {
    sub_100625998((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    sub_1002376B4(v42, v123);
  }
  uint64_t v51 = v100;
  uint64_t v52 = sub_100622AC8(v100);
  __chkstk_darwin(v52);
  __chkstk_darwin(v53);
  sub_100010218(&qword_100800670);
  sub_100010218(&qword_100814198);
  sub_10017AA64();
  sub_100625600();
  uint64_t v54 = v109;
  LabeledContent<>.init(content:label:)();
  uint64_t v55 = static Alignment.center.getter();
  uint64_t v56 = v108;
  double v58 = sub_1001A46E4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v108, 0.0, 1, INFINITY, 0, v55, v57);
  (*(void (**)(char *, uint64_t, double))(v110 + 8))(v54, v111, v58);
  uint64_t v59 = v107;
  sub_10001B220(v56, v107, &qword_100801908);
  uint64_t v60 = v59 + *(int *)(v102 + 36);
  *(void *)uint64_t v60 = 0x3FFD333333333333;
  *(_WORD *)(v60 + 8) = 0;
  sub_10001457C(v56, &qword_100801908);
  uint64_t v61 = v101;
  sub_10001B220(v59, v101, &qword_100814180);
  *(void *)(v61 + *(int *)(v98 + 36)) = 0x4000000000000000;
  sub_10001457C(v59, &qword_100814180);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v51, v104);
  uint64_t v62 = static Color.secondary.getter();
  uint64_t v63 = swift_getKeyPath();
  uint64_t v64 = v118;
  sub_10001B220(v61, v118, &qword_100814188);
  uint64_t v65 = (uint64_t *)(v64 + *(int *)(v99 + 36));
  uint64_t *v65 = v63;
  v65[1] = v62;
  sub_10001457C(v61, &qword_100814188);
  uint64_t v66 = v117;
  sub_10002C4EC(v64, v117, &qword_1008141E8);
  sub_100622918((uint64_t)&v124);
  uint64_t v67 = v125;
  uint64_t v108 = v124;
  uint64_t v68 = v127;
  uint64_t v107 = v126;
  LODWORD(v51) = v128;
  LODWORD(v101) = v129;
  uint64_t v109 = v130;
  uint64_t v110 = v131;
  uint64_t v111 = v132;
  uint64_t v100 = v133;
  LODWORD(v99) = v134;
  uint64_t v98 = v135;
  LODWORD(v92) = v136;
  uint64_t v69 = (uint64_t)v116;
  sub_10001B220((uint64_t)v112, (uint64_t)v116, &qword_1008141F0);
  sub_10001B220(v66, v64, &qword_1008141E8);
  uint64_t v70 = v106;
  uint64_t v71 = v105;
  uint64_t v72 = v114;
  *uint64_t v106 = v105;
  v70[1] = v72;
  uint64_t v73 = v122;
  void v70[2] = v113;
  v70[3] = v73;
  *((unsigned char *)v70 + 32) = v121;
  *((_DWORD *)v70 + 9) = v97;
  uint64_t v74 = v119;
  v70[5] = (uint64_t)v115;
  v70[6] = v74;
  uint64_t v75 = v96;
  v70[7] = v120;
  v70[8] = v75;
  *((unsigned char *)v70 + 72) = v95;
  v70[10] = v94;
  *((unsigned char *)v70 + 88) = v93;
  uint64_t v76 = (int *)sub_100010218(&qword_1008141F8);
  sub_10001B220(v69, (uint64_t)v70 + v76[12], &qword_1008141F0);
  sub_10001B220(v64, (uint64_t)v70 + v76[16], &qword_1008141E8);
  uint64_t v77 = (char *)v70 + v76[20];
  uint64_t v78 = v108;
  *(void *)uint64_t v77 = v108;
  *((void *)v77 + 1) = v67;
  uint64_t v104 = v67;
  LOBYTE(v64) = v107;
  *((void *)v77 + 2) = v107;
  *((void *)v77 + 3) = v68;
  uint64_t v103 = v68;
  LODWORD(v102) = v51;
  v77[32] = v51;
  *((_DWORD *)v77 + 9) = v101;
  uint64_t v79 = v110;
  *((void *)v77 + 5) = v109;
  *((void *)v77 + 6) = v79;
  uint64_t v80 = v100;
  *((void *)v77 + 7) = v111;
  *((void *)v77 + 8) = v80;
  v77[72] = v99;
  *((void *)v77 + 10) = v98;
  v77[88] = v92;
  uint64_t v81 = v72;
  LOBYTE(v72) = v113;
  sub_1000C2148(v71, v81, v113);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000C2148(v78, v67, v64);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v82 = v114;
  sub_1000C2148(v71, v114, v72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001457C(v117, &qword_1008141E8);
  sub_100625998(v123, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  sub_10001457C((uint64_t)v112, &qword_1008141F0);
  sub_1000C2204(v71, v82, v72);
  swift_release();
  swift_release();
  swift_release();
  sub_1000C2204(v108, v104, v107);
  swift_release();
  swift_release();
  swift_release();
  sub_10001457C(v118, &qword_1008141E8);
  sub_10001457C((uint64_t)v116, &qword_1008141F0);
  sub_1000C2204(v71, v82, v72);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100622918@<X0>(uint64_t a1@<X8>)
{
  sub_100624A80(v1, &v18);
  long long v3 = v18;
  uint64_t v4 = v19;
  uint64_t v5 = v20;
  char v6 = v21;
  int v17 = static HierarchicalShapeStyle.secondary.getter();
  sub_1000C2148(v3, *((uint64_t *)&v3 + 1), v4);
  uint64_t v16 = static Font.caption.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = v1 + *(int *)(type metadata accessor for InsightsPreviousStreakView() + 36);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  sub_100026CCC(*(void *)v8, v10);
  char v11 = sub_100666714(v9, v10);
  sub_100026DF8(v9, v10);
  char v15 = v11 & 1;
  if (v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = 4;
  }
  uint64_t v13 = swift_getKeyPath();
  sub_1000C2148(v3, *((uint64_t *)&v3 + 1), v4);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000C2204(v3, *((uint64_t *)&v3 + 1), v4);
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 36) = v17;
  *(void *)(a1 + 40) = KeyPath;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  sub_1000C2204(v3, *((uint64_t *)&v3 + 1), v4);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100622AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v35 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  int v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v8);
  uint64_t v34 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StreakSummary();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = type metadata accessor for InsightsPreviousStreakView();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100010218(&qword_100813828);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(v2 + *(int *)(v17 + 24), (uint64_t)v22, &qword_100813828);
  LODWORD(v11) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v22, 1, v10);
  sub_10001457C((uint64_t)v22, &qword_100813828);
  sub_100625930(v2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
  if (v11 == 1)
  {
    uint64_t v33 = v16;
    char v23 = v19[*(int *)(v17 + 52) + 8];
    uint64_t v24 = swift_retain();
    uint64_t v25 = sub_100666C70(v24, v23);
    swift_release();
    swift_getKeyPath();
    uint64_t v40 = v25;
    sub_1006258E8((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v26 = v25 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    uint64_t v27 = v34;
    sub_100625930(v26, v34, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    uint64_t v28 = v27;
    if (*v19 == 1) {
      uint64_t v28 = v27 + *(int *)(v8 + 20);
    }
    sub_100625930(v28, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v29 = (uint64_t)v33;
    sub_1002376B4((uint64_t)v13, (uint64_t)v33);
    sub_100625998(v27, type metadata accessor for InsightsDataManager.Streaks);
    sub_100625998((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    sub_100625998(v29, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    uint64_t v30 = v37;
  }
  else
  {
    sub_100625998((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for InsightsPreviousStreakView);
    uint64_t v30 = v37;
  }
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v31 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  swift_getKeyPath();
  uint64_t v41 = _swiftEmptyArrayStorage;
  sub_1006258E8(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100179988();
  return AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
}

uint64_t sub_10062317C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v49 = _s19DurationFormatStyleVMa(0);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v6 - 8);
  uint64_t v47 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TintShapeStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_1008141D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_1008141C0);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008141A8);
  __chkstk_darwin(v21);
  char v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100010218(&qword_100814218);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v43 = v24;
  uint64_t v44 = v25;
  __chkstk_darwin(v24);
  uint64_t v41 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v16 = static HorizontalAlignment.trailing.getter();
  *((void *)v16 + 1) = 0x4008000000000000;
  v16[16] = 0;
  uint64_t v27 = sub_100010218(&qword_100814220);
  sub_100623738(a1, a2, (uint64_t)&v16[*(int *)(v27 + 44)]);
  TintShapeStyle.init()();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v20[*(int *)(v18 + 44)], v13, v10);
  sub_10001B220((uint64_t)v16, (uint64_t)v20, &qword_1008141D0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10001457C((uint64_t)v16, &qword_1008141D0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v20, (uint64_t)v23, &qword_1008141C0);
  uint64_t v29 = &v23[*(int *)(v21 + 36)];
  *(void *)uint64_t v29 = KeyPath;
  *((void *)v29 + 1) = 1;
  v29[16] = 0;
  sub_10001457C((uint64_t)v20, &qword_1008141C0);
  uint64_t v30 = v42;
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v31 = sub_1006256E0();
  uint64_t v32 = v41;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v46);
  sub_10001457C((uint64_t)v23, &qword_1008141A8);
  sub_100625930(a2, v47, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  LOBYTE(v23) = *a1;
  uint64_t v33 = v48;
  static Locale.autoupdatingCurrent.getter();
  unsigned char *v33 = (_BYTE)v23;
  sub_1006258E8(&qword_100813A58, (void (*)(uint64_t))_s19DurationFormatStyleVMa);
  sub_1006258E8(&qword_100813A60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
  uint64_t v34 = Text.init<A>(_:format:)();
  uint64_t v36 = v35;
  LOBYTE(v13) = v37 & 1;
  uint64_t v51 = v21;
  unint64_t v52 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v43;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v34, v36, (char)v13);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v32, v38);
}

uint64_t sub_100623738@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v113 = a3;
  uint64_t v109 = type metadata accessor for ContentTransition();
  uint64_t v107 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v106 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100010218(&qword_1008002E0);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v108 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100010218(&qword_100814228);
  __chkstk_darwin(v105);
  uint64_t v112 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v121 = (uint64_t)&v99 - v12;
  uint64_t v120 = sub_100010218(&qword_100813B68);
  __chkstk_darwin(v120);
  uint64_t v119 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = _s19DurationFormatStyleV10AttributedVMa(0);
  __chkstk_darwin(v116);
  uint64_t v118 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = _s19DurationFormatStyleVMa(0);
  __chkstk_darwin(v114);
  uint64_t v115 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v16 - 8);
  uint64_t v117 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for RedactionReasons();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v99 - v23;
  type metadata accessor for InsightsPreviousStreakView();
  sub_1006677D4((uint64_t)v24);
  sub_1006258E8(&qword_100813260, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  dispatch thunk of SetAlgebra.init()();
  sub_1006258E8(&qword_1008139A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v21, v18);
  v26(v24, v18);
  uint64_t v100 = a2;
  if (v25)
  {
    sub_100625930(a2, v117, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    char v27 = *a1;
    uint64_t v28 = v115;
    uint64_t v29 = &v115[*(int *)(v114 + 20)];
    static Locale.autoupdatingCurrent.getter();
    *uint64_t v28 = v27;
    uint64_t v30 = v118;
    unint64_t v31 = &v118[*(int *)(v116 + 20)];
    uint64_t v32 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v31, v29, v32);
    unsigned char *v30 = v27;
    sub_100625998((uint64_t)v28, _s19DurationFormatStyleVMa);
    uint64_t v33 = v119;
    sub_100625930((uint64_t)v30, v119, _s19DurationFormatStyleV10AttributedVMa);
    uint64_t v34 = v33 + *(int *)(v120 + 44);
    uint64_t v35 = enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.value(_:);
    uint64_t v36 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
    static Locale.autoupdatingCurrent.getter();
    sub_100625998((uint64_t)v30, _s19DurationFormatStyleV10AttributedVMa);
    sub_100014488(&qword_100813BD0, &qword_100813B68);
    sub_1006258E8(&qword_100813A60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
    uint64_t v37 = Text.init<A>(_:format:)();
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v37 = Text.init(_:tableName:bundle:comment:)();
  }
  uint64_t v101 = v38;
  uint64_t v102 = v37;
  uint64_t v103 = v40;
  int v104 = v39 & 1;
  sub_100010218(&qword_1007FD6E0);
  ScaledMetric.wrappedValue.getter();
  static Font.Weight.bold.getter();
  uint64_t v41 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v8, 1, 1, v41);
  static Font.system(size:weight:design:)();
  sub_10001457C((uint64_t)v8, &qword_100800590);
  uint64_t v42 = Text.font(_:)();
  uint64_t v44 = v43;
  char v46 = v45;
  swift_release();
  char v47 = v46 & 1;
  uint64_t v48 = Text.tracking(_:)();
  uint64_t v50 = v49;
  uint64_t v51 = a1;
  char v53 = v52 & 1;
  sub_10002B8D0(v42, v44, v47);
  swift_bridgeObjectRelease();
  uint64_t v54 = v106;
  static ContentTransition.numericText(countsDown:)();
  uint64_t v55 = Text.contentTransition(_:)();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  char v61 = v60 & 1;
  sub_10002B8D0(v48, v50, v53);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v54, v109);
  uint64_t v122 = v55;
  uint64_t v123 = v57;
  char v124 = v61;
  uint64_t v125 = v59;
  uint64_t v62 = v108;
  View.unredacted()();
  sub_10002B8D0(v55, v57, v61);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = v110;
  uint64_t v72 = (uint64_t)v112;
  uint64_t v73 = v111;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v112, v62, v111);
  uint64_t v74 = v72 + *(int *)(v105 + 36);
  *(unsigned char *)uint64_t v74 = v55;
  *(void *)(v74 + 8) = v64;
  *(void *)(v74 + 16) = v66;
  *(void *)(v74 + 24) = v68;
  *(void *)(v74 + 32) = v70;
  *(unsigned char *)(v74 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v62, v73);
  sub_10002C4EC(v72, v121, &qword_100814228);
  sub_100625930(v100, v117, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  LOBYTE(v71) = *v51;
  uint64_t v75 = v115;
  uint64_t v76 = &v115[*(int *)(v114 + 20)];
  static Locale.autoupdatingCurrent.getter();
  *uint64_t v75 = v71;
  uint64_t v77 = v118;
  uint64_t v78 = &v118[*(int *)(v116 + 20)];
  uint64_t v79 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v78, v76, v79);
  *uint64_t v77 = v71;
  sub_100625998((uint64_t)v75, _s19DurationFormatStyleVMa);
  uint64_t v80 = v119;
  sub_100625930((uint64_t)v77, v119, _s19DurationFormatStyleV10AttributedVMa);
  uint64_t v81 = v80 + *(int *)(v120 + 44);
  uint64_t v82 = enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:);
  uint64_t v83 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 104))(v81, v82, v83);
  static Locale.autoupdatingCurrent.getter();
  sub_100625998((uint64_t)v77, _s19DurationFormatStyleV10AttributedVMa);
  sub_100014488(&qword_100813BD0, &qword_100813B68);
  sub_1006258E8(&qword_100813A60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
  uint64_t v84 = Text.init<A>(_:format:)();
  uint64_t v86 = v85;
  LOBYTE(v51) = v87 & 1;
  static Font.footnote.getter();
  Font.bold()();
  swift_release();
  uint64_t v88 = Text.font(_:)();
  uint64_t v90 = v89;
  char v92 = v91;
  uint64_t v94 = v93;
  swift_release();
  sub_10002B8D0(v84, v86, (char)v51);
  swift_bridgeObjectRelease();
  uint64_t v95 = v121;
  sub_10001B220(v121, v72, &qword_100814228);
  LOBYTE(v122) = v92 & 1;
  uint64_t v96 = v113;
  sub_10001B220(v72, v113, &qword_100814228);
  uint64_t v97 = v96 + *(int *)(sub_100010218(&qword_100814230) + 48);
  *(void *)uint64_t v97 = v88;
  *(void *)(v97 + 8) = v90;
  *(unsigned char *)(v97 + 16) = v92 & 1;
  *(void *)(v97 + 24) = v94;
  sub_1000C04A4(v88, v90, v92 & 1);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v88, v90, v92 & 1);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v102, v101, v104);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v88, v90, v92 & 1);
  swift_bridgeObjectRelease();
  sub_10001457C(v95, &qword_100814228);
  sub_10002B8D0(v88, v90, v122);
  swift_bridgeObjectRelease();
  return sub_10001457C(v72, &qword_100814228);
}

uint64_t sub_1006243F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v65 = a3;
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for AttributedString();
  __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008006B0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100814210);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AttributeContainer();
  uint64_t v59 = *(void *)(v18 - 8);
  uint64_t v60 = v18;
  __chkstk_darwin(v18);
  uint64_t v66 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v53 - v21;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_1003DF8DC();
  static AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v23 = a1 + *(int *)(type metadata accessor for InsightsPreviousStreakView() + 32);
  uint64_t v24 = *(void *)v23;
  LOBYTE(a1) = *(unsigned char *)(v23 + 8);
  sub_100026CCC(*(void *)v23, a1);
  char v25 = sub_100666714(v24, a1);
  sub_100026DF8(v24, a1);
  uint64_t v26 = (unsigned int *)&enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.value(_:);
  if ((v25 & 1) == 0) {
    uint64_t v26 = (unsigned int *)&enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *v26, v10);
  char v53 = v22;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v67 = swift_getKeyPath();
  swift_getKeyPath();
  sub_10017ABA0();
  char v27 = v54;
  static AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v69 = static Color.primary.getter();
  uint64_t v28 = v55;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v28);
  sub_1006258E8(&qword_100813B60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  AttributedStringProtocol.replacingAttributes(_:with:)();
  uint64_t v29 = Text.init(_:)();
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  LODWORD(v69) = static HierarchicalShapeStyle.tertiary.getter();
  uint64_t v34 = Text.foregroundStyle<A>(_:)();
  uint64_t v36 = v35;
  LOBYTE(v27) = v37 & 1;
  sub_10002B8D0(v29, v31, v33);
  swift_bridgeObjectRelease();
  static Font.headline.getter();
  char v39 = v62;
  uint64_t v38 = v63;
  uint64_t v40 = v64;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, enum case for Font.Leading.tight(_:), v64);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  uint64_t v41 = Text.font(_:)();
  uint64_t v43 = v42;
  char v45 = v44;
  uint64_t v47 = v46;
  swift_release();
  sub_10002B8D0(v34, v36, (char)v27);
  swift_bridgeObjectRelease();
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = v60;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v59 + 8);
  v50(v66, v60);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v50)(v53, v49);
  char v52 = v65;
  uint64_t *v65 = v41;
  v52[1] = v43;
  *((unsigned char *)v52 + 16) = v45 & 1;
  v52[3] = v47;
  id v52[4] = v48;
  v52[5] = 4;
  *((unsigned char *)v52 + 48) = 0;
  return result;
}

uint64_t sub_100624A80@<X0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v65 = (char *)a1;
  uint64_t v79 = a2;
  uint64_t v2 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v76 = *(void *)(v2 - 8);
  *(void *)&long long v77 = v2;
  __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TimeZone();
  __chkstk_darwin(v4 - 8);
  uint64_t v71 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v69 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007F9538);
  __chkstk_darwin(v8 - 8);
  uint64_t v68 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1007F9540);
  __chkstk_darwin(v10 - 8);
  uint64_t v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v78 = type metadata accessor for Date.IntervalFormatStyle();
  uint64_t v72 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v60 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v70 = (char *)&v59 - v14;
  __chkstk_darwin(v15);
  uint64_t v73 = (char *)&v59 - v16;
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v59 - v18;
  uint64_t v19 = type metadata accessor for Calendar.Component();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Date();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Calendar();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100010218(&qword_10080FFB8);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100010218(&qword_100807940);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v66 = (uint64_t)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v59 - v34;
  sub_100628E88((uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_10001457C((uint64_t)v29, &qword_10080FFB8);
    long long v80 = xmmword_1006ED590;
    uint64_t v81 = 0;
    uint64_t v82 = _swiftEmptyArrayStorage;
    char v83 = 1;
    uint64_t result = _ConditionalContent<>.init(storage:)();
    long long v37 = v84;
    long long v38 = v85;
    char v39 = v86;
  }
  else
  {
    sub_10002C4EC((uint64_t)v29, (uint64_t)v35, &qword_100807940);
    type metadata accessor for InsightsPreviousStreakView();
    sub_100666410((uint64_t)v26);
    static Date.now.getter();
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for Calendar.Component.year(_:), v19);
    uint64_t v65 = v35;
    uint64_t v40 = Calendar.compare(_:to:toGranularity:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v24, v64);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v26, v62);
    uint64_t v41 = type metadata accessor for Date.FormatStyle.DateStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v67, 1, 1, v41);
    uint64_t v42 = type metadata accessor for Date.FormatStyle.TimeStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v68, 1, 1, v42);
    static Locale.autoupdatingCurrent.getter();
    static Calendar.autoupdatingCurrent.getter();
    static TimeZone.autoupdatingCurrent.getter();
    if (v40)
    {
      uint64_t v43 = v60;
      Date.IntervalFormatStyle.init(date:time:locale:calendar:timeZone:)();
      char v44 = v70;
      Date.IntervalFormatStyle.year()();
      uint64_t v45 = v72;
      uint64_t v46 = *(void (**)(char *, uint64_t))(v72 + 8);
      uint64_t v47 = v78;
      v46(v43, v78);
      uint64_t v48 = v74;
      static Date.FormatStyle.Symbol.Month.abbreviated.getter();
      uint64_t v49 = v73;
      Date.IntervalFormatStyle.month(_:)();
      (*(void (**)(char *, void))(v76 + 8))(v48, v77);
      uint64_t v50 = v44;
    }
    else
    {
      uint64_t v51 = v70;
      Date.IntervalFormatStyle.init(date:time:locale:calendar:timeZone:)();
      char v52 = v74;
      static Date.FormatStyle.Symbol.Month.abbreviated.getter();
      uint64_t v49 = v73;
      Date.IntervalFormatStyle.month(_:)();
      (*(void (**)(char *, void))(v76 + 8))(v52, v77);
      uint64_t v45 = v72;
      uint64_t v46 = *(void (**)(char *, uint64_t))(v72 + 8);
      uint64_t v50 = v51;
      uint64_t v47 = v78;
    }
    v46(v50, v47);
    char v53 = v75;
    Date.IntervalFormatStyle.day()();
    v46(v49, v47);
    uint64_t v54 = (uint64_t)v65;
    sub_10001B220((uint64_t)v65, v66, &qword_100807940);
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v49, v53, v47);
    sub_1006258E8(&qword_100814200, (void (*)(uint64_t))&type metadata accessor for Date.IntervalFormatStyle);
    sub_100014488(&qword_100814208, &qword_100807940);
    *(void *)&long long v80 = Text.init<A>(_:format:)();
    *((void *)&v80 + 1) = v55;
    uint64_t v81 = v56 & 1;
    uint64_t v82 = v57;
    char v83 = 0;
    _ConditionalContent<>.init(storage:)();
    long long v77 = v85;
    long long v78 = v84;
    char v39 = v86;
    v46(v53, v47);
    uint64_t result = sub_10001457C(v54, &qword_100807940);
    long long v38 = v77;
    long long v37 = v78;
  }
  uint64_t v58 = v79;
  *uint64_t v79 = v37;
  v58[1] = v38;
  *((unsigned char *)v58 + 32) = v39;
  return result;
}

unint64_t sub_100625484()
{
  unint64_t result = qword_100814150;
  if (!qword_100814150)
  {
    sub_100014440(&qword_100814130);
    sub_100625524();
    sub_100014488(&qword_100800188, &qword_100800190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814150);
  }
  return result;
}

unint64_t sub_100625524()
{
  unint64_t result = qword_100814158;
  if (!qword_100814158)
  {
    sub_100014440(&qword_100814128);
    sub_100014488(&qword_100814160, &qword_100814120);
    sub_100014488(&qword_100800688, &qword_100800690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814158);
  }
  return result;
}

uint64_t sub_1006255F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10062317C(*(unsigned char **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1006255F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006243F8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100625600()
{
  unint64_t result = qword_1008141A0;
  if (!qword_1008141A0)
  {
    sub_100014440(&qword_100814198);
    sub_100014440(&qword_1008141A8);
    sub_1006256E0();
    swift_getOpaqueTypeConformance2();
    sub_1006258E8((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008141A0);
  }
  return result;
}

unint64_t sub_1006256E0()
{
  unint64_t result = qword_1008141B0;
  if (!qword_1008141B0)
  {
    sub_100014440(&qword_1008141A8);
    sub_100625780();
    sub_100014488(&qword_100800678, &qword_100800680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008141B0);
  }
  return result;
}

unint64_t sub_100625780()
{
  unint64_t result = qword_1008141B8;
  if (!qword_1008141B8)
  {
    sub_100014440(&qword_1008141C0);
    sub_100014488(&qword_1008141C8, &qword_1008141D0);
    sub_100014488(&qword_100813F20, &qword_100813F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008141B8);
  }
  return result;
}

uint64_t sub_10062584C()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t sub_100625894()
{
  return 8;
}

uint64_t sub_1006258A0()
{
  return swift_release();
}

uint64_t sub_1006258A8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1006258BC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1006258D4()
{
  return 8;
}

uint64_t sub_1006258E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100625930(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100625998(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006259F8()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *_s16ToolbarPlacementOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100625B34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16ToolbarPlacementOMa()
{
  return &_s16ToolbarPlacementON;
}

unint64_t sub_100625B70()
{
  unint64_t result = qword_100814238;
  if (!qword_100814238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814238);
  }
  return result;
}

uint64_t sub_100625BC4()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100625C20()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void sub_100625C68()
{
}

void sub_100625C90()
{
}

void sub_100625CAC(char a1)
{
  uint64_t v2 = sub_100010218(&qword_100814240);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration.CornerStyle();
  __n128 v10 = __chkstk_darwin(v9);
  (*(void (**)(char *, void, __n128))(v12 + 104))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for UIButton.Configuration.CornerStyle.capsule(_:), v10);
  UIButton.Configuration.cornerStyle.setter();
  uint64_t v13 = self;
  uint64_t v14 = v13;
  if (a1)
  {
    id v24 = [v13 preferredFontForTextStyle:UIFontTextStyleHeadline];
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.Size.medium(_:), v5);
    UIButton.Configuration.buttonSize.setter();
    id v25 = [self configurationWithFont:v24 scale:2];
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    *(void *)(swift_allocObject() + 16) = v24;
    id v22 = v24;
    UIConfigurationTextAttributesTransformer.init(_:)();
    uint64_t v26 = type metadata accessor for UIConfigurationTextAttributesTransformer();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v4, 0, 1, v26);
    UIButton.Configuration.titleTextAttributesTransformer.setter();
  }
  else
  {
    id v15 = [v13 preferredFontForTextStyle:UIFontTextStyleCallout];
    id v16 = [v15 fontDescriptor];
    id v17 = [v15 fontDescriptor];
    unsigned int v18 = [v17 symbolicTraits];

    id v19 = [v16 fontDescriptorWithSymbolicTraits:v18 | 2];
    if (v19)
    {
      id v20 = [v14 fontWithDescriptor:v19 size:0.0];

      if (v20)
      {

        id v15 = v20;
      }
    }
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.Size.small(_:), v5);
    UIButton.Configuration.buttonSize.setter();
    id v21 = [self configurationWithFont:v15 scale:2];
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    *(void *)(swift_allocObject() + 16) = v15;
    id v22 = v15;
    UIConfigurationTextAttributesTransformer.init(_:)();
    uint64_t v23 = type metadata accessor for UIConfigurationTextAttributesTransformer();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 0, 1, v23);
    UIButton.Configuration.titleTextAttributesTransformer.setter();
  }
  UIButton.Configuration.contentInsets.setter();
}

uint64_t sub_100626140(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100010218(&qword_1007FEAE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = swift_getKeyPath();
  swift_getKeyPath();
  sub_10011AD80();
  AttributeContainer.subscript.getter();
  swift_release();
  v8[1] = a2;
  AttributeContainer.Builder.callAsFunction(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100626274()
{
  return swift_deallocObject();
}

uint64_t sub_1006262AC(uint64_t a1)
{
  return sub_100626140(a1, *(void *)(v1 + 16));
}

void sub_1006262C8()
{
}

void sub_1006262E8()
{
}

uint64_t sub_100626310()
{
  return 8;
}

uint64_t sub_10062631C()
{
  return swift_release();
}

uint64_t sub_100626324(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100626334()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_10062637C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

BOOL sub_100626390(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1006263E0(a1, WitnessTable);
}

BOOL sub_1006263E0(uint64_t a1, uint64_t a2)
{
  return (*(unsigned __int8 (**)(void))(a2 + 40))() == 1;
}

BOOL sub_100626414(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1006263E0(a1, WitnessTable);
}

uint64_t sub_100626464(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1006264B0(a1, WitnessTable);
}

uint64_t sub_1006264B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = a1;
  v11[5] = a2;
  void v11[6] = v3;
  sub_100328A60((uint64_t)v8, (uint64_t)&unk_100814258, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1006265DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = type metadata accessor for MainActor();
  v6[4] = static MainActor.shared.getter();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a6 + 88) + **(int **)(a6 + 88));
  uint64_t v9 = (void *)swift_task_alloc();
  v6[5] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1006266F8;
  return v11(a5, a6);
}

uint64_t sub_1006266F8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100626854;
  }
  else {
    uint64_t v4 = sub_100193204;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100626854()
{
  swift_release();
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10083EDD0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error stopping recording: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100626A60()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100626AA0(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1006265DC(a1, v6, v7, v8, v4, v5);
}

unsigned char *storeEnumTagSinglePayload for StreakFrequency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100626C34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreakFrequency()
{
  return &type metadata for StreakFrequency;
}

uint64_t sub_100626C6C(char *a1, char *a2)
{
  return sub_10017C938(*a1, *a2);
}

Swift::Int sub_100626C78()
{
  return Hasher._finalize()();
}

uint64_t sub_100626CF4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100626D5C()
{
  return Hasher._finalize()();
}

uint64_t sub_100626DD4@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007950D8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100626E34(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x796C696164;
  if (*v1) {
    uint64_t v2 = 0x796C6B656577;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100626E6C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100626ECC()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100626F20()
{
  unint64_t result = qword_100814260;
  if (!qword_100814260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814260);
  }
  return result;
}

void sub_1006270B8()
{
  uint64_t v1 = self;
  id v2 = [v1 tertiarySystemBackgroundColor];
  [v0 setBackgroundColor:v2];

  unint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal17IndexingAlertView_bodyLabel];
  id v4 = [self mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000068;
  v32._object = (void *)0x80000001006A8BE0;
  v5._object = (void *)0x80000001006A8B70;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v32);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setText:v7];

  if (qword_1007F7290 != -1) {
    swift_once();
  }
  [v3 setFont:qword_10083D858];
  id v8 = [v1 secondaryLabelColor];
  [v3 setTextColor:v8];

  [v3 setTextAlignment:1];
  [v3 setNumberOfLines:0];
  [v3 setAdjustsFontForContentSizeCategory:1];
  [v0 addSubview:v3];
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  double v9 = *(double *)&qword_10083D8A0;
  id v10 = [v3 superview];
  uint64_t v11 = &selRef_drawMapRect_zoomScale_inContext_;
  if (v10)
  {
    uint64_t v12 = v10;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v3 leadingAnchor];
    id v14 = [v12 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    uint64_t v11 = &selRef_drawMapRect_zoomScale_inContext_;
    [v15 setConstant:v9];
    id v16 = v15;
    [v16 setActive:1];
  }
  double v17 = *(double *)&qword_10083D8A0;
  id v18 = [v3 superview];
  if (v18)
  {
    id v19 = v18;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v20 = [v3 trailingAnchor];
    id v21 = [v19 trailingAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21];

    [v22 v11[86]:-v17];
    id v23 = v22;
    [v23 setActive:1];
  }
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  double v24 = *(double *)&qword_10083D908;
  id v25 = [v3 superview];
  if (v25)
  {
    id v30 = v25;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v26 = [v3 topAnchor];
    id v27 = [v30 topAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    [v28 v11[86]:v24];
    id v29 = v28;
    [v29 setActive:1];
  }
}

id sub_10062760C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IndexingAlertView();
  return [super dealloc];
}

uint64_t type metadata accessor for IndexingAlertView()
{
  return self;
}

uint64_t *sub_100627674(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    double v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    id v13 = (char *)a1 + v12;
    id v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    double v17 = (char *)a1 + v16;
    id v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100627934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v7, 1, v4);
  if (!result)
  {
    double v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v4);
  }
  return result;
}

char *sub_100627AA0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_100627D10(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  id v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_10062809C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_10062830C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  id v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_100628698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006286AC);
}

uint64_t sub_1006286AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10062871C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100628730);
}

uint64_t sub_100628730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StreakSummary()
{
  uint64_t result = qword_1008142F0;
  if (!qword_1008142F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1006287F0()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10062888C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v66 = sub_100010218(&qword_1007FD188);
  __chkstk_darwin(v66);
  uint64_t v63 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v52 - v6;
  uint64_t v65 = sub_100010218(&qword_100807940);
  __chkstk_darwin(v65);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v61 = (char *)&v52 - v10;
  __chkstk_darwin(v11);
  uint64_t v64 = (uint64_t)&v52 - v12;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v13 - 8);
  int v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v60 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v67 = (char *)&v52 - v23;
  __chkstk_darwin(v24);
  id v26 = (char *)&v52 - v25;
  sub_10001B220(v2, (uint64_t)v18, (uint64_t *)&unk_1007FC470);
  id v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v27(v18, 1, v19) == 1)
  {
    uint64_t v28 = (uint64_t)v18;
LABEL_5:
    sub_10001457C(v28, (uint64_t *)&unk_1007FC470);
    char v31 = 0;
    return v31 & 1;
  }
  uint64_t v58 = v8;
  uint64_t v59 = a1;
  id v29 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v29(v26, v18, v19);
  uint64_t v30 = type metadata accessor for StreakSummary();
  sub_10001B220(v2 + *(int *)(v30 + 24), (uint64_t)v15, (uint64_t *)&unk_1007FC470);
  if (v27(v15, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    uint64_t v28 = (uint64_t)v15;
    goto LABEL_5;
  }
  Swift::String v32 = v67;
  v29(v67, v15, v19);
  uint64_t v33 = sub_1005094EC((unint64_t *)&qword_1007FD120);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v35 = v26;
    uint64_t v36 = *(int *)(v66 + 48);
    uint64_t v37 = v66;
    uint64_t v54 = v29;
    long long v38 = v62;
    char v39 = &v62[v36];
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v55 = v40;
    uint64_t v57 = v35;
    ((void (*)(char *))v40)(v62);
    uint64_t v56 = v33;
    uint64_t v41 = v39;
    char v53 = v39;
    v40(v39, (uint64_t)v32, v19);
    uint64_t v42 = v63;
    uint64_t v43 = &v63[*(int *)(v37 + 48)];
    v40(v63, (uint64_t)v38, v19);
    v40(v43, (uint64_t)v41, v19);
    uint64_t v44 = (uint64_t)v61;
    uint64_t v45 = v54;
    v54(v61, v42, v19);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
    v46(v43, v19);
    uint64_t v47 = &v42[*(int *)(v66 + 48)];
    v45(v42, v38, v19);
    v45(v47, v53, v19);
    v45((char *)(v44 + *(int *)(v65 + 36)), v47, v19);
    v46(v42, v19);
    uint64_t v48 = v64;
    sub_100506580(v44, v64);
    uint64_t v49 = v59;
    LOBYTE(v38) = dispatch thunk of static Comparable.<= infix(_:_:)();
    uint64_t v50 = v60;
    v55(v60, v49, v19);
    uint64_t v51 = (uint64_t)v58;
    sub_10001B220(v48, (uint64_t)v58, &qword_100807940);
    if (v38) {
      char v31 = dispatch thunk of static Comparable.< infix(_:_:)();
    }
    else {
      char v31 = 0;
    }
    sub_10001457C(v51, &qword_100807940);
    v46(v50, v19);
    sub_10001457C(v48, &qword_100807940);
    v46(v67, v19);
    v46(v57, v19);
    return v31 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100628E88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = sub_100010218(&qword_1007FD188);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v40 - v6;
  uint64_t v7 = sub_100010218(&qword_100807940);
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v40 - v20;
  sub_10001B220(v2, (uint64_t)v14, (uint64_t *)&unk_1007FC470);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1, v15) == 1)
  {
    uint64_t v11 = v14;
LABEL_5:
    sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
    uint64_t v26 = 1;
    uint64_t v27 = v47;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(a1, v26, 1, v27);
  }
  uint64_t v41 = a1;
  uint64_t v23 = v14;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v24(v21, v23, v15);
  uint64_t v25 = type metadata accessor for StreakSummary();
  sub_10001B220(v2 + *(int *)(v25 + 20), (uint64_t)v11, (uint64_t *)&unk_1007FC470);
  if (v22(v11, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    a1 = v41;
    goto LABEL_5;
  }
  v24(v18, v11, v15);
  sub_1005094EC((unint64_t *)&qword_1007FD120);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v29 = v45;
    uint64_t v30 = v42;
    uint64_t v40 = &v42[*(int *)(v45 + 48)];
    char v31 = v40;
    v24(v42, v21, v15);
    v24(v31, v18, v15);
    Swift::String v32 = v24;
    uint64_t v33 = v44;
    uint64_t v34 = &v44[*(int *)(v29 + 48)];
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v35(v44, v30, v15);
    uint64_t v36 = v40;
    v35(v34, v40, v15);
    uint64_t v37 = (uint64_t)v43;
    v32(v43, v33, v15);
    long long v38 = *(void (**)(char *, uint64_t))(v16 + 8);
    v38(v34, v15);
    char v39 = &v33[*(int *)(v45 + 48)];
    v32(v33, v30, v15);
    v32(v39, v36, v15);
    uint64_t v27 = v47;
    v32((char *)(v37 + *(int *)(v47 + 36)), v39, v15);
    v38(v33, v15);
    a1 = v41;
    sub_100506580(v37, v41);
    uint64_t v26 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(a1, v26, 1, v27);
  }
  __break(1u);
  return result;
}

uint64_t sub_100629370(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100814340);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10062A454();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  type metadata accessor for Date();
  sub_1005094EC(&qword_1007F99F0);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for StreakSummary();
    char v11 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v10 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v9 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100629584@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v30 - v6;
  __chkstk_darwin(v7);
  uint64_t v39 = (uint64_t)&v30 - v8;
  uint64_t v40 = sub_100010218(&qword_100814330);
  uint64_t v35 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StreakSummary();
  char v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void (**)(void))(*(void *)(v15 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1, v15);
  uint64_t v34 = &v14[v12[7]];
  v16();
  uint64_t v17 = (uint64_t)&v14[v12[8]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(v17, 1, 1, v15);
  uint64_t v18 = v12[9];
  *(void *)&v14[v18] = 0;
  sub_10002E0BC(a1, a1[3]);
  sub_10062A454();
  long long v38 = v10;
  uint64_t v19 = v41;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v20 = (uint64_t)a1;
  if (!v19)
  {
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    uint64_t v41 = a1;
    uint64_t v22 = (uint64_t)v36;
    uint64_t v21 = (uint64_t)v37;
    uint64_t v23 = v35;
    char v45 = 0;
    uint64_t v24 = sub_1005094EC(&qword_10080E9D0);
    uint64_t v25 = v38;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100064EB8(v39, (uint64_t)v14);
    char v44 = 1;
    uint64_t v39 = v24;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100064EB8(v22, (uint64_t)v34);
    char v43 = 2;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100064EB8(v21, v31);
    char v42 = 3;
    uint64_t v27 = v40;
    uint64_t v28 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v27);
    uint64_t v29 = v33;
    uint64_t v20 = (uint64_t)v41;
    *(void *)&v14[v32] = v28;
    sub_10062A4A8((uint64_t)v14, v29);
  }
  _s7Journal19DynamicWaveformViewVwxx_0(v20);
  return sub_100237718((uint64_t)v14);
}

uint64_t sub_1006299A8()
{
  uint64_t result = 0x7473726966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953718636;
      break;
    case 2:
      uint64_t result = 0x6E4F676E69646E65;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100629A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10062A718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100629A54(uint64_t a1)
{
  unint64_t v2 = sub_10062A454();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100629A90(uint64_t a1)
{
  unint64_t v2 = sub_10062A454();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100629ACC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100629584(a1, a2);
}

uint64_t sub_100629AE4(void *a1)
{
  return sub_100629370(a1);
}

BOOL sub_100629B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v77 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v7);
  uint64_t v71 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v76 = &v66[-v10];
  __chkstk_darwin(v11);
  uint64_t v13 = &v66[-v12];
  uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v14 - 8);
  uint64_t v69 = &v66[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v70 = &v66[-v17];
  __chkstk_darwin(v18);
  uint64_t v72 = &v66[-v19];
  __chkstk_darwin(v20);
  uint64_t v73 = &v66[-v21];
  __chkstk_darwin(v22);
  uint64_t v79 = &v66[-v23];
  __chkstk_darwin(v24);
  uint64_t v75 = &v66[-v25];
  __chkstk_darwin(v26);
  uint64_t v28 = &v66[-v27];
  __chkstk_darwin(v29);
  uint64_t v31 = &v66[-v30];
  __chkstk_darwin(v32);
  uint64_t v34 = &v66[-v33];
  sub_10001B220(a1, (uint64_t)&v66[-v33], (uint64_t *)&unk_1007FC470);
  uint64_t v80 = a2;
  sub_10001B220(a2, (uint64_t)v31, (uint64_t *)&unk_1007FC470);
  uint64_t v78 = v7;
  uint64_t v35 = (uint64_t)&v13[*(int *)(v7 + 48)];
  sub_10001B220((uint64_t)v34, (uint64_t)v13, (uint64_t *)&unk_1007FC470);
  sub_10001B220((uint64_t)v31, v35, (uint64_t *)&unk_1007FC470);
  uint64_t v81 = v5;
  uint64_t v36 = *(unsigned int (**)(void, void, void))(v5 + 48);
  if (v36(v13, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v31, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v34, (uint64_t *)&unk_1007FC470);
    if (v36(v35, 1, v4) == 1)
    {
      uint64_t v74 = v36;
      sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FC470);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v37 = (uint64_t)v13;
LABEL_21:
    sub_10001457C(v37, &qword_1007FB8B0);
    return 0;
  }
  sub_10001B220((uint64_t)v13, (uint64_t)v28, (uint64_t *)&unk_1007FC470);
  if (v36(v35, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v31, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v34, (uint64_t *)&unk_1007FC470);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v28, v4);
    goto LABEL_6;
  }
  uint64_t v74 = v36;
  uint64_t v38 = v81;
  uint64_t v39 = v77;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v35, v4);
  sub_1005094EC((unint64_t *)&qword_1007FABD0);
  int v67 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v68 = a1;
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
  v40(v39, v4);
  sub_10001457C((uint64_t)v31, (uint64_t *)&unk_1007FC470);
  sub_10001457C((uint64_t)v34, (uint64_t *)&unk_1007FC470);
  v40(v28, v4);
  a1 = v68;
  sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FC470);
  if ((v67 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v41 = type metadata accessor for StreakSummary();
  char v42 = v75;
  sub_10001B220(a1 + *(int *)(v41 + 20), (uint64_t)v75, (uint64_t *)&unk_1007FC470);
  char v43 = v79;
  sub_10001B220(v80 + *(int *)(v41 + 20), (uint64_t)v79, (uint64_t *)&unk_1007FC470);
  char v44 = v76;
  uint64_t v45 = (uint64_t)&v76[*(int *)(v78 + 48)];
  sub_10001B220((uint64_t)v42, (uint64_t)v76, (uint64_t *)&unk_1007FC470);
  sub_10001B220((uint64_t)v43, v45, (uint64_t *)&unk_1007FC470);
  uint64_t v46 = v74;
  if (v74(v44, 1, v4) != 1)
  {
    uint64_t v68 = v41;
    uint64_t v47 = v73;
    sub_10001B220((uint64_t)v44, (uint64_t)v73, (uint64_t *)&unk_1007FC470);
    if (v46(v45, 1, v4) != 1)
    {
      uint64_t v74 = v46;
      uint64_t v48 = (uint64_t)v42;
      uint64_t v49 = v81;
      uint64_t v50 = v77;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v45, v4);
      sub_1005094EC((unint64_t *)&qword_1007FABD0);
      char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
      v52(v50, v4);
      sub_10001457C((uint64_t)v79, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v48, (uint64_t *)&unk_1007FC470);
      v52(v47, v4);
      sub_10001457C((uint64_t)v44, (uint64_t *)&unk_1007FC470);
      uint64_t v41 = v68;
      if ((v51 & 1) == 0) {
        return 0;
      }
      goto LABEL_15;
    }
    sub_10001457C((uint64_t)v79, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v42, (uint64_t *)&unk_1007FC470);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v47, v4);
    goto LABEL_13;
  }
  sub_10001457C((uint64_t)v43, (uint64_t *)&unk_1007FC470);
  sub_10001457C((uint64_t)v42, (uint64_t *)&unk_1007FC470);
  if (v46(v45, 1, v4) != 1)
  {
LABEL_13:
    uint64_t v37 = (uint64_t)v44;
    goto LABEL_21;
  }
  uint64_t v74 = v46;
  sub_10001457C((uint64_t)v44, (uint64_t *)&unk_1007FC470);
LABEL_15:
  char v53 = v72;
  sub_10001B220(a1 + *(int *)(v41 + 24), (uint64_t)v72, (uint64_t *)&unk_1007FC470);
  uint64_t v68 = v41;
  uint64_t v54 = v80 + *(int *)(v41 + 24);
  uint64_t v55 = v70;
  sub_10001B220(v54, (uint64_t)v70, (uint64_t *)&unk_1007FC470);
  uint64_t v56 = v71;
  uint64_t v57 = (uint64_t)&v71[*(int *)(v78 + 48)];
  sub_10001B220((uint64_t)v53, (uint64_t)v71, (uint64_t *)&unk_1007FC470);
  sub_10001B220((uint64_t)v55, v57, (uint64_t *)&unk_1007FC470);
  uint64_t v58 = v74;
  if (v74(v56, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v55, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v53, (uint64_t *)&unk_1007FC470);
    if (v58(v57, 1, v4) == 1)
    {
      sub_10001457C((uint64_t)v56, (uint64_t *)&unk_1007FC470);
      return *(void *)(a1 + *(int *)(v68 + 28)) == *(void *)(v80 + *(int *)(v68 + 28));
    }
    goto LABEL_20;
  }
  uint64_t v59 = v69;
  sub_10001B220((uint64_t)v56, (uint64_t)v69, (uint64_t *)&unk_1007FC470);
  if (v58(v57, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v55, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v53, (uint64_t *)&unk_1007FC470);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v59, v4);
LABEL_20:
    uint64_t v37 = (uint64_t)v56;
    goto LABEL_21;
  }
  uint64_t v61 = (uint64_t)v55;
  uint64_t v62 = v81;
  uint64_t v63 = v77;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v57, v4);
  sub_1005094EC((unint64_t *)&qword_1007FABD0);
  char v64 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
  v65(v63, v4);
  sub_10001457C(v61, (uint64_t *)&unk_1007FC470);
  sub_10001457C((uint64_t)v72, (uint64_t *)&unk_1007FC470);
  v65(v59, v4);
  sub_10001457C((uint64_t)v56, (uint64_t *)&unk_1007FC470);
  if (v64) {
    return *(void *)(a1 + *(int *)(v68 + 28)) == *(void *)(v80 + *(int *)(v68 + 28));
  }
  return 0;
}

unint64_t sub_10062A454()
{
  unint64_t result = qword_100814338;
  if (!qword_100814338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814338);
  }
  return result;
}

uint64_t sub_10062A4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for StreakSummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10062A5D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreakSummary.CodingKeys()
{
  return &type metadata for StreakSummary.CodingKeys;
}

unint64_t sub_10062A614()
{
  unint64_t result = qword_100814348;
  if (!qword_100814348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814348);
  }
  return result;
}

unint64_t sub_10062A66C()
{
  unint64_t result = qword_100814350;
  if (!qword_100814350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814350);
  }
  return result;
}

unint64_t sub_10062A6C4()
{
  unint64_t result = qword_100814358;
  if (!qword_100814358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814358);
  }
  return result;
}

uint64_t sub_10062A718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953718636 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E4F676E69646E65 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t destroy for TimelineInsightsSummaryItem(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 72);

  return sub_100026DF8(v2, v3);
}

uint64_t initializeWithCopy for TimelineInsightsSummaryItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  char v4 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  char v6 = *(unsigned char *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100026CCC(v5, v6);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = v6;
  return a1;
}

uint64_t assignWithCopy for TimelineInsightsSummaryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  char v6 = *(unsigned char *)(v2 + 48);
  *(void *)(a1 + 40) = *(void *)(v2 + 40);
  *(unsigned char *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(v2 + 56);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(v2 + 64);
  LOBYTE(v2) = *(unsigned char *)(v2 + 72);
  sub_100026CCC(v7, v2);
  uint64_t v8 = *(void *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v2;
  sub_100026DF8(v8, v9);
  return a1;
}

uint64_t assignWithTake for TimelineInsightsSummaryItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = v5;
  sub_100026DF8(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for TimelineInsightsSummaryItem()
{
  return &type metadata for TimelineInsightsSummaryItem;
}

uint64_t sub_10062AB18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10062AB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814418);
}

uint64_t sub_10062AB40(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814418);
}

void sub_10062AB4C()
{
}

void sub_10062AB74()
{
}

void sub_10062AB90(void *a1@<X8>)
{
  *a1 = &_s17JournalAttributesVN;
}

uint64_t sub_10062ABA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814410);
}

uint64_t sub_10062ABAC(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814410);
}

void sub_10062ABB8()
{
}

void sub_10062ABE0()
{
}

uint64_t sub_10062ABFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814420);
}

uint64_t sub_10062AC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10062AC60(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814420);
}

uint64_t sub_10062AC6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void sub_10062ACB0()
{
}

uint64_t sub_10062ACD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = type metadata accessor for Divider();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  __chkstk_darwin(v3);
  uint64_t v49 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100814378);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100814380);
  __chkstk_darwin(v7 - 8);
  uint64_t v55 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v52 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_100010218(&qword_100814388);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100814390);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v47 - v20;
  char v22 = sub_10062B264();
  uint64_t v23 = swift_allocObject();
  long long v24 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v23 + 64) = v24;
  *(_OWORD *)(v23 + 73) = *(_OWORD *)(a1 + 57);
  long long v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v23 + 32) = v25;
  *(unsigned char *)(v23 + 89) = v22;
  uint64_t v57 = a1;
  char v58 = v22;
  sub_10062E43C(a1);
  sub_100010218(&qword_100814398);
  sub_10062E49C();
  Button.init(action:label:)();
  uint64_t v26 = sub_10062EE58(v22);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v59 = v26;
  swift_retain();
  uint64_t v28 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v14, v11);
  swift_release();
  uint64_t v29 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  *uint64_t v29 = KeyPath;
  v29[1] = v28;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_10002C4EC((uint64_t)v18, (uint64_t)v21, &qword_100814390);
  if ((*(unsigned char *)(a1 + 17) & 1) != 0
    && (uint64_t v30 = *(void *)(a1 + 64),
        char v31 = *(unsigned char *)(a1 + 72),
        sub_100026CCC(v30, v31),
        char v32 = sub_100666714(v30, v31),
        sub_100026DF8(v30, v31),
        (v32 & 1) == 0))
  {
    uint64_t v36 = v49;
    Divider.init()();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v38 = v50;
    uint64_t v37 = v51;
    uint64_t v39 = v48;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v48, v36, v51);
    uint64_t v34 = v54;
    uint64_t v40 = &v39[*(int *)(v54 + 36)];
    long long v41 = v60;
    *(_OWORD *)uint64_t v40 = v59;
    *((_OWORD *)v40 + 1) = v41;
    *((_OWORD *)v40 + 2) = v61;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v37);
    uint64_t v42 = (uint64_t)v39;
    uint64_t v35 = v52;
    sub_10002C4EC(v42, v52, &qword_100814378);
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = 1;
    uint64_t v34 = v54;
    uint64_t v35 = v52;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v35, v33, 1, v34);
  sub_10001B220((uint64_t)v21, (uint64_t)v18, &qword_100814390);
  uint64_t v43 = v55;
  sub_10001B220(v35, v55, &qword_100814380);
  uint64_t v44 = v56;
  sub_10001B220((uint64_t)v18, v56, &qword_100814390);
  uint64_t v45 = sub_100010218(&qword_1008143D8);
  sub_10001B220(v43, v44 + *(int *)(v45 + 48), &qword_100814380);
  sub_10001457C(v35, &qword_100814380);
  sub_10001457C((uint64_t)v21, &qword_100814390);
  sub_10001457C(v43, &qword_100814380);
  return sub_10001457C((uint64_t)v18, &qword_100814390);
}

uint64_t sub_10062B264()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t result = *v1;
  if (!*v1)
  {
    uint64_t v26 = v2;
    int v15 = v1[48];
    uint64_t v16 = swift_retain();
    int v25 = v15;
    uint64_t v17 = sub_100666C70(v16, v15);
    swift_release();
    swift_getKeyPath();
    uint64_t v29 = v17;
    uint64_t v24 = sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v18 = v17 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    sub_10062F30C(v18, (uint64_t)v7, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    sub_10002C4EC((uint64_t)(v1 + 8), (uint64_t)v30, &qword_1007FDC80);
    sub_10002C4EC((uint64_t)v30, (uint64_t)v31, &qword_1007FDC80);
    if (v31[8] != 1) {
      goto LABEL_4;
    }
    uint64_t v19 = swift_retain();
    uint64_t v20 = sub_100666C70(v19, v25);
    swift_release();
    swift_getKeyPath();
    uint64_t v28 = v20;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v21 = v20 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
    swift_beginAccess();
    sub_10062F30C(v21, (uint64_t)v4, type metadata accessor for InsightsDataManager.Streaks);
    swift_release();
    sub_100010218(&qword_100813948);
    AppStorage.wrappedValue.getter();
    LOBYTE(v21) = sub_1004BA788(v27);
    sub_10062F374((uint64_t)v4, type metadata accessor for InsightsDataManager.Streaks);
    uint64_t v22 = (uint64_t)v7;
    if (v21) {
LABEL_4:
    }
      uint64_t v22 = (uint64_t)&v7[*(int *)(v26 + 20)];
    sub_10062F30C(v22, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    sub_1002376B4((uint64_t)v10, (uint64_t)v13);
    sub_10062F374((uint64_t)v7, type metadata accessor for InsightsDataManager.Streaks);
    uint64_t v23 = *(void *)&v13[*(int *)(v8 + 28)];
    sub_10062F374((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    if (v23 >= 2) {
      return 1;
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t sub_10062B5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v5 = type metadata accessor for ContentTransition();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  __chkstk_darwin(v5);
  uint64_t v73 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100010218(&qword_100801680);
  __chkstk_darwin(v67);
  uint64_t v72 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Image.Scale();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  __chkstk_darwin(v8);
  uint64_t v69 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Font.Leading();
  uint64_t v10 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AttributedString();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v17 - 8);
  uint64_t v61 = sub_100010218(&qword_1008143D0);
  __chkstk_darwin(v61);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100010218(&qword_1008143C0);
  __chkstk_darwin(v63);
  uint64_t v64 = (uint64_t)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100010218(&qword_1008143B0);
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100814398);
  __chkstk_darwin(v22 - 8);
  uint64_t v65 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  uint64_t v76 = a3;
  Image.init(systemName:)();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._uint64_t countAndFlagsBits = 32;
  v25._object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
  long long v60 = v16;
  sub_10062BEB0(a2, (uint64_t)v16);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v59 = a2;
  uint64_t v29 = v28;
  LOBYTE(v16) = v30 & 1;
  static Font.headline.getter();
  uint64_t v31 = v62;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Font.Leading.tight(_:), v62);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  uint64_t v32 = Text.font(_:)();
  uint64_t v34 = v33;
  LOBYTE(v10) = v35;
  uint64_t v37 = v36;
  swift_release();
  LOBYTE(v13) = v10 & 1;
  sub_10002B8D0(v27, v29, (char)v16);
  swift_bridgeObjectRelease();
  uint64_t v39 = v69;
  uint64_t v38 = v70;
  uint64_t v40 = v71;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for Image.Scale.small(_:), v71);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v72;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v72 + *(int *)(v67 + 28), v39, v40);
  *uint64_t v42 = KeyPath;
  sub_10001B220((uint64_t)v42, (uint64_t)&v19[*(int *)(v61 + 36)], &qword_100801680);
  *(void *)uint64_t v19 = v32;
  *((void *)v19 + 1) = v34;
  v19[16] = v13;
  *((void *)v19 + 3) = v37;
  sub_1000C04A4(v32, v34, v13);
  swift_bridgeObjectRetain();
  sub_10001457C((uint64_t)v42, &qword_100801680);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  sub_10002B8D0(v32, v34, v13);
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = v64;
  sub_10001B220((uint64_t)v19, v64, &qword_1008143D0);
  uint64_t v45 = v44 + *(int *)(v63 + 36);
  *(void *)uint64_t v45 = v43;
  *(unsigned char *)(v45 + 8) = 0;
  sub_10001457C((uint64_t)v19, &qword_1008143D0);
  uint64_t v46 = v73;
  static ContentTransition.numericText(countsDown:)();
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = (uint64_t)v68;
  uint64_t v49 = (uint64_t *)&v68[*(int *)(v66 + 36)];
  uint64_t v50 = sub_100010218(&qword_100800618);
  uint64_t v52 = v74;
  uint64_t v51 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)v49 + *(int *)(v50 + 28), v46, v75);
  uint64_t *v49 = v47;
  sub_10001B220(v44, v48, &qword_1008143C0);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v51);
  sub_10001457C(v44, &qword_1008143C0);
  sub_10062BEB0(v59, (uint64_t)v60);
  uint64_t v53 = Text.init(_:)();
  uint64_t v55 = v54;
  LOBYTE(v46) = v56 & 1;
  sub_10062E548();
  uint64_t v57 = (uint64_t)v65;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v53, v55, (char)v46);
  swift_bridgeObjectRelease();
  sub_10001457C(v48, &qword_1008143B0);
  return sub_10002C4EC(v57, v76, &qword_100814398);
}

uint64_t sub_10062BEB0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v178 = a2;
  uint64_t v4 = type metadata accessor for AttributedSubstring();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  __chkstk_darwin(Update);
  uint64_t v141 = (uint64_t)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_100010218(&qword_10080BF18);
  __chkstk_darwin(v189);
  uint64_t v10 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_10080BF10);
  __chkstk_darwin(v11 - 8);
  uint64_t v182 = (uint64_t)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v196 = (uint64_t)&v140 - v14;
  uint64_t v15 = sub_100010218(&qword_1008143E0);
  uint64_t v177 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v183 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_100010218(&qword_1008143E8);
  uint64_t v150 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  long long v193 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_100010218(&qword_1008143F0);
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  char v186 = (char *)&v140 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v174 = (char *)&v140 - v20;
  uint64_t v185 = type metadata accessor for AttributedString.Runs();
  uint64_t v180 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  unint64_t v173 = (void (**)(char *, uint64_t, uint64_t))((char *)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_100010218(&qword_1008143F8);
  __chkstk_darwin(v22 - 8);
  uint64_t v191 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v149 = (uint64_t)&v140 - v25;
  uint64_t v147 = sub_100010218(&qword_1007F8EA0);
  __chkstk_darwin(v147);
  uint64_t v27 = (char *)&v140 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for Font.Leading();
  uint64_t v161 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  long long v162 = (char *)&v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100010218(&qword_100806EB0);
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  long long v160 = (char *)&v140 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100010218(&qword_1008006B0);
  uint64_t v187 = *(void (***)(char *, uint64_t))(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v181 = (char *)&v140 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v145 = *(void *)(v192 - 8);
  uint64_t v184 = v145;
  __chkstk_darwin(v192);
  uint64_t v179 = (char *)&v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v152 = sub_100010218(&qword_100814210);
  unint64_t v154 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  long long v153 = (char *)&v140 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = type metadata accessor for AttributeContainer();
  uint64_t v156 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  unint64_t v155 = (char *)&v140 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  long long v157 = (char *)&v140 - v35;
  __chkstk_darwin(v36);
  uint64_t v190 = (char *)&v140 - v37;
  uint64_t v167 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v167);
  double v168 = (char *)&v140 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v39 - 8);
  long long v166 = (char *)&v140 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v41 - 8);
  long long v165 = (char *)&v140 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v43 - 8);
  uint64_t v44 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v44 - 8);
  uint64_t v46 = (char *)&v140 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for AttributedString();
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v146 = (char *)&v140 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  uint64_t v143 = (char *)&v140 - v49;
  __chkstk_darwin(v50);
  char v148 = (char *)&v140 - v51;
  uint64_t v52 = sub_10062E728(a1);
  double v195 = v10;
  uint64_t v144 = v6;
  char v151 = v27;
  uint64_t v142 = Update;
  uint64_t v169 = v2;
  uint64_t v158 = v15;
  switch(a1)
  {
    case 2:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v72._uint64_t countAndFlagsBits = 23390;
      v72._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v72);
      long long v197 = (double *)v52;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v73._uint64_t countAndFlagsBits = 0xD000000000000039;
      v73._object = (void *)0x80000001006A8D70;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v73);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v74 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v166, 1, 1, v74);
      swift_getKeyPath();
      long long v197 = _swiftEmptyArrayStorage;
      sub_10062F2AC(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      uint64_t v71 = v148;
      goto LABEL_10;
    case 3:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v75._uint64_t countAndFlagsBits = 23390;
      v75._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v75);
      long long v197 = (double *)v52;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v76._uint64_t countAndFlagsBits = 0xD000000000000035;
      v76._object = (void *)0x80000001006A8D00;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v76);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v77 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v166, 1, 1, v77);
      swift_getKeyPath();
      long long v197 = _swiftEmptyArrayStorage;
      sub_10062F2AC(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      uint64_t v71 = v148;
      goto LABEL_10;
    case 4:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v78._uint64_t countAndFlagsBits = 23390;
      v78._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v78);
      long long v197 = (double *)v52;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v79._uint64_t countAndFlagsBits = 0xD000000000000036;
      v79._object = (void *)0x80000001006A8C90;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v79);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v80 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v166, 1, 1, v80);
      swift_getKeyPath();
      long long v197 = _swiftEmptyArrayStorage;
      sub_10062F2AC(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      uint64_t v71 = v148;
LABEL_10:
      AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
      uint64_t v64 = (uint64_t)v183;
      uint64_t v65 = v171;
      uint64_t v66 = v170;
      uint64_t v67 = v188;
      uint64_t v68 = v187;
      uint64_t v69 = v181;
      unint64_t v70 = v152;
      break;
    default:
      sub_10002C4EC(v2 + 8, (uint64_t)v199, &qword_1007FDC80);
      sub_10002C4EC((uint64_t)v199, (uint64_t)v200, &qword_1007FDC80);
      if (v200[8] != 1) {
        goto LABEL_5;
      }
      char v53 = *(unsigned char *)(v2 + 48);
      uint64_t v54 = swift_retain();
      uint64_t v55 = sub_100666C70(v54, v53);
      swift_release();
      swift_getKeyPath();
      long long v197 = (double *)v55;
      sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v56 = v55 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
      swift_beginAccess();
      sub_10062F30C(v56, (uint64_t)v46, type metadata accessor for InsightsDataManager.Streaks);
      swift_release();
      sub_100010218(&qword_100813948);
      AppStorage.wrappedValue.getter();
      LOBYTE(v55) = sub_1004BA788(v197);
      sub_10062F374((uint64_t)v46, type metadata accessor for InsightsDataManager.Streaks);
      if (v55)
      {
LABEL_5:
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v61._uint64_t countAndFlagsBits = 23390;
        v61._object = (void *)0xE200000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v61);
        long long v197 = (double *)v52;
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        v62._uint64_t countAndFlagsBits = 0xD000000000000033;
        v62._object = (void *)0x80000001006A8DF0;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v62);
        String.LocalizationValue.init(stringInterpolation:)();
        uint64_t v63 = type metadata accessor for Locale();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v166, 1, 1, v63);
        swift_getKeyPath();
        long long v197 = _swiftEmptyArrayStorage;
        sub_10062F2AC(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
        sub_100010218(&qword_1007FEB18);
        sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        sub_100179988();
        long long v60 = v143;
      }
      else
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v57._uint64_t countAndFlagsBits = 23390;
        v57._object = (void *)0xE200000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v57);
        long long v197 = (double *)v52;
        String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        v58._object = (void *)0x80000001006A8E60;
        v58._uint64_t countAndFlagsBits = 0xD000000000000032;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v58);
        String.LocalizationValue.init(stringInterpolation:)();
        uint64_t v59 = type metadata accessor for Locale();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v166, 1, 1, v59);
        swift_getKeyPath();
        long long v197 = _swiftEmptyArrayStorage;
        sub_10062F2AC(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
        sub_100010218(&qword_1007FEB18);
        sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        sub_100179988();
        long long v60 = v143;
      }
      AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
      uint64_t v64 = (uint64_t)v183;
      uint64_t v65 = v171;
      uint64_t v66 = v170;
      uint64_t v67 = v188;
      uint64_t v68 = v187;
      uint64_t v69 = v181;
      unint64_t v70 = v152;
      uint64_t v71 = v148;
      (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v148, v60, v171);
      break;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v178, v71, v65);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  unint64_t v152 = sub_1003DF8DC();
  uint64_t v82 = v153;
  static AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v83 = v184;
  long long v84 = *(void (***)(char *, uint64_t))(v184 + 104);
  long long v85 = v179;
  uint64_t v86 = v192;
  uint64_t v188 = v184 + 104;
  uint64_t v187 = v84;
  ((void (*)(char *, void, uint64_t))v84)(v179, enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:), v192);
  AttributeContainer.Builder.callAsFunction(_:)();
  char v87 = *(char **)(v83 + 8);
  uint64_t v184 = v83 + 8;
  uint64_t v181 = v87;
  ((void (*)(char *, uint64_t))v87)(v85, v86);
  (*(void (**)(char *, unint64_t))(v154 + 8))(v82, v70);
  uint64_t v88 = swift_getKeyPath();
  __chkstk_darwin(v88);
  swift_getKeyPath();
  unint64_t v154 = sub_10017ABA0();
  static AttributeContainer.subscript.getter();
  swift_release();
  long long v197 = (double *)static Color.secondary.getter();
  uint64_t v89 = v155;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  v68[1](v69, v67);
  uint64_t v90 = swift_getKeyPath();
  __chkstk_darwin(v90);
  swift_getKeyPath();
  sub_1002D70A4();
  char v91 = v160;
  AttributeContainer.subscript.getter();
  swift_release();
  char v92 = *(void (**)(char *, uint64_t))(v156 + 8);
  uint64_t v93 = v159;
  v92(v89, v159);
  static Font.caption.getter();
  uint64_t v94 = v161;
  uint64_t v95 = v162;
  uint64_t v96 = v172;
  (*(void (**)(char *, void, uint64_t))(v161 + 104))(v162, enum case for Font.Leading.tight(_:), v172);
  uint64_t v97 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v96);
  long long v197 = (double *)v97;
  uint64_t v98 = v157;
  uint64_t v99 = v164;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v91, v99);
  uint64_t v100 = v190;
  AttributedString.replaceAttributes(_:with:)();
  v92(v98, v93);
  v92(v100, v93);
  uint64_t v101 = (char *)v173;
  AttributedString.runs.getter();
  uint64_t v102 = swift_getKeyPath();
  __chkstk_darwin(v102);
  swift_getKeyPath();
  uint64_t v103 = v174;
  AttributedString.Runs.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v180 + 8))(v101, v185);
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v186, v103, v176);
  sub_100014488(&qword_100814400, &qword_1008143F0);
  dispatch thunk of Sequence.makeIterator()();
  sub_100014488(&qword_100814408, &qword_1008143E8);
  uint64_t v104 = (uint64_t)v191;
  dispatch thunk of IteratorProtocol.next()();
  uint64_t v105 = v177 + 48;
  uint64_t v106 = v158;
  uint64_t v190 = *(char **)(v177 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v190)(v104, 1, v158) == 1)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v150 + 8))(v193, v194);
    uint64_t v107 = 1;
    uint64_t v108 = (uint64_t)v151;
    uint64_t v109 = v169;
    uint64_t v110 = v149;
    goto LABEL_24;
  }
  char v186 = (char *)(v145 + 56);
  uint64_t v111 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
  unint64_t v173 = (void (**)(char *, uint64_t, uint64_t))(v145 + 32);
  LODWORD(v185) = enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.value(_:);
  uint64_t v172 = v145 + 48;
  while (1)
  {
    sub_10002C4EC(v104, v64, &qword_1008143E0);
    uint64_t v113 = v111;
    uint64_t v114 = v196;
    uint64_t v115 = v192;
    ((void (*)(uint64_t, void, uint64_t))v187)(v196, v185, v192);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v186)(v114, 0, 1, v115);
    uint64_t v116 = (uint64_t)v195;
    uint64_t v117 = (uint64_t)&v195[*(int *)(v189 + 48)];
    sub_10001B220(v64, (uint64_t)v195, &qword_10080BF10);
    sub_10001B220(v114, v117, &qword_10080BF10);
    uint64_t v118 = *v113;
    if ((*v113)(v116, 1, v115) == 1) {
      break;
    }
    uint64_t v119 = v182;
    sub_10001B220(v116, v182, &qword_10080BF10);
    if (v118(v117, 1, v115) == 1)
    {
      uint64_t v111 = v113;
      ((void (*)(uint64_t, uint64_t))v181)(v119, v115);
      uint64_t v64 = (uint64_t)v183;
      goto LABEL_15;
    }
    uint64_t v120 = v179;
    (*v173)(v179, v117, v115);
    sub_10062F2AC(&qword_10080BF20, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
    LODWORD(v180) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v121 = v105;
    uint64_t v122 = (void (*)(char *, uint64_t))v181;
    ((void (*)(uint64_t, uint64_t))v181)(v119, v115);
    uint64_t v123 = v120;
    uint64_t v111 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v172;
    v122(v123, v115);
    uint64_t v105 = v121;
    sub_10001457C(v116, &qword_10080BF10);
    sub_10001457C(v196, &qword_10080BF10);
    uint64_t v64 = (uint64_t)v183;
    if (v180) {
      goto LABEL_23;
    }
LABEL_16:
    sub_10001457C(v64, &qword_1008143E0);
    uint64_t v104 = (uint64_t)v191;
    dispatch thunk of IteratorProtocol.next()();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v190)(v104, 1, v106) == 1) {
      goto LABEL_12;
    }
  }
  unsigned int v112 = v118(v117, 1, v115);
  uint64_t v111 = v113;
  if (v112 != 1)
  {
LABEL_15:
    sub_10001457C((uint64_t)v195, &qword_10080BF18);
    sub_10001457C(v196, &qword_10080BF10);
    goto LABEL_16;
  }
  sub_10001457C((uint64_t)v195, &qword_10080BF10);
  sub_10001457C(v196, &qword_10080BF10);
LABEL_23:
  (*(void (**)(char *, uint64_t))(v150 + 8))(v193, v194);
  uint64_t v110 = v149;
  sub_10002C4EC(v64, v149, &qword_1008143E0);
  uint64_t v107 = 0;
  uint64_t v108 = (uint64_t)v151;
  uint64_t v109 = v169;
LABEL_24:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v110, v107, 1, v106);
  (*(void (**)(char *, uint64_t))(v175 + 8))(v174, v176);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v190)(v110, 1, v106) == 1)
  {
    char v124 = &qword_1008143F8;
    uint64_t v125 = v110;
  }
  else
  {
    sub_10002C4EC(v110 + *(int *)(v106 + 48), v108, &qword_1007F8EA0);
    sub_10001457C(v110, &qword_10080BF10);
    char v126 = *(unsigned char *)(v109 + 48);
    uint64_t v127 = swift_retain();
    sub_100666C70(v127, v126);
    swift_release();
    char v128 = sub_10046AE60();
    swift_release();
    if ((v128 & 1) == 0) {
      goto LABEL_28;
    }
    uint64_t v129 = swift_retain();
    uint64_t v130 = sub_100666C70(v129, v126);
    swift_release();
    swift_getKeyPath();
    long long v197 = (double *)v130;
    sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v131 = v130 + OBJC_IVAR____TtC7Journal19InsightsDataManager__lastUpdated;
    swift_beginAccess();
    uint64_t v132 = v131;
    uint64_t v133 = v141;
    sub_10062F30C(v132, v141, type metadata accessor for InsightsDataManager.LastUpdate);
    swift_release();
    uint64_t v134 = *(void *)(v133 + *(int *)(v142 + 24));
    swift_bridgeObjectRetain();
    sub_10062F374(v133, type metadata accessor for InsightsDataManager.LastUpdate);
    LOBYTE(v133) = sub_100542088(5, v134);
    swift_bridgeObjectRelease();
    if ((v133 & 1) == 0)
    {
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v136 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v166, 1, 1, v136);
      long long v198 = _swiftEmptyArrayStorage;
      sub_10062F2AC(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v135 = v146;
      AttributedString.init(localized:options:table:bundle:locale:comment:)();
    }
    else
    {
LABEL_28:
      sub_100014488((unint64_t *)&qword_1007FFA38, &qword_1007F8EA0);
      AttributedString.subscript.getter();
      uint64_t v135 = v146;
      AttributedString.init(_:)();
    }
    uint64_t v137 = swift_getKeyPath();
    __chkstk_darwin(v137);
    swift_getKeyPath();
    long long v198 = (double *)static Color.primary.getter();
    AttributedString.subscript.setter();
    sub_100014488((unint64_t *)&qword_1007FFA38, &qword_1007F8EA0);
    sub_10062F2AC(&qword_100813B60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    uint64_t v138 = v171;
    AttributedString.replaceSubrange<A, B>(_:with:)();
    (*(void (**)(char *, uint64_t))(v170 + 8))(v135, v138);
    uint64_t v125 = v108;
    char v124 = &qword_1007F8EA0;
  }
  return sub_10001457C(v125, v124);
}

uint64_t sub_10062E288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_100814360);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v1[3];
  v13[2] = v1[2];
  v14[0] = v6;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v1 + 57);
  long long v7 = v1[1];
  v13[0] = *v1;
  v13[1] = v7;
  *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4034000000000000;
  v5[16] = 0;
  uint64_t v8 = sub_100010218(&qword_100814368);
  sub_10062ACD8((uint64_t)v13, (uint64_t)&v5[*(int *)(v8 + 44)]);
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10001B220((uint64_t)v5, a1, &qword_100814360);
  uint64_t v9 = (_OWORD *)(a1 + *(int *)(sub_100010218(&qword_100814370) + 36));
  long long v10 = v12[1];
  *uint64_t v9 = v12[0];
  v9[1] = v10;
  void v9[2] = v12[2];
  return sub_10001457C((uint64_t)v5, &qword_100814360);
}

uint64_t sub_10062E3AC()
{
  swift_release();
  swift_release();
  swift_release();
  sub_100026DF8(*(void *)(v0 + 80), *(unsigned char *)(v0 + 88));

  return swift_deallocObject();
}

uint64_t sub_10062E400()
{
  return (*(uint64_t (**)(void))(v0 + 40))(*(unsigned __int8 *)(v0 + 89));
}

uint64_t sub_10062E430@<X0>(uint64_t a1@<X8>)
{
  return sub_10062B5FC(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_10062E43C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100026CCC(v2, v3);
  return a1;
}

unint64_t sub_10062E49C()
{
  unint64_t result = qword_1008143A0;
  if (!qword_1008143A0)
  {
    sub_100014440(&qword_100814398);
    sub_10062E548();
    sub_10062F2AC((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008143A0);
  }
  return result;
}

unint64_t sub_10062E548()
{
  unint64_t result = qword_1008143A8;
  if (!qword_1008143A8)
  {
    sub_100014440(&qword_1008143B0);
    sub_10062E5E8();
    sub_100014488(&qword_100800698, &qword_100800618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008143A8);
  }
  return result;
}

unint64_t sub_10062E5E8()
{
  unint64_t result = qword_1008143B8;
  if (!qword_1008143B8)
  {
    sub_100014440(&qword_1008143C0);
    sub_10062E688();
    sub_100014488(&qword_100800148, &qword_100800150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008143B8);
  }
  return result;
}

unint64_t sub_10062E688()
{
  unint64_t result = qword_1008143C8;
  if (!qword_1008143C8)
  {
    sub_100014440(&qword_1008143D0);
    sub_100014488(&qword_100801678, &qword_100801680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008143C8);
  }
  return result;
}

uint64_t sub_10062E728(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - v17;
  sub_10002C4EC(v2 + 8, (uint64_t)v51, &qword_1007FDC80);
  sub_10002C4EC((uint64_t)v51, (uint64_t)&v52, &qword_1007FDC80);
  if ((v53 & 1) == 0) {
    return v52;
  }
  switch(a1)
  {
    case 2:
      char v31 = *(unsigned char *)(v2 + 48);
      uint64_t v32 = swift_retain();
      uint64_t v33 = sub_100666C70(v32, v31);
      swift_release();
      swift_getKeyPath();
      uint64_t v50 = v33;
      sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v34 = v33 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
      swift_beginAccess();
      sub_10062F30C(v34, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
      swift_release();
      uint64_t v35 = sub_1006519E0();
      goto LABEL_10;
    case 3:
      char v36 = *(unsigned char *)(v2 + 48);
      uint64_t v37 = swift_retain();
      uint64_t v38 = sub_100666C70(v37, v36);
      swift_release();
      swift_getKeyPath();
      uint64_t v50 = v38;
      sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v28 = *(void *)(v38 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount);
      swift_release();
      return v28;
    case 4:
      char v39 = *(unsigned char *)(v2 + 48);
      uint64_t v40 = swift_retain();
      uint64_t v41 = sub_100666C70(v40, v39);
      swift_release();
      swift_getKeyPath();
      uint64_t v50 = v41;
      sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v42 = v41 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
      swift_beginAccess();
      sub_10062F30C(v42, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
      swift_release();
      uint64_t v35 = sub_100651BD8();
LABEL_10:
      uint64_t v28 = v35;
      uint64_t v29 = (uint64_t)v6;
      uint64_t v30 = type metadata accessor for InsightsDataManager.EntrySummaryGroup;
      goto LABEL_11;
    default:
      uint64_t v44 = v7;
      unsigned __int8 v19 = *(unsigned char *)(v2 + 48);
      int v47 = v19;
      uint64_t v20 = swift_retain();
      uint64_t v21 = sub_100666C70(v20, v19);
      swift_release();
      swift_getKeyPath();
      uint64_t v50 = v21;
      uint64_t v46 = sub_10062F2AC((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v22 = v21 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
      swift_beginAccess();
      uint64_t v45 = type metadata accessor for InsightsDataManager.Streaks;
      sub_10062F30C(v22, (uint64_t)v12, type metadata accessor for InsightsDataManager.Streaks);
      swift_release();
      uint64_t v23 = swift_retain();
      uint64_t v24 = sub_100666C70(v23, v47);
      swift_release();
      swift_getKeyPath();
      uint64_t v49 = v24;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v25 = v24 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
      swift_beginAccess();
      uint64_t v26 = v45;
      sub_10062F30C(v25, (uint64_t)v9, v45);
      swift_release();
      sub_100010218(&qword_100813948);
      AppStorage.wrappedValue.getter();
      LOBYTE(v24) = sub_1004BA788(v48);
      sub_10062F374((uint64_t)v9, v26);
      uint64_t v27 = (uint64_t)v12;
      if (v24) {
        uint64_t v27 = (uint64_t)&v12[*(int *)(v44 + 20)];
      }
      sub_10062F30C(v27, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StreakSummary);
      sub_1002376B4((uint64_t)v15, (uint64_t)v18);
      sub_10062F374((uint64_t)v12, type metadata accessor for InsightsDataManager.Streaks);
      uint64_t v28 = *(void *)&v18[*(int *)(v13 + 28)];
      uint64_t v29 = (uint64_t)v18;
      uint64_t v30 = (uint64_t (*)(void))type metadata accessor for StreakSummary;
LABEL_11:
      sub_10062F374(v29, v30);
      break;
  }
  return v28;
}

uint64_t sub_10062EDAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10062EDD8()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_10062EE00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10062EE2C()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_10062EE58(char a1)
{
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 2:
      if (qword_1007F7F58 != -1) {
        swift_once();
      }
      long long v6 = qword_10083EF28;
      break;
    case 3:
      if (qword_1007F7F80 != -1) {
        swift_once();
      }
      long long v6 = qword_10083EFA0;
      break;
    case 4:
      if (qword_1007F7F70 != -1) {
        swift_once();
      }
      long long v6 = qword_10083EF70;
      break;
    default:
      if (qword_1007F7F60 != -1) {
        swift_once();
      }
      long long v6 = qword_10083EF40;
      break;
  }
  uint64_t v7 = sub_100026A54(v2, (uint64_t)v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  return Color.init(_:)();
}

uint64_t sub_10062F04C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10062F078()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_10062F0AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10062F0D8()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

void sub_10062F108(void *a1@<X8>)
{
  *a1 = &_s17JournalAttributesVN;
}

void sub_10062F118()
{
}

uint64_t sub_10062F140()
{
  return 8;
}

uint64_t sub_10062F14C()
{
  return swift_release();
}

uint64_t sub_10062F154(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10062F160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814420) & 1;
}

uint64_t sub_10062F184(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814420);
}

void *sub_10062F190(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_10062F19C()
{
}

void sub_10062F1BC()
{
}

uint64_t sub_10062F1E4()
{
  return 8;
}

uint64_t sub_10062F1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814418) & 1;
}

uint64_t sub_10062F214(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814418);
}

void sub_10062F220()
{
}

void sub_10062F240()
{
}

uint64_t sub_10062F268()
{
  return 8;
}

uint64_t sub_10062F274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814410) & 1;
}

uint64_t sub_10062F298(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814410);
}

uint64_t sub_10062F2AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10062F30C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10062F374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10062F3D8()
{
  unint64_t result = qword_100814428;
  if (!qword_100814428)
  {
    sub_100014440(&qword_100814370);
    sub_100014488(&qword_100814430, &qword_100814360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814428);
  }
  return result;
}

void *sub_10062F490(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100095C98(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v6 = *v4++;
      uint64_t v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_100095C98(v7 > 1, v8 + 1, 1);
        unint64_t result = v10;
      }
      result[2] = v8 + 1;
      uint64_t v9 = &result[3 * v8];
      v9[4] = v5;
      v9[5] = 0;
      *((unsigned char *)v9 + 48) = 0;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_10062F560(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights) == 1)
  {
    sub_100010218(&qword_1007FD5E8);
    unint64_t v2 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    if (v2 >> 62) {
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      sub_100010218((uint64_t *)&unk_1007FD5F0);
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100793068);
      sub_10062F490((uint64_t)&off_100793098);
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_10062F654(char a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FD5F0);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  unint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id result = [v2 isViewLoaded:v6];
  if (result)
  {
    uint64_t v10 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights;
    if (v2[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights] != (a1 & 1))
    {
      uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource];
      if (v11)
      {
        id v12 = v11;
        dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
        NSDiffableDataSourceSnapshot.deleteSections(_:)((Swift::OpaquePointer)&off_1007936D0);
        if (v2[v10] == 1)
        {
          uint64_t v13 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
          if (v13[2])
          {
            uint64_t v14 = v13[4];
            unint64_t v15 = v13[5];
            sub_1004B9DDC(v14, v15);
            swift_bridgeObjectRelease();
            uint64_t v17 = v14;
            unint64_t v18 = v15;
            NSDiffableDataSourceSnapshot.insertSections(_:beforeSection:)();
            sub_1001D5988(v14, v15);
          }
          else
          {
            swift_bridgeObjectRelease();
            NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100793730);
          }
          sub_10062F490((uint64_t)&off_100793760);
          uint64_t v17 = 0;
          unint64_t v18 = 0;
          NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
          swift_bridgeObjectRelease();
        }
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

        return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
      }
    }
  }
  return result;
}

uint64_t sub_10062F870(unsigned __int8 *a1, char *a2)
{
  return sub_10017D224(*a1, *a2);
}

Swift::Int sub_10062F87C()
{
  return Hasher._finalize()();
}

uint64_t sub_10062F970()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10062FA4C()
{
  return Hasher._finalize()();
}

unint64_t sub_10062FB3C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10063023C(*a1);
  *a2 = result;
  return result;
}

void sub_10062FB6C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEF73656972746E45;
  uint64_t v3 = 0x724F6B6165727473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6B6165727473;
      goto LABEL_3;
    case 2:
      *a1 = 0x73656972746E65;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x7364726F77;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 1937334628;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

id sub_10062FC24(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_100010218(&qword_100814438);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *a3;
  IndexPath.item.getter();
  id result = [a4 numberOfItemsInSection:IndexPath.section.getter()];
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    __chkstk_darwin(result);
    *((unsigned char *)&v20 - 32) = v14;
    *((unsigned char *)&v20 - 31) = v16;
    *(&v20 - 3) = a5;
    *(&v20 - 2) = a6;
    sub_100010218(&qword_100814440);
    uint64_t v17 = type metadata accessor for InsightsDataManager(255);
    unint64_t v18 = sub_100630000();
    unint64_t v19 = sub_1004BB4A0();
    v21[0] = (uint64_t)&type metadata for TimelineInsightsSummaryItem;
    v21[1] = v17;
    v21[2] = v18;
    unint64_t v22 = v19;
    swift_getOpaqueTypeConformance2();
    UIHostingConfiguration<>.init(content:)();
    static Edge.Set.all.getter();
    unint64_t v22 = v10;
    unint64_t v23 = sub_100630054();
    sub_100062E54(v21);
    UIHostingConfiguration.margins(_:_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return (id)UICollectionViewCell.contentConfiguration.setter();
  }
  return result;
}

uint64_t sub_10062FE40()
{
  type metadata accessor for InsightsDataManager(0);
  sub_1004BB4A0();
  swift_retain();
  Environment.init<A>(_:)();
  sub_10060E484();
  AppStorage.init<A>(_:store:)();
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  sub_100630000();
  View.environment<A>(_:)();
  swift_release();
  swift_release();
  swift_release();
  return sub_100026DF8(KeyPath, 0);
}

uint64_t sub_10062FFC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10062FFF0()
{
  return sub_10062FE40();
}

unint64_t sub_100630000()
{
  unint64_t result = qword_100814448;
  if (!qword_100814448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814448);
  }
  return result;
}

unint64_t sub_100630054()
{
  unint64_t result = qword_100814450;
  if (!qword_100814450)
  {
    sub_100014440(&qword_100814438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814450);
  }
  return result;
}

uint64_t sub_1006300B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

unsigned char *_s7InsightOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006301ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7InsightOMa()
{
  return &_s7InsightON;
}

unint64_t sub_1006301E8()
{
  unint64_t result = qword_100814458;
  if (!qword_100814458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814458);
  }
  return result;
}

unint64_t sub_10063023C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100795128, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t destroy for InsightsWordCountView(uint64_t a1)
{
  sub_100026DF8(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_100026DF8(*(void *)(a1 + 64), *(unsigned char *)(a1 + 72));

  return swift_release();
}

uint64_t initializeWithCopy for InsightsWordCountView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 56);
  sub_100026CCC(v4, v5);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  sub_100026CCC(v6, v7);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  char v8 = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InsightsWordCountView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  char v8 = *((unsigned char *)a2 + 56);
  sub_100026CCC(v7, v8);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  sub_100026DF8(v9, v10);
  uint64_t v11 = a2[8];
  char v12 = *((unsigned char *)a2 + 72);
  sub_100026CCC(v11, v12);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  sub_100026DF8(v13, v14);
  char v15 = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = a2[10];
  *(unsigned char *)(a1 + 88) = v15;
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = a2[12];
  return a1;
}

uint64_t assignWithTake for InsightsWordCountView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  sub_100026DF8(v6, v7);
  char v8 = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a1 + 64);
  char v10 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = v8;
  sub_100026DF8(v9, v10);
  char v11 = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = v11;
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsWordCountView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsWordCountView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsWordCountView()
{
  return &type metadata for InsightsWordCountView;
}

uint64_t sub_1006305C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006305E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814468);
}

uint64_t sub_1006305EC(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814468);
}

void sub_1006305F8()
{
}

void sub_100630620()
{
}

uint64_t sub_10063063C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_100630654(a1, a2, a3, a4, &qword_100806E88, a5, a6, a7);
}

uint64_t sub_100630648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_100630654(a1, a2, a3, a4, &qword_100814470, a5, a6, a7);
}

uint64_t sub_100630654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v16 = type metadata accessor for Font.TextStyle();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a6, a1, v20);
  uint64_t v21 = (int *)sub_100010218(a5);
  *(void *)(a6 + v21[9]) = a2;
  unint64_t v22 = (double *)(a6 + v21[10]);
  *unint64_t v22 = a7;
  v22[1] = a8;
  unint64_t v23 = (void *)(a6 + v21[11]);
  *unint64_t v23 = a3;
  v23[1] = a4;
  uint64_t v24 = a6 + v21[12];
  *(void *)uint64_t v24 = swift_getKeyPath();
  *(unsigned char *)(v24 + 8) = 0;
  uint64_t v25 = a6 + v21[13];
  *(void *)uint64_t v25 = swift_getKeyPath();
  *(unsigned char *)(v25 + 8) = 0;
  uint64_t v26 = a6 + v21[14];
  *(void *)uint64_t v26 = swift_getKeyPath();
  *(unsigned char *)(v26 + 8) = 0;
  v28[1] = 0x4046000000000000;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for Font.TextStyle.subheadline(_:), v16);
  sub_1000DA83C();
  uint64_t result = ScaledMetric.init(wrappedValue:relativeTo:)();
  *(void *)(a6 + v21[16]) = 0x4054000000000000;
  return result;
}

uint64_t sub_100630854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814460);
}

uint64_t sub_100630860(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814460);
}

void sub_10063086C()
{
}

void sub_100630894()
{
}

uint64_t sub_1006308B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v70 = a1;
  uint64_t v72 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v69 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100010218(&qword_100806DF8);
  __chkstk_darwin(v67);
  uint64_t v64 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for ColorResource();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  Swift::String v58 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ColorScheme();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100010218(&qword_100806E00) - 8;
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100806E08);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100806E10);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100806E18);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_100806E20);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100010218(&qword_100806E28);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  Swift::String v61 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v26 = sub_100010218(&qword_100806E30);
  sub_1006312CC(v2, (uint64_t)&v12[*(int *)(v26 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v12, (uint64_t)v16, &qword_100806E08);
  uint64_t v28 = &v16[*(int *)(v14 + 44)];
  *(void *)uint64_t v28 = KeyPath;
  v28[8] = 1;
  sub_10001457C((uint64_t)v12, &qword_100806E08);
  uint64_t v29 = enum case for BlendMode.plusDarker(_:);
  uint64_t v30 = type metadata accessor for BlendMode();
  char v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104);
  v31(v9, v29, v30);
  v31(&v9[*(int *)(v54 + 48)], enum case for BlendMode.plusLighter(_:), v30);
  sub_10001B220((uint64_t)v9, (uint64_t)&v20[*(int *)(v18 + 44)], &qword_100806E00);
  sub_10001B220((uint64_t)v16, (uint64_t)v20, &qword_100806E10);
  sub_10001457C((uint64_t)v9, &qword_100806E00);
  sub_10001457C((uint64_t)v16, &qword_100806E10);
  uint64_t v32 = v56;
  uint64_t v33 = v55;
  uint64_t v34 = v57;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for ColorScheme.dark(_:), v57);
  uint64_t v35 = swift_getKeyPath();
  char v36 = (uint64_t *)&v24[*(int *)(v22 + 44)];
  uint64_t v37 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v34);
  *char v36 = v35;
  sub_10001B220((uint64_t)v20, (uint64_t)v24, &qword_100806E18);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  sub_10001457C((uint64_t)v20, &qword_100806E18);
  sub_100010218(&qword_100800168);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1006D6270;
  if (qword_1007F7F80 != -1) {
    swift_once();
  }
  uint64_t v39 = v60;
  uint64_t v40 = sub_100026A54(v60, (uint64_t)qword_10083EFA0);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  uint64_t v42 = v58;
  v41(v58, v40, v39);
  *(void *)(v38 + 32) = Color.init(_:)();
  if (qword_1007F7F78 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_100026A54(v39, (uint64_t)qword_10083EF88);
  v41(v42, v43, v39);
  *(void *)(v38 + 40) = Color.init(_:)();
  *(void *)&long long v73 = v38;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  swift_bridgeObjectRelease();
  long long v77 = v80;
  long long v78 = v81;
  uint64_t v79 = v82;
  long long v73 = v80;
  long long v74 = v81;
  uint64_t v75 = v82;
  __int16 v76 = 256;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800170);
  sub_100014488(&qword_100800178, &qword_100800170);
  uint64_t v44 = AnyView.init<A>(_:)();
  uint64_t v45 = v64;
  sub_10001B220((uint64_t)v24, v64, &qword_100806E20);
  uint64_t v46 = v67;
  *(void *)(v45 + *(int *)(v67 + 36)) = v44;
  int v47 = v65;
  static ContainerBackgroundPlacement.widget.getter();
  unint64_t v48 = sub_1002D6B40();
  uint64_t v49 = v61;
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v68);
  sub_10001457C(v45, &qword_100806DF8);
  sub_100179324((uint64_t)&v80);
  sub_10001457C((uint64_t)v24, &qword_100806E20);
  uint64_t v50 = v69;
  static AccessibilityChildBehavior.combine.getter();
  *(void *)&long long v73 = v46;
  *((void *)&v73 + 1) = &type metadata for LinearGradient;
  *(void *)&long long v74 = v48;
  *((void *)&v74 + 1) = &protocol witness table for LinearGradient;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v63;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v49, v51);
}

uint64_t sub_1006312CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = sub_100010218(&qword_100800618);
  __chkstk_darwin(v68);
  long long v73 = (uint64_t *)((char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ContentTransition();
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100010218(&qword_100806E70);
  __chkstk_darwin(v67);
  uint64_t v8 = (_OWORD *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = sub_100010218(&qword_100806E78);
  __chkstk_darwin(v70);
  uint64_t v75 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v74 = (uint64_t)&v57 - v11;
  uint64_t v12 = sub_100010218(&qword_100806E80);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = sub_100010218(&qword_100806E88);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v76 = (uint64_t)&v57 - v22;
  sub_1006319F8((uint64_t)&v57 - v22);
  uint64_t v23 = *(void *)(a1 + 48);
  char v24 = *(unsigned char *)(a1 + 56);
  sub_100026CCC(v23, v24);
  char v25 = sub_100666714(v23, v24);
  sub_100026DF8(v23, v24);
  if (v25)
  {
    uint64_t v64 = v20;
    uint64_t v65 = v17;
    uint64_t v66 = a2;
    uint64_t v62 = static VerticalAlignment.firstTextBaseline.getter();
    sub_1006321CC((uint64_t)&v89);
    long long v26 = v89;
    char v27 = v90;
    uint64_t v58 = v91;
    uint64_t v59 = *((void *)&v90 + 1);
    char v28 = BYTE8(v91);
    uint64_t v60 = *((void *)&v92 + 1);
    uint64_t v61 = v92;
    char v29 = v93;
    uint64_t v63 = *((void *)&v93 + 1);
    uint64_t v57 = static Font.footnote.getter();
    uint64_t KeyPath = swift_getKeyPath();
    int v31 = static HierarchicalShapeStyle.secondary.getter();
    char v80 = 0;
    char v79 = v27;
    char v78 = v28;
    char v77 = v29;
    uint64_t v32 = swift_getKeyPath();
    long long v81 = (unint64_t)v62;
    v82[0] = v80;
    *(_OWORD *)&v82[8] = v26;
    v82[24] = v79;
    *(void *)&long long v83 = v59;
    *((void *)&v83 + 1) = v58;
    LOBYTE(v84) = v78;
    *((void *)&v84 + 1) = v61;
    *(void *)&long long v85 = v60;
    BYTE8(v85) = v77;
    *(void *)&long long v86 = v63;
    *((void *)&v86 + 1) = KeyPath;
    *(void *)&long long v87 = v57;
    DWORD2(v87) = v31;
    *(void *)&long long v88 = v32;
    *((void *)&v88 + 1) = 0x3FE3333333333333;
    char v33 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    long long v95 = v86;
    long long v96 = v87;
    long long v97 = v88;
    long long v91 = *(_OWORD *)&v82[16];
    long long v92 = v83;
    long long v93 = v84;
    long long v94 = v85;
    long long v89 = v81;
    long long v90 = *(_OWORD *)v82;
    LOBYTE(v98) = v33;
    *((void *)&v98 + 1) = v34;
    *(void *)&v99[0] = v35;
    *((void *)&v99[0] + 1) = v36;
    *(void *)&v99[1] = v37;
    BYTE8(v99[1]) = 0;
    uint64_t v38 = v69;
    static ContentTransition.numericText(countsDown:)();
    uint64_t v39 = swift_getKeyPath();
    uint64_t v41 = v72;
    uint64_t v40 = v73;
    uint64_t v42 = v71;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))((char *)v73 + *(int *)(v68 + 28), v38, v72);
    *uint64_t v40 = v39;
    sub_10001B220((uint64_t)v40, (uint64_t)v8 + *(int *)(v67 + 36), &qword_100800618);
    long long v43 = v98;
    unsigned char v8[8] = v97;
    v8[9] = v43;
    v8[10] = v99[0];
    *(_OWORD *)((char *)v8 + 169) = *(_OWORD *)((char *)v99 + 9);
    long long v44 = v94;
    v8[4] = v93;
    v8[5] = v44;
    long long v45 = v96;
    void v8[6] = v95;
    v8[7] = v45;
    long long v46 = v90;
    _OWORD *v8 = v89;
    v8[1] = v46;
    long long v47 = v92;
    void v8[2] = v91;
    v8[3] = v47;
    sub_1002D6DFC((uint64_t)&v89);
    sub_10001457C((uint64_t)v40, &qword_100800618);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v41);
    sub_1002D6EA0((uint64_t)&v81);
    if (qword_1007F6BD8 != -1) {
      swift_once();
    }
    uint64_t v48 = qword_10083D1D0;
    uint64_t v49 = v75;
    sub_10001B220((uint64_t)v8, v75, &qword_100806E70);
    *(void *)(v49 + *(int *)(v70 + 36)) = v48;
    swift_retain();
    sub_10001457C((uint64_t)v8, &qword_100806E70);
    uint64_t v50 = v74;
    sub_10002C4EC(v49, v74, &qword_100806E78);
    sub_10001B220(v50, v49, &qword_100806E78);
    *(void *)uint64_t v14 = 0x4030000000000000;
    v14[8] = 0;
    uint64_t v51 = sub_100010218(&qword_100806EA0);
    sub_10001B220(v49, (uint64_t)&v14[*(int *)(v51 + 48)], &qword_100806E78);
    sub_10001457C(v50, &qword_100806E78);
    sub_10001457C(v49, &qword_100806E78);
    uint64_t v52 = sub_100010218(&qword_100806E90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v14, 0, 1, v52);
    uint64_t v17 = v65;
    sub_10002C4EC((uint64_t)v14, (uint64_t)v65, &qword_100806E80);
    a2 = v66;
    uint64_t v20 = v64;
  }
  else
  {
    uint64_t v53 = sub_100010218(&qword_100806E90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v17, 1, 1, v53);
  }
  uint64_t v54 = v76;
  sub_10001B220(v76, (uint64_t)v20, &qword_100806E88);
  sub_10001B220((uint64_t)v17, (uint64_t)v14, &qword_100806E80);
  sub_10001B220((uint64_t)v20, a2, &qword_100806E88);
  uint64_t v55 = sub_100010218(&qword_100806E98);
  sub_10001B220((uint64_t)v14, a2 + *(int *)(v55 + 48), &qword_100806E80);
  sub_10001457C((uint64_t)v17, &qword_100806E80);
  sub_10001457C(v54, &qword_100806E88);
  sub_10001457C((uint64_t)v14, &qword_100806E80);
  return sub_10001457C((uint64_t)v20, &qword_100806E88);
}

uint64_t sub_1006319F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v61 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100010218(&qword_1007F8E58);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for AttributedString();
  uint64_t v57 = *(void *)(v20 - 8);
  uint64_t v58 = v20;
  __chkstk_darwin(v20);
  uint64_t v54 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v56 = (char *)&v49 - v23;
  __chkstk_darwin(v24);
  uint64_t v55 = (char *)&v49 - v25;
  int v26 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v64 = v1;
  if (v26 == 1)
  {
    char v27 = *(unsigned char *)(v64 + 88);
    uint64_t v28 = swift_retain();
    uint64_t v29 = sub_100666C70(v28, v27);
    swift_release();
    swift_getKeyPath();
    uint64_t v65 = (double *)v29;
    sub_1002D7014((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v30 = *(double **)(v29 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount);
    uint64_t v2 = v64;
    swift_release();
  }
  else
  {
    uint64_t v30 = *(double **)v1;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v31._uint64_t countAndFlagsBits = 0x206E657474697257;
  v31._object = (void *)0xEA00000000002A2ALL;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v65 = v30;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  uint64_t v32 = *(void *)(v2 + 48);
  char v33 = *(unsigned char *)(v2 + 56);
  sub_100026CCC(v32, v33);
  char v34 = sub_100666714(v32, v33);
  sub_100026DF8(v32, v33);
  if (v34) {
    static NumberFormatStyleConfiguration.Notation.automatic.getter();
  }
  else {
    static NumberFormatStyleConfiguration.Notation.compactName.getter();
  }
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v51);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
  v35(v15, v12);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  sub_100014344();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
  v35(v18, v12);
  v36._uint64_t countAndFlagsBits = 673196586;
  v36._object = (void *)0xE400000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v36);
  uint64_t v65 = v30;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v37._uint64_t countAndFlagsBits = 0x7364726F572029;
  v37._object = (void *)0xE700000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v60, 1, 1, v53);
  uint64_t v65 = _swiftEmptyArrayStorage;
  sub_1002D7014(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v38 = v55;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t v40 = v56;
  uint64_t v39 = v57;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v42 = v58;
  v41(v56, v38, v58);
  uint64_t v43 = Namespace.wrappedValue.getter();
  uint64_t v44 = (uint64_t)v54;
  v41(v54, v40, v42);
  static UnitPoint.center.getter();
  sub_100630654(v44, v43, (uint64_t)sub_100292BF0, 0, &qword_100806E88, v63, v45, v46);
  long long v47 = *(void (**)(char *, uint64_t))(v39 + 8);
  v47(v40, v42);
  return ((uint64_t (*)(char *, uint64_t))v47)(v38, v42);
}

uint64_t sub_1006321CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1006322C4();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_100632F80();
  uint64_t v11 = v10;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  char v13 = v12 & 1;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v12 & 1;
  *(void *)(a1 + 72) = v14;
  sub_1000C04A4(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006322C4()
{
  uint64_t v1 = sub_100010218(&qword_100806EA8);
  uint64_t v91 = *(void *)(v1 - 8);
  uint64_t v92 = v1;
  __chkstk_darwin(v1);
  long long v90 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v86 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  __chkstk_darwin(v3);
  long long v81 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100010218(&qword_100806EB0);
  uint64_t v82 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  char v80 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1008006B8);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  __chkstk_darwin(v6);
  uint64_t v76 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AttributeContainer();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  __chkstk_darwin(v8);
  char v79 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v84 = (char *)&v64 - v11;
  __chkstk_darwin(v12);
  long long v83 = (char *)&v64 - v13;
  uint64_t v70 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v70);
  uint64_t v71 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v15 - 8);
  uint64_t v69 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v68 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for Locale();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v21 = sub_100010218(&qword_1007F8E58);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  char v27 = (char *)&v64 - v26;
  uint64_t v28 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v28 - 8);
  uint64_t v29 = type metadata accessor for AttributedString();
  uint64_t v74 = *(void *)(v29 - 8);
  uint64_t v75 = v29;
  __chkstk_darwin(v29);
  uint64_t v72 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  long long v73 = (char *)&v64 - v32;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    char v33 = *(unsigned char *)(v0 + 88);
    uint64_t v34 = swift_retain();
    uint64_t v35 = sub_100666C70(v34, v33);
    swift_release();
    swift_getKeyPath();
    unint64_t v93 = v35;
    sub_1002D7014((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v36 = *(void *)(v35 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 8);
    swift_release();
  }
  else
  {
    unint64_t v36 = *(void *)(v0 + 16);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._uint64_t countAndFlagsBits = 10794;
  v37._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  unint64_t v93 = v36;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Notation.compactName.getter();
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v65);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  v38(v24, v21);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  sub_100014344();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
  v38(v27, v21);
  v39._uint64_t countAndFlagsBits = 0x20736968540A2A2ALL;
  v39._object = (void *)0xED000068746E6F4DLL;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v39);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v69, 1, 1, v67);
  unint64_t v93 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1002D7014(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v40 = v73;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_10017AB0C();
  uint64_t v42 = v76;
  static AttributeContainer.subscript.getter();
  swift_release();
  unint64_t v93 = 2;
  uint64_t v43 = v83;
  uint64_t v44 = v78;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v44);
  uint64_t v45 = swift_getKeyPath();
  __chkstk_darwin(v45);
  swift_getKeyPath();
  sub_1002D70A4();
  double v46 = v80;
  static AttributeContainer.subscript.getter();
  swift_release();
  static Font.title.getter();
  Font.bold()();
  swift_release();
  uint64_t v48 = v86;
  uint64_t v47 = v87;
  uint64_t v49 = v81;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v81, enum case for Font.Leading.tight(_:), v87);
  uint64_t v50 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
  unint64_t v93 = v50;
  uint64_t v51 = v79;
  uint64_t v52 = v85;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v46, v52);
  uint64_t v53 = swift_getKeyPath();
  __chkstk_darwin(v53);
  swift_getKeyPath();
  sub_1002D7118();
  uint64_t v54 = v90;
  AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v88 + 8);
  uint64_t v56 = v51;
  uint64_t v57 = v89;
  v55(v56, v89);
  unint64_t v93 = 0xBFF0000000000000;
  uint64_t v58 = v84;
  uint64_t v59 = v92;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v54, v59);
  AttributedString.replaceAttributes(_:with:)();
  v55(v58, v57);
  v55(v43, v57);
  uint64_t v61 = v74;
  uint64_t v60 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v40, v75);
  uint64_t v62 = Text.init(_:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v60);
  return v62;
}

uint64_t sub_100632F80()
{
  uint64_t v1 = sub_100010218(&qword_100806EA8);
  uint64_t v91 = *(void *)(v1 - 8);
  uint64_t v92 = v1;
  __chkstk_darwin(v1);
  long long v90 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.Leading();
  uint64_t v86 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  __chkstk_darwin(v3);
  long long v81 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100010218(&qword_100806EB0);
  uint64_t v82 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  char v80 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1008006B8);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  __chkstk_darwin(v6);
  uint64_t v76 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AttributeContainer();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  __chkstk_darwin(v8);
  char v79 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v84 = (char *)&v64 - v11;
  __chkstk_darwin(v12);
  long long v83 = (char *)&v64 - v13;
  uint64_t v70 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v70);
  uint64_t v71 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v15 - 8);
  uint64_t v69 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v68 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for Locale();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v21 = sub_100010218(&qword_1007F8E58);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  char v27 = (char *)&v64 - v26;
  uint64_t v28 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v28 - 8);
  uint64_t v29 = type metadata accessor for AttributedString();
  uint64_t v74 = *(void *)(v29 - 8);
  uint64_t v75 = v29;
  __chkstk_darwin(v29);
  uint64_t v72 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  long long v73 = (char *)&v64 - v32;
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    char v33 = *(unsigned char *)(v0 + 88);
    uint64_t v34 = swift_retain();
    uint64_t v35 = sub_100666C70(v34, v33);
    swift_release();
    swift_getKeyPath();
    unint64_t v93 = v35;
    sub_1002D7014((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v36 = *(void *)(v35 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 16);
    swift_release();
  }
  else
  {
    unint64_t v36 = *(void *)(v0 + 32);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v37._uint64_t countAndFlagsBits = 10794;
  v37._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
  unint64_t v93 = v36;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Notation.compactName.getter();
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v65);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v22 + 8);
  v38(v24, v21);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  sub_100014344();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
  v38(v27, v21);
  v39._uint64_t countAndFlagsBits = 0x20736968540A2A2ALL;
  v39._object = (void *)0xEC00000072616559;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v39);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v69, 1, 1, v67);
  unint64_t v93 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1002D7014(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v40 = v73;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_10017AB0C();
  uint64_t v42 = v76;
  static AttributeContainer.subscript.getter();
  swift_release();
  unint64_t v93 = 2;
  uint64_t v43 = v83;
  uint64_t v44 = v78;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v44);
  uint64_t v45 = swift_getKeyPath();
  __chkstk_darwin(v45);
  swift_getKeyPath();
  sub_1002D70A4();
  double v46 = v80;
  static AttributeContainer.subscript.getter();
  swift_release();
  static Font.title.getter();
  Font.bold()();
  swift_release();
  uint64_t v48 = v86;
  uint64_t v47 = v87;
  uint64_t v49 = v81;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v81, enum case for Font.Leading.tight(_:), v87);
  uint64_t v50 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
  unint64_t v93 = v50;
  uint64_t v51 = v79;
  uint64_t v52 = v85;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v46, v52);
  uint64_t v53 = swift_getKeyPath();
  __chkstk_darwin(v53);
  swift_getKeyPath();
  sub_1002D7118();
  uint64_t v54 = v90;
  AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v88 + 8);
  uint64_t v56 = v51;
  uint64_t v57 = v89;
  v55(v56, v89);
  unint64_t v93 = 0xBFF0000000000000;
  uint64_t v58 = v84;
  uint64_t v59 = v92;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v54, v59);
  AttributedString.replaceAttributes(_:with:)();
  v55(v58, v57);
  v55(v43, v57);
  uint64_t v61 = v74;
  uint64_t v60 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v40, v75);
  uint64_t v62 = Text.init(_:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v60);
  return v62;
}

uint64_t sub_100633C38@<X0>(uint64_t a1@<X8>)
{
  return sub_1006308B0(a1);
}

uint64_t sub_100633C8C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100633CB0()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100633CD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.colorScheme.setter();
}

void sub_100633DC0()
{
}

void sub_100633DE0()
{
}

uint64_t sub_100633E08()
{
  return 8;
}

uint64_t sub_100633E14()
{
  return swift_release();
}

uint64_t sub_100633E1C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100633E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814468) & 1;
}

uint64_t sub_100633E4C(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814468);
}

void *sub_100633E58(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100633E70()
{
  return 8;
}

void sub_100633E84()
{
}

void sub_100633EA4()
{
}

uint64_t sub_100633ECC()
{
  return 8;
}

uint64_t sub_100633ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10062AC08(a1, a2, a3, &qword_100814460) & 1;
}

uint64_t sub_100633EFC(uint64_t a1, uint64_t a2)
{
  return sub_10062AC6C(a1, a2, &qword_100814460);
}

uint64_t sub_100633F08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100633F34()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100633F74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for InsightsMentionedWordsView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_100026DF8(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_release();
}

uint64_t initializeWithCopy for InsightsMentionedWordsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_100026CCC(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  char v6 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InsightsMentionedWordsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100026CCC(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100026DF8(v6, v7);
  char v8 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for InsightsMentionedWordsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100026DF8(v5, v6);
  char v7 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v7;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsMentionedWordsView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsMentionedWordsView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsMentionedWordsView()
{
  return &type metadata for InsightsMentionedWordsView;
}

uint64_t sub_1006342C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006342DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v66 = a1;
  uint64_t v68 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v65 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100010218(&qword_100814478);
  __chkstk_darwin(v63);
  uint64_t v64 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ColorResource();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ColorScheme();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100010218(&qword_100806E00) - 8;
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100814480);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100814488);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100814490);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100814498);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100010218(&qword_1008144A0);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v54 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v26 = sub_100010218(&qword_1008144A8);
  sub_100634BEC(v2, (uint64_t *)&v10[*(int *)(v26 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v10, (uint64_t)v14, &qword_100814480);
  uint64_t v28 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *uint64_t v28 = KeyPath;
  v28[1] = 0x3FE3333333333333;
  sub_10001457C((uint64_t)v10, &qword_100814480);
  uint64_t v29 = swift_getKeyPath();
  sub_10001B220((uint64_t)v14, (uint64_t)v18, &qword_100814488);
  uint64_t v30 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v30 = v29;
  v30[8] = 1;
  sub_10001457C((uint64_t)v14, &qword_100814488);
  uint64_t v31 = enum case for BlendMode.plusDarker(_:);
  uint64_t v32 = type metadata accessor for BlendMode();
  char v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  uint64_t v34 = (uint64_t)v55;
  v33(v55, v31, v32);
  v33((char *)(v34 + *(int *)(v56 + 48)), enum case for BlendMode.plusLighter(_:), v32);
  sub_10001B220(v34, (uint64_t)&v22[*(int *)(v20 + 44)], &qword_100806E00);
  sub_10001B220((uint64_t)v18, (uint64_t)v22, &qword_100814490);
  uint64_t v35 = v34;
  uint64_t v36 = (uint64_t)v54;
  sub_10001457C(v35, &qword_100806E00);
  sub_10001457C((uint64_t)v18, &qword_100814490);
  uint64_t v37 = v58;
  uint64_t v38 = v57;
  uint64_t v39 = v59;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, enum case for ColorScheme.dark(_:), v59);
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = (uint64_t *)(v36 + *(int *)(v24 + 44));
  uint64_t v42 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))((char *)v41 + *(int *)(v42 + 28), v38, v39);
  uint64_t *v41 = v40;
  sub_10001B220((uint64_t)v22, v36, &qword_100814498);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  sub_10001457C((uint64_t)v22, &qword_100814498);
  sub_100010218(&qword_100800168);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1006D6270;
  if (qword_1007F7F70 != -1) {
    swift_once();
  }
  uint64_t v44 = v62;
  uint64_t v45 = sub_100026A54(v62, (uint64_t)qword_10083EF70);
  double v46 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  uint64_t v47 = v60;
  v46(v60, v45, v44);
  *(void *)(v43 + 32) = Color.init(_:)();
  if (qword_1007F7F68 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_100026A54(v44, (uint64_t)qword_10083EF58);
  v46(v47, v48, v44);
  *(void *)(v43 + 40) = Color.init(_:)();
  *(void *)&long long v69 = v43;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  swift_bridgeObjectRelease();
  long long v73 = v76;
  long long v74 = v77;
  uint64_t v75 = v78;
  long long v69 = v76;
  long long v70 = v77;
  uint64_t v71 = v78;
  __int16 v72 = 256;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800170);
  sub_100014488(&qword_100800178, &qword_100800170);
  uint64_t v49 = AnyView.init<A>(_:)();
  uint64_t v50 = v64;
  sub_10001B220(v36, v64, &qword_1008144A0);
  *(void *)(v50 + *(int *)(v63 + 36)) = v49;
  uint64_t v51 = v65;
  static ContainerBackgroundPlacement.widget.getter();
  sub_100636BA8();
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v68);
  sub_10001457C(v50, &qword_100814478);
  sub_100179324((uint64_t)&v76);
  return sub_10001457C(v36, &qword_1008144A0);
}

uint64_t sub_100634BEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v106 = sub_100010218(&qword_100806E88);
  __chkstk_darwin(v106);
  uint64_t v4 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100010218(&qword_1008144E0);
  __chkstk_darwin(v104);
  uint64_t v105 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ButtonBorderShape();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v99 = v6;
  __chkstk_darwin(v6);
  long long v97 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v88 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100010218(&qword_1008144E8);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100010218(&qword_1008144F0);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v91 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100010218(&qword_1008144F8);
  __chkstk_darwin(v85);
  unint64_t v93 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100010218(&qword_100814500);
  __chkstk_darwin(v102);
  uint64_t v89 = (uint64_t)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v96 = (uint64_t)&v83 - v14;
  uint64_t v15 = sub_100010218(&qword_100814508);
  __chkstk_darwin(v15 - 8);
  uint64_t v103 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v109 = (uint64_t)&v83 - v18;
  uint64_t v19 = *(void *)(a1 + 8);
  LODWORD(v20) = *(unsigned __int8 *)(a1 + 16);
  sub_100026CCC(v19, *(unsigned char *)(a1 + 16));
  char v21 = sub_100666714(v19, v20);
  sub_100026DF8(v19, v20);
  uint64_t v22 = 0;
  uint64_t v110 = 0;
  uint64_t v108 = 0;
  uint64_t v23 = 0;
  uint64_t KeyPath = 0;
  uint64_t v25 = 0;
  if (v21)
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v26 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v28 = v27;
    uint64_t v101 = v19;
    LODWORD(v100) = v20;
    char v30 = v29 & 1;
    LODWORD(v111) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v31 = a1;
    uint64_t v32 = Text.foregroundStyle<A>(_:)();
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    sub_10002B8D0(v26, v28, v30);
    swift_bridgeObjectRelease();
    static Font.headline.getter();
    uint64_t v20 = Text.font(_:)();
    uint64_t v110 = v37;
    LOBYTE(v28) = v38;
    uint64_t v39 = v4;
    uint64_t v41 = v40;
    swift_release();
    uint64_t v108 = v28 & 1;
    uint64_t v42 = v32;
    a1 = v31;
    uint64_t v23 = v41;
    uint64_t v4 = v39;
    uint64_t v19 = v101;
    uint64_t v22 = v20;
    LOBYTE(v20) = v100;
    sub_10002B8D0(v42, v34, v36);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v25 = 1;
  }
  uint64_t v100 = KeyPath;
  uint64_t v101 = v25;
  sub_100026CCC(v19, v20);
  char v43 = sub_100666714(v19, v20);
  sub_100026DF8(v19, v20);
  if (v43)
  {
    uint64_t v84 = v22;
    if (*(void *)a1)
    {
      uint64_t v44 = *(void **)a1;
    }
    else
    {
      char v46 = *(unsigned char *)(a1 + 32);
      uint64_t v47 = swift_retain();
      uint64_t v48 = sub_100666C70(v47, v46);
      swift_release();
      swift_getKeyPath();
      *(void *)&long long v111 = v48;
      sub_100637554((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v44 = *(void **)(v48 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 24);
      swift_bridgeObjectRetain();
      swift_release();
    }
    uint64_t v83 = v23;
    uint64_t v49 = v110;
    if (v44[2])
    {
      uint64_t v50 = v44[4];
      uint64_t v51 = v44[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v50 = 0;
      uint64_t v51 = 0;
    }
    uint64_t v110 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v52 = static Axis.Set.vertical.getter();
    uint64_t v53 = (uint64_t)v86;
    *uint64_t v86 = v52;
    sub_100010218(&qword_100814538);
    long long v111 = xmmword_1006D70D0;
    swift_getKeyPath();
    uint64_t v112 = *(void *)(a1 + 24);
    char v113 = *(unsigned char *)(a1 + 32);
    uint64_t v54 = swift_allocObject();
    long long v55 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v54 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v54 + 32) = v55;
    *(_OWORD *)(v54 + 48) = *(_OWORD *)(a1 + 32);
    *(void *)(v54 + 64) = v50;
    *(void *)(v54 + 72) = v51;
    sub_100026CCC(v19, v20);
    swift_bridgeObjectRetain();
    sub_1001BA234((uint64_t)&v112);
    sub_100010218(&qword_100814540);
    sub_100010218(&qword_100814548);
    sub_1006372B4(&qword_100814550, &qword_100814540, (void (*)(void))sub_1001B5294);
    sub_1006371DC();
    ForEach<>.init(_:id:content:)();
    uint64_t v56 = v88;
    BorderedProminentButtonStyle.init()();
    sub_100014488(&qword_100814520, &qword_1008144E8);
    sub_100637554(&qword_1008017F0, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    uint64_t v57 = v91;
    uint64_t v58 = v92;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v56, v58);
    sub_10001457C(v53, &qword_1008144E8);
    uint64_t v59 = v97;
    static ButtonBorderShape.capsule.getter();
    uint64_t v60 = swift_getKeyPath();
    uint64_t v61 = (uint64_t)v93;
    uint64_t v62 = (uint64_t *)&v93[*(int *)(v85 + 36)];
    uint64_t v63 = sub_100010218(&qword_10080DEB0);
    uint64_t v65 = v98;
    uint64_t v64 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v99);
    *uint64_t v62 = v60;
    uint64_t v66 = v94;
    uint64_t v67 = v95;
    (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))(v61, v57, v95);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v64);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v67);
    uint64_t v68 = swift_getKeyPath();
    uint64_t v69 = v89;
    sub_10001B220(v61, v89, &qword_1008144F8);
    uint64_t v70 = v69 + *(int *)(v102 + 36);
    *(void *)uint64_t v70 = v68;
    *(void *)(v70 + 8) = 1;
    *(unsigned char *)(v70 + 16) = 0;
    sub_10001457C(v61, &qword_1008144F8);
    uint64_t v71 = v96;
    sub_10002C4EC(v69, v96, &qword_100814500);
    sub_10001B220(v71, v105, &qword_100814500);
    swift_storeEnumTagMultiPayload();
    sub_100636EEC();
    sub_100014488(&qword_100814528, &qword_100806E88);
    _ConditionalContent<>.init(storage:)();
    sub_10001457C(v71, &qword_100814500);
    uint64_t v45 = v84;
    uint64_t v23 = v83;
  }
  else
  {
    sub_100636348((uint64_t)v4);
    uint64_t v45 = v22;
    sub_10001B220((uint64_t)v4, v105, &qword_100806E88);
    swift_storeEnumTagMultiPayload();
    sub_100636EEC();
    sub_100014488(&qword_100814528, &qword_100806E88);
    _ConditionalContent<>.init(storage:)();
    sub_10001457C((uint64_t)v4, &qword_100806E88);
  }
  uint64_t v72 = v109;
  uint64_t v73 = v103;
  sub_10001B220(v109, v103, &qword_100814508);
  long long v74 = v107;
  uint64_t v75 = v108;
  *uint64_t v107 = v45;
  uint64_t v76 = v45;
  uint64_t v77 = v110;
  v74[1] = v110;
  v74[2] = v75;
  uint64_t v79 = v100;
  uint64_t v78 = v101;
  v74[3] = v23;
  v74[4] = v79;
  v74[5] = v78;
  *((unsigned char *)v74 + 48) = 0;
  v74[7] = 0;
  *((unsigned char *)v74 + 64) = 0;
  uint64_t v80 = sub_100010218(&qword_100814530);
  sub_10001B220(v73, (uint64_t)v74 + *(int *)(v80 + 64), &qword_100814508);
  long long v81 = (char *)v74 + *(int *)(v80 + 80);
  *(void *)long long v81 = 0;
  v81[8] = 0;
  sub_1006370D4(v76, v77, v75, v23);
  sub_10001457C(v72, &qword_100814508);
  sub_10001457C(v73, &qword_100814508);
  return sub_100637124(v76, v77, v75, v23);
}

uint64_t sub_100635844@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = *a1;
  *a5 = 0x4010000000000000;
  if (*a2)
  {
    uint64_t v8 = *a2;
  }
  else
  {
    char v9 = *((unsigned char *)a2 + 32);
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_100666C70(v10, v9);
    swift_release();
    swift_getKeyPath();
    sub_100637554((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v8 = *(void *)(v11 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  sub_100010218(&qword_100814548);
  sub_100542BB0(v7, v8);
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1006374CC;
  *(void *)(v13 + 24) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100010218(&qword_1008145B0);
  sub_100010218(&qword_100814588);
  sub_100014488(&qword_1008145B8, &qword_1008145B0);
  sub_100637320();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100635A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v38 = a6;
  uint64_t v37 = type metadata accessor for ControlSize();
  uint64_t v11 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  char v36 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100010218(&qword_100813DD0);
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100010218(&qword_100814598);
  __chkstk_darwin(v32);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100010218(&qword_100814588);
  __chkstk_darwin(v34);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    if (a1 == a4 && a2 == a5)
    {
      uint64_t v20 = a2;
      LOBYTE(a5) = 1;
    }
    else
    {
      uint64_t v20 = a2;
      uint64_t v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      LOBYTE(a5) = v17;
    }
  }
  else
  {
    uint64_t v20 = a2;
  }
  __chkstk_darwin(v17);
  *(&v31 - 4) = a1;
  *(&v31 - 3) = v20;
  *(&v31 - 2) = a3;
  sub_100010218(&qword_100813DE8);
  sub_100014488(&qword_100813DF0, &qword_100813DE8);
  Button.init(action:label:)();
  if (a5) {
    double v21 = 1.0;
  }
  else {
    double v21 = 0.0;
  }
  uint64_t v22 = (unsigned int *)&enum case for ControlSize.large(_:);
  if ((a5 & 1) == 0) {
    uint64_t v22 = (unsigned int *)&enum case for ControlSize.small(_:);
  }
  uint64_t v24 = v36;
  uint64_t v23 = v37;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v36, *v22, v37);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = (uint64_t *)&v16[*(int *)(v32 + 36)];
  uint64_t v27 = sub_100010218(&qword_100801E40);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v26 + *(int *)(v27 + 28), v24, v23);
  *uint64_t v26 = KeyPath;
  uint64_t v28 = v33;
  uint64_t v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v16, v14, v35);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  sub_10001B220((uint64_t)v16, (uint64_t)v19, &qword_100814598);
  *(double *)&v19[*(int *)(v34 + 36)] = v21;
  sub_10001457C((uint64_t)v16, &qword_100814598);
  return sub_10002C4EC((uint64_t)v19, v38, &qword_100814588);
}

uint64_t sub_100635E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v56 = a4;
  uint64_t v6 = type metadata accessor for ColorResource();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  uint64_t v53 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_100010218(&qword_1007F8E58);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  sub_100014344();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = Text.bold()();
  uint64_t v50 = v23;
  uint64_t v51 = v22;
  int v46 = v24;
  uint64_t v52 = v25;
  sub_10002B8D0(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v57 = v49;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Notation.compactName.getter();
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v10, v48);
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  uint64_t v26 = Text.init<A>(_:format:)();
  uint64_t v28 = v27;
  char v30 = v29;
  if (qword_1007F7F80 != -1) {
    swift_once();
  }
  char v31 = v30 & 1;
  char v32 = v46 & 1;
  uint64_t v33 = v55;
  uint64_t v34 = sub_100026A54(v55, (uint64_t)qword_10083EFA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 16))(v53, v34, v33);
  uint64_t v57 = Color.init(_:)();
  uint64_t v35 = Text.foregroundStyle<A>(_:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  LOBYTE(v33) = v40 & 1;
  sub_10002B8D0(v26, v28, v31);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v57) = v32;
  uint64_t v41 = v56;
  uint64_t v43 = v50;
  uint64_t v42 = v51;
  *uint64_t v56 = v51;
  v41[1] = v43;
  *((unsigned char *)v41 + 16) = v32;
  v41[3] = v52;
  v41[4] = v35;
  v41[5] = v37;
  *((unsigned char *)v41 + 48) = v33;
  v41[7] = v39;
  sub_1000C04A4(v42, v43, v32);
  swift_bridgeObjectRetain();
  sub_1000C04A4(v35, v37, v33);
  swift_bridgeObjectRetain();
  sub_10002B8D0(v35, v37, v33);
  swift_bridgeObjectRelease();
  sub_10002B8D0(v42, v43, v57);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100636348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v67 = a1;
  uint64_t v64 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v64);
  uint64_t v65 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v63 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v62 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  __chkstk_darwin(v11);
  uint64_t v51 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_1007F8E58);
  uint64_t v52 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v19 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for AttributedString();
  uint64_t v60 = *(void *)(v20 - 8);
  uint64_t v61 = v20;
  __chkstk_darwin(v20);
  uint64_t v57 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v59 = (char *)&v51 - v23;
  __chkstk_darwin(v24);
  uint64_t v58 = (char *)&v51 - v25;
  if (*(void *)v1)
  {
    uint64_t v26 = *(void **)v1;
  }
  else
  {
    char v27 = *(unsigned char *)(v1 + 32);
    uint64_t v28 = swift_retain();
    uint64_t v29 = sub_100666C70(v28, v27);
    swift_release();
    swift_getKeyPath();
    uint64_t v68 = (double *)v29;
    sub_100637554((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v26 = *(void **)(v29 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  uint64_t v66 = v2;
  if (v26[2])
  {
    uint64_t v30 = v26[4];
    char v31 = (void *)v26[5];
    char v32 = (double *)v26[6];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = 0;
    char v31 = 0;
    char v32 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v33 = v31;
  }
  else
  {
    char v32 = 0;
    uint64_t v30 = 11565;
    uint64_t v33 = (void *)0xE200000000000000;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._uint64_t countAndFlagsBits = 0x656E6F69746E654DLL;
  v34._object = (void *)0xEC0000002A2A0A64;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v34);
  v35._uint64_t countAndFlagsBits = v30;
  v35._object = v33;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v35);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 666154;
  v36._object = (void *)0xE300000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v36);
  uint64_t v68 = v32;
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Notation.compactName.getter();
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v54);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v52 + 8);
  v37(v15, v13);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  sub_100014344();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
  v37(v18, v13);
  v38._uint64_t countAndFlagsBits = 10272;
  v38._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v68 = v32;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v39._uint64_t countAndFlagsBits = 0x73656D69742029;
  v39._object = (void *)0xE700000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v39);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v63, 1, 1, v56);
  uint64_t v68 = _swiftEmptyArrayStorage;
  sub_100637554(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  char v40 = v58;
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t v42 = v59;
  uint64_t v41 = v60;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v44 = v61;
  v43(v59, v40, v61);
  uint64_t v45 = Namespace.wrappedValue.getter();
  uint64_t v46 = (uint64_t)v57;
  v43(v57, v42, v44);
  static UnitPoint.center.getter();
  sub_10063063C(v46, v45, (uint64_t)sub_100292BF0, 0, v67, v47, v48);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v41 + 8);
  v49(v42, v44);
  return ((uint64_t (*)(char *, uint64_t))v49)(v40, v44);
}

uint64_t sub_100636B54@<X0>(uint64_t a1@<X8>)
{
  return sub_1006342DC(a1);
}

unint64_t sub_100636BA8()
{
  unint64_t result = qword_1008144B0;
  if (!qword_1008144B0)
  {
    sub_100014440(&qword_100814478);
    sub_100636C48();
    sub_100014488(&qword_100800188, &qword_100800190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008144B0);
  }
  return result;
}

unint64_t sub_100636C48()
{
  unint64_t result = qword_1008144B8;
  if (!qword_1008144B8)
  {
    sub_100014440(&qword_1008144A0);
    sub_100636CE8();
    sub_100014488(&qword_100800158, &qword_100800120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008144B8);
  }
  return result;
}

unint64_t sub_100636CE8()
{
  unint64_t result = qword_1008144C0;
  if (!qword_1008144C0)
  {
    sub_100014440(&qword_100814498);
    sub_100636D88();
    sub_100014488(&qword_100806E60, &qword_100806E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008144C0);
  }
  return result;
}

unint64_t sub_100636D88()
{
  unint64_t result = qword_1008144C8;
  if (!qword_1008144C8)
  {
    sub_100014440(&qword_100814490);
    sub_100636E28();
    sub_100014488(&qword_100800148, &qword_100800150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008144C8);
  }
  return result;
}

unint64_t sub_100636E28()
{
  unint64_t result = qword_1008144D0;
  if (!qword_1008144D0)
  {
    sub_100014440(&qword_100814488);
    sub_100014488(&qword_1008144D8, &qword_100814480);
    sub_100014488(&qword_100800688, &qword_100800690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008144D0);
  }
  return result;
}

unint64_t sub_100636EEC()
{
  unint64_t result = qword_100814510;
  if (!qword_100814510)
  {
    sub_100014440(&qword_100814500);
    sub_100636F8C();
    sub_100014488(&qword_100800678, &qword_100800680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814510);
  }
  return result;
}

unint64_t sub_100636F8C()
{
  unint64_t result = qword_100814518;
  if (!qword_100814518)
  {
    sub_100014440(&qword_1008144F8);
    sub_100014440(&qword_1008144E8);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_100014488(&qword_100814520, &qword_1008144E8);
    sub_100637554(&qword_1008017F0, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_10080DEC0, &qword_10080DEB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814518);
  }
  return result;
}

uint64_t sub_1006370D4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000C04A4(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100637124(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10002B8D0(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10063717C()
{
  swift_bridgeObjectRelease();
  sub_100026DF8(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006371D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100635844(a1, v2 + 2, v2[8], v2[9], a2);
}

unint64_t sub_1006371DC()
{
  unint64_t result = qword_100814558;
  if (!qword_100814558)
  {
    sub_100014440(&qword_100814548);
    sub_100014488(&qword_100814560, &qword_100814568);
    sub_1006372B4(&qword_100814570, &qword_100814578, (void (*)(void))sub_100637320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814558);
  }
  return result;
}

uint64_t sub_1006372B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100637320()
{
  unint64_t result = qword_100814580;
  if (!qword_100814580)
  {
    sub_100014440(&qword_100814588);
    sub_1006373C0();
    sub_100014488(&qword_1008145A0, &qword_1008145A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814580);
  }
  return result;
}

unint64_t sub_1006373C0()
{
  unint64_t result = qword_100814590;
  if (!qword_100814590)
  {
    sub_100014440(&qword_100814598);
    sub_100014488(&qword_100813E08, &qword_100813DD0);
    sub_100014488(&qword_100801EA0, &qword_100801E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814590);
  }
  return result;
}

uint64_t sub_100637494()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006374CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100635A7C(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1006374D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10063750C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, a1[1], a1[2]);
}

uint64_t sub_100637540@<X0>(uint64_t *a1@<X8>)
{
  return sub_100635E9C(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100637554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10063759C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CenteredHFlowLayout()
{
  return &type metadata for CenteredHFlowLayout;
}

void sub_10063761C(uint64_t a1, int a2, double a3, uint64_t a4, uint64_t a5, void (**a6)(char *), double *a7)
{
  uint64_t v100 = a7;
  uint64_t v98 = a6;
  LODWORD(v99) = a2;
  uint64_t v9 = type metadata accessor for CenteredHFlowLayout.Item();
  uint64_t v97 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LayoutSubview();
  unint64_t v79 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LayoutSubviews();
  uint64_t v86 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008133F0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v27 = (char *)&v78 - v26;
  double v28 = *(double *)&a1;
  uint64_t v29 = v100;
  if (v99) {
    double v30 = 10.0;
  }
  else {
    double v30 = v28;
  }
  if (v30 != *v100)
  {
    uint64_t v88 = v14;
    uint64_t v90 = v9;
    uint64_t v94 = v20;
    uint64_t v96 = v12;
    uint64_t v92 = v17;
    uint64_t v99 = (uint64_t)v11;
    uint64_t v31 = v25;
    swift_bridgeObjectRelease();
    *uint64_t v29 = v30;
    v29[2] = 0.0;
    v29[3] = 0.0;
    *((void *)v29 + 1) = _swiftEmptyArrayStorage;
    char v32 = (void *)swift_allocObject();
    _OWORD v32[2] = _swiftEmptyArrayStorage;
    uint64_t v33 = v32 + 2;
    v32[3] = 0;
    uint64_t v89 = (double *)(v32 + 3);
    uint64_t v34 = v86;
    uint64_t v36 = v86 + 16;
    Swift::String v35 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
    unint64_t v93 = v32;
    v32[4] = 0;
    uint64_t v91 = v35;
    v35(v23, (uint64_t)v98, v15);
    unint64_t v37 = sub_100638458();
    dispatch thunk of Collection.startIndex.getter();
    *(void *)&v23[*(int *)(v31 + 36)] = v102[0];
    sub_1006384B0((uint64_t)v23, (uint64_t)v27);
    Swift::String v38 = &v27[*(int *)(v31 + 36)];
    swift_beginAccess();
    uint64_t v39 = *(void *)v38;
    uint64_t v40 = (uint64_t)v27;
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v95 = v27;
    if (v39 == v102[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v94, 1, 1, v96);
LABEL_25:
      uint64_t v57 = (uint64_t)v93;
    }
    else
    {
      uint64_t v87 = v36;
      uint64_t v83 = v33;
      uint64_t v98 = (void (**)(char *))(v79 + 16);
      uint64_t v86 = v34 + 8;
      uint64_t v84 = (uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
      uint64_t v82 = (void (**)(char *, char *, uint64_t))(v79 + 32);
      double v81 = v30;
      uint64_t v80 = (void (**)(char *, uint64_t))(v79 + 8);
      uint64_t v85 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
      unint64_t v79 = (v79 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      unint64_t v41 = v37;
      uint64_t v42 = v96;
      while (1)
      {
        uint64_t v44 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
        uint64_t v45 = v40;
        uint64_t v46 = *v98;
        double v47 = v94;
        (*v98)(v94);
        v44(v102, 0);
        double v48 = v92;
        uint64_t v49 = v45;
        uint64_t v50 = v47;
        v91(v92, v49, v15);
        uint64_t v51 = v38;
        unint64_t v52 = v41;
        dispatch thunk of Collection.formIndex(after:)();
        uint64_t v53 = v15;
        (*(void (**)(char *, uint64_t))v86)(v48, v15);
        uint64_t v54 = *v85;
        (*v85)(v50, 0, 1, v42);
        int v55 = (*v84)(v50, 1, v42);
        uint64_t v56 = v42;
        uint64_t v57 = (uint64_t)v93;
        if (v55 == 1) {
          break;
        }
        uint64_t v58 = v88;
        (*v82)(v88, v50, v56);
        LayoutSubview.priority.getter();
        double v60 = v59;
        if (v59 > 0.0) {
          sub_1006380AC(v57, (uint64_t)v100, a3);
        }
        LOBYTE(v102[0]) = 0;
        char v101 = 1;
        LayoutSubview.sizeThatFits(_:)();
        double v61 = *v89;
        uint64_t v63 = v99;
        if (v30 < *v89 + v62)
        {
          sub_1006380AC(v57, (uint64_t)v100, a3);
          double v61 = *(double *)(v57 + 24);
        }
        double v64 = v30 - v61;
        BOOL v65 = (*(void *)(v57 + 32) & 0x7FFFFFFFFFFFFFFFLL) == 0;
        LOBYTE(v102[0]) = 0;
        char v101 = v65;
        LayoutSubview.sizeThatFits(_:)();
        double v68 = v67;
        if (v64 >= v66) {
          double v64 = v66;
        }
        ((void (*)(uint64_t, char *, uint64_t))v46)(v63, v58, v56);
        uint64_t v69 = (double *)(v63 + *(int *)(v90 + 20));
        *uint64_t v69 = v64;
        v69[1] = v68;
        swift_beginAccess();
        unint64_t v70 = *(void *)(v57 + 16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v70 = sub_1002A766C(0, *(void *)(v70 + 16) + 1, 1, v70);
        }
        uint64_t v15 = v53;
        unint64_t v72 = *(void *)(v70 + 16);
        unint64_t v71 = *(void *)(v70 + 24);
        uint64_t v73 = v97;
        if (v72 >= v71 >> 1)
        {
          uint64_t v75 = sub_1002A766C(v71 > 1, v72 + 1, 1, v70);
          uint64_t v73 = v97;
          unint64_t v70 = v75;
        }
        *(void *)(v70 + 16) = v72 + 1;
        sub_100638578(v99, v70+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v72);
        *(void *)(v57 + 16) = v70;
        *(double *)(v57 + 24) = v64 + a3 + *(double *)(v57 + 24);
        swift_endAccess();
        double v74 = *(double *)(v57 + 32);
        if (v68 > v74) {
          double v74 = v68;
        }
        *(double *)(v57 + 32) = v74;
        if (v60 > 0.0) {
          sub_1006380AC(v57, (uint64_t)v100, a3);
        }
        uint64_t v42 = v96;
        (*v80)(v58, v96);
        Swift::String v38 = v51;
        uint64_t v43 = *(void *)v51;
        uint64_t v40 = (uint64_t)v95;
        unint64_t v41 = v52;
        dispatch thunk of Collection.endIndex.getter();
        if (v43 == v102[0])
        {
          v54(v94, 1, 1, v96);
          goto LABEL_25;
        }
      }
    }
    sub_100638518((uint64_t)v95);
    uint64_t v76 = v100;
    sub_1006380AC(v57, (uint64_t)v100, a3);
    uint64_t v77 = *(void *)(*((void *)v76 + 1) + 16);
    swift_release();
    if (v77) {
      uint64_t v76[3] = v76[3] - a3;
    }
  }
}

void sub_100637E54(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, uint64_t a8, uint64_t a9, void (**a10)(char *), uint64_t a11)
{
  CGFloat v43 = a6;
  uint64_t v41 = type metadata accessor for CenteredHFlowLayout.Item();
  uint64_t v19 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10063761C(a1, a2 & 1, a7, v22, v23, a10, (double *)a11);
  uint64_t v24 = *(void *)(a11 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v42 = v24 + 32;
    swift_bridgeObjectRetain();
    unint64_t v26 = 0;
    double v27 = a4;
    while (v26 < *(void *)(v24 + 16))
    {
      double v28 = (double *)(v42 + 24 * v26);
      double v29 = *v28;
      double v30 = v28[1];
      double v31 = v28[2];
      swift_bridgeObjectRetain();
      v46.origin.CGFloat x = a3;
      v46.origin.double y = a4;
      v46.size.double width = a5;
      v46.size.double height = v43;
      double MidX = CGRectGetMidX(v46);
      double v33 = v31 * 0.5;
      double v34 = v27 + v33;
      uint64_t v35 = *(void *)(*(void *)&v29 + 16);
      if (v35)
      {
        double v36 = MidX + v30 * -0.5;
        unint64_t v37 = (double *)&v21[*(int *)(v41 + 20)];
        uint64_t v38 = *(void *)&v29
            + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        swift_bridgeObjectRetain();
        uint64_t v39 = *(void *)(v19 + 72);
        do
        {
          sub_100638360(v38, (uint64_t)v21);
          static UnitPoint.leading.getter();
          double v40 = *v37;
          char v45 = 0;
          char v44 = 0;
          LayoutSubview.place(at:anchor:proposal:)();
          sub_1006383C4((uint64_t)v21);
          double v36 = v36 + v40 + a7;
          v38 += v39;
          --v35;
        }
        while (v35);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v26;
      double v27 = v34 + v33 + a7;
      if (v26 == v25)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1006380AC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    swift_beginAccess();
    double v7 = *(double *)(a1 + 24) - a3;
    *(double *)(a1 + 24) = v7;
    swift_beginAccess();
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(double **)(a2 + 8);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a2 + 8) = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v10 = sub_1002A7544(0, *((void *)v10 + 2) + 1, 1, v10);
      *(void *)(a2 + 8) = v10;
    }
    unint64_t v13 = *((void *)v10 + 2);
    unint64_t v12 = *((void *)v10 + 3);
    if (v13 >= v12 >> 1)
    {
      uint64_t v10 = sub_1002A7544((double *)(v12 > 1), v13 + 1, 1, v10);
      *(void *)(a2 + 8) = v10;
    }
    *((void *)v10 + 2) = v13 + 1;
    uint64_t v14 = &v10[3 * v13];
    *((void *)v14 + 4) = v8;
    v14[5] = v7;
    *((void *)v14 + 6) = v9;
    swift_beginAccess();
    double v15 = *(double *)(a1 + 24);
    double v16 = *(double *)(a2 + 24);
    if (v15 <= *(double *)(a2 + 16)) {
      double v15 = *(double *)(a2 + 16);
    }
    *(double *)(a2 + 16) = v15;
    *(double *)(a2 + 24) = v16 + *(double *)(a1 + 32) + a3;
    swift_beginAccess();
    *(void *)(a1 + 16) = _swiftEmptyArrayStorage;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100638254(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = &_swiftEmptyArrayStorage;
  a1[2] = 0;
  a1[3] = 0;
}

double sub_100638268(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void (**a5)(char *), double *a6)
{
  sub_10063761C(a1, a2 & 1, *v6, a3, a4, a5, a6);
  return a6[2];
}

void sub_1006382A0(uint64_t a1, char a2, uint64_t a3, char a4, void (**a5)(char *), uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  sub_100637E54(a1, a2 & 1, a7, a8, a9, a10, *v10, a3, a4 & 1, a5, a6);
}

unint64_t sub_1006382C0()
{
  unint64_t result = qword_1008145C0;
  if (!qword_1008145C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008145C0);
  }
  return result;
}

uint64_t type metadata accessor for CenteredHFlowLayout.Item()
{
  uint64_t result = qword_100814620;
  if (!qword_100814620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100638360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CenteredHFlowLayout.Item();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006383C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CenteredHFlowLayout.Item();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100638420()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_100638458()
{
  unint64_t result = qword_10080C8B8;
  if (!qword_10080C8B8)
  {
    type metadata accessor for LayoutSubviews();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C8B8);
  }
  return result;
}

uint64_t sub_1006384B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1008133F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100638518(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1008133F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100638578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CenteredHFlowLayout.Item();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *assignWithCopy for CenteredHFlowLayout.Row(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for CenteredHFlowLayout.Row()
{
  return &type metadata for CenteredHFlowLayout.Row;
}

uint64_t *sub_100638644(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for LayoutSubview();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100638710(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutSubview();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100638774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006387F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t sub_10063887C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006388F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100638974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100638988);
}

uint64_t sub_100638988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayoutSubview();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1006389F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100638A08);
}

uint64_t sub_100638A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayoutSubview();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100638A78()
{
  uint64_t result = type metadata accessor for LayoutSubview();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for CenteredHFlowLayout.Cache(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CenteredHFlowLayout.Cache(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for CenteredHFlowLayout.Cache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for CenteredHFlowLayout.Cache()
{
  return &type metadata for CenteredHFlowLayout.Cache;
}

BOOL sub_100638BFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  __chkstk_darwin(v2);
  unint64_t v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FF070);
  __chkstk_darwin(v13 - 8);
  double v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DateComponents();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100639014(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    uint64_t v20 = (uint64_t *)&unk_1007FF070;
    uint64_t v21 = (uint64_t)v15;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    Calendar.date(from:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v6, 1, v7) != 1)
    {
      uint64_t v23 = v12;
      uint64_t v24 = v40;
      uint64_t v25 = v9;
      unint64_t v26 = v23;
      (*(void (**)(void))(v40 + 32))();
      uint64_t v36 = v7;
      double v27 = v25;
      static Date.now.getter();
      double v28 = v37;
      uint64_t v29 = v38;
      uint64_t v30 = v39;
      (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, enum case for Calendar.Component.day(_:), v39);
      uint64_t v35 = Calendar.compare(_:to:toGranularity:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
      double v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      char v32 = v27;
      uint64_t v33 = v36;
      v31(v32, v36);
      BOOL v22 = v35 == 1;
      v31(v26, v33);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v20 = (uint64_t *)&unk_1007FC470;
    uint64_t v21 = (uint64_t)v6;
  }
  sub_10001457C(v21, v20);
  return 0;
}

uint64_t sub_100639014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FF070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063907C()
{
  uint64_t v0 = type metadata accessor for Calendar.Identifier();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  sub_100035380(v4, qword_10083EE28);
  sub_100026A54(v4, (uint64_t)qword_10083EE28);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Identifier.gregorian(_:), v0);
  Calendar.init(identifier:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10063919C()
{
  sub_100010218(&qword_1007FB058);
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D70D0;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for Calendar.Component.era(_:), v0);
  v6(v5 + v2, enum case for Calendar.Component.year(_:), v0);
  v6(v5 + 2 * v2, enum case for Calendar.Component.month(_:), v0);
  v6(v5 + 3 * v2, enum case for Calendar.Component.day(_:), v0);
  uint64_t v7 = sub_100388570(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_10083EE40 = v7;
  return result;
}

uint64_t sub_100639328()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7FB0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100026A54(v0, (uint64_t)qword_10083F030);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  Color.init(_:)();
  if (qword_1007F7460 != -1) {
    swift_once();
  }
  View.shadow(color:radius:x:y:)();
  return swift_release();
}

uint64_t sub_1006394CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006394E0);
}

uint64_t sub_1006394E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006394F8);
}

uint64_t _s19DurationFormatStyleV10AttributedVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_1008146B0);
}

uint64_t *sub_100639520(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Locale();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1006395EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Locale();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_100639654(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1006396D0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *sub_10063974C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1006397C8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100639844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100639858);
}

uint64_t sub_10063985C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for Locale();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100639904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100639918);
}

unsigned char *sub_10063991C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Locale();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s19DurationFormatStyleVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100814740);
}

uint64_t sub_1006399E0()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100639A78(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  if (*v1)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 23390;
    v9._object = (void *)0xE200000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
    uint64_t v18 = *(double **)(a1 + *(int *)(type metadata accessor for StreakSummary() + 28));
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    unint64_t v10 = 0xD00000000000002DLL;
    unint64_t v11 = 0x80000001006A9000;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._uint64_t countAndFlagsBits = 23390;
    v15._object = (void *)0xE200000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t v18 = *(double **)(a1 + *(int *)(type metadata accessor for StreakSummary() + 28));
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    unint64_t v11 = 0x80000001006A9070;
    unint64_t v10 = 0xD00000000000002CLL;
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v10);
  String.LocalizationValue.init(stringInterpolation:)();
  unint64_t v12 = &v1[*(int *)(_s19DurationFormatStyleV10AttributedVMa(0) + 20)];
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, unsigned char *, uint64_t))(v14 + 16))(v6, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
  swift_getKeyPath();
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_10063B0A4(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_10063B2A0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100179988();
  return AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
}

uint64_t sub_100639FA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008147B8);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s19DurationFormatStyleV10AttributedVMa(0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v12[*(int *)(v13 + 28)];
  static Locale.autoupdatingCurrent.getter();
  sub_10002E0BC(a1, a1[3]);
  sub_10063B2FC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v16 = v25;
    uint64_t v17 = v24;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v17 + 8))(v14, v16);
  }
  else
  {
    uint64_t v15 = v22;
    char v27 = 0;
    sub_10063B350();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    unsigned char *v12 = v28;
    char v26 = 1;
    sub_10063B0A4(&qword_10080BF48, (void (*)(uint64_t))&type metadata accessor for Locale);
    uint64_t v18 = v25;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v23);
    (*(void (**)(unsigned char *, char *, uint64_t))(v24 + 40))(v14, v6, v18);
    sub_10063B44C((uint64_t)v12, v21, _s19DurationFormatStyleV10AttributedVMa);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    return sub_10063B4B4((uint64_t)v12, _s19DurationFormatStyleV10AttributedVMa);
  }
}

uint64_t sub_10063A2FC(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  v15[0] = a5;
  uint64_t v7 = v5;
  uint64_t v9 = sub_100010218(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  a3();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v18 = *v7;
  char v17 = 0;
  sub_10063B3A4();
  uint64_t v13 = v15[1];
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v13)
  {
    ((void (*)(void))v15[0])(0);
    char v16 = 1;
    type metadata accessor for Locale();
    sub_10063B0A4(&qword_10080BF58, (void (*)(uint64_t))&type metadata accessor for Locale);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10063A4E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008147E0);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s19DurationFormatStyleVMa(0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v12[*(int *)(v13 + 28)];
  static Locale.autoupdatingCurrent.getter();
  sub_10002E0BC(a1, a1[3]);
  sub_10063B3F8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v16 = v25;
    uint64_t v17 = v24;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v17 + 8))(v14, v16);
  }
  else
  {
    uint64_t v15 = v22;
    char v27 = 0;
    sub_10063B350();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    unsigned char *v12 = v28;
    char v26 = 1;
    sub_10063B0A4(&qword_10080BF48, (void (*)(uint64_t))&type metadata accessor for Locale);
    uint64_t v18 = v25;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v23);
    (*(void (**)(unsigned char *, char *, uint64_t))(v24 + 40))(v14, v6, v18);
    sub_10063B44C((uint64_t)v12, v21, _s19DurationFormatStyleVMa);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    return sub_10063B4B4((uint64_t)v12, _s19DurationFormatStyleVMa);
  }
}

uint64_t sub_10063A83C()
{
  if (*v0) {
    return 0x656C61636F6CLL;
  }
  else {
    return 0x636E657571657266;
  }
}

uint64_t sub_10063A878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10063B934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10063A8A0(uint64_t a1)
{
  unint64_t v2 = sub_10063B2FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063A8DC(uint64_t a1)
{
  unint64_t v2 = sub_10063B2FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10063A920@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100639FA4(a1, a2);
}

uint64_t sub_10063A938(void *a1)
{
  return sub_10063A2FC(a1, &qword_1008147D0, (void (*)(void))sub_10063B2FC, (uint64_t)&_s19DurationFormatStyleV10AttributedV10CodingKeysON, (uint64_t)_s19DurationFormatStyleV10AttributedVMa);
}

uint64_t sub_10063A994(unsigned char *a1, unsigned char *a2)
{
  return sub_10063B514(a1, a2, (void (*)(void))_s19DurationFormatStyleV10AttributedVMa) & 1;
}

uint64_t sub_10063A9C4(uint64_t a1)
{
  unint64_t v2 = sub_10063B3F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063AA00(uint64_t a1)
{
  unint64_t v2 = sub_10063B3F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10063AA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a3;
  uint64_t v5 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v5);
  uint64_t v6 = _s19DurationFormatStyleV10AttributedVMa(0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *v3;
  uint64_t v15 = &v3[*(int *)(a2 + 20)];
  uint64_t v16 = &v9[*(int *)(v7 + 28)];
  uint64_t v17 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v16, v15, v17);
  *uint64_t v9 = v14;
  sub_100639A78(v21);
  sub_10063B4B4((uint64_t)v9, _s19DurationFormatStyleV10AttributedVMa);
  AttributedString.characters.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10063B0A4(&qword_1007FFA40, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  uint64_t result = String.init<A>(_:)();
  uint64_t v19 = v22;
  *uint64_t v22 = result;
  v19[1] = v20;
  return result;
}

uint64_t sub_10063AC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  char v6 = *v3;
  uint64_t v7 = &a3[*(int *)(a2 + 20)];
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
  *a3 = v6;
  return result;
}

uint64_t sub_10063ACFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10063A4E4(a1, a2);
}

uint64_t sub_10063AD14(void *a1)
{
  return sub_10063A2FC(a1, &qword_1008147F0, (void (*)(void))sub_10063B3F8, (uint64_t)&_s19DurationFormatStyleV10CodingKeysON, (uint64_t)_s19DurationFormatStyleVMa);
}

Swift::Int sub_10063AD64()
{
  return Hasher._finalize()();
}

uint64_t sub_10063AE44()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10063AF08()
{
  return Hasher._finalize()();
}

uint64_t sub_10063AFE4(unsigned char *a1, unsigned char *a2)
{
  return sub_10063B514(a1, a2, (void (*)(void))_s19DurationFormatStyleVMa) & 1;
}

uint64_t sub_10063B014()
{
  return sub_10063B0A4(&qword_100814778, (void (*)(uint64_t))_s19DurationFormatStyleVMa);
}

uint64_t sub_10063B05C()
{
  return sub_10063B0A4(&qword_100814780, (void (*)(uint64_t))_s19DurationFormatStyleV10AttributedVMa);
}

uint64_t sub_10063B0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10063B0EC()
{
  return sub_10063B0A4(&qword_100814788, (void (*)(uint64_t))_s19DurationFormatStyleV10AttributedVMa);
}

uint64_t sub_10063B134()
{
  return sub_10063B0A4(&qword_100814790, (void (*)(uint64_t))_s19DurationFormatStyleV10AttributedVMa);
}

uint64_t sub_10063B17C()
{
  return sub_10063B0A4(&qword_100814798, (void (*)(uint64_t))_s19DurationFormatStyleV10AttributedVMa);
}

uint64_t sub_10063B1C4()
{
  return sub_10063B0A4(&qword_1008147A0, (void (*)(uint64_t))_s19DurationFormatStyleVMa);
}

uint64_t sub_10063B20C()
{
  return sub_10063B0A4(&qword_1008147A8, (void (*)(uint64_t))_s19DurationFormatStyleVMa);
}

uint64_t sub_10063B254()
{
  return sub_10063B0A4(&qword_1008147B0, (void (*)(uint64_t))_s19DurationFormatStyleVMa);
}

unint64_t sub_10063B2A0()
{
  unint64_t result = qword_1007FEB20;
  if (!qword_1007FEB20)
  {
    sub_100014440(&qword_1007FEB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FEB20);
  }
  return result;
}

unint64_t sub_10063B2FC()
{
  unint64_t result = qword_1008147C0;
  if (!qword_1008147C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008147C0);
  }
  return result;
}

unint64_t sub_10063B350()
{
  unint64_t result = qword_1008147C8;
  if (!qword_1008147C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008147C8);
  }
  return result;
}

unint64_t sub_10063B3A4()
{
  unint64_t result = qword_1008147D8;
  if (!qword_1008147D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008147D8);
  }
  return result;
}

unint64_t sub_10063B3F8()
{
  unint64_t result = qword_1008147E8;
  if (!qword_1008147E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008147E8);
  }
  return result;
}

uint64_t sub_10063B44C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10063B4B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10063B514(unsigned char *a1, unsigned char *a2, void (*a3)(void))
{
  BOOL v4 = *a1 == 0;
  if (*a1) {
    uint64_t v5 = 0x796C6B656577;
  }
  else {
    uint64_t v5 = 0x796C696164;
  }
  if (v4) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (*a2) {
    uint64_t v7 = 0x796C6B656577;
  }
  else {
    uint64_t v7 = 0x796C696164;
  }
  if (*a2) {
    unint64_t v8 = 0xE600000000000000;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  a3(0);

  return static Locale.== infix(_:_:)();
}

ValueMetadata *_s19DurationFormatStyleV10CodingKeysOMa()
{
  return &_s19DurationFormatStyleV10CodingKeysON;
}

unsigned char *_s19DurationFormatStyleV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063B6ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19DurationFormatStyleV10AttributedV10CodingKeysOMa()
{
  return &_s19DurationFormatStyleV10AttributedV10CodingKeysON;
}

unint64_t sub_10063B728()
{
  unint64_t result = qword_1008147F8;
  if (!qword_1008147F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008147F8);
  }
  return result;
}

unint64_t sub_10063B780()
{
  unint64_t result = qword_100814800;
  if (!qword_100814800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814800);
  }
  return result;
}

unint64_t sub_10063B7D8()
{
  unint64_t result = qword_100814808;
  if (!qword_100814808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814808);
  }
  return result;
}

unint64_t sub_10063B830()
{
  unint64_t result = qword_100814810;
  if (!qword_100814810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814810);
  }
  return result;
}

unint64_t sub_10063B888()
{
  unint64_t result = qword_100814818;
  if (!qword_100814818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814818);
  }
  return result;
}

unint64_t sub_10063B8E0()
{
  unint64_t result = qword_100814820;
  if (!qword_100814820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814820);
  }
  return result;
}

uint64_t sub_10063B934(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E657571657266 && a2 == 0xE900000000000079;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_10063BA34(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_100010218(&qword_100807970) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for OpenURLAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10063BB40(uint64_t a1)
{
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for OpenURLAction();
    int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10063BBE4(void *a1, void *a2)
{
  sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10063BCA0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10063BD6C((uint64_t)a1);
    sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10063BD6C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100807970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10063BDCC(void *a1, const void *a2)
{
  uint64_t v4 = sub_100010218(&qword_100807970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_10063BE90(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_10063BD6C((uint64_t)a1);
    uint64_t v4 = sub_100010218(&qword_100807970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10063BF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063BF78);
}

uint64_t sub_10063BF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807988);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10063BFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063BFFC);
}

uint64_t sub_10063BFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807988);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for InsightsSetScheduleAction()
{
  uint64_t result = qword_100814880;
  if (!qword_100814880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10063C0BC()
{
  sub_100302F18();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10063C148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_100010218((uint64_t *)&unk_100800A60);
  v4[3] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OpenURLAction();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v7;
  v4[9] = v6;
  return _swift_task_switch(sub_10063C26C, v7, v6);
}

uint64_t sub_10063C26C()
{
  if (qword_1007F6BF8 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_10063C334;
  return sub_100233714(1);
}

uint64_t sub_10063C334()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10063C454, v3, v2);
}

uint64_t sub_10063C454()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  swift_release();
  sub_10066730C(v1);
  URL.init(string:)();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v9 = v0[3];
    uint64_t v8 = v0[4];
    OpenURLAction.callAsFunction(_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    char v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  return result;
}

uint64_t sub_10063C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t sub_10063C5BC(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1008149D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_10063DE90();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  sub_10063DE20(&qword_1007FDC58, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    _s16StreakEventAssetC12MetadataTypeVMa(0);
    v8[14] = 1;
    type metadata accessor for Date();
    sub_10063DE20(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10063C7BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  char v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100010218(&qword_1008149C0);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_10002E0BC(a1, a1[3]);
  sub_10063DE90();
  uint64_t v13 = v28;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13)
  {
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    return sub_1000ADA74((uint64_t)v11);
  }
  else
  {
    uint64_t v28 = v9;
    uint64_t v14 = v25;
    char v30 = 0;
    sub_10063DE20((unint64_t *)&unk_100811820, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = (uint64_t)v26;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10001ACF4(v15, (uint64_t)v11);
    char v29 = 1;
    sub_10063DE20(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v16 = v4;
    uint64_t v17 = v22;
    uint64_t v18 = v27;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v18);
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v11[*(int *)(v28 + 20)], v16, v17);
    sub_10063DEE4((uint64_t)v11, v19);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    return sub_10063DF48((uint64_t)v11);
  }
}

uint64_t sub_10063CB9C()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x44497972746E65;
  }
}

uint64_t sub_10063CBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10063E4A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10063CBF8(uint64_t a1)
{
  unint64_t v2 = sub_10063DE90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10063CC34(uint64_t a1)
{
  unint64_t v2 = sub_10063DE90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10063CC70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10063C7BC(a1, a2);
}

uint64_t sub_10063CC88(void *a1)
{
  return sub_10063C5BC(a1);
}

char *sub_10063CCA0(unsigned __int8 a1, char *a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v31 = sub_100010218(&qword_1007F9F78);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v30 = v3;
  *(void *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata) = 0;
  if (a1 > 1u)
  {
    UUID.init()();
  }
  else
  {
    unint64_t v18 = UUID.uuidString.getter();
    unint64_t v20 = v19;
    UUID.init(uuid:)();
    sub_10063F4C8(v18, v20, (uint64_t)v11);
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v17, v14, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v8);
  uint64_t v22 = (char *)sub_1001817C4((uint64_t)v11, 19, 9);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  v21(v7, a2, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v23 = &v7[*(int *)(_s16StreakEventAssetC12MetadataTypeVMa(0) + 20)];
  uint64_t v24 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, v32, v24);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007FFBC0);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v25 + *(void *)(*(void *)v25 + 104);
  uint64_t v27 = sub_100010218(&qword_1007F9F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_OWORD *)(v25 + *(void *)(*(void *)v25 + 112)) = xmmword_1006D6A80;
  sub_10063E22C((uint64_t)v7, v25 + *(void *)(*(void *)v25 + 120));
  *(void *)&v22[OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata] = v25;
  swift_release();
  return v22;
}

uint64_t sub_10063D0AC()
{
  return swift_release();
}

id sub_10063D0BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StreakEventAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10063D104()
{
  return _s16StreakEventAssetCMa(0);
}

uint64_t _s16StreakEventAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1008148E8);
}

uint64_t sub_10063D12C()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_10063D170(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100010218(&qword_100800950);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_10063D324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *sub_10063D424(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218(&qword_100800950);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_10063D588(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100010218(&qword_100800950);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_10063D750(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218(&qword_100800950);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_10063D8B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100010218(&qword_100800950);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_10063DA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063DA90);
}

uint64_t sub_10063DA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100800950);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10063DB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063DBA0);
}

uint64_t sub_10063DBA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100010218(&qword_100800950);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s16StreakEventAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100814950);
}

void sub_10063DCC8()
{
  sub_10001A7A4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10063DD90()
{
  return sub_10063DE20(&qword_1007F9F90, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_10063DDD8()
{
  return sub_10063DE20(&qword_1007FDD70, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_10063DE20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10063DE68()
{
  return swift_retain();
}

uint64_t sub_10063DE78(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_10063DE90()
{
  unint64_t result = qword_1008149C8;
  if (!qword_1008149C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008149C8);
  }
  return result;
}

uint64_t sub_10063DEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063DF48(uint64_t a1)
{
  uint64_t v2 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10063DFA4(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9F78);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)objc_allocWithZone((Class)_s16StreakEventAssetCMa(0))
            + OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata) = 0;
  UUID.init()();
  uint64_t v9 = (char *)sub_1001817C4((uint64_t)v8, 19, 9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v10 = &v4[*(int *)(_s16StreakEventAssetC12MetadataTypeVMa(0) + 20)];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a1, v11);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_1007FFBC0);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v12 + *(void *)(*(void *)v12 + 104);
  uint64_t v14 = sub_100010218(&qword_1007F9F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_OWORD *)(v12 + *(void *)(*(void *)v12 + 112)) = xmmword_1006D6A80;
  sub_10063E22C((uint64_t)v4, v12 + *(void *)(*(void *)v12 + 120));
  *(void *)&v9[OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata] = v12;
  swift_release();
  return v9;
}

uint64_t sub_10063E22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063E360);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s16StreakEventAssetC12MetadataTypeV10CodingKeysON;
}

unint64_t sub_10063E39C()
{
  unint64_t result = qword_1008149D8;
  if (!qword_1008149D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008149D8);
  }
  return result;
}

unint64_t sub_10063E3F4()
{
  unint64_t result = qword_1008149E0;
  if (!qword_1008149E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008149E0);
  }
  return result;
}

unint64_t sub_10063E44C()
{
  unint64_t result = qword_1008149E8;
  if (!qword_1008149E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008149E8);
  }
  return result;
}

uint64_t sub_10063E4A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497972746E65 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_10063E584()
{
}

void sub_10063E5C0()
{
}

void sub_10063E5FC(void *a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  if (*(void *)(v4 + *a1))
  {
    swift_retain();
    uint64_t v9 = sub_10063E794(a2, a3, a2, a4);
    unint64_t v11 = v10;
    swift_release();
    uint64_t v12 = (id *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
    uint64_t v13 = *(void **)(v5 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
    if (!v13) {
      goto LABEL_13;
    }
    if (v11 >> 60 != 15)
    {
      id v14 = v13;
      sub_100040F10(v9, v11);
      v15.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DBC(v9, v11);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v12 = (id *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
    uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
    if (!v13)
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
      goto LABEL_13;
    }
    uint64_t v9 = 0;
    unint64_t v11 = 0xF000000000000000;
  }
  id v14 = v13;
  v15.super.Class isa = 0;
LABEL_8:
  [v14 setAssetMetaData:v15.super.isa];

  if (*v12)
  {
    id v16 = *v12;
    [v16 setIsUploadedToCloud:0];
    sub_100040DBC(v9, v11);

    return;
  }
LABEL_13:

  sub_100040DBC(v9, v11);
}

uint64_t sub_10063E794(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v23 = a4;
  uint64_t v24 = a3;
  uint64_t v6 = a1(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_100010218(a2);
  __chkstk_darwin(v9);
  unint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 112));
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  uint64_t v15 = *v12;
  if (v13 >> 60 == 11)
  {
    sub_10001B220(v4 + *(void *)(*(void *)v4 + 120), (uint64_t)v11, a2);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v16 = v24;
      uint64_t v17 = sub_10063F400((uint64_t)v11, (uint64_t)v8, v24);
      uint64_t v15 = v23(v17);
      unint64_t v19 = v18;
      sub_10063F468((uint64_t)v8, v16);
    }
    else
    {
      uint64_t v15 = *v11;
      unint64_t v19 = v11[1];
    }
    uint64_t v20 = *v12;
    unint64_t v21 = v12[1];
    uint64_t *v12 = v15;
    v12[1] = v19;
    sub_100040F10(v15, v19);
    sub_1005903B0(v20, v21);
  }
  sub_1005903C4(v14, v13);
  return v15;
}

Swift::Void __swiftcall JournalEntryMO.willSave()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for JournalEntryMO();
  [super willSave];
  if (([v0 isDeleted] & 1) == 0) {
    sub_10030DC34();
  }
}

Swift::Void __swiftcall JournalEntryMO.prepareForDeletion()()
{
  objc_super v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v77 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v74 - v5;
  uint64_t v80 = type metadata accessor for Date();
  uint64_t v82 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v79 = (uint64_t)&v74 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v74 - v11;
  uint64_t v13 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v74 - v17;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v78 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v83 = (char *)&v74 - v23;
  __chkstk_darwin(v24);
  double v81 = (char *)&v74 - v25;
  uint64_t v26 = (objc_class *)type metadata accessor for JournalEntryMO();
  v84.receiver = v1;
  v84.super_class = v26;
  [super prepareForDeletion];
  uint64_t v27 = &selRef_drawMapRect_zoomScale_inContext_;
  id v28 = [v1 managedObjectContext];
  uint64_t v29 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  if (!v28) {
    goto LABEL_14;
  }
  uint64_t v30 = v28;
  id v31 = [v1 id];
  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_9;
  }
  uint64_t v32 = v31;
  uint64_t v75 = v12;
  uint64_t v33 = v20;
  double v34 = v83;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v36 = v34;
  uint64_t v20 = v33;
  uint64_t v29 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  v35(v18, v36, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_9:

    sub_10001457C((uint64_t)v18, &qword_100800950);
    uint64_t v27 = &selRef_drawMapRect_zoomScale_inContext_;
    goto LABEL_14;
  }
  v35(v81, v18, v19);
  id v37 = [v1 createdDate];
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v6, 1, 1, v80);
    uint64_t v27 = &selRef_drawMapRect_zoomScale_inContext_;
    goto LABEL_11;
  }
  uint64_t v38 = v37;
  uint64_t v39 = v79;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v40 = v82;
  uint64_t v41 = v39;
  uint64_t v42 = v80;
  double v74 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
  v74(v6, v41, v80);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v6, 0, 1, v42);
  int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v6, 1, v42);
  uint64_t v27 = &selRef_drawMapRect_zoomScale_inContext_;
  if (v43 == 1)
  {
LABEL_11:

    (*(void (**)(char *, uint64_t))(v20 + 8))(v81, v19);
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_1007FC470);
    goto LABEL_14;
  }
  char v44 = v75;
  v74(v75, (uint64_t)v6, v42);
  if ([v1 isDraft])
  {

    (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v42);
  }
  else
  {
    uint64_t v45 = v42;
    CGRect v46 = v83;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v83, v81, v19);
    uint64_t v47 = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v82 + 16))(v79, v44, v45);
    id v48 = objc_allocWithZone((Class)_s16StreakEventAssetCMa(0));
    uint64_t v49 = sub_10063CCA0(0, v46, v79);

    sub_10063E5FC(&OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata, _s16StreakEventAssetC12MetadataTypeVMa, &qword_1007F9F78, (uint64_t (*)(uint64_t))sub_1000EFA24);
    uint64_t v50 = v47;
    uint64_t v27 = &selRef_drawMapRect_zoomScale_inContext_;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v44, v45);
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v81, v19);
  uint64_t v29 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_14:
  id v51 = [v1 v27[242]];
  if (!v51) {
    return;
  }
  unint64_t v52 = v51;
  id v53 = [v1 v29[46]];
  if (!v53)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v15, 1, 1, v19);
    goto LABEL_22;
  }
  uint64_t v54 = v53;
  int v55 = v83;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v56(v15, v55, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
  {
LABEL_22:

    double v66 = &qword_100800950;
LABEL_25:
    sub_10001457C((uint64_t)v15, v66);
    return;
  }
  uint64_t v57 = v78;
  v56(v78, v15, v19);
  id v58 = [v1 updatedDate];
  if (!v58)
  {
    uint64_t v15 = v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v77, 1, 1, v80);
    goto LABEL_24;
  }
  double v59 = v58;
  uint64_t v60 = v79;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v61 = v82;
  double v62 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
  uint64_t v15 = v77;
  uint64_t v63 = v60;
  uint64_t v64 = v80;
  v62(v77, v63, v80);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v15, 0, 1, v64);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v15, 1, v64) == 1)
  {
LABEL_24:

    (*(void (**)(char *, uint64_t))(v20 + 8))(v57, v19);
    double v66 = (uint64_t *)&unk_1007FC470;
    goto LABEL_25;
  }
  BOOL v65 = v76;
  v62(v76, (uint64_t)v15, v64);
  if ([v1 isDraft])
  {

    (*(void (**)(char *, uint64_t))(v61 + 8))(v65, v64);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v78, v19);
  }
  else
  {
    double v67 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v68 = v20;
    uint64_t v69 = v83;
    unint64_t v70 = v78;
    v67(v83, v78, v19);
    uint64_t v71 = v79;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v79, v65, v64);
    id v72 = objc_allocWithZone((Class)_s16StreakEventAssetCMa(0));
    uint64_t v73 = sub_10063CCA0(1u, v69, v71);

    sub_10063E5FC(&OBJC_IVAR____TtCC7Journal10Journaling16StreakEventAsset_metadata, _s16StreakEventAssetC12MetadataTypeVMa, &qword_1007F9F78, (uint64_t (*)(uint64_t))sub_1000EFA24);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v65, v64);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v19);
  }
}

uint64_t sub_10063F400(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10063F468(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10063F4C8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  v32[1] = 0;
  uint64_t v6 = type metadata accessor for Insecure.SHA1Digest();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Insecure.SHA1();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Insecure.SHA1.init()();
  *(void *)uint64_t v35 = UUID.uuid.getter();
  *(_WORD *)&v35[8] = v13;
  v35[10] = v14;
  v35[11] = v15;
  unsigned char v35[12] = v16;
  v35[13] = v17;
  char v36 = v18;
  char v37 = v19;
  Insecure.SHA1.update(bufferPointer:)();
  uint64_t v20 = sub_10063F9C4(a1, a2);
  uint64_t v22 = v20;
  unint64_t v23 = v21;
  uint64_t v34 = v6;
  switch(v21 >> 62)
  {
    case 1uLL:
      v32[0] = v10;
      if (v20 >> 32 < (int)v20) {
        __break(1u);
      }
      sub_100040D64(v20, v21);
      sub_1006403E0((int)v22, v22 >> 32);
      sub_100040DD0(v22, v23);
      sub_100040DD0(v22, v23);
      uint64_t v10 = v32[0];
      break;
    case 2uLL:
      uint64_t v24 = v10;
      v32[0] = v9;
      uint64_t v25 = a3;
      uint64_t v27 = *(void *)(v20 + 16);
      uint64_t v26 = *(void *)(v20 + 24);
      sub_100040D64(v20, v21);
      swift_retain();
      swift_retain();
      uint64_t v28 = v27;
      uint64_t v10 = v24;
      uint64_t v29 = v26;
      a3 = v25;
      uint64_t v9 = v32[0];
      sub_1006403E0(v28, v29);
      swift_release();
      swift_release();
      sub_100040DD0(v22, v23);
      sub_100040DD0(v22, v23);
      break;
    case 3uLL:
      sub_100640490();
      memset(v35, 0, sizeof(v35));
      goto LABEL_7;
    default:
      *(void *)uint64_t v35 = v20;
      *(_WORD *)&v35[8] = v21;
      v35[10] = BYTE2(v21);
      v35[11] = BYTE3(v21);
      unsigned char v35[12] = BYTE4(v21);
      v35[13] = BYTE5(v21);
      sub_100640490();
LABEL_7:
      dispatch thunk of HashFunction.update(bufferPointer:)();
      sub_100040DD0(v22, v23);
      sub_100040DD0(v22, v23);
      break;
  }
  Insecure.SHA1.finalize()();
  sub_100010218(&qword_1008149F0);
  Insecure.SHA1Digest.withUnsafeBytes<A>(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  UUID.init(uuid:)();
  uint64_t v30 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a3, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10063F9C4(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100814A00);
  if (swift_dynamicCast())
  {
    sub_10001B3BC(v38, (uint64_t)&v41);
    sub_10002E0BC(&v41, v43);
    dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_1006404E8((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = _StringObject.sharedUTF8.getter();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_100640798(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = String.UTF8View._foreignCount()();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_1006407FC(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_10063FF40((void *(*)(uint64_t *__return_ptr, char *, char *))sub_10064089C);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        Data._Representation.replaceSubrange(_:with:count:)();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1005B342C(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = String.UTF8View._foreignSubscript(position:)();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = _StringObject.sharedUTF8.getter();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1005B342C(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = String.UTF8View._foreignIndex(after:)();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      Data._Representation.append(contentsOf:)();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    Data._Representation.append(contentsOf:)();
    sub_100040DBC(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_100040DBC((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_10063FEEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(_WORD *)(a2 + 4) = *(_WORD *)(result + 4);
  *(unsigned char *)(a2 + 6) = *(unsigned char *)(result + 6) & 0xF | 0x50;
  *(unsigned char *)(a2 + 7) = *(unsigned char *)(result + 7);
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(result + 8) & 0x3F | 0x80;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)(result + 9);
  *(_WORD *)(a2 + 13) = *(_WORD *)(result + 13);
  *(unsigned char *)(a2 + 15) = *(unsigned char *)(result + 15);
  return result;
}

char *sub_10063FF40(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)objc_super v1 = xmmword_1006EEDD0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v4, __DataStorage._offset.getter())) {
        goto LABEL_24;
      }
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v13 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      unint64_t result = sub_10064032C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      Data.LargeSlice.ensureUniqueReference()();
      unint64_t result = sub_10064032C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        uint64_t *v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        uint64_t *v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        unint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      uint64_t *v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_100640244@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_1006405D4(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_100640698((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_100640714((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_1006402BC(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  unint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_10064032C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  unint64_t result = (char *)__DataStorage._bytes.getter();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  unint64_t result = (char *)__DataStorage._offset.getter();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_1006403E0(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for Insecure.SHA1();
      sub_100640490();
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_100640490()
{
  unint64_t result = qword_1008149F8;
  if (!qword_1008149F8)
  {
    type metadata accessor for Insecure.SHA1();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008149F8);
  }
  return result;
}

uint64_t sub_1006404E8(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100814A08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100640548@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    unint64_t result = _StringGuts.copyUTF8(into:)();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006405D4(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_100640698(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_100640714(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_100640798(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_1006405D4(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_100640698((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_100640714((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1006407FC(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      type metadata accessor for __DataStorage();
      swift_allocObject();
      __DataStorage.init(length:)();
      if (v1 >= 0x7FFFFFFF)
      {
        type metadata accessor for Data.RangeReference();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_10064089C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  uint64_t result = sub_1006402BC((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100640908, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_100640908@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100640548(a1, a2);
}

Swift::Int sub_100640928(void *a1)
{
  Hasher.init(_seed:)();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v3 = a1;
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10001DFA8(a1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_100640A1C()
{
  return sub_100640928(*v0);
}

void sub_100640A24()
{
  unint64_t v1 = *v0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_9;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_9;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_9;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_9:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v3 = v1;
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10001DFA8(v1);
      break;
  }
}

Swift::Int sub_100640B0C()
{
  unint64_t v1 = *v0;
  Hasher.init(_seed:)();
  switch((unint64_t)v1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v3 = v1;
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10001DFA8(v1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_100640BFC(void **a1, void **a2)
{
  return sub_100641588(*a1, *a2);
}

uint64_t sub_100640C08()
{
  sub_100010218(&qword_100814A40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006EEDE0;
  unint64_t v1 = (void *)MKPointOfInterestCategoryAnimalService;
  *(void *)(inited + 32) = MKPointOfInterestCategoryAnimalService;
  *(void *)(inited + 40) = MKPointOfInterestCategoryAirport;
  *(void *)(inited + 48) = MKPointOfInterestCategoryAmusementPark;
  *(void *)(inited + 56) = MKPointOfInterestCategoryAquarium;
  *(void *)(inited + 64) = MKPointOfInterestCategoryATM;
  Swift::UInt v2 = (void *)MKPointOfInterestCategoryAutomotiveRepair;
  *(void *)(inited + 72) = MKPointOfInterestCategoryAutomotiveRepair;
  *(void *)(inited + 80) = MKPointOfInterestCategoryBakery;
  id v3 = (void *)MKPointOfInterestCategoryBaseball;
  *(void *)(inited + 88) = MKPointOfInterestCategoryBank;
  *(void *)(inited + 96) = v3;
  uint64_t v4 = (void *)MKPointOfInterestCategoryBasketball;
  *(void *)(inited + 104) = MKPointOfInterestCategoryBasketball;
  *(void *)(inited + 112) = MKPointOfInterestCategoryBeach;
  uint64_t v90 = (void *)MKPointOfInterestCategoryBeauty;
  uint64_t v5 = MKPointOfInterestCategoryBowling;
  uint64_t v91 = (void *)MKPointOfInterestCategoryBowling;
  *(void *)(inited + 120) = MKPointOfInterestCategoryBeauty;
  *(void *)(inited + 128) = v5;
  *(void *)(inited + 136) = MKPointOfInterestCategoryBrewery;
  *(void *)(inited + 144) = MKPointOfInterestCategoryCafe;
  *(void *)(inited + 152) = MKPointOfInterestCategoryCampground;
  *(void *)(inited + 160) = MKPointOfInterestCategoryCarRental;
  uint64_t v92 = (void *)MKPointOfInterestCategoryCastle;
  uint64_t v6 = MKPointOfInterestCategoryConventionCenter;
  uint64_t v94 = (void *)MKPointOfInterestCategoryConventionCenter;
  *(void *)(inited + 168) = MKPointOfInterestCategoryCastle;
  *(void *)(inited + 176) = v6;
  unint64_t v93 = (void *)MKPointOfInterestCategoryDistillery;
  *(void *)(inited + 184) = MKPointOfInterestCategoryDistillery;
  *(void *)(inited + 192) = MKPointOfInterestCategoryEVCharger;
  uint64_t v95 = (void *)MKPointOfInterestCategoryFairground;
  *(void *)(inited + 200) = MKPointOfInterestCategoryFairground;
  *(void *)(inited + 208) = MKPointOfInterestCategoryFireStation;
  uint64_t v96 = (void *)MKPointOfInterestCategoryFishing;
  *(void *)(inited + 216) = MKPointOfInterestCategoryFishing;
  *(void *)(inited + 224) = MKPointOfInterestCategoryFitnessCenter;
  uint64_t v7 = MKPointOfInterestCategoryFortress;
  uint64_t v97 = (void *)MKPointOfInterestCategoryFortress;
  *(void *)(inited + 232) = MKPointOfInterestCategoryFoodMarket;
  *(void *)(inited + 240) = v7;
  uint64_t v8 = MKPointOfInterestCategoryGolf;
  uint64_t v99 = (void *)MKPointOfInterestCategoryGolf;
  *(void *)(inited + 248) = MKPointOfInterestCategoryGasStation;
  *(void *)(inited + 256) = v8;
  uint64_t v98 = (void *)MKPointOfInterestCategoryGoKart;
  uint64_t v9 = MKPointOfInterestCategoryHiking;
  uint64_t v100 = (void *)MKPointOfInterestCategoryHiking;
  *(void *)(inited + 264) = MKPointOfInterestCategoryGoKart;
  *(void *)(inited + 272) = v9;
  *(void *)(inited + 280) = MKPointOfInterestCategoryHospital;
  *(void *)(inited + 288) = MKPointOfInterestCategoryHotel;
  char v101 = (void *)MKPointOfInterestCategoryKayaking;
  uint64_t v10 = MKPointOfInterestCategoryLandmark;
  uint64_t v102 = (void *)MKPointOfInterestCategoryLandmark;
  *(void *)(inited + 296) = MKPointOfInterestCategoryKayaking;
  *(void *)(inited + 304) = v10;
  *(void *)(inited + 312) = MKPointOfInterestCategoryLaundry;
  *(void *)(inited + 320) = MKPointOfInterestCategoryLibrary;
  uint64_t v103 = (void *)MKPointOfInterestCategoryMailbox;
  *(void *)(inited + 328) = MKPointOfInterestCategoryMailbox;
  *(void *)(inited + 336) = MKPointOfInterestCategoryMarina;
  uint64_t v104 = (void *)MKPointOfInterestCategoryMiniGolf;
  *(void *)(inited + 344) = MKPointOfInterestCategoryMiniGolf;
  *(void *)(inited + 352) = MKPointOfInterestCategoryMovieTheater;
  uint64_t v11 = MKPointOfInterestCategoryMusicVenue;
  uint64_t v106 = (void *)MKPointOfInterestCategoryMusicVenue;
  *(void *)(inited + 360) = MKPointOfInterestCategoryMuseum;
  *(void *)(inited + 368) = v11;
  uint64_t v105 = (void *)MKPointOfInterestCategoryNationalMonument;
  *(void *)(inited + 376) = MKPointOfInterestCategoryNationalMonument;
  *(void *)(inited + 384) = MKPointOfInterestCategoryNationalPark;
  *(void *)(inited + 392) = MKPointOfInterestCategoryNightlife;
  *(void *)(inited + 400) = MKPointOfInterestCategoryPark;
  *(void *)(inited + 408) = MKPointOfInterestCategoryParking;
  *(void *)(inited + 416) = MKPointOfInterestCategoryPharmacy;
  uint64_t v107 = (void *)MKPointOfInterestCategoryPlanetarium;
  *(void *)(inited + 424) = MKPointOfInterestCategoryPlanetarium;
  *(void *)(inited + 432) = MKPointOfInterestCategoryPolice;
  *(void *)(inited + 440) = MKPointOfInterestCategoryPostOffice;
  *(void *)(inited + 448) = MKPointOfInterestCategoryPublicTransport;
  *(void *)(inited + 456) = MKPointOfInterestCategoryRestaurant;
  *(void *)(inited + 464) = MKPointOfInterestCategoryRestroom;
  uint64_t v108 = (void *)MKPointOfInterestCategoryRockClimbing;
  uint64_t v12 = MKPointOfInterestCategoryRVPark;
  uint64_t v109 = (void *)MKPointOfInterestCategoryRVPark;
  *(void *)(inited + 472) = MKPointOfInterestCategoryRockClimbing;
  *(void *)(inited + 480) = v12;
  uint64_t v13 = MKPointOfInterestCategorySkatePark;
  long long v111 = (void *)MKPointOfInterestCategorySkatePark;
  *(void *)(inited + 488) = MKPointOfInterestCategorySchool;
  *(void *)(inited + 496) = v13;
  uint64_t v110 = (void *)MKPointOfInterestCategorySkating;
  uint64_t v14 = MKPointOfInterestCategorySkiing;
  uint64_t v112 = (void *)MKPointOfInterestCategorySkiing;
  *(void *)(inited + 504) = MKPointOfInterestCategorySkating;
  *(void *)(inited + 512) = v14;
  char v113 = (void *)MKPointOfInterestCategorySoccer;
  *(void *)(inited + 520) = MKPointOfInterestCategorySoccer;
  uint64_t v114 = (void *)MKPointOfInterestCategorySpa;
  *(void *)(inited + 528) = MKPointOfInterestCategorySpa;
  *(void *)(inited + 536) = MKPointOfInterestCategoryStadium;
  *(void *)(inited + 544) = MKPointOfInterestCategoryStore;
  uint64_t v115 = (void *)MKPointOfInterestCategorySurfing;
  *(void *)(inited + 552) = MKPointOfInterestCategorySurfing;
  uint64_t v116 = (void *)MKPointOfInterestCategorySwimming;
  *(void *)(inited + 560) = MKPointOfInterestCategorySwimming;
  uint64_t v117 = (void *)MKPointOfInterestCategoryTennis;
  *(void *)(inited + 568) = MKPointOfInterestCategoryTennis;
  *(void *)(inited + 576) = MKPointOfInterestCategoryTheater;
  *(void *)(inited + 584) = MKPointOfInterestCategoryUniversity;
  uint64_t v118 = (void *)MKPointOfInterestCategoryVolleyball;
  *(void *)(inited + 592) = MKPointOfInterestCategoryVolleyball;
  *(void *)(inited + 600) = MKPointOfInterestCategoryWinery;
  *(void *)(inited + 608) = MKPointOfInterestCategoryZoo;
  id v15 = v1;
  uint64_t v16 = MKPointOfInterestCategoryAirport;
  uint64_t v17 = MKPointOfInterestCategoryAmusementPark;
  uint64_t v18 = MKPointOfInterestCategoryAquarium;
  unint64_t v19 = MKPointOfInterestCategoryATM;
  id v20 = v2;
  uint64_t v21 = MKPointOfInterestCategoryBakery;
  uint64_t v22 = MKPointOfInterestCategoryBank;
  id v23 = v3;
  id v24 = v4;
  unint64_t v25 = MKPointOfInterestCategoryBeach;
  id v26 = v90;
  id v27 = v91;
  uint64_t v28 = MKPointOfInterestCategoryBrewery;
  unint64_t v29 = MKPointOfInterestCategoryCafe;
  unint64_t v30 = MKPointOfInterestCategoryCampground;
  char v31 = MKPointOfInterestCategoryCarRental;
  id v32 = v92;
  id v33 = v94;
  id v34 = v93;
  uint64_t v35 = MKPointOfInterestCategoryEVCharger;
  id v36 = v95;
  char v37 = MKPointOfInterestCategoryFireStation;
  id v38 = v96;
  uint64_t v39 = MKPointOfInterestCategoryFitnessCenter;
  long long v40 = MKPointOfInterestCategoryFoodMarket;
  id v41 = v97;
  uint64_t v42 = MKPointOfInterestCategoryGasStation;
  id v43 = v99;
  id v44 = v98;
  id v45 = v100;
  CGRect v46 = MKPointOfInterestCategoryHospital;
  uint64_t v47 = MKPointOfInterestCategoryHotel;
  id v48 = v101;
  id v49 = v102;
  uint64_t v50 = MKPointOfInterestCategoryLaundry;
  id v51 = MKPointOfInterestCategoryLibrary;
  id v52 = v103;
  id v53 = MKPointOfInterestCategoryMarina;
  id v54 = v104;
  int v55 = MKPointOfInterestCategoryMovieTheater;
  uint64_t v56 = MKPointOfInterestCategoryMuseum;
  id v57 = v106;
  id v58 = v105;
  double v59 = MKPointOfInterestCategoryNationalPark;
  uint64_t v60 = MKPointOfInterestCategoryNightlife;
  uint64_t v61 = MKPointOfInterestCategoryPark;
  double v62 = MKPointOfInterestCategoryParking;
  uint64_t v63 = MKPointOfInterestCategoryPharmacy;
  id v64 = v107;
  BOOL v65 = MKPointOfInterestCategoryPolice;
  double v66 = MKPointOfInterestCategoryPostOffice;
  double v67 = MKPointOfInterestCategoryPublicTransport;
  uint64_t v68 = MKPointOfInterestCategoryRestaurant;
  uint64_t v69 = MKPointOfInterestCategoryRestroom;
  id v70 = v108;
  id v71 = v109;
  id v72 = MKPointOfInterestCategorySchool;
  id v73 = v111;
  id v74 = v110;
  id v75 = v112;
  id v76 = v113;
  id v77 = v114;
  uint64_t v78 = MKPointOfInterestCategoryStadium;
  uint64_t v79 = MKPointOfInterestCategoryStore;
  id v80 = v115;
  id v81 = v116;
  id v82 = v117;
  uint64_t v83 = MKPointOfInterestCategoryTheater;
  objc_super v84 = MKPointOfInterestCategoryUniversity;
  id v85 = v118;
  uint64_t v86 = MKPointOfInterestCategoryWinery;
  uint64_t v87 = MKPointOfInterestCategoryZoo;
  uint64_t v88 = sub_100388B68(inited);
  swift_setDeallocating();
  type metadata accessor for MKPointOfInterestCategory(0);
  uint64_t result = swift_arrayDestroy();
  qword_100814A10 = v88;
  return result;
}

id sub_1006413E0()
{
  sub_100337EFC();
  id result = sub_100641418(346);
  qword_100814A18 = (uint64_t)result;
  return result;
}

id sub_100641418(int a1)
{
  id result = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (result)
  {
    id v3 = result;
    sub_100010218(&qword_100814A38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006DC550;
    *(void *)(inited + 32) = 0x300000005;
    uint64_t v5 = inited + 32;
    *(_DWORD *)(inited + 40) = 6;
    *(_DWORD *)(inited + 44) = a1;
    *(void *)(inited + 48) = 0x100010024;
    id v6 = v3;
    [v6 replaceAttributes:v5 count:6];

    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1006414E0()
{
  sub_100337EFC();
  id result = sub_100641418(347);
  qword_100814A20 = (uint64_t)result;
  return result;
}

id sub_100641518()
{
  sub_100337EFC();
  id result = sub_100641418(169);
  qword_100814A28 = (uint64_t)result;
  return result;
}

id sub_100641550()
{
  sub_100337EFC();
  id result = sub_100641418(145);
  qword_100814A30 = (uint64_t)result;
  return result;
}

uint64_t sub_100641588(void *a1, void *a2)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 1uLL:
      if (a2 == (void *)1) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 2uLL:
      if (a2 != (void *)2) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 3uLL:
      if (a2 != (void *)3) {
        goto LABEL_13;
      }
LABEL_9:
      char v8 = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_13:
        char v8 = 0;
      }
      else
      {
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v6 = v5;
        if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7) {
          char v8 = 1;
        }
        else {
          char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        sub_10001DFB8(a1);
        sub_10001DFB8(a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001DFA8(a2);
        sub_10001DFA8(a1);
      }
      break;
  }
  return v8 & 1;
}

uint64_t sub_1006416B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 52));
  unint64_t v6 = v5[1];
  if (v6 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    sub_100040F10(v8, v6);
    uint64_t v7 = (void *)sub_10003F8E0(v8, v6);
    sub_100040DBC(v8, v6);
  }
  id v9 = [v7 pointOfInterestCategory];

  if (v2)
  {
    if (v3 == 1701670728 && v2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_36:
      if (qword_1007F7EE0 != -1) {
        swift_once();
      }
      (id)qword_100814A18;

      swift_bridgeObjectRelease();
      return 0;
    }
    if (v3 == 1802661719 && v2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_44;
    }
    if (v3 == 0x6C6F6F686353 && v2 == 0xE600000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      goto LABEL_52;
    }
    if (v3 == 7174471 && v2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_60;
    }
    uint64_t v10 = sub_10065C35C(0);
    if (v11)
    {
      if (v10 == v3 && v11 == v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_36;
      }
    }
    uint64_t v23 = sub_10065C35C((void *)1);
    if (v24)
    {
      if (v23 == v3 && v24 == v2)
      {
        swift_bridgeObjectRelease();
LABEL_44:
        if (qword_1007F7EE8 != -1) {
          swift_once();
        }
        (id)qword_100814A20;

        swift_bridgeObjectRelease();
        return 1;
      }
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_44;
      }
    }
    uint64_t v26 = sub_10065C35C((void *)2);
    if (v27)
    {
      if (v26 == v3 && v27 == v2)
      {
        swift_bridgeObjectRelease();
LABEL_52:
        if (qword_1007F7EF0 != -1) {
          swift_once();
        }
        (id)qword_100814A28;

        swift_bridgeObjectRelease();
        return 2;
      }
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_52;
      }
    }
    uint64_t v29 = sub_10065C35C((void *)3);
    if (v30)
    {
      if (v29 == v3 && v30 == v2)
      {
        swift_bridgeObjectRelease();
LABEL_60:
        if (qword_1007F7EF8 != -1) {
          swift_once();
        }
        (id)qword_100814A30;

        swift_bridgeObjectRelease();
        return 3;
      }
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_60;
      }
    }
  }
  else
  {
    sub_10065C35C(0);
    if (!v12) {
      goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    sub_10065C35C((void *)1);
    if (!v13) {
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    sub_10065C35C((void *)2);
    if (!v14) {
      goto LABEL_52;
    }
    swift_bridgeObjectRelease();
    sub_10065C35C((void *)3);
    if (!v15) {
      goto LABEL_60;
    }
    swift_bridgeObjectRelease();
  }
  if (v9)
  {
    uint64_t v16 = qword_1007F7ED8;
    id v17 = v9;
    if (v16 != -1) {
      swift_once();
    }
    if ((sub_1005422B8((uint64_t)v17, qword_100814A10) & 1) != 0
      && (uint64_t v18 = a1 + *(int *)(v4 + 48), v19 = *(void *)(v18 + 8), v19 >> 60 != 15))
    {
      uint64_t v20 = *(void *)v18;
      sub_100040D64(*(void *)v18, *(void *)(v18 + 8));
      uint64_t v21 = sub_10003F8F4(v20, v19);
      sub_100040DBC(v20, v19);

      swift_bridgeObjectRelease();
      if (!v21)
      {

        return 0;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v9;
}

void **assignWithTake for PlaceCategory(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceCategory(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaceCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)id result = 0;
    *(_DWORD *)id result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)id result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceCategory()
{
  return &type metadata for PlaceCategory;
}

unint64_t sub_100641D50()
{
  unint64_t result = qword_100814A48;
  if (!qword_100814A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100814A48);
  }
  return result;
}

uint64_t destroy for InsightsVisitedPlacesView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_100026DF8(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_100026DF8(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_release();
}

uint64_t initializeWithCopy for InsightsVisitedPlacesView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_100026CCC(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100026CCC(v6, v7);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  char v8 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InsightsVisitedPlacesView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100026CCC(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100026DF8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_100026CCC(v8, v9);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_100026DF8(v10, v11);
  char v12 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v12;
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for InsightsVisitedPlacesView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100026DF8(v5, v6);
  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100026DF8(v8, v9);
  char v10 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v10;
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsVisitedPlacesView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsVisitedPlacesView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsVisitedPlacesView()
{
  return &type metadata for InsightsVisitedPlacesView;
}

uint64_t sub_1006420A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006420C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v60 = a1;
  uint64_t v62 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  double v59 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100010218(&qword_100814A50);
  __chkstk_darwin(v57);
  uint64_t v58 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for ColorResource();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  id v54 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for ColorScheme();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v51 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100806E00);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  char v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100814A58);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100814A60);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  id v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_100814A68);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100814A70);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v50 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = static HorizontalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v25 = sub_100010218(&qword_100814A78);
  sub_100642920(v2, (uint64_t *)&v13[*(int *)(v25 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v13, (uint64_t)v17, &qword_100814A58);
  uint64_t v27 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v27 = KeyPath;
  v27[8] = 1;
  sub_10001457C((uint64_t)v13, &qword_100814A58);
  uint64_t v28 = enum case for BlendMode.plusDarker(_:);
  uint64_t v29 = type metadata accessor for BlendMode();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104);
  v30(v10, v28, v29);
  v30(&v10[*(int *)(v8 + 48)], enum case for BlendMode.plusLighter(_:), v29);
  sub_10001B220((uint64_t)v10, (uint64_t)&v21[*(int *)(v19 + 44)], &qword_100806E00);
  sub_10001B220((uint64_t)v17, (uint64_t)v21, &qword_100814A60);
  sub_10001457C((uint64_t)v10, &qword_100806E00);
  uint64_t v31 = (uint64_t)v17;
  uint64_t v32 = (uint64_t)v50;
  sub_10001457C(v31, &qword_100814A60);
  uint64_t v33 = v52;
  id v34 = v51;
  uint64_t v35 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for ColorScheme.dark(_:), v53);
  uint64_t v36 = swift_getKeyPath();
  char v37 = (uint64_t *)(v32 + *(int *)(v23 + 44));
  uint64_t v38 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v37 + *(int *)(v38 + 28), v34, v35);
  *char v37 = v36;
  sub_10001B220((uint64_t)v21, v32, &qword_100814A68);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  sub_10001457C((uint64_t)v21, &qword_100814A68);
  sub_100010218(&qword_100800168);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1006D6270;
  if (qword_1007F7F70 != -1) {
    swift_once();
  }
  uint64_t v40 = v56;
  uint64_t v41 = sub_100026A54(v56, (uint64_t)qword_10083EF70);
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  id v43 = v54;
  v42(v54, v41, v40);
  *(void *)(v39 + 32) = Color.init(_:)();
  if (qword_1007F7F68 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_100026A54(v40, (uint64_t)qword_10083EF58);
  v42(v43, v44, v40);
  *(void *)(v39 + 40) = Color.init(_:)();
  *(void *)&long long v63 = v39;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  swift_bridgeObjectRelease();
  long long v67 = v70;
  long long v68 = v71;
  uint64_t v69 = v72;
  long long v63 = v70;
  long long v64 = v71;
  uint64_t v65 = v72;
  __int16 v66 = 256;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800170);
  sub_100014488(&qword_100800178, &qword_100800170);
  uint64_t v45 = AnyView.init<A>(_:)();
  uint64_t v46 = v58;
  sub_10001B220(v32, v58, &qword_100814A70);
  *(void *)(v46 + *(int *)(v57 + 36)) = v45;
  uint64_t v47 = v59;
  static ContainerBackgroundPlacement.widget.getter();
  sub_100646E5C();
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v62);
  sub_10001457C(v46, &qword_100814A50);
  sub_100179324((uint64_t)&v70);
  return sub_10001457C(v32, &qword_100814A70);
}

uint64_t sub_100642920@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v152 = a2;
  uint64_t v3 = type metadata accessor for IdentityTransition();
  uint64_t v146 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v143 = &v124[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v145 = &v124[-v6];
  uint64_t v7 = type metadata accessor for InsightsFamily();
  __chkstk_darwin(v7 - 8);
  uint64_t v138 = &v124[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100010218(&qword_100814470);
  __chkstk_darwin(v9 - 8);
  uint64_t v137 = &v124[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v136 = sub_100010218(&qword_100814AA8);
  __chkstk_darwin(v136);
  uint64_t v140 = &v124[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v157 = sub_100010218(&qword_100814AB0);
  __chkstk_darwin(v157);
  uint64_t v139 = &v124[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v141 = &v124[-v14];
  uint64_t v155 = sub_100010218(&qword_100814AB8);
  __chkstk_darwin(v155);
  uint64_t v156 = &v124[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v130 = sub_100010218(&qword_1008000E8);
  __chkstk_darwin(v130);
  uint64_t v144 = &v124[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v128 = sub_100010218(&qword_100814AC0);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v142 = &v124[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v132 = sub_100010218(&qword_100814AC8);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v129 = &v124[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v126 = sub_100010218(&qword_100814AD0);
  __chkstk_darwin(v126);
  uint64_t v134 = &v124[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v154 = sub_100010218(&qword_100814AD8);
  __chkstk_darwin(v154);
  uint64_t v133 = &v124[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v135 = &v124[-v22];
  uint64_t v23 = sub_100010218(&qword_100814AE0);
  __chkstk_darwin(v23 - 8);
  char v151 = &v124[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  uint64_t v27 = &v124[-v26];
  uint64_t v28 = *(void *)(a1 + 8);
  char v29 = *(unsigned char *)(a1 + 16);
  sub_100026CCC(v28, v29);
  char v30 = sub_100666714(v28, v29);
  sub_100026DF8(v28, v29);
  uint64_t v164 = 0;
  uint64_t v31 = 0;
  uint64_t v161 = v27;
  uint64_t v162 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v158 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v153 = a1;
  if (v30)
  {
    uint64_t v160 = v3;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v38 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v40 = v39;
    char v42 = v41 & 1;
    LODWORD(v165) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v43 = Text.foregroundStyle<A>(_:)();
    uint64_t v45 = v44;
    char v47 = v46 & 1;
    sub_10002B8D0(v38, v40, v42);
    swift_bridgeObjectRelease();
    static Font.headline.getter();
    uint64_t v48 = Text.font(_:)();
    uint64_t v163 = v49;
    uint64_t v164 = v48;
    LOBYTE(v38) = v50;
    uint64_t v52 = v51;
    swift_release();
    uint64_t v162 = v38 & 1;
    sub_10002B8D0(v43, v45, v47);
    a1 = v153;
    swift_bridgeObjectRelease();
    uint64_t v33 = Namespace.wrappedValue.getter();
    unsigned int v53 = static MatchedGeometryProperties.position.getter();
    static UnitPoint.leading.getter();
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    if (qword_1007F6BD0 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_10083D1C8;
    uint64_t v34 = v53;
    uint64_t v35 = v55;
    uint64_t v158 = v57;
    swift_retain();
    uint64_t v36 = 1;
    uint64_t v31 = v163;
    uint64_t v32 = v52;
    uint64_t v3 = v160;
    uint64_t v27 = v161;
  }
  uint64_t v160 = v32;
  uint64_t v163 = v31;
  uint64_t v147 = v36;
  uint64_t v149 = v34;
  uint64_t v150 = v33;
  sub_100026CCC(v28, v29);
  int v58 = sub_100666714(v28, v29);
  sub_100026DF8(v28, v29);
  sub_100026CCC(v28, v29);
  char v59 = sub_100666714(v28, v29);
  sub_100026DF8(v28, v29);
  uint64_t v159 = v35;
  uint64_t v148 = v37;
  if (v59)
  {
    unsigned __int8 v60 = static Axis.Set.horizontal.getter();
    char v61 = static Axis.Set.vertical.getter();
    char v62 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v60) {
      char v62 = Axis.Set.init(rawValue:)();
    }
    Axis.Set.init(rawValue:)();
    char v63 = Axis.Set.init(rawValue:)();
    int v125 = v58;
    if (v63 != v61) {
      char v62 = Axis.Set.init(rawValue:)();
    }
    sub_100643944((uint64_t *)a1, &v165);
    uint64_t v65 = (ValueMetadata *)v165;
    long long v64 = v166;
    unint64_t v67 = v167;
    unint64_t v66 = v168;
    uint64_t v69 = v169;
    uint64_t v68 = v170;
    uint64_t v71 = v171;
    uint64_t v70 = v172;
    LOBYTE(v165) = v62;
    long long v166 = v65;
    uint64_t v167 = (uint64_t)v64;
    unint64_t v168 = v67;
    uint64_t v169 = v66;
    uint64_t v170 = v69;
    uint64_t v171 = v68;
    uint64_t v172 = v71;
    uint64_t v173 = v70;
    uint64_t v72 = sub_100010218(&qword_100814B00);
    uint64_t v73 = sub_100014488(&qword_100814B08, &qword_100814B00);
    unint64_t v74 = sub_100647338();
    id v75 = v142;
    View.buttonStyle<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v76 = enum case for DynamicTypeSize.xxxLarge(_:);
    uint64_t v77 = type metadata accessor for DynamicTypeSize();
    uint64_t v78 = (uint64_t)v144;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v77 - 8) + 104))(v144, v76, v77);
    sub_100648710(&qword_100800128, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (dispatch thunk of static Equatable.== infix(_:_:)())
    {
      uint64_t v165 = v72;
      long long v166 = &type metadata for InsightsVisitedPlacesView.ButtonStyle;
      uint64_t v167 = v73;
      unint64_t v168 = v74;
      swift_getOpaqueTypeConformance2();
      sub_100014488(&qword_100800160, &qword_1008000E8);
      uint64_t v79 = v129;
      uint64_t v80 = v128;
      View.dynamicTypeSize<A>(_:)();
      sub_10001457C(v78, &qword_1008000E8);
      (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v75, v80);
      uint64_t v81 = Namespace.wrappedValue.getter();
      int v82 = static MatchedGeometryProperties.position.getter();
      static UnitPoint.center.getter();
      uint64_t v84 = v83;
      uint64_t v86 = v85;
      uint64_t v87 = v131;
      uint64_t v69 = (uint64_t)v134;
      uint64_t v88 = v132;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v131 + 16))(v134, v79, v132);
      uint64_t v89 = v69 + *(int *)(v126 + 36);
      *(unsigned char *)uint64_t v89 = 1;
      *(void *)(v89 + 8) = v81;
      *(_DWORD *)(v89 + 16) = v82;
      *(void *)(v89 + 24) = v84;
      *(void *)(v89 + 32) = v86;
      *(unsigned char *)(v89 + 40) = 1;
      (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v79, v88);
      if (qword_1007F6BD0 == -1)
      {
LABEL_12:
        static UnitPoint.center.getter();
        static AnyTransition.scale(scale:anchor:)();
        uint64_t v90 = AnyTransition.combined(with:)();
        swift_release();
        uint64_t v91 = v133;
        sub_10001B220(v69, (uint64_t)v133, &qword_100814AD0);
        *(void *)&v91[*(int *)(v154 + 36)] = v90;
        sub_10001457C(v69, &qword_100814AD0);
        uint64_t v92 = (uint64_t)v91;
        unint64_t v93 = v135;
        sub_10002C4EC(v92, (uint64_t)v135, &qword_100814AD8);
        sub_10001B220((uint64_t)v93, (uint64_t)v156, &qword_100814AD8);
        swift_storeEnumTagMultiPayload();
        sub_100647108();
        sub_10064738C();
        uint64_t v94 = (uint64_t)v161;
        _ConditionalContent<>.init(storage:)();
        sub_10001457C((uint64_t)v93, &qword_100814AD8);
        uint64_t v95 = v163;
        uint64_t v96 = v164;
        uint64_t v97 = v160;
        LOBYTE(v58) = v125;
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_12;
  }
  uint64_t v98 = v137;
  sub_100643BCC((uint64_t)v137);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v100 = type metadata accessor for WidgetFamily();
  uint64_t v101 = (uint64_t)v138;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v138, 1, 3, v100);
  uint64_t v102 = (uint64_t)v140;
  uint64_t v103 = (uint64_t *)&v140[*(int *)(v136 + 36)];
  uint64_t v104 = sub_100010218(&qword_100813540);
  sub_100647BB4(v101, (uint64_t)v103 + *(int *)(v104 + 28), (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  *uint64_t v103 = KeyPath;
  sub_10001B220((uint64_t)v98, v102, &qword_100814470);
  sub_100647C1C(v101, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
  sub_10001457C((uint64_t)v98, &qword_100814470);
  uint64_t v105 = v145;
  IdentityTransition.init()();
  uint64_t v106 = v146;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v146 + 16))(v143, v105, v3);
  sub_100648710(&qword_100814AE8, (void (*)(uint64_t))&type metadata accessor for IdentityTransition);
  uint64_t v107 = AnyTransition.init<A>(_:)();
  uint64_t v108 = v139;
  sub_10001B220(v102, (uint64_t)v139, &qword_100814AA8);
  *(void *)&v108[*(int *)(v157 + 36)] = v107;
  (*(void (**)(unsigned char *, uint64_t))(v106 + 8))(v105, v3);
  sub_10001457C(v102, &qword_100814AA8);
  uint64_t v109 = v141;
  sub_10002C4EC((uint64_t)v108, (uint64_t)v141, &qword_100814AB0);
  sub_10001B220((uint64_t)v109, (uint64_t)v156, &qword_100814AB0);
  swift_storeEnumTagMultiPayload();
  sub_100647108();
  sub_10064738C();
  uint64_t v94 = (uint64_t)v27;
  _ConditionalContent<>.init(storage:)();
  sub_10001457C((uint64_t)v109, &qword_100814AB0);
  uint64_t v95 = v163;
  uint64_t v96 = v164;
  uint64_t v97 = v160;
LABEL_14:
  uint64_t v164 = v96;
  if (v58) {
    uint64_t v110 = 0x4028000000000000;
  }
  else {
    uint64_t v110 = 0;
  }
  long long v111 = v151;
  sub_10001B220(v94, (uint64_t)v151, &qword_100814AE0);
  uint64_t v112 = v152;
  *unint64_t v152 = v96;
  v112[1] = v95;
  v112[2] = v162;
  v112[3] = v97;
  uint64_t v113 = v150;
  v112[4] = 0;
  v112[5] = v113;
  uint64_t v115 = v158;
  uint64_t v114 = v159;
  v112[6] = v149;
  v112[7] = v114;
  uint64_t v116 = v147;
  v112[8] = v115;
  v112[9] = v116;
  v112[10] = v148;
  v112[11] = v110;
  *((unsigned char *)v112 + 96) = 0;
  uint64_t v117 = sub_100010218(&qword_100814B30);
  sub_10001B220((uint64_t)v111, (uint64_t)v112 + *(int *)(v117 + 64), &qword_100814AE0);
  uint64_t v118 = (char *)v112 + *(int *)(v117 + 80);
  *(void *)uint64_t v118 = 0;
  v118[8] = 0;
  uint64_t v119 = v164;
  uint64_t v120 = v95;
  char v121 = v162;
  uint64_t v122 = v160;
  sub_1006474F0(v164, v120, v162, v160);
  sub_10001457C((uint64_t)v161, &qword_100814AE0);
  sub_10001457C((uint64_t)v111, &qword_100814AE0);
  return sub_100647540(v119, v163, v121, v122);
}