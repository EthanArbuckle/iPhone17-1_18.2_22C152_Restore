id sub_1004E3CE0(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  objc_super v15;

  *(void *)&v4[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView] = 0;
  v9 = OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView;
  v10 = objc_allocWithZone((Class)UIImageView);
  v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v12 = &v11[OBJC_IVAR____TtC7Journal19GenericMapAssetView_naturalIconFrame];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  *(void *)&v11[OBJC_IVAR____TtC7Journal19GenericMapAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset] = 0;
  v11[OBJC_IVAR____TtC7Journal19GenericMapAssetView_isInteractive] = 0;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for GenericMapAssetView();
  v13 = [super initWithFrame:a1, a2, a3, a4];
  sub_1004E3DF8();

  return v13;
}

uint64_t sub_1004E3DF8()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView]];
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v1 setClipsToBounds:1];
  uint64_t v2 = OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView];
  if (v3)
  {
    id v4 = objc_allocWithZone((Class)MKPointOfInterestFilter);
    type metadata accessor for MKPointOfInterestCategory(0);
    id v5 = v3;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v7 = [v4 initIncludingCategories:isa];

    [v5 setPointOfInterestFilter:v7];
    v8 = *(void **)&v0[v2];
    if (v8)
    {
      v9 = self;
      id v10 = v8;
      id v11 = [v9 clearColor];
      [v10 setBackgroundColor:v11];
    }
  }
  sub_100010218(&qword_1007FBD30);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1006D6280;
  *(void *)(v12 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v12 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v15[3] = type metadata accessor for GenericMapAssetView();
  v15[0] = v0;
  v13 = v0;
  UIView.registerForTraitChanges(_:target:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v15);
}

id sub_1004E4068(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for GenericMapAssetView();
  return [super a3];
}

void sub_1004E40B4(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v16.receiver = a1;
  v16.super_class = (Class)type metadata accessor for GenericMapAssetView();
  uint64_t v12 = *a7;
  v13 = (char *)v16.receiver;
  [super v12:a2, a3, a4, a5];
  id v14 = *(id *)&v13[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  [v13 bounds];
  [v14 setFrame:];

  v15 = *(void **)&v13[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView];
  [v13 bounds];
  [v15 setFrame:];
}

void sub_1004E419C()
{
  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x58);
  uint64_t v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  id v4 = v1;
  v2(10, v3);

  sub_1004E3194();
}

void *sub_1004E4248()
{
  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset);
  id v2 = v1;
  return v1;
}

void sub_1004E4278()
{
  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_delegate);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset);
}

id sub_1004E42D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenericMapAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for GenericMapAssetView()
{
  return self;
}

uint64_t sub_1004E439C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  v24 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  objc_super v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  v17 = v24;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
  aBlock[4] = sub_1004E53E8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007AF120;
  v18 = _Block_copy(aBlock);
  id v19 = v17;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v28 = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  swift_release();
  return swift_release();
}

void sub_1004E4758(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  swift_beginAccess();
  Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  id v19 = Strong;
  if (!a2)
  {

LABEL_5:
    swift_beginAccess();
    uint64_t v23 = swift_unknownObjectWeakLoadStrong();
    if (!v23) {
      return;
    }
    v24 = (unsigned char *)v23;
    int v25 = *(unsigned __int8 *)(v23 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v25 == 1 || !swift_unknownObjectWeakLoadStrong())
    {

      return;
    }
    sub_100491AF4();
    goto LABEL_20;
  }
  v35 = v8;
  uint64_t v36 = a3;
  v34 = v11;
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = a2;
  uint64_t v37 = v21;
  char v22 = 1;
  switch(v19[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
  {
    case 5:
      break;
    default:
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      break;
  }
  id v26 = a2;
  swift_retain_n();
  id v27 = v26;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v17, v36, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  if ((v22 & 1) == 0)
  {
    sub_10001B220((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_1007FC470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
    {
      sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
LABEL_16:
      static Animation.easeIn(duration:)();
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      static UIView.animate(_:changes:completion:)();
      swift_release();
      swift_release();
      goto LABEL_17;
    }
    v28 = v34;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v34, v14, v5);
    v29 = v35;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v31 = v30;
    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32(v29, v5);
    v32(v28, v5);
    if (v31 >= 0.1) {
      goto LABEL_16;
    }
  }
  sub_1004E4CC0(v20, (uint64_t)v27);
  swift_release();
LABEL_17:
  swift_release();

  sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
  swift_release();
  char v33 = v19[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
  v19[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
  if ((v33 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
  {
    v24 = v19;
    sub_100491AF4();

LABEL_20:
    swift_unknownObjectRelease();
    return;
  }
}

void sub_1004E4CC0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView);

    [v5 setImage:a2];
  }
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = *(id *)(v6 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView);

    [v8 setAlpha:1.0];
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    id v11 = *(id *)(v9 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);

    [v11 setHidden:1];
  }
}

void sub_1004E4DF8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = _s10VisitAssetC9VisitDataVMa(0);
    if ((*(unsigned char *)(a2 + *(int *)(v7 + 40) + 8) & 1) == 0)
    {
      uint64_t v8 = v7;
      if ((*(unsigned char *)(a2 + *(int *)(v7 + 44) + 8) & 1) == 0)
      {
        sub_100010218(&qword_10080F280);
        unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_1006D6280;
        sub_10003F820(a2, v10 + v9);
        uint64_t v11 = sub_1001EA06C(v10);
        id v12 = [self currentTraitCollection];
        uint64_t v13 = (void *)sub_100311520(v11, 0, 5, v12, 0);

        swift_bridgeObjectRelease();
        id v14 = [v13 camera];

        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        [a3 setCamera:v14 animated:1];
      }
    }
    [v6 addSubview:a3];
    sub_1001DCF60(0.0);
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_unknownObjectWeakLoadStrong();
    if (v15)
    {
      sub_1005412A4(*(void **)(v15 + OBJC_IVAR____TtC7Journal24FullScreenGenericMapView_cardView));

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_1004E5098(void *a1, uint64_t a2)
{
  UIView.removeAllConstraints()();
  uint64_t v4 = (double *)(a2 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_naturalIconFrame);
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_naturalIconFrame + 32))
  {
    [a1 frame];
  }
  else
  {
    double v7 = v4[2];
    double v8 = v4[3];
    double v5 = *v4;
    double v6 = v4[1];
  }

  return [a1 setFrame:v5, v6, v7, v8];
}

uint64_t sub_1004E510C()
{
  return swift_deallocObject();
}

id sub_1004E514C()
{
  return sub_1004E5098(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004E5154()
{
  return swift_deallocObject();
}

uint64_t sub_1004E5164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004E5174()
{
  return swift_release();
}

id sub_1004E517C(uint64_t a1)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView);
  if (result) {
    return [result setAlpha:];
  }
  return result;
}

uint64_t sub_1004E519C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004E51D4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1004E52A0(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1004E439C(a1, v4, v5);
}

uint64_t sub_1004E5314()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1004E53E8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1004E4758(v2, v3, v4);
}

uint64_t sub_1004E544C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1004E548C()
{
  sub_1004E4CC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1004E5494()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_naturalIconFrame];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  *(void *)&v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset] = 0;
  v0[OBJC_IVAR____TtC7Journal19GenericMapAssetView_isInteractive] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004E5574()
{
  uint64_t v1 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v0 + v2 + v1[7];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  unint64_t v8 = v3 + v1[8];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  unint64_t v9 = v3 + v1[9];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = (uint64_t *)(v3 + v1[12]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_100040DD0(*v10, v11);
  }
  id v12 = (uint64_t *)(v3 + v1[13]);
  unint64_t v13 = v12[1];
  if (v13 >> 60 != 15) {
    sub_100040DD0(*v12, v13);
  }

  return swift_deallocObject();
}

void sub_1004E57B4()
{
  uint64_t v1 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1004E4DF8(v3, v0 + v2, v4);
}

uint64_t sub_1004E5854()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080F900);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080F900);
  if (qword_1007F7CF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EAE8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1004E598C(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)&double v18 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v6 cancelInteractiveTransition:v18];
  *((unsigned char *)v6 + OBJC_IVAR____TtC7Journal38InteractiveGalleryToTimelineTransition_hasPerformedPreAnimationActions) = 0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v22 = Strong;
    v44 = a1;
    id v23 = [Strong viewControllerForKey:UITransitionContextFromViewControllerKey];
    if (v23)
    {
      v24 = v23;
      uint64_t v43 = v17;
      self;
      uint64_t v25 = swift_dynamicCastObjCClass();
      if (v25)
      {
        uint64_t v26 = v25;
        sub_10001B284(0, (unint64_t *)&qword_100805AB0);
        uint64_t v27 = v13;
        uint64_t v42 = static OS_dispatch_queue.main.getter();
        uint64_t v28 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = 0x3FE0000000000000;
        *(void *)(v29 + 24) = v28;
        double v30 = v44;
        *(void *)(v29 + 32) = v44;
        *(double *)(v29 + 40) = a2;
        *(double *)(v29 + 48) = a3;
        *(double *)(v29 + 56) = a4;
        *(double *)(v29 + 64) = a5;
        *(void *)(v29 + 72) = v26;
        *(void *)(v29 + 80) = v22;
        aBlock[4] = sub_1004EC4A0;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10017D530;
        aBlock[3] = &unk_1007B0188;
        double v31 = _Block_copy(aBlock);
        id v32 = v30;
        id v33 = v24;
        swift_unknownObjectRetain();
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10004F6A0();
        sub_100010218(&qword_100804DB0);
        sub_10001B1BC();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        v34 = (void *)v42;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v31);

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v12);
        return (void *)(*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v16);
      }
    }
    swift_unknownObjectRelease();
  }
  if (qword_1007F70E8 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_100026A54(v36, (uint64_t)qword_10080F900);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unable to find view controller and assets during animation from Gallery to Timeline", v39, 2u);
    swift_slowDealloc();
  }

  v40 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v40)
  {
    [v40 finishInteractiveTransition];
    swift_unknownObjectRelease();
  }
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result completeTransition:0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1004E5E68(uint64_t a1, void *a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    type metadata accessor for RouteAssetView();
    uint64_t v20 = swift_dynamicCastClass();

    if (v20) {
      double v21 = 1.0;
    }
    else {
      double v21 = 0.87;
    }
  }
  else
  {
    double v21 = 0.87;
  }
  char v22 = self;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  *(double *)(v23 + 32) = a6;
  *(double *)(v23 + 40) = a7;
  *(double *)(v23 + 48) = a8;
  *(double *)(v23 + 56) = a9;
  *(void *)(v23 + 64) = a3;
  id v33 = sub_1004EC500;
  uint64_t v34 = v23;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  double v31 = sub_10017D530;
  id v32 = &unk_1007B01D8;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  id v25 = a2;
  id v26 = a3;
  swift_release();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a4;
  id v33 = sub_1004EC54C;
  uint64_t v34 = v27;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  double v31 = sub_1001C7318;
  id v32 = &unk_1007B0228;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_release();
  [v22 animateWithDuration:0 delay:v24 usingSpringWithDamping:v28 initialSpringVelocity:a5 options:0.0 animations:v21 completion:1.0];
  _Block_release(v28);
  _Block_release(v24);
}

void sub_1004E60B8(double a1, double a2, double a3, double a4, uint64_t a5, void *a6, void *a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    sub_1004E7DC0(a6);
  }
  [a6 setFrame:a1, a2, a3, a4];
  id v15 = [a7 view];
  if (v15)
  {
    uint64_t v16 = v15;
    [v15 setAlpha:1.0];

    id v17 = [a7 view];
    if (v17)
    {
      double v18 = v17;
      sub_100389234();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1004E6244(int a1, double a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t ObjectType = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v13 = Strong;
  id v86 = [Strong containerView];
  uint64_t v14 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  id v15 = [v13 viewControllerForKey:UITransitionContextFromViewControllerKey];
  if (!v15) {
    goto LABEL_40;
  }
  v85 = v15;
  self;
  uint64_t v16 = (void *)swift_dynamicCastObjCClass();
  if (!v16)
  {

    goto LABEL_40;
  }
  LODWORD(v83) = a1;
  uint64_t v84 = v9;
  v82 = v16;
  id v17 = [v16 viewControllers];
  sub_10001B284(0, (unint64_t *)&qword_1008068F0);
  unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19) {
      goto LABEL_6;
    }
LABEL_39:

    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_39;
  }
LABEL_6:
  unint64_t v20 = v19 - 1;
  if (__OFSUB__(v19, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v81 = ObjectType;
    if ((v18 & 0xC000000000000001) == 0)
    {
      if ((v20 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v20 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v21 = *(id *)(v18 + 8 * v20 + 32);
        goto LABEL_11;
      }
      __break(1u);
LABEL_52:
      swift_once();
LABEL_29:
      uint64_t v42 = type metadata accessor for Logger();
      uint64_t v72 = sub_100026A54(v42, (uint64_t)qword_10080F900);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "There is no destination cell to animate back to. Animate to overflow cell.", v45, 2u);
        uint64_t v14 = v74;
        swift_slowDealloc();
      }

      v46 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v78, ObjectType);
      uint64_t v47 = swift_allocObject();
      if (v46)
      {
        uint64_t v36 = v47;
        id v35 = v46;
        uint64_t v37 = 0;
        id v32 = v73;
        goto LABEL_33;
      }
      swift_deallocUninitializedObject();
      v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.error.getter();
      BOOL v61 = os_log_type_enabled(v59, v60);
      id v62 = v73;
      if (v61)
      {
        v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v63 = 0;
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "Unable to find destination cell to animate to.", v63, 2u);
        swift_slowDealloc();
      }

      [v13 completeTransition:1];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      swift_release();
      id v64 = v80;

      id v65 = v85;
      goto LABEL_45;
    }
  }
  id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
  char v22 = v21;
  swift_bridgeObjectRelease();
  type metadata accessor for FullScreenCollectionViewController();
  uint64_t v23 = swift_dynamicCastClass();
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = v22;
    id v26 = [v13 viewControllerForKey:UITransitionContextToViewControllerKey];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = sub_1003860A0();
      if (v28)
      {
        id v80 = v25;
        uint64_t v30 = *(void *)(v24 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_entry);
        if (v30)
        {
          uint64_t v77 = v29;
          uint64_t v79 = v28;
          swift_retain();
          double v31 = sub_1002F0148();
          if (v31)
          {
            id v32 = v31;
            uint64_t v78 = v30;
            id v76 = v27;
            id v75 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v31) + 0xF8))();
            if (v75)
            {
              uint64_t v33 = (*(uint64_t (**)(void))((swift_isaMask & *v32) + 0x108))();
              if (v33)
              {
                uint64_t v14 = (char **)v33;
                uint64_t ObjectType = swift_getObjectType();
                uint64_t v34 = (*(uint64_t (**)(char **, uint64_t, uint64_t))(v77 + 8))(v14, v78, ObjectType);
                v74 = v14;
                if (v34)
                {
                  id v35 = (id)v34;
                  uint64_t v36 = swift_allocObject();
                  uint64_t v37 = v35;
LABEL_33:
                  v73 = v35;
                  *(void *)(v36 + 16) = v35;
                  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
                  id v48 = v37;
                  uint64_t v71 = static OS_dispatch_queue.main.getter();
                  uint64_t v49 = swift_allocObject();
                  swift_unknownObjectWeakInit();
                  uint64_t v50 = swift_allocObject();
                  *(void *)(v50 + 16) = v49;
                  *(void *)(v50 + 24) = v13;
                  uint64_t v72 = v36;
                  id v51 = v75;
                  *(void *)(v50 + 32) = v36;
                  *(void *)(v50 + 40) = v51;
                  uint64_t v52 = v77;
                  *(void *)(v50 + 48) = v79;
                  *(void *)(v50 + 56) = v52;
                  *(double *)(v50 + 64) = a2;
                  *(void *)(v50 + 72) = v82;
                  *(unsigned char *)(v50 + 80) = v83 & 1;
                  id v53 = v86;
                  *(void *)(v50 + 88) = v32;
                  *(void *)(v50 + 96) = v53;
                  aBlock[4] = sub_1004E7D68;
                  aBlock[5] = v50;
                  aBlock[0] = _NSConcreteStackBlock;
                  aBlock[1] = 1107296256;
                  aBlock[2] = sub_10017D530;
                  aBlock[3] = &unk_1007AF238;
                  v82 = _Block_copy(aBlock);
                  swift_unknownObjectRetain();
                  swift_retain();
                  id v83 = v51;
                  swift_unknownObjectRetain();
                  v54 = v85;
                  v85 = v32;
                  id v55 = v86;
                  swift_release();
                  static DispatchQoS.unspecified.getter();
                  aBlock[0] = _swiftEmptyArrayStorage;
                  sub_10004F6A0();
                  sub_100010218(&qword_100804DB0);
                  sub_10001B1BC();
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  v56 = v82;
                  v57 = (void *)v71;
                  OS_dispatch_queue.async(group:qos:flags:execute:)();
                  swift_release();

                  id v58 = v80;
                  _Block_release(v56);

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();

                  (*(void (**)(char *, uint64_t))(v81 + 8))(v7, v4);
                  (*(void (**)(char *, uint64_t))(v84 + 8))(v11, v8);
                  swift_release();
                  return;
                }
                v73 = v32;
                if (qword_1007F70E8 == -1) {
                  goto LABEL_29;
                }
                goto LABEL_52;
              }

              id v41 = v80;
              swift_unknownObjectRelease();
              swift_release();
            }
            else
            {

              id v40 = v80;
              swift_unknownObjectRelease();
              swift_release();
            }
          }
          else
          {

            id v39 = v80;
            swift_unknownObjectRelease();
            swift_release();
          }
        }
        else
        {

          id v38 = v80;
          swift_unknownObjectRelease();
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }
  else
  {
  }
LABEL_40:
  if (qword_1007F70E8 != -1) {
    swift_once();
  }
  uint64_t v66 = type metadata accessor for Logger();
  sub_100026A54(v66, (uint64_t)qword_10080F900);
  v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v69 = 0;
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "Unable to find view controller and assets during animation from Gallery to Timeline", v69, 2u);
    swift_slowDealloc();
  }

  [v13 completeTransition:1];
  swift_unknownObjectRelease();
  id v65 = v86;
LABEL_45:
}

void sub_1004E6D0C(double a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, char a9, void *a10, void *a11)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    [a3 completeTransition:1];
    return;
  }
  unint64_t v18 = (void *)Strong;
  uint64_t v19 = (id *)(a4 + 16);
  swift_beginAccess();
  id v20 = [*(id *)(a4 + 16) layer];
  [v20 cornerRadii];
  id v21 = aBlock;
  uint64_t v22 = v111;
  uint64_t v23 = v112;
  uint64_t v24 = v113;
  id v25 = v114;
  id v26 = v115;
  uint64_t v27 = v116;
  uint64_t v100 = v117;

  swift_beginAccess();
  id v28 = [*(id *)(a4 + 16) layer];
  id v104 = [v28 cornerCurve];

  swift_beginAccess();
  uint64_t v29 = *(void **)(a4 + 16);
  type metadata accessor for CanvasAssetView();
  uint64_t v30 = swift_dynamicCastClass();
  id v105 = a8;
  v107 = v18;
  if (v30)
  {
    double v31 = *(void **)(v30 + OBJC_IVAR____TtC7Journal15CanvasAssetView_journalAssetView);
    if (v31)
    {
      char v102 = a9;
      id v32 = a3;
      swift_beginAccess();
      id v33 = *v19;
      *uint64_t v19 = v31;
      id v34 = v29;
      id v35 = v31;
      id v36 = v34;
      uint64_t v37 = v35;

      uint64_t v38 = (*(uint64_t (**)(void))((swift_isaMask & *v37) + 0xF8))();
      if (v38)
      {

        id v39 = (id)v38;
        a3 = v32;
        a8 = v105;
        unint64_t v18 = v107;
      }
      else
      {
        a3 = v32;
        a8 = v105;
        unint64_t v18 = v107;
        id v39 = v37;
      }
      a9 = v102;
    }
    else
    {
      id v39 = v29;
      a8 = v105;
    }
  }
  else
  {
    id v39 = v29;
  }
  if ((*((unsigned char *)v18 + OBJC_IVAR____TtC7Journal38InteractiveGalleryToTimelineTransition_hasPerformedPreAnimationActions) & 1) == 0)
  {
    *((unsigned char *)v18 + OBJC_IVAR____TtC7Journal38InteractiveGalleryToTimelineTransition_hasPerformedPreAnimationActions) = 1;
    swift_beginAccess();
    id v40 = *v19;
    sub_1004E86F0(a5, v40);

    uint64_t ObjectType = swift_getObjectType();
    unint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(ObjectType, a7);
    unint64_t v43 = v42;
    if (v42 >> 62)
    {
      uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
      if (v44) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v44)
      {
LABEL_14:
        if (v44 < 1)
        {
          __break(1u);
          goto LABEL_44;
        }
        uint64_t v45 = 0;
        do
        {
          if ((v43 & 0xC000000000000001) != 0) {
            id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v46 = *(id *)(v43 + 8 * v45 + 32);
          }
          uint64_t v47 = v46;
          ++v45;
          [v46 setAlpha:1.0];
          sub_100389234();
        }
        while (v44 != v45);
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    id v48 = *v19;
    type metadata accessor for SlimAssetView();
    if (swift_dynamicCastClass())
    {
      [v48 setAlpha:1.0];
      swift_beginAccess();
      id v49 = *v19;
      sub_100389234();
    }
    else
    {
      [v39 setAlpha:0.0];
    }
    a8 = v105;
    unint64_t v18 = v107;
  }
  id v50 = [a8 view];
  if (!v50)
  {
LABEL_44:
    __break(1u);
    return;
  }
  id v51 = v50;
  sub_1003890EC(1.0 - a1);

  sub_100389234();
  sub_100389384();
  if (a9)
  {
    id v52 = [a3 finishInteractiveTransition];
    uint64_t v53 = (*(uint64_t (**)(id))((swift_isaMask & *a10) + 0xF8))(v52);
    uint64_t v54 = v53;
    v99 = a3;
    v97 = v25;
    v98 = v24;
    uint64_t v95 = v27;
    v96 = v26;
    if (v53)
    {
      id v55 = (void *)v53;
      v56 = (void *)v53;
    }
    else
    {
      v56 = a10;
      id v55 = 0;
    }
    id v91 = v55;
    [v39 bounds];
    [v39 convertRect:a11 toCoordinateSpace:];
    uint64_t v58 = v57;
    uint64_t v93 = v60;
    uint64_t v94 = v59;
    uint64_t v92 = v61;
    [v56 bounds];
    v103 = v56;
    [v56 convertRect:a11 toCoordinateSpace:];
    double v63 = v62;
    double v65 = v64;
    double v67 = v66;
    double v69 = v68;
    swift_beginAccess();
    id v70 = *v19;
    swift_getObjectType();
    uint64_t v71 = swift_conformsToProtocol2();
    if (v71) {
      uint64_t v72 = v71;
    }
    else {
      uint64_t v72 = 0;
    }
    if (v71) {
      v73 = a10;
    }
    else {
      v73 = 0;
    }
    if (v73)
    {
      uint64_t v74 = swift_getObjectType();
      if ((*(uint64_t (**)(id, uint64_t, uint64_t))(v72 + 8))(v70, v74, v72))
      {
        id v75 = v39;
        uint64_t v76 = swift_unknownObjectWeakLoadStrong();
        v89 = *(void (**)(uint64_t, id, uint64_t, uint64_t))(v72 + 16);
        v90 = a10;
        id v77 = v70;
        v89(v76, v77, v74, v72);
        a8 = v105;

        id v39 = v75;
        swift_unknownObjectRelease();
      }
    }
    if (v54)
    {
      id v78 = v91;
      [v78 removeFromSuperview];
      [a11 addSubview:v78];
      [v78 setTranslatesAutoresizingMaskIntoConstraints:1];
      [v78 setFrame:v63, v65, v67, v69];
    }
    id v106 = self;
    uint64_t v79 = (double *)swift_allocObject();
    *((void *)v79 + 2) = a8;
    *((void *)v79 + 3) = v107;
    *((void *)v79 + 4) = a10;
    *((void *)v79 + 5) = a4;
    v79[6] = v63;
    v79[7] = v65;
    v79[8] = v67;
    v79[9] = v69;
    *((void *)v79 + 10) = v58;
    *((void *)v79 + 11) = v94;
    *((void *)v79 + 12) = v93;
    *((void *)v79 + 13) = v92;
    *((void *)v79 + 14) = v54;
    *((void *)v79 + 15) = v21;
    *((void *)v79 + 16) = v22;
    *((void *)v79 + 17) = v23;
    *((void *)v79 + 18) = v98;
    *((void *)v79 + 19) = v97;
    *((void *)v79 + 20) = v96;
    *((void *)v79 + 21) = v95;
    *((void *)v79 + 22) = v100;
    *((void *)v79 + 23) = v104;
    v114 = sub_1004E9830;
    v115 = v79;
    aBlock = _NSConcreteStackBlock;
    uint64_t v111 = 1107296256;
    v112 = sub_10017D530;
    v113 = &unk_1007AF288;
    v101 = _Block_copy(&aBlock);
    id v80 = a10;
    id v81 = v91;
    id v82 = a8;
    id v83 = v107;
    swift_retain();
    id v108 = v104;
    swift_release();
    uint64_t v84 = (double *)swift_allocObject();
    *((void *)v84 + 2) = a4;
    *((void *)v84 + 3) = v83;
    *((void *)v84 + 4) = v80;
    v84[5] = v63;
    v84[6] = v65;
    v84[7] = v67;
    v84[8] = v69;
    *((void *)v84 + 9) = v58;
    *((void *)v84 + 10) = v94;
    *((void *)v84 + 11) = v93;
    *((void *)v84 + 12) = v92;
    *((void *)v84 + 13) = v54;
    *((void *)v84 + 14) = v99;
    v114 = sub_1004E98B0;
    v115 = v84;
    aBlock = _NSConcreteStackBlock;
    uint64_t v111 = 1107296256;
    v112 = sub_1001C7318;
    v113 = &unk_1007AF2D8;
    v85 = _Block_copy(&aBlock);
    id v86 = v80;
    id v87 = v81;
    id v88 = v83;
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    [v106 animateWithDuration:0 delay:v101 usingSpringWithDamping:v85 initialSpringVelocity:0.5 options:0.0 animations:0.87 completion:1.0];

    _Block_release(v85);
    _Block_release(v101);
  }
  else
  {
  }
}

void sub_1004E7610(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t *a14, uint64_t a15)
{
  uint64_t v24 = *a14;
  uint64_t v25 = a14[1];
  uint64_t v26 = a14[2];
  uint64_t v27 = a14[3];
  uint64_t v39 = a14[5];
  uint64_t v40 = a14[4];
  uint64_t v37 = a14[7];
  uint64_t v38 = a14[6];
  id v28 = [a1 view];
  if (!v28)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v29 = v28;
  [v28 setAlpha:0.01];

  id v30 = [a1 view];
  if (!v30)
  {
LABEL_7:
    __break(1u);
    return;
  }
  double v31 = v30;
  sub_100389214();

  swift_beginAccess();
  id v32 = *(id *)(a12 + 16);
  sub_1004E9940(a11, v32);

  if (a13)
  {
    id v33 = a13;
    [v33 setFrame:a6, a7, a8, a9];
    id v34 = [v33 layer];
    v41[0] = v24;
    v41[1] = v25;
    v41[2] = v26;
    v41[3] = v27;
    v41[4] = v40;
    v41[5] = v39;
    v41[6] = v38;
    v41[7] = v37;
    [v34 setCornerRadii:v41];

    id v35 = [v33 layer];
    [v35 setCornerCurve:a15];

    id v36 = [v33 layer];
    [v36 setMasksToBounds:1];
  }
}

void sub_1004E7830(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14)
{
  swift_beginAccess();
  [*(id *)(a10 + 16) setAlpha:1.0];
  swift_beginAccess();
  id v27 = *(id *)(a10 + 16);
  sub_100389234();

  swift_beginAccess();
  type metadata accessor for VideoAssetView();
  if (swift_dynamicCastClass())
  {
    double v28 = 0.2;
  }
  else
  {
    type metadata accessor for SlimAssetView();
    uint64_t v29 = swift_dynamicCastClass();
    double v28 = 0.2;
    if (!v29) {
      double v28 = 0.0;
    }
  }
  double v38 = v28;
  id v30 = self;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a11;
  *(void *)(v31 + 24) = a12;
  *(void *)(v31 + 32) = a10;
  *(double *)(v31 + 40) = a1;
  *(double *)(v31 + 48) = a2;
  *(double *)(v31 + 56) = a3;
  *(double *)(v31 + 64) = a4;
  *(double *)(v31 + 72) = a5;
  *(double *)(v31 + 80) = a6;
  *(double *)(v31 + 88) = a7;
  *(double *)(v31 + 96) = a8;
  *(void *)(v31 + 104) = a13;
  unint64_t v43 = sub_1004E9920;
  uint64_t v44 = v31;
  aBlock = _NSConcreteStackBlock;
  uint64_t v40 = 1107296256;
  id v41 = sub_10017D530;
  unint64_t v42 = &unk_1007AF328;
  id v32 = _Block_copy(&aBlock);
  id v33 = a13;
  id v34 = a11;
  id v35 = a12;
  swift_retain();
  swift_release();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a14;
  unint64_t v43 = sub_1004883CC;
  uint64_t v44 = v36;
  aBlock = _NSConcreteStackBlock;
  uint64_t v40 = 1107296256;
  id v41 = sub_1001C7318;
  unint64_t v42 = &unk_1007AF378;
  uint64_t v37 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_release();
  [v30 animateWithDuration:0x10000 delay:v32 options:v37 animations:v38 completion:0.0];
  _Block_release(v37);
  _Block_release(v32);
}

void sub_1004E7AF4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  swift_beginAccess();
  id v19 = *(id *)(a11 + 16);
  sub_1004EACA8(a10, v19, a5, a6, a7, a8);

  if (a12) {
    [a12 setAlpha:0.0];
  }
}

id sub_1004E7C58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveGalleryToTimelineTransition();
  return [super dealloc];
}

uint64_t type metadata accessor for InteractiveGalleryToTimelineTransition()
{
  return self;
}

uint64_t sub_1004E7CC0()
{
  return swift_deallocObject();
}

uint64_t sub_1004E7CF8()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1004E7D68()
{
  sub_1004E6D0C(*(double *)(v0 + 64), *(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 72), *(unsigned char *)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96));
}

uint64_t sub_1004E7DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004E7DB8()
{
  return swift_release();
}

void sub_1004E7DC0(id a1)
{
  type metadata accessor for WorkoutActivityGridView();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = 0x3F847AE147AE147BLL;
    id v55 = sub_100488628;
    uint64_t v56 = v5;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = &unk_1007B04A8;
    uint64_t v6 = _Block_copy(&v51);
    id v7 = a1;
    swift_release();
    [v4 animateWithDuration:0 delay:v6 options:0 animations:0.0 completion:0.0];
    _Block_release(v6);
    [*(id *)(v3 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setHidden:0];
    [*(id *)(v3 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:0];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = 0x3FF0000000000000;
    id v55 = sub_100488628;
    uint64_t v56 = v8;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = &unk_1007B04F8;
    uint64_t v9 = _Block_copy(&v51);
    id v10 = v7;
    swift_release();
    [v4 animateWithDuration:0 delay:v9 options:0 animations:0.25 completion:0.0];
    _Block_release(v9);
  }
  type metadata accessor for MotionActivityGridView();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = self;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = 0x3F847AE147AE147BLL;
    id v55 = sub_100488620;
    uint64_t v56 = v14;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = &unk_1007B0408;
    id v15 = _Block_copy(&v51);
    id v16 = a1;
    id v17 = v12;
    swift_release();
    [v13 animateWithDuration:0 delay:v15 options:0 animations:0.0 completion:0.0];
    _Block_release(v15);
    [*(id *)&v17[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel] setHidden:0];
    [*(id *)&v17[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel] setHidden:0];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = 0x3FF0000000000000;
    id v55 = sub_100488620;
    uint64_t v56 = v18;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = &unk_1007B0458;
    id v19 = _Block_copy(&v51);
    id v20 = v17;
    swift_release();
    [v13 animateWithDuration:0 delay:v19 options:0 animations:0.25 completion:0.0];
    _Block_release(v19);
  }
  type metadata accessor for RouteAssetView();
  uint64_t v21 = swift_dynamicCastClass();
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = self;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = 0x3F847AE147AE147BLL;
    id v55 = sub_100488624;
    uint64_t v56 = v24;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = &unk_1007B0368;
    uint64_t v25 = _Block_copy(&v51);
    id v26 = a1;
    swift_release();
    [v23 animateWithDuration:0 delay:v25 options:0 animations:0.0 completion:0.0];
    _Block_release(v25);
    [*(id *)(v22 + OBJC_IVAR____TtC7Journal14RouteAssetView_exerciseNameLabel) setHidden:0];
    [*(id *)(v22 + OBJC_IVAR____TtC7Journal14RouteAssetView_workoutDataLabel) setHidden:0];
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = 0x3FF0000000000000;
    id v55 = sub_100488624;
    uint64_t v56 = v27;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    double v28 = &unk_1007B03B8;
LABEL_9:
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = v28;
    id v34 = _Block_copy(&v51);
    id v35 = v26;
    swift_release();
    [v23 animateWithDuration:0 delay:v34 options:0.25 animations:v51 completion:v52];
    _Block_release(v34);
LABEL_10:

    return;
  }
  type metadata accessor for ContactAssetView();
  uint64_t v29 = swift_dynamicCastClass();
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v23 = self;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = 0x3F847AE147AE147BLL;
    id v55 = sub_10048862C;
    uint64_t v56 = v31;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10017D530;
    uint64_t v54 = &unk_1007B02C8;
    id v32 = _Block_copy(&v51);
    id v26 = a1;
    swift_release();
    [v23 animateWithDuration:0 delay:v32 options:0 animations:0.0 completion:0.0];
    _Block_release(v32);
    [*(id *)(v30 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel) setHidden:0];
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v30;
    *(void *)(v33 + 24) = 0x3FF0000000000000;
    id v55 = sub_10048862C;
    uint64_t v56 = v33;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    double v28 = &unk_1007B0318;
    goto LABEL_9;
  }
  type metadata accessor for MapAssetView();
  uint64_t v36 = swift_dynamicCastClass();
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v39 = (char *)Strong;
      uint64_t v40 = *(void **)(Strong + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView);
      id v41 = a1;
      [v40 setHidden:0];
      [*(id *)&v39[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView] setHidden:0];
      [v40 alpha];
      if (v42 != 1.0)
      {
        unint64_t v43 = self;
        uint64_t v44 = swift_allocObject();
        *(void *)(v44 + 16) = v39;
        *(void *)(v44 + 24) = 0x3FF0000000000000;
        id v55 = sub_100488618;
        uint64_t v56 = v44;
        id v51 = _NSConcreteStackBlock;
        uint64_t v52 = 1107296256;
        uint64_t v53 = sub_10017D530;
        uint64_t v54 = &unk_1007B0278;
        uint64_t v45 = _Block_copy(&v51);
        id v46 = v39;
        swift_release();
        [v43 animateWithDuration:0 delay:v45 options:0 animations:0.25 completion:0.0];
        _Block_release(v45);
      }
      swift_unknownObjectRelease();
    }
    else
    {
      id v50 = a1;
    }
    uint64_t v48 = OBJC_IVAR____TtC7Journal12MapAssetView_fullScreenSnapshotView;
    [*(id *)(v37 + OBJC_IVAR____TtC7Journal12MapAssetView_fullScreenSnapshotView) removeFromSuperview];
    goto LABEL_21;
  }
  type metadata accessor for StateOfMindAssetView();
  uint64_t v47 = swift_dynamicCastClass();
  if (v47)
  {
    uint64_t v37 = v47;
    uint64_t v48 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView;
    id v49 = *(void **)(v47 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView);
    a1 = a1;
    [v49 removeFromSuperview];
LABEL_21:
    id v35 = *(id *)(v37 + v48);
    *(void *)(v37 + v48) = 0;

    goto LABEL_10;
  }
}

void sub_1004E86F0(void *a1, void *a2)
{
  type metadata accessor for VideoAssetView();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for VideoAssetGridView();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      id v7 = *(void **)(v5 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
      if (v7)
      {
        uint64_t v8 = v6;
        id v9 = a1;
        id v10 = a2;
        id v11 = v7;
        id v12 = [v11 layer];
        self;
        uint64_t v13 = (void *)swift_dynamicCastObjCClass();
        if (!v13) {

        }
        id v14 = [v13 player];
        if (v14)
        {
          id v15 = *(void **)(v8 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
          if (v15)
          {
            id v16 = v15;
            sub_1005E41A8(v14);
          }
          id v17 = self;
          uint64_t v18 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v18;
          *(unsigned char *)(v19 + 24) = 1;
          v140 = (uint64_t (*)())sub_100488640;
          uint64_t v141 = v19;
          aBlock = _NSConcreteStackBlock;
          uint64_t v137 = 1107296256;
          v138 = sub_10017D530;
          v139 = &unk_1007B0138;
          id v20 = _Block_copy(&aBlock);
          swift_release();
          [v17 animateWithDuration:0 delay:v20 options:0 animations:0.0 completion:0.0];
          _Block_release(v20);

          return;
        }
      }
    }
  }
  type metadata accessor for LivePhotoAssetView();
  uint64_t v21 = swift_dynamicCastClass();
  if (v21)
  {
    uint64_t v22 = v21;
    *(unsigned char *)(v21 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLivePlayer) = 0;
    uint64_t v23 = self;
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(unsigned char *)(v25 + 24) = 0;
    v140 = (uint64_t (*)())sub_1004885E0;
    uint64_t v141 = v25;
    aBlock = _NSConcreteStackBlock;
    uint64_t v137 = 1107296256;
    v138 = sub_10017D530;
    v139 = &unk_1007AFFF8;
    id v26 = _Block_copy(&aBlock);
    id v27 = a1;
    swift_release();
    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
    *(unsigned char *)(v29 + 24) = 0;
    v140 = (uint64_t (*)())sub_1004885EC;
    uint64_t v141 = v29;
    aBlock = _NSConcreteStackBlock;
    uint64_t v137 = 1107296256;
    v138 = sub_1001C7318;
    v139 = &unk_1007B0048;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_release();
    [v23 animateWithDuration:0 delay:v26 options:v30 animations:0.0 completion:0.0];
    _Block_release(v30);
    _Block_release(v26);
    *(unsigned char *)(v22 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLiveSymbol) = 0;
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    *(unsigned char *)(v32 + 24) = 0;
    v140 = (uint64_t (*)())sub_1004885F8;
    uint64_t v141 = v32;
    aBlock = _NSConcreteStackBlock;
    uint64_t v137 = 1107296256;
    v138 = sub_10017D530;
    v139 = &unk_1007B0098;
    uint64_t v33 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v34;
    *(unsigned char *)(v35 + 24) = 0;
    v140 = (uint64_t (*)())sub_100488604;
    uint64_t v141 = v35;
    aBlock = _NSConcreteStackBlock;
    uint64_t v137 = 1107296256;
    v138 = sub_1001C7318;
    v139 = &unk_1007B00E8;
    uint64_t v36 = _Block_copy(&aBlock);
    swift_release();
    [v23 animateWithDuration:0 delay:v33 options:v36 animations:0.0 completion:0.0];
    _Block_release(v36);
    uint64_t v37 = v33;
LABEL_13:
    _Block_release(v37);
LABEL_14:

    return;
  }
  type metadata accessor for MediaAssetGridView();
  uint64_t v38 = swift_dynamicCastClass();
  if (v38)
  {
    uint64_t v39 = v38;
    type metadata accessor for MediaAssetView();
    if (swift_dynamicCastClass())
    {
      id v40 = a2;
      sub_100222AD4(0.0, 0.0);
      [*(id *)(v39 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView) setHidden:0];
      id v41 = self;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v39;
      *(void *)(v42 + 24) = 0x3FF0000000000000;
      v140 = (uint64_t (*)())sub_1004885C8;
      uint64_t v141 = v42;
      aBlock = _NSConcreteStackBlock;
      uint64_t v137 = 1107296256;
      v138 = sub_10017D530;
      v139 = &unk_1007AFF80;
      unint64_t v43 = _Block_copy(&aBlock);
      id v27 = v40;
      swift_release();
      [v41 animateWithDuration:0 delay:v43 options:0 animations:0.25 completion:0.0];
      uint64_t v37 = v43;
      goto LABEL_13;
    }
  }
  type metadata accessor for ContactAssetView();
  uint64_t v44 = swift_dynamicCastClass();
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v46 = swift_dynamicCastClass();
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = *(void **)(v46 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
      id v134 = a1;
      id v49 = a2;
      [v48 setHidden:1];
      [*(id *)(v45 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel) setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView) frame];
      uint64_t v50 = v47 + OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame;
      *(void *)uint64_t v50 = v51;
      *(void *)(v50 + 8) = v52;
      *(void *)(v50 + 16) = v53;
      *(void *)(v50 + 24) = v54;
      *(unsigned char *)(v50 + 32) = 0;
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal16ContactAssetView_bgView) frame];
      uint64_t v59 = OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame;
LABEL_28:
      uint64_t v68 = v47 + v59;
      *(void *)uint64_t v68 = v55;
      *(void *)(v68 + 8) = v56;
      *(void *)(v68 + 16) = v57;
      *(void *)(v68 + 24) = v58;
      *(unsigned char *)(v68 + 32) = 0;
      goto LABEL_29;
    }
  }
  type metadata accessor for WorkoutActivityGridView();
  uint64_t v60 = swift_dynamicCastClass();
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = swift_dynamicCastClass();
    if (v62)
    {
      uint64_t v47 = v62;
      double v63 = *(void **)(v62 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel);
      id v134 = a1;
      id v49 = a2;
      [v63 setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:1];
      [*(id *)(v61 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setHidden:1];
      [*(id *)(v61 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutImageView) frame];
      uint64_t v59 = OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_naturalIconFrame;
      goto LABEL_28;
    }
  }
  type metadata accessor for RouteAssetView();
  uint64_t v64 = swift_dynamicCastClass();
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v66 = swift_dynamicCastClass();
    if (v66)
    {
      uint64_t v47 = v66;
      double v67 = *(void **)(v66 + OBJC_IVAR____TtC7Journal14RouteAssetView_exerciseNameLabel);
      id v134 = a1;
      id v49 = a2;
      [v67 setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal14RouteAssetView_workoutDataLabel) setHidden:1];
      [*(id *)(v65 + OBJC_IVAR____TtC7Journal14RouteAssetView_exerciseNameLabel) setHidden:1];
      [*(id *)(v65 + OBJC_IVAR____TtC7Journal14RouteAssetView_workoutDataLabel) setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal14RouteAssetView_routeImageView) frame];
      uint64_t v59 = OBJC_IVAR____TtC7Journal14RouteAssetView_naturalIconFrame;
      goto LABEL_28;
    }
  }
  type metadata accessor for MapAssetView();
  uint64_t v69 = swift_dynamicCastClass();
  if (v69)
  {
    uint64_t v70 = v69;
    uint64_t v71 = swift_dynamicCastClass();
    if (v71)
    {
      uint64_t v72 = v71;
      v73 = *(void **)(v71 + OBJC_IVAR____TtC7Journal12MapAssetView_mapThumbnailView);
      id v27 = a1;
      id v74 = a2;
      id v75 = [v73 image];
      if (v75)
      {
        uint64_t v76 = v75;
        [*(id *)(v70 + OBJC_IVAR____TtC7Journal12MapAssetView_mapThumbnailView) setImage:v75];
        uint64_t v77 = *(void *)(v70 + OBJC_IVAR____TtC7Journal12MapAssetView_mapView);
        if (v77)
        {
          [*(id *)(v70 + OBJC_IVAR____TtC7Journal12MapAssetView_mapView) frame];
        }
        else
        {
          uint64_t v78 = 0;
          uint64_t v79 = 0;
          uint64_t v80 = 0;
          uint64_t v81 = 0;
        }
        uint64_t v118 = v70 + OBJC_IVAR____TtC7Journal12MapAssetView_naturalIconFrame;
        *(void *)uint64_t v118 = v78;
        *(void *)(v118 + 8) = v79;
        *(void *)(v118 + 16) = v80;
        *(void *)(v118 + 24) = v81;
        *(unsigned char *)(v118 + 32) = v77 == 0;
        v119 = self;
        uint64_t v120 = swift_allocObject();
        *(void *)(v120 + 16) = v70;
        *(void *)(v120 + 24) = 0;
        v140 = sub_10048861C;
        uint64_t v141 = v120;
        aBlock = _NSConcreteStackBlock;
        uint64_t v137 = 1107296256;
        v138 = sub_10017D530;
        v139 = &unk_1007AFEE0;
        v121 = _Block_copy(&aBlock);
        id v122 = v27;
        swift_release();
        [v119 animateWithDuration:32 delay:v121 options:0 animations:0.125 completion:0.0];
        _Block_release(v121);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          v124 = (char *)Strong;
          v125 = *(void **)(Strong + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView);
          [v125 setHidden:1];
          [*(id *)&v124[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView] setHidden:1];
          [v125 alpha];
          if (v126 != 0.0)
          {
            uint64_t v127 = swift_allocObject();
            *(void *)(v127 + 16) = v124;
            *(void *)(v127 + 24) = 0;
            v140 = sub_100488618;
            uint64_t v141 = v127;
            aBlock = _NSConcreteStackBlock;
            uint64_t v137 = 1107296256;
            v138 = sub_10017D530;
            v139 = &unk_1007AFF30;
            v128 = _Block_copy(&aBlock);
            v129 = v124;
            swift_release();
            [v119 animateWithDuration:0 delay:v128 options:0 animations:0.125 completion:0.0];
            _Block_release(v128);
          }

          swift_unknownObjectRelease();
        }
        else
        {
        }
      }
      v130 = self;
      uint64_t v131 = swift_allocObject();
      *(void *)(v131 + 16) = v72;
      *(void *)(v131 + 24) = 0;
      v140 = sub_10048861C;
      uint64_t v141 = v131;
      aBlock = _NSConcreteStackBlock;
      uint64_t v137 = 1107296256;
      v138 = sub_10017D530;
      v139 = &unk_1007AFE90;
      v132 = _Block_copy(&aBlock);
      id v133 = v74;
      swift_release();
      [v130 animateWithDuration:32 delay:v132 options:0 animations:0.25 completion:0.0];
      _Block_release(v132);

      goto LABEL_14;
    }
    type metadata accessor for SlimAssetView();
    if (!swift_dynamicCastClass()) {
      return;
    }
    id v134 = a1;
    id v49 = a2;
    sub_10011A37C();
    goto LABEL_29;
  }
  type metadata accessor for MotionActivityGridView();
  uint64_t v82 = swift_dynamicCastClass();
  if (v82)
  {
    uint64_t v83 = v82;
    uint64_t v84 = swift_dynamicCastClass();
    if (v84)
    {
      uint64_t v47 = v84;
      v85 = *(void **)(v84 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel);
      id v134 = a1;
      id v49 = a2;
      [v85 setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel) setHidden:1];
      [*(id *)(v83 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel) setHidden:1];
      [*(id *)(v83 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel) setHidden:1];
      [*(id *)(v47 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView) frame];
      uint64_t v59 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_naturalIconFrame;
      goto LABEL_28;
    }
  }
  type metadata accessor for AudioAssetView();
  uint64_t v86 = swift_dynamicCastClass();
  if (v86)
  {
    uint64_t v87 = v86;
    type metadata accessor for AudioAssetGridView();
    uint64_t v88 = swift_dynamicCastClass();
    if (v88)
    {
      uint64_t v89 = v88;
      uint64_t v90 = OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer;
      uint64_t v91 = *(void *)(v88 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v93 = *(void *)(v87 + v90 + 8);
      uint64_t v94 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v91 + 168);
      id v135 = a1;
      id v95 = a2;
      swift_unknownObjectRetain();
      uint64_t v96 = swift_unknownObjectRetain();
      v94(v96, v93, 0, ObjectType, v91);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      [*(id *)(v89 + OBJC_IVAR____TtC7Journal18AudioAssetGridView_audioLabel) setHidden:1];
      [*(id *)(v89 + OBJC_IVAR____TtC7Journal18AudioAssetGridView_playbackButton) setHidden:1];
      [*(id *)(v89 + OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView) setHidden:1];
      v97 = self;
      uint64_t v98 = swift_allocObject();
      *(void *)(v98 + 16) = v89;
      *(void *)(v98 + 24) = 0;
      v140 = sub_100488630;
      uint64_t v141 = v98;
      aBlock = _NSConcreteStackBlock;
      uint64_t v137 = 1107296256;
      v138 = sub_10017D530;
      v139 = &unk_1007AFE40;
      v99 = _Block_copy(&aBlock);
      id v100 = v95;
      swift_release();
      [v97 animateWithDuration:0 delay:v99 options:0 animations:0.0 completion:0.0];
      _Block_release(v99);

      return;
    }
  }
  type metadata accessor for StateOfMindAssetGridView();
  uint64_t v101 = swift_dynamicCastClass();
  if (v101)
  {
    uint64_t v102 = v101;
    uint64_t v103 = swift_dynamicCastClass();
    if (v103)
    {
      uint64_t v104 = v103;
      uint64_t v105 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
      id v106 = *(void **)(v102 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView);
      id v107 = a2;
      id v108 = a1;
      id v109 = v107;
      [v106 frame];
      uint64_t v110 = v102 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_naturalIconFrame;
      *(void *)uint64_t v110 = v111;
      *(void *)(v110 + 8) = v112;
      *(void *)(v110 + 16) = v113;
      *(void *)(v110 + 24) = v114;
      *(unsigned char *)(v110 + 32) = 0;
      v115 = *(void **)(v102 + v105);
      uint64_t v116 = *(void **)(v104 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView);
      id v117 = v109;
      id v134 = v115;
      [v116 frame];
      [v134 setFrame:];

      goto LABEL_30;
    }
    type metadata accessor for SlimAssetView();
    if (!swift_dynamicCastClass()) {
      return;
    }
    id v134 = a1;
    id v49 = a2;
    sub_10001A8C4();
LABEL_29:

LABEL_30:
  }
}

uint64_t sub_1004E97D0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1004E9830()
{
  sub_1004E7610(*(void **)(v0 + 16), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(double *)(v0 + 104), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 112), (uint64_t *)(v0 + 120), *(void *)(v0 + 184));
}

uint64_t sub_1004E9858()
{
  swift_release();

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1004E98B0(uint64_t a1)
{
  sub_1004E7830(*(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(double *)(v1 + 96), a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 104), *(void *)(v1 + 112));
}

uint64_t sub_1004E98D0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1004E9920()
{
  sub_1004E7AF4(*(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 104));
}

void sub_1004E9940(void *a1, void *a2)
{
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 8))(a2, ObjectType, v5))
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      id v9 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 24);
      id v10 = a1;
      v9(Strong, a2, ObjectType, v5);

      swift_unknownObjectRelease();
      return;
    }
  }
  type metadata accessor for MosaicCell();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = self;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a1;
    *(void *)(v14 + 24) = v12;
    v177 = (uint64_t (*)())sub_100488570;
    uint64_t v178 = v14;
    *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
    uint64_t v174 = 1107296256;
    *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
    double v176 = COERCE_DOUBLE(&unk_1007AFDF0);
    id v15 = _Block_copy(&aBlock);
    id v16 = a2;
    id v17 = a1;
    id v18 = v16;
    swift_release();
    [v13 animateWithDuration:v15 animations:0.25];
    uint64_t v19 = v15;
LABEL_14:
    _Block_release(v19);
    goto LABEL_15;
  }
  type metadata accessor for WorkoutActivityGridView();
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    if (swift_dynamicCastClass())
    {
      id v172 = a1;
      id v22 = a2;
      sub_1005A0B44(v21);
LABEL_31:

LABEL_32:
      id v49 = v172;
LABEL_33:

      return;
    }
  }
  type metadata accessor for MotionActivityGridView();
  uint64_t v23 = swift_dynamicCastClass();
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    if (swift_dynamicCastClass())
    {
      id v172 = a1;
      id v22 = a2;
      sub_1000E444C(v24);
      goto LABEL_31;
    }
  }
  type metadata accessor for RouteAssetView();
  uint64_t v25 = swift_dynamicCastClass();
  if (v25)
  {
    id v26 = (unsigned char *)v25;
    uint64_t v27 = swift_dynamicCastClass();
    if (v27)
    {
      uint64_t v28 = (unsigned char *)v27;
      char v29 = v26[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      id v30 = a1;
      id v31 = a2;
      [v26 bounds];
      CGFloat v33 = v32;
      CGFloat v35 = v34;
      CGFloat v37 = v36;
      CGFloat v39 = v38;
      char v40 = v28[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      [v28 bounds];
      sub_100106D98(v29, v40, v33, v35, v37, v39, v41, v42, v43, v44, 0.25);
      id v45 = [*(id *)&v26[OBJC_IVAR____TtC7Journal14RouteAssetView_routeImageView] image];
      if (v45)
      {
        uint64_t v46 = v45;
        [*(id *)&v28[OBJC_IVAR____TtC7Journal14RouteAssetView_routeImageView] setImage:v45];
      }
      id v172 = v31;
      sub_10010744C(v26);

      goto LABEL_32;
    }
  }
  type metadata accessor for ContactAssetView();
  uint64_t v47 = swift_dynamicCastClass();
  if (v47)
  {
    uint64_t v48 = (void *)v47;
    if (swift_dynamicCastClass())
    {
      id v172 = a1;
      id v22 = a2;
      sub_1005221E8(v48);
      goto LABEL_31;
    }
  }
  type metadata accessor for AudioAssetView();
  uint64_t v50 = swift_dynamicCastClass();
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = *(void **)(v50 + OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView);
    id v53 = a1;
    [v52 setHidden:1];
    uint64_t v54 = self;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v51;
    *(void *)(v55 + 24) = 0;
    v177 = (uint64_t (*)())sub_1004885D4;
    uint64_t v178 = v55;
    *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
    uint64_t v174 = 1107296256;
    *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
    double v176 = COERCE_DOUBLE(&unk_1007AFDA0);
    uint64_t v56 = _Block_copy(&aBlock);
    id v18 = v53;
    swift_release();
    [v54 animateWithDuration:0 delay:v56 options:0 animations:0.0 completion:0.0];
    uint64_t v19 = v56;
    goto LABEL_14;
  }
  type metadata accessor for PhotoAssetView();
  uint64_t v57 = swift_dynamicCastClass();
  if (v57)
  {
    uint64_t v58 = v57;
    uint64_t v59 = swift_dynamicCastClass();
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = *(void **)(v59 + OBJC_IVAR____TtC7Journal14PhotoAssetView_photoAsset);
      if (!v61) {
        return;
      }
      unsigned __int8 v62 = *(unsigned char *)(v58 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      id v63 = a1;
      id v64 = a2;
      id v18 = v61;
      sub_10048DD9C(v62, (uint64_t)v18, v179);
      sub_10012E2C4((uint64_t)v179, (uint64_t)&aBlock);
      if (v177)
      {
      }
      else
      {
        double v130 = *(double *)&aBlock;
        double v131 = *(double *)&v174;
        double v132 = *(double *)&v175;
        double v133 = v176;
        id v134 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v60
                                                                     + OBJC_IVAR____TtC7Journal14PhotoAssetView_assetImageView), "layer"));
        [v134 setContentsRect:v130, v131, v132, v133];
      }
LABEL_15:

      return;
    }
  }
  type metadata accessor for LivePhotoAssetView();
  uint64_t v65 = swift_dynamicCastClass();
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = swift_dynamicCastClass();
    if (v67)
    {
      uint64_t v68 = v67;
      uint64_t v69 = *(void **)(v66 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView);
      id v172 = a1;
      id v22 = a2;
      id v70 = [v69 layer];
      [v70 contentsRect];
      double v72 = v71;
      double v74 = v73;
      double v76 = v75;
      double v78 = v77;

      id v79 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v68
                                                                  + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView), "layer"));
      [v79 setContentsRect:v72, v74, v76, v78];

      uint64_t v80 = *(void **)(v68 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView);
      if (v80)
      {
        id v171 = [v80 layer];
        [v171 setContentsRect:v72, v74, v76, v78];

        id v49 = v171;
        goto LABEL_33;
      }
      goto LABEL_31;
    }
  }
  type metadata accessor for MapAssetView();
  uint64_t v81 = swift_dynamicCastClass();
  if (v81)
  {
    uint64_t v82 = v81;
    uint64_t v83 = swift_dynamicCastClass();
    if (v83)
    {
      uint64_t v84 = v83;
      v85 = *(void **)(v82 + OBJC_IVAR____TtC7Journal12MapAssetView_mapThumbnailView);
      id v86 = a1;
      id v87 = a2;
      id v88 = [v85 image];
      if (v88)
      {
        uint64_t v89 = v88;
        [*(id *)(v84 + OBJC_IVAR____TtC7Journal12MapAssetView_mapThumbnailView) setImage:v88];
      }
      uint64_t v90 = self;
      uint64_t v91 = swift_allocObject();
      *(void *)(v91 + 16) = v84;
      *(void *)(v91 + 24) = 0;
      v177 = sub_10048861C;
      uint64_t v178 = v91;
      *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v174 = 1107296256;
      *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
      double v176 = COERCE_DOUBLE(&unk_1007AFD00);
      uint64_t v92 = _Block_copy(&aBlock);
      id v93 = v86;
      swift_release();
      [v90 animateWithDuration:32 delay:v92 options:0 animations:0.125 completion:0.0];
      _Block_release(v92);
      uint64_t v94 = swift_unknownObjectWeakLoadStrong();
      if (v94)
      {
        id v95 = (char *)v94;
        uint64_t v96 = *(void **)(v94 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView);
        [v96 setHidden:1];
        [*(id *)&v95[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView] setHidden:1];
        [v96 alpha];
        if (v97 != 0.0)
        {
          uint64_t v98 = swift_allocObject();
          *(void *)(v98 + 16) = v95;
          *(void *)(v98 + 24) = 0;
          v177 = sub_100488618;
          uint64_t v178 = v98;
          *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
          uint64_t v174 = 1107296256;
          *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
          double v176 = COERCE_DOUBLE(&unk_1007AFD50);
          v99 = _Block_copy(&aBlock);
          id v100 = v95;
          swift_release();
          [v90 animateWithDuration:0 delay:v99 options:0 animations:0.125 completion:0.0];
          _Block_release(v99);
        }
        swift_unknownObjectRelease();
      }
      id v18 = v87;
      sub_100118808(v82);

      goto LABEL_65;
    }
  }
  type metadata accessor for GenericMapAssetView();
  uint64_t v101 = swift_dynamicCastClass();
  if (v101)
  {
    uint64_t v102 = v101;
    uint64_t v103 = swift_dynamicCastClass();
    if (v103)
    {
      uint64_t v104 = *(void **)(v103 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView);
      id v105 = a1;
      id v172 = a2;
      id v106 = [v104 image];
      if (v106)
      {
        id v107 = v106;
        [*(id *)(v102 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapThumbnailView) setImage:v106];
      }
      uint64_t v108 = *(void *)(v102 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView);
      if (v108)
      {
        [*(id *)(v102 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mkMapView) frame];
      }
      else
      {
        uint64_t v109 = 0;
        uint64_t v110 = 0;
        uint64_t v111 = 0;
        uint64_t v112 = 0;
      }
      uint64_t v145 = v102 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_naturalIconFrame;
      *(void *)uint64_t v145 = v109;
      *(void *)(v145 + 8) = v110;
      *(void *)(v145 + 16) = v111;
      *(void *)(v145 + 24) = v112;
      *(unsigned char *)(v145 + 32) = v108 == 0;

      goto LABEL_32;
    }
  }
  type metadata accessor for StateOfMindAssetGridView();
  uint64_t v113 = swift_dynamicCastClass();
  if (v113)
  {
    uint64_t v114 = (unsigned char *)v113;
    uint64_t v115 = swift_dynamicCastClass();
    if (v115)
    {
      uint64_t v116 = (void *)v115;
      uint64_t v117 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
      char v118 = v114[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      id v119 = a1;
      id v120 = a2;
      sub_10001920C(v118);
      sub_1000157E4(v114[v117]);
      v121 = self;
      uint64_t v122 = swift_allocObject();
      *(void *)(v122 + 16) = v116;
      *(void *)(v122 + 24) = 0;
      v177 = sub_100488610;
      uint64_t v178 = v122;
      *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v174 = 1107296256;
      *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
      double v176 = COERCE_DOUBLE(&unk_1007AFC10);
      v123 = _Block_copy(&aBlock);
      id v124 = v116;
      swift_release();
      [v121 animateWithDuration:32 delay:v123 options:0 animations:0.0 completion:0.0];
      _Block_release(v123);
      uint64_t v125 = swift_allocObject();
      *(void *)(v125 + 16) = v114;
      *(void *)(v125 + 24) = 0;
      v177 = sub_100488610;
      uint64_t v178 = v125;
      *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v174 = 1107296256;
      *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
      double v176 = COERCE_DOUBLE(&unk_1007AFC60);
      double v126 = _Block_copy(&aBlock);
      uint64_t v127 = v114;
      swift_release();
      [v121 animateWithDuration:32 delay:v126 options:0 animations:0.0 completion:0.0];
      _Block_release(v126);
      uint64_t v128 = swift_allocObject();
      *(void *)(v128 + 16) = v124;
      *(void *)(v128 + 24) = 0x3FF0000000000000;
      v177 = sub_100488610;
      uint64_t v178 = v128;
      *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v174 = 1107296256;
      *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
      double v176 = COERCE_DOUBLE(&unk_1007AFCB0);
      v129 = _Block_copy(&aBlock);
      v124;
      swift_release();
      [v121 animateWithDuration:32 delay:v129 options:0 animations:0.25 completion:0.125];
      _Block_release(v129);
      id v18 = v120;
      sub_100019ECC(v127);

LABEL_65:
      goto LABEL_15;
    }
  }
  type metadata accessor for SlimAssetView();
  if (swift_dynamicCastClass())
  {
    uint64_t v135 = swift_dynamicCastClass();
    if (v135)
    {
      v136 = (char *)v135;
      uint64_t v137 = self;
      uint64_t v138 = swift_allocObject();
      *(void *)(v138 + 16) = v136;
      *(void *)(v138 + 24) = 0;
      v177 = sub_100488634;
      uint64_t v178 = v138;
      *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v174 = 1107296256;
      *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
      double v176 = COERCE_DOUBLE(&unk_1007AFBC0);
      v139 = _Block_copy(&aBlock);
      id v140 = a1;
      id v141 = a2;
      swift_release();
      [v137 animateWithDuration:32 delay:v139 options:0 animations:0.25 completion:0.0];
      _Block_release(v139);
      v142 = *(void **)&v136[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView];
      if (v142)
      {
        id v143 = v141;
        id v144 = v142;
        [v136 bounds];
        [v144 setFrame:];
        [v144 setContentMode:1];
        sub_1001DCF60(0.0);
        swift_bridgeObjectRelease();
        sub_100019DC8(1);
      }
      else
      {
      }
    }
    else
    {
      uint64_t v146 = swift_dynamicCastClass();
      if (v146)
      {
        v147 = (char *)v146;
        v148 = *(void **)(v146 + OBJC_IVAR____TtC7Journal12MapAssetView_mapThumbnailView);
        id v149 = a1;
        id v150 = a2;
        [v148 setImage:0];
        v151 = self;
        uint64_t v152 = swift_allocObject();
        *(void *)(v152 + 16) = v147;
        *(void *)(v152 + 24) = 0;
        v177 = (uint64_t (*)())sub_100488518;
        uint64_t v178 = v152;
        *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
        uint64_t v174 = 1107296256;
        *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
        double v176 = COERCE_DOUBLE(&unk_1007AFA80);
        v153 = _Block_copy(&aBlock);
        id v154 = v149;
        swift_release();
        [v151 animateWithDuration:32 delay:v153 options:0 animations:0.25 completion:0.0];
        _Block_release(v153);
        uint64_t v155 = swift_allocObject();
        *(void *)(v155 + 16) = v147;
        *(void *)(v155 + 24) = 0;
        v177 = sub_10048861C;
        uint64_t v178 = v155;
        *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
        uint64_t v174 = 1107296256;
        *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
        double v176 = COERCE_DOUBLE(&unk_1007AFAD0);
        v156 = _Block_copy(&aBlock);
        id v157 = v154;
        swift_release();
        [v151 animateWithDuration:32 delay:v156 options:0 animations:0.0 completion:0.0];
        _Block_release(v156);
        uint64_t v158 = swift_unknownObjectWeakLoadStrong();
        if (v158)
        {
          v159 = (char *)v158;
          v160 = *(void **)(v158 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView);
          [v160 setHidden:1];
          [*(id *)&v159[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView] setHidden:1];
          [v160 alpha];
          if (v161 != 0.0)
          {
            uint64_t v162 = swift_allocObject();
            *(void *)(v162 + 16) = v159;
            *(void *)(v162 + 24) = 0;
            v177 = sub_100488618;
            uint64_t v178 = v162;
            *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
            uint64_t v174 = 1107296256;
            *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
            double v176 = COERCE_DOUBLE(&unk_1007AFB20);
            v163 = _Block_copy(&aBlock);
            v164 = v159;
            swift_release();
            [v151 animateWithDuration:0 delay:v163 options:0 animations:0.0 completion:0.0];
            _Block_release(v163);
          }
          swift_unknownObjectRelease();
        }
        uint64_t v165 = swift_allocObject();
        *(void *)(v165 + 16) = v147;
        *(void *)(v165 + 24) = 0;
        v177 = (uint64_t (*)())sub_100488524;
        uint64_t v178 = v165;
        *(double *)&aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
        uint64_t v174 = 1107296256;
        *(double *)&v175 = COERCE_DOUBLE(sub_10017D530);
        double v176 = COERCE_DOUBLE(&unk_1007AFB70);
        v166 = _Block_copy(&aBlock);
        id v167 = v157;
        swift_release();
        [v151 animateWithDuration:32 delay:v166 options:0 animations:0.0 completion:0.0];
        _Block_release(v166);
        v168 = *(void **)&v147[OBJC_IVAR____TtC7Journal12MapAssetView_fullScreenSnapshotView];
        if (v168)
        {
          id v169 = v150;
          id v170 = v168;
          [v147 bounds];
          [v170 setFrame:];
          [v170 setContentMode:1];
          sub_1001DCF60(0.0);

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }
    }
  }
}

void sub_1004EACA8(id a1, void *a2, double a3, double a4, double a5, double a6)
{
  swift_getObjectType();
  uint64_t v9 = swift_conformsToProtocol2();
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v9) {
    id v11 = a1;
  }
  else {
    id v11 = 0;
  }
  if (v11)
  {
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 8))(a2, ObjectType, v10))
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      uint64_t v14 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v10 + 32);
      id v15 = a1;
      v14(Strong, a2, ObjectType, v10);

      swift_unknownObjectRelease();
      return;
    }
  }
  type metadata accessor for VideoAssetView();
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = *(void **)(v16 + OBJC_IVAR____TtC7Journal14VideoAssetView_playerView);
    if (v18)
    {
      id v19 = a1;
      id v20 = v18;
      id v21 = [v20 layer];
      self;
      uint64_t v22 = swift_dynamicCastObjCClass();

      if (v22) {
        sub_100305D88(1, a5, a6, 0.5);
      }
    }
    else
    {
      id v36 = a1;
    }
    id v37 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v17
                                                                + OBJC_IVAR____TtC7Journal14VideoAssetView_thumbnailView), "layer"));
    sub_100305D88(1, a5, a6, 0.5);

    type metadata accessor for VideoAssetGridView();
    if (swift_dynamicCastClass())
    {
      double v38 = self;
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(unsigned char *)(v40 + 24) = 0;
      id v141 = (uint64_t (*)())sub_10048850C;
      uint64_t v142 = v40;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AFA30;
      CGFloat v41 = _Block_copy(&aBlock);
      id v42 = a2;
      swift_release();
      [v38 animateWithDuration:0 delay:v41 options:0 animations:1.3 completion:0.0];
      CGFloat v43 = v41;
LABEL_22:
      _Block_release(v43);

      return;
    }
    goto LABEL_27;
  }
  type metadata accessor for AudioAssetGridView();
  uint64_t v23 = swift_dynamicCastClass();
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void **)(v23 + OBJC_IVAR____TtC7Journal18AudioAssetGridView_audioLabel);
    id v26 = a2;
    [v25 setHidden:0];
    uint64_t v27 = *(void **)(v24 + OBJC_IVAR____TtC7Journal18AudioAssetGridView_playbackButton);
    [v27 setHidden:0];
    uint64_t v28 = *(void **)(v24 + OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView);
    [v28 setHidden:0];
    char v29 = self;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v24;
    *(void *)(v30 + 24) = 0x3F847AE147AE147BLL;
    id v141 = (uint64_t (*)())sub_1004884C8;
    uint64_t v142 = v30;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF968;
    id v31 = _Block_copy(&aBlock);
    id v32 = v26;
    swift_release();
    [v29 animateWithDuration:0 delay:v31 options:0 animations:0.0 completion:0.0];
    _Block_release(v31);
    [v25 setHidden:0];
    [v27 setHidden:0];
    [v28 setHidden:0];
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v24;
    *(void *)(v33 + 24) = 0x3FF0000000000000;
    id v141 = sub_100488630;
    uint64_t v142 = v33;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF9B8;
    double v34 = _Block_copy(&aBlock);
    id v35 = v32;
    swift_release();
    [v29 animateWithDuration:0 delay:v34 options:0 animations:0.25 completion:0.0];
    _Block_release(v34);

    return;
  }
  type metadata accessor for MediaAssetGridView();
  if (swift_dynamicCastClass())
  {
    type metadata accessor for MediaAssetView();
    if (swift_dynamicCastClass())
    {
      a1 = a2;
      sub_100222AD4(0.01, 0.0);
      sub_100222AD4(1.0, 0.25);
LABEL_27:

      return;
    }
  }
  type metadata accessor for ContactAssetView();
  uint64_t v44 = swift_dynamicCastClass();
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v46 = self;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v45;
    *(void *)(v47 + 24) = 0x3F847AE147AE147BLL;
    id v141 = (uint64_t (*)())sub_100488478;
    uint64_t v142 = v47;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF8C8;
    uint64_t v48 = _Block_copy(&aBlock);
    id v49 = a2;
    swift_release();
    [v46 animateWithDuration:0 delay:v48 options:0 animations:0.0 completion:0.0];
    _Block_release(v48);
    [*(id *)(v45 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel) setHidden:0];
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v45;
    *(void *)(v50 + 24) = 0x3FF0000000000000;
    id v141 = sub_10048862C;
    uint64_t v142 = v50;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    uint64_t v51 = &unk_1007AF918;
LABEL_34:
    v139 = sub_10017D530;
    id v140 = v51;
    uint64_t v57 = _Block_copy(&aBlock);
    id v58 = v49;
    swift_release();
    [v46 animateWithDuration:0 delay:v57 options:0 animations:0.25 completion:0.0];
    uint64_t v59 = v57;
LABEL_35:
    _Block_release(v59);

    return;
  }
  type metadata accessor for WorkoutActivityGridView();
  uint64_t v52 = swift_dynamicCastClass();
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v46 = self;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = v53;
    *(void *)(v54 + 24) = 0x3F847AE147AE147BLL;
    id v141 = (uint64_t (*)())sub_10048846C;
    uint64_t v142 = v54;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF828;
    uint64_t v55 = _Block_copy(&aBlock);
    id v49 = a2;
    swift_release();
    [v46 animateWithDuration:0 delay:v55 options:0 animations:0.0 completion:0.0];
    _Block_release(v55);
    [*(id *)(v53 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_exerciseNameLabel) setHidden:0];
    [*(id *)(v53 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutDataLabel) setHidden:0];
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v53;
    *(void *)(v56 + 24) = 0x3FF0000000000000;
    id v141 = sub_100488628;
    uint64_t v142 = v56;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    uint64_t v51 = &unk_1007AF878;
    goto LABEL_34;
  }
  type metadata accessor for MotionActivityGridView();
  uint64_t v60 = swift_dynamicCastClass();
  if (v60)
  {
    uint64_t v61 = (void *)v60;
    unsigned __int8 v62 = self;
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = v61;
    *(void *)(v63 + 24) = 0x3F847AE147AE147BLL;
    id v141 = (uint64_t (*)())sub_100488454;
    uint64_t v142 = v63;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF788;
    id v64 = _Block_copy(&aBlock);
    id v58 = a2;
    uint64_t v65 = v61;
    swift_release();
    [v62 animateWithDuration:0 delay:v64 options:0 animations:0.0 completion:0.0];
    _Block_release(v64);
    [*(id *)&v65[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel] setHidden:0];
    [*(id *)&v65[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel] setHidden:0];
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v65;
    *(void *)(v66 + 24) = 0x3FF0000000000000;
    id v141 = sub_100488620;
    uint64_t v142 = v66;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF7D8;
    uint64_t v67 = _Block_copy(&aBlock);
    uint64_t v68 = v65;
    swift_release();
    [v62 animateWithDuration:0 delay:v67 options:0 animations:0.25 completion:0.0];
    uint64_t v59 = v67;
    goto LABEL_35;
  }
  type metadata accessor for RouteAssetView();
  uint64_t v69 = swift_dynamicCastClass();
  if (v69)
  {
    uint64_t v70 = v69;
    uint64_t v46 = self;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = v70;
    *(void *)(v71 + 24) = 0x3F847AE147AE147BLL;
    id v141 = (uint64_t (*)())sub_100488460;
    uint64_t v142 = v71;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    v139 = sub_10017D530;
    id v140 = &unk_1007AF6E8;
    double v72 = _Block_copy(&aBlock);
    id v49 = a2;
    swift_release();
    [v46 animateWithDuration:0 delay:v72 options:0 animations:0.0 completion:0.0];
    _Block_release(v72);
    [*(id *)(v70 + OBJC_IVAR____TtC7Journal14RouteAssetView_exerciseNameLabel) setHidden:0];
    [*(id *)(v70 + OBJC_IVAR____TtC7Journal14RouteAssetView_workoutDataLabel) setHidden:0];
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = v70;
    *(void *)(v73 + 24) = 0x3FF0000000000000;
    id v141 = sub_100488624;
    uint64_t v142 = v73;
    aBlock = _NSConcreteStackBlock;
    uint64_t v138 = 1107296256;
    uint64_t v51 = &unk_1007AF738;
    goto LABEL_34;
  }
  type metadata accessor for MapAssetView();
  uint64_t v74 = swift_dynamicCastClass();
  if (v74)
  {
    uint64_t v75 = v74;
    if (swift_dynamicCastClass())
    {
      uint64_t v76 = swift_unknownObjectWeakLoadStrong();
      if (v76)
      {
        double v77 = (char *)v76;
        double v78 = *(void **)(v76 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView);
        id v79 = a1;
        id v80 = a2;
        [v78 setHidden:1];
        [*(id *)&v77[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView] setHidden:1];
        [v78 alpha];
        if (v81 != 0.0)
        {
          uint64_t v82 = self;
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = v77;
          *(void *)(v83 + 24) = 0;
          id v141 = sub_100488618;
          uint64_t v142 = v83;
          aBlock = _NSConcreteStackBlock;
          uint64_t v138 = 1107296256;
          v139 = sub_10017D530;
          id v140 = &unk_1007AF5F8;
          uint64_t v84 = _Block_copy(&aBlock);
          v85 = v77;
          swift_release();
          [v82 animateWithDuration:0 delay:v84 options:0 animations:0.125 completion:0.0];
          _Block_release(v84);
        }
        swift_unknownObjectRelease();
      }
      else
      {
        id v114 = a1;
        id v115 = a2;
      }
      uint64_t v116 = self;
      uint64_t v117 = swift_allocObject();
      *(void *)(v117 + 16) = v75;
      *(void *)(v117 + 24) = 0x3F847AE147AE147BLL;
      id v141 = (uint64_t (*)())sub_100488410;
      uint64_t v142 = v117;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF648;
      char v118 = _Block_copy(&aBlock);
      id v119 = a2;
      swift_release();
      [v116 animateWithDuration:32 delay:v118 options:0 animations:0.0 completion:0.0];
      _Block_release(v118);
      uint64_t v120 = swift_allocObject();
      *(void *)(v120 + 16) = v75;
      *(void *)(v120 + 24) = 0x3FF0000000000000;
      id v141 = sub_10048861C;
      uint64_t v142 = v120;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF698;
      v121 = _Block_copy(&aBlock);
      id v42 = v119;
      swift_release();
      [v116 animateWithDuration:32 delay:v121 options:0 animations:0.25 completion:0.0];
      CGFloat v43 = v121;
      goto LABEL_22;
    }
  }
  type metadata accessor for GenericMapAssetView();
  uint64_t v86 = swift_dynamicCastClass();
  if (v86)
  {
    uint64_t v87 = v86;
    if (swift_dynamicCastClass())
    {
      uint64_t v46 = self;
      uint64_t v88 = swift_allocObject();
      *(void *)(v88 + 16) = v87;
      *(void *)(v88 + 24) = 0x3F847AE147AE147BLL;
      id v141 = (uint64_t (*)())sub_100488404;
      uint64_t v142 = v88;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF558;
      uint64_t v89 = _Block_copy(&aBlock);
      id v49 = a2;
      swift_release();
      [v46 animateWithDuration:0 delay:v89 options:0 animations:0.0 completion:0.0];
      _Block_release(v89);
      uint64_t v90 = swift_allocObject();
      *(void *)(v90 + 16) = v87;
      *(void *)(v90 + 24) = 0x3FF0000000000000;
      id v141 = sub_100488614;
      uint64_t v142 = v90;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      uint64_t v51 = &unk_1007AF5A8;
      goto LABEL_34;
    }
  }
  type metadata accessor for StateOfMindAssetGridView();
  uint64_t v91 = swift_dynamicCastClass();
  if (v91)
  {
    uint64_t v92 = (void *)v91;
    uint64_t v93 = swift_dynamicCastClass();
    if (v93)
    {
      uint64_t v94 = (void *)v93;
      id v95 = self;
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = v92;
      *(void *)(v96 + 24) = 0x3F847AE147AE147BLL;
      id v141 = sub_1004883F8;
      uint64_t v142 = v96;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF468;
      double v97 = _Block_copy(&aBlock);
      id v98 = a2;
      id v136 = a1;
      id v99 = v98;
      swift_release();
      [v95 animateWithDuration:32 delay:v97 options:0 animations:0.0 completion:0.0];
      _Block_release(v97);
      sub_100019DC8(0);
      uint64_t v100 = swift_allocObject();
      *(void *)(v100 + 16) = v92;
      *(void *)(v100 + 24) = 0x3FF0000000000000;
      id v141 = sub_100488610;
      uint64_t v142 = v100;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF4B8;
      uint64_t v101 = _Block_copy(&aBlock);
      id v102 = v92;
      swift_release();
      [v95 animateWithDuration:32 delay:v101 options:0 animations:0.0 completion:0.0];
      _Block_release(v101);
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v94;
      *(void *)(v103 + 24) = 0x3FF0000000000000;
      id v141 = sub_100488610;
      uint64_t v142 = v103;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF508;
      uint64_t v104 = _Block_copy(&aBlock);
      v94;
      swift_release();
      [v95 animateWithDuration:32 delay:v104 options:0 animations:0.25 completion:0.0];
      _Block_release(v104);
      sub_100019DC8(0);

      return;
    }
  }
  type metadata accessor for SlimAssetView();
  if (swift_dynamicCastClass())
  {
    uint64_t v105 = swift_dynamicCastClass();
    if (v105)
    {
      id v106 = (void *)v105;
      id v107 = self;
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 16) = v106;
      *(void *)(v108 + 24) = 0;
      id v141 = sub_1004883EC;
      uint64_t v142 = v108;
      aBlock = _NSConcreteStackBlock;
      uint64_t v138 = 1107296256;
      v139 = sub_10017D530;
      id v140 = &unk_1007AF418;
      uint64_t v109 = _Block_copy(&aBlock);
      id v110 = a1;
      uint64_t v111 = v106;
      swift_release();
      [v107 animateWithDuration:32 delay:v109 options:0 animations:0.25 completion:0.0];
      _Block_release(v109);
      sub_100019DC8(1);
      uint64_t v112 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView;
      [*(id *)&v111[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_fullScreenSnapshotView] removeFromSuperview];
      uint64_t v113 = *(void **)&v111[v112];
      *(void *)&v111[v112] = 0;
    }
    else
    {
      uint64_t v122 = swift_dynamicCastClass();
      if (!v122) {
        return;
      }
      uint64_t v123 = v122;
      uint64_t v124 = swift_unknownObjectWeakLoadStrong();
      if (v124)
      {
        uint64_t v125 = (char *)v124;
        double v126 = *(void **)(v124 + OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_shadowView);
        id v127 = a1;
        [v126 setHidden:1];
        [*(id *)&v125[OBJC_IVAR____TtC7Journal25FullScreenMultiPinMapView_captionView] setHidden:1];
        [v126 alpha];
        if (v128 != 0.0)
        {
          v129 = self;
          uint64_t v130 = swift_allocObject();
          *(void *)(v130 + 16) = v125;
          *(void *)(v130 + 24) = 0;
          id v141 = (uint64_t (*)())sub_1004883E0;
          uint64_t v142 = v130;
          aBlock = _NSConcreteStackBlock;
          uint64_t v138 = 1107296256;
          v139 = sub_10017D530;
          id v140 = &unk_1007AF3C8;
          double v131 = _Block_copy(&aBlock);
          double v132 = v125;
          swift_release();
          [v129 animateWithDuration:0 delay:v131 options:0 animations:0.25 completion:0.0];
          _Block_release(v131);
        }
        swift_unknownObjectRelease();
      }
      else
      {
        id v133 = a1;
      }
      uint64_t v134 = OBJC_IVAR____TtC7Journal12MapAssetView_fullScreenSnapshotView;
      [*(id *)(v123 + OBJC_IVAR____TtC7Journal12MapAssetView_fullScreenSnapshotView) removeFromSuperview];
      uint64_t v113 = *(void **)(v123 + v134);
      *(void *)(v123 + v134) = 0;
    }
  }
}

uint64_t sub_1004EC368()
{
  return swift_deallocObject();
}

uint64_t sub_1004EC3A0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004EC3D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1004EC410()
{
  return swift_deallocObject();
}

uint64_t sub_1004EC450()
{
  swift_release();

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1004EC4A0()
{
  sub_1004E5E68(*(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 72), *(void *)(v0 + 80), *(double *)(v0 + 16), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64));
}

uint64_t sub_1004EC4B8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1004EC500()
{
  sub_1004E60B8(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_1004EC514()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

id sub_1004EC54C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 finishInteractiveTransition];

  return [v1 completeTransition:0];
}

uint64_t sub_1004EC844(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = v3 + OBJC_IVAR____TtC7Journal13CoreDataStack_sessionID;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v10;
  *((void *)v12 + 3) = a1;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1004FCA90;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B0958;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  id v16 = a2;
  swift_retain();
  swift_release();
  [v16 performBlockAndWait:v14];
  _Block_release(v14);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004ECAB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithEntityName:v9];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1006D6270;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10001B2C0();
  *(void *)(v11 + 32) = 25705;
  *(void *)(v11 + 40) = 0xE200000000000000;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = a1;
  *(void *)(v11 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = NSPredicate.init(format:_:)();
  [v10 setPredicate:v13];

  uint64_t v23 = 0;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = v10;
  v14[4] = &v23;
  v14[5] = v4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1004FC7D4;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B06D8;
  id v16 = _Block_copy(aBlock);
  id v17 = a3;
  id v18 = v10;
  id v19 = v4;
  swift_retain();
  swift_release();
  [v17 performBlockAndWait:v16];

  _Block_release(v16);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v23;
    swift_release();
    return v21;
  }
  return result;
}

id sub_1004ECD3C(char *a1, uint64_t a2)
{
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  v487 = (char *)v474 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v486 = (uint64_t)v474 - v8;
  __chkstk_darwin(v9);
  v505 = (char *)v474 - v10;
  __chkstk_darwin(v11);
  v504 = (char *)v474 - v12;
  __chkstk_darwin(v13);
  p_super = ((char *)v474 - v14);
  __chkstk_darwin(v15);
  v511 = (char *)v474 - v16;
  __chkstk_darwin(v17);
  v510 = (char *)v474 - v18;
  uint64_t v517 = type metadata accessor for URL();
  uint64_t v497 = *(void *)(v517 - 8);
  __chkstk_darwin(v517);
  v482 = (char *)v474 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v485 = (char *)v474 - v21;
  __chkstk_darwin(v22);
  v499 = (char *)v474 - v23;
  __chkstk_darwin(v24);
  v502 = (char *)v474 - v25;
  __chkstk_darwin(v26);
  v491 = (char *)v474 - v27;
  __chkstk_darwin(v28);
  v498 = (char *)v474 - v29;
  __chkstk_darwin(v30);
  v508 = (char *)v474 - v31;
  __chkstk_darwin(v32);
  v506 = (char *)v474 - v33;
  uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v34 - 8);
  v521 = (void (*)(void, void))((char *)v474 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v36);
  v520._clients = (char *)v474 - v37;
  v520._reserved = (void *)type metadata accessor for Logger();
  uint64_t v501 = *((void *)v520._reserved - 1);
  __chkstk_darwin(v520._reserved);
  v478 = (char *)v474 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v481 = (char *)v474 - v40;
  __chkstk_darwin(v41);
  v494 = (char *)v474 - v42;
  __chkstk_darwin(v43);
  v489 = (char *)v474 - v44;
  __chkstk_darwin(v45);
  v492 = (char *)v474 - v46;
  __chkstk_darwin(v47);
  v479 = (char *)v474 - v48;
  __chkstk_darwin(v49);
  v519 = (char *)v474 - v50;
  __chkstk_darwin(v51);
  v518 = (char *)v474 - v52;
  __chkstk_darwin(v53);
  v496 = (char *)v474 - v54;
  __chkstk_darwin(v55);
  v512 = (char *)v474 - v56;
  __chkstk_darwin(v57);
  *(void *)&long long v493 = (char *)v474 - v58;
  __chkstk_darwin(v59);
  v523 = (char *)v474 - v60;
  uint64_t v61 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v61 - 8);
  v503 = (char *)v474 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  v507 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)v474 - v64);
  __chkstk_darwin(v65);
  uint64_t v67 = (char *)v474 - v66;
  uint64_t v68 = type metadata accessor for UUID();
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  *(void *)&long long v513 = (char *)v474 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  v520._urlString = (NSString *)((char *)v474 - v72);
  __chkstk_darwin(v73);
  uint64_t v75 = (char *)v474 - v74;
  __n128 v77 = __chkstk_darwin(v76);
  v520._baseURL = v2;
  double v78 = *(void (**)(__n128))(v69 + 16);
  v495 = (char *)v474 - v79;
  v515 = (char *)v2 + OBJC_IVAR____TtC7Journal13CoreDataStack_sessionID;
  v78(v77);
  type metadata accessor for JournalEntryAssetMO();
  id v80 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v480 = a2;
  id v509 = [v80 initWithContext:a2];
  v522 = a1;
  id v81 = [a1 recordID];
  id v82 = [v81 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v500 = v69;
  uint64_t v83 = *(NSURL **)(v69 + 48);
  uint64_t v516 = v68;
  v520.super.Class isa = (Class)(v69 + 48);
  v514 = v83;
  Class isa = 0;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v83)(v67, 1, v68) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v500 + 8))(v67, v516);
  }
  id v85 = v509;
  [v509 setId:isa];

  [v85 setIsUploadedToCloud:1];
  [v85 setIsRemovedFromCloud:0];
  uint64_t v86 = CKRecord.subscript.getter();
  uint64_t v87 = v523;
  urlString = v520._urlString;
  if (v86)
  {
    self;
    uint64_t v89 = (void *)swift_dynamicCastObjCClass();
    if (v89)
    {
      id v90 = [v89 recordID];
      id v91 = [v90 recordName];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v92 = (char *)v507;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v93 = v516;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v514)(v92, 1, v516) == 1)
      {
        Class v94 = 0;
      }
      else
      {
        Class v94 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v500 + 8))(v92, v93);
      }
      id v111 = v509;
      clients = v520._clients;
      [v509 setParentID:v94];
      swift_unknownObjectRelease();

      goto LABEL_16;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  reserved = v520._reserved;
  uint64_t v96 = sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
  (*(void (**)(char *, uint64_t, void *))(v501 + 16))(v87, v96, reserved);
  uint64_t v97 = v516;
  ((void (*)(char *, char *, uint64_t))v78)(v75, v495, v516);
  ((void (*)(NSString *, char *, uint64_t))v78)(urlString, v75, v97);
  uint64_t v98 = v500;
  uint64_t v99 = v513;
  (*(void (**)(void, char *, uint64_t))(v500 + 32))(v513, v75, v97);
  uint64_t v100 = v522;
  uint64_t v101 = Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v101, v102))
  {
    uint64_t v103 = swift_slowAlloc();
    v488 = (char *)swift_slowAlloc();
    v507 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
    v526 = (char *)v507;
    *(_DWORD *)uint64_t v103 = 136446466;
    uint64_t v104 = v99;
    uint64_t v105 = urlString;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v106 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v524 = sub_10011EA98(v106, v107, (uint64_t *)&v526);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v500 + 8);
    v108(v104, v516);
    v108((uint64_t)v105, v516);
    *(_WORD *)(v103 + 12) = 2112;
    uint64_t v524 = (uint64_t)v100;
    uint64_t v109 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)v488 = v100;

    _os_log_impl((void *)&_mh_execute_header, v101, v102, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to get parentReference for asset for a record: %@", (uint8_t *)v103, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void *))(v501 + 8))(v523, reserved);
  }
  else
  {
    id v110 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v110(v99, v97);
    v110((uint64_t)urlString, v97);

    (*(void (**)(char *, void *))(v501 + 8))(v87, reserved);
  }
  id v111 = v509;
  clients = v520._clients;
LABEL_16:
  uint64_t v113 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
  id v114 = [v522 encryptedValues];
  NSString v115 = String._bridgeToObjectiveC()();
  Class v116 = (Class)[v114 objectForKeyedSubscript:v115];
  swift_unknownObjectRelease();

  if (v116)
  {
    uint64_t v524 = (uint64_t)v116;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v117 = (uint64_t)v526;
      unint64_t v118 = (unint64_t)v527;
      Class v116 = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DD0(v117, v118);
    }
    else
    {
      Class v116 = 0;
    }
  }
  [v111 setTitle:v116];

  id v119 = [v522 encryptedValues];
  NSString v120 = String._bridgeToObjectiveC()();
  NSString v121 = [v119 objectForKeyedSubscript:v120];
  swift_unknownObjectRelease();

  if (v121)
  {
    uint64_t v524 = (uint64_t)v121;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v121 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v121 = 0;
    }
  }
  [v111 setAssetType:v121];

  id v122 = [v522 encryptedValues];
  NSString v123 = String._bridgeToObjectiveC()();
  NSString v124 = [v122 objectForKeyedSubscript:v123];
  swift_unknownObjectRelease();

  if (v124)
  {
    uint64_t v524 = (uint64_t)v124;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v124 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v124 = 0;
    }
  }
  [v111 setSource:v124];

  id v125 = [v522 encryptedValues];
  NSString v126 = String._bridgeToObjectiveC()();
  id v127 = (char *)[v125 objectForKeyedSubscript:v126];
  swift_unknownObjectRelease();

  if (v127)
  {
    v526 = v127;
    sub_100010218((uint64_t *)&unk_1008060F0);
    uint64_t v128 = type metadata accessor for Date();
    int v129 = swift_dynamicCast();
    uint64_t v130 = *(void *)(v128 - 8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v130 + 56))(clients, v129 ^ 1u, 1, v128);
    Class v131 = 0;
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v130 + 48))(clients, 1, v128) != 1)
    {
      Class v131 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(void *, uint64_t))(v130 + 8))(clients, v128);
    }
  }
  else
  {
    uint64_t v132 = type metadata accessor for Date();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(clients, 1, 1, v132);
    Class v131 = 0;
  }
  [v111 setCreatedDate:v131];

  id v133 = [v522 encryptedValues];
  NSString v134 = String._bridgeToObjectiveC()();
  uint64_t v135 = (char *)[v133 objectForKeyedSubscript:v134];
  swift_unknownObjectRelease();

  if (v135)
  {
    v526 = v135;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v111 setMinimumSupportedAppVersion:(__int16)v524];
    }
  }
  id v136 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  id v137 = v522;
  [v522 encodeSystemFieldsWithCoder:v136];
  id v138 = [v136 encodedData];
  uint64_t v139 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  id v140 = v111;
  unint64_t v142 = v141;

  Class v143 = Data._bridgeToObjectiveC()().super.isa;
  sub_100040DD0(v139, v142);
  [v140 setRecordSystemFields:v143];

  id v144 = [v137 encryptedValues];
  NSString v145 = String._bridgeToObjectiveC()();
  uint64_t v146 = (char *)[v144 objectForKeyedSubscript:v145];
  swift_unknownObjectRelease();

  if (v146)
  {
    v526 = v146;
    sub_100010218((uint64_t *)&unk_1008060F0);
    uint64_t v147 = type metadata accessor for Date();
    v148 = v521;
    int v149 = swift_dynamicCast();
    uint64_t v150 = *(void *)(v147 - 8);
    (*(void (**)(void (*)(void, void), void, uint64_t, uint64_t))(v150 + 56))(v148, v149 ^ 1u, 1, v147);
    int v151 = (*(uint64_t (**)(void (*)(void, void), uint64_t, uint64_t))(v150 + 48))(v148, 1, v147);
    Class v152 = 0;
    uint64_t v153 = v517;
    id v154 = v518;
    if (v151 != 1)
    {
      Class v152 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(void, uint64_t))(v150 + 8))(v148, v147);
    }
  }
  else
  {
    uint64_t v155 = type metadata accessor for Date();
    (*(void (**)(void (*)(void, void), uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v521, 1, 1, v155);
    Class v152 = 0;
    uint64_t v153 = v517;
    id v154 = v518;
  }
  [v509 setSuggestionDate:v152];

  id v156 = [v522 encryptedValues];
  NSString v157 = String._bridgeToObjectiveC()();
  id v158 = [v156 objectForKeyedSubscript:v157];
  swift_unknownObjectRelease();

  if (v158)
  {
    uint64_t v524 = (uint64_t)v158;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      v159 = v503;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v160 = v516;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v514)(v159, 1, v516) == 1)
      {
        Class v161 = 0;
      }
      else
      {
        Class v161 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v500 + 8))(v159, v160);
      }
      [v509 setSuggestionId:v161];
    }
  }
  id v162 = [v522 encryptedValues];
  NSString v163 = String._bridgeToObjectiveC()();
  v164 = (char *)[v162 objectForKeyedSubscript:v163];
  swift_unknownObjectRelease();

  if (v164)
  {
    v526 = v164;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v509 setIsSlim:v524];
    }
  }
  id v165 = [v522 encryptedValues];
  NSString v166 = String._bridgeToObjectiveC()();
  id v167 = [v165 objectForKeyedSubscript:v166];
  swift_unknownObjectRelease();

  if (v167)
  {
    uint64_t v524 = (uint64_t)v167;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v168 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v509 setOsVersion:v168];
    }
  }
  if (!CKRecord.subscript.getter()) {
    goto LABEL_60;
  }
  self;
  id v169 = (void *)swift_dynamicCastObjCClass();
  if (!v169)
  {
    swift_unknownObjectRelease();
LABEL_60:
    v503 = 0;
    goto LABEL_72;
  }
  id v170 = [v169 fileURL];
  if (v170)
  {
    id v171 = v170;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v172 = v497;
    v173 = *(void (**)(void))(v497 + 32);
    uint64_t v174 = (uint64_t)v510;
    v173();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v172 + 56))(v174, 0, 1, v517);
    uint64_t v175 = v172;
    uint64_t v176 = v517;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v174, 1, v517) != 1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v173)(v506, v174, v176);
      if (qword_1007F70F0 != -1) {
        swift_once();
      }
      v177 = v520._reserved;
      uint64_t v178 = (NSString *)sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
      uint64_t v179 = v493;
      v523 = *(char **)(v501 + 16);
      v520._clients = (void *)(v501 + 16);
      ((void (*)(void, NSString *, void *))v523)(v493, v178, v177);
      v180 = v520._baseURL;
      v181 = Logger.logObject.getter();
      os_log_type_t v182 = static os_log_type_t.default.getter();
      BOOL v183 = os_log_type_enabled(v181, v182);
      v521 = (void (*)(void, void))v180;
      if (v183)
      {
        v184 = (uint8_t *)swift_slowAlloc();
        v185 = (char *)swift_slowAlloc();
        v520._urlString = v178;
        v526 = v185;
        *(_DWORD *)v184 = 136446210;
        sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v186 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v524 = sub_10011EA98(v186, v187, (uint64_t *)&v526);
        uint64_t v113 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v181, v182, "%{public}s (createNewJournalEntryAssetFromRecord) Processing assetMetadataAsset parameter", v184, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(void, void *))(v501 + 8))(v493, v520._reserved);
      }
      else
      {

        (*(void (**)(uint64_t, void *))(v501 + 8))(v179, v177);
      }
      id v198 = v509;
      uint64_t v199 = Data.init(contentsOf:options:)();
      unint64_t v201 = v200;
      v503 = 0;
      Class v202 = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DD0(v199, v201);
      [v198 setAssetMetaData:v202];

      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      id v203 = [v522 recordID];
      id v204 = [v203 recordName];

      Swift::Int v205 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::Int v207 = v206;

      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_10054BEBC(&v524, v205, v207);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v153 = v517;
      (*(void (**)(char *, uint64_t))(v497 + 8))(v506, v517);
      id v154 = v518;
      goto LABEL_72;
    }
  }
  else
  {
    uint64_t v174 = (uint64_t)v510;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v497 + 56))(v510, 1, 1, v153);
  }
  sub_10001457C(v174, (uint64_t *)&unk_100800A60);
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  v188 = v520._reserved;
  uint64_t v189 = sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
  uint64_t v190 = v501;
  v191 = v512;
  (*(void (**)(char *, uint64_t, void *))(v501 + 16))(v512, v189, v188);
  v192 = v520._baseURL;
  v193 = Logger.logObject.getter();
  os_log_type_t v194 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v193, v194))
  {
    v195 = (uint8_t *)swift_slowAlloc();
    v526 = (char *)swift_slowAlloc();
    *(_DWORD *)v195 = 136446210;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v196 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v524 = sub_10011EA98(v196, v197, (uint64_t *)&v526);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v193, v194, "%{public}s (createNewJournalEntryAssetFromRecord) ckAsset.fileURL is nil will be downloaded later", v195, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    (*(void (**)(char *, void *))(v190 + 8))(v512, v520._reserved);
  }
  else
  {

    swift_unknownObjectRelease();
    (*(void (**)(char *, void *))(v190 + 8))(v191, v188);
  }
  v503 = 0;
  uint64_t v153 = v517;
  id v154 = v518;
  uint64_t v113 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_72:
  id v208 = [v522 v113[36]];
  NSString v209 = String._bridgeToObjectiveC()();
  id v210 = [v208 objectForKeyedSubscript:v209];
  swift_unknownObjectRelease();

  if (v210)
  {
    uint64_t v524 = (uint64_t)v210;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v211 = (uint64_t)v526;
      unint64_t v212 = (unint64_t)v527;
      id v213 = v509;
      id v214 = [v509 assetMetaData];
      if (v214)
      {
        v215 = v214;
        uint64_t v216 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v218 = v217;

        uint64_t v219 = v216;
        uint64_t v153 = v517;
        sub_100040DD0(v219, v218);
      }
      else
      {
        Class v220 = Data._bridgeToObjectiveC()().super.isa;
        [v213 setAssetMetaData:v220];
      }
      sub_100040DD0(v211, v212);
    }
  }
  if (!CKRecord.subscript.getter()) {
    goto LABEL_92;
  }
  self;
  v221 = (void *)swift_dynamicCastObjCClass();
  if (!v221)
  {
    swift_unknownObjectRelease();
    uint64_t v153 = v517;
    goto LABEL_92;
  }
  v222 = v221;
  id v223 = [v221 fileURL];
  if (!v223)
  {
    uint64_t v227 = (uint64_t)v511;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v497 + 56))(v511, 1, 1, v517);
    goto LABEL_88;
  }
  v224 = v223;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v225 = v497;
  v226 = *(void (**)(void))(v497 + 32);
  uint64_t v227 = (uint64_t)v511;
  uint64_t v228 = v517;
  v226();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v225 + 56))(v227, 0, 1, v228);
  v229 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48);
  if (v229(v227, 1, v228) == 1)
  {
LABEL_88:
    swift_unknownObjectRelease();
    sub_10001457C(v227, (uint64_t *)&unk_100800A60);
    uint64_t v153 = v517;
    goto LABEL_89;
  }
  ((void (*)(char *, uint64_t, uint64_t))v226)(v498, v227, v517);
  id v230 = [v522 encryptedValues];
  NSString v231 = String._bridgeToObjectiveC()();
  id v232 = [v230 objectForKeyedSubscript:v231];
  swift_unknownObjectRelease();

  if (v232)
  {
    uint64_t v524 = (uint64_t)v232;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      type metadata accessor for Journaling();
      v233 = p_super;
      sub_1005E6B0C((uint64_t)p_super);
      uint64_t v234 = (uint64_t)v233;
      v235 = v233;
      uint64_t v236 = v517;
      if (v229((uint64_t)v235, 1, v517) != 1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v226)(v491, v234, v236);
        v398 = self;
        id v399 = [v398 defaultManager];
        v400 = v508;
        URL.deletingLastPathComponent()();
        URL._bridgeToObjectiveC()(v401);
        v403 = v402;
        v404 = *(void (**)(void, void))(v497 + 8);
        v523 = (char *)(v497 + 8);
        v521 = v404;
        v404(v400, v236);
        sub_100010218(&qword_10080F9C0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1006D6280;
        *(void *)(inited + 32) = NSFileProtectionKey;
        uint64_t v406 = qword_1007F6EF8;
        v407 = NSFileProtectionKey;
        if (v406 != -1) {
          swift_once();
        }
        v408 = (void *)qword_10083D470;
        type metadata accessor for URLFileProtection(0);
        *(void *)(inited + 64) = v409;
        *(void *)(inited + 40) = v408;
        id v410 = v408;
        sub_10039687C(inited);
        type metadata accessor for FileAttributeKey(0);
        sub_1004FCB08(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
        Class v411 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v526 = 0;
        unsigned int v412 = [v399 createDirectoryAtURL:v403 withIntermediateDirectories:1 attributes:v411 error:&v526];

        v413 = v526;
        if (v412)
        {
          id v414 = [v398 defaultManager];
          v415 = v498;
          URL._bridgeToObjectiveC()(&v525);
          v417 = v416;
          v418 = v491;
          URL._bridgeToObjectiveC()(&v520);
          v420 = v419;
          v526 = 0;
          unsigned int v421 = [v414 copyItemAtURL:v417 toURL:v419 error:&v526];

          if (v421)
          {
            v422 = v526;
            sub_10036AF38();
            NSString v423 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v509 setFileAttachment:v423];
            swift_unknownObjectRelease();

            v424 = v418;
            uint64_t v153 = v517;
            v425 = (void (*)(char *, uint64_t))v521;
            v521(v424, v517);
            v425(v415, v153);
            goto LABEL_89;
          }
          v413 = v526;
        }
        v450 = v413;
        swift_bridgeObjectRelease();
        _convertNSErrorToError(_:)();

        swift_willThrow();
        v451 = v489;
        if (qword_1007F70F0 != -1) {
          swift_once();
        }
        v452 = v520._reserved;
        uint64_t v453 = sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
        uint64_t v454 = v501;
        (*(void (**)(char *, uint64_t, void *))(v501 + 16))(v451, v453, v452);
        v455 = v520._baseURL;
        swift_errorRetain();
        swift_unknownObjectRetain();
        v456 = v455;
        swift_errorRetain();
        swift_unknownObjectRetain();
        v457 = Logger.logObject.getter();
        os_log_type_t v458 = static os_log_type_t.fault.getter();
        int v459 = v458;
        if (os_log_type_enabled(v457, v458))
        {
          uint64_t v460 = swift_slowAlloc();
          uint64_t v461 = swift_slowAlloc();
          v520._urlString = (NSString *)&v457->isa;
          v462 = (void *)v461;
          v520._clients = (void *)swift_slowAlloc();
          v526 = (char *)v520._clients;
          *(_DWORD *)uint64_t v460 = 136446722;
          sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          LODWORD(v520.super.isa) = v459;
          uint64_t v463 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v524 = sub_10011EA98(v463, v464, (uint64_t *)&v526);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v460 + 12) = 2112;
          swift_errorRetain();
          uint64_t v465 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v524 = v465;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v462 = v465;
          swift_errorRelease();
          swift_errorRelease();
          *(_WORD *)(v460 + 22) = 2080;
          id v466 = [v222 debugDescription];
          uint64_t v467 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v469 = v468;

          uint64_t v524 = sub_10011EA98(v467, v469, (uint64_t *)&v526);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          v470 = v520._urlString;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v520._urlString, (os_log_type_t)v520.super.isa, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to process attachment error:%@ ckasset:%s", (uint8_t *)v460, 0x20u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_unknownObjectRelease();

          swift_errorRelease();
          uint64_t v471 = v501;
          (*(void (**)(char *, void *))(v501 + 8))(v489, v520._reserved);
          uint64_t v153 = v517;
          v472 = (void (*)(char *, uint64_t))v521;
          v521(v491, v517);
          v472(v498, v153);
          v503 = 0;
          uint64_t v237 = v471;
        }
        else
        {

          swift_unknownObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          swift_unknownObjectRelease();

          swift_errorRelease();
          (*(void (**)(char *, void *))(v454 + 8))(v451, v452);
          uint64_t v153 = v517;
          v473 = (void (*)(char *, uint64_t))v521;
          v521(v491, v517);
          v473(v498, v153);
          v503 = 0;
          uint64_t v237 = v454;
        }
        goto LABEL_90;
      }
      (*(void (**)(char *, uint64_t))(v497 + 8))(v498, v236);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_10001457C(v234, (uint64_t *)&unk_100800A60);
      uint64_t v153 = v236;
LABEL_89:
      uint64_t v237 = v501;
LABEL_90:
      id v154 = v518;
      goto LABEL_93;
    }
  }
  swift_unknownObjectRelease();
  id v154 = v518;
  uint64_t v153 = v517;
  (*(void (**)(char *, uint64_t))(v497 + 8))(v498, v517);
LABEL_92:
  uint64_t v237 = v501;
LABEL_93:
  uint64_t v238 = CKRecord.allKeys()();
  v240 = *(char **)(v238 + 16);
  v492 = (char *)v238;
  if (v240)
  {
    v510 = (char *)(v497 + 32);
    v511 = (char *)(v497 + 56);
    v507 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v497 + 48);
    v520._urlString = (NSString *)(v237 + 16);
    v520.super.Class isa = (Class)(v237 + 8);
    v514 = &v525;
    v498 = (char *)(v497 + 8);
    NSFileAttributeKey v476 = NSFileProtectionKey;
    NSFileProtectionType v475 = NSFileProtectionCompleteUnlessOpen;
    v241 = (void **)(v238 + 40);
    v474[1] = NSURLFileProtectionCompleteUnlessOpen;
    *(void *)&long long v239 = 136446466;
    long long v513 = v239;
    v506 = (char *)&type metadata for Any + 8;
    *(void *)&long long v239 = 136446978;
    long long v477 = v239;
    v489 = (char *)0x80000001006932F0;
    long long v493 = xmmword_1006D6280;
    do
    {
      v242 = (void (*)(void, void))*(v241 - 1);
      v243 = *v241;
      swift_bridgeObjectRetain();
      sub_100246D00(0);
      v523 = v240;
      v521 = v242;
      if ((v244 & 0x10000) != 0) {
        goto LABEL_115;
      }
      __int16 v245 = v244;
      v520._clients = v243;
      if (CKRecord.subscript.getter())
      {
        self;
        v246 = (void *)swift_dynamicCastObjCClass();
        if (v246)
        {
          v247 = v246;
          id v248 = [v246 fileURL];
          if (v248)
          {
            v249 = v248;
            v250 = v508;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            v251 = *(void (**)(char *, uint64_t, uint64_t))v510;
            uint64_t v252 = (uint64_t)v504;
            v253 = v250;
            id v154 = v518;
            (*(void (**)(char *, char *, uint64_t))v510)(v504, v253, v153);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))v511)(v252, 0, 1, v153);
            if ((*v507)(v252, 1, v153) != 1)
            {
              v251(v502, v252, v153);
              if (qword_1007F70F0 != -1) {
                swift_once();
              }
              v254 = v520._reserved;
              uint64_t v255 = sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
              v256 = (char *)*v520._urlString;
              v257 = v496;
              v491 = (char *)v255;
              v512 = v256;
              ((void (*)(char *))v256)(v496);
              v258 = v520._baseURL;
              v259 = v520._clients;
              swift_bridgeObjectRetain_n();
              v260 = v258;
              v261 = Logger.logObject.getter();
              os_log_type_t v262 = static os_log_type_t.default.getter();
              int v263 = v262;
              BOOL v264 = os_log_type_enabled(v261, v262);
              p_super = &v260->super;
              if (v264)
              {
                uint64_t v265 = swift_slowAlloc();
                v488 = (char *)swift_slowAlloc();
                v526 = v488;
                *(_DWORD *)uint64_t v265 = v513;
                uint64_t v483 = v265 + 4;
                sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                LODWORD(v484) = v263;
                uint64_t v266 = dispatch thunk of CustomStringConvertible.description.getter();
                uint64_t v524 = sub_10011EA98(v266, v267, (uint64_t *)&v526);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v265 + 12) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v524 = sub_10011EA98((uint64_t)v521, (unint64_t)v259, (uint64_t *)&v526);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v261, (os_log_type_t)v484, "%{public}s (createNewJournalEntryAssetFromRecord) Processing data attachment parameter %s", (uint8_t *)v265, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                v268 = *(char **)v520.super.isa;
                (*(void (**)(char *, void *))v520.super.isa)(v496, v520._reserved);
              }
              else
              {

                swift_bridgeObjectRelease_n();
                v268 = *(char **)v520.super.isa;
                (*(void (**)(char *, void *))v520.super.isa)(v257, v254);
              }
              v305 = v502;
              v306 = v503;
              uint64_t v307 = Data.init(contentsOf:options:)();
              if (v306)
              {
                v488 = v268;
                v309 = v494;
                v310 = v520._reserved;
                ((void (*)(char *, char *, void *))v512)(v494, v491, v520._reserved);
                v311 = p_super;
                v312 = v520._clients;
                swift_bridgeObjectRetain();
                swift_errorRetain();
                swift_unknownObjectRetain();
                v313 = v311;
                swift_bridgeObjectRetain();
                swift_errorRetain();
                swift_unknownObjectRetain();
                v314 = Logger.logObject.getter();
                os_log_type_t v315 = static os_log_type_t.fault.getter();
                LODWORD(v512) = v315;
                if (os_log_type_enabled(v314, v315))
                {
                  uint64_t v316 = swift_slowAlloc();
                  v484 = (void *)swift_slowAlloc();
                  v491 = (char *)swift_slowAlloc();
                  v526 = v491;
                  *(_DWORD *)uint64_t v316 = v477;
                  v503 = v306;
                  sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  p_super = v314;
                  uint64_t v317 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v524 = sub_10011EA98(v317, v318, (uint64_t *)&v526);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v316 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v524 = sub_10011EA98((uint64_t)v521, (unint64_t)v312, (uint64_t *)&v526);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v316 + 22) = 2112;
                  swift_errorRetain();
                  uint64_t v319 = _swift_stdlib_bridgeErrorToNSError();
                  uint64_t v524 = v319;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  void *v484 = v319;
                  swift_errorRelease();
                  swift_errorRelease();
                  *(_WORD *)(v316 + 32) = 2080;
                  id v320 = [v247 debugDescription];
                  uint64_t v321 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v323 = v322;

                  uint64_t v524 = sub_10011EA98(v321, v323, (uint64_t *)&v526);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease();

                  v324 = p_super;
                  _os_log_impl((void *)&_mh_execute_header, p_super, (os_log_type_t)v512, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to get data from attachment parameter %s error:%@ ckasset:%s", (uint8_t *)v316, 0x2Au);
                  sub_100010218((uint64_t *)&unk_1007FC430);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                  swift_unknownObjectRelease();

                  swift_errorRelease();
                  ((void (*)(char *, void *))v488)(v494, v520._reserved);
                  uint64_t v153 = v517;
                  (*(void (**)(char *, uint64_t))v498)(v502, v517);
                  v503 = 0;
                  id v154 = v518;
                  v240 = v523;
                  v243 = v520._clients;
                }
                else
                {

                  swift_unknownObjectRelease();
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_unknownObjectRelease();

                  swift_bridgeObjectRelease_n();
                  swift_errorRelease();
                  ((void (*)(char *, void *))v488)(v309, v310);
                  uint64_t v153 = v517;
                  (*(void (**)(char *, uint64_t))v498)(v502, v517);
                  v503 = 0;
                  id v154 = v518;
                  v240 = v523;
                  v243 = v312;
                }
              }
              else
              {
                uint64_t v325 = v307;
                unint64_t v326 = v308;
                v503 = 0;
                sub_100040D64(v307, v308);
                sub_1001838A8(v325, v326, v245);
                sub_100040DD0(v325, v326);
                sub_100040DD0(v325, v326);
                swift_unknownObjectRelease();
                uint64_t v153 = v517;
                (*(void (**)(char *, uint64_t))v498)(v305, v517);
                id v154 = v518;
                v240 = v523;
                v243 = v520._clients;
              }
              goto LABEL_115;
            }
          }
          else
          {
            uint64_t v252 = (uint64_t)v504;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v511)(v504, 1, 1, v153);
          }
          swift_unknownObjectRelease();
          sub_10001457C(v252, (uint64_t *)&unk_100800A60);
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      if (qword_1007F70F0 != -1) {
        swift_once();
      }
      v269 = v520._reserved;
      uint64_t v270 = sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
      (*(void (**)(char *, uint64_t, void *))v520._urlString)(v154, v270, v269);
      v271 = v520._baseURL;
      v243 = v520._clients;
      swift_bridgeObjectRetain_n();
      v272 = v271;
      v273 = Logger.logObject.getter();
      os_log_type_t v274 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v273, v274))
      {
        uint64_t v275 = swift_slowAlloc();
        v526 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v275 = v513;
        sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v276 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v524 = sub_10011EA98(v276, v277, (uint64_t *)&v526);
        v243 = v520._clients;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v275 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v524 = sub_10011EA98((uint64_t)v521, (unint64_t)v243, (uint64_t *)&v526);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v273, v274, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to get ckasset for dataAttachment parameter %s", (uint8_t *)v275, 0x16u);
        swift_arrayDestroy();
        id v154 = v518;
        swift_slowDealloc();
        uint64_t v153 = v517;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, void *))v520.super.isa)(v154, v269);
      v240 = v523;
LABEL_115:
      sub_100246D00(2);
      v279 = v519;
      if ((v278 & 0x10000) == 0)
      {
        __int16 v280 = v278;
        uint64_t v281 = CKRecord.subscript.getter();
        v282 = v520._reserved;
        if (v281)
        {
          self;
          v283 = (void *)swift_dynamicCastObjCClass();
          if (v283)
          {
            id v284 = [v283 fileURL];
            if (v284)
            {
              v285 = v284;
              v286 = v508;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              v287 = *(void (**)(char *, uint64_t, uint64_t))v510;
              uint64_t v288 = (uint64_t)v505;
              (*(void (**)(char *, char *, uint64_t))v510)(v505, v286, v153);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))v511)(v288, 0, 1, v153);
              v289 = (char *)*v507;
              if ((*v507)(v288, 1, v153) != 1)
              {
                v512 = v289;
                v287(v499, v288, v153);
                id v290 = [v522 encryptedValues];
                v526 = (char *)0xD00000000000001ALL;
                v527 = v489;
                sub_100010218((uint64_t *)&unk_100806070);
                uint64_t v291 = swift_allocObject();
                *(_OWORD *)(v291 + 16) = v493;
                *(void *)(v291 + 56) = &type metadata for Int16;
                *(void *)(v291 + 64) = &protocol witness table for Int16;
                *(_WORD *)(v291 + 32) = v280;
                v292._countAndFlagsBits = String.init(format:_:)();
                String.append(_:)(v292);
                swift_bridgeObjectRelease();
                NSString v293 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v294 = [v290 objectForKeyedSubscript:v293];
                swift_unknownObjectRelease();

                if (v294
                  && (uint64_t v524 = (uint64_t)v294, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
                {
                  v295 = v526;
                  v296 = v527;
                  type metadata accessor for Journaling();
                  uint64_t v297 = v486;
                  v491 = v295;
                  sub_1005E6B0C(v486);
                  uint64_t v153 = v517;
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v512)(v297, 1, v517) != 1)
                  {
                    v512 = v296;
                    v521 = (void (*)(void, void))v241;
                    swift_bridgeObjectRelease();
                    v327 = v485;
                    v287(v485, v297, v153);
                    v328 = self;
                    id v329 = [v328 defaultManager];
                    v330 = v508;
                    URL.deletingLastPathComponent()();
                    URL._bridgeToObjectiveC()(v331);
                    v333 = v332;
                    v334 = *(void (**)(char *, uint64_t))v498;
                    (*(void (**)(char *, uint64_t))v498)(v330, v153);
                    sub_100010218(&qword_10080F9C0);
                    uint64_t v335 = swift_initStackObject();
                    *(_OWORD *)(v335 + 16) = v493;
                    NSFileAttributeKey v336 = v476;
                    *(void *)(v335 + 32) = v476;
                    type metadata accessor for FileProtectionType(0);
                    *(void *)(v335 + 64) = v337;
                    NSFileProtectionType v338 = v475;
                    *(void *)(v335 + 40) = v475;
                    v339 = v336;
                    v340 = v338;
                    sub_10039687C(v335);
                    type metadata accessor for FileAttributeKey(0);
                    sub_1004FCB08(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
                    Class v341 = Dictionary._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease();
                    v526 = 0;
                    LODWORD(v335) = [v329 createDirectoryAtURL:v333 withIntermediateDirectories:1 attributes:v341 error:&v526];

                    v342 = v526;
                    if (!v335) {
                      goto LABEL_143;
                    }
                    id v343 = [v328 defaultManager];
                    v344 = v499;
                    URL._bridgeToObjectiveC()((NSURL *)&v525._urlString);
                    v346 = v345;
                    URL._bridgeToObjectiveC()(v347);
                    v349 = v348;
                    v526 = 0;
                    unsigned int v350 = [v343 copyItemAtURL:v346 toURL:v348 error:&v526];

                    v342 = v526;
                    if (v350)
                    {
                      sub_10036AF38();
                      type metadata accessor for JournalEntryAssetFileAttachmentMO();
                      id v351 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
                      id v352 = [v351 initWithContext:v480];
                      NSString v353 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      [v352 setFilePath:v353];

                      [v352 setIndex:v280];
                      [v509 addFileAttachmentsObject:v352];

                      swift_unknownObjectRelease();
                      uint64_t v153 = v517;
                      v334(v327, v517);
                      v334(v344, v153);
                      id v154 = v518;
                      v240 = v523;
                      v241 = (void **)v521;
                    }
                    else
                    {
LABEL_143:
                      v354 = v342;
                      v520._clients = v334;
                      v355 = v520._reserved;
                      swift_bridgeObjectRelease();
                      _convertNSErrorToError(_:)();

                      swift_willThrow();
                      v356 = v481;
                      if (qword_1007F70F0 != -1) {
                        swift_once();
                      }
                      v503 = 0;
                      uint64_t v357 = sub_100026A54((uint64_t)v355, (uint64_t)qword_10080F970);
                      (*(void (**)(char *, uint64_t, void *))v520._urlString)(v356, v357, v355);
                      v358 = v520._baseURL;
                      swift_errorRetain();
                      v359 = v358;
                      v360 = v356;
                      v361 = v359;
                      swift_errorRetain();
                      v362 = Logger.logObject.getter();
                      os_log_type_t v363 = static os_log_type_t.fault.getter();
                      if (os_log_type_enabled(v362, v363))
                      {
                        uint64_t v364 = swift_slowAlloc();
                        v526 = (char *)swift_slowAlloc();
                        *(_DWORD *)uint64_t v364 = v513;
                        sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                        uint64_t v365 = dispatch thunk of CustomStringConvertible.description.getter();
                        uint64_t v524 = sub_10011EA98(v365, v366, (uint64_t *)&v526);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();

                        swift_bridgeObjectRelease();
                        *(_WORD *)(v364 + 12) = 2080;
                        swift_getErrorValue();
                        uint64_t v367 = Error.localizedDescription.getter();
                        uint64_t v524 = sub_10011EA98(v367, v368, (uint64_t *)&v526);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease();
                        swift_errorRelease();
                        swift_errorRelease();
                        _os_log_impl((void *)&_mh_execute_header, v362, v363, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to handle fileAttachments %s", (uint8_t *)v364, 0x16u);
                        swift_arrayDestroy();
                        swift_slowDealloc();
                        swift_slowDealloc();

                        swift_unknownObjectRelease();
                        swift_errorRelease();
                        (*(void (**)(char *, void *))v520.super.isa)(v481, v520._reserved);
                      }
                      else
                      {

                        swift_unknownObjectRelease();
                        swift_errorRelease();
                        swift_errorRelease();

                        swift_errorRelease();
                        (*(void (**)(char *, void *))v520.super.isa)(v360, v355);
                      }
                      uint64_t v153 = v517;
                      v369 = (void (*)(char *, uint64_t))v520._clients;
                      ((void (*)(char *, uint64_t))v520._clients)(v485, v517);
                      v369(v499, v153);
                      id v154 = v518;
                      v240 = v523;
                      v241 = (void **)v521;
                    }
                    goto LABEL_96;
                  }
                  (*(void (**)(char *, uint64_t))v498)(v499, v153);
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                  sub_10001457C(v297, (uint64_t *)&unk_100800A60);
                  v282 = v520._reserved;
                  v279 = v519;
                }
                else
                {
                  swift_unknownObjectRelease();
                  uint64_t v153 = v517;
                  v282 = v520._reserved;
                  (*(void (**)(char *, uint64_t))v498)(v499, v517);
                }
                goto LABEL_128;
              }
            }
            else
            {
              uint64_t v288 = (uint64_t)v505;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v511)(v505, 1, 1, v153);
            }
            swift_unknownObjectRelease();
            sub_10001457C(v288, (uint64_t *)&unk_100800A60);
            v282 = v520._reserved;
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
LABEL_128:
        if (qword_1007F70F0 != -1) {
          swift_once();
        }
        uint64_t v298 = sub_100026A54((uint64_t)v282, (uint64_t)qword_10080F970);
        (*(void (**)(char *, uint64_t, void *))v520._urlString)(v279, v298, v282);
        v299 = v520._baseURL;
        swift_bridgeObjectRetain();
        v300 = Logger.logObject.getter();
        os_log_type_t v301 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v300, v301))
        {
          uint64_t v302 = swift_slowAlloc();
          v512 = (char *)swift_slowAlloc();
          v526 = v512;
          *(_DWORD *)uint64_t v302 = v513;
          sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v303 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v524 = sub_10011EA98(v303, v304, (uint64_t *)&v526);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v302 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v524 = sub_10011EA98((uint64_t)v521, (unint64_t)v243, (uint64_t *)&v526);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v300, v301, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to get ckasset for fileAttachmentData parameter %s", (uint8_t *)v302, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v153 = v517;
          swift_slowDealloc();

          (*(void (**)(char *, void *))v520.super.isa)(v279, v520._reserved);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, void *))v520.super.isa)(v279, v282);
        }
        id v154 = v518;
        v240 = v523;
        goto LABEL_96;
      }
      swift_bridgeObjectRelease();
LABEL_96:
      v241 += 2;
      --v240;
    }
    while (v240);
  }
  swift_bridgeObjectRelease();
  if (!CKRecord.subscript.getter()) {
    goto LABEL_160;
  }
  self;
  v370 = (void *)swift_dynamicCastObjCClass();
  if (!v370)
  {
LABEL_159:
    swift_unknownObjectRelease();
    goto LABEL_160;
  }
  v371 = v370;
  id v372 = [v370 fileURL];
  if (!v372)
  {
    uint64_t v376 = (uint64_t)v487;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v497 + 56))(v487, 1, 1, v153);
    goto LABEL_157;
  }
  v373 = v372;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v374 = v497;
  v375 = *(void (**)(void))(v497 + 32);
  uint64_t v376 = (uint64_t)v487;
  v375();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v374 + 56))(v376, 0, 1, v517);
  uint64_t v377 = v374;
  uint64_t v378 = v517;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v377 + 48))(v376, 1, v517) == 1)
  {
LABEL_157:
    swift_unknownObjectRelease();
    sub_10001457C(v376, (uint64_t *)&unk_100800A60);
    goto LABEL_160;
  }
  uint64_t v379 = v376;
  v380 = v482;
  ((void (*)(char *, uint64_t, uint64_t))v375)(v482, v379, v378);
  id v381 = [v509 dataAttachments];
  if (!v381)
  {
    (*(void (**)(char *, uint64_t))(v497 + 8))(v380, v378);
    goto LABEL_159;
  }
  v382 = v381;
  if ([v381 count])
  {
    (*(void (**)(char *, uint64_t))(v497 + 8))(v482, v517);

    goto LABEL_159;
  }
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  v385 = v520._reserved;
  v386 = (char *)sub_100026A54((uint64_t)v520._reserved, (uint64_t)qword_10080F970);
  v387 = *(void (**)(void))(v501 + 16);
  v388 = v479;
  v522 = v386;
  v521 = (void (*)(void, void))v387;
  v387(v479);
  v389 = v520._baseURL;
  v390 = Logger.logObject.getter();
  os_log_type_t v391 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v390, v391))
  {
    v392 = (uint8_t *)swift_slowAlloc();
    v523 = (char *)swift_slowAlloc();
    v526 = v523;
    *(_DWORD *)v392 = 136446210;
    v520._clients = v392 + 4;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v393 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v524 = sub_10011EA98(v393, v394, (uint64_t *)&v526);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v390, v391, "%{public}s (createNewJournalEntryAssetFromRecord) Processing legacy data attachment parameter", v392, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v395 = *(char **)(v501 + 8);
    v396 = v479;
    v397 = v520._reserved;
  }
  else
  {

    v395 = *(char **)(v501 + 8);
    v396 = v388;
    v397 = v385;
  }
  v523 = v395;
  ((void (*)(char *, void *))v395)(v396, v397);
  v426 = v482;
  v427 = v503;
  uint64_t v428 = Data.init(contentsOf:options:)();
  if (v427)
  {
    v430 = v478;
    v431 = v520._reserved;
    ((void (*)(char *, char *, void *))v521)(v478, v522, v520._reserved);
    v432 = v389;
    swift_unknownObjectRetain();
    swift_errorRetain();
    v433 = v432;
    swift_unknownObjectRetain();
    swift_errorRetain();
    v434 = Logger.logObject.getter();
    os_log_type_t v435 = static os_log_type_t.fault.getter();
    int v436 = v435;
    if (os_log_type_enabled(v434, v435))
    {
      uint64_t v437 = swift_slowAlloc();
      v521 = (void (*)(void, void))swift_slowAlloc();
      v522 = (char *)swift_slowAlloc();
      v526 = v522;
      *(_DWORD *)uint64_t v437 = 136446722;
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      v520._clients = v434;
      uint64_t v438 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v524 = sub_10011EA98(v438, v439, (uint64_t *)&v526);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v437 + 12) = 2080;
      id v440 = [v371 debugDescription];
      uint64_t v441 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      LODWORD(v520._baseURL) = v436;
      unint64_t v443 = v442;

      uint64_t v524 = sub_10011EA98(v441, v443, (uint64_t *)&v526);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

      *(_WORD *)(v437 + 22) = 2112;
      swift_errorRetain();
      uint64_t v444 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v524 = v444;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)v521 = v444;
      swift_errorRelease();
      swift_errorRelease();
      v445 = v520._clients;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v520._clients, (os_log_type_t)v520._baseURL, "%{public}s (createNewJournalEntryAssetFromRecord) Unable to get data from attachment ckasset:%s\nError:\n%@", (uint8_t *)v437, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      swift_unknownObjectRelease();
      v446 = v478;
      v447 = v520._reserved;
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      swift_unknownObjectRelease();
      swift_errorRelease();
      swift_unknownObjectRelease();
      v446 = v430;
      v447 = v431;
    }
    ((void (*)(char *, void *))v523)(v446, v447);
    (*(void (**)(char *, uint64_t))(v497 + 8))(v482, v517);
  }
  else
  {
    uint64_t v448 = v428;
    unint64_t v449 = v429;
    sub_100040D64(v428, v429);
    sub_1001838A8(v448, v449, 0);
    sub_100040DD0(v448, v449);

    sub_100040DD0(v448, v449);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v497 + 8))(v426, v517);
  }
LABEL_160:
  id v383 = v509;
  [v509 setIsUploadedToCloud:1];
  (*(void (**)(char *, uint64_t))(v500 + 8))(v495, v516);
  return v383;
}

void *sub_1004F2144(id a1, char a2)
{
  uint64_t isEscapingClosureAtFileLocation = v2;
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 initWithEntityName:v7];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D6D00;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6280;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v11 = sub_10001B2C0();
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = 0x7972746E65;
  *(void *)(v10 + 40) = 0xE500000000000000;
  *(void *)(v9 + 32) = NSPredicate.init(format:_:)();
  aBlock[0] = v9;
  specialized Array._endMutation()();
  uint64_t v23 = v9;
  if ((a2 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1006D6280;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = v11;
  *(void *)(v12 + 32) = 0x4449746E65726170;
  *(void *)(v12 + 40) = 0xE800000000000000;
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_7;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_4:
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [self andPredicateWithSubpredicates:isa];

    [v8 setPredicate:v14];
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a1;
    v15[3] = v8;
    void v15[4] = &v22;
    v15[5] = isEscapingClosureAtFileLocation;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1004FC870;
    *(void *)(v16 + 24) = v15;
    aBlock[4] = sub_10001B3DC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003F44E4;
    aBlock[3] = &unk_1007B07C8;
    uint64_t v17 = _Block_copy(aBlock);
    a1 = a1;
    id v8 = v8;
    id v18 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    [a1 performBlockAndWait:v17];

    _Block_release(v17);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_7:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v19 = v22;
  swift_release();
  return v19;
}

uint64_t sub_1004F2518(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v17 = _swiftEmptyArrayStorage;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  NSString v7 = NSPredicate.init(format:_:)();
  [v6 setPredicate:v7];

  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v6;
  v8[4] = &v17;
  v8[5] = v2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1004FC890;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B0840;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = a1;
  id v12 = v6;
  id v13 = v2;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_1004F2754(uint64_t a1, char a2, void *a3)
{
  id v4 = v3;
  uint64_t v24 = _swiftEmptyArrayStorage;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithEntityName:v9];

  if ((a2 & 1) == 0) {
    [v10 setFetchLimit:a1];
  }
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [self andPredicateWithSubpredicates:isa];

  [v10 setPredicate:v12];
  id v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = v10;
  v13[4] = &v24;
  v13[5] = v4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1004FC92C;
  *(void *)(v14 + 24) = v13;
  v22[4] = sub_10001B3DC;
  v22[5] = v14;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_1003F44E4;
  v22[3] = &unk_1007B08B8;
  uint64_t v15 = _Block_copy(v22);
  id v16 = a3;
  id v17 = v10;
  id v18 = v4;
  swift_retain();
  swift_release();
  [v16 performBlockAndWait:v15];

  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v24;
    swift_release();
    return (uint64_t)v21;
  }
  return result;
}

uint64_t sub_1004F2AC4(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  id v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = v5;
  v6[4] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1004FBCC8;
  *(void *)(v7 + 24) = v6;
  v14[4] = sub_10001AC84;
  v14[5] = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1003F44E4;
  v14[3] = &unk_1007B0570;
  id v8 = _Block_copy(v14);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F2C84(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = _swiftEmptyArrayStorage;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  id v7 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithKey:v8 ascending:0];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6D00;
  *(void *)(v10 + 32) = v9;
  v24[0] = v10;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_10080F990);
  id v11 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setSortDescriptors:isa, v24[0]];

  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [self andPredicateWithSubpredicates:v13];

  [v6 setPredicate:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v6;
  void v15[4] = &v26;
  v15[5] = v2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1004FC780;
  *(void *)(v16 + 24) = v15;
  v24[4] = sub_10001B3DC;
  v24[5] = v16;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_1003F44E4;
  v24[3] = &unk_1007B0660;
  id v17 = _Block_copy(v24);
  id v18 = a1;
  id v19 = v6;
  id v20 = v2;
  swift_retain();
  swift_release();
  [v18 performBlockAndWait:v17];

  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    unint64_t v23 = v26;
    swift_release();
    return (uint64_t)v23;
  }
  return result;
}

uint64_t sub_1004F31A8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  id v7 = NSPredicate.init(format:_:)();
  [v6 setPredicate:v7];

  NSString v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v6;
  v8[4] = v2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1004FC7F4;
  *(void *)(v9 + 24) = v8;
  void v15[4] = sub_10001B3DC;
  v15[5] = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_1003F44E4;
  v15[3] = &unk_1007B0750;
  uint64_t v10 = _Block_copy(v15);
  id v11 = a1;
  id v12 = v6;
  id v13 = v2;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

id sub_1004F33CC(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  Swift::String v292 = &v272[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  NSString v8 = &v272[-v7];
  __chkstk_darwin(v9);
  uint64_t v288 = &v272[-v10];
  __chkstk_darwin(v11);
  v289 = &v272[-v12];
  uint64_t v297 = (void *)type metadata accessor for URL();
  uint64_t v295 = *(v297 - 1);
  __chkstk_darwin(v297);
  id v294 = &v272[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v296 = &v272[-v15];
  uint64_t v16 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v16 - 8);
  id v290 = &v272[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v291 = &v272[-v19];
  __chkstk_darwin(v20);
  uint64_t v22 = &v272[-v21];
  __chkstk_darwin(v23);
  unint64_t v25 = &v272[-v24];
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = &v272[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  uint64_t v298 = &v272[-v31];
  *(void *)&double v33 = __chkstk_darwin(v32).n128_u64[0];
  uint64_t v35 = &v272[-v34];
  id v36 = [a1 recordSystemFields:v33];
  id v300 = a1;
  if (!v36)
  {
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_100026A54(v61, (uint64_t)qword_10080F970);
    uint64_t v62 = v1;
    id v63 = v300;
    uint64_t v64 = v62;
    id v65 = v63;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v66, v67)) {
      goto LABEL_58;
    }
    uint64_t v68 = swift_slowAlloc();
    *(void *)&long long v301 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136446466;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v304 = sub_10011EA98(v69, v70, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    id v71 = [v65 debugDescription];
    uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v74 = v73;

    uint64_t v304 = sub_10011EA98(v72, v74, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "%{public}s (getRecordFromJournalEntryAsset) Failed to get asset system fields: %s", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_55:

    return 0;
  }
  uint64_t v37 = v36;
  v285 = v8;
  uint64_t v299 = v26;
  uint64_t v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v40 = v39;

  id v41 = sub_1002D1F50(v38, v40);
  if (!v41)
  {
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    sub_100026A54(v75, (uint64_t)qword_10080F970);
    uint64_t v76 = v2;
    id v77 = v300;
    uint64_t v64 = v76;
    id v65 = v77;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v66, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      uint64_t v293 = v38;
      *(void *)&long long v301 = v80;
      *(_DWORD *)uint64_t v79 = 136446466;
      unint64_t v286 = v40;
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v304 = sub_10011EA98(v81, v82, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 12) = 2080;
      id v83 = [v65 debugDescription];
      uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v86 = v85;

      uint64_t v304 = sub_10011EA98(v84, v86, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v66, v78, "%{public}s (getRecordFromJournalEntryAsset) Failed to get record from systemfields for the asset: %s", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_32:
      sub_100040DD0(v293, v286);
      goto LABEL_55;
    }
    uint64_t v103 = v38;
LABEL_39:
    unint64_t v129 = v40;
LABEL_57:
    sub_100040DD0(v103, v129);
LABEL_58:

    return 0;
  }
  id v287 = v41;
  uint64_t v293 = v38;
  id v42 = sub_1004F9570(a1, *(void **)&v2[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate]);
  if (v42)
  {
    uint64_t v43 = v42;
    unint64_t v286 = v40;
    id v44 = [v42 id];
    if (v44)
    {
      uint64_t v45 = v44;
      uint64_t v46 = v29;
      uint64_t v47 = v298;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v48 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 32);
      uint64_t v49 = v47;
      uint64_t v50 = v299;
      v48(v25, v49, v299);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v25, 0, 1, v50);
      uint64_t v284 = v27;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v50) != 1)
      {
        uint64_t v51 = v299;
        v48(v35, v25, v299);
        uint64_t v52 = UUID.uuidString.getter();
        uint64_t v54 = v53;
        sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
        uint64_t v55 = qword_1007F6D38;
        swift_bridgeObjectRetain();
        BOOL v56 = v55 == -1;
        uint64_t v57 = v46;
        if (!v56) {
          swift_once();
        }
        id v58 = [*(id *)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
        v59._countAndFlagsBits = v52;
        v59._object = v54;
        Class isa = CKRecordID.init(recordName:zoneID:)(v59, (CKRecordZoneID)v58).super.isa;
        swift_bridgeObjectRelease();
        [objc_allocWithZone((Class)CKReference) initWithRecordID:isa action:1];

        CKRecord.subscript.setter();
        (*(void (**)(unsigned char *, uint64_t))(v284 + 8))(v35, v51);
        a1 = v300;
        uint64_t v29 = v57;
        goto LABEL_41;
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v299);
    }
    sub_10001457C((uint64_t)v25, &qword_100800950);
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v104 = type metadata accessor for Logger();
    sub_100026A54(v104, (uint64_t)qword_10080F970);
    uint64_t v105 = v2;
    id v106 = v300;
    unint64_t v107 = v105;
    id v108 = v106;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v66, v109))
    {
      uint64_t v110 = swift_slowAlloc();
      id v300 = (id)swift_slowAlloc();
      *(void *)&long long v301 = v300;
      *(_DWORD *)uint64_t v110 = 136446466;
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v111 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v304 = sub_10011EA98(v111, v112, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2080;
      id v113 = [v108 debugDescription];
      uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v116 = v115;

      uint64_t v304 = sub_10011EA98(v114, v116, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v66, v109, "%{public}s (getRecordFromJournalEntryAsset) Unable to get parentRecordUUID for an asset: %s", (uint8_t *)v110, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_54:
      sub_100040DD0(v293, v286);

      goto LABEL_55;
    }

    goto LABEL_32;
  }
  id v87 = [a1 assetType];
  if (!v87)
  {
LABEL_34:
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v117 = type metadata accessor for Logger();
    sub_100026A54(v117, (uint64_t)qword_10080F970);
    unint64_t v118 = v2;
    id v119 = v300;
    uint64_t v64 = v118;
    id v65 = v119;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v120 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v66, v120))
    {
      uint64_t v121 = swift_slowAlloc();
      *(void *)&long long v301 = swift_slowAlloc();
      *(_DWORD *)uint64_t v121 = 136446466;
      unint64_t v286 = v40;
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v122 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v304 = sub_10011EA98(v122, v123, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v121 + 12) = 2080;
      id v124 = [v65 debugDescription];
      uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v127 = v126;

      uint64_t v304 = sub_10011EA98(v125, v127, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v128 = "%{public}s (getRecordFromJournalEntryAsset) Unable to fetch parent entry by id for an asset: %s";
LABEL_53:
      _os_log_impl((void *)&_mh_execute_header, v66, v120, v128, (uint8_t *)v121, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_54;
    }

    uint64_t v103 = v293;
    goto LABEL_39;
  }
  uint64_t v88 = v87;
  uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v91 = v90;

  if (qword_1007F70F8 != -1) {
    swift_once();
  }
  if ((sub_100542090(v89, v91, qword_10083D698) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  uint64_t v284 = v27;
  uint64_t v92 = type metadata accessor for Logger();
  sub_100026A54(v92, (uint64_t)qword_10080F970);
  uint64_t v93 = v2;
  swift_bridgeObjectRetain();
  Class v94 = Logger.logObject.getter();
  os_log_type_t v95 = static os_log_type_t.default.getter();
  int v96 = v95;
  BOOL v97 = os_log_type_enabled(v94, v95);
  unint64_t v286 = v40;
  if (v97)
  {
    uint64_t v98 = swift_slowAlloc();
    uint64_t v280 = v89;
    uint64_t v99 = v98;
    id v283 = (id)swift_slowAlloc();
    *(void *)&long long v301 = v283;
    *(_DWORD *)uint64_t v99 = 136446466;
    uint64_t v278 = v99 + 4;
    os_log_t v282 = v94;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    LODWORD(v279) = v96;
    uint64_t v51 = v299;
    uint64_t v100 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v304 = sub_10011EA98(v100, v101, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v304 = sub_10011EA98(v280, v91, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_log_t v102 = v282;
    _os_log_impl((void *)&_mh_execute_header, v282, (os_log_type_t)v279, "%{public}s (getRecordFromJournalEntryAsset) syncing allowed type %s", (uint8_t *)v99, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v51 = v299;
  }
LABEL_41:
  id v130 = [a1 id];
  if (!v130)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v284 + 56))(v22, 1, 1, v51);
    goto LABEL_49;
  }
  Class v131 = v130;
  uint64_t v132 = v298;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v133 = v284;
  NSString v134 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v284 + 32);
  uint64_t v135 = v51;
  v134(v22, v132, v51);
  uint64_t v136 = v133 + 56;
  os_log_t v282 = *(os_log_t *)(v133 + 56);
  ((void (*)(unsigned char *, void, uint64_t, uint64_t))v282)(v22, 0, 1, v135);
  uint64_t v284 = v133;
  uint64_t v137 = v133 + 48;
  id v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
  if (v138((uint64_t)v22, 1, v135) == 1)
  {
LABEL_49:
    sub_10001457C((uint64_t)v22, &qword_100800950);
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v163 = type metadata accessor for Logger();
    sub_100026A54(v163, (uint64_t)qword_10080F970);
    v164 = v2;
    id v165 = v300;
    uint64_t v64 = v164;
    id v65 = v165;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v120 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v66, v120))
    {
      uint64_t v121 = swift_slowAlloc();
      *(void *)&long long v301 = swift_slowAlloc();
      *(_DWORD *)uint64_t v121 = 136446466;
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v166 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v304 = sub_10011EA98(v166, v167, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v121 + 12) = 2080;
      id v168 = [v65 debugDescription];
      uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v171 = v170;

      uint64_t v304 = sub_10011EA98(v169, v171, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v128 = "%{public}s (getRecordFromJournalEntryAsset) An asset doesn't have id: %s";
      goto LABEL_53;
    }

    uint64_t v103 = v293;
    unint64_t v129 = v286;
    goto LABEL_57;
  }
  v134(v29, v22, v135);
  id v139 = [a1 assetMetaData];
  uint64_t v281 = v29;
  if (!v139)
  {
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v173 = type metadata accessor for Logger();
    sub_100026A54(v173, (uint64_t)qword_10080F970);
    uint64_t v174 = v2;
    id v175 = v300;
    uint64_t v176 = v174;
    id v177 = v175;
    uint64_t v178 = Logger.logObject.getter();
    os_log_type_t v179 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v178, v179))
    {
      uint64_t v180 = swift_slowAlloc();
      id v300 = (id)swift_slowAlloc();
      *(void *)&long long v301 = v300;
      *(_DWORD *)uint64_t v180 = 136446466;
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v181 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v304 = sub_10011EA98(v181, v182, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v180 + 12) = 2080;
      id v183 = [v177 debugDescription];
      uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v185 = v284;
      unint64_t v187 = v186;

      uint64_t v304 = sub_10011EA98(v184, v187, (uint64_t *)&v301);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v178, v179, "%{public}s (getRecordFromJournalEntryAsset) An asset doesn't have assetMetadata: %s", (uint8_t *)v180, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100040DD0(v293, v286);

      (*(void (**)(unsigned char *, uint64_t))(v185 + 8))(v281, v299);
    }
    else
    {
      sub_100040DD0(v293, v286);

      (*(void (**)(unsigned char *, uint64_t))(v284 + 8))(v281, v135);
    }
    return 0;
  }
  id v140 = v139;
  uint64_t v275 = v136;
  uint64_t v276 = v138;
  uint64_t v277 = v137;
  uint64_t v280 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v142 = v141;

  type metadata accessor for AssetsFileManager();
  uint64_t v143 = UUID.uuidString.getter();
  id v144 = v296;
  sub_1000C595C(v143, v145);
  swift_bridgeObjectRelease();
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  uint64_t v146 = type metadata accessor for Logger();
  uint64_t v147 = sub_100026A54(v146, (uint64_t)qword_10080F970);
  v148 = v294;
  uint64_t v149 = v295;
  uint64_t v150 = v144;
  int v151 = v297;
  (*(void (**)(unsigned char *, unsigned char *, void *))(v295 + 16))(v294, v150, v297);
  Class v152 = v2;
  uint64_t v153 = Logger.logObject.getter();
  os_log_type_t v154 = static os_log_type_t.default.getter();
  int v155 = v154;
  BOOL v156 = os_log_type_enabled(v153, v154);
  unint64_t v279 = v142;
  if (v156)
  {
    uint64_t v157 = swift_slowAlloc();
    uint64_t v278 = v147;
    id v283 = v152;
    uint64_t v158 = v157;
    uint64_t v274 = swift_slowAlloc();
    *(void *)&long long v301 = v274;
    *(_DWORD *)uint64_t v158 = 136446466;
    int v273 = v155;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v159 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v304 = sub_10011EA98(v159, v160, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v158 + 12) = 2080;
    uint64_t v161 = URL.debugDescription.getter();
    uint64_t v304 = sub_10011EA98(v161, v162, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v294 = *(unsigned char **)(v149 + 8);
    ((void (*)(unsigned char *, void *))v294)(v148, v297);
    _os_log_impl((void *)&_mh_execute_header, v153, (os_log_type_t)v273, "%{public}s (getRecordFromJournalEntryAsset) Saving assetMetadata to url: %s", (uint8_t *)v158, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    Class v152 = (char *)v283;
    int v151 = v297;
    uint64_t v147 = v278;
    swift_slowDealloc();
  }
  else
  {

    id v294 = *(unsigned char **)(v149 + 8);
    ((void (*)(unsigned char *, void *))v294)(v148, v151);
  }

  v188 = v296;
  Data.write(to:options:)();
  id v283 = v152;
  uint64_t v278 = v147;
  uint64_t v189 = a1;
  id v190 = objc_allocWithZone((Class)CKAsset);
  URL._bridgeToObjectiveC()(v191);
  v193 = v192;
  id v194 = [v190 initWithFileURL:v192];

  id v195 = v194;
  id v196 = v287;
  CKRecord.subscript.setter();

  ((void (*)(unsigned char *, void *))v294)(v188, v151);
  id v197 = [v196 encryptedValues];
  id v198 = [v189 title];
  if (v198)
  {
    uint64_t v199 = v198;
    uint64_t v200 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v202 = v201;

    *((void *)&v302 + 1) = &type metadata for Data;
    uint64_t v303 = &protocol witness table for Data;
    *(void *)&long long v301 = v200;
    *((void *)&v301 + 1) = v202;
  }
  else
  {
    uint64_t v303 = 0;
    long long v301 = 0u;
    long long v302 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v203 = [v287 encryptedValues];
  id v204 = [v300 assetType];
  if (v204)
  {
    Swift::Int v205 = v204;
    uint64_t v206 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v208 = v207;

    *((void *)&v302 + 1) = &type metadata for String;
    uint64_t v303 = &protocol witness table for String;
    *(void *)&long long v301 = v206;
    *((void *)&v301 + 1) = v208;
  }
  else
  {
    uint64_t v303 = 0;
    long long v301 = 0u;
    long long v302 = 0u;
  }
  uint64_t v209 = (uint64_t)v289;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v210 = [v287 encryptedValues];
  id v211 = [v300 createdDate];
  if (v211)
  {
    unint64_t v212 = v211;
    uint64_t v213 = (uint64_t)v288;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v214 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v213, 0, 1, v214);
  }
  else
  {
    uint64_t v214 = type metadata accessor for Date();
    uint64_t v213 = (uint64_t)v288;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v288, 1, 1, v214);
  }
  sub_10002C4EC(v213, v209, (uint64_t *)&unk_1007FC470);
  type metadata accessor for Date();
  uint64_t v215 = *(void *)(v214 - 8);
  uint64_t v216 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
  unsigned int v217 = v216(v209, 1, v214);
  uint64_t v297 = v216;
  if (v217 == 1)
  {
    sub_10001457C(v209, (uint64_t *)&unk_1007FC470);
    long long v301 = 0u;
    long long v302 = 0u;
    uint64_t v303 = 0;
  }
  else
  {
    *((void *)&v302 + 1) = v214;
    uint64_t v303 = &protocol witness table for Date;
    unint64_t v218 = sub_100062E54((uint64_t *)&v301);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v215 + 32))(v218, v209, v214);
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v219 = v287;
  id v220 = [v287 encryptedValues];
  swift_getObjectType();
  unsigned __int16 v221 = (unsigned __int16)[v300 minimumSupportedAppVersion];
  *((void *)&v302 + 1) = &type metadata for Int16;
  uint64_t v303 = &protocol witness table for Int16;
  LOWORD(v301) = v221;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v222 = [v219 encryptedValues];
  if (*((unsigned char *)v283 + OBJC_IVAR____TtC7Journal13CoreDataStack_modelVersion))
  {
    if (*((unsigned char *)v283 + OBJC_IVAR____TtC7Journal13CoreDataStack_modelVersion) == 1)
    {
      unint64_t v223 = 0xE200000000000000;
      uint64_t v224 = 13174;
    }
    else
    {
      unint64_t v223 = 0xE500000000000000;
      uint64_t v224 = 0x726568746FLL;
    }
  }
  else
  {
    unint64_t v223 = 0xE200000000000000;
    uint64_t v224 = 12918;
  }
  swift_getObjectType();
  *((void *)&v302 + 1) = &type metadata for String;
  uint64_t v303 = &protocol witness table for String;
  *(void *)&long long v301 = v224;
  *((void *)&v301 + 1) = v223;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v225 = [v287 encryptedValues];
  id v226 = [v300 source];
  if (v226)
  {
    uint64_t v227 = v226;
    uint64_t v228 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v230 = v229;

    *((void *)&v302 + 1) = &type metadata for String;
    uint64_t v303 = &protocol witness table for String;
    *(void *)&long long v301 = v228;
    *((void *)&v301 + 1) = v230;
  }
  else
  {
    uint64_t v303 = 0;
    long long v301 = 0u;
    long long v302 = 0u;
  }
  uint64_t v231 = (uint64_t)v291;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  [v287 encryptedValues];
  id v232 = [v300 suggestionId];
  if (v232)
  {
    v233 = v232;
    uint64_t v234 = (uint64_t)v290;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v235 = 0;
  }
  else
  {
    uint64_t v235 = 1;
    uint64_t v234 = (uint64_t)v290;
  }
  uint64_t v236 = v299;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v282)(v234, v235, 1, v299);
  sub_10002C4EC(v234, v231, &qword_100800950);
  if (v276(v231, 1, v236))
  {
    sub_10001457C(v231, &qword_100800950);
    long long v301 = 0u;
    long long v302 = 0u;
    uint64_t v303 = 0;
  }
  else
  {
    uint64_t v237 = v284;
    uint64_t v238 = v298;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v284 + 16))(v298, v231, v236);
    sub_10001457C(v231, &qword_100800950);
    uint64_t v239 = UUID.uuidString.getter();
    uint64_t v241 = v240;
    (*(void (**)(unsigned char *, uint64_t))(v237 + 8))(v238, v236);
    *((void *)&v302 + 1) = &type metadata for String;
    uint64_t v303 = &protocol witness table for String;
    *(void *)&long long v301 = v239;
    *((void *)&v301 + 1) = v241;
  }
  uint64_t v242 = (uint64_t)v292;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v243 = [v287 encryptedValues];
  id v244 = [v300 suggestionDate];
  if (v244)
  {
    __int16 v245 = v244;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v246 = 0;
  }
  else
  {
    uint64_t v246 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v215 + 56))(v242, v246, 1, v214);
  uint64_t v247 = (uint64_t)v285;
  sub_10002C4EC(v242, (uint64_t)v285, (uint64_t *)&unk_1007FC470);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v297)(v247, 1, v214) == 1)
  {
    sub_10001457C(v247, (uint64_t *)&unk_1007FC470);
    long long v301 = 0u;
    long long v302 = 0u;
    uint64_t v303 = 0;
  }
  else
  {
    *((void *)&v302 + 1) = v214;
    uint64_t v303 = &protocol witness table for Date;
    id v248 = sub_100062E54((uint64_t *)&v301);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v215 + 32))(v248, v247, v214);
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v249 = v287;
  id v250 = [v287 encryptedValues];
  swift_getObjectType();
  id v251 = v300;
  unsigned __int8 v252 = [v300 isSlim];
  *((void *)&v302 + 1) = &type metadata for Bool;
  uint64_t v303 = &protocol witness table for Bool;
  LOBYTE(v301) = v252;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v253 = [v249 encryptedValues];
  id v254 = [v251 osVersion];
  if (v254)
  {
    uint64_t v255 = v254;
    uint64_t v256 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v258 = v257;

    *((void *)&v302 + 1) = &type metadata for String;
    uint64_t v303 = &protocol witness table for String;
    *(void *)&long long v301 = v256;
    *((void *)&v301 + 1) = v258;
  }
  else
  {
    uint64_t v303 = 0;
    long long v301 = 0u;
    long long v302 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v259 = v283;
  id v260 = v287;
  id v261 = v259;
  id v262 = v260;
  int v263 = Logger.logObject.getter();
  os_log_type_t v264 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v263, v264))
  {
    uint64_t v265 = swift_slowAlloc();
    id v300 = (id)swift_slowAlloc();
    *(void *)&long long v301 = v300;
    *(_DWORD *)uint64_t v265 = 136446466;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v266 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v304 = sub_10011EA98(v266, v267, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v265 + 12) = 2080;
    uint64_t v298 = (unsigned char *)(v265 + 14);
    id v268 = [v262 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v269 = static String._fromSubstring(_:)();
    unint64_t v271 = v270;
    swift_bridgeObjectRelease();
    uint64_t v304 = sub_10011EA98(v269, v271, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v263, v264, "%{public}s (getRecordFromJournalEntryAsset) CKRecord Recreated from asset:\n%s", (uint8_t *)v265, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100040DD0(v293, v286);
    sub_100040DD0(v280, v279);
  }
  else
  {
    sub_100040DD0(v293, v286);
    sub_100040DD0(v280, v279);
  }
  (*(void (**)(unsigned char *, uint64_t))(v284 + 8))(v281, v299);
  return v287;
}

uint64_t sub_1004F5D38(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = v5;
  v6[4] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1004FC760;
  *(void *)(v7 + 24) = v6;
  v14[4] = sub_10001B3DC;
  v14[5] = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1003F44E4;
  v14[3] = &unk_1007B05E8;
  NSString v8 = _Block_copy(v14);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F5EF8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080F970);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080F970);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004F5FC0()
{
  Swift::Int v0 = sub_1000F910C((uint64_t)&off_1007942B8);
  uint64_t result = swift_arrayDestroy();
  qword_10083D698 = v0;
  return result;
}

void sub_1004F600C(uint64_t a1, uint64_t a2, void **a3)
{
  sub_1002A4450(0xD000000000000016, 0x800000010069FB00);
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v4 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  id v7 = v6;
  swift_bridgeObjectRelease();
  NSString v8 = *a3;
  *a3 = v7;
}

void sub_1004F63F8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v310 = a4;
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v7 - 8);
  uint64_t v293 = (char *)&v282 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v295 = type metadata accessor for URL();
  uint64_t v296 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  unint64_t v286 = (char *)&v282 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v292 = (char *)&v282 - v11;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  uint64_t v299 = (void (*)(char *, uint64_t, uint64_t))((char *)&v282 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v298 = (char *)&v282 - v15;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v307 = *(void *)(v16 - 8);
  unint64_t v308 = (uint8_t *)v16;
  __chkstk_darwin(v16);
  id v294 = (char *)&v282 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v291 = (char *)&v282 - v19;
  __chkstk_darwin(v20);
  v289 = (char *)&v282 - v21;
  uint64_t v22 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v22 - 8);
  id v290 = (char *)&v282 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v282 - v25;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v311 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v284 = (char *)&v282 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v285 = (char *)&v282 - v30;
  __chkstk_darwin(v31);
  id v287 = (char *)&v282 - v32;
  __chkstk_darwin(v33);
  long long v302 = (char *)&v282 - v34;
  __chkstk_darwin(v35);
  long long v301 = (char *)&v282 - v36;
  __chkstk_darwin(v37);
  id v300 = (char *)&v282 - v38;
  __chkstk_darwin(v39);
  uint64_t v297 = (char *)&v282 - v40;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v282 - v42;
  __chkstk_darwin(v44);
  uint64_t v288 = (char *)&v282 - v45;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v282 - v47;
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v282 - v50;
  sub_1002A4450(0xD00000000000001BLL, 0x800000010069FBD0);
  swift_beginAccess();
  uint64_t v303 = a1 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v53 = (void *)Strong;
    id v54 = [a2 recordID];
    id v55 = [v54 recordName];
    v305 = a3;
    id v56 = v55;

    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v309 = v27;
    uint64_t v59 = v58;

    id v60 = (id)sub_1004ECAB0(v57, v59, v305);
    uint64_t v27 = v309;
    swift_bridgeObjectRelease();
    if (v60)
    {
      uint64_t v61 = CKRecord.subscript.getter();
      uint64_t v304 = a2;
      id v306 = v60;
      if (v61)
      {
        self;
        uint64_t v62 = (void *)swift_dynamicCastObjCClass();
        if (v62)
        {
          id v63 = [v62 recordID];
          id v64 = [v63 recordName];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          UUID.init(uuidString:)();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v311 + 48))(v26, 1, v27) == 1)
          {
            Class isa = 0;
          }
          else
          {
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            (*(void (**)(char *, uint64_t))(v311 + 8))(v26, v27);
          }
          [v60 setParentID:isa];
          swift_unknownObjectRelease();

          goto LABEL_21;
        }
        swift_unknownObjectRelease();
      }
      if (qword_1007F70F0 != -1) {
        swift_once();
      }
      uint64_t v79 = type metadata accessor for Logger();
      sub_100026A54(v79, (uint64_t)qword_10080F970);
      (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v48, v310, v27);
      id v80 = a2;
      uint64_t v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = swift_slowAlloc();
        uint64_t v84 = (void *)swift_slowAlloc();
        uint64_t v313 = swift_slowAlloc();
        *(_DWORD *)uint64_t v83 = 136446466;
        id v283 = v43;
        sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v312 = sub_10011EA98(v85, v86, &v313);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v311 + 8))(v48, v309);
        *(_WORD *)(v83 + 12) = 2112;
        uint64_t v312 = (uint64_t)v80;
        id v87 = v80;
        id v60 = v306;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v84 = v80;

        uint64_t v43 = v283;
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "%{public}s (updateJournalEntryAssetData) Unable to update parentReference for asset for a record: %@", (uint8_t *)v83, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        uint64_t v27 = v309;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v311 + 8))(v48, v27);
      }
      a2 = v304;
LABEL_21:
      id v88 = [v60 recordSystemFields];
      if (!v88)
      {
LABEL_46:
        unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        id v117 = [a2 encryptedValues];
        NSString v118 = String._bridgeToObjectiveC()();
        id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        id v120 = [v117 objectForKeyedSubscript:v118];
        swift_unknownObjectRelease();

        if (v120 && (uint64_t v312 = (uint64_t)v120, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          NSString v121 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v60 setAssetType:v121];
        }
        else
        {
          if (qword_1007F70F0 != -1) {
            swift_once();
          }
          uint64_t v122 = type metadata accessor for Logger();
          sub_100026A54(v122, (uint64_t)qword_10080F970);
          (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v43, v310, v27);
          id v123 = a2;
          id v124 = Logger.logObject.getter();
          os_log_type_t v125 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v124, v125))
          {
            uint64_t v126 = swift_slowAlloc();
            unint64_t v127 = (void *)swift_slowAlloc();
            uint64_t v313 = swift_slowAlloc();
            *(_DWORD *)uint64_t v126 = 136446466;
            sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v128 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v312 = sub_10011EA98(v128, v129, &v313);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v311 + 8))(v43, v309);
            *(_WORD *)(v126 + 12) = 2112;
            uint64_t v312 = (uint64_t)v123;
            id v130 = v123;
            a2 = v304;
            id v60 = v306;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *unint64_t v127 = v123;

            _os_log_impl((void *)&_mh_execute_header, v124, v125, "%{public}s (updateJournalEntryAssetData) unable to get assetType from asset record:%@", (uint8_t *)v126, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            uint64_t v27 = v309;
            swift_slowDealloc();
            swift_arrayDestroy();
            id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v311 + 8))(v43, v27);
          }
          unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        }
        id v131 = [a2 encryptedValues];
        NSString v132 = String._bridgeToObjectiveC()();
        id v133 = [v131 v119[37] v132];
        swift_unknownObjectRelease();

        NSString v134 = v308;
        if (v133)
        {
          uint64_t v313 = (uint64_t)v133;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v135 = (uint64_t)v298;
          int v136 = swift_dynamicCast();
          uint64_t v137 = v307;
          uint64_t v288 = *(char **)(v307 + 56);
          ((void (*)(uint64_t, void, uint64_t, uint8_t *))v288)(v135, v136 ^ 1u, 1, v134);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v137 + 48))(v135, 1, v134) != 1)
          {
            id v138 = v289;
            (*(void (**)(char *, uint64_t, uint8_t *))(v137 + 32))(v289, v135, v134);
            Class v139 = Date._bridgeToObjectiveC()().super.isa;
            [v60 setCreatedDate:v139];

            (*(void (**)(char *, uint8_t *))(v137 + 8))(v138, v134);
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v135 = (uint64_t)v298;
          uint64_t v288 = *(char **)(v307 + 56);
          ((void (*)(char *, uint64_t, uint64_t, uint8_t *))v288)(v298, 1, 1, v308);
        }
        sub_10001457C(v135, (uint64_t *)&unk_1007FC470);
        id v140 = v297;
        if (qword_1007F70F0 != -1) {
          swift_once();
        }
        uint64_t v141 = type metadata accessor for Logger();
        sub_100026A54(v141, (uint64_t)qword_10080F970);
        (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v140, v310, v27);
        id v142 = a2;
        uint64_t v143 = Logger.logObject.getter();
        os_log_type_t v144 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v143, v144))
        {
          uint64_t v145 = swift_slowAlloc();
          uint64_t v146 = (void *)swift_slowAlloc();
          uint64_t v313 = swift_slowAlloc();
          *(_DWORD *)uint64_t v145 = 136446466;
          sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v147 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v312 = sub_10011EA98(v147, v148, &v313);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v311 + 8))(v140, v309);
          *(_WORD *)(v145 + 12) = 2112;
          uint64_t v312 = (uint64_t)v142;
          id v149 = v142;
          a2 = v304;
          unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v146 = v142;

          _os_log_impl((void *)&_mh_execute_header, v143, v144, "%{public}s (updateJournalEntryAssetData) unable to get createdDate from asset record:%@", (uint8_t *)v145, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          uint64_t v27 = v309;
          swift_slowDealloc();
          swift_arrayDestroy();
          id v60 = v306;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v311 + 8))(v140, v27);
        }
        id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_65:
        id v150 = [a2 v116[36]];
        NSString v151 = String._bridgeToObjectiveC()();
        id v152 = [v150 v119[37] v151];
        swift_unknownObjectRelease();

        uint64_t v153 = v300;
        if (v152 && (uint64_t v313 = (uint64_t)v152, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          [v60 setMinimumSupportedAppVersion:(__int16)v312];
        }
        else
        {
          if (qword_1007F70F0 != -1) {
            swift_once();
          }
          uint64_t v154 = type metadata accessor for Logger();
          sub_100026A54(v154, (uint64_t)qword_10080F970);
          (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v153, v310, v27);
          id v155 = a2;
          BOOL v156 = Logger.logObject.getter();
          os_log_type_t v157 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v156, v157))
          {
            uint64_t v158 = swift_slowAlloc();
            uint64_t v159 = (void *)swift_slowAlloc();
            uint64_t v313 = swift_slowAlloc();
            *(_DWORD *)uint64_t v158 = 136446466;
            sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v160 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v312 = sub_10011EA98(v160, v161, &v313);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v311 + 8))(v153, v309);
            *(_WORD *)(v158 + 12) = 2112;
            uint64_t v312 = (uint64_t)v155;
            id v162 = v155;
            a2 = v304;
            unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v159 = v155;

            _os_log_impl((void *)&_mh_execute_header, v156, v157, "%{public}s (updateJournalEntryAssetData) unable to get minimumSupportedAppVersion from asset record:%@", (uint8_t *)v158, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            uint64_t v27 = v309;
            swift_slowDealloc();
            swift_arrayDestroy();
            id v60 = v306;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v311 + 8))(v153, v27);
          }
          id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        }
        id v163 = [a2 v116[36]];
        NSString v164 = String._bridgeToObjectiveC()();
        id v165 = [v163 v119[37] v164];
        swift_unknownObjectRelease();

        uint64_t v166 = v301;
        if (v165 && (uint64_t v312 = (uint64_t)v165, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          NSString v167 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v60 setSource:v167];
        }
        else
        {
          if (qword_1007F70F0 != -1) {
            swift_once();
          }
          uint64_t v168 = type metadata accessor for Logger();
          sub_100026A54(v168, (uint64_t)qword_10080F970);
          (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v166, v310, v27);
          id v169 = a2;
          unint64_t v170 = Logger.logObject.getter();
          os_log_type_t v171 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v170, v171))
          {
            uint64_t v172 = swift_slowAlloc();
            uint64_t v173 = (void *)swift_slowAlloc();
            uint64_t v313 = swift_slowAlloc();
            *(_DWORD *)uint64_t v172 = 136446466;
            sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v174 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v312 = sub_10011EA98(v174, v175, &v313);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v311 + 8))(v166, v309);
            *(_WORD *)(v172 + 12) = 2112;
            uint64_t v312 = (uint64_t)v169;
            id v176 = v169;
            a2 = v304;
            unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v173 = v169;

            _os_log_impl((void *)&_mh_execute_header, v170, v171, "%{public}s (updateJournalEntryAssetData) unable to get source from asset record:%@", (uint8_t *)v172, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            uint64_t v27 = v309;
            swift_slowDealloc();
            swift_arrayDestroy();
            id v60 = v306;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v311 + 8))(v166, v27);
          }
          id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        }
        id v177 = [a2 v116[36]];
        NSString v178 = String._bridgeToObjectiveC()();
        id v179 = [v177 v119[37] v178];
        swift_unknownObjectRelease();

        if (v179)
        {
          uint64_t v312 = (uint64_t)v179;
          sub_100010218((uint64_t *)&unk_1008060F0);
          if (swift_dynamicCast())
          {
            uint64_t v180 = v313;
            unint64_t v181 = v314;
            Class v182 = Data._bridgeToObjectiveC()().super.isa;
            [v60 setTitle:v182];

            sub_100040DD0(v180, v181);
          }
        }
        id v183 = [a2 v116[36]];
        NSString v184 = String._bridgeToObjectiveC()();
        id v185 = [v183 v119[37] v184];
        swift_unknownObjectRelease();

        if (v185)
        {
          uint64_t v312 = (uint64_t)v185;
          sub_100010218((uint64_t *)&unk_1008060F0);
          if (swift_dynamicCast())
          {
            unint64_t v186 = v290;
            UUID.init(uuidString:)();
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v311 + 48))(v186, 1, v27) == 1)
            {
              Class v187 = 0;
            }
            else
            {
              Class v187 = UUID._bridgeToObjectiveC()().super.isa;
              (*(void (**)(char *, uint64_t))(v311 + 8))(v186, v27);
            }
            [v60 setSuggestionId:v187];
          }
        }
        id v188 = [a2 v116[36]];
        NSString v189 = String._bridgeToObjectiveC()();
        id v190 = [v188 v119[37] v189];
        swift_unknownObjectRelease();

        if (v190)
        {
          uint64_t v313 = (uint64_t)v190;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v191 = (uint64_t)v299;
          v192 = v308;
          int v193 = swift_dynamicCast();
          uint64_t v194 = v307;
          ((void (*)(uint64_t, void, uint64_t, uint8_t *))v288)(v191, v193 ^ 1u, 1, v192);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v194 + 48))(v191, 1, v192) != 1)
          {
            id v195 = v291;
            (*(void (**)(char *, uint64_t, uint8_t *))(v194 + 32))(v291, v191, v192);
            Class v196 = Date._bridgeToObjectiveC()().super.isa;
            [v60 setSuggestionDate:v196];

            (*(void (**)(char *, uint8_t *))(v194 + 8))(v195, v192);
LABEL_97:
            id v197 = [a2 v116[36]];
            NSString v198 = String._bridgeToObjectiveC()();
            id v199 = [v197 v119[37] v198];
            swift_unknownObjectRelease();

            if (v199)
            {
              uint64_t v313 = (uint64_t)v199;
              sub_100010218((uint64_t *)&unk_1008060F0);
              if (swift_dynamicCast()) {
                [v60 setIsSlim:v312];
              }
            }
            id v200 = [a2 v116[36]];
            NSString v201 = String._bridgeToObjectiveC()();
            id v202 = [v200 v119[37] v201];
            swift_unknownObjectRelease();

            id v203 = v302;
            if (v202)
            {
              uint64_t v312 = (uint64_t)v202;
              sub_100010218((uint64_t *)&unk_1008060F0);
              if (swift_dynamicCast())
              {
                NSString v204 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v60 setOsVersion:v204];
              }
            }
            uint64_t v205 = CKRecord.subscript.getter();
            if (v205)
            {
              uint64_t v206 = v205;
              self;
              uint64_t v207 = (char *)swift_dynamicCastObjCClass();
              if (v207)
              {
                uint64_t v208 = v207;
                id v209 = [v207 fileURL];
                if (v209)
                {
                  id v210 = v209;
                  long long v302 = v208;
                  id v211 = v286;
                  static URL._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v212 = v296;
                  uint64_t v213 = *(void (**)(char *, char *, uint64_t))(v296 + 32);
                  uint64_t v214 = (uint64_t)v293;
                  uint64_t v215 = v211;
                  uint64_t v216 = v295;
                  v213(v293, v215, v295);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v212 + 56))(v214, 0, 1, v216);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v212 + 48))(v214, 1, v216) != 1)
                  {
                    uint64_t v309 = v206;
                    v213(v292, (char *)v214, v216);
                    if (qword_1007F70F0 != -1) {
                      swift_once();
                    }
                    uint64_t v217 = type metadata accessor for Logger();
                    uint64_t v218 = sub_100026A54(v217, (uint64_t)qword_10080F970);
                    uint64_t v219 = v311;
                    id v220 = v285;
                    uint64_t v299 = *(void (**)(char *, uint64_t, uint64_t))(v311 + 16);
                    v299(v285, v310, v27);
                    id v300 = (char *)v218;
                    unsigned __int16 v221 = Logger.logObject.getter();
                    uint64_t v222 = v27;
                    os_log_type_t v223 = static os_log_type_t.default.getter();
                    if (os_log_type_enabled(v221, v223))
                    {
                      uint64_t v224 = (uint8_t *)swift_slowAlloc();
                      uint64_t v313 = swift_slowAlloc();
                      *(_DWORD *)uint64_t v224 = 136446210;
                      long long v301 = (char *)(v224 + 4);
                      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                      uint64_t v225 = dispatch thunk of CustomStringConvertible.description.getter();
                      uint64_t v312 = sub_10011EA98(v225, v226, &v313);
                      a2 = v304;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)();
                      swift_bridgeObjectRelease();
                      long long v301 = *(char **)(v311 + 8);
                      ((void (*)(char *, uint64_t))v301)(v220, v222);
                      _os_log_impl((void *)&_mh_execute_header, v221, v223, "%{public}s (updateJournalEntryAssetData) Processing assetMetadataAsset parameter", v224, 0xCu);
                      swift_arrayDestroy();
                      unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
                      swift_slowDealloc();
                      swift_slowDealloc();
                    }
                    else
                    {
                      long long v301 = *(char **)(v219 + 8);
                      ((void (*)(char *, uint64_t))v301)(v220, v222);
                    }

                    uint64_t v249 = Data.init(contentsOf:options:)();
                    unint64_t v251 = v250;
                    Class v252 = Data._bridgeToObjectiveC()().super.isa;
                    sub_100040DD0(v249, v251);
                    [v306 setAssetMetaData:v252];

                    if (qword_1007F6D38 != -1) {
                      swift_once();
                    }
                    id v253 = [a2 recordID];
                    id v254 = [v253 recordName];

                    Swift::Int v255 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    Swift::Int v257 = v256;

                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    sub_10054BEBC(&v312, v255, v257);
                    swift_endAccess();
                    swift_unknownObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v296 + 8))(v292, v216);
                    id v60 = v306;
                    id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_131:
                    id v258 = [a2 v116[36]];
                    NSString v259 = String._bridgeToObjectiveC()();
                    id v260 = [v258 v119[37] v259];
                    swift_unknownObjectRelease();

                    id v261 = v305;
                    if (v260)
                    {
                      uint64_t v312 = (uint64_t)v260;
                      sub_100010218((uint64_t *)&unk_1008060F0);
                      if (swift_dynamicCast())
                      {
                        uint64_t v262 = v313;
                        unint64_t v263 = v314;
                        id v264 = [v60 assetMetaData];
                        if (v264)
                        {
                          uint64_t v265 = v264;
                          uint64_t v266 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                          unint64_t v268 = v267;

                          unint64_t v269 = v268;
                          id v60 = v306;
                          sub_100040DD0(v266, v269);
                        }
                        else
                        {
                          Class v270 = Data._bridgeToObjectiveC()().super.isa;
                          [v60 setAssetMetaData:v270];
                        }
                        sub_100040DD0(v262, v263);
                      }
                    }
                    id v271 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
                    [a2 encodeSystemFieldsWithCoder:v271];
                    id v272 = [v271 encodedData];
                    uint64_t v273 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                    unint64_t v275 = v274;

                    Class v276 = Data._bridgeToObjectiveC()().super.isa;
                    [v60 setRecordSystemFields:v276];

                    [v60 setIsUploadedToCloud:1];
                    swift_beginAccess();
                    uint64_t v277 = swift_unknownObjectWeakLoadStrong();
                    if (v277 && (uint64_t v278 = (void *)v277, v279 = sub_1004F9570(v60, v261), v278, v279))
                    {
                      uint64_t v280 = v294;
                      Date.init()();
                      Class v281 = Date._bridgeToObjectiveC()().super.isa;
                      (*(void (**)(char *, uint8_t *))(v307 + 8))(v280, v308);
                      [v279 setUpdatedDate:v281];

                      [v279 addAssetsObject:v60];
                      sub_100040DD0(v273, v275);
                    }
                    else
                    {

                      sub_100040DD0(v273, v275);
                    }
                    return;
                  }
                }
                else
                {
                  uint64_t v214 = (uint64_t)v293;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v296 + 56))(v293, 1, 1, v295);
                }
                sub_10001457C(v214, (uint64_t *)&unk_100800A60);
                if (qword_1007F70F0 != -1) {
                  swift_once();
                }
                uint64_t v236 = type metadata accessor for Logger();
                sub_100026A54(v236, (uint64_t)qword_10080F970);
                uint64_t v237 = v287;
                (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v287, v310, v27);
                uint64_t v238 = Logger.logObject.getter();
                os_log_type_t v239 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v238, v239))
                {
                  uint64_t v240 = (uint8_t *)swift_slowAlloc();
                  uint64_t v310 = swift_slowAlloc();
                  uint64_t v313 = v310;
                  uint64_t v309 = v206;
                  uint64_t v241 = v311;
                  *(_DWORD *)uint64_t v240 = 136446210;
                  sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v242 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v312 = sub_10011EA98(v242, v243, &v313);
                  unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v241 + 8))(v237, v27);
                  _os_log_impl((void *)&_mh_execute_header, v238, v239, "%{public}s (updateJournalEntryAssetData) ckAsset.fileURL is nil will be downloaded later", v240, 0xCu);
                  swift_arrayDestroy();
                  id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  (*(void (**)(char *, uint64_t))(v311 + 8))(v237, v27);
                }

                [v306 setAssetMetaData:0];
                if (qword_1007F6D38 != -1) {
                  swift_once();
                }
                id v244 = [a2 recordID];
                id v245 = [v244 recordName];

                Swift::Int v246 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                Swift::Int v248 = v247;

                swift_beginAccess();
                swift_bridgeObjectRetain();
                sub_10054BEBC(&v312, v246, v248);
                swift_endAccess();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                id v60 = v306;
                goto LABEL_131;
              }
              swift_unknownObjectRelease();
              id v60 = v306;
            }
            if (qword_1007F70F0 != -1) {
              swift_once();
            }
            uint64_t v227 = type metadata accessor for Logger();
            sub_100026A54(v227, (uint64_t)qword_10080F970);
            (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v203, v310, v27);
            uint64_t v228 = Logger.logObject.getter();
            os_log_type_t v229 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v228, v229))
            {
              uint64_t v230 = v203;
              uint64_t v231 = (uint8_t *)swift_slowAlloc();
              uint64_t v313 = swift_slowAlloc();
              *(_DWORD *)uint64_t v231 = 136446210;
              uint64_t v232 = v311;
              sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v233 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v312 = sub_10011EA98(v233, v234, &v313);
              unint64_t v116 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
              id v119 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v235 = v230;
              a2 = v304;
              (*(void (**)(char *, uint64_t))(v232 + 8))(v235, v27);
              _os_log_impl((void *)&_mh_execute_header, v228, v229, "%{public}s (updateJournalEntryAssetData) ckAsset is nil", v231, 0xCu);
              swift_arrayDestroy();
              id v60 = v306;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v311 + 8))(v203, v27);
            }

            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v191 = (uint64_t)v299;
          ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint8_t *))v288)(v299, 1, 1, v308);
        }
        sub_10001457C(v191, (uint64_t *)&unk_1007FC470);
        goto LABEL_97;
      }
      uint64_t v89 = v88;
      uint64_t v90 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v92 = v91;

      id v93 = sub_1002D1F50(v90, v92);
      if (!v93)
      {
LABEL_45:
        sub_100040DD0(v90, v92);
        goto LABEL_46;
      }
      Class v94 = v93;
      id v95 = [a2 recordChangeTag];
      if (v95)
      {
        int v96 = v95;
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v99 = v98;
      }
      else
      {
        uint64_t v97 = 0;
        uint64_t v99 = 0;
      }
      id v100 = [v94 recordChangeTag];
      if (v100)
      {
        unint64_t v101 = v100;
        uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v104 = v103;

        id v60 = v306;
        if (v99)
        {
          a2 = v304;
          if (v104)
          {
            if (v97 == v102 && v99 == v104)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_37:
              if (qword_1007F70F0 != -1) {
                swift_once();
              }
              uint64_t v106 = type metadata accessor for Logger();
              sub_100026A54(v106, (uint64_t)qword_10080F970);
              unint64_t v107 = v288;
              uint64_t v108 = v309;
              (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v288, v310, v309);
              os_log_type_t v109 = Logger.logObject.getter();
              os_log_type_t v110 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v109, v110))
              {
                uint64_t v111 = (uint8_t *)swift_slowAlloc();
                uint64_t v112 = swift_slowAlloc();
                uint64_t v113 = v311;
                uint64_t v310 = v112;
                uint64_t v313 = v112;
                *(_DWORD *)uint64_t v111 = 136446210;
                unint64_t v308 = v111 + 4;
                sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                uint64_t v114 = dispatch thunk of CustomStringConvertible.description.getter();
                uint64_t v312 = sub_10011EA98(v114, v115, &v313);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v113 + 8))(v288, v108);
                _os_log_impl((void *)&_mh_execute_header, v109, v110, "%{public}s (updateJournalEntryAssetData) Local and Remote change tags are the same, nothing to update, ignoring...", v111, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                sub_100040DD0(v90, v92);
              }
              else
              {
                sub_100040DD0(v90, v92);
                (*(void (**)(char *, uint64_t))(v311 + 8))(v107, v108);
              }
              return;
            }
            char v105 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v105) {
              goto LABEL_37;
            }

            goto LABEL_44;
          }
        }
        else
        {
          a2 = v304;
          if (!v104) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        a2 = v304;
        id v60 = v306;
        if (!v99) {
          goto LABEL_37;
        }
      }

      swift_bridgeObjectRelease();
LABEL_44:
      uint64_t v27 = v309;
      goto LABEL_45;
    }
  }
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  uint64_t v66 = type metadata accessor for Logger();
  sub_100026A54(v66, (uint64_t)qword_10080F970);
  (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(v51, v310, v27);
  id v67 = a2;
  uint64_t v68 = Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = swift_slowAlloc();
    uint64_t v310 = swift_slowAlloc();
    uint64_t v313 = v310;
    *(_DWORD *)uint64_t v70 = 136446466;
    uint64_t v71 = v311;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v312 = sub_10011EA98(v72, v73, &v313);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v27);
    *(_WORD *)(v70 + 12) = 2080;
    id v74 = [v67 recordID];
    id v75 = [v74 recordName];

    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v78 = v77;

    uint64_t v312 = sub_10011EA98(v76, v78, &v313);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "%{public}s (updateJournalEntryAssetData) unable to get asset with id: %s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v311 + 8))(v51, v27);
  }
}

id sub_1004F9570(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  uint64_t v16 = (char *)&v39 - v15;
  id v17 = [a1 entry:v14];
  if (v17) {
    return v17;
  }
  id v19 = [a1 parentID];
  if (v19)
  {
    uint64_t v20 = v19;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v21(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v21(v16, v8, v9);
      uint64_t v22 = UUID.uuidString.getter();
      uint64_t v18 = sub_10056A2E0(v22, v23, a2);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
      return (id)v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_10001457C((uint64_t)v8, &qword_100800950);
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100026A54(v24, (uint64_t)qword_10080F970);
  id v25 = v3;
  id v26 = a1;
  id v27 = v25;
  id v28 = v26;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446466;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_10011EA98(v32, v33, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    id v34 = [v28 debugDescription];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    uint64_t v39 = sub_10011EA98(v35, v37, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%{public}s (fetchParentEntry) asset.parentID is nil: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1004F9A20(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1002A4450(a5, a6);
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v7 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v8 = v7;
  if (!(v7 >> 62))
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9) {
LABEL_3:
  }
    *a3 = v8;
LABEL_5:

  return swift_bridgeObjectRelease();
}

void sub_1004F9DC0(unsigned int (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, void *a3)
{
  id v116 = a3;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v113 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v124);
  uint64_t v129 = (uint64_t)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800950);
  uint64_t v127 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v108 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v108 - v15;
  __chkstk_darwin(v17);
  id v19 = (char *)&v108 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v108 - v21;
  type metadata accessor for JournalEntryAssetMO();
  uint64_t v23 = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v24 = &qword_1007F7000;
  id v117 = 0;
  id v125 = v22;
  uint64_t v126 = (uint64_t)v19;
  id v123 = v10;
  uint64_t v118 = v23;
  if (!((unint64_t)v23 >> 62))
  {
    id v35 = *(id *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35)
    {
      uint64_t v36 = (uint64_t)v13;
      unint64_t v37 = (unint64_t)v6;
      uint64_t v38 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
LABEL_82:
    swift_bridgeObjectRelease();
    return;
  }
  if (v23 < 0) {
    uint64_t v107 = v23;
  }
  else {
    uint64_t v107 = v23 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v122 = v107;
  id v35 = (id)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_82;
  }
  uint64_t v36 = (uint64_t)v13;
  unint64_t v37 = (unint64_t)v6;
  swift_bridgeObjectRetain();
  uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v24 = &qword_1007F7000;
LABEL_9:
  uint64_t v134 = v38;
  if (v24[30] != -1) {
    goto LABEL_86;
  }
LABEL_10:
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v40 = sub_100026A54(v39, (uint64_t)qword_10080F970);
  id v41 = v116;
  uint64_t v110 = v40;
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  int v44 = v43;
  BOOL v45 = os_log_type_enabled(v42, v43);
  unint64_t v119 = v37;
  uint64_t v128 = v36;
  id v109 = v41;
  if (v45)
  {
    uint64_t v46 = v41;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    v133[0] = v122;
    *(_DWORD *)uint64_t v47 = 136446466;
    id v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 4);
    LODWORD(v121) = v44;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    v132[0] = sub_10011EA98(v48, v49, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2048;
    swift_beginAccess();
    v132[0] = v134;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v121, "%{public}s (adoptOrphanAssets) Found %ld Orphan Assets", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v36 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v50 = v113;
  uint64_t v114 = v35;
  if (v38)
  {
    v133[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_100095FF4(0, v38 & ~(v38 >> 63), 0);
    uint64_t v122 = v38;
    if (v38 < 0)
    {
      __break(1u);
LABEL_88:
      swift_bridgeObjectRetain();
      uint64_t v69 = v118;
      uint64_t v126 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    uint64_t v51 = 0;
    uint64_t v36 = v133[0];
    id v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 & 0xC000000000000001);
    uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    NSString v121 = (void (*)(void, void))a1;
    uint64_t v53 = (uint64_t)v125;
    do
    {
      if (v120) {
        id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v54 = *(id *)(v118 + 8 * v51 + 32);
      }
      id v55 = v54;
      uint64_t v56 = v126;
      id v57 = [v54 parentID:v108, v109];
      if (v57)
      {
        uint64_t v58 = v57;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v59 = 0;
      }
      else
      {
        uint64_t v59 = 1;
      }
      (*v52)(v56, v59, 1, v4);
      sub_10002C4EC(v56, v53, &qword_100800950);

      v133[0] = v36;
      unint64_t v61 = *(void *)(v36 + 16);
      unint64_t v60 = *(void *)(v36 + 24);
      if (v61 >= v60 >> 1)
      {
        sub_100095FF4(v60 > 1, v61 + 1, 1);
        uint64_t v36 = v133[0];
      }
      ++v51;
      *(void *)(v36 + 16) = v61 + 1;
      sub_10002C4EC(v53, v36+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(void *)(v127 + 72) * v61, &qword_100800950);
    }
    while (v122 != v51);
    id v35 = v114;
    uint64_t v50 = v113;
  }
  id v62 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v63 = String._bridgeToObjectiveC()();
  id v64 = [v62 initWithEntityName:v63];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1006D6280;
  *(void *)(v65 + 56) = sub_100010218((uint64_t *)&unk_10080F9B0);
  *(void *)(v65 + 64) = sub_1004FC810();
  *(void *)(v65 + 32) = v36;
  uint64_t v66 = NSPredicate.init(format:_:)();
  [v64 setPredicate:v66];

  type metadata accessor for JournalEntryMO();
  id v67 = v117;
  unint64_t v68 = NSManagedObjectContext.fetch<A>(_:)();
  id v117 = v67;
  if (v67)
  {
    swift_bridgeObjectRelease();

    if (qword_1007F70F0 == -1) {
      goto LABEL_3;
    }
    goto LABEL_76;
  }
  uint64_t v36 = v68;
  id v108 = v64;
  uint64_t v69 = v118;
  if (v68 >> 62) {
    goto LABEL_88;
  }
  uint64_t v126 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_30:
  unint64_t v115 = v69 & 0xC000000000000001;
  swift_beginAccess();
  unint64_t v37 = 0;
  uint64_t v112 = v69 & 0xFFFFFFFFFFFFFF8;
  uint64_t v111 = v69 + 32;
  uint64_t v122 = v36 & 0xC000000000000001;
  uint64_t v127 = v50 + 56;
  uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  id v117 = (void (**)(unint64_t, uint64_t, uint64_t))(v50 + 32);
  id v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 8);
  NSString v121 = (void (*)(void, void))v36;
  do
  {
    if (v115)
    {
      id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v37 >= *(void *)(v112 + 16)) {
        goto LABEL_75;
      }
      id v71 = *(id *)(v111 + 8 * v37);
    }
    id v72 = v71;
    if (__OFADD__(v37++, 1))
    {
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      swift_once();
LABEL_3:
      uint64_t v25 = type metadata accessor for Logger();
      sub_100026A54(v25, (uint64_t)qword_10080F970);
      id v26 = v116;
      swift_errorRetain();
      id v27 = v26;
      swift_errorRetain();
      id v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        v133[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136446466;
        sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
        v132[0] = sub_10011EA98(v32, v33, v133);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2112;
        swift_errorRetain();
        uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
        v132[0] = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v31 = v34;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s (adoptOrphanAssets) Unabled to fix Orphan assets: %@", (uint8_t *)v30, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
      return;
    }
    if (v126)
    {
      id v116 = (id)v37;
      swift_bridgeObjectRetain();
      uint64_t v74 = 4;
      id v125 = v72;
      while (1)
      {
        if (v122) {
          id v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v75 = *(id *)(v36 + 8 * v74);
        }
        id v35 = v75;
        uint64_t v76 = v74 - 3;
        if (__OFADD__(v74 - 4, 1))
        {
          __break(1u);
          goto LABEL_74;
        }
        id v77 = [v75 id];
        if (v77)
        {
          unint64_t v78 = v77;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v127;
          (*(void (**)(char *, void, uint64_t, uint64_t))v127)(v16, 0, 1, v4);
        }
        else
        {
          uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v127;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v127)(v16, 1, 1, v4);
        }
        uint64_t v80 = (uint64_t)v16;
        id v81 = [v72 parentID];
        if (v81)
        {
          os_log_type_t v82 = v81;
          uint64_t v83 = v128;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v84 = 0;
        }
        else
        {
          uint64_t v84 = 1;
          uint64_t v83 = v128;
        }
        v79((char *)v83, v84, 1, v4);
        uint64_t v38 = v129;
        uint64_t v85 = v129 + *(int *)(v124 + 48);
        sub_10023D7D4(v80, v129);
        sub_10023D7D4(v83, v85);
        a1 = *v70;
        if ((*v70)(v38, 1, v4) == 1) {
          break;
        }
        uint64_t v86 = (uint64_t)v123;
        sub_10023D7D4(v129, (uint64_t)v123);
        if (a1(v85, 1, v4) == 1)
        {
          ((void (*)(uint64_t, uint64_t))*v120)(v86, v4);
LABEL_41:
          sub_10001457C(v129, (uint64_t *)&unk_1007FEB40);
          sub_10001457C(v128, &qword_100800950);
          uint64_t v16 = (char *)v80;
          sub_10001457C(v80, &qword_100800950);
          goto LABEL_42;
        }
        unint64_t v87 = v119;
        (*v117)(v119, v85, v4);
        sub_1004FCB08((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v38 = dispatch thunk of static Equatable.== infix(_:_:)();
        a1 = *v120;
        ((void (*)(char *, uint64_t))*v120)(v123, v4);
        unint64_t v88 = v87;
        uint64_t v89 = v129;
        ((void (*)(unint64_t, uint64_t))a1)(v88, v4);
        sub_10001457C(v89, &qword_100800950);
        sub_10001457C(v128, &qword_100800950);
        uint64_t v16 = (char *)v80;
        sub_10001457C(v80, &qword_100800950);
        if (v38) {
          goto LABEL_60;
        }
LABEL_42:

        ++v74;
        id v72 = v125;
        uint64_t v36 = (uint64_t)v121;
        if (v76 == v126)
        {

          swift_bridgeObjectRelease();
          id v35 = v114;
          unint64_t v37 = (unint64_t)v116;
          goto LABEL_32;
        }
      }
      if (a1(v85, 1, v4) == 1)
      {
        sub_10001457C(v129, &qword_100800950);
        sub_10001457C(v128, &qword_100800950);
        uint64_t v16 = (char *)v80;
        sub_10001457C(v80, &qword_100800950);
LABEL_60:
        uint64_t v36 = (uint64_t)v121;
        swift_bridgeObjectRelease();
        id v90 = v125;
        unsigned __int8 v91 = [v125 isRemovedFromCloud];
        unint64_t v37 = (unint64_t)v116;
        if (v91)
        {

LABEL_64:
          id v35 = v114;
          continue;
        }
        [v35 addAssetsObject:v90];

        if (!__OFSUB__(v134, 1))
        {
          --v134;
          goto LABEL_64;
        }
        __break(1u);
LABEL_86:
        swift_once();
        goto LABEL_10;
      }
      goto LABEL_41;
    }

LABEL_32:
    ;
  }
  while ((id)v37 != v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v92 = v134;
  id v93 = v109;
  Class v94 = Logger.logObject.getter();
  os_log_type_t v95 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = swift_slowAlloc();
    v132[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v96 = 136446466;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v131 = sub_10011EA98(v97, v98, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v96 + 12) = 2048;
    uint64_t v131 = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v94, v95, "%{public}s (adoptOrphanAssets) Processed %ld orphan assets", (uint8_t *)v96, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v99 = v108;
  swift_beginAccess();
  uint64_t v100 = v134;
  if (v134 < 1) {
    goto LABEL_71;
  }
  id v101 = v93;
  uint64_t v102 = Logger.logObject.getter();
  os_log_type_t v103 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    *(_DWORD *)uint64_t v104 = 136446466;
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v105 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v130 = sub_10011EA98(v105, v106, &v131);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v104 + 12) = 2048;
    uint64_t v130 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "%{public}s %ld (adoptOrphanAssets) orphan assets not processed", (uint8_t *)v104, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_71:
    return;
  }
}

unint64_t sub_1004FB0B0(void *a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v30 - v10;
  sub_1002A4450(0xD00000000000001BLL, 0x800000010069FA30);
  type metadata accessor for JournalEntryAssetMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v38 = v11;
  uint64_t v14 = v8;
  unint64_t v15 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_3;
    }
LABEL_21:
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16) {
    goto LABEL_21;
  }
LABEL_3:
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    unint64_t v41 = v15 & 0xC000000000000001;
    id v35 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v36 = (void (**)(uint64_t, char *, uint64_t))(v6 + 32);
    uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    *(void *)&long long v13 = 136315138;
    long long v31 = v13;
    uint64_t v34 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v30[1] = (char *)&type metadata for Any + 8;
    uint64_t v18 = (uint64_t)v38;
    uint64_t v42 = v16;
    uint64_t v32 = a1;
    unint64_t v37 = v15;
    while (1)
    {
      if (v41) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v19 = *(id *)(v15 + 8 * v17 + 32);
      }
      uint64_t v20 = v19;
      sub_1005E63B4();
      if (v21)
      {
        type metadata accessor for Journaling();
        sub_1005E6B0C((uint64_t)v4);
        swift_bridgeObjectRelease();
        if ((*v40)(v4, 1, v5) != 1)
        {
          (*v36)(v18, v4, v5);
          if (qword_1007F7EA8 != -1) {
            swift_once();
          }
          uint64_t v22 = type metadata accessor for Logger();
          sub_100026A54(v22, (uint64_t)qword_100813200);
          (*v35)(v14, v18, v5);
          uint64_t v23 = Logger.logObject.getter();
          uint64_t v24 = v14;
          os_log_type_t v25 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v23, v25))
          {
            uint64_t v26 = swift_slowAlloc();
            uint64_t v43 = swift_slowAlloc();
            *(_DWORD *)uint64_t v26 = v31;
            sub_1004FCB08((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
            uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v26 + 4) = sub_10011EA98(v27, v28, &v43);
            swift_bridgeObjectRelease();
            os_log_type_t v29 = *v34;
            (*v34)(v24, v5);
            _os_log_impl((void *)&_mh_execute_header, v23, v25, "Deleting asset attachments directory: %s", (uint8_t *)v26, 0xCu);
            swift_arrayDestroy();
            a1 = v32;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            os_log_type_t v29 = *v34;
            (*v34)(v24, v5);
          }

          uint64_t v14 = v24;
          uint64_t v18 = (uint64_t)v38;
          sub_1005E7890((uint64_t)v38);
          v29((char *)v18, v5);
          unint64_t v15 = v37;
          goto LABEL_7;
        }
      }
      else
      {
        (*v39)(v4, 1, 1, v5);
      }
      sub_10001457C((uint64_t)v4, (uint64_t *)&unk_100800A60);
LABEL_7:
      ++v17;
      [a1 deleteObject:v20];

      if (v42 == v17) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1004FB890(void *a1)
{
  sub_1002A4450(0xD000000000000024, 0x800000010069FA00);
  type metadata accessor for JournalEntryAssetMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    if ([v6 isRemovedFromCloud])
    {
      [a1 deleteObject:v7];
    }
    else
    {
      [v7 setIsUploadedToCloud:0];
      [v7 setRecordSystemFields:0];
    }
  }
LABEL_13:

  return swift_bridgeObjectRelease();
}

unint64_t sub_1004FBCC8()
{
  return sub_1004FB890(*(void **)(v0 + 16));
}

uint64_t sub_1004FBCD4()
{
  return swift_deallocObject();
}

uint64_t sub_1004FBCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004FBCF4()
{
  return swift_release();
}

void sub_1004FBCFC(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4)
{
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v6 = NSManagedObjectContext.fetch<A>(_:)();
  *a3 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_1007F70F0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_10080F970);
  id v8 = a4;
  swift_bridgeObjectRetain();
  id v9 = v8;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    type metadata accessor for UUID();
    sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v13, v14, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2048;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s %ld Orphan assets Found", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1004FC258(void *a1@<X2>, uint64_t *a2@<X8>)
{
  sub_1002A4450(0xD000000000000017, 0x800000010069FBB0);
  type metadata accessor for JournalEntryAssetMO();
  uint64_t v5 = NSManagedObjectContext.count<A>(for:)();
  if (v2)
  {
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100026A54(v6, (uint64_t)qword_10080F970);
    id v7 = a1;
    swift_errorRetain();
    id v8 = v7;
    swift_errorRetain();
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446466;
      type metadata accessor for UUID();
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v13, v14, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2112;
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v24;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s (getAssetsCount) Unabled to count assets: %@", (uint8_t *)v11, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = v5;
    if (qword_1007F70F0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100026A54(v16, (uint64_t)qword_10080F970);
    id v17 = a1;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v23 = a2;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446466;
      type metadata accessor for UUID();
      sub_1004FCB08((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v21, v22, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s (getAssetsCount) Assets Count %ld", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v23;
      swift_slowDealloc();
    }
    else
    {
    }
  }
  *a2 = v15;
}

unint64_t sub_1004FC760()
{
  return sub_1004FB0B0(*(void **)(v0 + 16));
}

uint64_t sub_1004FC76C()
{
  return swift_deallocObject();
}

uint64_t sub_1004FC780()
{
  return sub_1004F9A20(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD00000000000001CLL, 0x800000010069FAE0);
}

uint64_t sub_1004FC7C0()
{
  return swift_deallocObject();
}

void sub_1004FC7D4()
{
  sub_1004F600C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1004FC7E0()
{
  return swift_deallocObject();
}

void sub_1004FC7F4()
{
  sub_1004F9DC0(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1004FC800()
{
  return swift_deallocObject();
}

unint64_t sub_1004FC810()
{
  unint64_t result = qword_100810F00;
  if (!qword_100810F00)
  {
    sub_100014440((uint64_t *)&unk_10080F9B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810F00);
  }
  return result;
}

void sub_1004FC870()
{
  sub_1004FBCFC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1004FC87C()
{
  return swift_deallocObject();
}

uint64_t sub_1004FC890()
{
  return sub_1004F9A20(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD000000000000012, 0x800000010069FB60);
}

uint64_t sub_1004FC8D0()
{
  return swift_deallocObject();
}

uint64_t sub_1004FC8E4()
{
  return swift_deallocObject();
}

uint64_t sub_1004FC92C()
{
  return sub_1004F9A20(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD000000000000023, 0x800000010069FB80);
}

uint64_t sub_1004FC96C()
{
  return swift_deallocObject();
}

uint64_t sub_1004FC97C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004FC9B4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1004FCA90()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = v0[2];
  unint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1004F63F8(v2, v3, v4, v5);
}

uint64_t sub_1004FCAF8()
{
  return swift_deallocObject();
}

uint64_t sub_1004FCB08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004FCB90@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(__n128)@<X8>)
{
  return sub_1004FCBE0(a1, a2, (uint64_t)&off_100792090, (uint64_t (*)(__n128))&static URL.cachesDirectory.getter, a3);
}

uint64_t sub_1004FCBB8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(__n128)@<X8>)
{
  return sub_1004FCBE0(a1, a2, (uint64_t)&off_100791220, (uint64_t (*)(__n128))&static URL.applicationSupportDirectory.getter, a3);
}

uint64_t sub_1004FCBE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X4>, uint64_t (*a4)(__n128)@<X5>, uint64_t (*a5)(__n128)@<X8>)
{
  long long v31 = a4;
  uint64_t v32 = a3;
  uint64_t v8 = type metadata accessor for URL.DirectoryHint();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v27 - v19;
  if (a2)
  {
    uint64_t v30 = v17;
    sub_1004FD498(a1, a2, (uint64_t)v15);
    unsigned int v29 = enum case for URL.DirectoryHint.inferFromPath(_:);
    long long v31 = a5;
    unint64_t v28 = *(void (**)(char *))(v9 + 104);
    v28(v11);
    unint64_t v27 = sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v11, v8);
    unint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v23 = v15;
    uint64_t v24 = v30;
    v22(v23, v30);
    ((void (*)(char *, void, uint64_t))v28)(v11, v29, v8);
    URL.appending<A>(components:directoryHint:)();
    v21(v11, v8);
    return ((uint64_t (*)(char *, uint64_t))v22)(v20, v24);
  }
  else
  {
    uint64_t v26 = v31;
    return v26(v18);
  }
}

void sub_1004FCE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v27 = a5;
  uint64_t v28 = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  uint64_t v29 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL.DirectoryHint();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    sub_1004FD498(v27, a6, (uint64_t)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for URL.DirectoryHint.inferFromPath(_:), v10);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = v29;
    uint64_t v18 = v30;
    if (v29)
    {
LABEL_3:
      uint64_t v20 = v19;
      goto LABEL_6;
    }
  }
  else
  {
    static URL.temporaryDirectory.getter();
    uint64_t v19 = v29;
    uint64_t v18 = v30;
    if (v29) {
      goto LABEL_3;
    }
  }
  UUID.init()();
  uint64_t v18 = UUID.uuidString.getter();
  uint64_t v20 = v21;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
LABEL_6:
  uint64_t v32 = v18;
  uint64_t v33 = v20;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for URL.DirectoryHint.inferFromPath(_:), v10);
  sub_100014344();
  swift_bridgeObjectRetain();
  URL.append<A>(component:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  uint64_t v22 = v31;
  if (v31)
  {
    uint64_t v23 = v28;
    URL.appendPathExtension(_:)(*(Swift::String *)(&v22 - 1));
  }
}

uint64_t sub_1004FD1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v1 = type metadata accessor for URL.DirectoryHint();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - v10;
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  if (qword_10083D468)
  {
    sub_1004FD498(qword_10083D460, (void *)qword_10083D468, (uint64_t)v8);
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v13(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    static URL.libraryDirectory.getter();
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  }
  v13(v4, v12, v1);
  sub_100014344();
  uint64_t v14 = v17;
  URL.appending<A>(components:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
}

uint64_t sub_1004FD498@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v24 - v14;
  if (a2)
  {
    id v16 = [self defaultManager];
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 containerURLForSecurityApplicationGroupIdentifier:v17];

    if (v18)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v19(v12, v9, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v12, v6);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    }
    sub_100052EAC((uint64_t)v12);
    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(109);
    v22._countAndFlagsBits = 0xD00000000000006BLL;
    v22._object = (void *)0x800000010069FC10;
    String.append(_:)(v22);
    v23._countAndFlagsBits = a1;
    v23._object = a2;
    String.append(_:)(v23);
    goto LABEL_11;
  }
  uint64_t v21 = NSHomeDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_100052EAC((uint64_t)v15);
LABEL_11:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v15, v6);
}

uint64_t sub_1004FD838(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  uint64_t v103 = (uint64_t)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v97 = (uint64_t)&v93 - v8;
  uint64_t v9 = type metadata accessor for URL.DirectoryHint();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for URL();
  uint64_t v13 = *(NSObject **)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v102 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  os_log_type_t v95 = (char *)&v93 - v16;
  __chkstk_darwin(v17);
  id v93 = (char *)&v93 - v18;
  __chkstk_darwin(v19);
  uint64_t v96 = ((char *)&v93 - v20);
  __chkstk_darwin(v21);
  Swift::String v23 = (uint64_t (*)(__n128))((char *)&v93 - v22);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v93 - v25;
  id v100 = self;
  id v27 = [v100 defaultManager];
  uint64_t v105 = v23;
  uint64_t v107 = a2;
  uint64_t v101 = a1;
  unint64_t v98 = v12;
  uint64_t v99 = v10;
  if (a2)
  {
    sub_1004FD498(a1, v107, (uint64_t)v23);
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for URL.DirectoryHint.inferFromPath(_:), v9);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    ((void (*)(uint64_t (*)(__n128), uint64_t))v13[1].isa)(v23, v108);
  }
  else
  {
    static URL.temporaryDirectory.getter();
  }
  URL._bridgeToObjectiveC()(v28);
  uint64_t v30 = v29;
  uint64_t v31 = v13 + 1;
  Class isa = (void (*)(char *, uint64_t))v13[1].isa;
  isa(v26, v108);
  id v109 = 0;
  unsigned int v32 = [v27 createDirectoryAtURL:v30 withIntermediateDirectories:1 attributes:0 error:&v109];

  id v33 = v109;
  uint64_t v94 = v9;
  uint64_t v34 = v96;
  if (v32)
  {
    if (v107)
    {
      uint64_t v35 = (uint64_t)v105;
      uint64_t v36 = v101;
      sub_1004FD498(v101, v107, (uint64_t)v105);
      uint64_t v38 = v98;
      uint64_t v37 = v99;
      (*(void (**)(char *, void, uint64_t))(v99 + 104))(v98, enum case for URL.DirectoryHint.inferFromPath(_:), v9);
      sub_100014344();
      URL.appending<A>(components:directoryHint:)();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v9);
      isa((char *)v35, v108);
    }
    else
    {
      static URL.temporaryDirectory.getter();
      uint64_t v36 = v101;
    }
    sub_1004FE774((uint64_t)v34);
    isa((char *)v34, v108);
    if (v107)
    {
      uint64_t v40 = v105;
      sub_1004FD498(v36, v107, (uint64_t)v105);
      uint64_t v80 = v99;
      id v81 = *(void (**)(char *, void, uint64_t))(v99 + 104);
      uint64_t v96 = v13;
      os_log_type_t v82 = v98;
      v81(v98, enum case for URL.DirectoryHint.inferFromPath(_:), v9);
      sub_100014344();
      uint64_t v83 = (uint64_t)v93;
      URL.appending<A>(components:directoryHint:)();
      uint64_t v84 = v82;
      uint64_t v13 = v96;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v84, v9);
      isa((char *)v40, v108);
    }
    else
    {
      uint64_t v83 = (uint64_t)v93;
      static URL.libraryDirectory.getter();
      uint64_t v40 = v105;
    }
    sub_1004FEC80(v83);
    isa((char *)v83, v108);
  }
  else
  {
    uint64_t v39 = v33;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v40 = v105;
    if (qword_1007F7100 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100026A54(v41, (uint64_t)qword_10080F9C8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v96 = v13 + 1;
      BOOL v45 = (uint8_t *)v44;
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v45 = 138412290;
      swift_errorRetain();
      uint64_t v47 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v109 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v46 = v47;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Filed to create temp directory: %@", v45, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      uint64_t v40 = v105;
      swift_slowDealloc();
      uint64_t v31 = v96;
      uint64_t v36 = v101;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      uint64_t v36 = v101;
    }
  }
  id v48 = [v100 defaultManager];
  sub_1004FCBE0(v36, v107, (uint64_t)&off_100792090, (uint64_t (*)(__n128))&static URL.cachesDirectory.getter, v40);
  URL._bridgeToObjectiveC()(v49);
  uint64_t v51 = v50;
  isa((char *)v40, v108);
  id v109 = 0;
  unsigned int v52 = [v48 createDirectoryAtURL:v51 withIntermediateDirectories:1 attributes:0 error:&v109];

  id v53 = v109;
  if (!v52)
  {
    id v54 = v53;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F7100 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    sub_100026A54(v55, (uint64_t)qword_10080F9C8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    uint64_t v96 = v56;
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 138412290;
      id v93 = (char *)(v58 + 4);
      swift_errorRetain();
      unint64_t v60 = v31;
      unint64_t v61 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v109 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v59 = v61;
      uint64_t v31 = v60;
      uint64_t v40 = v105;
      swift_errorRelease();
      swift_errorRelease();
      id v62 = v96;
      _os_log_impl((void *)&_mh_execute_header, v96, v57, "Failed to create cache directory: %@", v58, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  type metadata accessor for Journaling();
  uint64_t v63 = v97;
  sub_1004FD1B0(v97);
  id v64 = (char *)v13[6].isa;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v64)(v63, 1, v108) == 1)
  {
    sub_100052EAC(v63);
    uint64_t v65 = v99;
  }
  else
  {
    id v93 = v64;
    uint64_t v66 = v95;
    ((void (*)(char *, uint64_t, uint64_t))v13[4].isa)(v95, v63, v108);
    id v67 = [v100 defaultManager];
    URL._bridgeToObjectiveC()(v68);
    uint64_t v70 = v69;
    id v109 = 0;
    unsigned int v71 = [v67 createDirectoryAtURL:v69 withIntermediateDirectories:1 attributes:0 error:&v109];

    if (v71)
    {
      id v72 = v109;
      isa(v66, v108);
      uint64_t v65 = v99;
      id v64 = v93;
    }
    else
    {
      uint64_t v96 = v31;
      id v73 = v109;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F7100 != -1) {
        swift_once();
      }
      uint64_t v74 = type metadata accessor for Logger();
      sub_100026A54(v74, (uint64_t)qword_10080F9C8);
      swift_errorRetain();
      swift_errorRetain();
      id v75 = Logger.logObject.getter();
      os_log_type_t v76 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v75, v76))
      {
        id v77 = (uint8_t *)swift_slowAlloc();
        unint64_t v78 = (void *)swift_slowAlloc();
        *(_DWORD *)id v77 = 138412290;
        swift_errorRetain();
        uint64_t v79 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v109 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v78 = v79;
        uint64_t v40 = v105;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "Filed to create attachments directory: %@", v77, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v36 = v101;
      uint64_t v65 = v99;
      id v64 = v93;
      swift_errorRelease();
      isa(v95, v108);
    }
  }
  if (v107)
  {
    sub_1004FD498(v36, v107, (uint64_t)v40);
    uint64_t v85 = v98;
    uint64_t v86 = v94;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v98, enum case for URL.DirectoryHint.inferFromPath(_:), v94);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v85, v86);
    isa((char *)v40, v108);
  }
  else
  {
    static URL.temporaryDirectory.getter();
  }
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  unint64_t v87 = v102;
  sub_10036AF38();
  uint64_t v88 = v108;
  uint64_t v89 = (void (*)(uint64_t (*)(__n128), uint64_t))isa;
  isa(v87, v108);
  sub_1004FCBE0(v36, v107, (uint64_t)&off_100792090, (uint64_t (*)(__n128))&static URL.cachesDirectory.getter, v40);
  sub_10036AF38();
  v89(v40, v88);
  uint64_t v90 = v103;
  sub_1004FD1B0(v103);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v64)(v90, 1, v88) == 1) {
    return sub_100052EAC(v103);
  }
  uint64_t v92 = v103;
  sub_10036AF38();
  return ((uint64_t (*)(uint64_t, uint64_t))isa)(v92, v108);
}

uint64_t sub_1004FE6AC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080F9C8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080F9C8);
  if (qword_1007F7D40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1004FE774(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = type metadata accessor for URLResourceValues();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v37 = (uint8_t *)v9;
  uint64_t v38 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - v14;
  char v42 = 1;
  id v16 = [self defaultManager];
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v18 = [v16 fileExistsAtPath:v17 isDirectory:&v42];

  if (v18)
  {
    sub_100010218(&qword_1008038F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSURLIsExcludedFromBackupKey;
    uint64_t v20 = NSURLIsExcludedFromBackupKey;
    sub_1000F400C(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    URL.resourceValues(forKeys:)();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      char v21 = URLResourceValues.isExcludedFromBackup.getter();
      uint64_t v23 = v38 + 8;
      uint64_t v22 = *(void (**)(char *, uint8_t *))(v38 + 8);
      uint64_t v24 = v15;
      uint64_t v25 = v37;
      v22(v24, v37);
      if (v21 != 2 && (v21 & 1) == 0)
      {
        uint64_t v38 = v23;
        URLResourceValues.init()();
        URLResourceValues.isExcludedFromBackup.setter();
        uint64_t v27 = v39;
        uint64_t v26 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v8, a1, v40);
        URL.setResourceValues(_:)();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v26);
        v22(v12, v25);
      }
    }
  }
  else
  {
    uint64_t v38 = v1;
    if (qword_1007F7100 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_100026A54(v28, (uint64_t)qword_10080F9C8);
    uint64_t v30 = v39;
    uint64_t v29 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v5, a1, v40);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)id v33 = 136315138;
      uint64_t v37 = v33 + 4;
      sub_1000FBCDC();
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = sub_10011EA98(v34, v35, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "excludeFromBackupFully directory %s doesn't exists, ignoring.", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    }
  }
}

void sub_1004FEC80(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v31 = 1;
  id v7 = [self defaultManager];
  URL.path.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v9 = [v7 fileExistsAtPath:v8 isDirectory:&v31];

  if (v9)
  {
    URL._bridgeToObjectiveC()(v10);
    uint64_t v12 = v11;
    v13.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    if (_kCFURLIsExcludedFromCloudBackupKey)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v32 = 0;
      unsigned int v15 = [v12 setResourceValue:v13.super.super.isa forKey:v14 error:&v32];

      id v16 = v32;
      if (!v15)
      {
LABEL_11:
        id v29 = v16;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        return;
      }
      id v17 = v32;
      v18.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      if (_kCFURLIsExcludedFromUnencryptedBackupKey)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v32 = 0;
        unsigned int v20 = [v12 setResourceValue:v18.super.super.isa forKey:v19 error:&v32];

        id v16 = v32;
        if (v20)
        {
          id v21 = v32;

          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    if (qword_1007F7100 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100026A54(v22, (uint64_t)qword_10080F9C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      v30[1] = v1;
      id v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      v30[0] = v25 + 4;
      sub_1000FBCDC();
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      void v30[2] = sub_10011EA98(v27, v28, (uint64_t *)&v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "excludeFromBackupSafely directory %s doesn't exists, ignoring.", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
}

uint64_t initializeWithCopy for DynamicWaveformView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for DynamicWaveformView(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for DynamicWaveformView(uint64_t a1, uint64_t a2)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DynamicWaveformView()
{
  return &type metadata for DynamicWaveformView;
}

uint64_t sub_1004FF170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004FF18C()
{
  id v0 = [self systemIndigoColor];
  uint64_t result = Color.init(_:)();
  qword_10083D6A0 = result;
  return result;
}

void sub_1004FF1CC()
{
  qword_10083D6A8 = 0x4049000000000000;
}

uint64_t sub_1004FF1DC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.leading.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_100010218(&qword_10080F9E0);
  return sub_1004FF23C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1004FF23C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100010218(&qword_10080F9E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unsigned int v9 = (char *)&v27 - v8;
  sub_100141410((uint64_t)a1, (uint64_t)v28);
  GeometryProxy.size.getter();
  uint64_t v11 = v10;
  if (qword_1007F7110 != -1) {
    swift_once();
  }
  *((void *)&v29 + 1) = v11;
  LOBYTE(v30) = 0;
  *((void *)&v30 + 1) = qword_10083D6A8;
  LOBYTE(v31) = 0;
  *((void *)&v31 + 1) = 0x4004000000000000;
  LOBYTE(v32) = 0;
  *((void *)&v32 + 1) = 0x4008000000000000;
  LOBYTE(v33) = 1;
  if (qword_1007F7108 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_10083D6A0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1004FFB40((uint64_t)v28, (uint64_t)v38);
  *((void *)&v39 + 1) = KeyPath;
  *(void *)&long long v40 = v12;
  swift_retain();
  sub_1004FFB9C((uint64_t)v28);
  LOBYTE(v12) = static Edge.Set.horizontal.getter();
  sub_10001B220((uint64_t)v38, (uint64_t)v28, &qword_10080F9F0);
  BYTE8(v34) = v12;
  long long v35 = 0u;
  long long v36 = 0u;
  char v37 = 1;
  sub_10001457C((uint64_t)v38, &qword_10080F9F0);
  long long v41 = v35;
  long long v42 = v36;
  char v43 = v37;
  v38[4] = v31;
  v38[5] = v32;
  long long v39 = v33;
  long long v40 = v34;
  v38[0] = v28[0];
  v38[1] = v28[1];
  v38[2] = v29;
  v38[3] = v30;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_10002E0BC(a1, v14);
  double v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  if (qword_1007F7168 != -1) {
    swift_once();
  }
  id v17 = [(id)qword_100810AD0 stringFromTimeInterval:v16 + 0.5];
  if (v17)
  {
    NSNumber v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *(void *)unsigned int v9 = static VerticalAlignment.center.getter();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v22 = sub_100010218(&qword_10080FA10);
    sub_1004FF650(v19, v21, a1, (uint64_t)&v9[*(int *)(v22 + 44)]);
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_100010218(&qword_10080F9F8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 0, 1, v23);
  }
  else
  {
    uint64_t v24 = sub_100010218(&qword_10080F9F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  }
  sub_10001B220((uint64_t)v38, (uint64_t)v28, &qword_10080FA00);
  sub_10001B220((uint64_t)v9, (uint64_t)v6, &qword_10080F9E8);
  sub_10001B220((uint64_t)v28, a2, &qword_10080FA00);
  uint64_t v25 = sub_100010218(&qword_10080FA08);
  sub_10001B220((uint64_t)v6, a2 + *(int *)(v25 + 48), &qword_10080F9E8);
  sub_10001457C((uint64_t)v9, &qword_10080F9E8);
  sub_10001457C((uint64_t)v38, &qword_10080FA00);
  sub_10001457C((uint64_t)v6, &qword_10080F9E8);
  return sub_10001457C((uint64_t)v28, &qword_10080FA00);
}

uint64_t sub_1004FF650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v60 = a4;
  uint64_t v6 = sub_100010218(&qword_10080FA18);
  __chkstk_darwin(v6 - 8);
  uint64_t v59 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v57 = (char *)&v54 - v9;
  __chkstk_darwin(v10);
  uint64_t v58 = (uint64_t)&v54 - v11;
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  unint64_t v12 = sub_100014344();
  swift_bridgeObjectRetain();
  unint64_t v56 = v12;
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.footnote.getter();
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  LOBYTE(v12) = v21;
  swift_release();
  sub_10002B8D0(v13, v15, v17);
  swift_bridgeObjectRelease();
  LODWORD(v63) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  uint64_t v54 = v23;
  char v25 = v24;
  uint64_t v27 = v26;
  sub_10002B8D0(v18, v20, v12 & 1);
  swift_bridgeObjectRelease();
  unsigned __int8 v28 = static Edge.Set.horizontal.getter();
  unsigned __int8 v29 = static Edge.Set.bottom.getter();
  char v30 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v28) {
    char v30 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v29) {
    char v30 = Edge.Set.init(rawValue:)();
  }
  uint64_t v31 = v27;
  uint64_t v32 = v22;
  uint64_t v33 = v54;
  char v34 = v25;
  if (qword_1007F7328 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v63 = v32;
  uint64_t v64 = v33;
  char v65 = v25 & 1;
  uint64_t v66 = v31;
  char v67 = v30;
  uint64_t v68 = v35;
  uint64_t v69 = v36;
  uint64_t v70 = v37;
  uint64_t v71 = v38;
  char v72 = 0;
  uint64_t v39 = v55[3];
  uint64_t v40 = v55[4];
  sub_10002E0BC(v55, v39);
  double v41 = (*(double (**)(uint64_t, uint64_t))(v40 + 24))(v39, v40);
  if (qword_1007F7170 != -1) {
    swift_once();
  }
  id v42 = [(id)qword_100810AD8 stringFromTimeInterval:v41 + 0.5];
  if (v42)
  {
    char v43 = v42;
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v46 = v45;
  }
  else
  {
    uint64_t v44 = 0;
    unint64_t v46 = 0xE000000000000000;
  }
  uint64_t v61 = v44;
  unint64_t v62 = v46;
  sub_100010218(&qword_1008071F0);
  sub_1002DF8E0();
  uint64_t v47 = v57;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10002B8D0(v32, v33, v34 & 1);
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t)v47;
  uint64_t v49 = v58;
  sub_1004FFBF0(v48, v58);
  uint64_t v50 = v59;
  sub_10001B220(v49, v59, &qword_10080FA18);
  uint64_t v51 = v60;
  sub_10001B220(v50, v60, &qword_10080FA18);
  uint64_t v52 = v51 + *(int *)(sub_100010218(&qword_10080FA20) + 48);
  *(void *)uint64_t v52 = 0;
  *(unsigned char *)(v52 + 8) = 1;
  sub_10001457C(v49, &qword_10080FA18);
  return sub_10001457C(v50, &qword_10080FA18);
}

double sub_1004FFA88@<D0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  sub_1004DF97C(v1, (uint64_t)v6);
  uint64_t v3 = swift_allocObject();
  double result = *(double *)v6;
  long long v5 = v6[1];
  *(_OWORD *)(v3 + 16) = v6[0];
  *(_OWORD *)(v3 + 32) = v5;
  *(void *)(v3 + 48) = v7;
  *a1 = sub_1004FFB30;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v3;
  return result;
}

uint64_t sub_1004FFAF8()
{
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1004FFB30@<X0>(uint64_t a1@<X8>)
{
  return sub_1004FF1DC((void *)(v1 + 16), a1);
}

uint64_t sub_1004FFB40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004FFB9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004FFBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_10080FA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004FFC5C()
{
  unint64_t result = qword_10080FA28;
  if (!qword_10080FA28)
  {
    sub_100014440(&qword_10080FA30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080FA28);
  }
  return result;
}

uint64_t sub_1004FFCB8()
{
  return sub_1004FFCF4();
}

uint64_t sub_1004FFCCC()
{
  return sub_1004FFCF4();
}

uint64_t sub_1004FFCE0()
{
  return sub_1004FFCF4();
}

uint64_t sub_1004FFCF4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();

  return swift_release();
}

char *sub_1004FFD64(double a1, double a2, double a3, double a4)
{
  uint64_t v54 = sub_100010218(&qword_10080FAA0);
  uint64_t v56 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  id v53 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v50 = (char *)&v45 - v12;
  uint64_t v55 = type metadata accessor for UIView.Invalidations.Configuration();
  __chkstk_darwin(v55);
  uint64_t v13 = sub_100010218(&qword_10080D5E8);
  uint64_t v48 = *(void (***)(char *, char *, uint64_t))(v13 - 8);
  uint64_t v49 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_datePicker;
  id v24 = objc_allocWithZone((Class)UIDatePicker);
  char v25 = v4;
  *(void *)&v4[v23] = [v24 init];
  *(void *)&v25[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v26 = &v25[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell__date];
  uint64_t v47 = v25;
  static Date.now.getter();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v16);
  UIView.Invalidations.Configuration.init()();
  sub_100065D60();
  UIView.Invalidating.init(wrappedValue:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v28 = v16;
  uint64_t v46 = v16;
  v27(v22, v16);
  v48[4](v26, v15, v49);
  unsigned __int8 v29 = &v25[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell__minimumDate];
  char v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v49 = v17 + 56;
  uint64_t v31 = (uint64_t)v50;
  v30(v50, 1, 1, v28);
  uint64_t v32 = v51;
  sub_100045944(v31, v51);
  UIView.Invalidations.Configuration.init()();
  sub_1000BFFF4();
  uint64_t v33 = v53;
  UIView.Invalidating.init(wrappedValue:_:)();
  sub_1000AC7D4(v31);
  char v34 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
  v56 += 32;
  uint64_t v35 = v29;
  uint64_t v36 = v54;
  v34(v35, v33, v54);
  uint64_t v37 = v47;
  uint64_t v48 = (void (**)(char *, char *, uint64_t))&v47[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell__maximumDate];
  v30((char *)v31, 1, 1, v46);
  sub_100045944(v31, v32);
  UIView.Invalidations.Configuration.init()();
  UIView.Invalidating.init(wrappedValue:_:)();
  sub_1000AC7D4(v31);
  v34((char *)v48, v33, v36);

  uint64_t v38 = (objc_class *)type metadata accessor for DateRangeCalendarCell();
  v57.receiver = v37;
  v57.super_class = v38;
  uint64_t v39 = (char *)[super initWithFrame:a1, a2, a3, a4];
  [v39 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  uint64_t v40 = OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_datePicker;
  double v41 = *(void **)&v39[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_datePicker];
  [v41 setPreferredDatePickerStyle:3];
  [v41 setDatePickerMode:1];
  [v41 setMaximumContentSizeCategory:UIContentSizeCategoryMedium];
  [v41 addTarget:v39 action:"datePickerValueChangedWithDatePicker:" forControlEvents:4096];
  id v42 = [v39 contentView];
  [v42 addSubview:v41];

  id v43 = *(id *)&v39[v40];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  return v39;
}

void sub_1005003BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_datePicker);
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  [v12 setDate:isa animated:0];

  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  Class v16 = 0;
  if (v15(v7, 1, v8) != 1)
  {
    Class v16 = Date._bridgeToObjectiveC()().super.isa;
    v14(v7, v8);
  }
  [v12 setMinimumDate:v16];

  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  if (v15(v4, 1, v8) == 1)
  {
    Class v17 = 0;
  }
  else
  {
    Class v17 = Date._bridgeToObjectiveC()().super.isa;
    v14(v4, v8);
  }
  [v12 setMaximumDate:v17];
}

id sub_1005008D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DateRangeCalendarCell();
  return [super dealloc];
}

uint64_t sub_100500A28()
{
  return type metadata accessor for DateRangeCalendarCell();
}

uint64_t type metadata accessor for DateRangeCalendarCell()
{
  uint64_t result = qword_10080FA88;
  if (!qword_10080FA88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100500A7C()
{
  sub_100468210();
  if (v0 <= 0x3F)
  {
    sub_100500B60();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100500B60()
{
  if (!qword_10080FA98)
  {
    sub_100014440((uint64_t *)&unk_1007FC470);
    type metadata accessor for UIView.Invalidations.Configuration();
    sub_1000BFFF4();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080FA98);
    }
  }
}

uint64_t sub_100500BF0()
{
  return sub_100500DAC();
}

uint64_t sub_100500C04(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v16 - v10, a1, v4, v9);
  uint64_t v13 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v12)(v7, v11, v4);
  id v14 = v13;
  static UIView.Invalidating.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t sub_100500D70()
{
  return sub_100500DAC();
}

uint64_t sub_100500D84(uint64_t a1, void **a2)
{
  return sub_100500E60(a1, a2);
}

uint64_t sub_100500D98()
{
  return sub_100500DAC();
}

uint64_t sub_100500DAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100500E24()
{
  return sub_100500DAC();
}

uint64_t sub_100500E4C(uint64_t a1, void **a2)
{
  return sub_100500E60(a1, a2);
}

uint64_t sub_100500E60(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  __n128 v9 = (char *)&v13 - v8;
  sub_100045944(a1, (uint64_t)&v13 - v8);
  uint64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100045944((uint64_t)v9, (uint64_t)v6);
  id v11 = v10;
  static UIView.Invalidating.subscript.setter();
  return sub_1000AC7D4((uint64_t)v9);
}

uint64_t sub_100500F5C(uint64_t a1, void **a2)
{
  return sub_100500E60(a1, a2);
}

uint64_t sub_100500F84()
{
  return sub_100500DAC();
}

uint64_t sub_100500FAC(uint64_t a1, void **a2)
{
  return sub_100500E60(a1, a2);
}

uint64_t sub_100500FD4()
{
  return sub_100500DAC();
}

void sub_100501000()
{
  uint64_t v37 = sub_100010218(&qword_10080FAA0);
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v33 = (char *)&v28 - v4;
  uint64_t v38 = type metadata accessor for UIView.Invalidations.Configuration();
  __chkstk_darwin(v38);
  uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100010218(&qword_10080D5E8);
  uint64_t v5 = *((void *)v32 - 1);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v28 - v13;
  uint64_t v15 = OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_datePicker;
  *(void *)&v0[v15] = [objc_allocWithZone((Class)UIDatePicker) init];
  uint64_t v31 = v0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = &v0[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell__date];
  static Date.now.getter();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  UIView.Invalidations.Configuration.init()();
  sub_100065D60();
  UIView.Invalidating.init(wrappedValue:_:)();
  Class v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v29 = v8;
  v17(v14, v8);
  (*(void (**)(char *, char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v5 + 32))(v16, v7, v32);
  uint64_t v18 = v31;
  uint64_t v19 = &v31[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell__minimumDate];
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v30 = v9 + 56;
  uint64_t v32 = v20;
  uint64_t v21 = (uint64_t)v33;
  v20((uint64_t)v33, 1, 1, v8);
  uint64_t v22 = v34;
  sub_100045944(v21, v34);
  UIView.Invalidations.Configuration.init()();
  sub_1000BFFF4();
  uint64_t v23 = v36;
  UIView.Invalidating.init(wrappedValue:_:)();
  sub_1000AC7D4(v21);
  id v24 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v39 += 32;
  char v25 = v19;
  uint64_t v26 = v37;
  v24(v25, v23, v37);
  uint64_t v27 = &v18[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell__maximumDate];
  v32(v21, 1, 1, v29);
  sub_100045944(v21, v22);
  UIView.Invalidations.Configuration.init()();
  UIView.Invalidating.init(wrappedValue:_:)();
  sub_1000AC7D4(v21);
  v24(v27, v23, v26);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_1005014F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v10[4] = a9;
  v10[5] = a10;
  type metadata accessor for CoreDataStackConfiguration();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(unsigned char *)(v18 + 48) = a6;
  *(void *)(v18 + 56) = a5;
  *(void *)(v18 + 64) = a9;
  *(void *)(v18 + 72) = a10;
  v10[2] = v18;
  type metadata accessor for CloudKitStackConfiguration();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a5;
  v10[3] = v19;
  swift_bridgeObjectRetain();
  id v20 = a5;
  return v10;
}

uint64_t sub_1005015C4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataStackConfiguration()
{
  return self;
}

void sub_100501630(void *a1, double a2, double a3, double a4, double a5)
{
}

void sub_10050163C(void *a1, uint64_t *a2, double a3, double a4, double a5, double a6)
{
  *(void *)&v6[qword_1007FB110] = 0;
  *(void *)&v6[qword_1007FB118] = 0;
  uint64_t v13 = &v6[qword_1007FB120];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  id v14 = &v6[qword_1007FB130];
  *(void *)id v14 = 0;
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  id v15 = objc_allocWithZone((Class)UIScrollView);
  uint64_t v16 = v6;
  id v17 = [v15 init];
  *(void *)&v16[qword_1007FB108] = v17;
  *(void *)&v16[qword_1007FB128] = a1;
  id v59 = a1;

  v60.receiver = v16;
  v60.super_class = (Class)sub_100010218(a2);
  id v18 = [super initWithFrame:a3, a4, a5, a6];
  id v19 = objc_allocWithZone((Class)UITapGestureRecognizer);
  id v20 = (char *)v18;
  id v21 = [v19 initWithTarget:v20 action:"onToggleHudGestureRecognized"];
  [v21 setDelegate:v20];
  [v21 setNumberOfTapsRequired:1];
  uint64_t v22 = *(void **)&v20[qword_1007FB110];
  *(void *)&v20[qword_1007FB110] = v21;
  id v23 = v21;

  id v24 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v20 action:"onToggleZoomGestureRecognized:"];
  [v24 setDelegate:v20];
  [v24 setNumberOfTapsRequired:2];
  char v25 = *(void **)&v20[qword_1007FB118];
  *(void *)&v20[qword_1007FB118] = v24;
  id v26 = v24;

  uint64_t v27 = qword_1007FB128;
  uint64_t v28 = *(void **)&v20[qword_1007FB128];
  uint64_t v58 = v23;
  [v28 addGestureRecognizer:v23];
  [v28 addGestureRecognizer:v26];
  id v29 = [v28 widthAnchor];
  id v30 = [v29 constraintEqualToConstant:0.0];

  id v31 = [*(id *)&v20[v27] heightAnchor];
  id v32 = [v31 constraintEqualToConstant:0.0];

  uint64_t v33 = (void **)&v20[qword_1007FB120];
  uint64_t v34 = *(void **)&v20[qword_1007FB120];
  uint64_t v35 = *(void **)&v20[qword_1007FB120 + 8];
  *uint64_t v33 = v30;
  v33[1] = v32;
  sub_100021D58(v34, v35);
  sub_100501C48();
  uint64_t v36 = qword_1007FB108;
  uint64_t v37 = *(void **)&v20[qword_1007FB108];
  [v37 setDelegate:v20];
  [v37 setMinimumZoomScale:1.0];
  [v37 setMaximumZoomScale:6.0];
  [v37 setBouncesZoom:1];
  [v37 setDecelerationRate:UIScrollViewDecelerationRateFast];
  [v37 setShowsHorizontalScrollIndicator:0];
  [v37 setShowsVerticalScrollIndicator:0];
  [v37 setContentInsetAdjustmentBehavior:2];
  uint64_t v38 = *(void **)&v20[v27];
  [v37 addSubview:v38];
  [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v20 addSubview:v37];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1006DF580;
  id v40 = [v37 leadingAnchor];
  id v41 = [v20 leadingAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  *(void *)(v39 + 32) = v42;
  id v43 = [*(id *)&v20[v36] topAnchor];
  id v44 = [v20 topAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  *(void *)(v39 + 40) = v45;
  id v46 = [*(id *)&v20[v36] trailingAnchor];
  id v47 = [v20 trailingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v39 + 48) = v48;
  id v49 = [*(id *)&v20[v36] bottomAnchor];
  id v50 = [v20 bottomAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50];

  *(void *)(v39 + 56) = v51;
  uint64_t v52 = *v33;
  if (*v33)
  {
    *(void *)(v39 + 64) = v52;
    id v53 = self;
    uint64_t v54 = v33[1];
    *(void *)(v39 + 72) = v54;
    specialized Array._endMutation()();
    sub_1001E3DF8();
    id v55 = v52;
    id v56 = v54;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v53 activateConstraints:isa];
  }
  else
  {
    __break(1u);
  }
}

void sub_100501C38(void *a1, double a2, double a3, double a4, double a5)
{
}

void sub_100501C48()
{
  uint64_t v1 = (double *)&v0[qword_1007FB130];
  if ((v0[qword_1007FB130 + 16] & 1) == 0)
  {
    double v15 = *v1;
    if (*v1 > 0.0)
    {
      double v16 = v1[1];
      if (v16 > 0.0)
      {
        [v0 frame];
        double v18 = v17;
        [v0 frame];
        double v20 = v18 / v19;
        double v21 = v15 / v16;
        if (v21 == v18 / v19)
        {
          uint64_t v22 = &v0[qword_1007FB120];
          if (!*(void *)&v0[qword_1007FB120])
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          id v23 = (void *)*((void *)v22 + 1);
          id v24 = *(id *)v22;
          id v25 = v23;
          [v0 frame];
          [v24 setConstant:v26];

          if (!*(void *)v22)
          {
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          uint64_t v27 = (void *)*((void *)v22 + 1);
          id v28 = *(id *)v22;
          id v29 = v27;
          [v0 frame];
          [v29 setConstant:v30];
        }
        else
        {
          [v0 frame];
          uint64_t v33 = &v0[qword_1007FB120];
          uint64_t v34 = *(void **)&v0[qword_1007FB120];
          if (v20 >= v21)
          {
            if (!v34)
            {
LABEL_37:
              __break(1u);
              goto LABEL_38;
            }
            double v41 = v32;
            id v42 = (void *)*((void *)v33 + 1);
            double v43 = v21 * v32;
            id v44 = v34;
            id v45 = v42;
            [v44 setConstant:v43];

            uint64_t v39 = *(void **)v33;
            if (!*(void *)v33)
            {
LABEL_38:
              __break(1u);
              return;
            }
            id v40 = (void *)*((void *)v33 + 1);
          }
          else
          {
            if (!v34)
            {
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
            double v35 = v31;
            uint64_t v36 = (void *)*((void *)v33 + 1);
            id v37 = v34;
            id v38 = v36;
            [v37 setConstant:v35];

            uint64_t v39 = *(void **)v33;
            if (!*(void *)v33)
            {
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
            id v40 = (void *)*((void *)v33 + 1);
            double v41 = v35 / v21;
          }
          id v28 = v39;
          id v29 = v40;
          [v29 setConstant:v41];
        }

        uint64_t v10 = *(void **)&v0[qword_1007FB108];
        [v10 layoutIfNeeded];
        [v10 setZoomScale:1.0];
        id v46 = &v0[qword_1007FB120];
        if (*(void *)&v0[qword_1007FB120])
        {
          id v47 = (void *)*((void *)v46 + 1);
          id v48 = *(id *)v46;
          id v49 = v47;
          [v48 constant];
          if (*(void *)v46)
          {
            double v51 = v50;
            uint64_t v52 = (void *)*((void *)v46 + 1);
            id v53 = *(id *)v46;
            id v54 = v52;
            [v54 constant];
            double v56 = v55;

            [v0 frame];
            double left = 0.0;
            double top = 0.0;
            if (v57 > v56)
            {
              [v0 frame];
              double top = (v58 - v56) * 0.5;
            }
            [v0 frame];
            if (v59 <= v51)
            {
              double bottom = top;
              double right = 0.0;
            }
            else
            {
              [v0 frame];
              double left = (v60 - v51) * 0.5;
              double bottom = top;
              double right = left;
            }
            goto LABEL_5;
          }
          goto LABEL_32;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
  }
  uint64_t v2 = &v0[qword_1007FB120];
  uint64_t v3 = *(void **)&v0[qword_1007FB120];
  if (!v3)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v4 = (void *)*((void *)v2 + 1);
  id v5 = v3;
  id v6 = v4;
  [v5 setConstant:0.0];

  if (!*(void *)v2)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = (void *)*((void *)v2 + 1);
  id v8 = *(id *)v2;
  id v9 = v7;
  [v9 setConstant:0.0];

  [*(id *)&v0[qword_1007FB128] layoutIfNeeded];
  uint64_t v10 = *(void **)&v0[qword_1007FB108];
  [v10 setZoomScale:1.0];
  double top = UIEdgeInsetsZero.top;
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
LABEL_5:

  [v10 setContentInset:top, left, bottom, right];
}

void sub_100502078(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = qword_10080FB68;
  id v5 = *(void **)(v2 + qword_10080FB68);
  *(void *)(v2 + qword_10080FB68) = a1;
  id v10 = a1;
  if (v3)
  {
    if (!v5) {
      goto LABEL_6;
    }
    _s10PhotoAssetCMa(0);
    id v6 = v5;
    id v7 = v10;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      id v5 = v6;
      id v10 = v7;
      goto LABEL_7;
    }
    uint64_t v3 = *(void **)(v2 + v4);
    if (v3)
    {
LABEL_6:
      id v9 = v3;
      sub_1005024E8(v9);

      id v5 = v10;
      id v10 = v9;
    }
  }
LABEL_7:
}

void sub_100502154(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1005036B4();
}

char *sub_10050217C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[qword_10080FB58 + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[qword_10080FB60] = 0;
  *(void *)&v4[qword_10080FB68] = 0;
  uint64_t v9 = qword_10080FB70;
  id v10 = objc_allocWithZone((Class)UIStackView);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = qword_10080FB78;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v11[qword_10080FB80] = 0;

  type metadata accessor for PhotoAssetView();
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_10050163C(v13, &qword_10080FE08, a1, a2, a3, a4);
  double v15 = v14;
  double v16 = *(unsigned char **)&v14[qword_1007FB128];
  uint64_t v17 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v18 = v16[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v16[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
  uint64_t v19 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (v16[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
  {
    switch(v18)
    {
      case 5:
        double v31 = v14;
        double v32 = v16;
        swift_bridgeObjectRelease();
        break;
      default:
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v24 = v15;
        id v25 = v16;
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          uint64_t v22 = v16[v17];
          goto LABEL_6;
        }
        break;
    }
  }
  else
  {
    double v20 = v14;
    double v21 = v16;
    uint64_t v22 = 5;
LABEL_6:
    double v26 = *(void **)&v16[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    uint64_t v27 = *(void (**)(void, uint64_t))((swift_isaMask & *v26) + 0x58);
    id v28 = v26;
    v27(0, v22);

    sub_10015FF78();
    v16[v19] = 1;
  }

  uint64_t v29 = qword_10080FB78;
  [*(id *)&v15[qword_10080FB78] setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [*(id *)&v15[v29] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v15[v29] setAdjustsFontSizeToFitWidth:1];
  [*(id *)&v15[v29] setLineBreakMode:0];
  [*(id *)&v15[v29] setNumberOfLines:0];
  [v15 addSubview:*(void *)&v15[qword_10080FB70]];

  return v15;
}

id sub_1005024E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v102 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v102);
  id v5 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v103 = v9;
  uint64_t v104 = v10;
  __chkstk_darwin(v9);
  uint64_t v101 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218((uint64_t *)&unk_100804080);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)&v1[qword_1007FB128];
  double v20 = *(void **)(v19 + OBJC_IVAR____TtC7Journal14PhotoAssetView_photoAsset);
  *(void *)(v19 + OBJC_IVAR____TtC7Journal14PhotoAssetView_photoAsset) = a1;
  id v21 = a1;

  uint64_t v22 = v2;
  sub_10015F4FC();

  sub_1001832CC();
  char v23 = &v2[qword_1007FB130];
  *(void *)char v23 = v24;
  *((void *)v23 + 1) = v25;
  v23[16] = 0;
  sub_100501C48();
  sub_1003F2F2C((uint64_t)v14);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  uint64_t v105 = v2;
  if (v26 == 1)
  {
    sub_10001457C((uint64_t)v14, (uint64_t *)&unk_100804080);
  }
  else
  {
    sub_1005035F0((uint64_t)v14, (uint64_t)v18);
    sub_100045944((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v8);
    uint64_t v27 = v103;
    uint64_t v28 = (uint64_t)v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v8, 1, v103) == 1)
    {
      sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FC470);
      id v29 = *(id *)&v22[qword_10080FB78];
      NSString v30 = String._bridgeToObjectiveC()();
      [v29 setText:v30];
    }
    else
    {
      id v100 = v18;
      uint64_t v31 = v104;
      double v32 = v101;
      (*(void (**)(void))(v104 + 32))();
      static Date.FormatStyle.TimeStyle.shortened.getter();
      static FormatStyleCapitalizationContext.standalone.getter();
      static Locale.autoupdatingCurrent.getter();
      static Calendar.autoupdatingCurrent.getter();
      static TimeZone.autoupdatingCurrent.getter();
      static Date.now.getter();
      sub_100067404();
      Date.formatted<A>(_:)();
      sub_100503654((uint64_t)v5, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
      id v33 = *(id *)&v22[qword_10080FB78];
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v33 setText:v34];

      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v27);
      uint64_t v28 = (uint64_t)v100;
    }
    double v35 = (uint64_t *)(v28 + *(int *)(v15 + 24));
    uint64_t v36 = v35[1];
    if (v36)
    {
      uint64_t v37 = *v35;
      sub_100010218((uint64_t *)&unk_100806070);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1006D6280;
      *(void *)(v38 + 56) = &type metadata for String;
      *(void *)(v38 + 64) = sub_10001B2C0();
      *(void *)(v38 + 32) = v37;
      *(void *)(v38 + 40) = v36;
      swift_bridgeObjectRetain();
      uint64_t v39 = String.init(format:_:)();
      double v41 = v40;
      id v42 = *(id *)&v22[qword_10080FB78];
      id v43 = [v42 text];
      if (v43)
      {
        id v44 = v43;
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v47 = v46;

        uint64_t v106 = v45;
        uint64_t v107 = v47;
        v48._countAndFlagsBits = v39;
        v48._object = v41;
        String.append(_:)(v48);
        swift_bridgeObjectRelease();
        if (v107)
        {
          NSString v49 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v49 = 0;
        }
        [v42 setText:v49];

        sub_100503654(v28, _s10PhotoAssetC9PhotoDataVMa);
        uint64_t v22 = v105;
      }
      else
      {
        swift_bridgeObjectRelease();
        [v42 setText:0];

        sub_100503654(v28, _s10PhotoAssetC9PhotoDataVMa);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_100503654(v28, _s10PhotoAssetC9PhotoDataVMa);
    }
  }
  double v50 = *(void **)&v22[qword_10080FB70];
  uint64_t v51 = qword_10080FB78;
  uint64_t v52 = *(void **)&v22[qword_10080FB78];
  id v53 = objc_allocWithZone((Class)UILabel);
  id v54 = v52;
  id v55 = [v53 init];
  id v56 = [objc_allocWithZone((Class)UILabel) init];
  id v57 = [objc_allocWithZone((Class)UIButton) init];
  sub_100540B38(v50, v55, v56, v54, 0, v57);

  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  double v58 = *(double *)&qword_10083D908;
  if (qword_1007F7368 != -1) {
    swift_once();
  }
  double v59 = *(double *)&qword_10083D978;
  if (qword_1007F7370 != -1) {
    swift_once();
  }
  [v50 setLayoutMargins:v58, 0.0, v59 + *(double *)&qword_10083D980, 0.0];
  [v50 setLayoutMarginsRelativeArrangement:1];
  double v60 = *(double *)&qword_10083D978;
  id v61 = *(id *)&v22[v51];
  id v62 = [v61 superview];
  uint64_t v63 = &stru_1007D7000;
  if (v62)
  {
    uint64_t v64 = v62;
    [v61 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v65 = [v61 leadingAnchor];
    id v66 = [v64 leadingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    [v67 setConstant:v60];
    if (v67)
    {
      id v67 = v67;
      [v67 setActive:1];

      id v61 = v67;
    }
    uint64_t v68 = &selRef_drawMapRect_zoomScale_inContext_;

    uint64_t v22 = v105;
    uint64_t v63 = &stru_1007D7000;
  }
  else
  {
    id v67 = 0;
    uint64_t v64 = v61;
    uint64_t v68 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  double v69 = *(double *)&qword_10083D978;
  id v70 = *(id *)&v22[v51];
  id v71 = [v70 v68[77]];
  if (v71)
  {
    char v72 = v71;
    [v70 v63[96].name];
    id v73 = [v70 trailingAnchor];
    id v74 = [v72 trailingAnchor];
    id v75 = [v73 constraintEqualToAnchor:v74];

    [v75 setConstant:-v69];
    if (v75)
    {
      id v75 = v75;
      [v75 setActive:1];

      id v70 = v75;
    }

    uint64_t v22 = v105;
    uint64_t v63 = &stru_1007D7000;
  }
  else
  {
    id v75 = 0;
    char v72 = v70;
  }

  double v76 = *(double *)&qword_10083D980;
  id v77 = *(id *)&v22[v51];
  id v78 = sub_1001DD438(0, 1, v76);

  [*(id *)&v22[v51] setTextAlignment:1];
  id v79 = [v50 v68[77]];
  if (v79)
  {
    uint64_t v80 = v79;
    [v50 v63[96].name];
    id v81 = [v50 leadingAnchor];
    id v82 = [v80 leadingAnchor];
    id v83 = [v81 constraintEqualToAnchor:v82];

    [v83 setConstant:0.0];
    id v84 = v83;
    uint64_t v63 = &stru_1007D7000;
    id v85 = v84;
    [v84 setActive:1];
  }
  id v86 = [v50 superview];
  if (v86)
  {
    unint64_t v87 = v86;
    [v50 v63[96].name];
    id v88 = [v50 trailingAnchor];
    id v89 = [v87 trailingAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89];

    [v90 setConstant:0.0];
    id v91 = v90;
    [v91 setActive:1];
  }
  id v92 = [self effectWithStyle:9];
  id v93 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v92];
  uint64_t v94 = self;
  id v95 = v93;
  id v96 = [v94 clearColor];
  [v95 setBackgroundColor:v96];

  id v97 = v95;
  [v50 bounds];
  [v97 setFrame:];

  [v97 setAutoresizingMask:18];
  [v97 setUserInteractionEnabled:0];
  [v50 insertSubview:v97 atIndex:0];

  unint64_t v98 = *(void **)&v22[qword_10080FB80];
  *(void *)&v22[qword_10080FB80] = v97;

  return [v22 layoutIfNeeded];
}

uint64_t sub_100503178()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10051997C();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1005031F8()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100519A74();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }

  return sub_1005032D8();
}

void sub_10050327C(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FullScreenPhotoView();
  id v1 = v2.receiver;
  [super layoutSubviews];
  sub_1005032D8();
}

id sub_1005032D8()
{
  id v1 = *(void **)(v0 + qword_1007FB128);
  id result = [v1 frame];
  if (v3 > 0.0)
  {
    uint64_t v4 = *(void **)(v0 + qword_1007FB108);
    [v4 zoomScale];
    if (v5 <= 1.0)
    {
      [v4 frame];
      double v8 = v7;
      [v1 frame];
      double v10 = (v8 - v9) * 0.5;
      [v1 frame];
      double v12 = v10 + v11;
      [v1 frame];
      double v14 = v12 + v13;
      [*(id *)(v0 + qword_10080FB70) frame];
      BOOL v6 = v15 >= v14;
      id result = *(id *)(v0 + qword_10080FB80);
      if (!result) {
        return result;
      }
    }
    else
    {
      id result = *(id *)(v0 + qword_10080FB80);
      if (!result) {
        return result;
      }
      BOOL v6 = 0;
    }
    return [result setHidden:v6];
  }
  return result;
}

void sub_100503410()
{
  sub_1000109BC(v0 + qword_10080FB58);

  id v1 = *(void **)(v0 + qword_10080FB80);
}

id sub_100503480()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenPhotoView();
  [super dealloc];
}

void sub_1005034B8(uint64_t a1)
{
  sub_1000109BC(a1 + qword_10080FB58);

  objc_super v2 = *(void **)(a1 + qword_10080FB80);
}

uint64_t type metadata accessor for FullScreenPhotoView()
{
  uint64_t result = qword_10080FBB0;
  if (!qword_10080FBB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100503580()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005035E8()
{
  return type metadata accessor for FullScreenPhotoView();
}

uint64_t sub_1005035F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100503654(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1005036B4()
{
  *(void *)&v0[qword_10080FB58 + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[qword_10080FB60] = 0;
  *(void *)&v0[qword_10080FB68] = 0;
  uint64_t v1 = qword_10080FB70;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v2 = qword_10080FB78;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[qword_10080FB80] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10050379C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080FE20);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080FE20);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100503864(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  uint64_t v4 = type metadata accessor for URL();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v5 = *(void *)(sub_100010218(&qword_10080FF30) - 8);
  v3[18] = v5;
  v3[19] = *(void *)(v5 + 64);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  uint64_t v6 = sub_100010218(&qword_10080FF38);
  v3[22] = v6;
  v3[23] = *(void *)(v6 - 8);
  v3[24] = swift_task_alloc();
  uint64_t v7 = sub_100010218((uint64_t *)&unk_10080FE90);
  v3[25] = v7;
  v3[26] = *(void *)(v7 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = type metadata accessor for MainActor();
  v3[29] = static MainActor.shared.getter();
  v3[30] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[31] = v8;
  v3[32] = v9;
  return _swift_task_switch(sub_100503AD4, v8, v9);
}

uint64_t sub_100503AD4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioSession);
  *(void *)(v0 + 264) = v1;
  return _swift_task_switch(sub_100503B70, v1, 0);
}

uint64_t sub_100503B70()
{
  sub_1003AFE70((uint64_t)AVAudioSessionCategoryPlayAndRecord);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 256);
  return _swift_task_switch(sub_100503C0C, v1, v2);
}

uint64_t sub_100503C0C()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100503CC4, v1, v0);
}

uint64_t sub_100503CC4()
{
  uint64_t v1 = v0[14];
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioEngine);
  id v3 = [v2 inputNode];
  [v3 removeTapOnBus:0];

  id v4 = [v2 inputNode];
  id v5 = [v4 inputFormatForBus:0];
  [v5 sampleRate];
  if (v6 > 0.0 && [v5 channelCount])
  {
    uint64_t v51 = v5;
    id v52 = v2;
    id v53 = v4;
    uint64_t v7 = v0[26];
    uint64_t v8 = v0[27];
    uint64_t v10 = v0[24];
    uint64_t v9 = v0[25];
    uint64_t v11 = v0[22];
    uint64_t v12 = v0[23];
    uint64_t v13 = v0[21];
    uint64_t v14 = v0[16];
    uint64_t v49 = v0[17];
    uint64_t v50 = v0[15];
    uint64_t v47 = v0[14];
    uint64_t v48 = v0[13];
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v11);
    static AsyncStream.makeStream(of:bufferingPolicy:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v13, v8, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v9);
    uint64_t v15 = v47 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_outputContinuation;
    swift_beginAccess();
    sub_100505214(v13, v15);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v49, v48, v50);
    id v16 = [v52 inputNode];
    id v17 = [v16 inputFormatForBus:0];

    id v18 = [v17 settings];
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v19 = objc_allocWithZone((Class)AVAudioFile);
    id v20 = sub_10050527C(v49);
    uint64_t v23 = v0[20];
    uint64_t v22 = v0[21];
    uint64_t v25 = v0[18];
    uint64_t v24 = v0[19];
    uint64_t v26 = v0[14];
    uint64_t v27 = *(void **)(v26 + 16);
    *(void *)(v26 + 16) = v20;

    id v28 = [v52 inputNode];
    sub_100505404(v15, v22);
    id v29 = *(void **)(v26 + 16);
    sub_10050546C(v22, v23);
    unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v31 = swift_allocObject();
    sub_10050546C(v23, v31 + v30);
    *(void *)(v31 + ((v24 + v30 + 7) & 0xFFFFFFFFFFFFFFF8)) = v29;
    v0[6] = sub_100505614;
    v0[7] = v31;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1005047B0;
    v0[5] = &unk_1007B0A68;
    double v32 = _Block_copy(v0 + 2);
    id v33 = v29;
    id v34 = v51;
    swift_release();
    [v28 installTapOnBus:0 bufferSize:1024 format:v34 block:v32];
    _Block_release(v32);

    [v52 prepare];
    v0[11] = 0;
    unsigned __int8 v35 = [v52 startAndReturnError:v0 + 11];
    uint64_t v36 = (void *)v0[11];
    uint64_t v38 = v0[26];
    uint64_t v37 = v0[27];
    uint64_t v39 = v0[25];
    if (v35)
    {
      id v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      id v41 = v36;
      v40(v37, v39);

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v42 = (uint64_t (*)(void))v0[1];
      goto LABEL_9;
    }
    uint64_t v43 = v0[12];
    id v44 = v36;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    uint64_t v45 = sub_100010218(&qword_10080FF40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
  }
  else
  {
    sub_1002E63B4();
    swift_allocError();
    *id v21 = 4;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v42 = (uint64_t (*)(void))v0[1];
LABEL_9:
  return v42();
}

void sub_100504350(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100010218(&qword_10080FF30);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_10080FF48);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100505404(a3, (uint64_t)v10);
  uint64_t v14 = sub_100010218((uint64_t *)&unk_10080FE90);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
  {
    sub_10001457C((uint64_t)v10, &qword_10080FF30);
    uint64_t v16 = sub_100010218(&qword_10080FF50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
  }
  else
  {
    v31[0] = a1;
    v31[1] = a2;
    id v17 = a1;
    id v18 = a2;
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    uint64_t v19 = sub_100010218(&qword_10080FF50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 0, 1, v19);
  }
  sub_10001457C((uint64_t)v13, &qword_10080FF48);
  if (a4)
  {
    v31[0] = 0;
    unsigned int v20 = [a4 writeFromBuffer:a1 error:v31];
    id v21 = v31[0];
    if (v20)
    {
      id v22 = v21;
    }
    else
    {
      v30[1] = v31[0];
      id v23 = v31[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F7118 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_100026A54(v24, (uint64_t)qword_10080FE20);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        id v28 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 138412290;
        swift_errorRetain();
        id v29 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v31[0] = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v28 = v29;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Couldn't write to file: %@", v27, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

void sub_1005047B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t sub_100504834()
{
  v1[3] = v0;
  v1[4] = type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  v1[6] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v2;
  v1[8] = v3;
  return _swift_task_switch(sub_100504910, v2, v3);
}

uint64_t sub_100504910()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioSession);
  *(void *)(v0 + 72) = v1;
  return _swift_task_switch(sub_1005049AC, v1, 0);
}

uint64_t sub_1005049AC()
{
  sub_1003AFE70((uint64_t)AVAudioSessionCategoryPlayAndRecord);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100504A48, v1, v2);
}

uint64_t sub_100504A48()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100504B00, v1, v0);
}

uint64_t sub_100504B00()
{
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioEngine);
  v0[2] = 0;
  unsigned int v3 = [v2 startAndReturnError:v0 + 2];
  uint64_t v4 = (void *)v0[2];
  if (v3)
  {
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    id v5 = v4;
    id v6 = v9;
  }
  else
  {
    id v7 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v6 = (uint64_t (*)(void))v0[1];
  }
  return v6();
}

uint64_t sub_100504C18()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100010218(&qword_10080FF30);
  __chkstk_darwin(v5 - 8);
  id v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100010218((uint64_t *)&unk_10080FE90);
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = __chkstk_darwin(v8).n128_u64[0];
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioEngine) stop:v10];
  uint64_t v13 = v1 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_outputContinuation;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
    AsyncStream.Continuation.finish()();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  sub_100505214((uint64_t)v7, v13);
  swift_endAccess();
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v1;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080FF68, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100504EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_100504F88, v6, v5);
}

uint64_t sub_100504F88()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioSession);
  *(void *)(v0 + 48) = v1;
  return _swift_task_switch(sub_100504FB4, v1, 0);
}

uint64_t sub_100504FB4()
{
  sub_1003B01A0();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  return _swift_task_switch(sub_10010AEB4, v1, v2);
}

uint64_t sub_100505018()
{
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_outputContinuation, &qword_10080FF30);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005050AC()
{
  return type metadata accessor for AudioEngineRecordingMethod();
}

uint64_t type metadata accessor for AudioEngineRecordingMethod()
{
  uint64_t result = qword_10080FE78;
  if (!qword_10080FE78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100505100()
{
  sub_1005051B8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005051B8()
{
  if (!qword_10080FE88)
  {
    sub_100014440((uint64_t *)&unk_10080FE90);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080FE88);
    }
  }
}

uint64_t sub_100505214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_10080FF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_10050527C(uint64_t a1)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = 0;
  id v7 = [v2 initForWriting:v5 settings:isa error:&v15];

  id v8 = v15;
  if (v7)
  {
    uint64_t v9 = type metadata accessor for URL();
    double v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    id v11 = v8;
    v10(a1, v9);
  }
  else
  {
    id v12 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

uint64_t sub_100505404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_10080FF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050546C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_10080FF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005054D4()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_10080FF30) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_10080FE90);
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }

  return swift_deallocObject();
}

void sub_100505614(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_100010218(&qword_10080FF30) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100504350(a1, a2, v2 + v6, v7);
}

uint64_t sub_1005056C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005056D4()
{
  return swift_release();
}

uint64_t sub_1005056DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10050571C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100504EF0(a1, v4, v5, v6);
}

id sub_1005057D0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ExportManager()) init];
  qword_10083D6B0 = (uint64_t)result;
  return result;
}

uint64_t sub_100505804()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ExportOptions();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC0C0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC7Journal13ExportManager_currentExportOptions;
  swift_beginAccess();
  sub_100505C64(v9, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_100505CCC((uint64_t)v8);
  }
  else
  {
    sub_100095A1C((uint64_t)v8, (uint64_t)v5);
    sub_100505CCC((uint64_t)v8);
    sub_100479A0C();
    sub_100095AE8((uint64_t)v5);
  }
  double v10 = *(void **)(v1 + OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController) = 0;

  swift_unknownObjectWeakAssign();
  *(void *)(v1 + OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask) = 0;
  return swift_release();
}

id sub_100505A6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExportManager();
  return [super dealloc];
}

uint64_t sub_100505B10()
{
  return type metadata accessor for ExportManager();
}

uint64_t type metadata accessor for ExportManager()
{
  uint64_t result = qword_10080FFA0;
  if (!qword_10080FFA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100505B64()
{
  sub_100505C0C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100505C0C()
{
  if (!qword_10080FFB0)
  {
    type metadata accessor for ExportOptions();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080FFB0);
    }
  }
}

uint64_t sub_100505C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100505CCC(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC0C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100505D2C@<X0>(void (*a1)(__n128)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, void (*a3)(void *__return_ptr, void)@<X4>, uint64_t a4@<X5>, void (*a5)(uint64_t *__return_ptr, uint64_t)@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _DWORD v88[3];
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t *__return_ptr, uint64_t);
  uint64_t started;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  unsigned __int8 v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 v106;
  uint64_t v107;
  unsigned __int8 v108;
  unsigned __int8 v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  uint64_t v117;
  unsigned __int8 v118;
  char v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;

  uint64_t v80 = a6;
  uint64_t v94 = a5;
  unint64_t v87 = a4;
  *(void *)id v88 = a3;
  id v79 = a7;
  started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  __chkstk_darwin(started);
  id v71 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v81 = (uint64_t)&v71 - v12;
  __chkstk_darwin(v13);
  id v15 = (char *)&v71 - v14;
  __chkstk_darwin(v16);
  id v18 = (char *)&v71 - v17;
  uint64_t v19 = sub_100010218(&qword_10080FFB8);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100807940);
  uint64_t v23 = *(void *)(v22 - 8);
  __n128 v24 = __chkstk_darwin(v22);
  id v96 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    a1(v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  }
  uint64_t v26 = v7;
  sub_1002FCBE8(v7, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1005064BC((uint64_t)v18, v96);
    sub_100506524((uint64_t)v18);
    uint64_t v27 = sub_10001457C((uint64_t)v21, &qword_10080FFB8);
  }
  else
  {
    sub_100506524((uint64_t)v18);
    uint64_t v27 = sub_100506580((uint64_t)v21, v96);
  }
  id v28 = v94;
  id v29 = started;
  if (a2)
  {
    a2(&v97, v27);
    unint64_t v30 = v97;
    uint64_t v31 = v98;
    double v32 = v99;
    id v33 = v100;
    LODWORD(v94) = v101;
    id v34 = v103;
    id v93 = v102;
    id v91 = v104;
    id v90 = v105;
    id v89 = v106;
    sub_1002FCBE8(v26, (uint64_t)v15);
    id v92 = v34;
    if (v34) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_1002FCBE8(v7, (uint64_t)v15);
  }
  unsigned __int8 v35 = &v15[*(int *)(v29 + 20)];
  unint64_t v30 = *(void *)v35;
  uint64_t v31 = v35[8];
  double v32 = v35[9];
  id v33 = v35[10];
  LODWORD(v94) = v35[11];
  uint64_t v36 = *((void *)v35 + 3);
  id v93 = *((void *)v35 + 2);
  uint64_t v37 = *((void *)v35 + 5);
  id v91 = *((void *)v35 + 4);
  id v89 = v35[48];
  id v92 = v36;
  swift_bridgeObjectRetain();
  id v90 = v37;
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v38 = *(void (**)(uint64_t *__return_ptr, uint64_t))v88;
  id v75 = v33;
  id v78 = v30;
  uint64_t v39 = sub_100506524((uint64_t)v15);
  if (v38)
  {
    v38(&v107, v39);
    id v40 = v107;
    id v41 = v108;
    id v42 = v109;
    v88[0] = v110;
    LODWORD(v87) = v111;
    uint64_t v43 = v113;
    id v86 = v112;
    id v84 = v114;
    id v83 = v115;
    id v82 = v116;
    id v44 = v81;
    sub_1002FCBE8(v26, v81);
    id v85 = v43;
    if (v43)
    {
      uint64_t v45 = v44;
      uint64_t v46 = (uint64_t)v71;
      uint64_t v47 = (int *)started;
      goto LABEL_17;
    }
  }
  else
  {
    id v44 = v81;
    sub_1002FCBE8(v26, v81);
  }
  uint64_t v47 = (int *)started;
  uint64_t v48 = v44 + *(int *)(started + 24);
  id v40 = *(void *)v48;
  id v41 = *(unsigned __int8 *)(v48 + 8);
  id v42 = *(unsigned __int8 *)(v48 + 9);
  v88[0] = *(unsigned __int8 *)(v48 + 10);
  LODWORD(v87) = *(unsigned __int8 *)(v48 + 11);
  uint64_t v49 = *(void *)(v48 + 24);
  id v86 = *(void *)(v48 + 16);
  uint64_t v50 = *(void *)(v48 + 40);
  id v84 = *(void *)(v48 + 32);
  id v82 = *(unsigned __int8 *)(v48 + 48);
  id v85 = v49;
  swift_bridgeObjectRetain();
  id v83 = v50;
  swift_bridgeObjectRetain();
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)v71;
LABEL_17:
  char v72 = v42;
  id v73 = v41;
  id v74 = v40;
  double v76 = v32;
  id v77 = v31;
  uint64_t v51 = sub_100506524(v45);
  if (!v28)
  {
    sub_1002FCBE8(v26, v46);
LABEL_21:
    id v61 = v46 + v47[7];
    id v81 = *(void *)v61;
    LODWORD(v80) = *(unsigned __int8 *)(v61 + 8);
    id v53 = *(unsigned char *)(v61 + 9);
    uint64_t v54 = *(unsigned char *)(v61 + 10);
    id v55 = *(unsigned char *)(v61 + 11);
    id v57 = *(void *)(v61 + 16);
    id v56 = *(void *)(v61 + 24);
    double v58 = *(void *)(v61 + 32);
    double v59 = *(void *)(v61 + 40);
    double v60 = *(unsigned char *)(v61 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  v28(&v117, v51);
  id v81 = v117;
  LODWORD(v80) = v118;
  id v52 = v26;
  id v53 = v119;
  uint64_t v54 = v120;
  id v55 = v121;
  id v57 = v122;
  id v56 = v123;
  double v58 = v124;
  double v59 = v125;
  double v60 = v126;
  sub_1002FCBE8(v52, v46);
  if (!v56) {
    goto LABEL_21;
  }
LABEL_22:
  sub_100506524(v46);
  id v62 = v79;
  uint64_t result = sub_100506580(v96, v79);
  uint64_t v64 = v62 + v47[5];
  *(void *)uint64_t v64 = v78;
  *(unsigned char *)(v64 + 8) = v77;
  *(unsigned char *)(v64 + 9) = v76;
  *(unsigned char *)(v64 + 10) = v75;
  *(unsigned char *)(v64 + 11) = (_BYTE)v94;
  id v65 = v92;
  *(void *)(v64 + 16) = v93;
  *(void *)(v64 + 24) = v65;
  id v66 = v90;
  *(void *)(v64 + 32) = v91;
  *(void *)(v64 + 40) = v66;
  *(unsigned char *)(v64 + 48) = v89;
  id v67 = v62 + v47[6];
  *(void *)id v67 = v74;
  *(unsigned char *)(v67 + 8) = v73;
  *(unsigned char *)(v67 + 9) = v72;
  *(unsigned char *)(v67 + 10) = v88[0];
  *(unsigned char *)(v67 + 11) = v87;
  uint64_t v68 = v85;
  *(void *)(v67 + 16) = v86;
  *(void *)(v67 + 24) = v68;
  double v69 = v83;
  *(void *)(v67 + 32) = v84;
  *(void *)(v67 + 40) = v69;
  *(unsigned char *)(v67 + 48) = v82;
  id v70 = v62 + v47[7];
  *(void *)id v70 = v81;
  *(unsigned char *)(v70 + 8) = v80;
  *(unsigned char *)(v70 + 9) = v53;
  *(unsigned char *)(v70 + 10) = v54;
  *(unsigned char *)(v70 + 11) = v55;
  *(void *)(v70 + 16) = v57;
  *(void *)(v70 + 24) = v56;
  *(void *)(v70 + 32) = v58;
  *(void *)(v70 + 40) = v59;
  *(unsigned char *)(v70 + 48) = v60;
  return result;
}

uint64_t type metadata accessor for StartWritingWidgetPersistedPrompts()
{
  uint64_t result = qword_100810018;
  if (!qword_100810018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005064BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100506524(uint64_t a1)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_100506580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1005065E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    id v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = sub_100010218(&qword_100807940);
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v10;
    uint64_t v13 = (char *)a2 + v10;
    *(void *)uint64_t v12 = *(void *)v13;
    *((_DWORD *)v12 + 2) = *((_DWORD *)v13 + 2);
    uint64_t v14 = *((void *)v13 + 3);
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((void *)v12 + 3) = v14;
    uint64_t v15 = *((void *)v13 + 5);
    *((void *)v12 + 4) = *((void *)v13 + 4);
    *((void *)v12 + 5) = v15;
    v12[48] = v13[48];
    uint64_t v16 = (char *)a1 + v11;
    uint64_t v17 = (char *)a2 + v11;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    v16[9] = v17[9];
    v16[10] = v17[10];
    v16[11] = v17[11];
    uint64_t v18 = *((void *)v17 + 3);
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *((void *)v16 + 3) = v18;
    uint64_t v19 = *((void *)v17 + 5);
    *((void *)v16 + 4) = *((void *)v17 + 4);
    *((void *)v16 + 5) = v19;
    v16[48] = v17[48];
    uint64_t v20 = a3[7];
    id v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)id v21 = *(void *)v22;
    v21[8] = v22[8];
    v21[9] = v22[9];
    v21[10] = v22[10];
    v21[11] = v22[11];
    uint64_t v23 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v23;
    uint64_t v24 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v24;
    v21[48] = v22[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005067D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = sub_100010218(&qword_100807940);
  v3(a1 + *(int *)(v4 + 36), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005068B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = sub_100010218(&qword_100807940);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_DWORD *)(v11 + 8) = *(_DWORD *)(v12 + 8);
  uint64_t v13 = *(void *)(v12 + 24);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = v13;
  uint64_t v14 = *(void *)(v12 + 40);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = v14;
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  uint64_t v15 = a1 + v10;
  uint64_t v16 = a2 + v10;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(unsigned char *)(v15 + 9) = *(unsigned char *)(v16 + 9);
  *(unsigned char *)(v15 + 10) = *(unsigned char *)(v16 + 10);
  *(unsigned char *)(v15 + 11) = *(unsigned char *)(v16 + 11);
  uint64_t v17 = *(void *)(v16 + 24);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = v17;
  uint64_t v18 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v18;
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(unsigned char *)(v20 + 9) = *(unsigned char *)(v21 + 9);
  *(unsigned char *)(v20 + 10) = *(unsigned char *)(v21 + 10);
  *(unsigned char *)(v20 + 11) = *(unsigned char *)(v21 + 11);
  uint64_t v22 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v23;
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100506A50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = sub_100010218(&qword_100807940);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9);
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = v12;
  *(unsigned char *)(v10 + 9) = *(unsigned char *)(v11 + 9);
  *(unsigned char *)(v10 + 10) = *(unsigned char *)(v11 + 10);
  *(unsigned char *)(v10 + 11) = *(unsigned char *)(v11 + 11);
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = *(void *)(v11 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 48) = *(unsigned char *)(v11 + 48);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  LOBYTE(v13) = *(unsigned char *)(a2 + v13 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = v13;
  *(unsigned char *)(v14 + 9) = *(unsigned char *)(v15 + 9);
  *(unsigned char *)(v14 + 10) = *(unsigned char *)(v15 + 10);
  *(unsigned char *)(v14 + 11) = *(unsigned char *)(v15 + 11);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  LOBYTE(v16) = *(unsigned char *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = v16;
  *(unsigned char *)(v17 + 9) = *(unsigned char *)(v18 + 9);
  *(unsigned char *)(v17 + 10) = *(unsigned char *)(v18 + 10);
  *(unsigned char *)(v17 + 11) = *(unsigned char *)(v18 + 11);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
  return a1;
}

uint64_t sub_100506C68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = sub_100010218(&qword_100807940);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = (long long *)(a2 + v9);
  long long v13 = *v12;
  long long v14 = v12[1];
  long long v15 = v12[2];
  *(unsigned char *)(v11 + 48) = *((unsigned char *)v12 + 48);
  *(_OWORD *)uint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  *(_OWORD *)(v11 + 32) = v15;
  uint64_t v16 = a1 + v10;
  uint64_t v17 = a2 + v10;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  long long v22 = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v21 + 16);
  *(_OWORD *)(v20 + 32) = v22;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t sub_100506D74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = sub_100010218(&qword_100807940);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *(_DWORD *)(v10 + 8) = *(_DWORD *)(a2 + v9 + 8);
  uint64_t v12 = *(void *)(a2 + v9 + 24);
  *(void *)(v10 + 16) = *(void *)(a2 + v9 + 16);
  *(void *)(v10 + 24) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v11 + 40);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 48) = *(unsigned char *)(v11 + 48);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(_DWORD *)(v15 + 8) = *(_DWORD *)(a2 + v14 + 8);
  uint64_t v17 = *(void *)(a2 + v14 + 24);
  *(void *)(v15 + 16) = *(void *)(a2 + v14 + 16);
  *(void *)(v15 + 24) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_DWORD *)(v20 + 8) = *(_DWORD *)(v21 + 8);
  uint64_t v22 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  return a1;
}

uint64_t sub_100506EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100506EF8);
}

uint64_t sub_100506EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100807940);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100506FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100506FD4);
}

uint64_t sub_100506FD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218(&qword_100807940);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

void sub_100507098()
{
  sub_100507130();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100507130()
{
  if (!qword_100810028)
  {
    type metadata accessor for Date();
    sub_1005094EC((unint64_t *)&qword_1007FD120);
    unint64_t v0 = type metadata accessor for Range();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100810028);
    }
  }
}

uint64_t sub_1005071B0(unsigned __int8 *a1, char *a2)
{
  return sub_10017C304(*a1, *a2);
}

Swift::Int sub_1005071BC()
{
  return sub_1002318DC();
}

uint64_t sub_1005071C4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005072A0()
{
  return sub_100231FBC();
}

unint64_t sub_1005072A8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005097BC(*a1);
  *a2 = result;
  return result;
}

void sub_1005072D8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x616568416B6F6F6CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000746E65;
      uint64_t v3 = 0x6D6F4D6568546E69;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000010;
      a1[1] = 0x8000000100686BE0;
      break;
    case 3:
      *a1 = 0x446C616963657073;
      a1[1] = 0xEB00000000737961;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_10050738C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1005073EC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10050743C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10017C1E0(*a1, *a2);
}

Swift::Int sub_100507448()
{
  return Hasher._finalize()();
}

uint64_t sub_1005074F4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10050758C()
{
  return Hasher._finalize()();
}

unint64_t sub_100507634@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100794E78;
  unint64_t result = sub_100509808(*a1, v3);
  *a2 = result;
  return result;
}

void sub_10050766C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000079;
  unint64_t v4 = 0xEA00000000006B65;
  uint64_t v5 = 0x6557664F656D6974;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656D6974796E61;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6144664F656D6974;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1005076D4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100507734()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100507784(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10017C0BC(*a1, *a2);
}

Swift::Int sub_100507790()
{
  return Hasher._finalize()();
}

uint64_t sub_10050783C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005078D4()
{
  return Hasher._finalize()();
}

unint64_t sub_10050797C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100794EE0;
  unint64_t result = sub_100509808(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1005079B4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA0000000000656ELL;
  unint64_t v4 = 0xEF72616C75676E61;
  uint64_t v5 = 0x746365526B636F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1701670760;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x696C6E496B636F6CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100507A1C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100507A7C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100507ACC()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt v1 = *(void *)v0;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v1);
  }
  String.hash(into:)();
  swift_bridgeObjectRelease();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100507D18(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1008100F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_10050A8A4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    v10[14] = v3[9];
    v10[13] = 1;
    sub_10050A8F8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[12] = v3[10];
    v10[11] = 2;
    sub_10050A94C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[10] = v3[11];
    v10[9] = 3;
    sub_10050A9A0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[8] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[7] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100507F64()
{
  unint64_t result = 0x64496568636163;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74616E6974736564;
      break;
    case 2:
      unint64_t result = 0x656C616373;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 1954047348;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100508024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100509850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10050804C(uint64_t a1)
{
  unint64_t v2 = sub_10050A8A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100508088(uint64_t a1)
{
  unint64_t v2 = sub_10050A8A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1005080C4()
{
  return Hasher._finalize()();
}

Swift::Int sub_100508108()
{
  return Hasher._finalize()();
}

double sub_100508144@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100509AC0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100508188(void *a1)
{
  return sub_100507D18(a1);
}

uint64_t sub_1005081A0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100508FAC((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1005081E8(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1008100B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_10050A324();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v9 = v3[1];
  long long v12 = *v3;
  long long v13 = v9;
  long long v14 = v3[2];
  v11[15] = 0;
  sub_10050A378();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100508368()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x74706D6F7270;
  }
}

uint64_t sub_1005083A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100509DF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005083CC(uint64_t a1)
{
  unint64_t v2 = sub_10050A324();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100508408(uint64_t a1)
{
  unint64_t v2 = sub_10050A324();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100508444@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100509ED8(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(unsigned char *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_100508494(void *a1)
{
  return sub_1005081E8(a1);
}

uint64_t sub_1005084AC(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v2;
  int v3 = *(unsigned __int8 *)(a1 + 48);
  long long v4 = *a2;
  long long v5 = a2[1];
  v9[2] = *(_OWORD *)(a1 + 32);
  v10[0] = v4;
  long long v6 = a2[2];
  v10[1] = v5;
  v10[2] = v6;
  int v7 = *((unsigned __int8 *)a2 + 48);
  return sub_100508FAC((uint64_t)v9, (uint64_t)v10) & ~(v3 ^ v7) & 1;
}

uint64_t sub_10050850C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_100810060);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100508E30();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v36) = 0;
  sub_100010218(&qword_100807940);
  sub_100508ED8(&qword_100810070, &qword_1007F99F0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t started = (int *)type metadata accessor for StartWritingWidgetPersistedPrompts();
    unint64_t v10 = (uint64_t *)(v3 + started[5]);
    uint64_t v11 = *v10;
    char v12 = *((unsigned char *)v10 + 8);
    __int16 v13 = *(_WORD *)((char *)v10 + 9);
    char v14 = *((unsigned char *)v10 + 11);
    long long v15 = *((_OWORD *)v10 + 1);
    uint64_t v16 = v10[4];
    uint64_t v17 = v10[5];
    LOBYTE(v10) = *((unsigned char *)v10 + 48);
    uint64_t v36 = v11;
    char v37 = v12;
    __int16 v38 = v13;
    char v39 = v14;
    long long v40 = v15;
    uint64_t v41 = v16;
    uint64_t v42 = v17;
    char v43 = (char)v10;
    HIBYTE(v35) = 1;
    sub_100508E84();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v18 = (uint64_t *)(v3 + started[6]);
    uint64_t v19 = *v18;
    char v20 = *((unsigned char *)v18 + 8);
    __int16 v21 = *(_WORD *)((char *)v18 + 9);
    char v22 = *((unsigned char *)v18 + 11);
    long long v23 = *((_OWORD *)v18 + 1);
    uint64_t v24 = v18[4];
    uint64_t v25 = v18[5];
    LOBYTE(v18) = *((unsigned char *)v18 + 48);
    uint64_t v36 = v19;
    char v37 = v20;
    __int16 v38 = v21;
    char v39 = v22;
    long long v40 = v23;
    uint64_t v41 = v24;
    uint64_t v42 = v25;
    char v43 = (char)v18;
    HIBYTE(v35) = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v26 = (uint64_t *)(v3 + started[7]);
    uint64_t v27 = *v26;
    char v28 = *((unsigned char *)v26 + 8);
    __int16 v29 = *(_WORD *)((char *)v26 + 9);
    char v30 = *((unsigned char *)v26 + 11);
    long long v31 = *((_OWORD *)v26 + 1);
    uint64_t v32 = v26[4];
    uint64_t v33 = v26[5];
    LOBYTE(v26) = *((unsigned char *)v26 + 48);
    uint64_t v36 = v27;
    char v37 = v28;
    __int16 v38 = v29;
    char v39 = v30;
    long long v40 = v31;
    uint64_t v41 = v32;
    uint64_t v42 = v33;
    char v43 = (char)v26;
    HIBYTE(v35) = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100508808@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_100010218(&qword_100807940);
  __chkstk_darwin(v4);
  long long v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100010218(&qword_100810080);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetPersistedPrompts();
  __chkstk_darwin(started);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100508E30();
  uint64_t v42 = v7;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v11 = v39;
  LOBYTE(v43) = 0;
  sub_100508ED8(&qword_100810088, &qword_10080E9D0);
  uint64_t v12 = (uint64_t)v40;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100506580(v12, (uint64_t)v10);
  char v51 = 1;
  sub_100508F58();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v13 = v44;
  __int16 v14 = v45;
  char v15 = v46;
  long long v16 = v47;
  uint64_t v17 = v48;
  uint64_t v18 = v49;
  char v19 = v50;
  char v20 = &v10[started[5]];
  *(void *)char v20 = v43;
  v20[8] = v13;
  *(_WORD *)(v20 + 9) = v14;
  v20[11] = v15;
  *((_OWORD *)v20 + 1) = v16;
  *((void *)v20 + 4) = v17;
  *((void *)v20 + 5) = v18;
  v20[48] = v19;
  char v51 = 2;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v21 = v44;
  __int16 v22 = v45;
  char v23 = v46;
  long long v24 = v47;
  uint64_t v25 = v48;
  uint64_t v26 = v49;
  char v27 = v50;
  char v28 = &v10[started[6]];
  *(void *)char v28 = v43;
  v28[8] = v21;
  *(_WORD *)(v28 + 9) = v22;
  v28[11] = v23;
  *((_OWORD *)v28 + 1) = v24;
  *((void *)v28 + 4) = v25;
  *((void *)v28 + 5) = v26;
  v28[48] = v27;
  char v51 = 3;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v41);
  char v29 = v44;
  __int16 v30 = v45;
  char v31 = v46;
  long long v32 = v47;
  uint64_t v33 = v48;
  uint64_t v34 = v49;
  char v35 = v50;
  uint64_t v36 = &v10[started[7]];
  *(void *)uint64_t v36 = v43;
  v36[8] = v29;
  *(_WORD *)(v36 + 9) = v30;
  v36[11] = v31;
  *((_OWORD *)v36 + 1) = v32;
  *((void *)v36 + 4) = v33;
  *((void *)v36 + 5) = v34;
  v36[48] = v35;
  sub_1002FCBE8((uint64_t)v10, v38);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_100506524((uint64_t)v10);
}

unint64_t sub_100508CC0()
{
  unint64_t result = 0x656D69746566696CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x696C6E496B636F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6F666E49656D6F68;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100508D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10050A14C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100508D84(uint64_t a1)
{
  unint64_t v2 = sub_100508E30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100508DC0(uint64_t a1)
{
  unint64_t v2 = sub_100508E30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100508DFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100508808(a1, a2);
}

uint64_t sub_100508E14(void *a1)
{
  return sub_10050850C(a1);
}

unint64_t sub_100508E30()
{
  unint64_t result = qword_100810068;
  if (!qword_100810068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810068);
  }
  return result;
}

unint64_t sub_100508E84()
{
  unint64_t result = qword_100810078;
  if (!qword_100810078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810078);
  }
  return result;
}

uint64_t sub_100508ED8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(&qword_100807940);
    sub_1005094EC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100508F58()
{
  unint64_t result = qword_100810090;
  if (!qword_100810090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810090);
  }
  return result;
}

uint64_t sub_100508FAC(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  int v5 = *(unsigned __int8 *)(a1 + 9);
  uint64_t v6 = 0x746365526B636F6CLL;
  unint64_t v7 = 0xEF72616C75676E61;
  if (v5 != 1)
  {
    uint64_t v6 = 1701670760;
    unint64_t v7 = 0xE400000000000000;
  }
  if (*(unsigned char *)(a1 + 9)) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0x696C6E496B636F6CLL;
  }
  if (v5) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = 0xEA0000000000656ELL;
  }
  uint64_t v10 = 0x746365526B636F6CLL;
  unint64_t v11 = 0xEF72616C75676E61;
  if (*(unsigned char *)(a2 + 9) != 1)
  {
    uint64_t v10 = 1701670760;
    unint64_t v11 = 0xE400000000000000;
  }
  if (*(unsigned char *)(a2 + 9)) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0x696C6E496B636F6CLL;
  }
  if (*(unsigned char *)(a2 + 9)) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = 0xEA0000000000656ELL;
  }
  if (v8 == v12 && v9 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  uint64_t v16 = 0x6557664F656D6974;
  unint64_t v17 = 0xEA00000000006B65;
  unint64_t v18 = 0xE700000000000000;
  if (*(unsigned char *)(a1 + 10) == 1) {
    unint64_t v18 = 0xEA00000000006B65;
  }
  else {
    uint64_t v16 = 0x656D6974796E61;
  }
  if (*(unsigned char *)(a1 + 10)) {
    uint64_t v19 = v16;
  }
  else {
    uint64_t v19 = 0x6144664F656D6974;
  }
  if (*(unsigned char *)(a1 + 10)) {
    unint64_t v20 = v18;
  }
  else {
    unint64_t v20 = 0xE900000000000079;
  }
  uint64_t v21 = 0x6557664F656D6974;
  if (*(unsigned char *)(a2 + 10) != 1)
  {
    uint64_t v21 = 0x656D6974796E61;
    unint64_t v17 = 0xE700000000000000;
  }
  if (*(unsigned char *)(a2 + 10)) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0x6144664F656D6974;
  }
  if (*(unsigned char *)(a2 + 10)) {
    unint64_t v23 = v17;
  }
  else {
    unint64_t v23 = 0xE900000000000079;
  }
  if (v19 == v22 && v20 == v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v24 & 1) == 0) {
      return result;
    }
  }
  if ((sub_10017C304(*(unsigned char *)(a1 + 11), *(unsigned char *)(a2 + 11)) & 1) == 0) {
    return 0;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v25 & 1) != 0))
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_100509258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807940);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v41 - v8;
  type metadata accessor for Date();
  sub_1005094EC((unint64_t *)&qword_1007FABD0);
  char v10 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_1005064BC(a1, (uint64_t)v9);
  sub_1005064BC(a2, (uint64_t)v6);
  if ((v10 & 1) == 0)
  {
    sub_10001457C((uint64_t)v6, &qword_100807940);
    sub_10001457C((uint64_t)v9, &qword_100807940);
    goto LABEL_9;
  }
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_10001457C((uint64_t)v6, &qword_100807940);
  sub_10001457C((uint64_t)v9, &qword_100807940);
  if ((v11 & 1) == 0)
  {
LABEL_9:
    char v22 = 0;
    return v22 & 1;
  }
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v13 = a1 + started[5];
  long long v14 = *(_OWORD *)(v13 + 32);
  long long v15 = *(_OWORD *)v13;
  v45[1] = *(_OWORD *)(v13 + 16);
  v45[2] = v14;
  v45[0] = v15;
  int v16 = *(unsigned __int8 *)(v13 + 48);
  uint64_t v17 = a2 + started[5];
  long long v18 = *(_OWORD *)(v17 + 32);
  long long v19 = *(_OWORD *)v17;
  v46[1] = *(_OWORD *)(v17 + 16);
  v46[2] = v18;
  v46[0] = v19;
  int v20 = *(unsigned __int8 *)(v17 + 48);
  char v21 = sub_100508FAC((uint64_t)v45, (uint64_t)v46);
  char v22 = 0;
  if ((v21 & 1) != 0 && ((v16 ^ v20) & 1) == 0)
  {
    uint64_t v23 = a1 + started[6];
    long long v24 = *(_OWORD *)(v23 + 32);
    long long v25 = *(_OWORD *)v23;
    v43[1] = *(_OWORD *)(v23 + 16);
    v43[2] = v24;
    v43[0] = v25;
    int v26 = *(unsigned __int8 *)(v23 + 48);
    uint64_t v27 = a2 + started[6];
    long long v28 = *(_OWORD *)(v27 + 32);
    long long v29 = *(_OWORD *)v27;
    v44[1] = *(_OWORD *)(v27 + 16);
    v44[2] = v28;
    v44[0] = v29;
    int v30 = *(unsigned __int8 *)(v27 + 48);
    char v31 = sub_100508FAC((uint64_t)v43, (uint64_t)v44);
    char v22 = 0;
    if ((v31 & 1) != 0 && ((v26 ^ v30) & 1) == 0)
    {
      uint64_t v32 = a1 + started[7];
      long long v33 = *(_OWORD *)(v32 + 32);
      long long v34 = *(_OWORD *)v32;
      v41[1] = *(_OWORD *)(v32 + 16);
      v41[2] = v33;
      v41[0] = v34;
      char v35 = *(unsigned char *)(v32 + 48);
      uint64_t v36 = a2 + started[7];
      long long v37 = *(_OWORD *)(v36 + 32);
      long long v38 = *(_OWORD *)v36;
      v42[1] = *(_OWORD *)(v36 + 16);
      v42[2] = v37;
      v42[0] = v38;
      char v39 = *(unsigned char *)(v36 + 48);
      char v22 = sub_100508FAC((uint64_t)v41, (uint64_t)v42) & (v35 ^ v39 ^ 1);
    }
  }
  return v22 & 1;
}

uint64_t sub_1005094EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Date();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPersistedPrompts.CodingKeys()
{
  return &type metadata for StartWritingWidgetPersistedPrompts.CodingKeys;
}

uint64_t initializeWithCopy for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 11) = *((unsigned char *)a2 + 11);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t assignWithTake for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPersistedPrompts.PromptInfo()
{
  return &type metadata for StartWritingWidgetPersistedPrompts.PromptInfo;
}

unint64_t sub_1005096B8()
{
  unint64_t result = qword_100810098;
  if (!qword_100810098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810098);
  }
  return result;
}

unint64_t sub_100509710()
{
  unint64_t result = qword_1008100A0;
  if (!qword_1008100A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100A0);
  }
  return result;
}

unint64_t sub_100509768()
{
  unint64_t result = qword_1008100A8;
  if (!qword_1008100A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100A8);
  }
  return result;
}

unint64_t sub_1005097BC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100794DF8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_100509808(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_100509850(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496568636163 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010069FF20)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_100509AC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100010218(&qword_100810120);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10050A8A4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  char v34 = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v11 = v10;
  char v32 = 1;
  sub_10050A9F4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v25 = v33;
  char v30 = 2;
  sub_10050AA48();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v24 = v31;
  char v28 = 3;
  sub_10050AA9C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v23 = v29;
  char v27 = 4;
  uint64_t v21 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v22 = v12;
  char v26 = 5;
  swift_bridgeObjectRetain();
  uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v15 = v14;
  int v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  *(unsigned char *)(a2 + 9) = v25;
  *(unsigned char *)(a2 + 10) = v24;
  *(unsigned char *)(a2 + 11) = v23;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v15;
  return result;
}

uint64_t sub_100509DF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010069FF00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100509ED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100010218(&qword_1008100C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10050A324();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  char v30 = 0;
  sub_10050A3CC();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v19 = v20;
  int v29 = v21;
  int v17 = v23;
  int v18 = v22;
  int v16 = v24;
  uint64_t v9 = v26;
  uint64_t v10 = v28;
  uint64_t v14 = v27;
  uint64_t v15 = v25;
  LOBYTE(v20) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(unsigned char *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 9) = v18;
  *(unsigned char *)(a2 + 10) = v17;
  *(unsigned char *)(a2 + 11) = v16;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = v11 & 1;
  return result;
}

uint64_t sub_10050A14C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D69746566696CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696C6E496B636F6CLL && a2 == 0xEE006F666E49656ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010069FEE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F666E49656D6F68 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_10050A324()
{
  unint64_t result = qword_1008100B8;
  if (!qword_1008100B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100B8);
  }
  return result;
}

unint64_t sub_10050A378()
{
  unint64_t result = qword_1008100C0;
  if (!qword_1008100C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100C0);
  }
  return result;
}

unint64_t sub_10050A3CC()
{
  unint64_t result = qword_1008100D0;
  if (!qword_1008100D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StartWritingWidgetPersistedPrompts.PromptInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050A4ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPersistedPrompts.PromptInfo.CodingKeys()
{
  return &type metadata for StartWritingWidgetPersistedPrompts.PromptInfo.CodingKeys;
}

uint64_t _s7Journal24StartWritingWidgetPromptVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StartWritingWidgetPrompt(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StartWritingWidgetPrompt(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 11) = *((unsigned char *)a2 + 11);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StartWritingWidgetPrompt(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWritingWidgetPrompt(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWritingWidgetPrompt(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPrompt()
{
  return &type metadata for StartWritingWidgetPrompt;
}

unint64_t sub_10050A748()
{
  unint64_t result = qword_1008100D8;
  if (!qword_1008100D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100D8);
  }
  return result;
}

unint64_t sub_10050A7A0()
{
  unint64_t result = qword_1008100E0;
  if (!qword_1008100E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100E0);
  }
  return result;
}

unint64_t sub_10050A7F8()
{
  unint64_t result = qword_1008100E8;
  if (!qword_1008100E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100E8);
  }
  return result;
}

unint64_t sub_10050A850()
{
  unint64_t result = qword_1008100F0;
  if (!qword_1008100F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008100F0);
  }
  return result;
}

unint64_t sub_10050A8A4()
{
  unint64_t result = qword_100810100;
  if (!qword_100810100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810100);
  }
  return result;
}

unint64_t sub_10050A8F8()
{
  unint64_t result = qword_100810108;
  if (!qword_100810108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810108);
  }
  return result;
}

unint64_t sub_10050A94C()
{
  unint64_t result = qword_100810110;
  if (!qword_100810110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810110);
  }
  return result;
}

unint64_t sub_10050A9A0()
{
  unint64_t result = qword_100810118;
  if (!qword_100810118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810118);
  }
  return result;
}

unint64_t sub_10050A9F4()
{
  unint64_t result = qword_100810128;
  if (!qword_100810128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810128);
  }
  return result;
}

unint64_t sub_10050AA48()
{
  unint64_t result = qword_100810130;
  if (!qword_100810130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810130);
  }
  return result;
}

unint64_t sub_10050AA9C()
{
  unint64_t result = qword_100810138;
  if (!qword_100810138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810138);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StartWritingWidgetPrompt.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050ABBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPrompt.CodingKeys()
{
  return &type metadata for StartWritingWidgetPrompt.CodingKeys;
}

unsigned char *_s7Journal28StartWritingWidgetPromptTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050ACC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPromptType()
{
  return &type metadata for StartWritingWidgetPromptType;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPromptScale()
{
  return &type metadata for StartWritingWidgetPromptScale;
}

unsigned char *_s7Journal35StartWritingWidgetPromptDestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050ADDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPromptDestination()
{
  return &type metadata for StartWritingWidgetPromptDestination;
}

unint64_t sub_10050AE18()
{
  unint64_t result = qword_100810140;
  if (!qword_100810140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810140);
  }
  return result;
}

unint64_t sub_10050AE70()
{
  unint64_t result = qword_100810148;
  if (!qword_100810148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810148);
  }
  return result;
}

unint64_t sub_10050AEC8()
{
  unint64_t result = qword_100810150;
  if (!qword_100810150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810150);
  }
  return result;
}

unint64_t sub_10050AF20()
{
  unint64_t result = qword_100810158;
  if (!qword_100810158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810158);
  }
  return result;
}

unint64_t sub_10050AF78()
{
  unint64_t result = qword_100810160;
  if (!qword_100810160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810160);
  }
  return result;
}

unint64_t sub_10050AFD0()
{
  unint64_t result = qword_100810168;
  if (!qword_100810168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810168);
  }
  return result;
}

unint64_t sub_10050B024()
{
  unint64_t result = qword_100810170;
  if (!qword_100810170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810170);
  }
  return result;
}

unint64_t sub_10050B078()
{
  unint64_t result = qword_100810178;
  if (!qword_100810178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810178);
  }
  return result;
}

unint64_t sub_10050B0CC()
{
  unint64_t result = qword_100810180;
  if (!qword_100810180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810180);
  }
  return result;
}

uint64_t sub_10050B120()
{
  return sub_10050B160((uint64_t)sub_10050EB3C, (uint64_t)&unk_1007B0FA0);
}

uint64_t sub_10050B140()
{
  return sub_10050B160((uint64_t)sub_10050EB1C, (uint64_t)&unk_1007B0F78);
}

uint64_t sub_10050B160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  char v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

uint64_t sub_10050B410()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100810188);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100810188);
  if (qword_1007F7DE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDB8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10050B4D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10050C350();
  }
}

id sub_10050B52C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  char v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset] = 0;
  uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_latestImageRequestID];
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v11[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLivePlayer] = 0;
  v11[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLiveSymbol] = 0;

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for LivePhotoAssetView();
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  sub_10050B7FC();

  return v14;
}

id sub_10050B69C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView;
  id v4 = objc_allocWithZone((Class)UIImageView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_latestImageRequestID];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLivePlayer] = 0;
  v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLiveSymbol] = 0;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for LivePhotoAssetView();
  [super initWithCoder:a1];
  id v9 = v8;
  if (v8)
  {
    id v10 = v8;
    sub_10050B7FC();
  }
  return v9;
}

void sub_10050B7FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100804090);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView] v7];
  id v10 = *(void **)&v0[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView];
  [v1 addSubview:v10];
  [v10 setAlpha:0.0];
  [v10 setContentMode:2];
  [v1 setIsAccessibilityElement:1];
  UIAccessibilityTraits v11 = UIAccessibilityTraitImage;
  unint64_t v12 = (unint64_t)[v1 accessibilityTraits];
  if ((v11 & ~v12) != 0) {
    UIAccessibilityTraits v13 = v11;
  }
  else {
    UIAccessibilityTraits v13 = 0;
  }
  [v1 setAccessibilityTraits:v13 | v12];
  [v1 setAccessibilityIgnoresInvertColors:1];
  if (qword_1007F7AB8 != -1) {
    swift_once();
  }
  NSString v14 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityLabel:v14];

  uint64_t v15 = *(char **)&v1[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset];
  if (!v15)
  {
LABEL_10:
    NSString v16 = 0;
    goto LABEL_11;
  }
  NSString v16 = *(NSString *)&v15[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata];
  if (v16)
  {
    int v17 = v15;
    swift_retain();
    sub_1000398E0((uint64_t)v9);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2))
    {
      sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100804090);
    }
    else
    {
      sub_10050F084((uint64_t)v9, (uint64_t)v5);
      sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100804090);
      uint64_t v18 = *(void *)&v5[*(int *)(v2 + 24) + 8];
      swift_bridgeObjectRetain();
      sub_10050F0E8((uint64_t)v5);

      if (v18)
      {
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    goto LABEL_10;
  }
LABEL_11:
  [v1 setAccessibilityValue:v16];
}

void sub_10050BB08()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView];
  if (!v3 || (id v4 = [v3 superview]) == 0)
  {
    id v5 = [objc_allocWithZone((Class)PHLivePhotoView) init];
    [v1 addSubview:v5];
    id v6 = v5;
    [v1 bounds];
    [v6 setFrame:];

    [v6 setContentMode:2];
    double v7 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v6;
    id v4 = v6;

    sub_10050DFF0(v1[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLivePlayer], 0);
  }

  uint64_t v8 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView;
  id v9 = [*(id *)&v1[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView] superview];

  if (!v9)
  {
    if (qword_1007F7C20 != -1) {
      swift_once();
    }
    id v10 = (id)qword_10083E908;
    if (qword_10083E908)
    {
      id v11 = [self systemFontOfSize:22.0 weight:UIFontWeightRegular];
      id v12 = [self configurationWithFont:v11 scale:1];

      id v10 = [v10 imageWithConfiguration:v12];
    }
    uint64_t v36 = v10;
    id v13 = [objc_allocWithZone((Class)UIImageView) initWithImage:v10];
    [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
    NSString v14 = self;
    id v15 = [v14 systemWhiteColor];
    [v13 setTintColor:v15];

    id v16 = [v13 layer];
    id v17 = [v14 blackColor];
    id v18 = [v17 CGColor];

    [v16 setShadowColor:v18];
    id v19 = [v13 layer];
    [v19 setShadowRadius:1.0];

    id v20 = [v13 layer];
    LODWORD(v21) = 0.5;
    [v20 setShadowOpacity:v21];

    id v22 = [v13 layer];
    [v22 setShadowOffset:0.0, 1.0];

    [v1 addSubview:v13];
    unsigned __int8 v23 = self;
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1006D6D10;
    id v25 = [v13 topAnchor];
    id v26 = [v1 safeAreaLayoutGuide];
    id v27 = [v26 topAnchor];

    if (qword_1007F7360 != -1) {
      swift_once();
    }
    id v28 = [v25 constraintEqualToAnchor:v27 constant:*(double *)&qword_10083D970];

    *(void *)(v24 + 32) = v28;
    id v29 = [v13 leadingAnchor];
    id v30 = [v1 safeAreaLayoutGuide];
    id v31 = [v30 leadingAnchor];

    if (qword_1007F7350 != -1) {
      swift_once();
    }
    id v32 = [v29 constraintEqualToAnchor:v31 constant:*(double *)&qword_10083D960];

    *(void *)(v24 + 40) = v32;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_1008059B0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 activateConstraints:isa];

    char v34 = *(void **)&v1[v8];
    *(void *)&v1[v8] = v13;
    id v35 = v13;

    sub_10050E258(v1[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLiveSymbol], 0);
  }
}

id sub_10050C17C(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for LivePhotoAssetView();
  return [super a3];
}

void sub_10050C244(SEL *a1, double a2, double a3, double a4, double a5)
{
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for LivePhotoAssetView();
  [super a1:a2 a3:a4 a5:a5];
  id v11 = *(id *)&v5[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  [v5 bounds];
  [v11 setFrame:];

  id v12 = *(void **)&v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView];
  [v5 bounds];
  [v12 setFrame:];
  id v13 = *(void **)&v5[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView];
  if (v13)
  {
    id v14 = v13;
    [v5 bounds];
    [v14 setFrame:];
  }
}

void sub_10050C350()
{
  uint64_t v1 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v54 + 64);
  __chkstk_darwin(v4);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = type metadata accessor for Date();
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  id v57 = (char *)&v45 - v13;
  id v14 = *(char **)(v0 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset);
  if (!v14) {
    return;
  }
  uint64_t v15 = v0;
  char v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v12;
  uint64_t v55 = v4;
  uint64_t v53 = v11;
  unint64_t v16 = *(void *)&v14[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments];
  id v56 = v14;
  if (v16 >> 62)
  {
    uint64_t v42 = v14;
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v43)
    {
LABEL_4:
      Date.init()();
      uint64_t v19 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      uint64_t v20 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
      uint64_t v50 = v9;
      uint64_t v46 = v5;
      switch(v19)
      {
        case 5:
          swift_bridgeObjectRelease();
          goto LABEL_10;
        default:
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v21)
          {
LABEL_10:
            if (qword_1007F6A60 != -1) {
              swift_once();
            }
            id v22 = &qword_10083CF68;
          }
          else
          {
            if (qword_1007F6A58 != -1) {
              swift_once();
            }
            id v22 = &qword_10083CF60;
          }
          id v23 = (id)*v22;
          uint64_t v48 = v8;
          uint64_t v49 = v23;
          uint64_t v24 = v8;
          UUID.init()();
          uint64_t v25 = v54;
          uint64_t v26 = v55;
          id v27 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
          v27(v3, v24, v55);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v3, 0, 1, v26);
          uint64_t v28 = v15 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_latestImageRequestID;
          swift_beginAccess();
          sub_10001ACF4((uint64_t)v3, v28);
          swift_endAccess();
          unsigned int v47 = *(unsigned __int8 *)(v15 + v20);
          uint64_t v29 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v30 = v51;
          v27(v51, v24, v26);
          uint64_t v31 = v52;
          uint64_t v32 = v53;
          uint64_t v33 = v50;
          (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v52, v57, v50);
          unint64_t v34 = (*(unsigned __int8 *)(v25 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
          unint64_t v35 = (v46 + *(unsigned __int8 *)(v32 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = v29;
          long long v37 = v30;
          uint64_t v38 = v55;
          (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v36 + v34, v37, v55);
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v36 + v35, v31, v33);
          char v39 = self;
          swift_retain();
          id v40 = [v39 currentTraitCollection];
          uint64_t v41 = v49;
          sub_10017D574(v47, 0, 1, v49, v40, (uint64_t)sub_10050ED74, v36);

          swift_release();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v48, v38);
          (*(void (**)(char *, uint64_t))(v32 + 8))(v57, v33);
          swift_release();
          break;
      }
      return;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v18 = v14;
    if (v17) {
      goto LABEL_4;
    }
  }
  id v44 = v56;
}

uint64_t sub_10050C97C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  unint64_t v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  aBlock[4] = sub_10050EFAC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B11F8;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  id v22 = v34;
  static DispatchQoS.unspecified.getter();
  id v40 = _swiftEmptyArrayStorage;
  sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v25 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_10050CE50(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v65 = a4;
  id v69 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  __chkstk_darwin(v5);
  id v62 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v61 = (char *)&v60 - v8;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v60 - v12;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v64 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v60 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v60 - v26;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  if (!a2)
  {

LABEL_7:
    swift_beginAccess();
    uint64_t v36 = swift_unknownObjectWeakLoadStrong();
    if (!v36) {
      return;
    }
    id v37 = (id)v36;
    int v38 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v36 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v38 == 1 || !swift_unknownObjectWeakLoadStrong())
    {

      return;
    }
    sub_100491AF4();
    goto LABEL_30;
  }
  uint64_t v29 = a2;
  uint64_t v30 = Strong;
  (*(void (**)(char *, id, uint64_t))(v14 + 16))(v27, v69, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  id v69 = v30;
  uint64_t v31 = (uint64_t)v30 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_latestImageRequestID;
  swift_beginAccess();
  sub_10001B220(v31, (uint64_t)v24, &qword_100800950);
  uint64_t v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_10001B220((uint64_t)v27, (uint64_t)v18, &qword_100800950);
  sub_10001B220((uint64_t)v24, v32, &qword_100800950);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v33((uint64_t)v18, 1, v13) == 1)
  {
    unint64_t v34 = v29;
    id v35 = v29;
    sub_10001457C((uint64_t)v24, &qword_100800950);
    sub_10001457C((uint64_t)v27, &qword_100800950);
    if (v33(v32, 1, v13) == 1)
    {
      sub_10001457C((uint64_t)v18, &qword_100800950);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  sub_10001B220((uint64_t)v18, (uint64_t)v21, &qword_100800950);
  if (v33(v32, 1, v13) == 1)
  {
    id v39 = v29;
    sub_10001457C((uint64_t)v24, &qword_100800950);
    sub_10001457C((uint64_t)v27, &qword_100800950);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    unint64_t v34 = v29;
LABEL_14:
    sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FEB40);
LABEL_17:

    goto LABEL_32;
  }
  id v40 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v64, v32, v13);
  sub_1000E4FD0((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  id v41 = v29;
  char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v14 + 8);
  v43(v40, v13);
  sub_10001457C((uint64_t)v24, &qword_100800950);
  sub_10001457C((uint64_t)v27, &qword_100800950);
  v43(v21, v13);
  unint64_t v34 = v29;
  sub_10001457C((uint64_t)v18, &qword_100800950);
  if ((v42 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_16:
  id v44 = v69;
  sub_10050DE24();
  [*(id *)&v44[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView] setImage:v34];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  char v45 = 1;
  uint64_t v47 = v67;
  uint64_t v46 = (uint64_t)v68;
  uint64_t v48 = v66;
  switch(v44[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
  {
    case 5:
      break;
    default:
      char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
      break;
  }
  swift_retain_n();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v46, v65, v47);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v47);
  if (v45) {
    goto LABEL_23;
  }
  uint64_t v49 = v63;
  sub_10001B220(v46, v63, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v47) != 1)
  {
    uint64_t v50 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v61, v49, v47);
    char v51 = v62;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v53 = v52;
    uint64_t v54 = *(void (**)(char *, uint64_t))(v48 + 8);
    v54(v51, v47);
    v54(v50, v47);
    if (v53 >= 0.1) {
      goto LABEL_25;
    }
LABEL_23:
    swift_beginAccess();
    uint64_t v55 = swift_unknownObjectWeakLoadStrong();
    if (v55)
    {
      id v56 = (void *)v55;
      id v57 = *(id *)(v55 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView);

      [v57 setAlpha:1.0];
      swift_release_n();
    }
    else
    {
      swift_release_n();
    }
    goto LABEL_27;
  }
  sub_10001457C(v49, (uint64_t *)&unk_1007FC470);
LABEL_25:
  static Animation.easeIn(duration:)();
  sub_10001B284(0, (unint64_t *)&qword_100802730);
  static UIView.animate(_:changes:completion:)();
  swift_release_n();
  swift_release();
LABEL_27:
  sub_10001457C(v46, (uint64_t *)&unk_1007FC470);
  swift_release();
  id v58 = v69;
  char v59 = *((unsigned char *)v69 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
  *((unsigned char *)v69 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
  if ((v59 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
  {
    id v37 = v58;
    sub_100491AF4();

LABEL_30:
    swift_unknownObjectRelease();
    return;
  }

LABEL_32:
}

void sub_10050D7FC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView);

    [v2 setAlpha:1.0];
  }
}

uint64_t sub_10050D878(void *a1, uint64_t a2)
{
  v22[1] = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v22 - v14;
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v12, v9);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a1;
  aBlock[4] = sub_10050F184;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B1248;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
  return ((uint64_t (*)(char *, uint64_t))v23)(v15, v9);
}

void sub_10050DC48(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    sub_10050BB08();
    [*(id *)&v4[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView] setLivePhoto:a2];
    sub_10050DFF0(1, 0);
    sub_10050DE24();
  }
}

void sub_10050DCCC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  id v2 = *(void (**)(void, uint64_t))((swift_isaMask & *v1) + 0x58);
  uint64_t v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v4 = v1;
  v2(0, v3);

  sub_10050C350();

  sub_10050DE24();
}

void *sub_10050DD80()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset);
  id v2 = v1;
  return v1;
}

char *sub_10050DDB0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView];
  if (v1)
  {
    id v2 = v1;
    [v2 removeFromSuperview];
    id v3 = *(id *)&v0[OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView];
    [v3 removeFromSuperview];
  }
  uint64_t v4 = v0;
  return v0;
}

void sub_10050DE24()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset);
  if (v1)
  {
    unsigned __int8 v2 = *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    id v3 = v1;
    sub_10048DD38(v2, (uint64_t)v3, v13);
    sub_10012E2C4((uint64_t)v13, (uint64_t)v14);
    if (v15)
    {
      id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView), "layer"));
      if (qword_1007F6BC8 != -1) {
        swift_once();
      }
      [v4 setContentsRect:*(double *)&qword_10083D1A8, unk_10083D1B0, xmmword_10083D1B8];

      uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView);
      if (!v5) {
        goto LABEL_10;
      }
      id v6 = [v5 layer];
      [v6 setContentsRect:*(double *)&qword_10083D1A8, unk_10083D1B0, xmmword_10083D1B8];
    }
    else
    {
      double v7 = *(double *)v14;
      double v8 = *(double *)&v14[1];
      double v9 = *(double *)&v14[2];
      double v10 = *(double *)&v14[3];
      id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                  + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_thumbnailView), "layer"));
      [v11 setContentsRect:v7, v8, v9, v10];

      uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView);
      if (!v12)
      {
LABEL_10:

        return;
      }
      id v6 = [v12 layer];
      [v6 setContentsRect:v7, v8, v9, v10];
    }

    goto LABEL_10;
  }
}

void sub_10050DFF0(char a1, char a2)
{
  char v4 = a1 & 1;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLivePlayer) = a1;
  if (a1)
  {
    uint64_t v5 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView;
    id v6 = *(void **)(v2 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView);
    if (v6)
    {
      if ([v6 isHidden])
      {
        double v7 = *(void **)(v2 + v5);
        if (v7)
        {
          [v7 setAlpha:0.0];
          double v8 = *(void **)(v2 + v5);
          if (v8) {
            [v8 setHidden:0];
          }
        }
      }
    }
  }
  if (a2) {
    double v9 = 0.3;
  }
  else {
    double v9 = 0.0;
  }
  double v10 = self;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = v4;
  id v21 = sub_10050F18C;
  uint64_t v22 = v12;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_10017D530;
  id v20 = &unk_1007B1130;
  uint64_t v13 = _Block_copy(&v17);
  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = v4;
  id v21 = sub_10050F1EC;
  uint64_t v22 = v15;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1001C7318;
  id v20 = &unk_1007B1180;
  uint64_t v16 = _Block_copy(&v17);
  swift_release();
  [v10 animateWithDuration:0 delay:v13 options:v16 animations:v9 completion:0.0];
  _Block_release(v16);
  _Block_release(v13);
}

void sub_10050E240(uint64_t a1, char a2)
{
}

void sub_10050E24C(char a1, uint64_t a2, char a3)
{
}

void sub_10050E258(char a1, char a2)
{
  char v4 = a1 & 1;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLiveSymbol) = a1;
  if (a1)
  {
    uint64_t v5 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView;
    id v6 = *(void **)(v2 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView);
    if (v6)
    {
      if ([v6 isHidden])
      {
        double v7 = *(void **)(v2 + v5);
        if (v7)
        {
          [v7 setAlpha:0.0];
          double v8 = *(void **)(v2 + v5);
          if (v8) {
            [v8 setHidden:0];
          }
        }
      }
    }
  }
  if (a2) {
    double v9 = 0.3;
  }
  else {
    double v9 = 0.0;
  }
  double v10 = self;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = v4;
  id v21 = sub_10050EBCC;
  uint64_t v22 = v12;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_10017D530;
  id v20 = &unk_1007B1090;
  uint64_t v13 = _Block_copy(&v17);
  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = v4;
  id v21 = sub_10050EBF4;
  uint64_t v22 = v15;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1001C7318;
  id v20 = &unk_1007B10E0;
  uint64_t v16 = _Block_copy(&v17);
  swift_release();
  [v10 animateWithDuration:0 delay:v13 options:v16 animations:v9 completion:0.0];
  _Block_release(v16);
  _Block_release(v13);
}

void sub_10050E4A8(uint64_t a1, char a2)
{
}

void sub_10050E4B4(uint64_t a1, char a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    double v7 = *(void **)(Strong + *a3);
    id v8 = v7;

    if (v7)
    {
      double v9 = 0.0;
      if (a2) {
        double v9 = 1.0;
      }
      [v8 setAlpha:v9];
    }
  }
}

void sub_10050E54C(char a1, uint64_t a2, char a3)
{
}

void sub_10050E558(char a1, uint64_t a2, char a3, void *a4)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v7 = (void *)Strong;
      id v8 = *(void **)(Strong + *a4);
      id v9 = v8;

      if (v8)
      {
        [v9 setHidden:(a3 & 1) == 0];
      }
    }
  }
}

uint64_t sub_10050E5F0()
{
  return sub_10001457C(v0 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_latestImageRequestID, &qword_100800950);
}

id sub_10050E65C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LivePhotoAssetView();
  return [super dealloc];
}

uint64_t sub_10050E70C()
{
  return type metadata accessor for LivePhotoAssetView();
}

uint64_t type metadata accessor for LivePhotoAssetView()
{
  uint64_t result = qword_100810200;
  if (!qword_100810200) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10050E760()
{
  sub_10001A7A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10050E818()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10050DFF0(1, 1);
  }
}

void sub_10050E874()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_shouldShowLivePlayer) = 0;
    objc_super v2 = self;
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    *(unsigned char *)(v4 + 24) = 0;
    uint64_t v13 = sub_10050EB7C;
    uint64_t v14 = v4;
    aBlock = _NSConcreteStackBlock;
    uint64_t v10 = 1107296256;
    uint64_t v11 = sub_10017D530;
    uint64_t v12 = &unk_1007B0FF0;
    uint64_t v5 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(unsigned char *)(v7 + 24) = 0;
    uint64_t v13 = sub_10050EBA4;
    uint64_t v14 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v10 = 1107296256;
    uint64_t v11 = sub_1001C7318;
    uint64_t v12 = &unk_1007B1040;
    id v8 = _Block_copy(&aBlock);
    swift_release();
    [v2 animateWithDuration:0 delay:v5 options:v8 animations:0.3 completion:0.0];
    _Block_release(v8);
    _Block_release(v5);
  }
}

uint64_t sub_10050EA7C()
{
  return sub_10050B160((uint64_t)sub_10050EB1C, (uint64_t)&unk_1007B0F78);
}

uint64_t sub_10050EAB0()
{
  return sub_10050B160((uint64_t)sub_10050EB3C, (uint64_t)&unk_1007B0FA0);
}

uint64_t sub_10050EAE4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10050EB1C()
{
}

uint64_t sub_10050EB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10050EB34()
{
  return swift_release();
}

void sub_10050EB3C()
{
}

uint64_t sub_10050EB44()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10050EB7C()
{
  sub_10050E4B4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), &OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView);
}

void sub_10050EBA4(char a1)
{
  sub_10050E558(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), &OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoView);
}

void sub_10050EBCC()
{
  sub_10050E4B4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), &OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView);
}

void sub_10050EBF4(char a1)
{
  sub_10050E558(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), &OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoSymbolView);
}

uint64_t sub_10050EC1C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_10050ED74(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10050C97C(a1, v7, v1 + v4, v8);
}

uint64_t sub_10050EE4C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_10050EFAC()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_10050CE50(v5, v6, (void *)(v0 + v2), v7);
}

void sub_10050F07C()
{
}

uint64_t sub_10050F084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050F0E8(uint64_t a1)
{
  uint64_t v2 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10050F144()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10050F184()
{
  sub_10050DC48(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10050F1F0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return _swift_task_switch(sub_10050F238, 0, 0);
}

uint64_t sub_10050F238()
{
  uint64_t v1 = v0[2].i64[0];
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v3;
  void *v3 = v0;
  v3[1] = sub_10050F328;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10050F328()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10050F440, 0, 0);
}

uint64_t sub_10050F440()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10050F454()
{
  sub_100510230(v19);
  uint64_t v0 = v19[0];
  uint64_t v1 = v19[1];
  uint64_t v2 = v20;
  if (!v20) {
    goto LABEL_23;
  }
  if ((unint64_t)v19[0] >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((v19[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  while ((v0 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(v1 + 16);
    if (!v6)
    {
LABEL_19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v7 = 0;
    uint64_t v18 = self;
    uint64_t v17 = v2 - 1;
    uint64_t v8 = v3 - 1;
    while (v7 < *(void *)(v1 + 16))
    {
      uint64_t v10 = *(unsigned __int8 *)(v1 + 32 + v7);
      id v11 = [v18 currentTraitCollection];
      (*(void (**)(void, uint64_t, id))((swift_isaMask & *v5) + 0x2E0))(0, v10, v11);
      uint64_t v2 = v12;

      if (qword_1007F6BA0 != -1) {
        swift_once();
      }
      uint64_t v13 = *(void **)(*(void *)(qword_10083D190 + 16) + qword_10080D450);
      id v14 = objc_allocWithZone((Class)NSString);
      swift_bridgeObjectRetain();
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [v14 initWithString:v15];

      [v13 removeObjectForKey:v16];
      swift_bridgeObjectRelease_n();

      if (v17 == v7 || v8 == v7) {
        goto LABEL_23;
      }
      if ((v0 & 0xC000000000000001) != 0)
      {
        id v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v7 + 1 >= *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_21;
        }
        id v9 = *(id *)(v0 + 40 + 8 * v7);
      }
      uint64_t v5 = v9;
      if (v6 == ++v7) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_23;
    }
  }
  if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = *(id *)(v0 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_10050F728()
{
  uint64_t result = sub_1003888EC((uint64_t)&off_100794F48);
  qword_100810210 = result;
  return result;
}

uint64_t sub_10050F750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[12] = a2;
  sub_100010218(&qword_1007FA1D0);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  return _swift_task_switch(sub_10050F7F8, 0, 0);
}

uint64_t sub_10050F7F8()
{
  sub_100510230((uint64_t *)(v0 + 48));
  unint64_t v2 = *(void *)(v0 + 48);
  unint64_t v1 = *(void *)(v0 + 56);
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v1;
  uint64_t v3 = *(uint64_t **)(v0 + 64);
  if (!v3) {
    goto LABEL_27;
  }
  if (v2 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    id v4 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 152) = v4;
    if (!v4) {
      goto LABEL_27;
    }
  }
  else
  {
    id v4 = *(id *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 152) = v4;
    if (!v4) {
      goto LABEL_27;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 32);
LABEL_7:
    id v4 = v5;
    uint64_t v6 = *(void *)(v1 + 16);
    *(void *)(v0 + 160) = v6;
    if (v6)
    {
      if (qword_1007F7130 == -1) {
        goto LABEL_9;
      }
      goto LABEL_45;
    }
LABEL_26:

LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_9:
  *(void *)(v0 + 176) = v4;
  *(void *)(v0 + 184) = 1;
  *(void *)(v0 + 168) = v3;
  uint64_t v7 = *(void *)(v0 + 144);
  if (!*(void *)(v7 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v1 = 0;
  unint64_t v2 = (unint64_t)&unk_100810000;
  uint64_t v3 = &OBJC_IVAR____TtCC7Journal10Journaling5Asset_type;
  while (1)
  {
    char v8 = *(unsigned char *)(v7 + v1 + 32);
    if ((sub_1005419E4(*((unsigned char *)v4 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type), qword_100810210) & 1) == 0) {
      break;
    }

    if (*(void *)(v0 + 168) == 1) {
      goto LABEL_27;
    }
    unint64_t v1 = *(void *)(v0 + 184);
    if (v1 == *(void *)(v0 + 152)) {
      goto LABEL_27;
    }
    uint64_t v9 = *(void *)(v0 + 136);
    if ((v9 & 0xC000000000000001) != 0)
    {
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v1 = *(void *)(v0 + 184);
      unint64_t v10 = v1 + 1;
      if (__OFADD__(v1, 1)) {
        goto LABEL_39;
      }
    }
    else
    {
      if (v1 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_40;
      }
      id v4 = *(id *)(v9 + 8 * v1 + 32);
      unint64_t v10 = v1 + 1;
      if (__OFADD__(v1, 1))
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
    }
    if (v1 == *(void *)(v0 + 160)) {
      goto LABEL_26;
    }
    uint64_t v11 = *(void *)(v0 + 168) - 1;
    *(void *)(v0 + 176) = v4;
    *(void *)(v0 + 184) = v10;
    *(void *)(v0 + 168) = v11;
    uint64_t v7 = *(void *)(v0 + 144);
    if (v1 >= *(void *)(v7 + 16)) {
      goto LABEL_22;
    }
  }
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  id v14 = *(void **)(v0 + 112);
  uint64_t v15 = type metadata accessor for TaskPriority();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(void *)(v17 + 32) = v4;
  *(unsigned char *)(v17 + 40) = v8;
  *(void *)(v17 + 48) = v14;
  sub_1002BC878(v12, v13);
  LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
  id v18 = v4;
  id v19 = v14;
  uint64_t v20 = *(void *)(v0 + 120);
  if (v12 == 1)
  {
    sub_1000D9A48(*(void *)(v0 + 120));
    uint64_t v21 = 0;
    uint64_t v22 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v15);
    if (*(void *)(v17 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v22 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
  }
  uint64_t v26 = v0 + 16;
  uint64_t v27 = **(void **)(v0 + 96);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = &unk_100810240;
  *(void *)(v28 + 24) = v17;
  if (v22 | v21)
  {
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v21;
    *(void *)(v0 + 40) = v22;
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v29 = *(void *)(v0 + 128);
  *(void *)(v0 + 72) = 1;
  *(void *)(v0 + 80) = v26;
  *(void *)(v0 + 88) = v27;
  swift_task_create();
  swift_release();
  sub_1000D9A48(v29);
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v30;
  uint64_t v31 = sub_100010218(&qword_100810250);
  *uint64_t v30 = v0;
  v30[1] = sub_10050FD04;
  return TaskGroup.awaitAllRemainingTasks(isolation:)(0, 0, v31);
}

uint64_t sub_10050FD04()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10050FE00, 0, 0);
}

uint64_t sub_10050FE00()
{
  while (*(void *)(v0 + 168) != 1)
  {
    unint64_t v5 = *(void *)(v0 + 184);
    if (v5 == *(void *)(v0 + 152)) {
      break;
    }
    uint64_t v6 = *(void *)(v0 + 136);
    if ((v6 & 0xC000000000000001) != 0)
    {
      id v1 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v7 = v1;
      unint64_t v5 = *(void *)(v0 + 184);
      unint64_t v8 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_30;
      }
    }
    else
    {
      if (v5 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_32;
      }
      id v1 = *(id *)(v6 + 8 * v5 + 32);
      uint64_t v7 = v1;
      unint64_t v8 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return TaskGroup.awaitAllRemainingTasks(isolation:)(v1, v6, v2);
      }
    }
    if (v5 == *(void *)(v0 + 160))
    {

      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    uint64_t v9 = *(void *)(v0 + 168) - 1;
    *(void *)(v0 + 176) = v7;
    *(void *)(v0 + 184) = v8;
    *(void *)(v0 + 168) = v9;
    uint64_t v10 = *(void *)(v0 + 144);
    if (v5 >= *(void *)(v10 + 16)) {
      goto LABEL_31;
    }
    char v11 = *(unsigned char *)(v10 + v5 + 32);
    if ((sub_1005419E4(*((unsigned char *)v7 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type), qword_100810210) & 1) == 0)
    {
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v12 = *(void *)(v0 + 128);
      id v14 = *(void **)(v0 + 112);
      uint64_t v15 = type metadata accessor for TaskPriority();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = 0;
      *(void *)(v17 + 24) = 0;
      *(void *)(v17 + 32) = v7;
      *(unsigned char *)(v17 + 40) = v11;
      *(void *)(v17 + 48) = v14;
      sub_1002BC878(v12, v13);
      LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
      id v18 = v7;
      id v19 = v14;
      uint64_t v20 = *(void *)(v0 + 120);
      if (v12 == 1)
      {
        sub_1000D9A48(*(void *)(v0 + 120));
        uint64_t v21 = 0;
        uint64_t v22 = 0;
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v15);
        if (*(void *)(v17 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v22 = v23;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v21 = 0;
          uint64_t v22 = 0;
        }
      }
      uint64_t v24 = v0 + 16;
      uint64_t v25 = **(void **)(v0 + 96);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = &unk_100810240;
      *(void *)(v26 + 24) = v17;
      if (v22 | v21)
      {
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v21;
        *(void *)(v0 + 40) = v22;
      }
      else
      {
        uint64_t v24 = 0;
      }
      uint64_t v27 = *(void *)(v0 + 128);
      *(void *)(v0 + 72) = 1;
      *(void *)(v0 + 80) = v24;
      *(void *)(v0 + 88) = v25;
      swift_task_create();
      swift_release();
      sub_1000D9A48(v27);
      uint64_t v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v28;
      uint64_t v2 = sub_100010218(&qword_100810250);
      void *v28 = v0;
      v28[1] = sub_10050FD04;
      id v1 = 0;
      uint64_t v6 = 0;
      return TaskGroup.awaitAllRemainingTasks(isolation:)(v1, v6, v2);
    }
  }
  swift_bridgeObjectRelease();
LABEL_3:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100510230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v5 = &off_1007930F0;
  switch(v4)
  {
    case 1:
      sub_100010218(&qword_100810218);
      unint64_t v5 = (void *)swift_allocObject();
      *((_OWORD *)v5 + 1) = xmmword_1006D6280;
      uint64_t v6 = *v3;
      if ((*v3 & 0xC000000000000001) != 0)
      {
        char v11 = v5;
        swift_bridgeObjectRetain();
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        unsigned int v7 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type);
        swift_unknownObjectRelease();
        unint64_t v5 = v11;
        if (v7 <= 9)
        {
LABEL_7:
          char v8 = byte_1006E9F98[(char)v7];
          goto LABEL_23;
        }
      }
      else
      {
        if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x100510460);
        }
        unsigned int v7 = *(unsigned __int8 *)(*(void *)(v6 + 32) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type);
        if (v7 < 0xA) {
          goto LABEL_7;
        }
      }
      char v8 = 1;
LABEL_23:
      *((unsigned char *)v5 + 32) = v8;
LABEL_24:
      *a1 = *v3;
      a1[1] = (uint64_t)v5;
      a1[2] = 5;
      return swift_bridgeObjectRetain();
    case 2:
      goto LABEL_24;
    case 3:
      unint64_t v5 = &off_100793118;
      goto LABEL_24;
    case 4:
      unint64_t v5 = &off_100793140;
      goto LABEL_24;
    case 5:
      unint64_t v5 = &off_100793168;
      goto LABEL_24;
    case 6:
      unint64_t v5 = &off_100793190;
      goto LABEL_24;
    case 7:
      unint64_t v5 = &off_1007931B8;
      goto LABEL_24;
    case 8:
      unint64_t v5 = &off_1007931E0;
      goto LABEL_24;
    case 9:
      unint64_t v5 = &off_100793208;
      goto LABEL_24;
    case 10:
      unint64_t v5 = &off_100793238;
      goto LABEL_24;
    case 11:
      unint64_t v5 = &off_100793268;
      goto LABEL_24;
    case 12:
      unint64_t v5 = &off_100793298;
      goto LABEL_24;
    case 13:
      unint64_t v5 = &off_1007932C8;
      goto LABEL_24;
    default:
      unint64_t v5 = _swiftEmptyArrayStorage;
      goto LABEL_24;
  }
}

uint64_t sub_100510494(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  char v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_10002C194;
  return sub_10050F750(a1, a2, v6, v7);
}

uint64_t sub_100510558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 64) = a5;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a6;
  return _swift_task_switch(sub_10051057C, 0, 0);
}

uint64_t sub_10051057C()
{
  if (qword_1007F6A58 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = (void *)qword_10083CF60;
  *(void *)(v0 + 40) = qword_10083CF60;
  id v5 = v4;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *(void *)(v6 + 16) = v3;
  *(unsigned char *)(v6 + 24) = v1;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 1;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 56) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  uint64_t v8 = sub_100010218(&qword_10080E750);
  *uint64_t v7 = v0;
  v7[1] = sub_1005106E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003BLL, 0x800000010069DE20, sub_10045C140, v6, v8);
}

uint64_t sub_1005106E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1005107FC, 0, 0);
}

uint64_t sub_1005107FC()
{
  uint64_t v1 = *(void **)(v0 + 16);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100510864()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005108AC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_100052588;
  *(unsigned char *)(v5 + 64) = v3;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v4;
  return _swift_task_switch(sub_10051057C, 0, 0);
}

uint64_t sub_10051096C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005109A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002C194;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100807EE8 + dword_100807EE8);
  return v6(a1, v4);
}

id sub_100510A9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CommonTransitions();
  return [super dealloc];
}

uint64_t type metadata accessor for CommonTransitions()
{
  return self;
}

unint64_t sub_100510AF8()
{
  unint64_t result = qword_100810298;
  if (!qword_100810298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810298);
  }
  return result;
}

uint64_t sub_100510B4C()
{
  return sub_100511D44(&qword_1008102A0, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
}

uint64_t sub_100510B94()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100510BB8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100810280);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100810280);
  if (qword_1007F7DD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED88);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100510C80()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100510CA4()
{
  sub_100010218(&qword_100810308);
  uint64_t v0 = type metadata accessor for StringSearchScope();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6280;
  uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for StringSearchScope.general(_:), v0);
  qword_10083D6D0 = v3;
  return result;
}

uint64_t sub_100510D80(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  v2[9] = type metadata accessor for AppLaunchAction();
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StringSearchCriteria();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100510EA4, v5, v4);
}

uint64_t sub_100510EA4()
{
  swift_release();
  *(void *)(v0 + 40) = &type metadata for JournalFeatureFlags;
  unint64_t v1 = sub_10005F364();
  *(unsigned char *)(v0 + 16) = 3;
  *(void *)(v0 + 48) = v1;
  char v2 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 88);
    IntentParameter.wrappedValue.getter();
    uint64_t v6 = StringSearchCriteria.term.getter();
    uint64_t v8 = v7;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    id v9 = [self sharedApplication];
    id v10 = [v9 connectedScenes];
    sub_10008A864();
    sub_100511D44(&qword_100804000, (void (*)(uint64_t))sub_10008A864);
    uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = (void *)sub_1003F1F90(v11);
    swift_bridgeObjectRelease();
    if (v12)
    {
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        id v14 = (void *)v13;

        if ([v14 delegate])
        {
          type metadata accessor for SceneDelegate();
          if (swift_dynamicCastClass())
          {
            uint64_t v15 = *(uint64_t **)(v0 + 80);
            uint64_t *v15 = v6;
            v15[1] = v8;
            swift_storeEnumTagMultiPayload();
            sub_100356004((uint64_t)v15);
            swift_unknownObjectRelease();

            sub_10008A8A4((uint64_t)v15);
          }
          else
          {
            swift_bridgeObjectRelease();

            swift_unknownObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (qword_1007F7138 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100026A54(v16, (uint64_t)qword_100810280);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "EntrySearch feature flag is disabled", v19, 2u);
    swift_slowDealloc();
  }

LABEL_14:
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1005111E0@<X0>(void *a1@<X8>)
{
  if (qword_1007F7140 != -1) {
    swift_once();
  }
  *a1 = qword_10083D6D0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10051124C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100511270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_100511360(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100199EE8;
}

unint64_t sub_1005113C4()
{
  unint64_t result = qword_1008102A8;
  if (!qword_1008102A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008102A8);
  }
  return result;
}

unint64_t sub_10051141C()
{
  unint64_t result = qword_1008102B0;
  if (!qword_1008102B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008102B0);
  }
  return result;
}

uint64_t sub_100511470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10051148C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005114A8(uint64_t a1)
{
  unint64_t v2 = sub_100511DB8();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_1005114F8()
{
  uint64_t v0 = sub_100010218(&qword_1008102E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100010218(&qword_1008102F0);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x20686372616553;
  v2._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_100010218(&qword_1008102F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x72756F4A206E6920;
  v3._object = (void *)0xEB000000006C616ELL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100511694(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002C194;
  return sub_100510D80(a1, v4);
}

uint64_t sub_100511734@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100511840();
  *a1 = result;
  return result;
}

uint64_t sub_10051175C(uint64_t a1)
{
  unint64_t v2 = sub_1003349C4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10051179C()
{
  unint64_t result = qword_1008102C0;
  if (!qword_1008102C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008102C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEntriesIntent()
{
  return &type metadata for SearchEntriesIntent;
}

uint64_t sub_100511804()
{
  return sub_100014488(&qword_1008102C8, &qword_1008102D0);
}

uint64_t sub_100511840()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100010218(&qword_100809200);
  __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007FF580);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v22 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  __chkstk_darwin(v13);
  uint64_t v23 = (char *)&v21 - v14;
  uint64_t v25 = sub_100010218(&qword_1008102D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v16(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v16(v9, v15, v6);
  uint64_t v17 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v22);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v16(v9, v15, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  os_log_type_t v18 = v26;
  IntentDialog.init(_:)();
  uint64_t v19 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100511D44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100511D8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100511DB8()
{
  unint64_t result = qword_100810300;
  if (!qword_100810300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810300);
  }
  return result;
}

uint64_t sub_100511E0C(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_100513630;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B1350;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1005120E0(uint64_t a1, char *a2)
{
  id v142 = a2;
  uint64_t v2 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v139 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v137 = (char *)v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v136 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v135 = (char *)v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v133);
  NSString v132 = (char *)v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v127 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v140 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v134 = (char *)v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v127 - v15;
  uint64_t v17 = sub_100010218(&qword_1007F9D98);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v131 = v16;
    uint64_t v130 = v2;
    id v24 = [objc_allocWithZone((Class)UIStackView) init];
    [v24 setUserInteractionEnabled:1];
    [v24 setAxis:1];
    [v24 setAlignment:3];
    if (qword_1007F72F8 != -1) {
      swift_once();
    }
    [v24 setSpacing:*(double *)&qword_10083D908];
    id v144 = [objc_allocWithZone((Class)UIStackView) init];
    id v141 = [objc_allocWithZone((Class)UILabel) init];
    sub_1003F406C((uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_10001457C((uint64_t)v19, &qword_1007F9D98);
    }
    else
    {
      id v129 = v24;
      sub_1000E4A70((uint64_t)v19, (uint64_t)v23);
      sub_100045944((uint64_t)&v23[*(int *)(v20 + 32)], (uint64_t)v11);
      uint64_t v25 = v12;
      uint64_t v26 = v140;
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
      if (v27(v11, 1, v25) == 1)
      {
        sub_100513650((uint64_t)v23, _s19MotionActivityAssetC18MotionActivityDataVMa);
        sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
      }
      else
      {
        uint64_t v28 = v131;
        uint64_t v29 = v11;
        uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
        v30(v131, v29, v25);
        sub_100045944((uint64_t)&v23[*(int *)(v20 + 36)], (uint64_t)v8);
        if (v27(v8, 1, v25) == 1)
        {
          (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
          sub_100513650((uint64_t)v23, _s19MotionActivityAssetC18MotionActivityDataVMa);
          sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FC470);
        }
        else
        {
          uint64_t v31 = v134;
          v30(v134, v8, v25);
          uint64_t v128 = v25;
          if (qword_1007F75E0 != -1) {
            swift_once();
          }
          v127[1] = *((void *)&xmmword_10083DD68 + 1);
          v127[2] = xmmword_10083DD68;
          sub_100010218((uint64_t *)&unk_100806070);
          uint64_t v32 = swift_allocObject();
          *(_OWORD *)(v32 + 16) = xmmword_1006D6270;
          uint64_t v33 = (uint64_t)v132;
          static Date.FormatStyle.TimeStyle.shortened.getter();
          static FormatStyleCapitalizationContext.standalone.getter();
          static Locale.autoupdatingCurrent.getter();
          static Calendar.autoupdatingCurrent.getter();
          static TimeZone.autoupdatingCurrent.getter();
          static Date.now.getter();
          sub_10001FF10((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
          Date.formatted<A>(_:)();
          sub_100513650(v33, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
          long long v34 = v145[0];
          *(void *)(v32 + 56) = &type metadata for String;
          unint64_t v35 = sub_10001B2C0();
          *(void *)(v32 + 64) = v35;
          *(_OWORD *)(v32 + 32) = v34;
          uint64_t v36 = v135;
          static Date.FormatStyle.DateStyle.omitted.getter();
          id v37 = v137;
          static Date.FormatStyle.TimeStyle.shortened.getter();
          uint64_t v38 = Date.formatted(date:time:)();
          uint64_t v40 = v39;
          (*(void (**)(char *, uint64_t))(v139 + 8))(v37, v130);
          (*(void (**)(char *, uint64_t))(v136 + 8))(v36, v138);
          *(void *)(v32 + 96) = &type metadata for String;
          *(void *)(v32 + 104) = v35;
          *(void *)(v32 + 72) = v38;
          *(void *)(v32 + 80) = v40;
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          NSString v41 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v141 setText:v41];

          char v42 = *(void (**)(char *, uint64_t))(v140 + 8);
          uint64_t v43 = v128;
          v42(v31, v128);
          v42(v28, v43);
          sub_100513650((uint64_t)v23, _s19MotionActivityAssetC18MotionActivityDataVMa);
        }
      }
      id v24 = v129;
    }
    id v44 = [objc_allocWithZone((Class)UILabel) init];
    id v45 = [objc_allocWithZone((Class)UILabel) init];
    id v46 = [objc_allocWithZone((Class)UIButton) init];
    sub_100540B38(v144, v44, v45, v141, 0, v46);

    uint64_t v47 = OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityView;
    uint64_t v48 = Strong;
    uint64_t v49 = *(unsigned char **)(Strong + OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityView);
    uint64_t v50 = v49[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
    v49[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
    uint64_t v51 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    if (v49[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
    {
      switch(v50)
      {
        case 5:
          swift_bridgeObjectRelease();
          break;
        default:
          char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v54 = v49;
          swift_bridgeObjectRelease();
          if ((v53 & 1) == 0) {
            goto LABEL_19;
          }

          break;
      }
    }
    else
    {
      double v52 = v49;
LABEL_19:
      sub_10024497C();
      v49[v51] = 1;
    }
    uint64_t v55 = *(char **)(v48 + v47);
    uint64_t v56 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionActivityAsset;
    id v57 = *(void **)&v55[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionActivityAsset];
    id v58 = v142;
    *(void *)&v55[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionActivityAsset] = v142;
    id v59 = v58;
    uint64_t v60 = v55;

    sub_1000E2818();
    sub_1000E412C();
    uint64_t v61 = *(void *)&v55[v56];
    if (v61)
    {
      uint64_t v62 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v63 = (void (**)())(v61 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      uint64_t v64 = *(void *)(v61 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      __objc2_meth *v63 = sub_1003CE390;
      v63[1] = (void (*)())v62;
      sub_10001ABB8(v64);
    }

    id v65 = [*(id *)(v48 + v47) layer];
    if (qword_1007F7CA0 != -1) {
      swift_once();
    }
    v145[0] = xmmword_10083E9C0;
    v145[1] = *(_OWORD *)&qword_10083E9D0;
    v145[2] = xmmword_10083E9E0;
    v145[3] = *(_OWORD *)&qword_10083E9F0;
    [v65 setCornerRadii:v145];

    id v142 = (char *)v47;
    [v24 addArrangedSubview:*(void *)(v48 + v47)];
    uint64_t v66 = v144;
    [v24 addArrangedSubview:v144];
    if (qword_1007F7368 != -1) {
      swift_once();
    }
    double v67 = *(double *)&qword_10083D978;
    id v68 = [v66 superview];
    id v69 = &stru_1007D7000;
    id v70 = &stru_1007D7000;
    if (v68)
    {
      id v71 = v68;
      [v66 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v72 = [v66 leadingAnchor];
      id v73 = [v71 leadingAnchor];
      id v74 = [v72 constraintEqualToAnchor:v73];

      id v70 = &stru_1007D7000;
      [v74 setConstant:v67];
      id v75 = v74;
      id v69 = &stru_1007D7000;
      id v76 = v75;
      [v75 setActive:1];

      uint64_t v66 = v144;
    }
    double v77 = *(double *)&qword_10083D978;
    id v78 = [v66 superview];
    id v79 = &stru_1007D7000;
    if (v78)
    {
      uint64_t v80 = v78;
      [v66 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v81 = [v66 trailingAnchor];
      id v82 = [v80 trailingAnchor];
      id v83 = [v81 constraintEqualToAnchor:v82];

      id v70 = &stru_1007D7000;
      [v83 setConstant:-v77];
      id v84 = v83;
      id v69 = &stru_1007D7000;
      id v85 = v84;
      [v84 setActive:1];
    }
    id v86 = v142;
    uint64_t v87 = qword_1007F7300;
    id v88 = *(id *)&v142[v48];
    if (v87 != -1) {
      swift_once();
    }
    double v89 = *(double *)&qword_10083D910;
    id v90 = [v88 superview];
    if (v90)
    {
      id v91 = v90;
      [v88 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v92 = [v88 v70[79].name];
      id v93 = [v91 v70[79].name];
      id v94 = [v92 constraintEqualToAnchor:v93];

      [v94 setConstant:v89];
      if (v94)
      {
        id v94 = v94;
        [v94 setActive:1];

        id v88 = v94;
      }
      id v79 = &stru_1007D7000;

      id v69 = &stru_1007D7000;
    }
    else
    {
      id v94 = 0;
      id v91 = v88;
    }

    double v95 = *(double *)&qword_10083D910;
    id v96 = *(id *)&v86[Strong];
    id v97 = [v96 superview];
    if (v97)
    {
      unint64_t v98 = v97;
      [v96 v69[96].name];
      id v99 = [v96 (SEL)v79[100].imp];
      id v100 = [v98 (SEL)v79[100].imp];
      id v101 = [v99 constraintEqualToAnchor:v100];

      [v101 setConstant:-v95];
      if (v101)
      {
        id v101 = v101;
        [v101 setActive:1];

        id v96 = v101;
      }
      uint64_t v102 = Strong;

      uint64_t v103 = &selRef_drawMapRect_zoomScale_inContext_;
      id v69 = &stru_1007D7000;
    }
    else
    {
      id v101 = 0;
      unint64_t v98 = v96;
      uint64_t v102 = Strong;
      uint64_t v103 = &selRef_drawMapRect_zoomScale_inContext_;
    }

    id v104 = *(id *)&v86[v102];
    [v104 v69[96].name];
    id v105 = [v104 heightAnchor];
    id v106 = [v104 widthAnchor];
    uint64_t v107 = v69;
    id v108 = [v105 constraintEqualToAnchor:v106 multiplier:1.0];

    [v108 setActive:1];
    [(id)v102 addSubview:v24];
    id v109 = [v24 superview];
    if (v109)
    {
      uint64_t v110 = v109;
      [v24 v107[96].name];
      id v111 = [v24 centerYAnchor];
      id v112 = [v110 centerYAnchor];
      id v113 = [v111 constraintEqualToAnchor:v112];

      [v113 setBackgroundColor:0.0];
      id v114 = v113;
      [v114 setActive:1];
    }
    id v115 = [v24 superview];
    if (v115)
    {
      id v116 = v115;
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v117 = [v24 leadingAnchor];
      id v118 = [v116 leadingAnchor];
      id v119 = [v117 constraintEqualToAnchor:v118];

      [v119 v103[86]:0.0];
      id v120 = v119;
      [v120 setActive:1];
    }
    id v121 = [v24 superview];
    if (v121)
    {
      uint64_t v122 = v121;
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v123 = [v24 trailingAnchor];
      id v124 = [v122 trailingAnchor];
      id v125 = [v123 constraintEqualToAnchor:v124];

      [v125 v103[86]:0.0];
      id v126 = v125;
      [v126 setActive:1];
    }
    [(id)v102 layoutIfNeeded];
    [v24 layoutIfNeeded];
    [*(id *)&v86[v102] layoutIfNeeded];
  }
}

id sub_100513444(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityView;
  type metadata accessor for MotionActivityGridView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal28FullScreenMotionActivityView_motionActivityAsset] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for FullScreenMotionActivityView();
  [super initWithCoder:a1];

  return v6;
}

id sub_100513514()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenMotionActivityView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenMotionActivityView()
{
  return self;
}

uint64_t sub_1005135B8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005135F0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100513630()
{
  sub_1005120E0(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100513638(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100513648()
{
  return swift_release();
}

uint64_t sub_100513650(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005136B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RandomAssetGenerator()
{
  return self;
}

void *sub_100513720()
{
  unint64_t result = v0;
  v0[2] = &off_100793E18;
  v0[3] = &off_100793F78;
  v0[4] = &off_1007940D8;
  return result;
}

uint64_t sub_100513748@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v160 = a2;
  uint64_t v159 = a1;
  uint64_t v134 = a3;
  uint64_t v4 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v140 = (void (**)(char *, char *, uint64_t))((char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v137 = (char *)&v120 - v7;
  uint64_t v156 = type metadata accessor for UTType();
  uint64_t v139 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  id v129 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v128 = (char *)&v120 - v10;
  __chkstk_darwin(v11);
  uint64_t v136 = (char *)&v120 - v12;
  __chkstk_darwin(v13);
  uint64_t v147 = (char *)&v120 - v14;
  __chkstk_darwin(v15);
  uint64_t v135 = (char *)&v120 - v16;
  uint64_t v157 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v157);
  uint64_t v153 = (void (**)(char *, uint64_t, uint64_t))((char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v120 - v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (uint64_t)&v120 - v21;
  __chkstk_darwin(v23);
  uint64_t v155 = (uint64_t)&v120 - v24;
  uint64_t v25 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v25 - 8);
  uint64_t v138 = (uint64_t)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  NSString v151 = (char *)&v120 - v28;
  __chkstk_darwin(v29);
  uint64_t v131 = (uint64_t)&v120 - v30;
  __chkstk_darwin(v31);
  id v144 = (char *)&v120 - v32;
  uint64_t v164 = type metadata accessor for URL();
  uint64_t v142 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v127 = (char *)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  id v150 = (char *)&v120 - v35;
  __chkstk_darwin(v36);
  id v126 = (char *)&v120 - v37;
  __chkstk_darwin(v38);
  uint64_t v145 = (char *)&v120 - v39;
  uint64_t v165 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v165);
  id v152 = (id *)((char *)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v41);
  uint64_t v43 = (uint64_t)&v120 - v42;
  __chkstk_darwin(v44);
  unint64_t v148 = (id *)((char *)&v120 - v45);
  __chkstk_darwin(v46);
  uint64_t v48 = (void **)((char *)&v120 - v47);
  uint64_t v130 = v3;
  unint64_t v49 = *(void *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (v49 >> 62) {
    goto LABEL_86;
  }
  uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    uint64_t v141 = v22;
    id v162 = v48;
    if (!v50)
    {
LABEL_39:
      swift_bridgeObjectRelease_n();
      id v84 = (unint64_t *)(v130 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments);
      swift_beginAccess();
      unint64_t v85 = *v84;
      if (*v84 >> 62)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v163 = _CocoaArrayWrapper.endIndex.getter();
        if (v163) {
          goto LABEL_41;
        }
      }
      else
      {
        unint64_t v163 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v163)
        {
LABEL_41:
          unint64_t v49 = v85 & 0xC000000000000001;
          uint64_t v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
          id v152 = (id *)(v142 + 56);
          uint64_t v153 = (void (**)(char *, uint64_t, uint64_t))(v142 + 32);
          NSString v151 = (char *)(v139 + 48);
          uint64_t v146 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 32);
          id v86 = (char *)(v139 + 8);
          uint64_t v140 = (void (**)(char *, char *, uint64_t))(v139 + 16);
          uint64_t v87 = (void (**)(char *, uint64_t))(v142 + 8);
          uint64_t v43 = 4;
          uint64_t v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 & 0xC000000000000001);
          unint64_t v143 = v85;
          id v150 = (char *)(v139 + 8);
          while (1)
          {
            uint64_t v89 = v43 - 4;
            if (v49)
            {
              uint64_t v90 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v22 = v43 - 3;
              if (__OFADD__(v89, 1)) {
                goto LABEL_85;
              }
            }
            else
            {
              uint64_t v90 = *(void *)(v85 + 8 * v43);
              swift_retain();
              uint64_t v22 = v43 - 3;
              if (__OFADD__(v89, 1)) {
                goto LABEL_85;
              }
            }
            uint64_t v91 = v90 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
            sub_1005182E8(v90 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v48, type metadata accessor for AssetAttachment.AssetType);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                id v88 = *v48;
                swift_release();

                goto LABEL_43;
              case 2u:
                if (v160)
                {
                  uint64_t v118 = (uint64_t)v48;
                  goto LABEL_79;
                }
                uint64_t v92 = *(void *)(v90 + 16);
                uint64_t v93 = (uint64_t)v48;
LABEL_53:
                sub_100518350(v93, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                if (v92 == v159) {
                  goto LABEL_80;
                }
LABEL_76:
                swift_release();
                uint64_t v48 = v162;
LABEL_43:
                ++v43;
                if (v22 == v163) {
                  goto LABEL_88;
                }
                break;
              case 4u:
                swift_bridgeObjectRelease();
                uint64_t v94 = v91;
                double v95 = v148;
                sub_1005182E8(v94, (uint64_t)v148, type metadata accessor for AssetAttachment.AssetType);
                uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                uint64_t v97 = (uint64_t)v95;
                switch(EnumCaseMultiPayload)
                {
                  case 1:

                    uint64_t v98 = (uint64_t)v144;
                    ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v152)(v144, 1, 1, v164);
                    break;
                  case 4:
                    swift_bridgeObjectRelease();
                    uint64_t v99 = sub_100010218(&qword_10080B3F0);
                    uint64_t v97 = (uint64_t)v148 + *(int *)(v99 + 48);
                    goto LABEL_58;
                  default:
LABEL_58:
                    uint64_t v100 = v155;
                    sub_1005183F0(v97, v155, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                    uint64_t v101 = v141;
                    sub_1005182E8(v100, v141, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      uint64_t v98 = (uint64_t)v144;
                      (*v153)(v144, v101, v164);
                      uint64_t v102 = 0;
                      unint64_t v49 = (unint64_t)v154;
                    }
                    else
                    {
                      type metadata accessor for Journaling();
                      uint64_t v103 = v131;
                      sub_1005E6B0C(v131);
                      swift_bridgeObjectRelease();
                      if ((*v158)(v103, 1, v164) == 1)
                      {
                        sub_10001457C(v103, (uint64_t *)&unk_100800A60);
                        uint64_t v102 = 1;
                        uint64_t v98 = (uint64_t)v144;
                      }
                      else
                      {
                        id v104 = *v153;
                        id v105 = v126;
                        uint64_t v106 = v103;
                        uint64_t v107 = v164;
                        (*v153)(v126, v106, v164);
                        id v108 = v144;
                        v104(v144, (uint64_t)v105, v107);
                        uint64_t v98 = (uint64_t)v108;
                        uint64_t v102 = 0;
                      }
                      unint64_t v49 = (unint64_t)v154;
                      id v86 = v150;
                    }
                    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v152)(v98, v102, 1, v164);
                    sub_100518350(v155, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                    break;
                }
                uint64_t v109 = sub_100010218(&qword_10080B3F0);
                uint64_t v161 = (uint64_t)v162 + *(int *)(v109 + 48);
                if ((*v158)(v98, 1, v164) == 1)
                {
                  sub_10001457C(v98, (uint64_t *)&unk_100800A60);
                  goto LABEL_75;
                }
                (*v153)(v145, v98, v164);
                URL.pathExtension.getter();
                swift_bridgeObjectRetain();
                uint64_t v110 = v147;
                static UTType.data.getter();
                uint64_t v111 = v156;
                uint64_t v112 = (uint64_t)v137;
                UTType.init(filenameExtension:conformingTo:)();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v151)(v112, 1, v111) == 1)
                {
                  sub_10001457C(v112, &qword_1007F99B8);
                  swift_bridgeObjectRelease();
LABEL_74:
                  (*v87)(v145, v164);
                  unint64_t v85 = v143;
                  unint64_t v49 = (unint64_t)v154;
LABEL_75:
                  sub_100518350(v161, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                  goto LABEL_76;
                }
                id v113 = v135;
                ((void (*)(char *, uint64_t, uint64_t))*v146)(v135, v112, v111);
                static UTType.video.getter();
                LODWORD(v149) = UTType.conforms(to:)();
                id v114 = *(void (**)(char *, uint64_t))v86;
                (*(void (**)(char *, uint64_t))v86)(v110, v111);
                (*v140)(v136, v113, v111);
                if (v149)
                {
                  v114(v136, v111);
                  v114(v135, v111);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  static UTType.movie.getter();
                  id v115 = v136;
                  LODWORD(v149) = UTType.conforms(to:)();
                  v114(v110, v111);
                  v114(v115, v111);
                  v114(v135, v111);
                  swift_bridgeObjectRelease();
                  if ((v149 & 1) == 0) {
                    goto LABEL_74;
                  }
                }
                id v116 = *v87;
                unint64_t v85 = v143;
                unint64_t v49 = (unint64_t)v154;
                if (v160)
                {
                  v116(v145, v164);
                  uint64_t v118 = v161;
                  goto LABEL_79;
                }
                uint64_t v92 = *(void *)(v90 + 16);
                v116(v145, v164);
                uint64_t v93 = v161;
                goto LABEL_53;
              default:
                sub_100518350((uint64_t)v48, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                swift_release();
                goto LABEL_43;
            }
          }
        }
      }
LABEL_88:
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v134, 1, 1, v164);
    }
    unint64_t v163 = v49 & 0xC000000000000001;
    uint64_t v146 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56);
    uint64_t v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
    id v149 = (void (**)(char *, uint64_t, uint64_t))(v142 + 32);
    uint64_t v133 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
    uint64_t v122 = (void (**)(char *, uint64_t, uint64_t))(v139 + 32);
    id v121 = (void (**)(char *, uint64_t))(v139 + 8);
    id v120 = (void (**)(char *, char *, uint64_t))(v139 + 16);
    uint64_t v22 = 4;
    unint64_t v143 = v49;
    NSString v132 = (void (**)(char *, uint64_t))(v142 + 8);
LABEL_7:
    uint64_t v53 = v22 - 4;
    if (v163) {
      break;
    }
    unint64_t v54 = v49;
    uint64_t v55 = *(void *)(v49 + 8 * v22);
    swift_retain();
    unint64_t v49 = v22 - 3;
    if (!__OFADD__(v53, 1)) {
      goto LABEL_12;
    }
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    swift_bridgeObjectRetain_n();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
  }
  unint64_t v54 = v49;
  uint64_t v55 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  unint64_t v49 = v22 - 3;
  if (__OFADD__(v53, 1)) {
    goto LABEL_84;
  }
LABEL_12:
  uint64_t v56 = v55 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
  sub_1005182E8(v55 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, v43, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v51 = *(void **)v43;
      swift_release();

      goto LABEL_6;
    case 2u:
      if ((v160 & 1) == 0)
      {
        uint64_t v57 = *(void *)(v55 + 16);
        uint64_t v58 = v43;
LABEL_16:
        sub_100518350(v58, type metadata accessor for AssetAttachment.AssetType.FilePathType);
        if (v57 == v159)
        {
          id v117 = v134;
          goto LABEL_81;
        }
LABEL_33:
        swift_release();
LABEL_6:
        ++v22;
        BOOL v52 = v49 == v50;
        unint64_t v49 = v54;
        if (v52) {
          goto LABEL_39;
        }
        goto LABEL_7;
      }
      uint64_t v118 = v43;
LABEL_79:
      sub_100518350(v118, type metadata accessor for AssetAttachment.AssetType.FilePathType);
LABEL_80:
      id v117 = v134;
LABEL_81:
      swift_bridgeObjectRelease_n();
      sub_1005DA2EC(v117);
      return swift_release();
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v59 = v56;
      uint64_t v60 = v152;
      sub_1005182E8(v59, (uint64_t)v152, type metadata accessor for AssetAttachment.AssetType);
      uint64_t v61 = swift_getEnumCaseMultiPayload();
      uint64_t v62 = (uint64_t)v60;
      uint64_t v63 = (uint64_t)v153;
      switch(v61)
      {
        case 1:
          uint64_t v64 = v156;

          uint64_t v65 = (uint64_t)v151;
          (*v146)(v151, 1, 1, v164);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v62 = (uint64_t)v60 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
          goto LABEL_21;
        default:
LABEL_21:
          uint64_t v66 = v158;
          sub_1005183F0(v62, (uint64_t)v158, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          sub_1005182E8((uint64_t)v66, v63, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v65 = (uint64_t)v151;
            (*v149)(v151, v63, v164);
            uint64_t v67 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v68 = v138;
            sub_1005E6B0C(v138);
            swift_bridgeObjectRelease();
            if ((*v154)(v68, 1, v164) == 1)
            {
              sub_10001457C(v68, (uint64_t *)&unk_100800A60);
              uint64_t v67 = 1;
              uint64_t v48 = v162;
              uint64_t v65 = (uint64_t)v151;
            }
            else
            {
              id v69 = *v149;
              id v70 = v127;
              (*v149)(v127, v68, v164);
              id v71 = v69;
              id v72 = v151;
              v71(v151, (uint64_t)v70, v164);
              uint64_t v65 = (uint64_t)v72;
              uint64_t v67 = 0;
              uint64_t v48 = v162;
            }
          }
          uint64_t v64 = v156;
          (*v146)((char *)v65, v67, 1, v164);
          sub_100518350((uint64_t)v158, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          break;
      }
      uint64_t v161 = v43 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
      if ((*v154)(v65, 1, v164) == 1)
      {
        sub_10001457C(v65, (uint64_t *)&unk_100800A60);
        goto LABEL_32;
      }
      (*v149)(v150, v65, v164);
      URL.pathExtension.getter();
      uint64_t v74 = v73;
      swift_bridgeObjectRetain();
      id v75 = v147;
      static UTType.data.getter();
      uint64_t v76 = (uint64_t)v140;
      UTType.init(filenameExtension:conformingTo:)();
      if ((*v133)(v76, 1, v64) == 1)
      {
        sub_10001457C(v76, &qword_1007F99B8);
        swift_bridgeObjectRelease();
LABEL_31:
        (*v132)(v150, v164);
        uint64_t v48 = v162;
LABEL_32:
        sub_100518350(v161, type metadata accessor for AssetAttachment.AssetType.FilePathType);
        goto LABEL_33;
      }
      uint64_t v125 = v74;
      double v77 = v128;
      (*v122)(v128, v76, v64);
      static UTType.video.getter();
      int v123 = UTType.conforms(to:)();
      id v124 = *v121;
      v124(v75, v64);
      id v78 = v129;
      (*v120)(v129, v77, v64);
      if (v123)
      {
        id v79 = v78;
        uint64_t v80 = v124;
        v124(v79, v64);
        v80(v77, v64);
        swift_bridgeObjectRelease();
        unint64_t v54 = v143;
      }
      else
      {
        static UTType.movie.getter();
        int v123 = UTType.conforms(to:)();
        id v81 = v75;
        id v82 = v124;
        v124(v81, v64);
        v82(v78, v64);
        v82(v77, v64);
        swift_bridgeObjectRelease();
        unint64_t v54 = v143;
        if ((v123 & 1) == 0) {
          goto LABEL_31;
        }
      }
      id v83 = *v132;
      uint64_t v48 = v162;
      if (v160)
      {
        v83(v150, v164);
        uint64_t v118 = v161;
        goto LABEL_79;
      }
      uint64_t v57 = *(void *)(v55 + 16);
      v83(v150, v164);
      uint64_t v58 = v161;
      goto LABEL_16;
    default:
      sub_100518350(v43, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      swift_release();
      goto LABEL_6;
  }
}

void sub_100514C48(uint64_t a1)
{
}

void sub_100514C90(uint64_t a1)
{
}

void sub_100514CD8(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v9 = a2(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - v11;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_100517CC8(a3, a4);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    dispatch thunk of Collection.index(_:offsetBy:limitedBy:)();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v4, v9);
    uint64_t v13 = (void (**)(char *, uint64_t))(v10 + 8);
    if (v17)
    {
      dispatch thunk of Collection.endIndex.getter();
      uint64_t v14 = *v13;
      (*v13)(v12, v9);
    }
    else
    {
      uint64_t v15 = v16;
      uint64_t v14 = *v13;
      (*v13)(v12, v9);
      uint64_t v19 = v15;
    }
    dispatch thunk of Collection.endIndex.getter();
    if (v18 >= v19)
    {
      uint64_t v16 = v19;
      uint64_t v17 = v18;
      dispatch thunk of Collection.subscript.getter();
      v14(v7, v9);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_100514ED4(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v2[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return _swift_task_switch(sub_1005150D0, 0, 0);
}

uint64_t sub_1005150D0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = (char *)v0[19];
  sub_100513748(0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(v0[19], (uint64_t *)&unk_100800A60);
LABEL_9:
    sub_1002E00EC();
    swift_allocError();
    unsigned char *v13 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  (*(void (**)(void, void, void))(v0[21] + 32))(v0[25], v0[19], v0[20]);
  URL.pathExtension.getter();
  char v4 = sub_1004648F0();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v5 = self;
  v0[26] = v5;
  id v6 = [v5 defaultManager];
  URL.path.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v8 = [v6 fileExistsAtPath:v7];

  if (!v8)
  {
LABEL_8:
    (*(void (**)(void, void))(v0[21] + 8))(v0[25], v0[20]);
    goto LABEL_9;
  }
  uint64_t v9 = dword_1007FD558;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[27] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10051539C;
  uint64_t v11 = v0[25];
  return ((uint64_t (*)(uint64_t))((char *)&dword_1007FD558 + v9))(v11);
}

uint64_t sub_10051539C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v8 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v9 = sub_100515DB8;
  }
  else
  {
    v8[28] = a2;
    v8[29] = a3;
    v8[30] = a1;
    uint64_t v9 = sub_100515504;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_100515504()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  int v4 = *(_DWORD *)(v0 + 224);
  int v3 = *(_DWORD *)(v0 + 228);
  *(void *)(v0 + 16) = v2;
  *(_DWORD *)(v0 + 24) = v4;
  *(_DWORD *)(v0 + 28) = v3;
  *(void *)(v0 + 32) = v1;
  double Seconds = CMTimeGetSeconds((CMTime *)(v0 + 16));
  *(void *)(v0 + 40) = v2;
  *(_DWORD *)(v0 + 48) = v4;
  *(_DWORD *)(v0 + 52) = v3;
  *(void *)(v0 + 56) = v1;
  double v6 = CMTimeGetSeconds((CMTime *)(v0 + 40));
  id v7 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  unsigned int v8 = v7;
  if (v6 >= 60.0)
  {
    if (v6 <= 3600.0) {
      goto LABEL_6;
    }
    uint64_t v9 = &selRef_setAllowedUnits_;
    uint64_t v10 = 224;
  }
  else
  {
    [v7 setAllowedUnits:192];
    uint64_t v9 = &selRef_setZeroFormattingBehavior_;
    uint64_t v10 = 0x10000;
  }
  [v8 *v9 v10];
LABEL_6:
  id v11 = [v8 stringFromTimeInterval:v6];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {

    uint64_t v13 = 0;
    uint64_t v15 = (void *)0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    sub_100518238(1uLL, v13, (unint64_t)v15);
    swift_bridgeObjectRelease();
    uint64_t v13 = static String._fromSubstring(_:)();
    uint64_t v15 = v16;
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = type metadata accessor for ExportOptions();
  if (*(unsigned char *)(v17 + *(int *)(v18 + 20)))
  {
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = v13;
    v19._object = v15;
    String.append(_:)(v19);
    v20._countAndFlagsBits = 0x3E7669642F3CLL;
    v20._object = (void *)0xE600000000000000;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = 0x80000001006A01A0;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_100516508;
    uint64_t v22 = *(void *)(v0 + 88);
    return sub_1005E885C(v22, 0, 0, 0, 0, 0, 0, 0xD00000000000001ELL);
  }
  else
  {
    uint64_t v72 = v18;
    v73._countAndFlagsBits = v13;
    v73._object = v15;
    id v80 = *(id *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 176);
    uint64_t v75 = *(void *)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 168);
    uint64_t v76 = *(void **)(v0 + 160);
    uint64_t v27 = *(void *)(v0 + 136);
    uint64_t v26 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v28 = *(void *)(v0 + 128);
    uint64_t v30 = *(void *)(v0 + 112);
    uint64_t v74 = *(void *)(v0 + 104);
    sub_100478818(v24);
    UUID.init()();
    uint64_t v31 = UUID.uuidString.getter();
    uint64_t v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    *(void *)(v0 + 64) = v31;
    *(void *)(v0 + 72) = v33;
    (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v29, enum case for URL.DirectoryHint.inferFromPath(_:), v74);
    sub_100014344();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v74);
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(uint64_t, id))(v25 + 8);
    uint64_t v35 = v76;
    v34(v24, v76);
    URL.pathExtension.getter();
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    double v77 = v34;
    v34(v75, v35);
    uint64_t v36 = URL.lastPathComponent.getter();
    uint64_t v38 = v37;
    id v39 = [v80 defaultManager];
    URL._bridgeToObjectiveC()(v40);
    uint64_t v42 = v41;
    URL._bridgeToObjectiveC()(v43);
    uint64_t v45 = v44;
    *(void *)(v0 + 80) = 0;
    LODWORD(v33) = [v39 copyItemAtURL:v42 toURL:v44 error:v0 + 80];

    uint64_t v46 = *(void **)(v0 + 80);
    if (v33)
    {
      id v81 = *(id *)(v0 + 160);
      uint64_t v82 = *(void *)(v0 + 192);
      uint64_t v47 = *(void *)(v0 + 88);
      id v48 = v46;
      _StringGuts.grow(_:)(116);
      v49._countAndFlagsBits = 0xD00000000000003FLL;
      v49._object = (void *)0x80000001006A01C0;
      String.append(_:)(v49);
      uint64_t v50 = (uint64_t *)(v47 + *(int *)(v72 + 36));
      uint64_t v51 = *v50;
      BOOL v52 = (void *)v50[1];
      swift_bridgeObjectRetain();
      v53._countAndFlagsBits = v51;
      v53._object = v52;
      String.append(_:)(v53);
      swift_bridgeObjectRelease();
      v54._countAndFlagsBits = 47;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      v55._countAndFlagsBits = v36;
      v55._object = v38;
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      v56._countAndFlagsBits = 0xD00000000000001ALL;
      v56._object = (void *)0x80000001006A0200;
      String.append(_:)(v56);
      id v57 = [self mainBundle];
      v58._countAndFlagsBits = 0xD000000000000034;
      v85._countAndFlagsBits = 0xD00000000000004ALL;
      v85._object = (void *)0x80000001006A0260;
      v58._object = (void *)0x80000001006A0220;
      v59._countAndFlagsBits = 0;
      v59._object = (void *)0xE000000000000000;
      Swift::String v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, (NSBundle)v57, v59, v85);

      String.append(_:)(v60);
      swift_bridgeObjectRelease();
      v61._countAndFlagsBits = 0xD000000000000012;
      v61._object = (void *)0x80000001006A02B0;
      String.append(_:)(v61);
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      String.append(_:)(v73);
      v62._countAndFlagsBits = 0x3E7669642F3CLL;
      v62._object = (void *)0xE600000000000000;
      String.append(_:)(v62);
      swift_bridgeObjectRelease();
      v63._countAndFlagsBits = 0xD00000000000001ELL;
      v63._object = (void *)0x80000001006A01A0;
      String.append(_:)(v63);
      swift_bridgeObjectRelease();
      v84._countAndFlagsBits = 0;
      v84._object = 0;
      uint64_t v64 = sub_1003882D0(0, (void *)0xE000000000000000, v84, 0, 0, 0, 0, 0, 0);
      uint64_t v78 = v65;
      uint64_t v79 = v64;
      swift_bridgeObjectRelease();
      v77(v82, v81);
      v77(*(void *)(v0 + 200), *(id *)(v0 + 160));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v66(v79, v78);
    }
    else
    {
      uint64_t v68 = *(void *)(v0 + 192);
      uint64_t v67 = *(void *)(v0 + 200);
      id v69 = *(void **)(v0 + 160);
      id v70 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      v77(v68, v69);
      v77(v67, v69);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v71 = *(uint64_t (**)(void))(v0 + 8);
      return v71();
    }
  }
}

uint64_t sub_100515DB8()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = type metadata accessor for ExportOptions();
  if (*(unsigned char *)(v1 + *(int *)(v2 + 20)))
  {
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    v3._countAndFlagsBits = 0;
    v3._object = (void *)0xE000000000000000;
    String.append(_:)(v3);
    v4._countAndFlagsBits = 0x3E7669642F3CLL;
    v4._object = (void *)0xE600000000000000;
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    v0[31] = 0x80000001006A01A0;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[32] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100516508;
    uint64_t v6 = v0[11];
    return sub_1005E885C(v6, 0, 0, 0, 0, 0, 0, 0xD00000000000001ELL);
  }
  else
  {
    id v64 = (id)v0[26];
    uint64_t v8 = v0[22];
    uint64_t v58 = v0[23];
    uint64_t v9 = v0[21];
    uint64_t v60 = v0[20];
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[15];
    uint64_t v13 = v0[16];
    uint64_t v14 = v0[14];
    uint64_t v56 = v2;
    uint64_t v57 = v0[13];
    sub_100478818(v8);
    UUID.init()();
    uint64_t v15 = UUID.uuidString.getter();
    uint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v13);
    v0[8] = v15;
    v0[9] = v17;
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for URL.DirectoryHint.inferFromPath(_:), v57);
    sub_100014344();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v57);
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(id, uint64_t))(v9 + 8);
    uint64_t v19 = v60;
    v18((id)v8, v60);
    URL.pathExtension.getter();
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    Swift::String v61 = v18;
    v18((id)v58, v19);
    uint64_t v20 = URL.lastPathComponent.getter();
    uint64_t v22 = v21;
    id v23 = [v64 defaultManager];
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    URL._bridgeToObjectiveC()(v27);
    uint64_t v29 = v28;
    v0[10] = 0;
    LODWORD(v9) = [v23 copyItemAtURL:v26 toURL:v28 error:v0 + 10];

    uint64_t v30 = (void *)v0[10];
    if (v9)
    {
      uint64_t v63 = v0[20];
      id v65 = (id)v0[24];
      uint64_t v31 = v0[11];
      id v32 = v30;
      _StringGuts.grow(_:)(116);
      v33._countAndFlagsBits = 0xD00000000000003FLL;
      v33._object = (void *)0x80000001006A01C0;
      String.append(_:)(v33);
      uint64_t v34 = (uint64_t *)(v31 + *(int *)(v56 + 36));
      uint64_t v35 = *v34;
      uint64_t v36 = (void *)v34[1];
      swift_bridgeObjectRetain();
      v37._countAndFlagsBits = v35;
      v37._object = v36;
      String.append(_:)(v37);
      swift_bridgeObjectRelease();
      v38._countAndFlagsBits = 47;
      v38._object = (void *)0xE100000000000000;
      String.append(_:)(v38);
      v39._countAndFlagsBits = v20;
      v39._object = v22;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      v40._countAndFlagsBits = 0xD00000000000001ALL;
      v40._object = (void *)0x80000001006A0200;
      String.append(_:)(v40);
      id v41 = [self mainBundle];
      v42._countAndFlagsBits = 0xD000000000000034;
      v68._countAndFlagsBits = 0xD00000000000004ALL;
      v68._object = (void *)0x80000001006A0260;
      v42._object = (void *)0x80000001006A0220;
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      Swift::String v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v68);

      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      v45._countAndFlagsBits = 0xD000000000000012;
      v45._object = (void *)0x80000001006A02B0;
      String.append(_:)(v45);
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      String.append(_:)(v46);
      v47._countAndFlagsBits = 0x3E7669642F3CLL;
      v47._object = (void *)0xE600000000000000;
      String.append(_:)(v47);
      swift_bridgeObjectRelease();
      v48._countAndFlagsBits = 0xD00000000000001ELL;
      v48._object = (void *)0x80000001006A01A0;
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      v67._countAndFlagsBits = 0;
      v67._object = 0;
      uint64_t v62 = sub_1003882D0(0, (void *)0xE000000000000000, v67, 0, 0, 0, 0, 0, 0);
      uint64_t v59 = v49;
      swift_bridgeObjectRelease();
      v61(v65, v63);
      v61((id)v0[25], v0[20]);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
      return v50(v62, v59);
    }
    else
    {
      BOOL v52 = (void *)v0[24];
      uint64_t v51 = (void *)v0[25];
      uint64_t v53 = v0[20];
      id v54 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      v61(v52, v53);
      v61(v51, v53);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      Swift::String v55 = (uint64_t (*)(void))v0[1];
      return v55();
    }
  }
}

uint64_t sub_100516508(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 264) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    id v7 = sub_100516798;
  }
  else
  {
    *(void *)(v6 + 272) = a2;
    *(void *)(v6 + 280) = a1;
    id v7 = sub_100516684;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100516684()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  (*(void (**)(void, void))(v0[21] + 8))(v0[25], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_100516798()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[25], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100516894(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_100514ED4(a1);
}

double sub_100516928@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007F9E10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10VideoAssetC9VideoDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
  {
    swift_retain();
    sub_100039C14((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1005183F0((uint64_t)v8, (uint64_t)v13, _s10VideoAssetC9VideoDataVMa);
      uint64_t v14 = (uint64_t *)&v13[*(int *)(v9 + 24)];
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      sub_100045944((uint64_t)&v13[*(int *)(v9 + 20)], (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_100518350((uint64_t)v13, _s10VideoAssetC9VideoDataVMa);
      uint64_t v17 = _s6ResultVMa_9(0);
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = sub_100517CC8(&qword_100810480, (void (*)(uint64_t))_s6ResultVMa_9);
      *(void *)(a1 + 40) = sub_100517CC8(&qword_100810488, (void (*)(uint64_t))_s6ResultVMa_9);
      uint64_t v18 = sub_100062E54((uint64_t *)a1);
      uint64_t *v18 = v16;
      v18[1] = v15;
      sub_100062DA4((uint64_t)v5, (uint64_t)v18 + *(int *)(v17 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v11);
  }
  sub_10001457C((uint64_t)v8, &qword_1007F9E10);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

double sub_100516BEC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100804080);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
  {
    swift_retain();
    sub_1000395AC((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1005183F0((uint64_t)v8, (uint64_t)v13, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v14 = (uint64_t *)&v13[*(int *)(v9 + 24)];
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      sub_100045944((uint64_t)&v13[*(int *)(v9 + 20)], (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_100518350((uint64_t)v13, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v17 = _s6ResultVMa_8(0);
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = sub_100517CC8(&qword_100810490, (void (*)(uint64_t))_s6ResultVMa_8);
      *(void *)(a1 + 40) = sub_100517CC8(&qword_100810498, (void (*)(uint64_t))_s6ResultVMa_8);
      uint64_t v18 = sub_100062E54((uint64_t *)a1);
      uint64_t *v18 = v16;
      v18[1] = v15;
      sub_100062DA4((uint64_t)v5, (uint64_t)v18 + *(int *)(v17 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v11);
  }
  sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100804080);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

double sub_100516EB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100804090);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
  {
    swift_retain();
    sub_1000398E0((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1005183F0((uint64_t)v8, (uint64_t)v13, _s14LivePhotoAssetC13LivePhotoDataVMa);
      uint64_t v14 = (uint64_t *)&v13[*(int *)(v9 + 24)];
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      sub_100045944((uint64_t)&v13[*(int *)(v9 + 20)], (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_100518350((uint64_t)v13, _s14LivePhotoAssetC13LivePhotoDataVMa);
      uint64_t v17 = _s6ResultVMa_7(0);
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = sub_100517CC8(&qword_1008104A0, (void (*)(uint64_t))_s6ResultVMa_7);
      *(void *)(a1 + 40) = sub_100517CC8(&qword_1008104A8, (void (*)(uint64_t))_s6ResultVMa_7);
      uint64_t v18 = sub_100062E54((uint64_t *)a1);
      uint64_t *v18 = v16;
      v18[1] = v15;
      sub_100062DA4((uint64_t)v5, (uint64_t)v18 + *(int *)(v17 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v11);
  }
  sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100804090);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_100517170@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100810660);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_9(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100518EC4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v15;
  type metadata accessor for Date();
  char v21 = 1;
  sub_100517CC8(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_100062DA4((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_1005182E8((uint64_t)v12, v18, _s6ResultVMa_9);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_100518350((uint64_t)v12, _s6ResultVMa_9);
}

uint64_t sub_100517460@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100810678);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_8(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100518F18();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v15;
  type metadata accessor for Date();
  char v21 = 1;
  sub_100517CC8(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_100062DA4((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_1005182E8((uint64_t)v12, v18, _s6ResultVMa_8);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_100518350((uint64_t)v12, _s6ResultVMa_8);
}

uint64_t sub_100517750(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  uint64_t v12 = a5;
  uint64_t v8 = sub_100010218(a2);
  uint64_t v13 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  a3();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v5)
  {
    v12(0);
    char v14 = 1;
    type metadata accessor for Date();
    sub_100517CC8(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v8);
}

uint64_t sub_100517924@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100810690);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_7(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100518F6C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v15;
  type metadata accessor for Date();
  char v21 = 1;
  sub_100517CC8(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_100062DA4((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_1005182E8((uint64_t)v12, v18, _s6ResultVMa_7);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_100518350((uint64_t)v12, _s6ResultVMa_7);
}

uint64_t sub_100517C18(uint64_t a1)
{
  uint64_t result = sub_100517CC8(&qword_100810458, (void (*)(uint64_t))_s14LivePhotoAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100517C70(uint64_t a1)
{
  uint64_t result = sub_100517CC8(&qword_100810460, (void (*)(uint64_t))_s10PhotoAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100517CC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100517D10(uint64_t a1)
{
  uint64_t result = sub_100517CC8(&qword_100810468, (void (*)(uint64_t))_s10VideoAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100517D68(uint64_t a1)
{
  unint64_t v2 = sub_100518EC4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100517DA4(uint64_t a1)
{
  unint64_t v2 = sub_100518EC4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100517DE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100517170(a1, a2);
}

uint64_t sub_100517DF8(void *a1)
{
  return sub_100517750(a1, &qword_100810670, (void (*)(void))sub_100518EC4, (uint64_t)&_s6ResultV10CodingKeysON_9, (void (*)(void))_s6ResultVMa_9);
}

uint64_t sub_100517E48()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x6D614E6563616C70;
  }
}

uint64_t sub_100517E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100519400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100517EA8(uint64_t a1)
{
  unint64_t v2 = sub_100518F18();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100517EE4(uint64_t a1)
{
  unint64_t v2 = sub_100518F18();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100517F20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100517460(a1, a2);
}

uint64_t sub_100517F38(void *a1)
{
  return sub_100517750(a1, &qword_100810688, (void (*)(void))sub_100518F18, (uint64_t)&_s6ResultV10CodingKeysON_8, (void (*)(void))_s6ResultVMa_8);
}

uint64_t sub_100517F88(uint64_t a1)
{
  unint64_t v2 = sub_100518F6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100517FC4(uint64_t a1)
{
  unint64_t v2 = sub_100518F6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100518000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100517924(a1, a2);
}

uint64_t sub_100518018(void *a1)
{
  return sub_100517750(a1, &qword_1008106A0, (void (*)(void))sub_100518F6C, (uint64_t)&_s6ResultV10CodingKeysON_7, (void (*)(void))_s6ResultVMa_7);
}

uint64_t sub_100518068(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    Swift::Int v7 = v6;
  }
  else {
    Swift::Int v7 = 0;
  }
  if (v5 < v7)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7) {
    goto LABEL_34;
  }
  if (v7 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < v5) {
    goto LABEL_36;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      _s5AssetCMa();
      Swift::Int v10 = v7;
      do
      {
        Swift::Int v11 = v10 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v10);
        Swift::Int v10 = v11;
      }
      while (v5 != v11);
      goto LABEL_27;
    }
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_27:
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

unint64_t sub_100518238(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

uint64_t sub_1005182E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100518350(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s6ResultVMa_9(uint64_t a1)
{
  return sub_10003352C(a1, qword_100810628);
}

uint64_t _s6ResultVMa_8(uint64_t a1)
{
  return sub_10003352C(a1, qword_100810598);
}

uint64_t sub_1005183F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s6ResultVMa_7(uint64_t a1)
{
  return sub_10003352C(a1, qword_100810508);
}

uint64_t sub_100518490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005184A4);
}

uint64_t sub_1005184A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005184BC);
}

uint64_t sub_1005184C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005184D8);
}

uint64_t sub_1005184DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005184F0);
}

uint64_t *sub_1005184F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    Swift::Int v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    Swift::Int v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_100518668(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    Swift::Int v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_100518738(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  Swift::Int v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_10051885C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  Swift::Int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1005189F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_100518B08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100518C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100518CA4);
}

uint64_t sub_100518CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100518D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100518D7C);
}

uint64_t sub_100518D80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100518E2C()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100518EC4()
{
  unint64_t result = qword_100810668;
  if (!qword_100810668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810668);
  }
  return result;
}

unint64_t sub_100518F18()
{
  unint64_t result = qword_100810680;
  if (!qword_100810680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810680);
  }
  return result;
}

unint64_t sub_100518F6C()
{
  unint64_t result = qword_100810698;
  if (!qword_100810698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810698);
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_7()
{
  return &_s6ResultV10CodingKeysON_7;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_8()
{
  return &_s6ResultV10CodingKeysON_8;
}

unsigned char *_s6ResultV10CodingKeysOwst_7_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005190B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_9()
{
  return &_s6ResultV10CodingKeysON_9;
}

unint64_t sub_1005190EC()
{
  unint64_t result = qword_1008106A8;
  if (!qword_1008106A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106A8);
  }
  return result;
}

unint64_t sub_100519144()
{
  unint64_t result = qword_1008106B0;
  if (!qword_1008106B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106B0);
  }
  return result;
}

unint64_t sub_10051919C()
{
  unint64_t result = qword_1008106B8;
  if (!qword_1008106B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106B8);
  }
  return result;
}

unint64_t sub_1005191F4()
{
  unint64_t result = qword_1008106C0;
  if (!qword_1008106C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106C0);
  }
  return result;
}

unint64_t sub_10051924C()
{
  unint64_t result = qword_1008106C8;
  if (!qword_1008106C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106C8);
  }
  return result;
}

unint64_t sub_1005192A4()
{
  unint64_t result = qword_1008106D0;
  if (!qword_1008106D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106D0);
  }
  return result;
}

unint64_t sub_1005192FC()
{
  unint64_t result = qword_1008106D8;
  if (!qword_1008106D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106D8);
  }
  return result;
}

unint64_t sub_100519354()
{
  unint64_t result = qword_1008106E0;
  if (!qword_1008106E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106E0);
  }
  return result;
}

unint64_t sub_1005193AC()
{
  unint64_t result = qword_1008106E8;
  if (!qword_1008106E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008106E8);
  }
  return result;
}

uint64_t sub_100519400(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1005194F8(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView;
  int v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView) = a1;

  uint64_t v4 = *(void *)(v1 + v2);
  if (v4)
  {
    *(void *)(v4 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_multiPinMapDelegate + 8) = &off_1007B15C8;
    swift_unknownObjectWeakAssign();
    uint64_t v5 = *(void *)(v1 + v2);
    if (v5)
    {
      *(void *)(v5 + OBJC_IVAR____TtC7Journal19FullScreenAssetView_delegate + 8) = &off_1007B15A8;
      swift_unknownObjectWeakAssign();
    }
  }
}

char *sub_100519598(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = &v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_menuURL];
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = &v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_menuTitle];
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  *(void *)&v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView] = 0;
  v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAssetView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAsset] = 0;
  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for FullScreenCollectionViewCell();
  uint64_t v12 = (char *)[super initWithFrame:a1 a2:a2 a3:a3 a4:a4];
  [v12 frame];
  id v17 = [objc_allocWithZone((Class)type metadata accessor for FullScreenAssetView()) initWithFrame:v13, v14, v15, v16];
  sub_1005194F8((uint64_t)v17);
  uint64_t v18 = *(void **)&v12[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView];
  if (v18)
  {
    id v19 = v18;
    [v12 addSubview:v19];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v12;
}

id sub_1005197A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenCollectionViewCell();
  return [super dealloc];
}

uint64_t sub_10051986C()
{
  return type metadata accessor for FullScreenCollectionViewCell();
}

uint64_t type metadata accessor for FullScreenCollectionViewCell()
{
  uint64_t result = qword_100810720;
  if (!qword_100810720) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005198C0()
{
  sub_1000265E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10051997C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v2 = *(unsigned char *)(Strong
                  + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset);
    *(unsigned char *)(Strong
             + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset) = (v2 & 1) == 0;
    if (v2) {
      sub_1002F11B8();
    }
    else {
      sub_1002F1480();
    }
    sub_1002F195C();
    swift_unknownObjectRelease();
  }
  BOOL v3 = (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption) & 1) == 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption) = v3;
  uint64_t v4 = *(unsigned char **)(v0 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
  if (v4)
  {
    char v5 = v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption];
    v4[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption] = v3;
    char v6 = v4;
    sub_100376908(v5);
  }
}

void sub_100519A74()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    *(unsigned char *)(Strong
             + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldHideNavigationBarAndPageControlForImageryAsset) = 1;
    sub_1002F1480();
    sub_1002F195C();
    swift_unknownObjectRelease();
  }
  char v2 = *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption) = 1;
  if ((v2 & 1) == 0)
  {
    BOOL v3 = *(unsigned char **)(v0 + OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView);
    if (v3)
    {
      char v4 = v3[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption];
      v3[OBJC_IVAR____TtC7Journal19FullScreenAssetView_shouldHideImageryCaption] = 1;
      char v5 = v3;
      sub_100376908(v4);
    }
  }
}

uint64_t sub_100519B4C()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  char v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v4 = (void *)result;
    int v5 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_shouldSave);
    if (v5 != 2 && (v5 & 1) != 0)
    {
      uint64_t v6 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
      type metadata accessor for MainActor();
      id v7 = v4;
      uint64_t v8 = static MainActor.shared.getter();
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = v8;
      _OWORD v9[3] = &protocol witness table for MainActor;
      v9[4] = v7;
      sub_100328C78((uint64_t)v2, (uint64_t)&unk_100807618, (uint64_t)v9);
      swift_unknownObjectRelease();
      return swift_release();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100519CCC()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_menuURL];
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  BOOL v3 = &v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_menuTitle];
  void *v3 = 0;
  v3[1] = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_fullScreenAssetView] = 0;
  v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_shouldHideImageryCaption] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAssetView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal28FullScreenCollectionViewCell_journalAsset] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100519DD8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_100519E18(uint64_t a1)
{
}

uint64_t sub_100519E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 192) = a5;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a6;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v6 + 48) = v7;
  *(void *)(v6 + 56) = *(void *)(v7 - 8);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v8 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = *(void *)(v8 + 64);
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_100519F68, 0, 0);
}

uint64_t sub_100519F68()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  v0[13] = v8;
  id v9 = [v8 newBackgroundContext];
  v0[14] = v9;
  uint64_t v10 = type metadata accessor for Journaling();
  uint64_t v11 = type metadata accessor for DateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_100038980(v2, v1);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  v0[15] = v13;
  *(void *)(v13 + 16) = v10;
  sub_1002B8164(v1, v13 + v12);
  *(void *)(v13 + ((v4 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
  v9;
  double v14 = (void *)swift_task_alloc();
  v0[16] = v14;
  uint64_t v15 = sub_100010218(&qword_100806B80);
  *double v14 = v0;
  v14[1] = sub_10051A1A0;
  uint64_t v16 = v0[8];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v16, sub_1002C77CC, v13, v15);
}

uint64_t sub_10051A1A0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10051A320, 0, 0);
}

uint64_t sub_10051A320()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = v0[4];
  unint64_t v3 = v0[2];
  sub_10001457C(v0[12], &qword_1007F9BE8);
  sub_1005611D4(v2, v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = v1;
  v0[18] = sub_10051E3C8(v5, v7, v9);

  swift_unknownObjectRelease();
  v0[19] = type metadata accessor for MainActor();
  v0[20] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051A464, v12, v11);
}

uint64_t sub_10051A464()
{
  swift_release();
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  return _swift_task_switch(sub_10051A4FC, 0, 0);
}

uint64_t sub_10051A4FC()
{
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051A588, v2, v1);
}

uint64_t sub_10051A588()
{
  swift_release();
  uint64_t v1 = (void *)qword_10083D6B0;
  *(void *)(v0 + 176) = qword_10083D6B0;
  id v2 = v1;
  return _swift_task_switch(sub_10051A604, 0, 0);
}

uint64_t sub_10051A604()
{
  *(void *)(v0 + 184) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051A690, v2, v1);
}

uint64_t sub_10051A690()
{
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 144);
  unint64_t v3 = *(void **)(v0 + 104);
  uint64_t v4 = *(void **)(v0 + 40);
  int v5 = *(unsigned __int8 *)(v0 + 192);
  swift_release();
  sub_1001E3F2C(v2, v3, v5, v4);
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_10051E8B0, 0, 0);
}

void sub_10051A738(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:0];

  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  swift_retain();
  id v10 = a3;
  NSString v11 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E548;
  Swift::String v33 = v9;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1BB0;
  uint64_t v12 = _Block_copy(&v28);
  swift_release();
  uint64_t v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
  _Block_release(v12);

  [v8 addAction:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  void v15[4] = v10;
  swift_retain();
  swift_retain();
  id v16 = v10;
  NSString v17 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E568;
  Swift::String v33 = v15;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1C00;
  uint64_t v18 = _Block_copy(&v28);
  swift_release();
  id v19 = [v13 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v8 addAction:v19];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = v16;
  swift_retain();
  swift_retain();
  id v21 = v16;
  NSString v22 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E5D0;
  Swift::String v33 = v20;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1C50;
  id v23 = _Block_copy(&v28);
  swift_release();
  id v24 = [v13 actionWithTitle:v22 style:0 handler:v23];
  _Block_release(v23);

  [v8 addAction:v24];
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = (uint64_t (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  Swift::String v33 = 0;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1C78;
  uint64_t v26 = _Block_copy(&v28);
  swift_release();
  id v27 = [v13 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  [v8 addAction:v27];
  [v21 presentViewController:v8 animated:1 completion:0];
}

void sub_10051AC24(uint64_t a1, void *a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:0];

  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  id v10 = a2;
  swift_retain();
  NSString v11 = String._bridgeToObjectiveC()();
  id v41 = sub_10051E660;
  Swift::String v42 = v9;
  Swift::String v37 = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  Swift::String v39 = sub_10007453C;
  Swift::String v40 = &unk_1007B1CC8;
  uint64_t v12 = _Block_copy(&v37);
  swift_release();
  uint64_t v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
  _Block_release(v12);

  [v8 addAction:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v10;
  void v15[4] = a3;
  swift_retain();
  id v16 = v10;
  swift_retain();
  NSString v17 = String._bridgeToObjectiveC()();
  id v41 = sub_10051E688;
  Swift::String v42 = v15;
  Swift::String v37 = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  Swift::String v39 = sub_10007453C;
  Swift::String v40 = &unk_1007B1D18;
  uint64_t v18 = _Block_copy(&v37);
  swift_release();
  id v19 = [v13 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v8 addAction:v19];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a1;
  v20[3] = v16;
  v20[4] = a3;
  swift_retain();
  id v21 = v16;
  swift_retain();
  NSString v22 = String._bridgeToObjectiveC()();
  id v41 = sub_10051E6B0;
  Swift::String v42 = v20;
  Swift::String v37 = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  Swift::String v39 = sub_10007453C;
  Swift::String v40 = &unk_1007B1D68;
  id v23 = _Block_copy(&v37);
  swift_release();
  id v24 = [v13 actionWithTitle:v22 style:0 handler:v23];
  _Block_release(v23);

  [v8 addAction:v24];
  NSString v25 = (void *)swift_allocObject();
  v25[2] = a1;
  v25[3] = v21;
  v25[4] = a3;
  swift_retain();
  id v26 = v21;
  swift_retain();
  NSString v27 = String._bridgeToObjectiveC()();
  id v41 = sub_10051E720;
  Swift::String v42 = v25;
  Swift::String v37 = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  Swift::String v39 = sub_10007453C;
  Swift::String v40 = &unk_1007B1DB8;
  uint64_t v28 = _Block_copy(&v37);
  swift_release();
  id v29 = [v13 actionWithTitle:v27 style:0 handler:v28];
  _Block_release(v28);

  [v8 addAction:v29];
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v41 = (uint64_t (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  Swift::String v42 = 0;
  Swift::String v37 = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  Swift::String v39 = sub_10007453C;
  Swift::String v40 = &unk_1007B1DE0;
  uint64_t v31 = _Block_copy(&v37);
  swift_release();
  id v32 = [v13 actionWithTitle:v30 style:1 handler:v31];
  _Block_release(v31);

  [v8 addAction:v32];
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v26;
  *(void *)(v33 + 24) = v8;
  id v41 = (uint64_t (*)(uint64_t))sub_10051E91C;
  Swift::String v42 = (void *)v33;
  Swift::String v37 = _NSConcreteStackBlock;
  uint64_t v38 = 1107296256;
  Swift::String v39 = sub_10017D530;
  Swift::String v40 = &unk_1007B1E30;
  uint64_t v34 = _Block_copy(&v37);
  id v35 = v26;
  id v36 = v8;
  swift_release();
  [v35 dismissViewControllerAnimated:1 completion:v34];
  _Block_release(v34);
}

uint64_t sub_10051B2C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  *(unsigned char *)(a2 + 16) = a5;
  swift_beginAccess();
  return sub_10051B570(*(void *)(a4 + 16), a5, a3, (uint64_t)&unk_1007B1E68, (uint64_t)&unk_1007B1E90, (uint64_t)&unk_100810760, (uint64_t)&unk_100810768);
}

void sub_10051B380(uint64_t a1)
{
}

void sub_10051B398(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *))
{
  id v12 = [self sharedApplication];
  sub_10031F2EC();
  if (!v3)
  {
LABEL_10:

    return;
  }
  uint64_t v4 = v3;
  while (1)
  {
    for (i = [v4 presentedViewController]; i; uint64_t v4 = v8)
    {
      id v8 = i;

      id i = [v8 presentedViewController];
    }
    self;
    unint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {
      break;
    }
    int v5 = &selRef_topViewController;
LABEL_4:
    id v6 = [v9 *v5];

    uint64_t v4 = v6;
    if (!v6) {
      goto LABEL_10;
    }
  }
  self;
  unint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    int v5 = &selRef_selectedViewController;
    goto LABEL_4;
  }

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 2;
  a2(v10, v11, v4);

  swift_release();

  swift_release();
}

uint64_t sub_10051B570(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v24[1] = a7;
  uint64_t v11 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = a1;
  *(unsigned char *)(v16 + 40) = a2;
  *(void *)(v16 + 48) = a3;
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  id v18 = a3;
  if (v17 == 1)
  {
    sub_10001457C((uint64_t)v13, &qword_1007FA1D0);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    if (*(void *)(v16 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v20 = v21;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
    }
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a6;
  *(void *)(v22 + 24) = v16;
  if (v20 | v19)
  {
    void v24[2] = 0;
    v24[3] = 0;
    v24[4] = v19;
    v24[5] = v20;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10051B7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 192) = a5;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a6;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v6 + 48) = v7;
  *(void *)(v6 + 56) = *(void *)(v7 - 8);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v8 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = *(void *)(v8 + 64);
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_10051B8E8, 0, 0);
}

uint64_t sub_10051B8E8()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  v0[13] = v8;
  id v9 = [v8 newBackgroundContext];
  v0[14] = v9;
  uint64_t v10 = type metadata accessor for Journaling();
  uint64_t v11 = type metadata accessor for DateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_100038980(v2, v1);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  v0[15] = v13;
  *(void *)(v13 + 16) = v10;
  sub_1002B8164(v1, v13 + v12);
  *(void *)(v13 + ((v4 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
  v9;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[16] = v14;
  uint64_t v15 = sub_100010218(&qword_100806B80);
  *uint64_t v14 = v0;
  v14[1] = sub_10051BB20;
  uint64_t v16 = v0[8];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v16, sub_1002C77CC, v13, v15);
}

uint64_t sub_10051BB20()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10051BCA0, 0, 0);
}

uint64_t sub_10051BCA0()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = v0[4];
  unint64_t v3 = v0[2];
  sub_10001457C(v0[12], &qword_1007F9BE8);
  sub_1005611D4(v2, v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = v1;
  v0[18] = sub_10051E3C8(v5, v7, v9);

  swift_unknownObjectRelease();
  v0[19] = type metadata accessor for MainActor();
  v0[20] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051BDE4, v12, v11);
}

uint64_t sub_10051BDE4()
{
  swift_release();
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  return _swift_task_switch(sub_10051BE7C, 0, 0);
}

uint64_t sub_10051BE7C()
{
  *(void *)(v0 + 168) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10051BF08, v2, v1);
}

uint64_t sub_10051BF08()
{
  swift_release();
  uint64_t v1 = (void *)qword_10083D6B0;
  *(void *)(v0 + 176) = qword_10083D6B0;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10051BFC8;
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 192);
  return sub_100092208(v3, v5, v4);
}

uint64_t sub_10051BFC8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 176);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_10051C0F8, 0, 0);
}

uint64_t sub_10051C0F8()
{
  uint64_t v1 = *(void **)(v0 + 104);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10051C184@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = a1;
  id v4 = [v3 managedObjectContext];
  if (!v4) {
    id v4 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
  }
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  uint64_t result = sub_10057F170(v3, 0, 0, v4);
  *a2 = result;
  return result;
}

void sub_10051C22C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:0];

  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  swift_retain();
  id v10 = a3;
  NSString v11 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E218;
  uint64_t v33 = v9;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  NSString v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B18B8;
  uint64_t v12 = _Block_copy(&v28);
  swift_release();
  uint64_t v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
  _Block_release(v12);

  [v8 addAction:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  void v15[4] = v10;
  swift_retain();
  swift_retain();
  id v16 = v10;
  NSString v17 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E238;
  uint64_t v33 = v15;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  NSString v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1908;
  uint64_t v18 = _Block_copy(&v28);
  swift_release();
  id v19 = [v13 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v8 addAction:v19];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = v16;
  swift_retain();
  swift_retain();
  id v21 = v16;
  NSString v22 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E258;
  uint64_t v33 = v20;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  NSString v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1958;
  id v23 = _Block_copy(&v28);
  swift_release();
  id v24 = [v13 actionWithTitle:v22 style:0 handler:v23];
  _Block_release(v23);

  [v8 addAction:v24];
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = (uint64_t (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  uint64_t v33 = 0;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  NSString v30 = sub_10007453C;
  uint64_t v31 = &unk_1007B1980;
  id v26 = _Block_copy(&v28);
  swift_release();
  id v27 = [v13 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  [v8 addAction:v27];
  [v21 presentViewController:v8 animated:1 completion:0];
}

void sub_10051C718(uint64_t a1, void *a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:0];

  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  id v10 = a2;
  swift_retain();
  NSString v11 = String._bridgeToObjectiveC()();
  id v36 = (double (*)(double, double))sub_10051E278;
  Swift::String v37 = v9;
  id v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_10007453C;
  id v35 = &unk_1007B19D0;
  uint64_t v12 = _Block_copy(&v32);
  swift_release();
  uint64_t v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
  _Block_release(v12);

  [v8 addAction:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v10;
  void v15[4] = a3;
  swift_retain();
  id v16 = v10;
  swift_retain();
  NSString v17 = String._bridgeToObjectiveC()();
  id v36 = (double (*)(double, double))sub_10051E288;
  Swift::String v37 = v15;
  id v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_10007453C;
  id v35 = &unk_1007B1A20;
  uint64_t v18 = _Block_copy(&v32);
  swift_release();
  id v19 = [v13 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v8 addAction:v19];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a1;
  v20[3] = v16;
  v20[4] = a3;
  swift_retain();
  id v21 = v16;
  swift_retain();
  NSString v22 = String._bridgeToObjectiveC()();
  id v36 = (double (*)(double, double))sub_10051E298;
  Swift::String v37 = v20;
  id v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_10007453C;
  id v35 = &unk_1007B1A70;
  id v23 = _Block_copy(&v32);
  swift_release();
  id v24 = [v13 actionWithTitle:v22 style:0 handler:v23];
  _Block_release(v23);

  [v8 addAction:v24];
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = AudioRecordingActivityState.hash(into:);
  Swift::String v37 = 0;
  id v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_10007453C;
  id v35 = &unk_1007B1A98;
  id v26 = _Block_copy(&v32);
  swift_release();
  id v27 = [v13 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  [v8 addAction:v27];
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v21;
  *(void *)(v28 + 24) = v8;
  id v36 = (double (*)(double, double))sub_10051E2A4;
  Swift::String v37 = (void *)v28;
  id v32 = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_10017D530;
  id v35 = &unk_1007B1AE8;
  uint64_t v29 = _Block_copy(&v32);
  id v30 = v21;
  id v31 = v8;
  swift_release();
  [v30 dismissViewControllerAnimated:1 completion:v29];
  _Block_release(v29);
}

uint64_t sub_10051CCA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(unsigned char *)(a2 + 16) = 1;
  swift_beginAccess();
  return sub_10051B570(*(void *)(a4 + 16), 1, a3, (uint64_t)&unk_1007B1B20, (uint64_t)&unk_1007B1B48, (uint64_t)&unk_100810750, (uint64_t)&unk_1007FD6D0);
}

uint64_t sub_10051CD5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(unsigned char *)(a2 + 16) = 2;
  swift_beginAccess();
  return sub_10051B570(*(void *)(a4 + 16), 2, a3, (uint64_t)&unk_1007B1B20, (uint64_t)&unk_1007B1B48, (uint64_t)&unk_100810750, (uint64_t)&unk_1007FD6D0);
}

uint64_t sub_10051CE10(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(unsigned char *)(a2 + 16) = 3;
  swift_beginAccess();
  return sub_10051B570(*(void *)(a4 + 16), 3, a3, (uint64_t)&unk_1007B1B20, (uint64_t)&unk_1007B1B48, (uint64_t)&unk_100810750, (uint64_t)&unk_1007FD6D0);
}

void sub_10051CEC4(uint64_t a1, uint64_t a2)
{
}

void sub_10051CEDC(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  NSString v6 = (void *)qword_10083D6B0;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D00;
  *(void *)(v7 + 32) = a1;
  uint64_t v13 = v7;
  specialized Array._endMutation()();
  uint64_t v8 = qword_1007F6D38;
  id v9 = v6;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  id v10 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  swift_beginAccess();
  int v11 = *(unsigned __int8 *)(a2 + 16);
  id v12 = v10;
  sub_1001E3F2C(v13, v12, v11, a3);

  swift_bridgeObjectRelease();
}

void sub_10051D034(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:0];

  id v9 = (void *)swift_allocObject();
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  swift_retain();
  id v10 = a3;
  NSString v11 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E184;
  uint64_t v33 = v9;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  id v30 = sub_10007453C;
  id v31 = &unk_1007B1778;
  id v12 = _Block_copy(&v28);
  swift_release();
  uint64_t v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
  _Block_release(v12);

  [v8 addAction:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  void v15[4] = v10;
  swift_retain();
  swift_retain();
  id v16 = v10;
  NSString v17 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E190;
  uint64_t v33 = v15;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  id v30 = sub_10007453C;
  id v31 = &unk_1007B17C8;
  uint64_t v18 = _Block_copy(&v28);
  swift_release();
  id v19 = [v13 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v8 addAction:v19];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = v16;
  swift_retain();
  swift_retain();
  id v21 = v16;
  NSString v22 = String._bridgeToObjectiveC()();
  id v32 = sub_10051E19C;
  uint64_t v33 = v20;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  id v30 = sub_10007453C;
  id v31 = &unk_1007B1818;
  id v23 = _Block_copy(&v28);
  swift_release();
  id v24 = [v13 actionWithTitle:v22 style:0 handler:v23];
  _Block_release(v23);

  [v8 addAction:v24];
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = (void (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  uint64_t v33 = 0;
  uint64_t v28 = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  id v30 = sub_10007453C;
  id v31 = &unk_1007B1840;
  id v26 = _Block_copy(&v28);
  swift_release();
  id v27 = [v13 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  [v8 addAction:v27];
  [v21 presentViewController:v8 animated:1 completion:0];
}

void sub_10051D534(uint64_t a1, uint64_t a2)
{
}

void sub_10051D54C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v11 = [self sharedApplication];
  sub_10031F2EC();
  if (!v4)
  {
LABEL_10:

    return;
  }
  char v5 = v4;
  while (1)
  {
    for (i = [v5 presentedViewController]; i; char v5 = v9)
    {
      id v9 = i;

      id i = [v9 presentedViewController];
    }
    self;
    id v10 = (void *)swift_dynamicCastObjCClass();
    if (!v10) {
      break;
    }
    NSString v6 = &selRef_topViewController;
LABEL_4:
    id v7 = [v10 *v6];

    char v5 = v7;
    if (!v7) {
      goto LABEL_10;
    }
  }
  self;
  id v10 = (void *)swift_dynamicCastObjCClass();
  if (v10)
  {
    NSString v6 = &selRef_selectedViewController;
    goto LABEL_4;
  }

  *(unsigned char *)(swift_allocObject() + 16) = 2;
  a3();

  swift_release();
}

uint64_t sub_10051D708()
{
  return swift_deallocObject();
}

uint64_t sub_10051D718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[9] = v8;
  v6[10] = v7;
  return _swift_task_switch(sub_10051D7B4, v8, v7);
}

uint64_t sub_10051D7B4()
{
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  id v3 = (void *)qword_10083D6B0;
  v0[11] = qword_10083D6B0;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6D00;
  *(void *)(v4 + 32) = v1;
  uint64_t v9 = v4;
  specialized Array._endMutation()();
  v0[12] = v9;
  swift_beginAccess();
  char v5 = *(unsigned char *)(v2 + 16);
  v3;
  swift_retain();
  NSString v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *NSString v6 = v0;
  v6[1] = sub_10051D918;
  uint64_t v7 = v0[7];
  return sub_100092208(v9, v5, v7);
}

uint64_t sub_10051D918()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 88);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_1003AB828, v4, v3);
}

void sub_10051DA74(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self alertControllerWithTitle:v6 message:v7 preferredStyle:0];

  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = a3;
  swift_retain();
  swift_retain();
  id v10 = a3;
  NSString v11 = String._bridgeToObjectiveC()();
  id v27 = sub_10051DE68;
  uint64_t v28 = v9;
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  NSString v25 = sub_10007453C;
  id v26 = &unk_1007B1660;
  id v12 = _Block_copy(&v23);
  swift_release();
  uint64_t v13 = self;
  id v14 = [v13 actionWithTitle:v11 style:0 handler:v12];
  _Block_release(v12);

  [v8 addAction:v14];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  void v15[4] = v10;
  swift_retain();
  swift_retain();
  id v16 = v10;
  NSString v17 = String._bridgeToObjectiveC()();
  id v27 = sub_10051E020;
  uint64_t v28 = v15;
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  NSString v25 = sub_10007453C;
  id v26 = &unk_1007B16B0;
  uint64_t v18 = _Block_copy(&v23);
  swift_release();
  id v19 = [v13 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v8 addAction:v19];
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = (uint64_t (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  uint64_t v28 = 0;
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  NSString v25 = sub_10007453C;
  id v26 = &unk_1007B16D8;
  id v21 = _Block_copy(&v23);
  swift_release();
  id v22 = [v13 actionWithTitle:v20 style:1 handler:v21];
  _Block_release(v21);

  [v8 addAction:v22];
  [v16 presentViewController:v8 animated:1 completion:0];
}

uint64_t sub_10051DE68(uint64_t a1)
{
  return sub_10051DEC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), 1, (uint64_t)&unk_1007B1738, (uint64_t)&unk_100810740);
}

uint64_t sub_10051DEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10051DEB8()
{
  return swift_release();
}

uint64_t sub_10051DEC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(unsigned char *)(a2 + 16) = a5;
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  id v16 = a4;
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = a3;
  v18[5] = a2;
  v18[6] = v16;
  sub_100328A60((uint64_t)v14, a7, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_10051E020(uint64_t a1)
{
  return sub_10051DEC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), 2, (uint64_t)&unk_1007B1710, (uint64_t)&unk_100810738);
}

uint64_t sub_10051E064(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_10051D718(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10051E130()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10051E184(uint64_t a1)
{
}

void sub_10051E190(uint64_t a1)
{
}

void sub_10051E19C(uint64_t a1)
{
}

void sub_10051E1A4(uint64_t a1, char a2)
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = (void *)v2[4];
  swift_beginAccess();
  *(unsigned char *)(v4 + 16) = a2;
  sub_10051CEDC(v5, v4, v6);
}

uint64_t sub_10051E204()
{
  return swift_deallocObject();
}

uint64_t sub_10051E218(uint64_t a1)
{
  return sub_10051E5EC(a1, 30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10051C718);
}

uint64_t sub_10051E238(uint64_t a1)
{
  return sub_10051E5EC(a1, 100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10051C718);
}

uint64_t sub_10051E258(uint64_t a1)
{
  return sub_10051E5EC(a1, 0x7FFFFFFFFFFFFFFFLL, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10051C718);
}

uint64_t sub_10051E278(uint64_t a1)
{
  return sub_10051CCA0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10051E288(uint64_t a1)
{
  return sub_10051CD5C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10051E298(uint64_t a1)
{
  return sub_10051CE10(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

id sub_10051E2A4()
{
  return [*(id *)(v0 + 16) presentViewController:*(void *)(v0 + 24) animated:1 completion:0];
}

uint64_t sub_10051E2C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_10051B7B0(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_10051E38C()
{
  swift_release();

  return swift_deallocObject();
}

double *sub_10051E3C8(double *result, uint64_t a2, unint64_t a3)
{
  int64_t v9 = a3 >> 1;
  uint64_t v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2)) {
    goto LABEL_13;
  }
  uint64_t v4 = result;
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t result = (double *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v3 < 0)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v6 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (a2 + i >= v9 || i >= v3) {
        goto LABEL_12;
      }
      double v7 = v4[a2 + i];
      __chkstk_darwin(result);
      type metadata accessor for Journaling.EntryViewModel();
      id v8 = *(id *)&v7;
      NSManagedObjectContext.performAndWait<A>(_:)();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (double *)specialized ContiguousArray._endMutation()();
      if (v6 == v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_10051E528@<X0>(uint64_t *a1@<X8>)
{
  return sub_10051C184(*(void **)(v1 + 16), a1);
}

uint64_t sub_10051E548(uint64_t a1)
{
  return sub_10051E5EC(a1, 30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10051AC24);
}

uint64_t sub_10051E568(uint64_t a1)
{
  return sub_10051E5EC(a1, 100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10051AC24);
}

uint64_t sub_10051E588()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10051E5D0(uint64_t a1)
{
  return sub_10051E5EC(a1, 0x7FFFFFFFFFFFFFFFLL, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10051AC24);
}

uint64_t sub_10051E5EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  swift_beginAccess();
  *(void *)(v6 + 16) = a2;
  return a3(v7, v8, v6);
}

uint64_t sub_10051E660(uint64_t a1)
{
  return sub_10051B2C4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 0);
}

uint64_t sub_10051E688(uint64_t a1)
{
  return sub_10051B2C4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 1);
}

uint64_t sub_10051E6B0(uint64_t a1)
{
  return sub_10051B2C4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 2);
}

uint64_t sub_10051E6D8()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10051E720(uint64_t a1)
{
  return sub_10051B2C4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), 3);
}

uint64_t sub_10051E744()
{
  return swift_deallocObject();
}

uint64_t sub_10051E788()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10051E7C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 40);
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_100519E30(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_10051E898@<X0>(uint64_t *a1@<X8>)
{
  return sub_10051E528(a1);
}

uint64_t sub_10051E988()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  sub_100035380(v0, qword_10083D708);
  sub_100026A54(v0, (uint64_t)qword_10083D708);
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  id v1 = sub_10004D528(1);
  if ((v2 & 1) != 0 || v1 != (id)1)
  {
    if (qword_1007F7150 != -1) {
      swift_once();
    }
    sub_100026A54(v0, (uint64_t)qword_10083D720);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.getter();
    swift_endAccess();
  }
  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10051EB88()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  sub_100035380(v0, qword_10083D720);
  sub_100026A54(v0, (uint64_t)qword_10083D720);
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  sub_10004D528(1);
  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10051ED14()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  sub_100035380(v0, qword_10083D738);
  sub_100026A54(v0, (uint64_t)qword_10083D738);
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  sub_10004D528(1);
  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10051EE9C()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7158 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100010218(&qword_100801138);
  sub_100026A54(v4, (uint64_t)qword_10083D738);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.getter();
  swift_endAccess();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v5 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v7 = v6;
  char v9 = v8;
  if (qword_1007F7F18 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100026A54(v0, (uint64_t)qword_10083EE68);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v10, v0);
  v13[3] = Color.init(_:)();
  uint64_t v11 = Text.foregroundStyle<A>(_:)();
  sub_10002B8D0(v5, v7, v9 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10051F134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v16[1] = a1;
  uint64_t v3 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100802BB0);
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100802BB8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014488(&qword_100802BC0, &qword_100802BB8);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v18 = 3;
  static PredicateExpressions.build_Arg<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v3);
  a2[3] = sub_100010218(&qword_100802BC8);
  a2[4] = sub_1001E0E20();
  sub_100062E54(a2);
  sub_100014488(&qword_100802BE8, &qword_100802BB0);
  uint64_t v14 = v17;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10051F438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100801140);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_100801148);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014488(&qword_100801150, &qword_100801148);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100010218(&qword_100801158);
  a1[4] = sub_1001A3300();
  sub_100062E54(a1);
  sub_100014488(&qword_100801178, &qword_100801140);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10051F67C()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10051F6E4()
{
  return Text.init(_:tableName:bundle:comment:)();
}

double *sub_10051F74C()
{
  uint64_t v0 = type metadata accessor for Tips.Action();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Tips.Action.init(id:perform:_:)();
  sub_100010218(&qword_100802BF0);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 32))(v5 + v4, v3, v0);
  uint64_t v6 = sub_1001FA7E8(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v6;
}

uint64_t sub_10051F8E4()
{
  uint64_t v0 = sub_100010218(&qword_100801128);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100801130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  id v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  id v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_10051FB80@<X0>(uint64_t *a1@<X8>)
{
  sub_1001D591C();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for MindfulMinutesTip()
{
  return &type metadata for MindfulMinutesTip;
}

unint64_t sub_10051FBD4()
{
  unint64_t result = qword_100810770;
  if (!qword_100810770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810770);
  }
  return result;
}

uint64_t sub_10051FC28()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(qword_100802748);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6E00 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100026A54(v4, (uint64_t)qword_10083D390);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  v13(v11, v8);
  if (qword_1007F7148 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100026A54(v0, (uint64_t)qword_10083D708);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v13(v11, v8);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10051FF9C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_1007F9EE0);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s12ContactAssetC11ContactDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_10052008C, 0, 0);
}

uint64_t sub_10052008C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_1003F39F4(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100520CFC(v0[4]);
    sub_1002E00EC();
    swift_allocError();
    *uint64_t v4 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = (uint64_t *)v0[7];
    sub_100520D5C(v0[4], (uint64_t)v7);
    uint64_t v8 = *v7;
    unint64_t v9 = v7[1];
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1001DC4FC(v8, v9, 0xD000000000000029, (void *)0x800000010068F360, 0, 0);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[8] = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[9] = v13;
    void *v13 = v0;
    v13[1] = sub_100520268;
    uint64_t v14 = v0[2];
    return sub_1005E885C(v14, 0, 0, 0, 0, 0, 0, v10);
  }
}

uint64_t sub_100520268(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 80) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v7 = sub_10052044C;
  }
  else
  {
    *(void *)(v6 + 88) = a2;
    *(void *)(v6 + 96) = a1;
    uint64_t v7 = sub_1005203B8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005203B8()
{
  sub_1005211F8(v0[7], _s12ContactAssetC11ContactDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  return v1(v2, v3);
}

uint64_t sub_10052044C()
{
  sub_1005211F8(*(void *)(v0 + 56), _s12ContactAssetC11ContactDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005204D8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_10051FF9C(a1);
}

double sub_10052056C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007F9EE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling12ContactAsset_metadata))
  {
    swift_retain();
    sub_10003C084((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_100520D5C((uint64_t)v8, (uint64_t)v13);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      sub_100045944((uint64_t)v13 + *(int *)(v9 + 20), (uint64_t)v5);
      swift_bridgeObjectRetain();
      sub_1005211F8((uint64_t)v13, _s12ContactAssetC11ContactDataVMa);
      uint64_t v16 = _s14descr10078FDE9O6ResultVMa();
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = sub_100521258(&qword_100810790, (void (*)(uint64_t))_s14descr10078FDE9O6ResultVMa);
      *(void *)(a1 + 40) = sub_100521258(&qword_100810798, (void (*)(uint64_t))_s14descr10078FDE9O6ResultVMa);
      uint64_t v17 = sub_100062E54((uint64_t *)a1);
      uint64_t *v17 = v15;
      v17[1] = v14;
      sub_100062DA4((uint64_t)v5, (uint64_t)v17 + *(int *)(v16 + 20));
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v11);
  }
  sub_100520CFC((uint64_t)v8);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_10052080C(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100810840);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_100521140();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    _s14descr10078FDE9O6ResultVMa();
    v8[14] = 1;
    type metadata accessor for Date();
    sub_100521258(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1005209C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100810830);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s14descr10078FDE9O6ResultVMa();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_100521140();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v15;
  type metadata accessor for Date();
  char v21 = 1;
  sub_100521258(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_100062DA4((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_100521194((uint64_t)v12, v18);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_1005211F8((uint64_t)v12, (uint64_t (*)(void))_s14descr10078FDE9O6ResultVMa);
}

uint64_t sub_100520CA4(uint64_t a1)
{
  uint64_t result = sub_100521258(&qword_100810778, (void (*)(uint64_t))_s12ContactAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100520CFC(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9EE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100520D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100520DC0()
{
  if (*v0) {
    return 0x6D69547472617473;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_100520DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005214AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100520E20(uint64_t a1)
{
  unint64_t v2 = sub_100521140();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100520E5C(uint64_t a1)
{
  unint64_t v2 = sub_100521140();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100520E98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005209C4(a1, a2);
}

uint64_t sub_100520EB0(void *a1)
{
  return sub_10052080C(a1);
}

uint64_t _s14descr10078FDE9O6ResultVMa()
{
  uint64_t result = qword_1008107F8;
  if (!qword_1008107F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100520F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100520F28);
}

uint64_t sub_100520F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100520FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100520FFC);
}

uint64_t sub_100520FFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1005210A8()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100521140()
{
  unint64_t result = qword_100810838;
  if (!qword_100810838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810838);
  }
  return result;
}

uint64_t sub_100521194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr10078FDE9O6ResultVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005211F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100521258(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s14descr10078FDE9O6ResultV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10052136CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr10078FDE9O6ResultV10CodingKeysOMa()
{
  return &_s14descr10078FDE9O6ResultV10CodingKeysON;
}

unint64_t sub_1005213A8()
{
  unint64_t result = qword_100810848;
  if (!qword_100810848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810848);
  }
  return result;
}

unint64_t sub_100521400()
{
  unint64_t result = qword_100810850;
  if (!qword_100810850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810850);
  }
  return result;
}

unint64_t sub_100521458()
{
  unint64_t result = qword_100810858;
  if (!qword_100810858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810858);
  }
  return result;
}

uint64_t sub_1005214AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_10052159C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset);
  id v2 = v1;
  return v1;
}

uint64_t sub_1005215CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007F9EE0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v5 = *(void *)(v32 - 8);
  *(void *)&double v6 = __chkstk_darwin(v32).n128_u64[0];
  uint64_t v31 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
  [v1 addSubview:*(void *)((char *)v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) v6];
  id v9 = *(id *)((char *)v1 + v8);
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_bgView);
  [v1 addSubview:v10];
  uint64_t v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);
  [v10 addSubview:v11];
  uint64_t v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
  [v10 addSubview:v12];
  [v10 setContentMode:2];
  id v13 = [self effectWithStyle:8];
  id v14 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v13];
  uint64_t v15 = self;
  id v16 = v14;
  id v17 = [v15 clearColor];
  [v16 setBackgroundColor:v17];

  id v18 = v16;
  [v10 bounds];
  [v18 setFrame:];

  [v18 setAutoresizingMask:18];
  [v18 setUserInteractionEnabled:0];
  [v10 insertSubview:v18 atIndex:0];

  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();

  [v11 setAlpha:0.0];
  [v11 setContentMode:1];
  [v11 setIsAccessibilityElement:1];
  UIAccessibilityTraits v19 = UIAccessibilityTraitImage;
  unint64_t v20 = (unint64_t)[v11 accessibilityTraits];
  if ((v19 & ~v20) != 0) {
    UIAccessibilityTraits v21 = v19;
  }
  else {
    UIAccessibilityTraits v21 = 0;
  }
  [v11 setAccessibilityTraits:v21 | v20];
  [v11 setAccessibilityIgnoresInvertColors:1];
  if (qword_1007F7A10 != -1) {
    swift_once();
  }
  NSString v22 = String._bridgeToObjectiveC()();
  [v11 setAccessibilityLabel:v22];

  id v23 = *(char **)((char *)v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset);
  if (v23)
  {
    if (*(void *)&v23[OBJC_IVAR____TtCC7Journal10Journaling12ContactAsset_metadata])
    {
      uint64_t v24 = v23;
      swift_retain();
      sub_10003C084((uint64_t)v4);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v32) != 1)
      {
        uint64_t v25 = v31;
        sub_100520D5C((uint64_t)v4, v31);
        swift_bridgeObjectRetain();
        sub_1000E0AF4(v25);

        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, 1, 1, v32);
      id v27 = v23;
    }
    sub_10001457C((uint64_t)v4, &qword_1007F9EE0);
  }
  NSString v26 = 0;
LABEL_13:
  [v11 setAccessibilityValue:v26];

  if (qword_1007F72A0 != -1) {
    swift_once();
  }
  [v12 setFont:qword_10083D868];
  id v28 = [v15 secondaryLabelColor];
  [v12 setTextColor:v28];

  [v12 setBaselineAdjustment:0];
  [v12 setAdjustsFontForContentSizeCategory:1];
  id v29 = [v12 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  return (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x110))(v29);
}

void sub_100521BC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007F9EE0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset);
  if (v5)
  {
    id v6 = v5;
    sub_1003F39F4((uint64_t)v4);
    uint64_t v7 = _s12ContactAssetC11ContactDataVMa(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7) == 1)
    {
      sub_10001457C((uint64_t)v4, &qword_1007F9EE0);
      uint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
    }
    else
    {
      uint64_t v8 = *v4;
      unint64_t v9 = v4[1];
      swift_bridgeObjectRetain();
      sub_1000E0AF4((uint64_t)v4);
    }
    uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactName);
    *uint64_t v10 = v8;
    v10[1] = v9;
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
    switch(*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      default:
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v12)
        {
LABEL_8:
          swift_bridgeObjectRetain();
          sub_100369CE8();
          uint64_t v14 = v13;
          swift_bridgeObjectRelease();
          if (!v14)
          {
            NSString v15 = 0;
            goto LABEL_12;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        NSString v15 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_12:
        [v11 setText:v15];

        break;
    }
  }
}

void sub_100521E54()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset);
  if (v8)
  {
    id v22 = v8;
    Date.init()();
    uint64_t v9 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      default:
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v10)
        {
LABEL_8:
          if (qword_1007F6A60 != -1) {
            swift_once();
          }
          uint64_t v11 = &qword_10083CF68;
        }
        else
        {
          if (qword_1007F6A58 != -1) {
            swift_once();
          }
          uint64_t v11 = &qword_10083CF60;
        }
        char v12 = (void *)*v11;
        uint64_t v13 = *(unsigned __int8 *)(v0 + v9);
        uint64_t v14 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
        unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v14;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v16 + v15, v4, v1);
        id v17 = self;
        id v18 = v12;
        swift_retain();
        id v19 = [v17 currentTraitCollection];
        unint64_t v20 = v22;
        sub_10017D574(v13, 0, 1, v18, v19, (uint64_t)sub_100523968, v16);

        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
        swift_release();
        break;
    }
  }
}

uint64_t sub_1005221E8(void *a1)
{
  if (!a1)
  {
    uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView];
    uint64_t v14 = (double *)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame];
    if (v1[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame + 32])
    {
      [*(id *)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView] frame];
    }
    else
    {
      double v17 = v14[2];
      double v18 = v14[3];
      double v15 = *v14;
      double v16 = v14[1];
    }
    [v13 setFrame:v15, v16, v17, v18];
    id v19 = *(void **)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_bgView];
    unint64_t v20 = (double *)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame];
    if (v1[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame + 32])
    {
      [*(id *)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_bgView] frame];
    }
    else
    {
      double v23 = v20[2];
      double v24 = v20[3];
      double v21 = *v20;
      double v22 = v20[1];
    }
    [v19 setFrame:v21, v22, v23, v24];
    char v12 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100523834;
  *(void *)(v5 + 24) = v4;
  v27[4] = sub_10001AC84;
  v27[5] = v5;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  v27[2] = sub_1003F44E4;
  v27[3] = &unk_1007B1FF8;
  uint64_t v6 = _Block_copy(v27);
  uint64_t v7 = a1;
  uint64_t v8 = v1;
  swift_retain();
  swift_release();
  [(id)v3 performWithoutAnimation:v6];
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v3 & 1) == 0)
  {
    char v10 = *(void **)&v8[OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView];
    [*(id *)&v7[OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView] frame];
    [v10 setFrame:];
    uint64_t v11 = *(void **)&v8[OBJC_IVAR____TtC7Journal16ContactAssetView_bgView];
    [*(id *)&v7[OBJC_IVAR____TtC7Journal16ContactAssetView_bgView] frame];
    [v11 setFrame:];

    char v12 = sub_100523834;
LABEL_11:
    uint64_t v25 = &v1[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame];
    *(_OWORD *)uint64_t v25 = 0u;
    *((_OWORD *)v25 + 1) = 0u;
    v25[32] = 1;
    NSString v26 = &v1[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame];
    *(_OWORD *)NSString v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    v26[32] = 1;
    return sub_10001ABB8((uint64_t)v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_10052249C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100810860);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100810860);
  if (qword_1007F7DA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ECF8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100522564()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100521E54();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_100521BC0();
  }
}

id sub_1005225E4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC7Journal16ContactAssetView_contactName];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0xE000000000000000;
  uint64_t v10 = OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel;
  id v11 = objc_allocWithZone((Class)UILabel);
  char v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView;
  *(void *)&v12[v13] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal16ContactAssetView_bgView;
  *(void *)&v12[v14] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v12[OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset] = 0;
  double v15 = &v12[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame];
  *(_OWORD *)double v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v15[32] = 1;
  double v16 = &v12[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame];
  *(_OWORD *)double v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v16[32] = 1;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for ContactAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_1005215CC();

  return v17;
}

id sub_10052275C(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Journal16ContactAssetView_contactName];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  uint64_t v4 = OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel;
  id v5 = objc_allocWithZone((Class)UILabel);
  uint64_t v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal16ContactAssetView_bgView;
  *(void *)&v6[v8] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v6[OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset] = 0;
  uint64_t v9 = &v6[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v9[32] = 1;
  uint64_t v10 = &v6[OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v10[32] = 1;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for ContactAssetView();
  [super initWithCoder:a1];
  id v12 = v11;
  if (v11)
  {
    id v13 = v11;
    sub_1005215CC();
  }
  return v12;
}

uint64_t sub_1005228BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  double v24 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  id v17 = v24;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
  aBlock[4] = sub_100523AB0;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B2098;
  double v18 = _Block_copy(aBlock);
  id v19 = v17;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v28 = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  swift_release();
  return swift_release();
}

void sub_100522C78(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v48 = a3;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - v15;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v18 = Strong;
    if (a2)
    {
      Swift::String v45 = v10;
      Swift::String v46 = v7;
      id v19 = *(void **)&Strong[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
      id v20 = a2;
      [v19 setHidden:1];
      double v21 = *(void **)&v18[OBJC_IVAR____TtC7Journal16ContactAssetView_bgView];
      [v21 setHidden:0];
      uint64_t v22 = *(void **)&v18[OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView];
      [v22 setImage:v20];
      id v47 = v20;
      [v21 setImage:v20];
      [v22 setContentMode:1];
      [v22 setClipsToBounds:1];
      [v22 setAccessibilityIgnoresInvertColors:1];
      swift_allocObject();
      swift_unknownObjectWeakInit();
      char v23 = 1;
      switch(v18[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
      {
        case 5:
          break;
        default:
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          break;
      }
      swift_retain_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v16, v48, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
      if (v23) {
        goto LABEL_22;
      }
      sub_100045944((uint64_t)v16, (uint64_t)v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
      {
        sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FC470);
      }
      else
      {
        Swift::String v39 = v45;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
        Swift::String v40 = v46;
        static Date.now.getter();
        Date.timeIntervalSince(_:)();
        double v42 = v41;
        Swift::String v43 = *(void (**)(char *, uint64_t))(v5 + 8);
        v43(v40, v4);
        v43(v39, v4);
        if (v42 < 0.1)
        {
LABEL_22:
          swift_beginAccess();
          uint64_t v36 = swift_unknownObjectWeakLoadStrong();
          if (v36)
          {
            Swift::String v37 = (void *)v36;
            id v38 = *(id *)(v36 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);

            [v38 setAlpha:1.0];
            swift_release_n();
          }
          else
          {
            swift_release_n();
          }
          goto LABEL_29;
        }
      }
      static Animation.easeIn(duration:)();
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      static UIView.animate(_:changes:completion:)();
      swift_release_n();
      swift_release();
LABEL_29:
      sub_10001457C((uint64_t)v16, (uint64_t *)&unk_1007FC470);
      swift_release();
      char v44 = v18[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
      v18[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
      if ((v44 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v34 = v18;
        sub_100491AF4();

LABEL_32:
        swift_unknownObjectRelease();
        return;
      }

      return;
    }
  }
  if (qword_1007F7160 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100026A54(v24, (uint64_t)qword_100810860);
  swift_retain();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    id v28 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138412290;
    swift_beginAccess();
    uint64_t v29 = swift_unknownObjectWeakLoadStrong();
    uint64_t v30 = v29;
    if (v29) {
      uint64_t v49 = v29;
    }
    else {
      uint64_t v49 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v28 = v30;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%@.getImage returned nil", v27, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  swift_beginAccess();
  uint64_t v31 = swift_unknownObjectWeakLoadStrong();
  if (v31)
  {
    uint64_t v32 = (char *)v31;
    [*(id *)(v31 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setHidden:0];
    [*(id *)&v32[OBJC_IVAR____TtC7Journal16ContactAssetView_bgView] setHidden:1];
  }
  swift_beginAccess();
  uint64_t v33 = swift_unknownObjectWeakLoadStrong();
  if (v33)
  {
    uint64_t v34 = (unsigned char *)v33;
    int v35 = *(unsigned __int8 *)(v33 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v33 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v35 == 1 || !swift_unknownObjectWeakLoadStrong())
    {

      return;
    }
    sub_100491AF4();
    goto LABEL_32;
  }
}

void sub_1005234A4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);

    [v2 setAlpha:1.0];
  }
}

id sub_100523520(uint64_t a1)
{
  return [*(id *)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel) setAlpha:];
}

id sub_100523538(uint64_t a1)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);
  UIView.removeAllConstraints()();
  uint64_t v3 = (double *)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_naturalIconFrame + 32))
  {
    [v2 frame];
  }
  else
  {
    double v6 = v3[2];
    double v7 = v3[3];
    double v4 = *v3;
    double v5 = v3[1];
  }
  [v2 setFrame:v4, v5, v6, v7];
  uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_bgView);
  UIView.removeAllConstraints()();
  uint64_t v9 = (double *)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC7Journal16ContactAssetView_naturalBGFrame + 32))
  {
    [v8 frame];
  }
  else
  {
    double v12 = v9[2];
    double v13 = v9[3];
    double v10 = *v9;
    double v11 = v9[1];
  }

  return [v8 setFrame:v10, v11, v12, v13];
}

void sub_100523604()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  id v2 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x58);
  uint64_t v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  double v4 = v1;
  v2(6, v3);

  sub_100521E54();
}

void sub_1005236B0()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset);
}

id sub_100523724()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContactAssetView();
  [super dealloc];
}

uint64_t type metadata accessor for ContactAssetView()
{
  return self;
}

uint64_t sub_1005237FC()
{
  return swift_deallocObject();
}

id sub_100523834()
{
  return sub_100523538(*(void *)(v0 + 16));
}

uint64_t sub_10052383C()
{
  return swift_deallocObject();
}

uint64_t sub_10052384C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10052385C()
{
  return swift_release();
}

uint64_t sub_100523864()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10052389C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100523968(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1005228BC(a1, v4, v5);
}

uint64_t sub_1005239DC()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100523AB0()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100522C78(v2, v3, v4);
}

void sub_100523B14()
{
}

uint64_t sub_100523B24@<X0>(uint64_t a1@<X8>)
{
  return sub_100523C6C(a1);
}

uint64_t sub_100523B40(uint64_t a1)
{
  return sub_100523DCC(a1);
}

uint64_t sub_100523B5C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1000685B8((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_100010218(&qword_100800348);
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10001457C((uint64_t)v7, &qword_1007FAD50);
    return 0;
  }
}

uint64_t sub_100523C50@<X0>(uint64_t a1@<X8>)
{
  return sub_100523C6C(a1);
}

uint64_t sub_100523C6C@<X0>(uint64_t a1@<X8>)
{
  id v3 = *(void **)(v1 + 16);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 objectForKey:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1000685B8((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    uint64_t v6 = type metadata accessor for Date();
    int v7 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_10001457C((uint64_t)v11, &qword_1007FAD50);
    uint64_t v9 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_100523DB0(uint64_t a1)
{
  return sub_100523DCC(a1);
}

uint64_t sub_100523DCC(uint64_t a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 16);
  sub_100045944(a1, (uint64_t)v5);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  NSString v10 = String._bridgeToObjectiveC()();
  [v6 setValue:isa forKey:v10];
  swift_unknownObjectRelease();

  return sub_10001457C(a1, (uint64_t *)&unk_1007FC470);
}

uint64_t sub_100523F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[4] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100523FD0;
  return sub_100524DE4();
}

uint64_t sub_100523FD0(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005240D0, 0, 0);
}

uint64_t sub_1005240D0()
{
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    type metadata accessor for MainActor();
    *(void *)(v0 + 40) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1005241A0, v2, v1);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1005241A0()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  sub_100524224(v1);
  return _swift_task_switch(sub_10050F440, 0, 0);
}

void sub_100524224(void *a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v5 = a1;
  }
  else
  {
    id v8 = [self sharedApplication];
    id v9 = [v8 connectedScenes];
    sub_10008A864();
    sub_1000872E4();
    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    double v11 = (void *)sub_1003F1F90(v10);
    swift_bridgeObjectRelease();
    if (!v11)
    {

      return;
    }
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();

    if (!v5)
    {

      return;
    }
  }
  id v6 = a1;
  static AppStore.requestReview(in:)();
  static Date.now.getter();
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
  sub_100523DB0((uint64_t)v4);
}

void sub_1005243CC()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100523B5C();
  if (v8)
  {
    uint64_t v9 = v8;
    static Date.now.getter();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1002A5C50(0, *(void *)(v9 + 16) + 1, 1, v9);
    }
    unint64_t v11 = *(void *)(v9 + 16);
    unint64_t v10 = *(void *)(v9 + 24);
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_1002A5C50(v10 > 1, v11 + 1, 1, v9);
    }
    *(void *)(v9 + 16) = v11 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v11, v7, v4);
    sub_1005246A0(6, v9);
    uint64_t v12 = *(void **)(v0 + 16);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    [v12 setValue:isa forKey:v14];
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1007FC190);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
    static Date.now.getter();
    uint64_t v15 = *(void **)(v0 + 16);
    Class v16 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    [v15 setValue:v16 forKey:v17];

    static Date.now.getter();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    sub_100523B40((uint64_t)v3);
  }
}

void sub_1005246A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v47 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (!a1) {
    goto LABEL_33;
  }
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v37 = a1;
  int64_t v11 = v10 >= a1 ? a1 : v10;
  uint64_t v49 = _swiftEmptyArrayStorage;
  sub_100095C5C(0, v11, 0);
  uint64_t v12 = v49;
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v33 = v5;
  if (v13)
  {
    Swift::String v43 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v44 = v5 + 16;
    unint64_t v38 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = a2 + v38;
    uint64_t v15 = *(void *)(v5 + 72);
    double v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    Swift::String v45 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v46 = v15;
    int v35 = (void (**)(char *, char *, uint64_t))(v5 + 40);
    swift_bridgeObjectRetain();
    unint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v39 = v13 - 1;
    Swift::String v40 = v9;
    double v42 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    unint64_t v34 = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = v37;
    uint64_t v36 = a2;
    while (1)
    {
      v43(v9, v14, v4);
      id v19 = *v42;
      (*v42)(v9, 0, 1, v4);
      if ((*v41)(v9, 1, v4) == 1) {
        break;
      }
      id v20 = v9;
      uint64_t v21 = v17;
      uint64_t v22 = *v45;
      (*v45)(v47, v20, v4);
      uint64_t v23 = *((void *)v12 + 2);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = v12;
      if (v23 >= v18)
      {
        unint64_t v27 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = (double *)sub_1000F3F44(v12);
          uint64_t v49 = v12;
        }
        uint64_t v9 = v40;
        if ((v27 & 0x8000000000000000) != 0) {
          goto LABEL_34;
        }
        if (v27 >= *((void *)v12 + 2)) {
          goto LABEL_35;
        }
        (*v35)((char *)v12 + v38 + v46 * v27, v47, v4);
        uint64_t v12 = v49;
        uint64_t v17 = v27 + 1;
        if (v17 >= v18) {
          uint64_t v17 = 0;
        }
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100095C5C(0, v23 + 1, 1);
          uint64_t v12 = v49;
        }
        unint64_t v26 = *((void *)v12 + 2);
        unint64_t v25 = *((void *)v12 + 3);
        if (v26 >= v25 >> 1)
        {
          sub_100095C5C(v25 > 1, v26 + 1, 1);
          uint64_t v12 = v49;
        }
        *((void *)v12 + 2) = v26 + 1;
        v22((char *)v12 + v38 + v26 * v46, v47, v4);
        uint64_t v49 = v12;
        a2 = v36;
        uint64_t v18 = v37;
        uint64_t v17 = v21;
        uint64_t v9 = v40;
      }
      if (v39 == v16) {
        goto LABEL_26;
      }
      ++v16;
      v14 += v46;
      if (v16 >= *(void *)(a2 + 16))
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  else
  {
    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    unint64_t v34 = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
LABEL_26:
    v19(v9, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return;
  }
  int64_t v28 = *((void *)v12 + 2);
  uint64_t v48 = _swiftEmptyArrayStorage;
  sub_100095C5C(0, v28, 0);
  if (v28 < v17) {
    goto LABEL_37;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t v29 = *((void *)v12 + 2);
    if (v29 >= v17 && v29 >= v28)
    {
      uint64_t v30 = (uint64_t)v12 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      uint64_t v31 = swift_retain();
      sub_100525FDC(v31, v30, v17, (2 * v28) | 1);
      swift_bridgeObjectRelease();
      sub_100525FDC((uint64_t)v12, v30, 0, (2 * v17) | 1);
      return;
    }
    goto LABEL_39;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_100524B34(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = result;
  if (result)
  {
    int64_t v4 = *(void *)(a2 + 16) >= result ? result : *(void *)(a2 + 16);
    sub_100095C00(0, v4, 0);
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5)
    {
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      uint64_t v8 = v5 - 2;
      do
      {
        uint64_t v9 = &_swiftEmptyArrayStorage[4];
        unint64_t v10 = v7;
LABEL_9:
        if (v10 >= *(void *)(a2 + 16)) {
          goto LABEL_38;
        }
        double v11 = *(double *)(a2 + 32 + 8 * v10);
        unint64_t v7 = v10 + 1;
        double v12 = _swiftEmptyArrayStorage[2];
        if (*(uint64_t *)&v12 < v3)
        {
LABEL_23:
          double v14 = _swiftEmptyArrayStorage[3];
          *(void *)&double v15 = *(void *)&v12 + 1;
          if (*(void *)&v12 >= *(void *)&v14 >> 1)
          {
            uint64_t v19 = v8;
            uint64_t result = sub_100095C00(*(void *)&v14 > 1uLL, *(void *)&v12 + 1, 1);
            *(void *)&double v15 = *(void *)&v12 + 1;
            uint64_t v8 = v19;
          }
          _swiftEmptyArrayStorage[2] = v15;
          _swiftEmptyArrayStorage[*(void *)&v12 + 4] = v11;
        }
        else
        {
          if ((unint64_t)v6 >= *(void *)&v12) {
            goto LABEL_39;
          }
          v9[v6++] = v11;
          if (v6 >= v3)
          {
            if (v7 == v5)
            {
LABEL_29:
              swift_bridgeObjectRelease();
              goto LABEL_30;
            }
            while (v10 + 1 < *(void *)(a2 + 16))
            {
              double v11 = *(double *)(a2 + 40 + 8 * v10);
              double v12 = _swiftEmptyArrayStorage[2];
              if (*(uint64_t *)&v12 < v3)
              {
                uint64_t v6 = 0;
                unint64_t v7 = v10 + 2;
                goto LABEL_23;
              }
              double *v9 = v11;
              if (v3 > 1)
              {
                uint64_t v6 = 1;
                BOOL v13 = v8 == v10;
                v10 += 2;
                if (!v13) {
                  goto LABEL_9;
                }
                swift_bridgeObjectRelease();
                uint64_t v6 = 1;
                goto LABEL_33;
              }
              if (v5 - 1 == ++v10) {
                goto LABEL_29;
              }
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
        }
      }
      while (v7 != v5);
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_33:
        int64_t v16 = *(void *)&_swiftEmptyArrayStorage[2];
        uint64_t result = sub_100095C00(0, v16, 0);
        if (v16 < v6) {
          goto LABEL_41;
        }
        if ((v6 & 0x8000000000000000) == 0)
        {
          double v17 = _swiftEmptyArrayStorage[2];
          if (*(void *)&v17 >= (unint64_t)v6 && *(void *)&v17 >= (unint64_t)v16)
          {
            uint64_t v18 = swift_retain();
            sub_100526620(v18, (uint64_t)&_swiftEmptyArrayStorage[4], v6, (2 * v16) | 1);
            swift_bridgeObjectRelease();
            swift_release();
            sub_100526620((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage[4], 0, (2 * v6) | 1);
            swift_release();
            return (uint64_t)_swiftEmptyArrayStorage;
          }
          goto LABEL_43;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100524DE4()
{
  *(void *)(v1 + 16) = v0;
  sub_100010218(&qword_1007F9BE8);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100524E78, 0, 0);
}

uint64_t sub_100524E78()
{
  uint64_t v1 = *(void **)(v0[2] + 16);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 BOOLForKey:v2];

  if (v3)
  {
LABEL_11:
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(id))v0[1];
    return v10(v3);
  }
  if (!sub_100525478())
  {
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = "isFirstLaunchMoreThanAWeekAgo returned false";
      goto LABEL_9;
    }
LABEL_10:

    goto LABEL_11;
  }
  uint64_t v4 = sub_100523B5C();
  if (!v4 || (unint64_t v5 = *(void *)(v4 + 16), swift_bridgeObjectRelease(), v5 < 6))
  {
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = "isAppLaunchCountSatisfied returned false";
LABEL_9:
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v8, v9, 2u);
      swift_slowDealloc();
      goto LABEL_10;
    }
    goto LABEL_10;
  }
  if ((sub_100525958() & 1) == 0)
  {
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v6, v7)) {
      goto LABEL_10;
    }
    uint64_t v8 = "didNotRequestRecently returned false";
    goto LABEL_9;
  }
  uint64_t v13 = v0[2];
  uint64_t v12 = v0[3];
  type metadata accessor for Journaling();
  uint64_t v14 = type metadata accessor for DateInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  uint64_t v15 = *(void *)(v13 + 24);
  int64_t v16 = (void *)swift_task_alloc();
  v0[4] = v16;
  *int64_t v16 = v0;
  v16[1] = sub_100525130;
  uint64_t v17 = v0[3];
  return static Journaling.getValidEntriesCount(dateInterval:context:)(v17, v15);
}

uint64_t sub_100525130(uint64_t a1)
{
  uint64_t v5 = *v2;
  uint64_t v4 = *v2;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v4 + 24);
  if (v1)
  {
    swift_errorRelease();
    sub_10001457C(v6, &qword_1007F9BE8);
    os_log_type_t v7 = sub_100525390;
  }
  else
  {
    *(void *)(v5 + 40) = a1;
    sub_10001457C(v6, &qword_1007F9BE8);
    os_log_type_t v7 = sub_100525294;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100525294()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1 <= 9)
  {
    NSString v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "isNumEntriesSatisfied returned false", v4, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v5(v1 > 9);
}

uint64_t sub_100525390()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "isNumEntriesSatisfied returned false", v3, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4(0);
}

BOOL sub_100525478()
{
  uint64_t v57 = type metadata accessor for Calendar.Component();
  uint64_t v0 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  os_log_type_t v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v56 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v59 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v54 = (char *)&v46 - v16;
  __chkstk_darwin(v17);
  uint64_t v58 = (char *)&v46 - v18;
  sub_100523B24((uint64_t)v10);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    uint64_t v20 = (uint64_t)v10;
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v50 = v12 + 32;
    v49(v58, v10, v11);
    static Date.now.getter();
    BOOL v52 = v19;
    uint64_t v21 = v56;
    static Calendar.current.getter();
    uint64_t v22 = *(void (**)(char *, void, uint64_t))(v0 + 104);
    uint64_t v55 = v4;
    uint64_t v23 = v3;
    uint64_t v24 = v57;
    id v47 = v22;
    uint64_t v48 = v0 + 104;
    v22(v2, enum case for Calendar.Component.weekOfYear(_:), v57);
    uint64_t v25 = v11;
    uint64_t v26 = v12;
    unint64_t v27 = v59;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    int64_t v28 = *(void (**)(char *, uint64_t))(v0 + 8);
    uint64_t v51 = v2;
    uint64_t v29 = v24;
    uint64_t v30 = v23;
    uint64_t v31 = v55;
    uint64_t v46 = v28;
    v28(v2, v29);
    unint64_t v34 = *(char **)(v31 + 8);
    uint64_t v32 = v31 + 8;
    uint64_t v33 = v34;
    ((void (*)(char *, uint64_t))v34)(v21, v30);
    int v35 = *(void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v53 = v26 + 8;
    v35(v14, v25);
    uint64_t v36 = v25;
    if (v52(v27, 1, v25) != 1)
    {
      unint64_t v38 = v54;
      v49(v54, v59, v25);
      uint64_t v39 = v56;
      static Calendar.current.getter();
      uint64_t v59 = v33;
      Swift::String v40 = v51;
      uint64_t v55 = v32;
      uint64_t v41 = v57;
      v47(v51, enum case for Calendar.Component.day(_:), v57);
      double v42 = v58;
      Swift::String v43 = v35;
      uint64_t v44 = Calendar.compare(_:to:toGranularity:)();
      v46(v40, v41);
      ((void (*)(char *, uint64_t))v59)(v39, v30);
      BOOL v37 = (unint64_t)(v44 + 1) < 2;
      v43(v38, v36);
      v43(v42, v36);
      return v37;
    }
    v35(v58, v25);
    uint64_t v20 = (uint64_t)v59;
  }
  sub_10001457C(v20, (uint64_t *)&unk_1007FC470);
  return 0;
}

uint64_t sub_100525958()
{
  uint64_t v57 = type metadata accessor for Calendar.Component();
  uint64_t v0 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  os_log_type_t v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v56 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v59 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v54 = (char *)&v46 - v16;
  __chkstk_darwin(v17);
  uint64_t v58 = (char *)&v46 - v18;
  sub_100523C50((uint64_t)v10);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    uint64_t v20 = (uint64_t)v10;
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v50 = v12 + 32;
    v49(v58, v10, v11);
    static Date.now.getter();
    BOOL v52 = v19;
    uint64_t v21 = v56;
    static Calendar.current.getter();
    uint64_t v22 = *(void (**)(char *, void, uint64_t))(v0 + 104);
    uint64_t v55 = v4;
    uint64_t v23 = v3;
    uint64_t v24 = v57;
    id v47 = v22;
    uint64_t v48 = v0 + 104;
    v22(v2, enum case for Calendar.Component.month(_:), v57);
    uint64_t v25 = v11;
    uint64_t v26 = v12;
    unint64_t v27 = v59;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    int64_t v28 = *(void (**)(char *, uint64_t))(v0 + 8);
    uint64_t v51 = v2;
    uint64_t v29 = v24;
    uint64_t v30 = v23;
    uint64_t v31 = v55;
    uint64_t v46 = v28;
    v28(v2, v29);
    unint64_t v34 = *(char **)(v31 + 8);
    uint64_t v32 = v31 + 8;
    uint64_t v33 = v34;
    ((void (*)(char *, uint64_t))v34)(v21, v30);
    int v35 = *(void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v53 = v26 + 8;
    v35(v14, v25);
    uint64_t v36 = v25;
    if (v52(v27, 1, v25) != 1)
    {
      unint64_t v38 = v54;
      v49(v54, v59, v25);
      uint64_t v39 = v56;
      static Calendar.current.getter();
      uint64_t v59 = v33;
      Swift::String v40 = v51;
      uint64_t v55 = v32;
      uint64_t v41 = v57;
      v47(v51, enum case for Calendar.Component.day(_:), v57);
      double v42 = v58;
      Swift::String v43 = v35;
      uint64_t v44 = Calendar.compare(_:to:toGranularity:)();
      v46(v40, v41);
      ((void (*)(char *, uint64_t))v59)(v39, v30);
      BOOL v37 = (unint64_t)(v44 + 1) < 2;
      v43(v38, v36);
      v43(v42, v36);
      return v37;
    }
    v35(v58, v25);
    uint64_t v20 = (uint64_t)v59;
  }
  sub_10001457C(v20, (uint64_t *)&unk_1007FC470);
  return 1;
}

uint64_t sub_100525E38()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal21AppStoreRatingManager_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100525EE8()
{
  return type metadata accessor for AppStoreRatingManager();
}

uint64_t type metadata accessor for AppStoreRatingManager()
{
  uint64_t result = qword_100810908;
  if (!qword_100810908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100525F3C()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100525FDC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v56 = a2;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  __chkstk_darwin(v12);
  uint64_t v53 = (uint64_t)v51 - v13;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v51 - v16;
  unint64_t v18 = a4 >> 1;
  uint64_t v57 = a3;
  BOOL v19 = __OFSUB__(a4 >> 1, a3);
  uint64_t v20 = (a4 >> 1) - a3;
  if (v19)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v60 = v15;
  uint64_t v21 = *v4;
  int64_t v22 = *(void *)(*v4 + 16);
  int64_t v23 = v22 + v20;
  if (__OFADD__(v22, v20))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v62 = v18;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v21;
  id v54 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v25 = *(void *)(v21 + 24) >> 1, v25 < v23))
  {
    if (v22 <= v23) {
      int64_t v26 = v22 + v20;
    }
    else {
      int64_t v26 = v22;
    }
    sub_100095C5C(isUniquelyReferenced_nonNull_native, v26, 1);
    uint64_t v4 = v54;
    uint64_t v21 = *v54;
    int64_t v25 = *(void *)(*v54 + 24) >> 1;
  }
  uint64_t v27 = *(void *)(v21 + 16);
  uint64_t v28 = v25 - v27;
  if (v62 != v57)
  {
    if (v28 >= v20)
    {
      if (v20 < 0) {
        goto LABEL_52;
      }
      uint64_t v30 = *(void *)(v61 + 72);
      unint64_t v31 = v21
          + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))
          + v30 * v27;
      unint64_t v32 = v56 + v30 * v57;
      if (v32 < v31 + v30 * v20 && v31 < v32 + v30 * v20) {
        goto LABEL_52;
      }
      swift_arrayInitWithCopy();
      if (v20)
      {
        uint64_t v34 = *(void *)(v21 + 16);
        BOOL v19 = __OFADD__(v34, v20);
        uint64_t v35 = v34 + v20;
        uint64_t v29 = v62;
        if (v19)
        {
LABEL_51:
          __break(1u);
LABEL_52:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        *(void *)(v21 + 16) = v35;
        if (v20 == v28) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v29 = v62;
        if (!v28) {
          goto LABEL_23;
        }
      }
LABEL_43:
      return swift_unknownObjectRelease();
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v20 > 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v29 = v57;
  if (v28) {
    goto LABEL_43;
  }
LABEL_23:
  v51[1] = a1;
  int64_t v36 = *(void *)(v21 + 16);
  uint64_t v37 = v61;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
  uint64_t v59 = v61 + 56;
  v58(v17, 1, 1, v8);
  uint64_t v38 = v53;
  sub_100045944((uint64_t)v17, v53);
  uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  uint64_t v64 = v37 + 48;
  int v39 = v63(v38, 1, v8);
  uint64_t v40 = v60;
  if (v39 != 1)
  {
    double v42 = (void (**)(char *, uint64_t, uint64_t))(v61 + 32);
    uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    BOOL v52 = (void (**)(char *, uint64_t))(v61 + 8);
    do
    {
      sub_10001457C(v38, (uint64_t *)&unk_1007FC470);
      uint64_t v65 = *v4;
      unint64_t v44 = *(void *)(v65 + 24);
      int64_t v43 = v44 >> 1;
      if ((uint64_t)(v44 >> 1) < v36 + 1)
      {
        uint64_t v50 = v54;
        sub_100095C5C(v44 > 1, v36 + 1, 1);
        uint64_t v65 = *v50;
        int64_t v43 = *(void *)(v65 + 24) >> 1;
      }
      swift_retain();
      sub_100045944((uint64_t)v17, v40);
      if (v63(v40, 1, v8) != 1)
      {
        Swift::String v45 = *v42;
        if (v36 > v43) {
          int64_t v43 = v36;
        }
        do
        {
          v45(v10, v40, v8);
          if (v43 == v36)
          {
            (*v52)(v10, v8);
            swift_release();
            int64_t v36 = v43;
            goto LABEL_27;
          }
          sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
          id v47 = v10;
          uint64_t v48 = *(void *)(v61 + 72);
          uint64_t v49 = v47;
          ((void (*)(unint64_t))v45)(v65+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ v48 * v36);
          if (v29 == v62)
          {
            uint64_t v46 = 1;
            uint64_t v29 = v62;
          }
          else
          {
            if (v29 < v57 || v29 >= v62)
            {
              __break(1u);
              goto LABEL_47;
            }
            (*v55)(v17, v56 + v48 * v29, v8);
            uint64_t v46 = 0;
            ++v29;
          }
          v58(v17, v46, 1, v8);
          uint64_t v40 = v60;
          sub_100045944((uint64_t)v17, v60);
          ++v36;
          unint64_t v10 = v49;
        }
        while (v63(v40, 1, v8) != 1);
      }
      swift_release();
      sub_10001457C(v40, (uint64_t *)&unk_1007FC470);
      int64_t v43 = v36;
LABEL_27:
      uint64_t v4 = v54;
      *(void *)(*v54 + 16) = v43;
      uint64_t v38 = v53;
      sub_100045944((uint64_t)v17, v53);
    }
    while (v63(v38, 1, v8) != 1);
  }
  sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
  swift_unknownObjectRelease();
  return sub_10001457C(v38, (uint64_t *)&unk_1007FC470);
}

uint64_t sub_100526620(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *(void *)(*v4 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!result || v9 > *(void *)(v7 + 24) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v13 = v8 + v6;
      }
      else {
        int64_t v13 = v8;
      }
      uint64_t result = sub_100095C00(result, v13, 1);
      uint64_t v7 = *v4;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *(void *)(v7 + 16);
  if ((*(void *)(v7 + 24) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  uint64_t v15 = (char *)(v7 + 8 * v14 + 32);
  uint64_t v16 = (char *)(a2 + 8 * a3);
  if (v16 < &v15[8 * v6] && v15 < &v16[8 * v6]) {
    goto LABEL_27;
  }
  uint64_t result = (uint64_t)memcpy(v15, v16, 8 * v6);
  if (!v6)
  {
LABEL_22:
    *uint64_t v4 = v7;
    return result;
  }
  uint64_t v18 = *(void *)(v7 + 16);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *(void *)(v7 + 16) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1005267B8()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_100810A98);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = (objc_class *)type metadata accessor for RecentPlacesVC();
  v24.receiver = v0;
  v24.super_class = v8;
  [super viewDidLoad];
  id result = [v0 tableView];
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v10 = objc_allocWithZone((Class)sub_100010218(&qword_100810AA0));
  uint64_t v11 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC7Journal14RecentPlacesVC_dataSource];
  *(void *)&v0[OBJC_IVAR____TtC7Journal14RecentPlacesVC_dataSource] = v11;

  if (qword_1007F6958 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_100010218(&qword_1007FB8C0);
  Published.projectedValue.getter();
  swift_endAccess();
  *(void *)(swift_allocObject() + 16) = v0;
  sub_100527890();
  int64_t v13 = v0;
  uint64_t v14 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)&v13[OBJC_IVAR____TtC7Journal14RecentPlacesVC_cancellable] = v14;
  swift_release();
  id result = [v13 tableView];
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v15 = result;
  id v16 = [objc_allocWithZone((Class)UIRefreshControl) init];
  [v15 setRefreshControl:v16];

  id result = [v13 tableView];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v17 = result;
  id v18 = [result refreshControl];

  if (v18)
  {
    [v18 addTarget:v13 action:"refreshData" forControlEvents:4096];
  }
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 1, v19);
  type metadata accessor for MainActor();
  uint64_t v20 = v13;
  uint64_t v21 = static MainActor.shared.getter();
  int64_t v22 = (void *)swift_allocObject();
  void v22[2] = v21;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v20;
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100810AB0, (uint64_t)v22);
  return (id)swift_release();
}

id sub_100526BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = [objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  id v5 = [v4 textLabel];
  if (v5)
  {
    uint64_t v6 = v5;
    type metadata accessor for Date();
    sub_1005279F8((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = v7;
    v8._countAndFlagsBits = 10;
    v8._object = (void *)0xE100000000000000;
    String.append(_:)(v8);
    uint64_t v9 = _s14DataAggregatorC5PlaceVMa(0);
    id v10 = (uint64_t *)(a3 + *(int *)(v9 + 32));
    if (v10[1])
    {
      uint64_t v11 = *v10;
      uint64_t v12 = (void *)v10[1];
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = (void *)0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 10;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    uint64_t v15 = (uint64_t *)(a3 + *(int *)(v9 + 28));
    if (v15[1])
    {
      uint64_t v16 = *v15;
      uint64_t v17 = (void *)v15[1];
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = (void *)0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setText:v19, v26, v27];
  }
  id v20 = [v4 textLabel];
  if (v20)
  {
    uint64_t v21 = v20;
    [v20 setNumberOfLines:0];
  }
  id v22 = [v4 detailTextLabel];
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = [*(id *)(a3 + *(int *)(_s14DataAggregatorC5PlaceVMa(0) + 20)) _navigation_locationDescription];
    [v23 setText:v24];
  }
  return v4;
}

uint64_t sub_100526DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100010218(&qword_100810AB8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s14DataAggregatorC5PlaceVMa(0);
  sub_1005279A4();
  sub_1005279F8(&qword_100810AC8, (void (*)(uint64_t))_s14DataAggregatorC5PlaceVMa);
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100794F70);
  v10[15] = 1;
  uint64_t result = NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  Swift::String v8 = *(void **)(a2 + OBJC_IVAR____TtC7Journal14RecentPlacesVC_dataSource);
  if (v8)
  {
    id v9 = v8;
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100526FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_100527074, v6, v5);
}

uint64_t sub_100527074()
{
  if (qword_1007F6958 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_100527138;
  return sub_10007C4D0();
}

uint64_t sub_100527138()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_100527258, v3, v2);
}

id sub_100527258()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  id result = [v1 tableView];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result refreshControl];

    [v4 endRefreshing];
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v5();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1005275C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentPlacesVC();
  return [super dealloc];
}

uint64_t type metadata accessor for RecentPlacesVC()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for RecentPlacesVC.Section(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100527708);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentPlacesVC.Section()
{
  return &type metadata for RecentPlacesVC.Section;
}

unint64_t sub_100527744()
{
  unint64_t result = qword_100810A80;
  if (!qword_100810A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100810A80);
  }
  return result;
}

uint64_t sub_10052779C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100526FDC(a1, v4, v5, v6);
}

uint64_t sub_100527850()
{
  return swift_deallocObject();
}

uint64_t sub_100527888(uint64_t a1)
{
  return sub_100526DF4(a1, *(void *)(v1 + 16));
}

unint64_t sub_100527890()
{
  unint64_t result = qword_100810AA8;
  if (!qword_100810AA8)
  {
    sub_100014440(&qword_100810A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810AA8);
  }
  return result;
}

uint64_t sub_1005278F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100526FDC(a1, v4, v5, v6);
}

unint64_t sub_1005279A4()
{
  unint64_t result = qword_100810AC0;
  if (!qword_100810AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100810AC0);
  }
  return result;
}

uint64_t sub_1005279F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100527A40()
{
  id v0 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v0 setZeroFormattingBehavior:0x10000];
  [v0 setAllowedUnits:192];
  id result = [v0 setUnitsStyle:0];
  qword_100810AD0 = (uint64_t)v0;
  return result;
}

id sub_100527AB8(uint64_t a1)
{
  return sub_100527AC8(a1, 224, &qword_100810AD8);
}

id sub_100527AC8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v5 setAllowedUnits:a2];
  [v5 setZeroFormattingBehavior:10];
  id result = [v5 setUnitsStyle:3];
  *a3 = v5;
  return result;
}

id sub_100527B4C(uint64_t a1)
{
  return sub_100527AC8(a1, 112, &qword_100810AE0);
}

uint64_t static FormatStyle<>.mediaTimeShort(for:)(double a1)
{
  uint64_t v2 = type metadata accessor for Duration.TimeFormatStyle.Pattern();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3600.0) {
    static Duration.TimeFormatStyle.Pattern.hourMinuteSecond.getter();
  }
  else {
    static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
  }
  static FormatStyle<>.time(pattern:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100527C54(UIImage *a1, uint64_t a2, uint64_t a3)
{
  id v24 = a1;
  uint64_t v5 = type metadata accessor for URL.DirectoryHint();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v23 - v14;
  sub_10017F3D0((uint64_t)v12);
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_100014344();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  uint64_t v17 = UIImageHEICRepresentation(v24);
  if (v17)
  {
    Swift::String v18 = v17;
    uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    sub_10052B0E4();
    sub_100040DD0(v19, v21);
  }
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

uint64_t sub_100527E94()
{
  v1[6] = v0;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OSSignpostID();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_100528028, 0, 0);
}

uint64_t sub_100528028()
{
  v0[18] = qword_100810B40;
  static OSSignpostID.exclusive.getter();
  uint64_t v1 = OSSignposter.logHandle.getter();
  os_signpost_type_t v2 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v7 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v3, v0[17], v4);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    os_signpost_id_t v9 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v9, "Image attachment loading", "", v8, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v10 = v0[14];

    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v7 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[14];
  v0[19] = v6;
  v0[20] = v7;
  v6(v11, v12, v13);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v0[21] = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[22] = v15;
  v0[23] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v12, v13);
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  uint64_t v16 = (uint64_t *)(v0[6] + qword_100810AF0);
  uint64_t v17 = *v16;
  v0[24] = *v16;
  uint64_t v18 = v16[1];
  v0[25] = v18;
  id v19 = sub_10017F100(v17, v18);
  unint64_t v20 = (UIImage *)[v19 imageByPreparingForDisplay];

  if (v20)
  {
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cache hit.", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  id v25 = sub_10052A418();
  uint64_t v26 = v0[6];
  if (v25)
  {
    uint64_t v27 = v25;
    sub_1001EB508();
    unint64_t v20 = sub_10039505C(v27);
    switch(*(unsigned char *)(v26 + qword_100810B20))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          sub_100529CC4(v20, v17, v18);
        }
        break;
    }
    int64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      Swift::String v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Image file attachment found.", v45, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  if (sub_100041A58(*(unsigned char *)(v26 + qword_100810AF8)) == 0x6F746F6870 && v28 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      id v46 = (id)v0[6];
      id v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      BOOL v49 = os_log_type_enabled(v47, v48);
      uint64_t v50 = (char *)v0[6];
      if (v49)
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 134217984;
        unint64_t v52 = *(void *)&v50[qword_100810B00];
        if (v52 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        id v54 = (void *)v0[6];
        v0[4] = v53;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "did not find image file attachment, attachments.count=%ld", v51, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      unint64_t v20 = 0;
      uint64_t v24 = v0[6];
      goto LABEL_45;
    }
  }
  v0[26] = qword_100810B38;
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Will try to get image from Core Data (legacy support)", v32, 2u);
    swift_slowDealloc();
  }
  uint64_t v33 = v0[6];

  uint64_t v34 = *(void **)(v33 + qword_100810B18);
  v0[27] = v34;
  if (!v34)
  {
    int v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "context is nil", v41, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];
    goto LABEL_38;
  }
  uint64_t v35 = *(void **)(v0[6] + qword_100810B10);
  v0[28] = v35;
  if (!v35)
  {
    int v39 = v34;
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "assetID is nil", v57, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

LABEL_38:
    unint64_t v20 = 0;
LABEL_45:
    sub_10052A0F4(v24, (unint64_t)"Image attachment loading", 24, 2);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v65 = (uint64_t (*)(UIImage *))v0[1];
    return v65(v20);
  }
  id v36 = v34;
  id v37 = v35;
  if ([v36 concurrencyType] == (id)1)
  {
    id v38 = v36;
  }
  else
  {
    id v38 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
    [v38 setParentContext:v36];
  }
  v0[29] = v38;
  uint64_t v58 = (void *)v0[6];
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[10]);
  uint64_t v59 = (void *)swift_allocObject();
  v0[30] = v59;
  v59[2] = v38;
  v59[3] = v37;
  v59[4] = v58;
  id v60 = v37;
  v38;
  id v61 = v58;
  uint64_t v62 = (void *)swift_task_alloc();
  v0[31] = v62;
  uint64_t v63 = sub_100010218(&qword_1007FC120);
  *uint64_t v62 = v0;
  v62[1] = sub_1005289A8;
  uint64_t v64 = v0[12];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v64, sub_10052B020, v59, v63);
}

uint64_t sub_1005289A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100528B1C, 0, 0);
}

uint64_t sub_100528B1C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v4 = *(void **)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 48);

    uint64_t v6 = v5;
LABEL_24:
    sub_10052A0F4(v6, (unint64_t)"Image attachment loading", 24, 2);
    uint64_t v11 = 0;
    goto LABEL_25;
  }
  id v7 = objc_allocWithZone((Class)UIImage);
  sub_100040D64(v2, v1);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 initWithData:isa];
  sub_100040DBC(v2, v1);

  if (!v9)
  {
    sub_100040D64(v2, v1);
    uint64_t v12 = Logger.logObject.getter();
    uint64_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      uint64_t v15 = v14;
      uint64_t v16 = 0;
      switch(v1 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v2) - v2;
          if (__OFSUB__(HIDWORD(v2), v2))
          {
            __break(1u);
LABEL_29:
            __break(1u);
            JUMPOUT(0x100529100);
          }
          uint64_t v16 = (int)v16;
LABEL_22:
          id v37 = *(void **)(v0 + 224);
          id v36 = *(void **)(v0 + 232);
          id v38 = *(void **)(v0 + 216);
          *(void *)(v0 + 40) = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100040DBC(v2, v1);
          _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v13, "can't create image from data (size: %{bytes}ld)", v15, 0xCu);
          swift_slowDealloc();

          sub_100040DBC(v2, v1);
          break;
        case 2uLL:
          uint64_t v34 = *(void *)(v2 + 16);
          uint64_t v33 = *(void *)(v2 + 24);
          BOOL v35 = __OFSUB__(v33, v34);
          uint64_t v16 = v33 - v34;
          if (!v35) {
            goto LABEL_22;
          }
          goto LABEL_29;
        case 3uLL:
          goto LABEL_22;
        default:
          uint64_t v16 = BYTE6(v1);
          goto LABEL_22;
      }
    }
    else
    {
      uint64_t v17 = *(void **)(v0 + 224);
      uint64_t v18 = *(void **)(v0 + 216);

      sub_100040DBC(v2, v1);
      sub_100040DBC(v2, v1);
    }
    uint64_t v6 = *(void *)(v0 + 48);
    goto LABEL_24;
  }
  uint64_t v10 = *(void *)(v0 + 48);
  sub_1001EB508();
  uint64_t v11 = sub_10039505C(v9);
  switch(*(unsigned char *)(v10 + qword_100810B20))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        sub_100529CC4(v11, *(void *)(v0 + 192), *(void *)(v0 + 200));
      }
      break;
  }
  unint64_t v20 = (void *)(v0 + 120);
  unint64_t v21 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v22 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    os_signpost_type_t v47 = v22;
    uint64_t v24 = *(void *)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v25 = *(void *)(v0 + 56);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v26 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
      uint64_t v26 = "";
    }
    format = (char *)v26;
    unint64_t v20 = (void *)(v0 + 128);
    int64_t v43 = *(void **)(v0 + 224);
    os_log_type_t v44 = *(void **)(v0 + 232);
    Swift::String v45 = *(void **)(v0 + 216);
    id v46 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v42 = *(void *)(v0 + 104);
    (*(void (**)(void, uint64_t))(v0 + 152))(*(void *)(v0 + 128), v29);
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v47, v31, "Image attachment loading", format, v30, 2u);
    swift_slowDealloc();

    sub_100040DBC(v2, v1);
    v46(v29, v42);
  }
  else
  {
    uint64_t v27 = *(void **)(v0 + 224);
    uint64_t v28 = *(void **)(v0 + 216);

    sub_100040DBC(v2, v1);
  }
  uint64_t v32 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 176))(*v20, *(void *)(v0 + 104));
  sub_10052A0F4(v32, (unint64_t)"Image attachment loading", 24, 2);
LABEL_25:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v39 = *(uint64_t (**)(UIImage *))(v0 + 8);
  return v39(v11);
}

id sub_100529128(unsigned char *a1, int a2, uint64_t a3, int a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  uint64_t v43 = a3;
  uint64_t v44 = a5;
  LODWORD(v45) = a4;
  int v42 = a2;
  uint64_t v12 = type metadata accessor for OSSignposter();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  __chkstk_darwin(v12);
  os_signpost_type_t v47 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  char v19 = &v41[-v18];
  v8[qword_100810AF8] = a1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];
  *(void *)&v8[qword_100810B00] = *(void *)&a1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments];
  unint64_t v20 = &a1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
  swift_beginAccess();
  *(void *)&v8[qword_100810B08] = *v20;
  unint64_t v21 = *(void **)&a1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  os_signpost_type_t v22 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21) {
    id v23 = [v21 objectID];
  }
  else {
    id v23 = 0;
  }
  *(void *)&v8[qword_100810B10] = v23;
  uint64_t v24 = *(void **)&a1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  *(void *)&v8[qword_100810B18] = v24;
  v8[qword_100810B20] = v42;
  uint64_t v25 = &v8[qword_100810B28];
  uint64_t v26 = v44;
  *(void *)uint64_t v25 = v43;
  v25[8] = v45 & 1;
  uint64_t v27 = (uint64_t *)&v8[qword_100810AF0];
  *uint64_t v27 = v26;
  v27[1] = (uint64_t)a6;
  *(void *)&v8[qword_100810B30] = a7;
  unint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  id v28 = v24;
  swift_bridgeObjectRetain();
  id v45 = a7;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  unint64_t v51 = 0xD000000000000018;
  unint64_t v52 = 0x80000001006A0740;
  v29._countAndFlagsBits = v26;
  v29._object = a6;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  id v30 = [self mainBundle];
  id v31 = [v30 bundleIdentifier];

  if (v31)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  uint64_t v32 = &v8[qword_100810B38];
  uint64_t v33 = v46;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(&v8[qword_100810B38], v19, v46);
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v16, v32, v33);
  uint64_t v34 = v47;
  OSSignposter.init(logger:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v48 + 32))(&v8[qword_100810B40], v34, v49);

  BOOL v35 = (objc_class *)type metadata accessor for ThumbnailCacheOperation();
  v50.receiver = v8;
  v50.super_class = v35;
  id v36 = [super init];
  id v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    int v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Initialized", v39, 2u);
    swift_slowDealloc();
  }

  return v36;
}

uint64_t ThumbnailCacheOperation.main@Sendable ()()
{
  *(void *)(v1 + 128) = v0;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *v0) + 0xF0) + **(int **)((swift_isaMask & *v0) + 0xF0));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1005296E8;
  return v4();
}

uint64_t sub_1005296E8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005297E8, 0, 0);
}

uint64_t sub_1005297E8()
{
  uint64_t v13 = v0;
  static Task<>.checkCancellation()();
  uint64_t v1 = *(os_unfair_lock_s **)(v0[16] + qword_1008086E8);
  uint64_t v2 = (void *)swift_task_alloc();
  *uint64_t v2 = sub_1001EB508();
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_1003299D4;
  *(void *)(v4 + 24) = KeyPath;
  uint64_t v5 = (unsigned __int8 *)&v1[4];
  v1 += 10;
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_10052AE1C(v5, v12);
  os_unfair_lock_unlock(v1);
  char v6 = v12[0];
  swift_release_n();
  swift_task_dealloc();
  id v7 = (void *)v0[18];
  if ((v6 & 1) != 0 || !v7)
  {
    id v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = v0[18];
    return v9(v10);
  }
  else
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_100529A48;
    uint64_t v8 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10052A098;
    v0[13] = &unk_1007B21C8;
    v0[14] = v8;
    [v7 prepareForDisplayWithCompletionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_100529A48()
{
  return _swift_task_switch(sub_100529B28, 0, 0);
}

uint64_t sub_100529B28()
{
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = *(void **)(v0 + 144);
  if (v1)
  {

    uint64_t v2 = v1;
  }
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100529BA0()
{
  sub_100014440((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for Result();
  swift_getFunctionTypeMetadata1();
  type metadata accessor for Array();

  return swift_getWitnessTable();
}

uint64_t sub_100529C34(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10013525C;
  return ThumbnailCacheOperation.main@Sendable ()();
}

uint64_t sub_100529CC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6BA8 != -1) {
    swift_once();
  }
  v18[1] = qword_10083D198;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  void v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_10052B0C0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007B2258;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a1;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  unint64_t v20 = _swiftEmptyArrayStorage;
  sub_10052BC74((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_100529FE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a2;
    sub_100527C54(v8, a3, a4);
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10052A080()
{
  return 8;
}

void *sub_10052A08C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10052A098(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_10052BCBC((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t sub_10052A0F4(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = type metadata accessor for OSSignpostError();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for OSSignpostID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v24 = static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    id v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v16 = sub_10036BBB8();
LABEL_10:
  swift_retain();
  checkForErrorAndConsumeState(state:)();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  unint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v20 = 0;
  os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  os_signpost_type_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v11, v8);
}

id sub_10052A418()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v32 - v9;
  id v11 = v0;
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_10052B2EC(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  if (!v13) {
    return 0;
  }
  sub_1005DA2EC(v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    switch(*((unsigned char *)v11 + qword_100810B20))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0
          || (sub_100187574(),
              double v16 = v15,
              id v17 = [self mainScreen],
              [v17 scale],
              double v19 = v18,
              v17,
              (id v20 = sub_10036A34C(v16 * v19)) == 0))
        {
LABEL_9:
          URL.path(percentEncoded:)(1);
          id v22 = objc_allocWithZone((Class)UIImage);
          NSString v23 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v21 = [v22 initWithContentsOfFile:v23 cache:1];

          if (!v21)
          {
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
            int v24 = Logger.logObject.getter();
            os_log_type_t v25 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v24, v25))
            {
              unint64_t v26 = (uint8_t *)swift_slowAlloc();
              uint64_t v33 = swift_slowAlloc();
              uint64_t v35 = v33;
              *(_DWORD *)unint64_t v26 = 136315138;
              v32[1] = v26 + 4;
              sub_10052BC74((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
              uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v34 = sub_10011EA98(v27, v28, &v35);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              Swift::String v29 = *(void (**)(char *, uint64_t))(v5 + 8);
              v29(v7, v4);
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "getImageStoredInFile can't create image from %s", v26, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_release();
              v29(v10, v4);
            }
            else
            {
              swift_release();
              id v30 = *(void (**)(char *, uint64_t))(v5 + 8);
              v30(v7, v4);

              v30(v10, v4);
            }
            return 0;
          }
        }
        else
        {
          id v21 = v20;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        swift_release();
        return v21;
    }
  }
  swift_release();
  sub_10001457C((uint64_t)v3, (uint64_t *)&unk_100800A60);
  return 0;
}

void sub_10052A990(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  type metadata accessor for JournalEntryAssetMO();
  if (!swift_dynamicCastClass())
  {

    char v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      double v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to retrieve assetMO based on NSManagedObjectID", v16, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  id v5 = sub_1001836EC(0);
  if (!v5 || (v6 = v5, id v7 = [v5 data], v6, !v7))
  {
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "data attachment [0] is nil", v13, 2u);
      swift_slowDealloc();
    }

LABEL_11:
    uint64_t v8 = 0;
    unint64_t v10 = 0xF000000000000000;
    goto LABEL_12;
  }
  uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;

LABEL_12:
  *a3 = v8;
  a3[1] = v10;
}

void ThumbnailCacheOperation.init()()
{
}

void sub_10052AB88()
{
}

uint64_t sub_10052ABB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + qword_100810B38;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_100810B40;
  uint64_t v4 = type metadata accessor for OSSignposter();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

id ThumbnailCacheOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThumbnailCacheOperation();
  return [super dealloc];
}

uint64_t sub_10052AD04(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = a1 + qword_100810B38;
  uint64_t v3 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_100810B40;
  uint64_t v5 = type metadata accessor for OSSignposter();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_10052AE1C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for ThumbnailCacheOperation()
{
  uint64_t result = qword_100810B70;
  if (!qword_100810B70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10052AEB4()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for OSSignposter();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_10052AFD0()
{
  return type metadata accessor for ThumbnailCacheOperation();
}

uint64_t sub_10052AFD8()
{
  return swift_deallocObject();
}

void sub_10052B020(uint64_t *a1@<X8>)
{
  sub_10052A990(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10052B040()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10052B078()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10052B0C0()
{
  return sub_100529FE0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10052B0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10052B0DC()
{
  return swift_release();
}

uint64_t sub_10052B0E4()
{
  return Data.write(to:options:)();
}

uint64_t sub_10052B2EC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v6 - 8);
  id v61 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v60 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v63 = &v50[-v12];
  uint64_t v64 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v64);
  id v71 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  Swift::String v73 = &v50[-v15];
  uint64_t v16 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v16 - 8);
  uint64_t v59 = &v50[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  Swift::String v68 = &v50[-v19];
  uint64_t v76 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v55 = &v50[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v67 = &v50[-v23];
  uint64_t v78 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v78);
  id v69 = (id *)&v50[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  uint64_t v27 = (id *)&v50[-v26];
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v28)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v58 = v8;
    uint64_t v54 = v3;
    unint64_t v77 = a1 & 0xC000000000000001;
    uint64_t v74 = *(void *)(a2 + qword_100810B28);
    int v75 = *(unsigned __int8 *)(a2 + qword_100810B28 + 8);
    id v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    uint64_t v65 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v66 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v53 = (void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32);
    unint64_t v52 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
    os_log_type_t v56 = (void (**)(unsigned char *, uint64_t))(v20 + 8);
    uint64_t v8 = 4;
    unint64_t v62 = a1;
    uint64_t v29 = (uint64_t)v71;
LABEL_7:
    uint64_t v20 = v28;
    a2 = v8 - 4;
    if (v77) {
      break;
    }
    uint64_t v9 = *(void *)(a1 + 8 * v8);
    swift_retain();
    uint64_t v3 = v8 - 3;
    if (!__OFADD__(a2, 1)) {
      goto LABEL_12;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    if (!v28) {
      goto LABEL_41;
    }
  }
  uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  uint64_t v3 = v8 - 3;
  if (__OFADD__(a2, 1)) {
    goto LABEL_39;
  }
LABEL_12:
  uint64_t v30 = v9 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
  sub_100168580(v9 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v27, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (v75) {
        goto LABEL_38;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      sub_1001684C0((uint64_t)v27);
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v32 = v30;
      uint64_t v33 = v69;
      sub_100168580(v32, (uint64_t)v69, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t)v33;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v36 = (uint64_t)v68;
          uint64_t v37 = v76;
          (*v65)((uint64_t)v68, 1, 1, v76);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v35 = (uint64_t)v33 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
          goto LABEL_22;
        default:
LABEL_22:
          os_log_type_t v38 = v73;
          sub_10016851C(v35, (uint64_t)v73);
          sub_100168580((uint64_t)v38, v29, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v39 = v29;
            uint64_t v36 = (uint64_t)v68;
            uint64_t v37 = v76;
            (*v66)(v68, v39, v76);
            uint64_t v40 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v41 = v59;
            sub_1005E6B0C((uint64_t)v59);
            swift_bridgeObjectRelease();
            uint64_t v37 = v76;
            if ((*v70)((uint64_t)v41, 1, v76) == 1)
            {
              sub_10001457C((uint64_t)v41, (uint64_t *)&unk_100800A60);
              uint64_t v40 = 1;
              a1 = v62;
              uint64_t v36 = (uint64_t)v68;
            }
            else
            {
              int v42 = *v66;
              uint64_t v43 = v55;
              (*v66)(v55, (uint64_t)v41, v76);
              uint64_t v44 = v68;
              v42(v68, (uint64_t)v43, v76);
              uint64_t v36 = (uint64_t)v44;
              uint64_t v37 = v76;
              uint64_t v40 = 0;
              a1 = v62;
            }
          }
          (*v65)(v36, v40, 1, v37);
          sub_1001684C0((uint64_t)v73);
          break;
      }
      uint64_t v72 = (uint64_t)v27 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
      if ((*v70)(v36, 1, v37) == 1)
      {
        sub_10001457C(v36, (uint64_t *)&unk_100800A60);
LABEL_35:
        sub_1001684C0(v72);
        swift_release();
        uint64_t v29 = (uint64_t)v71;
        goto LABEL_6;
      }
      (*v66)(v67, v36, v37);
      URL.pathExtension.getter();
      swift_bridgeObjectRetain();
      id v45 = v60;
      static UTType.data.getter();
      uint64_t v46 = (uint64_t)v61;
      UTType.init(filenameExtension:conformingTo:)();
      uint64_t v47 = v58;
      if ((*v57)(v46, 1, v58) == 1)
      {
        sub_10001457C(v46, &qword_1007F99B8);
        swift_bridgeObjectRelease();
        (*v56)(v67, v76);
        a1 = v62;
        goto LABEL_35;
      }
      (*v53)(v63, v46, v47);
      static UTType.image.getter();
      int v51 = UTType.conforms(to:)();
      uint64_t v48 = *v52;
      (*v52)(v45, v47);
      v48(v63, v47);
      swift_bridgeObjectRelease();
      (*v56)(v67, v76);
      a1 = v62;
      if ((v51 & 1) == 0) {
        goto LABEL_35;
      }
      uint64_t v29 = (uint64_t)v71;
      if ((v75 & 1) == 0)
      {
        uint64_t v31 = *(void *)(v9 + 16);
        sub_1001684C0(v72);
LABEL_17:
        if (v31 == v74) {
          goto LABEL_38;
        }
LABEL_5:
        swift_release();
LABEL_6:
        ++v8;
        if (v3 == v28) {
          goto LABEL_41;
        }
        goto LABEL_7;
      }
      sub_1001684C0(v72);
LABEL_38:
      swift_bridgeObjectRelease();
      return v9;
    default:
      sub_1001684C0((uint64_t)v27);
      if (v75) {
        goto LABEL_38;
      }
LABEL_16:
      uint64_t v31 = *(void *)(v9 + 16);
      goto LABEL_17;
  }
}

uint64_t sub_10052BC74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10052BCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_10080E750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PhotoManager()
{
  return self;
}

uint64_t sub_10052BD48()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotoManager.PhotoAsset()
{
  return self;
}

uint64_t sub_10052BDA4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_10052BDB4()
{
}

uint64_t sub_10052BDBC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotoManager.PHPhotoAsset()
{
  return self;
}

uint64_t sub_10052BE20(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = v3 + OBJC_IVAR____TtC7Journal13CoreDataStack_sessionID;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v10;
  *((void *)v12 + 3) = a1;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100534EB4;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2730;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  id v16 = a2;
  swift_retain();
  swift_release();
  [v16 performBlockAndWait:v14];
  _Block_release(v14);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10052C08C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithEntityName:v9];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1006D6270;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10001B2C0();
  *(void *)(v11 + 32) = 25705;
  *(void *)(v11 + 40) = 0xE200000000000000;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = a1;
  *(void *)(v11 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = NSPredicate.init(format:_:)();
  [v10 setPredicate:v13];

  uint64_t v23 = 0;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = v10;
  void v14[4] = &v23;
  v14[5] = v4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100534C00;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2438;
  id v16 = _Block_copy(aBlock);
  id v17 = a3;
  id v18 = v10;
  id v19 = v4;
  swift_retain();
  swift_release();
  [v17 performBlockAndWait:v16];

  _Block_release(v16);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v23;
    swift_release();
    return v21;
  }
  return result;
}

NSObject *sub_10052C318(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  uint64_t v112 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v114 = *(void *)(v7 - 8);
  uint64_t v115 = v7;
  __chkstk_darwin(v7);
  uint64_t v109 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v110 = (char *)&v109 - v10;
  uint64_t v11 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v11 - 8);
  uint64_t v111 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v109 - v14;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin(v20);
  id v116 = v2;
  id v117 = (char *)&v109 - v22;
  uint64_t v23 = *(void (**)(__n128))(v17 + 16);
  uint64_t v113 = (uint64_t)v2 + OBJC_IVAR____TtC7Journal13CoreDataStack_sessionID;
  v23(v21);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v120 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a2];
  id v121 = a1;
  id v24 = [a1 recordID];
  id v25 = [v24 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UUID.init(uuidString:)();
  uint64_t v26 = v16;
  swift_bridgeObjectRelease();
  uint64_t v119 = v17;
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  Class isa = 0;
  if (v27(v15, 1, v16) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v15, v16);
  }
  [v120 setId:isa];

  uint64_t v29 = CKRecord.subscript.getter();
  uint64_t v30 = v19;
  uint64_t v118 = v16;
  if (v29)
  {
    self;
    uint64_t v31 = (void *)swift_dynamicCastObjCClass();
    if (v31)
    {
      id v32 = [v31 recordID];
      id v33 = [v32 recordName];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v111;
      UUID.init(uuidString:)();
      uint64_t v35 = v118;
      swift_bridgeObjectRelease();
      if (v27(v34, 1, v35) == 1)
      {
        Class v36 = 0;
      }
      else
      {
        Class v36 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v119 + 8))(v34, v35);
      }
      uint64_t v46 = v120;
      id v47 = v121;
      uint64_t v48 = v116;
      [v120 setParentID:v36];
      swift_unknownObjectRelease();

      goto LABEL_16;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1007F7180 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_100026A54(v37, (uint64_t)qword_100810EE0);
  ((void (*)(char *, char *, uint64_t))v23)(v19, v117, v16);
  id v38 = v121;
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    int v42 = (void *)swift_slowAlloc();
    uint64_t v111 = (char *)swift_slowAlloc();
    uint64_t v122 = (uint64_t)v111;
    *(_DWORD *)uint64_t v41 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v123 = sub_10011EA98(v43, v44, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v30, v26);
    *(_WORD *)(v41 + 12) = 2112;
    uint64_t v123 = (uint64_t)v38;
    id v45 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v42 = v38;

    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s (createNewJournalEntryAssetFileAttachmentFromRecord) Unable to get parentReference for fileAttachment for a record: %@", (uint8_t *)v41, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v119 + 8))(v30, v26);
  }
  uint64_t v46 = v120;
  id v47 = v121;
  uint64_t v48 = v116;
LABEL_16:
  id v49 = [v47 encryptedValues];
  NSString v50 = String._bridgeToObjectiveC()();
  NSString v51 = [v49 objectForKeyedSubscript:v50];
  swift_unknownObjectRelease();

  if (v51)
  {
    uint64_t v123 = (uint64_t)v51;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v51 = 0;
    }
  }
  [v46 setName:v51];

  id v52 = [v47 encryptedValues];
  NSString v53 = String._bridgeToObjectiveC()();
  id v54 = [v52 objectForKeyedSubscript:v53];
  swift_unknownObjectRelease();

  if (v54)
  {
    uint64_t v122 = (uint64_t)v54;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v46 setIndex:(__int16)v123];
    }
  }
  id v55 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  [v47 encodeSystemFieldsWithCoder:v55];
  id v56 = [v55 encodedData];
  uint64_t v57 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v59 = v58;

  Class v60 = Data._bridgeToObjectiveC()().super.isa;
  sub_100040DD0(v57, v59);
  [v46 setRecordSystemFields:v60];

  if (!CKRecord.subscript.getter()) {
    goto LABEL_33;
  }
  self;
  id v61 = (void *)swift_dynamicCastObjCClass();
  if (!v61)
  {
    swift_unknownObjectRelease();
LABEL_33:
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v79 = type metadata accessor for Logger();
    sub_100026A54(v79, (uint64_t)qword_100810EE0);
    id v80 = v47;
    id v81 = v48;
    id v82 = v80;
    id v83 = v81;
    Swift::String v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v84, v85))
    {

LABEL_45:
      uint64_t v93 = v118;
      goto LABEL_46;
    }
    uint64_t v86 = swift_slowAlloc();
    id v121 = (id)swift_slowAlloc();
    uint64_t v122 = (uint64_t)v121;
    *(_DWORD *)uint64_t v86 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v123 = sub_10011EA98(v87, v88, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v86 + 12) = 2080;
    id v116 = (void *)(v86 + 14);
    id v89 = [v82 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v90 = static String._fromSubstring(_:)();
    unint64_t v92 = v91;
    swift_bridgeObjectRelease();
    uint64_t v123 = sub_10011EA98(v90, v92, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v93 = v118;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "%{public}s (createNewJournalEntryAssetFileAttachmentFromRecord) FileAttachment Error extraction record:%s", (uint8_t *)v86, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v46 = v120;
    swift_slowDealloc();

    goto LABEL_46;
  }
  id v62 = [v61 fileURL];
  if (!v62)
  {
    uint64_t v67 = (uint64_t)v112;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v112, 1, 1, v115);
    goto LABEL_39;
  }
  uint64_t v63 = v62;
  uint64_t v64 = v109;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v65 = v114;
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
  uint64_t v67 = (uint64_t)v112;
  Swift::String v68 = v64;
  uint64_t v69 = v115;
  v66(v112, v68, v115);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v69);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v67, 1, v69) == 1)
  {
LABEL_39:
    sub_10001457C(v67, (uint64_t *)&unk_100800A60);
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v94 = type metadata accessor for Logger();
    sub_100026A54(v94, (uint64_t)qword_100810EE0);
    id v95 = v48;
    id v96 = Logger.logObject.getter();
    os_log_type_t v97 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v96, v97))
    {

      goto LABEL_44;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    *(_DWORD *)uint64_t v98 = 136446210;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v99 = v118;
    uint64_t v100 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v123 = sub_10011EA98(v100, v101, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_type_t v102 = v97;
    uint64_t v93 = v99;
    _os_log_impl((void *)&_mh_execute_header, v96, v102, "%{public}s (createNewJournalEntryAssetFileAttachmentFromRecord) ckAsset.fileURL is nil, probably delayed", v98, 0xCu);
    swift_arrayDestroy();
    uint64_t v46 = v120;
    swift_slowDealloc();
    swift_slowDealloc();

    swift_unknownObjectRelease();
    goto LABEL_46;
  }
  id v70 = v110;
  v66(v110, (char *)v67, v69);
  char v71 = sub_100534084(v70, v47, v46);
  if (qword_1007F7180 != -1) {
    swift_once();
  }
  uint64_t v72 = type metadata accessor for Logger();
  sub_100026A54(v72, (uint64_t)qword_100810EE0);
  id v73 = v48;
  uint64_t v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    *(_DWORD *)uint64_t v76 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v123 = sub_10011EA98(v77, v78, &v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 1024;
    LODWORD(v123) = v71 & 1;
    uint64_t v46 = v120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "%{public}s (createNewJournalEntryAssetFileAttachmentFromRecord) assigned: %{BOOL}d", (uint8_t *)v76, 0x12u);
    swift_arrayDestroy();
    id v47 = v121;
    swift_slowDealloc();
    uint64_t v69 = v115;
    swift_slowDealloc();

    if ((v71 & 1) == 0)
    {
LABEL_31:
      (*(void (**)(char *, uint64_t))(v114 + 8))(v110, v69);
LABEL_44:
      swift_unknownObjectRelease();
      goto LABEL_45;
    }
  }
  else
  {

    if ((v71 & 1) == 0) {
      goto LABEL_31;
    }
  }
  uint64_t v93 = v118;
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v104 = [v47 recordID];
  id v105 = [v104 recordName];

  Swift::Int v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Int v108 = v107;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10054BEBC(&v123, v106, v108);
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v110, v115);
LABEL_46:
  [v46 setIsUploadedToCloud:1];
  [v46 setIsRemovedFromCloud:0];
  (*(void (**)(char *, uint64_t))(v119 + 8))(v117, v93);
  return v46;
}

uint64_t sub_10052D4D8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  uint64_t v7 = NSPredicate.init(format:_:)();
  [v6 setPredicate:v7];

  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  _OWORD v8[3] = v6;
  v8[4] = &v17;
  v8[5] = v2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100534C20;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B24B0;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = a1;
  id v12 = v6;
  id v13 = v2;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_10052D710(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v17 = _swiftEmptyArrayStorage;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  uint64_t v7 = NSPredicate.init(format:_:)();
  [v6 setPredicate:v7];

  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  _OWORD v8[3] = v6;
  v8[4] = &v17;
  v8[5] = v2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100534C40;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2528;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = a1;
  id v12 = v6;
  id v13 = v2;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v17;
    swift_release();
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_10052D94C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = _swiftEmptyArrayStorage;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  if (qword_1007F7030 != -1) {
    swift_once();
  }
  id v7 = (id)static NSPredicate.notUploadedToCloud;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (qword_1007F7090 != -1) {
    swift_once();
  }
  id v8 = (id)static NSPredicate.attachmentDoesNotNeedsProcessing;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self andPredicateWithSubpredicates:isa];

  [v6 setPredicate:v10];
  id v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v6;
  v11[4] = &v22;
  v11[5] = v2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100534C94;
  *(void *)(v12 + 24) = v11;
  v20[4] = sub_10001B3DC;
  v20[5] = v12;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_1003F44E4;
  v20[3] = &unk_1007B25A0;
  id v13 = _Block_copy(v20);
  id v14 = a1;
  id v15 = v6;
  id v16 = v2;
  swift_retain();
  swift_release();
  [v14 performBlockAndWait:v13];

  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v19 = v22;
    swift_release();
    return (uint64_t)v19;
  }
  return result;
}

uint64_t sub_10052DDCC(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = v5;
  v6[4] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1005335F0;
  *(void *)(v7 + 24) = v6;
  void v14[4] = sub_10001AC84;
  v14[5] = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1003F44E4;
  v14[3] = &unk_1007B22D0;
  id v8 = _Block_copy(v14);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10052DF8C(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v20 = _swiftEmptyArrayStorage;
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 initWithEntityName:v7];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D6280;
  *(void *)(v9 + 56) = sub_100010218(&qword_100800A70);
  *(void *)(v9 + 64) = sub_100296D6C(&qword_1007FFB90, &qword_100800A70);
  *(void *)(v9 + 32) = a2;
  swift_bridgeObjectRetain();
  id v10 = NSPredicate.init(format:_:)();
  [v8 setPredicate:v10];

  id v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v8;
  v11[4] = &v20;
  v11[5] = v3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100534D50;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2690;
  id v13 = _Block_copy(aBlock);
  id v14 = a1;
  id v15 = v8;
  id v16 = v3;
  swift_retain();
  swift_release();
  [v14 performBlockAndWait:v13];

  _Block_release(v13);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = v20;
    swift_release();
    return (uint64_t)v18;
  }
  return result;
}

uint64_t sub_10052E220(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = _swiftEmptyArrayStorage;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  id v7 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithKey:v8 ascending:0];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6D00;
  *(void *)(v10 + 32) = v9;
  v24[0] = v10;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_10080F990);
  id v11 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setSortDescriptors:isa, v24[0]];

  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [self andPredicateWithSubpredicates:v13];

  [v6 setPredicate:v14];
  id v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v6;
  void v15[4] = &v26;
  v15[5] = v2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100534BAC;
  *(void *)(v16 + 24) = v15;
  v24[4] = sub_10001B3DC;
  v24[5] = v16;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  void v24[2] = sub_1003F44E4;
  v24[3] = &unk_1007B23C0;
  uint64_t v17 = _Block_copy(v24);
  id v18 = a1;
  id v19 = v6;
  id v20 = v2;
  swift_retain();
  swift_release();
  [v18 performBlockAndWait:v17];

  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = v26;
    swift_release();
    return (uint64_t)v23;
  }
  return result;
}

id sub_10052E750(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v175 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v173 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v174 = (char *)&v170 - v10;
  uint64_t v11 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v11 - 8);
  Class v13 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v19 = __chkstk_darwin(v18).n128_u64[0];
  unint64_t v21 = (char *)&v170 - v20;
  [a1 recordSystemFields:v19];
  if (!v22)
  {
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_100026A54(v52, (uint64_t)qword_100810EE0);
    NSString v53 = v1;
    id v54 = a1;
    id v55 = v53;
    id v56 = v54;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      *(void *)&long long v178 = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136446466;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = sub_10011EA98(v60, v61, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2080;
      id v62 = [v56 debugDescription];
      uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v65 = v64;

      uint64_t v181 = sub_10011EA98(v63, v65, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) Failed to get file attachment system fields: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_31:

      return 0;
    }
LABEL_34:

    return 0;
  }
  uint64_t v23 = v22;
  uint64_t v170 = v7;
  uint64_t v177 = v14;
  uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  uint64_t v176 = v24;
  id v27 = sub_1002D1F50(v24, v26);
  if (!v27)
  {
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v66 = type metadata accessor for Logger();
    sub_100026A54(v66, (uint64_t)qword_100810EE0);
    uint64_t v67 = v2;
    id v68 = a1;
    id v55 = v67;
    id v56 = v68;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      *(void *)&long long v178 = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 136446466;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = sub_10011EA98(v71, v72, (uint64_t *)&v178);
      unint64_t v172 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2080;
      id v73 = [v56 debugDescription];
      uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v76 = v75;

      uint64_t v181 = sub_10011EA98(v74, v76, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v69, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) Failed to get record from systemfields for file attachment: %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_30;
    }
    goto LABEL_33;
  }
  id v171 = v27;
  id v28 = sub_10053129C(a1, *(void **)&v2[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate]);
  if (!v28)
  {
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v77 = type metadata accessor for Logger();
    sub_100026A54(v77, (uint64_t)qword_100810EE0);
    unint64_t v78 = v2;
    id v79 = a1;
    id v55 = v78;
    id v56 = v79;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      *(void *)&long long v178 = swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 136446466;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v82 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = sub_10011EA98(v82, v83, (uint64_t *)&v178);
      unint64_t v172 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 12) = 2080;
      id v84 = [v56 debugDescription];
      uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v87 = v86;

      uint64_t v181 = sub_10011EA98(v85, v87, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v80, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) Unable to fetch parent asset by id for fileAttachment: %s", (uint8_t *)v81, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_27:
      uint64_t v101 = v176;
      unint64_t v102 = v172;
LABEL_28:
      sub_100040DD0(v101, v102);

      goto LABEL_31;
    }

LABEL_33:
    sub_100040DD0(v176, v26);
    goto LABEL_34;
  }
  uint64_t v29 = v28;
  unint64_t v172 = v26;
  id v30 = [v28 id];
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v177);
    goto LABEL_23;
  }
  uint64_t v31 = v30;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v32 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  id v33 = v17;
  uint64_t v34 = v177;
  v32(v13, v33, v177);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v34) == 1)
  {
LABEL_23:
    sub_10001457C((uint64_t)v13, &qword_100800950);
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for Logger();
    sub_100026A54(v88, (uint64_t)qword_100810EE0);
    id v89 = v2;
    id v90 = a1;
    unint64_t v91 = v89;
    id v92 = v90;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v93))
    {
      uint64_t v94 = swift_slowAlloc();
      uint64_t v175 = swift_slowAlloc();
      *(void *)&long long v178 = v175;
      *(_DWORD *)uint64_t v94 = 136446466;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v95 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = sub_10011EA98(v95, v96, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2080;
      id v97 = [v92 debugDescription];
      uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v100 = v99;

      uint64_t v181 = sub_10011EA98(v98, v100, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v93, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) Unable to get parentRecordUUID for fileAttachment: %s", (uint8_t *)v94, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_27;
    }

LABEL_30:
    sub_100040DD0(v176, v172);
    goto LABEL_31;
  }
  v32(v21, v13, v177);
  uint64_t v35 = UUID.uuidString.getter();
  uint64_t v37 = v36;
  sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  uint64_t v38 = qword_1007F6D38;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  id v39 = [*(id *)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone) zoneID];
  v40._countAndFlagsBits = v35;
  v40._object = v37;
  Class isa = CKRecordID.init(recordName:zoneID:)(v40, (CKRecordZoneID)v39).super.isa;
  swift_bridgeObjectRelease();
  [objc_allocWithZone((Class)CKReference) initWithRecordID:isa action:1];

  id v42 = v171;
  CKRecord.subscript.setter();

  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v177);
  id v43 = [v42 encryptedValues];
  swift_getObjectType();
  unsigned __int16 v44 = (unsigned __int16)[a1 index];
  *((void *)&v179 + 1) = &type metadata for Int16;
  uint64_t v180 = &protocol witness table for Int16;
  LOWORD(v178) = v44;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v45 = [v42 encryptedValues];
  id v46 = [a1 name];
  unint64_t v47 = v172;
  if (v46)
  {
    uint64_t v48 = v46;
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = v50;

    *((void *)&v179 + 1) = &type metadata for String;
    uint64_t v180 = &protocol witness table for String;
    *(void *)&long long v178 = v49;
    *((void *)&v178 + 1) = v51;
  }
  else
  {
    uint64_t v180 = 0;
    long long v178 = 0u;
    long long v179 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v104 = [a1 filePath];
  if (!v104) {
    goto LABEL_40;
  }
  id v105 = v104;
  uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v108 = v107;

  type metadata accessor for Journaling();
  sub_1005E6B0C((uint64_t)v6);
  uint64_t v109 = v175;
  uint64_t v110 = v170;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48))(v6, 1, v170) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_100800A60);
    unint64_t v47 = v172;
LABEL_40:
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v111 = type metadata accessor for Logger();
    sub_100026A54(v111, (uint64_t)qword_100810EE0);
    uint64_t v112 = v2;
    id v113 = a1;
    uint64_t v114 = v112;
    id v115 = v113;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v116 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v57, v116))
    {

      sub_100040DD0(v176, v47);
      return 0;
    }
    uint64_t v117 = swift_slowAlloc();
    uint64_t v181 = swift_slowAlloc();
    *(_DWORD *)uint64_t v117 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v118 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v178 = sub_10011EA98(v118, v119, &v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v117 + 12) = 2080;
    id v120 = [v115 filePath];
    if (v120)
    {
      id v121 = v120;
      uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v124 = v123;
    }
    else
    {
      uint64_t v122 = 0;
      uint64_t v124 = 0;
    }
    *(void *)&long long v178 = v122;
    *((void *)&v178 + 1) = v124;
    sub_100010218(&qword_100803920);
    uint64_t v167 = String.init<A>(describing:)();
    *(void *)&long long v178 = sub_10011EA98(v167, v168, &v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, v116, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) Unable to get attachment url: %s", (uint8_t *)v117, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v101 = v176;
    unint64_t v102 = v47;
    goto LABEL_28;
  }
  uint64_t v125 = v174;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v174, v6, v110);
  id v126 = [self defaultManager];
  uint64_t v127 = v109;
  URL.path.getter();
  NSString v128 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v129 = [v126 fileExistsAtPath:v128];

  if ((v129 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v152 = type metadata accessor for Logger();
    sub_100026A54(v152, (uint64_t)qword_100810EE0);
    uint64_t v153 = v174;
    uint64_t v154 = v175;
    uint64_t v155 = v173;
    uint64_t v156 = v170;
    (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v173, v174, v170);
    uint64_t v157 = v2;
    uint64_t v158 = Logger.logObject.getter();
    os_log_type_t v159 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v158, v159))
    {
      uint64_t v160 = swift_slowAlloc();
      *(void *)&long long v178 = swift_slowAlloc();
      *(_DWORD *)uint64_t v160 = 136446466;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v161 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = sub_10011EA98(v161, v162, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v160 + 12) = 2080;
      sub_100534D04((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v163 = v170;
      uint64_t v164 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v181 = sub_10011EA98(v164, v165, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v166 = *(void (**)(char *, uint64_t))(v154 + 8);
      v166(v155, v163);
      _os_log_impl((void *)&_mh_execute_header, v158, v159, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) File attachment file does not exist: %s", (uint8_t *)v160, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100040DD0(v176, v172);

      v166(v174, v163);
    }
    else
    {
      sub_100040DD0(v176, v172);

      id v169 = *(void (**)(char *, uint64_t))(v154 + 8);
      v169(v155, v156);

      v169(v153, v156);
    }
    return 0;
  }
  id v130 = objc_allocWithZone((Class)CKAsset);
  URL._bridgeToObjectiveC()(v131);
  uint64_t v133 = v132;
  id v134 = [v130 initWithFileURL:v132];

  id v135 = v134;
  id v136 = v171;
  CKRecord.subscript.setter();
  id v137 = [v136 encryptedValues];
  swift_getObjectType();
  *((void *)&v179 + 1) = &type metadata for String;
  uint64_t v180 = &protocol witness table for String;
  *(void *)&long long v178 = v106;
  *((void *)&v178 + 1) = v108;
  CKRecordKeyValueSetting.subscript.setter();

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v125, v110);
  if (qword_1007F7180 != -1) {
    swift_once();
  }
  uint64_t v138 = type metadata accessor for Logger();
  sub_100026A54(v138, (uint64_t)qword_100810EE0);
  uint64_t v139 = v2;
  id v140 = v136;
  uint64_t v141 = v139;
  id v142 = v140;
  unint64_t v143 = Logger.logObject.getter();
  os_log_type_t v144 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v143, v144))
  {
    uint64_t v145 = swift_slowAlloc();
    uint64_t v175 = swift_slowAlloc();
    *(void *)&long long v178 = v175;
    *(_DWORD *)uint64_t v145 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v146 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v181 = sub_10011EA98(v146, v147, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v145 + 12) = 2080;
    uint64_t v177 = v145 + 14;
    id v148 = [v142 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v149 = static String._fromSubstring(_:)();
    unint64_t v151 = v150;
    swift_bridgeObjectRelease();
    uint64_t v181 = sub_10011EA98(v149, v151, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v143, v144, "%{public}s (getRecordFromJournalEntryAssetFileAttachment) CKRecord Recreated from fileAttachment:\n%s", (uint8_t *)v145, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100040DD0(v176, v172);
  }
  else
  {
    sub_100040DD0(v176, v172);
  }
  return v171;
}

uint64_t sub_10052FFC0(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = v5;
  v6[4] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100534B8C;
  *(void *)(v7 + 24) = v6;
  void v14[4] = sub_10001B3DC;
  v14[5] = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1003F44E4;
  v14[3] = &unk_1007B2348;
  uint64_t v8 = _Block_copy(v14);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100530180(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithEntityName:v5];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  uint64_t v7 = NSPredicate.init(format:_:)();
  [v6 setPredicate:v7];

  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  _OWORD v8[3] = v6;
  v8[4] = v2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100534CE8;
  *(void *)(v9 + 24) = v8;
  void v15[4] = sub_10001B3DC;
  v15[5] = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_1003F44E4;
  v15[3] = &unk_1007B2618;
  id v10 = _Block_copy(v15);
  id v11 = a1;
  id v12 = v6;
  id v13 = v2;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005303A4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100810EE0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100810EE0);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10053046C(uint64_t a1, uint64_t a2, void **a3)
{
  sub_1002A4450(0xD000000000000024, 0x80000001006A0910);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t v4 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  id v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *a3;
  *a3 = v7;
}

void sub_100530858(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  id v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v73 - v14;
  sub_1002A4450(0xD000000000000029, 0x80000001006A0A60);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    id v18 = [a2 recordID];
    id v78 = v17;
    id v19 = v18;
    id v20 = [v18 recordName];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    uint64_t v24 = v21;
    id v25 = v78;
    id v26 = (id)sub_10052C08C(v24, v23, a3);
    swift_bridgeObjectRelease();
    if (!v26)
    {
      if (qword_1007F7180 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      sub_100026A54(v36, (uint64_t)qword_100810EE0);
      uint64_t v37 = v10;
      uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      uint64_t v39 = v77;
      v38(v15, a4, v77);
      id v26 = a2;
      Swift::String v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v76 = swift_slowAlloc();
        uint64_t v79 = v76;
        *(_DWORD *)uint64_t v42 = 136446466;
        sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v80 = sub_10011EA98(v43, v44, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v39);
        *(_WORD *)(v42 + 12) = 2080;
        id v45 = [v26 recordID];
        id v46 = [v45 recordName];

        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v49 = v48;

        uint64_t v80 = sub_10011EA98(v47, v49, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "%{public}s (updateJournalEntryAssetFileAttachmentData) unable to get file attachment with id: %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v39);

      goto LABEL_28;
    }
    id v27 = a2;
    uint64_t v28 = v10;
    if (CKRecord.subscript.getter())
    {
      self;
      uint64_t v29 = (void *)swift_dynamicCastObjCClass();
      if (v29)
      {
        id v30 = [v29 recordID];
        id v31 = [v30 recordName];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        UUID.init(uuidString:)();
        uint64_t v32 = v10;
        swift_bridgeObjectRelease();
        id v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
        uint64_t v34 = v77;
        if (v33(v9, 1, v77) == 1)
        {
          Class isa = 0;
        }
        else
        {
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v34);
        }
        [v26 setParentID:isa];
        swift_unknownObjectRelease();
        goto LABEL_20;
      }
      swift_unknownObjectRelease();
    }
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_100026A54(v50, (uint64_t)qword_100810EE0);
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v52 = v77;
    v51(v12, a4, v77);
    id v53 = v27;
    id v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v54, v55))
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v52);

      goto LABEL_21;
    }
    uint64_t v56 = swift_slowAlloc();
    unint64_t v75 = (void *)swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v79 = v76;
    *(_DWORD *)uint64_t v56 = 136446466;
    uint64_t v73 = v56 + 4;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v74 = v54;
    uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v80 = sub_10011EA98(v57, v58, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v52);
    *(_WORD *)(v56 + 12) = 2112;
    uint64_t v80 = (uint64_t)v53;
    id v59 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v75 = v53;

    Class isa = (Class)v74;
    _os_log_impl((void *)&_mh_execute_header, v74, v55, "%{public}s (updateJournalEntryAssetFileAttachmentData) Unable to update parentReference for fileAttachment for a record: %@", (uint8_t *)v56, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_20:

LABEL_21:
    id v60 = [v27 encryptedValues];
    NSString v61 = String._bridgeToObjectiveC()();
    id v62 = [v60 objectForKeyedSubscript:v61];
    swift_unknownObjectRelease();

    if (v62)
    {
      uint64_t v80 = (uint64_t)v62;
      sub_100010218((uint64_t *)&unk_1008060F0);
      if (swift_dynamicCast())
      {
        NSString v63 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v26 setName:v63];
      }
    }
    id v64 = [v27 encryptedValues];
    NSString v65 = String._bridgeToObjectiveC()();
    id v66 = [v64 objectForKeyedSubscript:v65];
    swift_unknownObjectRelease();

    if (v66)
    {
      uint64_t v79 = (uint64_t)v66;
      sub_100010218((uint64_t *)&unk_1008060F0);
      if (swift_dynamicCast()) {
        [v26 setIndex:(__int16)v80];
      }
    }
    id v67 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [v27 encodeSystemFieldsWithCoder:v67];
    id v68 = [v67 encodedData];
    uint64_t v69 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v71 = v70;

    Class v72 = Data._bridgeToObjectiveC()().super.isa;
    [v26 setRecordSystemFields:v72];

    [v26 setIsUploadedToCloud:1];
    sub_100040DD0(v69, v71);

LABEL_28:
  }
}

id sub_10053129C(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  uint64_t v16 = (char *)&v39 - v15;
  id v17 = [a1 asset:v14];
  if (v17) {
    return v17;
  }
  id v19 = [a1 parentID];
  if (v19)
  {
    id v20 = v19;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v21(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v21(v16, v8, v9);
      uint64_t v22 = UUID.uuidString.getter();
      uint64_t v18 = sub_1004ECAB0(v22, v23, a2);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
      return (id)v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_10001457C((uint64_t)v8, &qword_100800950);
  if (qword_1007F7180 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100026A54(v24, (uint64_t)qword_100810EE0);
  id v25 = v3;
  id v26 = a1;
  id v27 = v25;
  id v28 = v26;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_10011EA98(v32, v33, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    id v34 = [v28 debugDescription];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    uint64_t v39 = sub_10011EA98(v35, v37, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%{public}s (fetchParentAsset) fileAttachment.parentID is nil: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_10053174C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1002A4450(a5, a6);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t v7 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v8 = v7;
  if (!(v7 >> 62))
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9) {
LABEL_3:
  }
    *a3 = v8;
LABEL_5:

  return swift_bridgeObjectRelease();
}

void sub_100531AEC(void (**a1)(char *, uint64_t, uint64_t, uint64_t), uint64_t a2, void (**a3)(char *, uint64_t))
{
  uint64_t v123 = a3;
  uint64_t v134 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v6 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v128);
  uint64_t v133 = (uint64_t)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800950);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v14 = (char *)&v111 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)&v111 - v16;
  __chkstk_darwin(v18);
  id v20 = (char *)&v111 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v111 - v22;
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t v24 = NSManagedObjectContext.fetch<A>(_:)();
  id v25 = &qword_1007F7000;
  id v126 = 0;
  uint64_t v129 = v9;
  id v130 = v20;
  unint64_t v127 = (unint64_t)v23;
  uint64_t v131 = a1;
  uint64_t v122 = v4;
  uint64_t v124 = v11;
  unint64_t v120 = v24;
  if (!(v24 >> 62))
  {
    uint64_t v36 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v37 = (uint64_t)v130;
    unint64_t v38 = (unint64_t)v131;
    if (v36)
    {
      uint64_t v39 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
LABEL_78:
    swift_bridgeObjectRelease();
    return;
  }
  while (2)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v130;
    unint64_t v38 = (unint64_t)v131;
    if (!v36) {
      goto LABEL_78;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id v25 = &qword_1007F7000;
LABEL_9:
    uint64_t v139 = v39;
    if (v25[48] != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    uint64_t v41 = sub_100026A54(v40, (uint64_t)qword_100810EE0);
    uint64_t v42 = v123;
    uint64_t v113 = v41;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    int v45 = v44;
    BOOL v46 = os_log_type_enabled(v43, v44);
    uint64_t v116 = v36;
    id v121 = v6;
    NSString v132 = v14;
    if (v46)
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v138 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446466;
      unint64_t v119 = (void (**)(char *, uint64_t, uint64_t))(v47 + 4);
      LODWORD(v125) = v45;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      v137[0] = sub_10011EA98(v48, v49, (uint64_t *)&v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2048;
      swift_beginAccess();
      v137[0] = v139;
      uint64_t v36 = v116;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v125, "%{public}s Found %ld Orphan FileAttachments", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v50 = _swiftEmptyArrayStorage;
    uint64_t v112 = v42;
    if (v39)
    {
      uint64_t v138 = _swiftEmptyArrayStorage;
      sub_100095FF4(0, v39 & ~(v39 >> 63), 0);
      if (v39 < 0)
      {
        __break(1u);
        goto LABEL_82;
      }
      uint64_t v51 = 0;
      uint64_t v50 = v138;
      unint64_t v52 = v120 & 0xC000000000000001;
      id v53 = (void (**)(id, uint64_t, uint64_t, uint64_t))(v122 + 56);
      do
      {
        if (v52) {
          id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v54 = *(id *)(v120 + 8 * v51 + 32);
        }
        os_log_type_t v55 = v54;
        uint64_t v56 = v127;
        id v57 = [v54 parentID:v111, v112];
        if (v57)
        {
          unint64_t v58 = v57;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v59 = 0;
        }
        else
        {
          uint64_t v59 = 1;
        }
        (*v53)((id)v37, v59, 1, v134);
        sub_10018750C(v37, v56);

        uint64_t v138 = v50;
        uint64_t v60 = v56;
        unint64_t v62 = v50[2];
        unint64_t v61 = v50[3];
        if (v62 >= v61 >> 1)
        {
          sub_100095FF4(v61 > 1, v62 + 1, 1);
          uint64_t v50 = v138;
        }
        ++v51;
        v50[2] = v62 + 1;
        sub_10018750C(v60, (uint64_t)v50+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v62);
        uint64_t v37 = (uint64_t)v130;
      }
      while (v39 != v51);
      uint64_t v36 = v116;
    }
    id v63 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v64 = String._bridgeToObjectiveC()();
    id v65 = [v63 initWithEntityName:v64];

    sub_10001B284(0, (unint64_t *)&qword_100800A30);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1006D6280;
    *(void *)(v66 + 56) = sub_100010218((uint64_t *)&unk_10080F9B0);
    *(void *)(v66 + 64) = sub_100296D6C((unint64_t *)&qword_100810F00, (uint64_t *)&unk_10080F9B0);
    *(void *)(v66 + 32) = v50;
    id v67 = NSPredicate.init(format:_:)();
    [v65 setPredicate:v67];

    type metadata accessor for JournalEntryAssetMO();
    id v68 = v126;
    unint64_t v69 = NSManagedObjectContext.fetch<A>(_:)();
    id v126 = v68;
    if (v68)
    {
      swift_bridgeObjectRelease();

      if (qword_1007F7180 == -1) {
        goto LABEL_3;
      }
      goto LABEL_74;
    }
    unint64_t v38 = v69;
    id v111 = v65;
    unint64_t v70 = v120;
    if (!(v69 >> 62))
    {
      uint64_t v129 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_31;
    }
LABEL_82:
    swift_bridgeObjectRetain();
    unint64_t v70 = v120;
    uint64_t v129 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_31:
    uint64_t v6 = v124;
    uint64_t v71 = v122;
    unint64_t v117 = v70 & 0xC000000000000001;
    swift_beginAccess();
    unint64_t v72 = 0;
    uint64_t v115 = v70 & 0xFFFFFFFFFFFFFF8;
    unint64_t v114 = v70 + 32;
    unint64_t v127 = v38 & 0xC000000000000001;
    uint64_t v131 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
    id v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
    unint64_t v119 = (void (**)(char *, uint64_t, uint64_t))(v71 + 32);
    uint64_t v123 = (void (**)(char *, uint64_t))(v71 + 8);
    unint64_t v125 = v38;
    while (1)
    {
LABEL_33:
      if (v117)
      {
        id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v72 >= *(void *)(v115 + 16)) {
          goto LABEL_73;
        }
        id v73 = *(id *)(v114 + 8 * v72);
      }
      id v130 = v73;
      if (__OFADD__(v72++, 1))
      {
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        swift_once();
LABEL_3:
        uint64_t v26 = type metadata accessor for Logger();
        sub_100026A54(v26, (uint64_t)qword_100810EE0);
        id v27 = v123;
        swift_errorRetain();
        id v28 = v27;
        swift_errorRetain();
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = swift_slowAlloc();
          uint64_t v32 = (void *)swift_slowAlloc();
          uint64_t v138 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = 136446466;
          sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
          v137[0] = sub_10011EA98(v33, v34, (uint64_t *)&v138);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v31 + 12) = 2112;
          swift_errorRetain();
          uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
          v137[0] = v35;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v32 = v35;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "%{public}s (adoptOrphanAttachments) Unabled to fix Orphan attachments: %@", (uint8_t *)v31, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();

          swift_errorRelease();
          swift_errorRelease();
        }
        return;
      }
      if (v129) {
        break;
      }

      if (v72 == v36) {
        goto LABEL_63;
      }
    }
    unint64_t v118 = v72;
    swift_bridgeObjectRetain();
    uint64_t v75 = 4;
    while (1)
    {
      if (v127) {
        id v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v77 = *(id *)(v38 + 8 * v75);
      }
      id v78 = v77;
      double v14 = (char *)(v75 - 3);
      if (__OFADD__(v75 - 4, 1))
      {
        __break(1u);
        goto LABEL_72;
      }
      id v79 = [v77 id];
      if (v79)
      {
        uint64_t v80 = v79;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v81 = *v131;
        (*v131)(v17, 0, 1, v134);
      }
      else
      {
        uint64_t v81 = *v131;
        (*v131)(v17, 1, 1, v134);
      }
      uint64_t v82 = (uint64_t)v17;
      id v83 = [v130 parentID];
      if (v83)
      {
        id v84 = v83;
        uint64_t v85 = (uint64_t)v132;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v86 = 0;
      }
      else
      {
        uint64_t v86 = 1;
        uint64_t v85 = (uint64_t)v132;
      }
      uint64_t v87 = v134;
      v81((char *)v85, v86, 1, v134);
      uint64_t v88 = v133;
      uint64_t v89 = v133 + *(int *)(v128 + 48);
      sub_10023D7D4(v82, v133);
      sub_10023D7D4(v85, v89);
      id v90 = *v126;
      if ((*v126)(v88, 1, v87) == 1) {
        break;
      }
      sub_10023D7D4(v133, (uint64_t)v6);
      if (v90(v89, 1, v134) == 1)
      {
        (*v123)(v6, v134);
        unint64_t v38 = v125;
        goto LABEL_41;
      }
      uint64_t v91 = v134;
      id v92 = v121;
      (*v119)(v121, v89, v134);
      sub_100534D04((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
      LODWORD(v122) = dispatch thunk of static Equatable.== infix(_:_:)();
      os_log_type_t v93 = *v123;
      (*v123)(v124, v91);
      uint64_t v94 = v133;
      uint64_t v6 = v124;
      v93(v92, v91);
      sub_10001457C(v94, &qword_100800950);
      sub_10001457C((uint64_t)v132, &qword_100800950);
      id v17 = (char *)v82;
      sub_10001457C(v82, &qword_100800950);
      unint64_t v38 = v125;
      if (v122) {
        goto LABEL_60;
      }
LABEL_42:

      ++v75;
      if (v14 == (char *)v129)
      {

        swift_bridgeObjectRelease();
        uint64_t v36 = v116;
        goto LABEL_62;
      }
    }
    unsigned int v76 = v90(v89, 1, v134);
    unint64_t v38 = v125;
    if (v76 != 1)
    {
LABEL_41:
      sub_10001457C(v133, (uint64_t *)&unk_1007FEB40);
      sub_10001457C((uint64_t)v132, &qword_100800950);
      id v17 = (char *)v82;
      sub_10001457C(v82, &qword_100800950);
      goto LABEL_42;
    }
    sub_10001457C(v133, &qword_100800950);
    sub_10001457C((uint64_t)v132, &qword_100800950);
    id v17 = (char *)v82;
    sub_10001457C(v82, &qword_100800950);
LABEL_60:
    swift_bridgeObjectRelease();
    id v95 = v130;
    [v78 addFileAttachmentsObject:v130];

    uint64_t v36 = v116;
    if (__OFSUB__(v139, 1))
    {
      __break(1u);
      continue;
    }
    break;
  }
  --v139;
LABEL_62:
  unint64_t v72 = v118;
  if (v118 != v36) {
    goto LABEL_33;
  }
LABEL_63:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v96 = v139;
  id v97 = v112;
  uint64_t v98 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v98, v99))
  {
    uint64_t v100 = swift_slowAlloc();
    v137[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v100 = 136446466;
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v101 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v136 = sub_10011EA98(v101, v102, v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v100 + 12) = 2048;
    uint64_t v136 = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "%{public}s (adoptOrphanAttachments) Processed %ld orphan fileAttachments", (uint8_t *)v100, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v103 = v111;
  swift_beginAccess();
  uint64_t v104 = v139;
  if (v139 < 1)
  {
LABEL_69:
  }
  else
  {
    id v105 = v97;
    uint64_t v106 = Logger.logObject.getter();
    os_log_type_t v107 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      *(_DWORD *)uint64_t v108 = 136446466;
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v109 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v135 = sub_10011EA98(v109, v110, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2048;
      uint64_t v135 = v104;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "%{public}s (adoptOrphanAttachments) %ld orphan fileAttachments not processed", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_69;
    }
  }
}

unint64_t sub_100532DBC(void *a1)
{
  sub_1002A4450(0xD000000000000028, 0x80000001006A0850);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    [a1 deleteObject:v6];
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

unint64_t sub_1005331B8(void *a1)
{
  sub_1002A4450(0xD000000000000033, 0x80000001006A0810);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    if ([v6 isRemovedFromCloud])
    {
      [a1 deleteObject:v7];
    }
    else
    {
      [v7 setIsUploadedToCloud:0];
      [v7 setRecordSystemFields:0];
    }
  }
LABEL_13:

  return swift_bridgeObjectRelease();
}

unint64_t sub_1005335F0()
{
  return sub_1005331B8(*(void **)(v0 + 16));
}

uint64_t sub_1005335FC()
{
  return swift_deallocObject();
}

uint64_t sub_10053360C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10053361C()
{
  return swift_release();
}

void sub_100533624(void *a1@<X2>, uint64_t *a2@<X8>)
{
  sub_1002A4450(0xD000000000000025, 0x80000001006A0A00);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  uint64_t v5 = NSManagedObjectContext.count<A>(for:)();
  if (v2)
  {
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100026A54(v6, (uint64_t)qword_100810EE0);
    id v7 = a1;
    swift_errorRetain();
    id v8 = v7;
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446466;
      type metadata accessor for UUID();
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v13, v14, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2112;
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v24;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s (getFileAttachmentsCount) Unabled to count file attachments: %@", (uint8_t *)v11, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = v5;
    if (qword_1007F7180 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100026A54(v16, (uint64_t)qword_100810EE0);
    id v17 = a1;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v23 = a2;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446466;
      type metadata accessor for UUID();
      sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v21, v22, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s (getFileAttachmentsCount) File Attachments Count %ld", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v23;
      swift_slowDealloc();
    }
    else
    {
    }
  }
  *a2 = v15;
}

void sub_100533B28(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4)
{
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t v6 = NSManagedObjectContext.fetch<A>(_:)();
  *a3 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_1007F7180 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_100810EE0);
  id v8 = a4;
  swift_bridgeObjectRetain();
  id v9 = v8;
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    type metadata accessor for UUID();
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v13, v14, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2048;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s %ld Orphan attachments Found", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100534084(void *a1, void *a2, NSObject *a3)
{
  uint64_t v4 = v3;
  id v92 = a3;
  os_log_type_t v93 = a1;
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v6 - 8);
  id v8 = &v87[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v87[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  uint64_t v16 = &v87[-v15];
  id v17 = [a2 encryptedValues:v14];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 objectForKeyedSubscript:v18];
  swift_unknownObjectRelease();

  if (!v19) {
    goto LABEL_5;
  }
  uint64_t v94 = (uint64_t)v19;
  sub_100010218((uint64_t *)&unk_1008060F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v20 = v95;
  type metadata accessor for Journaling();
  uint64_t v91 = v20;
  sub_1005E6B0C((uint64_t)v8);
  uint64_t v21 = v10;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v8, v9);
    uint64_t v36 = self;
    id v37 = [v36 defaultManager];
    URL.deletingLastPathComponent()();
    URL._bridgeToObjectiveC()(v38);
    uint64_t v40 = v39;
    uint64_t v89 = *(void (**)(unsigned char *, uint64_t))(v21 + 8);
    uint64_t v90 = v21 + 8;
    v89(v12, v9);
    sub_100010218(&qword_10080F9C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSFileProtectionKey;
    uint64_t v42 = qword_1007F6EF8;
    uint64_t v43 = NSFileProtectionKey;
    if (v42 != -1) {
      swift_once();
    }
    os_log_type_t v44 = (void *)qword_10083D470;
    type metadata accessor for URLFileProtection(0);
    *(void *)(inited + 64) = v45;
    *(void *)(inited + 40) = v44;
    id v46 = v44;
    sub_10039687C(inited);
    type metadata accessor for FileAttributeKey(0);
    sub_100534D04(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v95 = 0;
    LODWORD(v44) = [v37 createDirectoryAtURL:v40 withIntermediateDirectories:1 attributes:isa error:&v95];

    uint64_t v48 = v95;
    if (!v44)
    {
      unint64_t v70 = v48;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

LABEL_20:
      swift_willThrow();
      if (qword_1007F7180 != -1) {
        swift_once();
      }
      uint64_t v72 = type metadata accessor for Logger();
      sub_100026A54(v72, (uint64_t)qword_100810EE0);
      id v73 = v4;
      id v74 = a2;
      swift_errorRetain();
      id v75 = v73;
      id v76 = v74;
      swift_errorRetain();
      id v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.fault.getter();
      int v79 = v78;
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v80 = swift_slowAlloc();
        uint64_t v91 = (void *)swift_slowAlloc();
        os_log_type_t v93 = (void *)swift_slowAlloc();
        id v95 = v93;
        *(_DWORD *)uint64_t v80 = 136446722;
        id v92 = v77;
        type metadata accessor for UUID();
        sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v94 = sub_10011EA98(v81, v82, (uint64_t *)&v95);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        int v88 = v79;
        *(_WORD *)(v80 + 12) = 2112;
        uint64_t v94 = (uint64_t)v76;
        id v83 = v76;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v84 = v91;
        *uint64_t v91 = v76;

        *(_WORD *)(v80 + 22) = 2112;
        swift_errorRetain();
        uint64_t v85 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v94 = v85;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v84[1] = v85;
        swift_errorRelease();
        swift_errorRelease();
        uint64_t v86 = v92;
        _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v88, "%{public}s (setAssetFileURLToFileAttachment) FileAttachment Error process ckasset:%@ error:%@", (uint8_t *)v80, 0x20u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      v89(v16, v9);
      return 0;
    }
    id v49 = [v36 defaultManager];
    URL.path.getter();
    NSString v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v51 = [v49 fileExistsAtPath:v50];

    if (v51)
    {
      id v52 = [v36 defaultManager];
      URL._bridgeToObjectiveC()(v53);
      os_log_type_t v55 = v54;
      id v95 = 0;
      unsigned int v56 = [v52 removeItemAtURL:v54 error:&v95];

      id v57 = v95;
      if (!v56)
      {
LABEL_19:
        id v71 = v57;
        swift_bridgeObjectRelease();
        _convertNSErrorToError(_:)();

        goto LABEL_20;
      }
      unint64_t v58 = v95;
    }
    id v59 = [v36 defaultManager];
    URL._bridgeToObjectiveC()(v60);
    unint64_t v62 = v61;
    URL._bridgeToObjectiveC()(v63);
    id v65 = v64;
    id v95 = 0;
    unsigned int v66 = [v59 copyItemAtURL:v62 toURL:v64 error:&v95];

    id v57 = v95;
    if (v66)
    {
      id v67 = v95;
      sub_10036AF38();
      NSString v68 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v92 setFilePath:v68];

      v89(v16, v9);
      return 1;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100800A60);
LABEL_5:
  if (qword_1007F7180 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100026A54(v22, (uint64_t)qword_100810EE0);
  id v23 = v4;
  id v24 = a2;
  id v25 = v23;
  id v26 = v24;
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    id v95 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    type metadata accessor for UUID();
    sub_100534D04((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v94 = sub_10011EA98(v30, v31, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    id v32 = [v26 debugDescription];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    uint64_t v94 = sub_10011EA98(v33, v35, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s (setAssetFileURLToFileAttachment) FileAttachment Error extraction record:%s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

unint64_t sub_100534B8C()
{
  return sub_100532DBC(*(void **)(v0 + 16));
}

uint64_t sub_100534B98()
{
  return swift_deallocObject();
}

uint64_t sub_100534BAC()
{
  return sub_10053174C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD00000000000002ALL, 0x80000001006A08E0);
}

uint64_t sub_100534BEC()
{
  return swift_deallocObject();
}

void sub_100534C00()
{
  sub_10053046C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_100534C0C()
{
  return swift_deallocObject();
}

void sub_100534C20()
{
  sub_100533B28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100534C2C()
{
  return swift_deallocObject();
}

uint64_t sub_100534C40()
{
  return sub_10053174C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD00000000000001BLL, 0x80000001006A0960);
}

uint64_t sub_100534C80()
{
  return swift_deallocObject();
}

uint64_t sub_100534C94()
{
  return sub_10053174C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD000000000000031, 0x80000001006A09C0);
}

uint64_t sub_100534CD4()
{
  return swift_deallocObject();
}

void sub_100534CE8()
{
  sub_100531AEC(*(void (***)(char *, uint64_t, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void (***)(char *, uint64_t))(v0 + 32));
}

uint64_t sub_100534CF4()
{
  return swift_deallocObject();
}

uint64_t sub_100534D04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100534D50()
{
  return sub_10053174C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD00000000000002ALL, 0x80000001006A0A30);
}

uint64_t sub_100534D90()
{
  return swift_deallocObject();
}

uint64_t sub_100534DA0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100534DD8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100534EB4()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = v0[2];
  unint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100530858(v2, v3, v4, v5);
}

uint64_t sub_100534F1C()
{
  return swift_deallocObject();
}

id sub_100534F74(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_systemRedColor, &qword_10083D750);
}

uint64_t sub_100534F88()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.988235294 green:0.960784314 blue:0.960784314 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.258823529 green:0.243137255 blue:0.349019608 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  v9[4] = sub_10026415C;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  _OWORD v9[3] = &unk_1007B2780;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_10083D758 = (uint64_t)v7;
  return result;
}

id sub_1005350F4(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_10083D760);
}

uint64_t sub_100535108()
{
  id v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v0 systemIndigoColor];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = objc_allocWithZone((Class)UIColor);
  v10[4] = sub_1002642B8;
  v10[5] = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _OWORD v10[2] = sub_1002640B4;
  _OWORD v10[3] = &unk_1007B2820;
  id v5 = _Block_copy(v10);
  id v6 = v2;
  id v7 = v1;
  id v8 = [v4 initWithDynamicProvider:v5];
  _Block_release(v5);

  uint64_t result = swift_release();
  qword_10083D768 = (uint64_t)v8;
  return result;
}

uint64_t sub_100535250()
{
  id v0 = self;
  id v1 = [v0 systemIndigoColor];
  id v2 = [v0 whiteColor];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = objc_allocWithZone((Class)UIColor);
  v10[4] = sub_1002642B8;
  v10[5] = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _OWORD v10[2] = sub_1002640B4;
  _OWORD v10[3] = &unk_1007B27D0;
  id v5 = _Block_copy(v10);
  id v6 = v2;
  id v7 = v1;
  id v8 = [v4 initWithDynamicProvider:v5];
  _Block_release(v5);

  uint64_t result = swift_release();
  qword_10083D770 = (uint64_t)v8;
  return result;
}

id sub_100535398()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.866666667 green:0.352941176 blue:0.345098039 alpha:1.0];
  qword_10083D778 = (uint64_t)result;
  return result;
}

id sub_1005353E8()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.980392157 green:0.0666666667 blue:0.309803922 alpha:1.0];
  qword_10083D780 = (uint64_t)result;
  return result;
}

id sub_10053543C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.921568627 green:0.305882353 blue:0.243137255 alpha:1.0];
  qword_10083D788 = (uint64_t)result;
  return result;
}

id sub_100535490()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.349019608 green:0.666666667 blue:0.878431373 alpha:1.0];
  qword_10083D790 = (uint64_t)result;
  return result;
}

id sub_1005354E8()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.976470588 green:0.847058824 blue:0.290196078 alpha:1.0];
  qword_10083D798 = (uint64_t)result;
  return result;
}

id sub_10053553C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0823529412 green:0.203921569 blue:0.31372549 alpha:1.0];
  qword_10083D7A0 = (uint64_t)result;
  return result;
}

id sub_10053558C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0862745098 green:0.133333333 blue:0.152941176 alpha:1.0];
  qword_10083D7A8 = (uint64_t)result;
  return result;
}

id sub_1005355E0(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_10083D7B0);
}

id sub_1005355F4(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_systemIndigoColor, &qword_10083D7B8);
}

id sub_100535608(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_10083D7C0);
}

id sub_10053561C(uint64_t a1)
{
  return sub_10004C868(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10083D7C8);
}

void sub_100535630(uint64_t a1)
{
}

void sub_10053564C(uint64_t a1)
{
}

void sub_100535668(uint64_t a1)
{
}

void sub_100535684(uint64_t a1)
{
}

void sub_1005356A0(uint64_t a1)
{
}

void sub_1005356BC(uint64_t a1)
{
}

void sub_1005356E8(uint64_t a1)
{
}

void sub_100535704(uint64_t a1)
{
}

void sub_100535720(uint64_t a1)
{
}

void sub_10053573C(uint64_t a1)
{
}

void sub_100535758(uint64_t a1)
{
}

id sub_100535774(uint64_t a1)
{
  return sub_1005357D8(a1, &UIFontTextStyleHeadline, &qword_10083D828);
}

void sub_100535788(uint64_t a1)
{
}

id sub_10053579C(uint64_t a1)
{
  return sub_1005357D8(a1, &UIFontTextStyleBody, &qword_10083D838);
}

void sub_1005357B0(uint64_t a1)
{
}

id sub_1005357C4(uint64_t a1)
{
  return sub_1005357D8(a1, &UIFontTextStyleBody, &qword_10083D848);
}

id sub_1005357D8(uint64_t a1, void *a2, void *a3)
{
  id result = [self preferredFontForTextStyle:*a2];
  *a3 = result;
  return result;
}

void sub_100535824(uint64_t a1)
{
}

void sub_100535840(uint64_t a1)
{
}

void sub_10053585C(uint64_t a1)
{
}

void sub_100535878(uint64_t a1)
{
}

void sub_100535894(uint64_t a1, void *a2, double *a3, void *a4)
{
  id v6 = [self preferredFontForTextStyle:*a2];
  id v7 = sub_10021B898(*a3);

  *a4 = v7;
}

void sub_100535904(uint64_t a1)
{
}

void sub_100535930(uint64_t a1, void *a2, id *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  id v6 = [*a3 fontDescriptor];
  sub_100010218(&qword_100803B98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  sub_100010218(&qword_100803BB0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
  sub_100010218(&qword_100803BB8);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D6270;
  uint64_t v10 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v9 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v9 + 40) = 38;
  uint64_t v11 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v9 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v9 + 56) = 1;
  uint64_t v12 = UIFontDescriptorFeatureSettingsAttribute;
  id v13 = v10;
  id v14 = v11;
  *(void *)(v8 + 32) = sub_100397138(v9);
  *(void *)(inited + 64) = sub_100010218(&qword_100803BC0);
  *(void *)(inited + 40) = v8;
  sub_100397238(inited);
  type metadata accessor for AttributeName(0);
  sub_10021BC24();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v6 fontDescriptorByAddingAttributes:isa];

  [*a3 pointSize];
  id v18 = [self fontWithDescriptor:v16 size:v17];

  *a4 = v18;
}

void sub_100535B44(uint64_t a1)
{
}

void sub_100535B60(uint64_t a1, void *a2, double *a3, void *a4)
{
  id v7 = self;
  id v8 = [v7 preferredFontForTextStyle:*a2];
  id v9 = sub_10021B898(*a3);

  id v10 = [v9 fontDescriptor];
  id v11 = [v9 fontDescriptor];
  unsigned int v12 = [v11 symbolicTraits];

  id v13 = [v10 fontDescriptorWithSymbolicTraits:v12 | 0x10000];
  if (v13)
  {
    id v14 = [v7 fontWithDescriptor:v13 size:0.0];
  }
  else
  {

    id v14 = 0;
  }
  *a4 = v14;
}

void sub_100535C84(uint64_t a1)
{
}

void sub_100535CA0(uint64_t a1, void *a2, double *a3, void *a4)
{
  id v7 = self;
  id v8 = [v7 preferredFontForTextStyle:*a2];
  id v9 = sub_10021B898(*a3);

  id v10 = [v9 fontDescriptor];
  id v11 = [v9 fontDescriptor];
  unsigned int v12 = [v11 symbolicTraits];

  id v13 = [v10 fontDescriptorWithSymbolicTraits:v12 | 0x8000];
  if (v13)
  {
    id v14 = [v7 fontWithDescriptor:v13 size:0.0];
  }
  else
  {

    id v14 = 0;
  }
  *a4 = v14;
}

void sub_100535DC4(uint64_t a1)
{
}

void sub_100535DD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = self;
  id v6 = [v5 preferredFontForTextStyle:*a2];
  id v7 = [v6 fontDescriptor];
  id v8 = [v6 fontDescriptor];
  unsigned int v9 = [v8 symbolicTraits];

  id v10 = [v7 fontDescriptorWithSymbolicTraits:v9 | 2];
  if (v10)
  {
    id v11 = [v5 fontWithDescriptor:v10 size:0.0];

    if (v11)
    {

      id v6 = v11;
    }
  }
  *a3 = v6;
}

void sub_100535EDC()
{
  id v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v2 = [v1 fontDescriptor];
  id v3 = [v1 fontDescriptor];
  unsigned int v4 = [v3 symbolicTraits];

  id v5 = [v2 fontDescriptorWithSymbolicTraits:v4 | 2];
  if (v5)
  {
    id v6 = [v0 fontWithDescriptor:v5 size:0.0];
  }
  else
  {

    id v6 = 0;
  }
  qword_10083D890 = (uint64_t)v6;
}

void sub_100535FE8()
{
  qword_10083D898 = 0x404D000000000000;
}

void sub_100535FF8()
{
  qword_10083D8A0 = 0x4034000000000000;
}

double sub_100536008()
{
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10083D8A0;
  qword_10083D8A8 = 0;
  qword_10083D8B0 = qword_10083D8A0;
  qword_10083D8B8 = 0x4024000000000000;
  qword_10083D8C0 = qword_10083D8A0;
  return result;
}

double sub_100536070()
{
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10083D8A0 + -8.0;
  qword_10083D8C8 = 0;
  *(double *)&qword_10083D8D0 = *(double *)&qword_10083D8A0 + -8.0;
  qword_10083D8D8 = 0x4020000000000000;
  *(double *)&qword_10083D8E0 = *(double *)&qword_10083D8A0 + -8.0;
  return result;
}

double sub_1005360E0()
{
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10083D8A0;
  qword_10083D8E8 = 0x4020000000000000;
  qword_10083D8F0 = qword_10083D8A0;
  qword_10083D8F8 = 0x4032000000000000;
  qword_10083D900 = qword_10083D8A0;
  return result;
}

void sub_10053614C()
{
  qword_10083D908 = 0x4030000000000000;
}

void sub_10053615C()
{
  qword_10083D910 = 0x4034000000000000;
}

void sub_10053616C()
{
  qword_10083D918 = 0x4030000000000000;
}

void sub_10053617C()
{
  qword_10083D920 = 0x4000000000000000;
}

void sub_10053618C()
{
  qword_10083D928 = 0x4018000000000000;
}

void sub_10053619C()
{
  qword_10083D930 = 0x4010000000000000;
}

void sub_1005361AC()
{
  qword_10083D938 = 0x4028000000000000;
}

void sub_1005361BC()
{
  qword_10083D940 = 0x4024000000000000;
}

void sub_1005361CC()
{
  qword_10083D948 = 0x4034000000000000;
}

void sub_1005361DC()
{
  qword_10083D950 = 0x4042000000000000;
}

void sub_1005361EC()
{
  qword_10083D958 = 0x4018000000000000;
}

void sub_1005361FC()
{
  qword_10083D960 = 0x4020000000000000;
}

void sub_10053620C()
{
  qword_10083D968 = 0x4034000000000000;
}

void sub_10053621C()
{
  qword_10083D970 = 0x4018000000000000;
}

void sub_10053622C()
{
  qword_10083D978 = 0x4040000000000000;
}

void sub_10053623C()
{
  qword_10083D980 = 0x4055000000000000;
}

void sub_10053624C()
{
  qword_10083D988 = 0x403E000000000000;
}

void sub_10053625C()
{
  qword_10083D990 = 0x4010000000000000;
}

double sub_10053626C(uint64_t a1)
{
  return sub_1005362D4(a1, &qword_1007F7380, (double *)&qword_10083D990, (double *)&qword_10083D998);
}

void sub_100536298()
{
  qword_10083D9A0 = 0x4010000000000000;
}

double sub_1005362A8(uint64_t a1)
{
  return sub_1005362D4(a1, &qword_1007F7390, (double *)&qword_10083D9A0, (double *)&qword_10083D9A8);
}

double sub_1005362D4(uint64_t a1, void *a2, double *a3, double *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  double result = *a3 * 0.5;
  *a4 = result;
  return result;
}

void sub_100536324()
{
  qword_10083D9B0 = 0x4010000000000000;
}

void sub_100536334()
{
  qword_10083D9B8 = 0x4024000000000000;
}

void sub_100536344()
{
  qword_10083D9C0 = 0x4018000000000000;
}

void sub_100536354()
{
  qword_10083D9C8 = 0x4030000000000000;
}

void sub_100536364()
{
  qword_10083D9D0 = 0x4059000000000000;
}

void sub_100536374()
{
  qword_10083D9D8 = 0x4028000000000000;
}

void sub_100536384()
{
  qword_10083D9E0 = 0x4045000000000000;
}

void sub_100536394()
{
  qword_10083D9E8 = 0x4034000000000000;
}

void sub_1005363A4()
{
  qword_10083D9F0 = 0x403E000000000000;
}

void sub_1005363B4()
{
  qword_10083D9F8 = 0x4047000000000000;
}

void sub_1005363C4()
{
  qword_10083DA00 = 0x403E000000000000;
}

void sub_1005363D4()
{
  qword_10083DA08 = 0x4020000000000000;
}

void sub_1005363E4()
{
  qword_10083DA10 = 0x4028000000000000;
}

void sub_1005363F4()
{
  qword_10083DA18 = 0x4039000000000000;
}

void sub_100536404()
{
  qword_10083DA20 = 0x4018000000000000;
}

void sub_100536414()
{
  qword_10083DA28 = 0x4046000000000000;
}

void sub_100536424()
{
  qword_10083DA30 = 0x403A000000000000;
}

void sub_100536434()
{
  qword_10083DA38 = 0x4040000000000000;
}

void sub_100536444()
{
  qword_10083DA40 = 0x402C000000000000;
}

void sub_100536454()
{
  qword_10083DA48 = 0x4044000000000000;
}

void sub_100536464()
{
  qword_10083DA50 = 0x4024000000000000;
}

void sub_100536474()
{
  qword_10083DA58 = 0x4040000000000000;
}

void sub_100536484()
{
  if (qword_1007F7208 != -1) {
    swift_once();
  }
  id v0 = [(id)qword_10083D7D0 fontWithSize:19.0];
  id v1 = [self configurationWithFont:v0 scale:3];

  qword_10083DA60 = (uint64_t)v1;
}

void sub_10053652C()
{
  qword_10083DA68 = 0x4030000000000000;
}

void sub_10053653C()
{
  qword_10083DA70 = 0x4000000000000000;
}

void sub_10053654C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A0C90;
  v1._countAndFlagsBits = 8236;
  v1._object = (void *)0xE200000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DA78 = (__int128)v3;
}

void sub_1005365F0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A0BD0;
  v1._countAndFlagsBits = 0x6C65636E6143;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001ELL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DA88 = (__int128)v3;
}

void sub_10053669C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A0B70;
  v1._countAndFlagsBits = 19279;
  v1._object = (void *)0xE200000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DA98 = (__int128)v3;
}

void sub_100536740()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3900;
  v1._countAndFlagsBits = 1701736260;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DAA8 = (__int128)v3;
}

void sub_1005367E8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A14C0;
  v1._countAndFlagsBits = 6579265;
  v1._object = (void *)0xE300000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000026;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DAB8 = (__int128)v3;
}

void sub_100536890()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4570;
  v1._countAndFlagsBits = 1702256979;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DAC8 = (__int128)v3;
}

void sub_100536938()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A11F0;
  v1._countAndFlagsBits = 0x6563616C706552;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001FLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DAD8 = (__int128)v3;
}

void sub_1005369E8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3F10;
  v1._countAndFlagsBits = 0x6E4F206E727554;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000060;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DAE8 = (__int128)v3;
}

void sub_100536A98()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1B10;
  v1._countAndFlagsBits = 0x6E6F697461657243;
  v1._object = (void *)0xED00006574614420;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000024;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DAF8 = (__int128)v3;
}

void sub_100536B54()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2D30;
  v1._countAndFlagsBits = 0x7243207972746E45;
  v1._object = (void *)0xED00006465746165;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000025;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB08 = (__int128)v3;
}

void sub_100536C10()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2D60;
  v1._countAndFlagsBits = 0x746E656D6F4DLL;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000024;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB18 = (__int128)v3;
}

void sub_100536CBC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1880;
  v1._countAndFlagsBits = 0x4420746E656D6F4DLL;
  v1._object = (void *)0xEB00000000657461;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB28 = (__int128)v3;
}

void sub_100536D74()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1960;
  v1._countAndFlagsBits = 0x6144206F746F6850;
  v1._object = (void *)0xEA00000000006574;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000004CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB38 = (__int128)v3;
}

void sub_100536E28()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A19B0;
  v1._countAndFlagsBits = 0x4420736F746F6850;
  v1._object = (void *)0xEB00000000657461;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000054;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB48 = (__int128)v3;
}

void sub_100536EE0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A18B0;
  v1._countAndFlagsBits = 0x6144206F65646956;
  v1._object = (void *)0xEA00000000006574;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000004BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB58 = (__int128)v3;
}

void sub_100536F94()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1900;
  v1._countAndFlagsBits = 0x4420736F65646956;
  v1._object = (void *)0xEB00000000657461;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000054;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB68 = (__int128)v3;
}

void sub_10053704C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1A10;
  v1._countAndFlagsBits = 0x614420616964654DLL;
  v1._object = (void *)0xEA00000000006574;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000036;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB78 = (__int128)v3;
}

void sub_100537100()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1AE0;
  v1._countAndFlagsBits = 0x44206D6F74737543;
  v1._object = (void *)0xEB00000000657461;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000023;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB88 = (__int128)v3;
}

void sub_1005371B8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4B30;
  v1._countAndFlagsBits = 0x7461442074696445;
  v1._object = (void *)0xEF656C7469542065;
  v2._countAndFlagsBits = 0x7461442074696445;
  v2._object = (void *)0xE900000000000065;
  v4._countAndFlagsBits = 0xD000000000000019;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DB98 = (__int128)v3;
}

void sub_100537284()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000022;
  v4._object = (void *)0x80000001006A1850;
  v1._object = (void *)0x80000001006A1830;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0x7461442074696445;
  v2._object = (void *)0xE900000000000065;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DBA8 = (__int128)v3;
}

void sub_10053734C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3D10;
  v1._countAndFlagsBits = 0x6B72616D6B6F6F42;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000024;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DBB8 = (__int128)v3;
}

void sub_1005373FC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3CB0;
  v1._countAndFlagsBits = 0x422065766F6D6552;
  v1._object = (void *)0xEF6B72616D6B6F6FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DBC8 = (__int128)v3;
}

uint64_t sub_1005374B8()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t result = String.init(localized:defaultValue:table:bundle:locale:comment:)();
  qword_10083DBD8 = result;
  unk_10083DBE0 = v3;
  return result;
}

void sub_1005375D8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1AB0;
  v1._countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000022;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DBE8 = (__int128)v3;
}

void sub_100537684()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A40B0;
  v1._countAndFlagsBits = 0x79422074726F53;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DBF8 = (__int128)v3;
}

void sub_100537734()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4110;
  v1._countAndFlagsBits = 0x6144207972746E45;
  v1._object = (void *)0xEA00000000006574;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000027;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC08 = (__int128)v3;
}

void sub_1005377E8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A40E0;
  v1._countAndFlagsBits = 0x4420746E656D6F4DLL;
  v1._object = (void *)0xEB00000000657461;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000028;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC18 = (__int128)v3;
}

void sub_1005378A0()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x80000001006A4080;
  v1._object = (void *)0x80000001006A4060;
  v1._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0x746E697250;
  v2._object = (void *)0xE500000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC28 = (__int128)v3;
}

void sub_100537960()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  v4._object = (void *)0x80000001006A39C0;
  v1._object = (void *)0x80000001006A39A0;
  v1._countAndFlagsBits = 0xD000000000000015;
  v2._countAndFlagsBits = 0x746E697250;
  v2._object = (void *)0xE500000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC38 = (__int128)v3;
}

void sub_100537A20()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002ELL;
  v4._object = (void *)0x80000001006A4920;
  v1._object = (void *)0x80000001006A4900;
  v1._countAndFlagsBits = 0xD000000000000019;
  v2._countAndFlagsBits = 0x746E697250;
  v2._object = (void *)0xE500000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC48 = (__int128)v3;
}

void sub_100537AE0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4380;
  v1._countAndFlagsBits = 1885693259;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000028;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC58 = (__int128)v3;
}

void sub_100537B88()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3CE0;
  v1._countAndFlagsBits = 1953064005;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000020;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC68 = (__int128)v3;
}

void sub_100537C30()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1A80;
  v1._countAndFlagsBits = 0x656C746954;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000026;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC78 = (__int128)v3;
}

void sub_100537CDC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1A80;
  v1._countAndFlagsBits = 0x74695420776F6853;
  v1._object = (void *)0xEA0000000000656CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000026;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC88 = (__int128)v3;
}

void sub_100537D90()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1A50;
  v1._countAndFlagsBits = 0x7469542065646948;
  v1._object = (void *)0xEA0000000000656CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000026;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DC98 = (__int128)v3;
}

void sub_100537E44()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  v4._object = (void *)0x80000001006A4220;
  v1._object = (void *)0x80000001006A4200;
  v1._countAndFlagsBits = 0xD000000000000013;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DCA8 = (__int128)v3;
}

void sub_100537EFC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5960;
  v1._countAndFlagsBits = 0x6F4D20796C696144;
  v1._object = (void *)0xEA0000000000646FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000049;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DCB8 = (__int128)v3;
}

void sub_100537FB0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5A90;
  v1._object = (void *)0x80000001006A5A70;
  v1._countAndFlagsBits = 0x1000000000000011;
  v2._countAndFlagsBits = 0x206E6F69746F6D45;
  v2._object = (void *)0xAD0000402520B7C2;
  v4._countAndFlagsBits = 0xD000000000000046;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DCC8 = (__int128)v3;
}

void sub_10053807C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4030;
  v1._countAndFlagsBits = 0x7374686769736E49;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000020;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DCD8 = (__int128)v3;
}

void sub_10053812C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4000;
  v1._countAndFlagsBits = 0x6163696669746F4ELL;
  v1._object = (void *)0xED0000736E6F6974;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DCE8 = (__int128)v3;
}

void sub_1005381E8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3F80;
  v1._countAndFlagsBits = 0x756F4A206B636F4CLL;
  v1._object = (void *)0xEC0000006C616E72;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000024;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DCF8 = (__int128)v3;
}

void sub_1005382A0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5900;
  v1._countAndFlagsBits = 0x6E6F69746F6D45;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0x6E6F69746F6D45;
  v2._object = (void *)0xE700000000000000;
  v4._countAndFlagsBits = 0xD00000000000005DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD08 = (__int128)v3;
}

void sub_10053835C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A59F0;
  v1._object = (void *)0x80000001006A59B0;
  v1._countAndFlagsBits = 0x1000000000000035;
  v2._countAndFlagsBits = 0x402520B7C2204025;
  v2._object = (void *)0xA800000000000000;
  v4._countAndFlagsBits = 0xD00000000000007DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD18 = (__int128)v3;
}

void sub_10053841C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000038;
  v4._countAndFlagsBits = 0xD00000000000003DLL;
  v4._object = (void *)0x80000001006A0C50;
  v1._object = (void *)0x80000001006A0BF0;
  v2._object = (void *)0x80000001006A0C30;
  v2._countAndFlagsBits = 0xD000000000000010;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD28 = (__int128)v3;
}

void sub_1005384E8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4880;
  v1._countAndFlagsBits = 0x206E69206E65704FLL;
  v1._object = (void *)0xEE0068746C616548;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000024;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD38 = (__int128)v3;
}

void sub_1005385A4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3FB0;
  v1._countAndFlagsBits = 0x412068746C616548;
  v1._object = (void *)0xED00007373656363;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000047;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD48 = (__int128)v3;
}

void sub_100538660()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3B60;
  v1._object = (void *)0x80000001006A3B40;
  v1._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000018;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD58 = (__int128)v3;
}

void sub_100538714()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A24D0;
  v1._object = (void *)0x80000001006A24B0;
  v1._countAndFlagsBits = 0x1000000000000011;
  v2._countAndFlagsBits = 0x25209480E2204025;
  v2._object = (void *)0xA900000000000040;
  v4._countAndFlagsBits = 0xD000000000000021;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD68 = (__int128)v3;
}

void sub_1005387D8()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000034;
  v4._object = (void *)0x80000001006A1D80;
  v1._object = (void *)0x80000001006A1D60;
  v1._countAndFlagsBits = 0xD000000000000014;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD78 = (__int128)v3;
}

void sub_100538890()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD0000000000000A8;
  v4._object = (void *)0x80000001006A1EB0;
  v1._object = (void *)0x80000001006A1E90;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD88 = (__int128)v3;
}

void sub_100538948()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000032;
  v4._object = (void *)0x80000001006A4160;
  v1._object = (void *)0x80000001006A4140;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DD98 = (__int128)v3;
}

void sub_100538A00()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1F80;
  v1._object = (void *)0x80000001006A1F60;
  v1._countAndFlagsBits = 0x100000000000001BLL;
  v2._countAndFlagsBits = 0x402520B7C2204025;
  v2._object = (void *)0xA800000000000000;
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DDA8 = (__int128)v3;
}

void sub_100538AC0()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  v1._countAndFlagsBits = 0xD000000000000038;
  v4._object = (void *)0x80000001006A1CC0;
  v1._object = (void *)0x80000001006A1C80;
  v2._object = (void *)0x80000001006A0C30;
  v2._countAndFlagsBits = 0xD000000000000010;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DDB8 = (__int128)v3;
}

void sub_100538B88()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000031;
  v4._object = (void *)0x80000001006A1D30;
  v1._object = (void *)0x80000001006A1CF0;
  v2._countAndFlagsBits = 0x2520646E61204025;
  v2._object = (void *)0xE900000000000040;
  v4._countAndFlagsBits = 0xD000000000000023;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DDC8 = (__int128)v3;
}

void sub_100538C50()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2010;
  v1._countAndFlagsBits = 0x6956206C6C616D53;
  v1._object = (void *)0xEA00000000007765;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000005DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DDD8 = (__int128)v3;
}

void sub_100538D04()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2090;
  v1._countAndFlagsBits = 0x695620656772614CLL;
  v1._object = (void *)0xEA00000000007765;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DDE8 = (__int128)v3;
}

void sub_100538DB8()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000049;
  v4._object = (void *)0x80000001006A2400;
  v1._object = (void *)0x80000001006A23E0;
  v1._countAndFlagsBits = 0xD000000000000011;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DDF8 = (__int128)v3;
}

void sub_100538E70()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000046;
  v4._object = (void *)0x80000001006A21D0;
  v1._object = (void *)0x80000001006A21B0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE08 = (__int128)v3;
}

void sub_100538F28()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000045;
  v4._object = (void *)0x80000001006A2240;
  v1._object = (void *)0x80000001006A2220;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE18 = (__int128)v3;
}

void sub_100538FE0()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000046;
  v4._object = (void *)0x80000001006A22B0;
  v1._object = (void *)0x80000001006A2290;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE28 = (__int128)v3;
}

void sub_100539098()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000004DLL;
  v4._object = (void *)0x80000001006A2390;
  v1._object = (void *)0x80000001006A2360;
  v1._countAndFlagsBits = 0xD000000000000023;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE38 = (__int128)v3;
}

void sub_100539150()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2300;
  v1._countAndFlagsBits = 0x756F4A2077656956;
  v1._object = (void *)0xEC0000006C616E72;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000051;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE48 = (__int128)v3;
}

void sub_100539208()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000047;
  v4._object = (void *)0x80000001006A4E30;
  v1._object = (void *)0x80000001006A4DE0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000020;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE58 = (__int128)v3;
}

void sub_1005392C0()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000037;
  v4._object = (void *)0x80000001006A4D10;
  v1._object = (void *)0x80000001006A4CE0;
  v1._countAndFlagsBits = 0xD000000000000025;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE68 = (__int128)v3;
}

void sub_10053937C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000048;
  v4._object = (void *)0x80000001006A4DA0;
  v1._object = (void *)0x80000001006A4D50;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE78 = (__int128)v3;
}

void sub_100539434()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002DLL;
  v4._object = (void *)0x80000001006A52C0;
  v1._object = (void *)0x80000001006A52A0;
  v1._countAndFlagsBits = 0xD000000000000011;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE88 = (__int128)v3;
}

void sub_1005394EC()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000007FLL;
  v4._object = (void *)0x80000001006A5070;
  v1._object = (void *)0x80000001006A4FF0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000043;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DE98 = (__int128)v3;
}

void sub_1005395A4()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000080;
  v4._object = (void *)0x80000001006A5150;
  v1._object = (void *)0x80000001006A50C0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000060;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DEA8 = (__int128)v3;
}

void sub_10053965C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000074;
  v4._object = (void *)0x80000001006A5240;
  v1._object = (void *)0x80000001006A51C0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000057;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DEB8 = (__int128)v3;
}

void sub_100539714()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000022;
  v4._object = (void *)0x80000001006A3D80;
  v1._object = (void *)0x80000001006A3D60;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DEC8 = (__int128)v3;
}

void sub_1005397CC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A25E0;
  v1._countAndFlagsBits = 0x776F4E20746F4ELL;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000035;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DED8 = (__int128)v3;
}

void sub_10053987C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000054;
  v4._object = (void *)0x8000000100689C70;
  v1._object = (void *)0x8000000100689C50;
  v1._countAndFlagsBits = 0xD000000000000013;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DEE8 = (__int128)v3;
}

void sub_100539934()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000018;
  v4._object = (void *)0x80000001006A3EF0;
  v1._object = (void *)0x80000001006A3ED0;
  v1._countAndFlagsBits = 0xD000000000000013;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DEF8 = (__int128)v3;
}

void sub_1005399EC()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD0000000000000D2;
  v4._object = (void *)0x80000001006A3E90;
  v1._object = (void *)0x80000001006A3DB0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DF08 = (__int128)v3;
}

void sub_100539AA4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1E30;
  v1._object = (void *)0x80000001006A1E10;
  v1._countAndFlagsBits = 0x1000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000010;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DF18 = (__int128)v3;
}

void sub_100539B58()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000051;
  v4._object = (void *)0x80000001006A17D0;
  v1._object = (void *)0x80000001006A1780;
  v2._object = (void *)0x80000001006A17B0;
  v1._countAndFlagsBits = 0xD000000000000021;
  v2._countAndFlagsBits = 0x1000000000000012;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DF28 = (__int128)v3;
}

void sub_100539C20()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000049;
  v4._countAndFlagsBits = 0xD00000000000007BLL;
  v4._object = (void *)0x80000001006A1700;
  v2._object = (void *)0x80000001006A1680;
  v1._object = (void *)0x80000001006A16B0;
  v2._countAndFlagsBits = 0xD000000000000023;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DF38 = (__int128)v3;
}

void sub_100539CE8()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000004ELL;
  v4._object = (void *)0x800000010068DFC0;
  v1._object = (void *)0x800000010068DF80;
  v2._object = (void *)0x800000010068DFA0;
  v1._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0xD000000000000018;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DF48 = (__int128)v3;
}

void sub_100539DB0()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003DLL;
  v4._countAndFlagsBits = 0xD00000000000005CLL;
  v4._object = (void *)0x80000001006A1280;
  v2._object = (void *)0x80000001006A1210;
  v1._object = (void *)0x80000001006A1240;
  v2._countAndFlagsBits = 0xD000000000000022;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DF58 = (__int128)v3;
}

void sub_100539E74()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003ELL;
  v4._countAndFlagsBits = 0xD000000000000062;
  v4._object = (void *)0x80000001006A0E00;
  v2._object = (void *)0x80000001006A0DA0;
  v1._object = (void *)0x80000001006A0DC0;
  v2._countAndFlagsBits = 0xD00000000000001FLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DF68 = (__int128)v3;
}

void sub_100539F38()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003ELL;
  v4._countAndFlagsBits = 0xD000000000000062;
  v4._object = (void *)0x80000001006A0ED0;
  v2._object = (void *)0x80000001006A0E70;
  v1._object = (void *)0x80000001006A0E90;
  v2._countAndFlagsBits = 0xD00000000000001FLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DF78 = (__int128)v3;
}

void sub_100539FFC()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000040;
  v4._countAndFlagsBits = 0xD000000000000064;
  v4._object = (void *)0x80000001006A0FC0;
  v2._object = (void *)0x80000001006A0F40;
  v1._object = (void *)0x80000001006A0F70;
  v2._countAndFlagsBits = 0xD000000000000021;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DF88 = (__int128)v3;
}

void sub_10053A0C0()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003DLL;
  v4._countAndFlagsBits = 0xD000000000000061;
  v4._object = (void *)0x80000001006A1090;
  v2._object = (void *)0x80000001006A1030;
  v1._object = (void *)0x80000001006A1050;
  v2._countAndFlagsBits = 0xD00000000000001ELL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DF98 = (__int128)v3;
}

void sub_10053A184()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000040;
  v4._countAndFlagsBits = 0xD000000000000064;
  v4._object = (void *)0x80000001006A1180;
  v2._object = (void *)0x80000001006A1100;
  v1._object = (void *)0x80000001006A1130;
  v2._countAndFlagsBits = 0xD000000000000021;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DFA8 = (__int128)v3;
}

void sub_10053A248()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v4._countAndFlagsBits = 0xD00000000000004ALL;
  v4._object = (void *)0x800000010068E050;
  v2._object = (void *)0x800000010068E010;
  v1._object = (void *)0x800000010068E030;
  v2._countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DFB8 = (__int128)v3;
}

void sub_10053A30C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000049;
  v4._countAndFlagsBits = 0xD000000000000051;
  v4._object = (void *)0x80000001006A0D40;
  v2._object = (void *)0x80000001006A0CD0;
  v1._object = (void *)0x80000001006A0CF0;
  v2._countAndFlagsBits = 0xD00000000000001DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DFC8 = (__int128)v3;
}

void sub_10053A3D0()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000026;
  v4._countAndFlagsBits = 0xD000000000000053;
  v4._object = (void *)0x80000001006A1620;
  v1._object = (void *)0x80000001006A15D0;
  v2._object = (void *)0x80000001006A1600;
  v2._countAndFlagsBits = 0xD000000000000014;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DFD8 = (__int128)v3;
}

void sub_10053A494()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  v4._countAndFlagsBits = 0xD000000000000062;
  v4._object = (void *)0x80000001006A1450;
  v1._object = (void *)0x80000001006A1400;
  v2._object = (void *)0x80000001006A1430;
  v2._countAndFlagsBits = 0xD000000000000019;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083DFE8 = (__int128)v3;
}

void sub_10053A558()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000002CLL;
  v4._countAndFlagsBits = 0xD000000000000077;
  v4._object = (void *)0x80000001006A1550;
  v2._object = (void *)0x80000001006A14F0;
  v1._object = (void *)0x80000001006A1520;
  v2._countAndFlagsBits = 0xD000000000000028;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v0, v1, v4);

  xmmword_10083DFF8 = (__int128)v3;
}

void sub_10053A61C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD0000000000000FBLL;
  v4._object = (void *)0x80000001006A1300;
  v1._object = (void *)0x80000001006A12E0;
  v1._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E008 = (__int128)v3;
}

void sub_10053A6D8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2930;
  v1._countAndFlagsBits = 0x4C2065676E616843;
  v1._object = (void *)0xEF6E6F697461636FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000056;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E018 = (__int128)v3;
}

void sub_10053A794()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5D40;
  v1._countAndFlagsBits = 0x6F4A20794D206E49;
  v1._object = (void *)0xED00006C616E7275;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000064;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E028 = (__int128)v3;
}

void sub_10053A850()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5D00;
  v1._countAndFlagsBits = 0x654D207261654ELL;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000035;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E038 = (__int128)v3;
}

void sub_10053A900()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5C50;
  v1._countAndFlagsBits = 0x6F4C206F746F6850;
  v1._object = (void *)0xEE006E6F69746163;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x10000000000000A4;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E048 = (__int128)v3;
}

void sub_10053A9BC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2880;
  v1._countAndFlagsBits = 0x6F4C206F65646956;
  v1._object = (void *)0xEE006E6F69746163;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x10000000000000A4;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E058 = (__int128)v3;
}

void sub_10053AA78()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A27E0;
  v1._countAndFlagsBits = 0x6F4C20616964654DLL;
  v1._object = (void *)0xEE006E6F69746163;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x1000000000000098;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E068 = (__int128)v3;
}

void sub_10053AB34()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000016;
  v4._object = (void *)0x80000001006A2D10;
  v1._object = (void *)0x80000001006A2CF0;
  v1._countAndFlagsBits = 0xD000000000000014;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E078 = (__int128)v3;
}

void sub_10053ABEC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000029;
  v4._object = (void *)0x80000001006A2CC0;
  v1._object = (void *)0x80000001006A2C90;
  v1._countAndFlagsBits = 0xD000000000000028;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E088 = (__int128)v3;
}

void sub_10053ACA4()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  v4._object = (void *)0x80000001006A29B0;
  v1._object = (void *)0x80000001006A2990;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E098 = (__int128)v3;
}

void sub_10053AD60()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2B30;
  v1._countAndFlagsBits = 0x686374614D206F4ELL;
  v1._object = (void *)0xEA00000000007365;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E0A8 = (__int128)v3;
}

void sub_10053AE14()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000028;
  v4._object = (void *)0x80000001006A2B00;
  v1._object = (void *)0x80000001006A2AD0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000022;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E0B8 = (__int128)v3;
}

void sub_10053AECC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2C10;
  v1._countAndFlagsBits = 0x6563616C50206F4ELL;
  v1._object = (void *)0xE900000000000073;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000072;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E0C8 = (__int128)v3;
}

void sub_10053AF80()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000074;
  v4._object = (void *)0x80000001006A2B90;
  v1._object = (void *)0x80000001006A2B50;
  v1._countAndFlagsBits = 0xD000000000000030;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E0D8 = (__int128)v3;
}

void sub_10053B03C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4990;
  v1._object = (void *)0x80000001006A4970;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000010;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E0E8 = (__int128)v3;
}

void sub_10053B0F0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4CB0;
  v1._countAndFlagsBits = 0x72206F7420706154;
  v1._object = (void *)0xED000064726F6365;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000022;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E0F8 = (__int128)v3;
}

void sub_10053B1AC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  v4._object = (void *)0x80000001006A2F80;
  v1._object = (void *)0x80000001006A2F60;
  v1._countAndFlagsBits = 0xD000000000000017;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E108 = (__int128)v3;
}

void sub_10053B264()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003DLL;
  v4._object = (void *)0x80000001006A2F30;
  v1._object = (void *)0x80000001006A2EF0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E118 = (__int128)v3;
}

void sub_10053B31C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x80000001006A3070;
  v1._object = (void *)0x80000001006A3050;
  v1._countAndFlagsBits = 0xD000000000000014;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E128 = (__int128)v3;
}

void sub_10053B3D4()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000050;
  v4._object = (void *)0x80000001006A3010;
  v1._object = (void *)0x80000001006A2FB0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000034;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E138 = (__int128)v3;
}

void sub_10053B48C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000027;
  v4._object = (void *)0x80000001006A3140;
  v1._object = (void *)0x80000001006A3120;
  v1._countAndFlagsBits = 0xD000000000000013;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E148 = (__int128)v3;
}

void sub_10053B544()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000043;
  v4._object = (void *)0x80000001006A30F0;
  v1._object = (void *)0x80000001006A30A0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000026;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E158 = (__int128)v3;
}

void sub_10053B5FC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x80000001006A3230;
  v1._object = (void *)0x80000001006A3210;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E168 = (__int128)v3;
}

void sub_10053B6B4()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000053;
  v4._object = (void *)0x80000001006A31D0;
  v1._object = (void *)0x80000001006A3170;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000030;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E178 = (__int128)v3;
}

void sub_10053B76C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000003BLL;
  v4._object = (void *)0x80000001006A3410;
  v1._object = (void *)0x80000001006A33F0;
  v1._countAndFlagsBits = 0xD000000000000013;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E188 = (__int128)v3;
}

void sub_10053B828()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003ELL;
  v4._object = (void *)0x80000001006A33B0;
  v1._object = (void *)0x80000001006A3370;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000034;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E198 = (__int128)v3;
}

void sub_10053B8E4()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000043;
  v4._object = (void *)0x80000001006A3320;
  v1._object = (void *)0x80000001006A3300;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E1A8 = (__int128)v3;
}

void sub_10053B99C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000050;
  v4._object = (void *)0x80000001006A32C0;
  v1._object = (void *)0x80000001006A3260;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E1B8 = (__int128)v3;
}

void sub_10053BA54()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000032;
  v4._object = (void *)0x80000001006A35B0;
  v1._object = (void *)0x80000001006A3590;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E1C8 = (__int128)v3;
}

void sub_10053BB0C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001006A3530;
  v1._object = (void *)0x80000001006A34C0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000059;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E1D8 = (__int128)v3;
}

void sub_10053BBC4()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000004BLL;
  v4._object = (void *)0x80000001006A3470;
  v1._object = (void *)0x80000001006A3450;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E1E8 = (__int128)v3;
}

void sub_10053BC7C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002ELL;
  v4._object = (void *)0x80000001006A2AA0;
  v1._object = (void *)0x80000001006A2A80;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E1F8 = (__int128)v3;
}

void sub_10053BD34()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000006ALL;
  v4._object = (void *)0x80000001006A2A40;
  v1._object = (void *)0x80000001006A29D0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000032;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E208 = (__int128)v3;
}

void sub_10053BDEC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  v4._object = (void *)0x80000001006A27B0;
  v1._object = (void *)0x80000001006A2780;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E218 = (__int128)v3;
}

void sub_10053BEA4()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  v4._object = (void *)0x80000001006A2730;
  v1._object = (void *)0x80000001006A2700;
  v1._countAndFlagsBits = 0xD000000000000029;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E228 = (__int128)v3;
}

void sub_10053BF5C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002DLL;
  v4._object = (void *)0x80000001006A26D0;
  v1._object = (void *)0x80000001006A26B0;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E238 = (__int128)v3;
}

void sub_10053C014()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000055;
  v4._object = (void *)0x80000001006A2680;
  v1._object = (void *)0x80000001006A2620;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002FLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E248 = (__int128)v3;
}

void sub_10053C0CC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A25B0;
  v1._countAndFlagsBits = 0x6553206F74206F47;
  v1._object = (void *)0xEE0073676E697474;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000021;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E258 = (__int128)v3;
}

void sub_10053C188()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x80000001006A46E0;
  v1._object = (void *)0x80000001006A46C0;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E268 = (__int128)v3;
}

void sub_10053C240()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = (void *)0x80000001006A46A0;
  v1._object = (void *)0x80000001006A4680;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000016;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E278 = (__int128)v3;
}

void sub_10053C2F8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2760;
  v1._countAndFlagsBits = 0x73676E6974746553;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000013;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E288 = (__int128)v3;
}

void sub_10053C3A8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4350;
  v1._object = (void *)0x80000001006A4330;
  v1._countAndFlagsBits = 0x1000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000023;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E298 = (__int128)v3;
}

void sub_10053C45C()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000032;
  v4._object = (void *)0x80000001006A4310;
  v1._object = (void *)0x80000001006A42D0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E2A8 = (__int128)v3;
}

void sub_10053C514()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = (void *)0x80000001006A4430;
  v1._object = (void *)0x80000001006A4410;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000011;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E2B8 = (__int128)v3;
}

void sub_10053C5CC()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000033;
  v4._object = (void *)0x80000001006A43F0;
  v1._object = (void *)0x80000001006A43B0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000013;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E2C8 = (__int128)v3;
}

void sub_10053C684()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4590;
  v1._countAndFlagsBits = 0x6C7469742077654ELL;
  v1._object = (void *)0xE900000000000065;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000030;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E2D8 = (__int128)v3;
}

void sub_10053C738()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v4._object = (void *)0x80000001006A0BB0;
  v1._object = (void *)0x80000001006A0B90;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000016;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E2E8 = (__int128)v3;
}

void sub_10053C7F0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0xEF7961646F742073;
  v1._countAndFlagsBits = 0x7961646F54;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x6562697263736544;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E2F8 = (__int128)v3;
}

void sub_10053C8A4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A36F0;
  v1._countAndFlagsBits = 0x6164726574736559;
  v1._object = (void *)0xE900000000000079;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000013;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E308 = (__int128)v3;
}

void sub_10053C958()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000023;
  v4._object = (void *)0x80000001006A4F10;
  v1._object = (void *)0x80000001006A4EF0;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E318 = (__int128)v3;
}

void sub_10053CA10()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4F40;
  v1._countAndFlagsBits = 0x4554414420455355;
  v1._object = (void *)0xED00004D4F524620;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001ELL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E328 = (__int128)v3;
}

void sub_10053CACC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000022;
  v4._object = (void *)0x80000001006A1C30;
  v1._object = (void *)0x80000001006A1C60;
  v1._countAndFlagsBits = 0xD000000000000014;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E338 = (__int128)v3;
}

void sub_10053CB84()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000003CLL;
  v4._object = (void *)0x80000001006A1C30;
  v1._object = (void *)0x80000001006A1BF0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000022;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E348 = (__int128)v3;
}

void sub_10053CC3C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000044;
  v4._object = (void *)0x80000001006A1BA0;
  v1._object = (void *)0x80000001006A1B80;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E358 = (__int128)v3;
}

void sub_10053CCF4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1B40;
  v1._countAndFlagsBits = 0x776F4E20746F4ELL;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000030;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E368 = (__int128)v3;
}

void sub_10053CDA4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A41A0;
  v1._countAndFlagsBits = 0x69726F6765746143;
  v1._object = (void *)0xEA00000000007365;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000019;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E378 = (__int128)v3;
}

void sub_10053CE58()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000001FLL;
  v4._object = (void *)0x80000001006A41E0;
  v1._object = (void *)0x80000001006A41C0;
  v1._countAndFlagsBits = 0xD000000000000011;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E388 = (__int128)v3;
}

void sub_10053CF10()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A42B0;
  v1._countAndFlagsBits = 0x7261656C43;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E398 = (__int128)v3;
}

void sub_10053CFBC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4290;
  v1._countAndFlagsBits = 0x6C75736552206F4ELL;
  v1._object = (void *)0xEA00000000007374;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000017;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E3A8 = (__int128)v3;
}

void sub_10053D070()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000001FLL;
  v4._object = (void *)0x80000001006A4270;
  v1._object = (void *)0x80000001006A4250;
  v1._countAndFlagsBits = 0xD000000000000011;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E3B8 = (__int128)v3;
}

void sub_10053D128()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1FB0;
  v1._countAndFlagsBits = 0x6972746E45206F4ELL;
  v1._object = (void *)0xEA00000000007365;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000027;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E3C8 = (__int128)v3;
}

void sub_10053D1DC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000038;
  v4._object = (void *)0x80000001006A4F90;
  v1._object = (void *)0x80000001006A4F60;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E3D8 = (__int128)v3;
}

void sub_10053D294()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4530;
  v1._countAndFlagsBits = 0x72746E452077654ELL;
  v1._object = (void *)0xE900000000000079;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000035;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E3E8 = (__int128)v3;
}

void sub_10053D348()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000003CLL;
  v4._object = (void *)0x80000001006A44F0;
  v1._object = (void *)0x80000001006A44D0;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E3F8 = (__int128)v3;
}

void sub_10053D404()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4490;
  v1._countAndFlagsBits = 0x746F685020646441;
  v1._object = (void *)0xEA0000000000736FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000039;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E408 = (__int128)v3;
}

void sub_10053D4B8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4450;
  v1._countAndFlagsBits = 0x412064726F636552;
  v1._object = (void *)0xEC0000006F696475;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000038;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E418 = (__int128)v3;
}

void sub_10053D570()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000027;
  v4._object = (void *)0x80000001006A5770;
  v1._object = (void *)0x80000001006A5750;
  v1._countAndFlagsBits = 0xD000000000000015;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E428 = (__int128)v3;
}

void sub_10053D628()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000035;
  v4._object = (void *)0x80000001006A5710;
  v1._object = (void *)0x80000001006A56F0;
  v1._countAndFlagsBits = 0xD000000000000017;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E438 = (__int128)v3;
}

void sub_10053D6E0()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000055;
  v4._object = (void *)0x80000001006A5350;
  v1._object = (void *)0x80000001006A52F0;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E448 = (__int128)v3;
}

void sub_10053D798()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000005FLL;
  v4._object = (void *)0x80000001006A5690;
  v1._object = (void *)0x80000001006A5640;
  v1._countAndFlagsBits = 0xD000000000000042;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E458 = (__int128)v3;
}

void sub_10053D854()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000036;
  v4._object = (void *)0x80000001006A5600;
  v1._object = (void *)0x80000001006A55E0;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E468 = (__int128)v3;
}

void sub_10053D910()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000045;
  v4._object = (void *)0x80000001006A55A0;
  v1._object = (void *)0x80000001006A5550;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E478 = (__int128)v3;
}

void sub_10053D9C8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5510;
  v1._countAndFlagsBits = 0x206120646C697542;
  v1._object = (void *)0xED00007469626148;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000035;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E488 = (__int128)v3;
}

void sub_10053DA84()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD000000000000041;
  v4._object = (void *)0x80000001006A54D0;
  v1._object = (void *)0x80000001006A5480;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003BLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E498 = (__int128)v3;
}

void sub_10053DB3C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000036;
  v4._object = (void *)0x80000001006A5440;
  v1._object = (void *)0x80000001006A5420;
  v1._countAndFlagsBits = 0xD000000000000015;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E4A8 = (__int128)v3;
}

void sub_10053DBF4()
{
  id v0 = [self mainBundle];
  v1._countAndFlagsBits = 0xD00000000000004BLL;
  v4._object = (void *)0x80000001006A53E0;
  v1._object = (void *)0x80000001006A5390;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E4B8 = (__int128)v3;
}

void sub_10053DCAC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A45D0;
  v1._countAndFlagsBits = 0x7974697669746341;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000028;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E4C8 = (__int128)v3;
}

void sub_10053DD5C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000090;
  v4._object = (void *)0x80000001006A5B40;
  v1._object = (void *)0x80000001006A5B20;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E4D8 = (__int128)v3;
}

void sub_10053DE14()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A35F0;
  v1._countAndFlagsBits = 0x6552206F69647541;
  v1._object = (void *)0xEE00726564726F63;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000034;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E4E8 = (__int128)v3;
}

void sub_10053DED0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A1DC0;
  v1._countAndFlagsBits = 0x6B72616D6B6F6F42;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000049;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E4F8 = (__int128)v3;
}

void sub_10053DF80()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5AE0;
  v1._countAndFlagsBits = 0x6B72616D6B6F6F42;
  v1._object = (void *)0xEA00000000006465;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000036;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E508 = (__int128)v3;
}

void sub_10053E034()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3630;
  v1._countAndFlagsBits = 0x6172656D6143;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000035;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E518 = (__int128)v3;
}

void sub_10053E0E0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A20D0;
  v1._countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000043;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E528 = (__int128)v3;
}

void sub_10053E18C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A37E0;
  v1._countAndFlagsBits = 0x6F69647541;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000036;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E538 = (__int128)v3;
}

void sub_10053E238()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3820;
  v1._countAndFlagsBits = 0x6172656D6143;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000037;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E548 = (__int128)v3;
}

void sub_10053E2E4()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000038;
  v4._object = (void *)0x80000001006A38C0;
  v1._object = (void *)0x80000001006A38A0;
  v1._countAndFlagsBits = 0xD000000000000011;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E558 = (__int128)v3;
}

void sub_10053E39C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3750;
  v1._countAndFlagsBits = 0x726F462074786554;
  v1._object = (void *)0xEF676E697474616DLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000040;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E568 = (__int128)v3;
}

void sub_10053E458()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3860;
  v1._countAndFlagsBits = 0x736F746F6850;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000037;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E578 = (__int128)v3;
}

void sub_10053E504()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000046;
  v4._object = (void *)0x80000001006A49D0;
  v1._object = (void *)0x80000001006A49B0;
  v1._countAndFlagsBits = 0xD000000000000018;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E588 = (__int128)v3;
}

void sub_10053E5BC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A37A0;
  v1._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v1._object = (void *)0xE900000000000073;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000039;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E598 = (__int128)v3;
}

void sub_10053E670()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3710;
  v1._countAndFlagsBits = 0x666F206574617453;
  v1._object = (void *)0xED0000646E694D20;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003ELL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E5A8 = (__int128)v3;
}

void sub_10053E72C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A58B0;
  v1._countAndFlagsBits = 0x65736F706D6F43;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E5B8 = (__int128)v3;
}

void sub_10053E7DC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4B00;
  v1._countAndFlagsBits = 0x746361746E6F43;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E5C8 = (__int128)v3;
}

void sub_10053E88C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000038;
  v4._object = (void *)0x80000001006A5E20;
  v1._object = (void *)0x80000001006A5E00;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E5D8 = (__int128)v3;
}

void sub_10053E948()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2120;
  v1._countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000025;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E5E8 = (__int128)v3;
}

void sub_10053E9F4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4600;
  v1._countAndFlagsBits = 0x6E6F697461727544;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000043;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E5F8 = (__int128)v3;
}

void sub_10053EAA4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3C30;
  v1._countAndFlagsBits = 1953064005;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000023;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E608 = (__int128)v3;
}

void sub_10053EB4C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2480;
  v1._countAndFlagsBits = 0x65736F6C43;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000027;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E618 = (__int128)v3;
}

void sub_10053EBF8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3BD0;
  v1._countAndFlagsBits = 0x657370616C6C6F43;
  v1._object = (void *)0xEE007972746E4520;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000052;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E628 = (__int128)v3;
}

void sub_10053ECB4()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000059;
  v4._object = (void *)0x80000001006A3A10;
  v1._object = (void *)0x80000001006A39F0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E638 = (__int128)v3;
}

void sub_10053ED6C()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000056;
  v4._object = (void *)0x80000001006A3A90;
  v1._object = (void *)0x80000001006A3A70;
  v1._countAndFlagsBits = 0xD000000000000015;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E648 = (__int128)v3;
}

void sub_10053EE24()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5BE0;
  v1._countAndFlagsBits = 0x746F727720756F59;
  v1._object = (void *)0xED00004025203A65;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000060;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E658 = (__int128)v3;
}

void sub_10053EEE0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2560;
  v1._countAndFlagsBits = 0x646E61707845;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000040;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E668 = (__int128)v3;
}

void sub_10053EF8C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4E80;
  v1._countAndFlagsBits = 0x7265746C6946;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E678 = (__int128)v3;
}

void sub_10053F038()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4650;
  v1._countAndFlagsBits = 0x686372616553;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000029;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E688 = (__int128)v3;
}

void sub_10053F0E4()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2450;
  v1._countAndFlagsBits = 0x206C616E72756F4ALL;
  v1._object = (void *)0xEC00000074786554;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E698 = (__int128)v3;
}

void sub_10053F19C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4EB0;
  v1._countAndFlagsBits = 0x206C616E72756F4ALL;
  v1._object = (void *)0xED0000656C746954;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000030;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E6A8 = (__int128)v3;
}

void sub_10053F258()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000039;
  v4._object = (void *)0x80000001006A4AC0;
  v1._object = (void *)0x80000001006A4AA0;
  v1._countAndFlagsBits = 0xD000000000000010;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E6B8 = (__int128)v3;
}

void sub_10053F314()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2D90;
  v1._countAndFlagsBits = 0x657250206B6E694CLL;
  v1._object = (void *)0xEC00000077656976;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000030;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E6C8 = (__int128)v3;
}

void sub_10053F3CC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD0000000000000D2;
  v4._object = (void *)0x80000001006A57D0;
  v1._object = (void *)0x80000001006A57A0;
  v1._countAndFlagsBits = 0xD00000000000002CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E6D8 = (__int128)v3;
}

void sub_10053F484()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4790;
  v1._countAndFlagsBits = 1702131021;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000005CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E6E8 = (__int128)v3;
}

void sub_10053F52C()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2DD0;
  v1._countAndFlagsBits = 0x6573756150;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000080;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E6F8 = (__int128)v3;
}

void sub_10053F5D8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4A20;
  v1._countAndFlagsBits = 0x646573756150;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000038;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E708 = (__int128)v3;
}

void sub_10053F684()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x8000000100699A90;
  v1._countAndFlagsBits = 0x6F746F6850;
  v1._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000002ALL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E718 = (__int128)v3;
}

void sub_10053F730()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A2E60;
  v1._countAndFlagsBits = 2036427856;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000087;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E728 = (__int128)v3;
}

void sub_10053F7D8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4A60;
  v1._countAndFlagsBits = 0x676E6979616C50;
  v1._object = (void *)0xE700000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000030;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E738 = (__int128)v3;
}

void sub_10053F888()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5DB0;
  v1._countAndFlagsBits = 0x656D75736552;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000049;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E748 = (__int128)v3;
}

void sub_10053F934()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4C00;
  v1._countAndFlagsBits = 0x64726F636552;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD0000000000000A5;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E758 = (__int128)v3;
}

void sub_10053F9E0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4B50;
  v1._countAndFlagsBits = 1886352467;
  v1._object = (void *)0xE400000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD0000000000000A1;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E768 = (__int128)v3;
}

void sub_10053FA88()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3C60;
  v1._countAndFlagsBits = 0x422065766F6D6552;
  v1._object = (void *)0xEF6B72616D6B6F6FLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000045;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E778 = (__int128)v3;
}

void sub_10053FB44()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3920;
  v1._countAndFlagsBits = 0x6C6C4120776F6853;
  v1._object = (void *)0xEE00736D65744920;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000075;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E788 = (__int128)v3;
}

void sub_10053FC00()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3670;
  v1._countAndFlagsBits = 0x666F206574617453;
  v1._object = (void *)0xED0000646E694D20;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000003CLL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E798 = (__int128)v3;
}

void sub_10053FCBC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000003ELL;
  v4._object = (void *)0x80000001006A36B0;
  v1._object = (void *)0x80000001006A3450;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E7A8 = (__int128)v3;
}

void sub_10053FD78()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A4730;
  v1._countAndFlagsBits = 0x6574756D6E55;
  v1._object = (void *)0xE600000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD00000000000005ELL;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E7B8 = (__int128)v3;
}

void sub_10053FE24()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000036;
  v4._object = (void *)0x80000001006A2170;
  v1._object = (void *)0x80000001006A2150;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E7C8 = (__int128)v3;
}

void sub_10053FEDC()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD000000000000036;
  v4._object = (void *)0x80000001006A2520;
  v1._object = (void *)0x80000001006A2500;
  v1._countAndFlagsBits = 0xD000000000000016;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E7D8 = (__int128)v3;
}

void sub_10053FF94()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A5E60;
  v1._countAndFlagsBits = 0x6D726F6665766157;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000026;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E7E8 = (__int128)v3;
}

void sub_100540044()
{
  id v0 = [self mainBundle];
  v4._countAndFlagsBits = 0xD00000000000005BLL;
  v4._object = (void *)0x80000001006A4820;
  v1._object = (void *)0x80000001006A47F0;
  v1._countAndFlagsBits = 0xD000000000000028;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E7F8 = (__int128)v3;
}

void sub_1005400FC()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3AF0;
  v1._countAndFlagsBits = 0x657370616C6C6F43;
  v1._object = (void *)0xE900000000000064;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000045;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E808 = (__int128)v3;
}

void sub_1005401B0()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0x80000001006A3B80;
  v1._countAndFlagsBits = 0x6465646E61707845;
  v1._object = (void *)0xE800000000000000;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000044;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_10083E818 = (__int128)v3;
}

void sub_100540260(uint64_t a1)
{
}

void sub_100540288(uint64_t a1)
{
}

void sub_1005402BC(uint64_t a1)
{
}

void sub_1005402F0(uint64_t a1)
{
}

void sub_10054031C(uint64_t a1)
{
}

void sub_100540344(uint64_t a1)
{
}

void sub_100540368(uint64_t a1)
{
}

void sub_10054038C(uint64_t a1)
{
}

void sub_1005403B4(uint64_t a1)
{
}

void sub_1005403E8(uint64_t a1)
{
}

void sub_10054041C(uint64_t a1)
{
}

void sub_100540448(uint64_t a1)
{
}

void sub_100540470(uint64_t a1)
{
}

void sub_10054049C(uint64_t a1)
{
}

void sub_1005404C0(uint64_t a1)
{
}

void sub_1005404E4(uint64_t a1)
{
}

void sub_100540508(uint64_t a1)
{
}

void sub_10054052C(uint64_t a1)
{
}

void sub_100540554(uint64_t a1)
{
}

void sub_10054057C(uint64_t a1)
{
}

void sub_1005405B0(uint64_t a1)
{
}

void sub_1005405DC(uint64_t a1)
{
}

void sub_100540608(uint64_t a1)
{
}

void sub_100540634(uint64_t a1)
{
}

void sub_100540664(uint64_t a1)
{
}

void sub_100540690(uint64_t a1)
{
}

void sub_1005406B4(uint64_t a1)
{
}

void sub_1005406E0(uint64_t a1)
{
}

void sub_10054070C(uint64_t a1)
{
}

void sub_100540738(uint64_t a1)
{
}

void sub_100540758(uint64_t a1)
{
}

void sub_100540784(uint64_t a1)
{
}

void sub_1005407B0(uint64_t a1)
{
}

void sub_1005407DC(uint64_t a1)
{
}

void sub_100540808(uint64_t a1)
{
}

void sub_100540834(uint64_t a1)
{
}

void sub_100540860(uint64_t a1)
{
}

void sub_100540890(uint64_t a1)
{
}

void sub_1005408B0(uint64_t a1)
{
}

void sub_1005408DC(uint64_t a1)
{
}

void sub_1005408FC(uint64_t a1)
{
}

void sub_100540928(uint64_t a1)
{
}

void sub_100540954(uint64_t a1)
{
}

void sub_100540978(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, void *a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self *a4:v7];

  *a5 = v8;
}

void sub_1005409E0()
{
  *(void *)&xmmword_10083E980 = AudioRecordingActivityState.hash(into:)(4.0, 4.0);
  *((void *)&xmmword_10083E980 + 1) = v0;
  qword_10083E990 = xmmword_10083E980;
  unk_10083E998 = v0;
  *(void *)&xmmword_10083E9A0 = xmmword_10083E980;
  *((void *)&xmmword_10083E9A0 + 1) = v0;
  qword_10083E9B0 = xmmword_10083E980;
  unk_10083E9B8 = v0;
}

void sub_100540A18()
{
  if (qword_1007F73C8 != -1) {
    swift_once();
  }
  *(void *)&xmmword_10083E9C0 = AudioRecordingActivityState.hash(into:)(*(double *)&qword_10083D9D8, *(double *)&qword_10083D9D8);
  *((void *)&xmmword_10083E9C0 + 1) = v0;
  qword_10083E9D0 = xmmword_10083E9C0;
  unk_10083E9D8 = v0;
  *(void *)&xmmword_10083E9E0 = xmmword_10083E9C0;
  *((void *)&xmmword_10083E9E0 + 1) = v0;
  qword_10083E9F0 = xmmword_10083E9C0;
  unk_10083E9F8 = v0;
}

uint64_t type metadata accessor for JurassicTheme()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Colors()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Fonts()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Sizes()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Styles()
{
  return self;
}

void sub_100540B38(void *a1, void *a2, void *a3, void *a4, char a5, void *a6)
{
  [a1 setAxis:1];
  [a1 setAlignment:3];
  [a1 setUserInteractionEnabled:1];
  [a1 setSpacing:2.0];
  if (qword_1007F7290 != -1) {
    swift_once();
  }
  [a2 setFont:qword_10083D858];
  id v10 = self;
  id v11 = [v10 secondaryLabelColor];
  [a2 setTextColor:v11];

  [a2 setAdjustsFontSizeToFitWidth:1];
  [a2 setMinimumScaleFactor:0.5];
  [a2 setAdjustsFontForContentSizeCategory:1];
  [a2 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  if (qword_1007F7208 != -1) {
    swift_once();
  }
  [a3 setFont:qword_10083D7D0];
  id v12 = [v10 labelColor];
  [a3 setTextColor:v12];

  [a3 setAdjustsFontSizeToFitWidth:1];
  [a3 setMinimumScaleFactor:0.5];
  [a3 setAdjustsFontForContentSizeCategory:1];
  [a3 setNumberOfLines:0];
  [a3 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [a4 setFont:qword_10083D858];
  id v13 = [v10 secondaryLabelColor];
  [a4 setTextColor:v13];

  [a4 setAdjustsFontForContentSizeCategory:1];
  [a4 setAdjustsFontSizeToFitWidth:1];
  [a4 setMinimumScaleFactor:0.5];
  [a4 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [a4 setLineBreakMode:0];
  [a4 setNumberOfLines:0];
  [a4 setTextAlignment:1];
  [a1 addArrangedSubview:a2];
  [a1 addArrangedSubview:a3];
  [a1 addArrangedSubview:a4];
  if (qword_1007F7348 != -1) {
    swift_once();
  }
  [a1 setCustomSpacing:a2 afterView:*(double *)&qword_10083D958];
  if (qword_1007F7328 != -1) {
    swift_once();
  }
  [a1 setCustomSpacing:a4 afterView:*(double *)&qword_10083D938];
  id v14 = [a2 superview];
  if (v14)
  {
    uint64_t v15 = v14;
    [a2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [a2 centerXAnchor];
    id v17 = [v15 centerXAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:0.0];
    id v19 = v18;
    [v19 setActive:1];
  }
  id v20 = [a3 superview];
  if (v20)
  {
    uint64_t v21 = v20;
    [a3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [a3 centerXAnchor];
    id v23 = [v21 centerXAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:0.0];
    id v25 = v24;
    [v25 setActive:1];
  }
  id v26 = [a4 superview];
  if (v26)
  {
    id v27 = v26;
    [a4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [a4 centerXAnchor];
    id v29 = [v27 centerXAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    [v30 setConstant:0.0];
    if (v30)
    {
      id v31 = v30;
      [v31 setActive:1];
    }
  }
  if (a5)
  {
    [a1 addArrangedSubview:a6];
    id v32 = [a6 superview];
    if (v32)
    {
      id v39 = v32;
      [a6 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v33 = [a6 centerXAnchor];
      id v34 = [v39 centerXAnchor];
      id v35 = [v33 constraintEqualToAnchor:v34];

      [v35 setConstant:0.0];
      id v36 = v35;
      [v36 setActive:1];
    }
  }
}

void sub_1005412A4(void *a1)
{
  id v2 = [a1 layer];
  if (qword_1007F73C8 != -1) {
    swift_once();
  }
  [v2 setCornerRadius:*(double *)&qword_10083D9D8];

  id v3 = [a1 layer];
  [v3 setCornerCurve:kCACornerCurveContinuous];

  id v4 = [a1 layer];
  id v5 = [self blackColor];
  id v6 = [v5 CGColor];

  [v4 setShadowColor:v6];
  id v7 = [a1 layer];
  LODWORD(v8) = 1045220557;
  [v7 setShadowOpacity:v8];

  id v9 = [a1 layer];
  [v9 setShadowOffset:0.0, 4.0];

  id v10 = [a1 layer];
  [v10 setShadowRadius:20.0];

  id v11 = [a1 layer];
  [v11 setShadowPathIsBounds:1];
}

void sub_1005414B4(void *a1)
{
  id v2 = [a1 layer];
  id v3 = [self blackColor];
  id v4 = [v3 CGColor];

  [v2 setShadowColor:v4];
  id v5 = [a1 layer];
  LODWORD(v6) = 1045220557;
  [v5 setShadowOpacity:v6];

  id v7 = [a1 layer];
  [v7 setShadowOffset:0.0, 8.0];

  id v8 = [a1 layer];
  [v8 setShadowRadius:12.0];

  id v9 = [a1 layer];
  [v9 setCornerCurve:kCACornerCurveContinuous];

  id v10 = [a1 layer];
  [v10 setShadowPathIsBounds:0];
}

id sub_100541660()
{
  uint64_t v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleTitle2];
  id v2 = [v1 fontDescriptor];
  id v3 = [v1 fontDescriptor];
  unsigned int v4 = [v3 symbolicTraits];

  id v5 = [v2 fontDescriptorWithSymbolicTraits:v4 | 2];
  if (v5)
  {
    id v6 = [v0 fontWithDescriptor:v5 size:0.0];

    if (v6) {
      return v6;
    }
  }
  else
  {
  }
  id v8 = objc_allocWithZone((Class)UIFont);

  return [v8 init];
}

void sub_100541798(void *a1)
{
  id v2 = [a1 layer];
  [v2 setMasksToBounds:0];

  id v3 = [a1 layer];
  id v4 = [self blackColor];
  id v5 = [v4 CGColor];

  [v3 setShadowColor:v5];
  id v6 = [a1 layer];
  LODWORD(v7) = 1028443341;
  [v6 setShadowOpacity:v7];

  id v8 = [a1 layer];
  [v8 setShadowOffset:0.0, 2.0];

  id v9 = [a1 layer];
  [v9 setShadowRadius:16.0];

  id v10 = [a1 layer];
  [v10 setCornerCurve:kCACornerCurveContinuous];

  id v11 = [a1 layer];
  [v11 setShadowPathIsBounds:1];
}

uint64_t sub_100541970()
{
  return swift_deallocObject();
}

uint64_t sub_1005419B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005419C0()
{
  return swift_release();
}

uint64_t sub_1005419E4(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    sub_100041A58(a1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v4 = Hasher._finalize()();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x6F746F6870;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            uint64_t v10 = 0x746F68506576696CLL;
            unint64_t v9 = 0xE90000000000006FLL;
            break;
          case 2:
            uint64_t v10 = 0x6F65646976;
            break;
          case 3:
            uint64_t v10 = 0x636973756DLL;
            break;
          case 4:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x74736163646F70;
            break;
          case 5:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1802465122;
            break;
          case 6:
            uint64_t v10 = 0x6F69647561;
            break;
          case 7:
            uint64_t v10 = 0x7469736976;
            break;
          case 8:
            uint64_t v10 = 0x6E695069746C756DLL;
            unint64_t v9 = 0xEB0000000070614DLL;
            break;
          case 9:
            unint64_t v9 = 0xEA00000000007061;
            uint64_t v10 = 0x4D636972656E6567;
            break;
          case 0xA:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1802398060;
            break;
          case 0xB:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x746361746E6F63;
            break;
          case 0xC:
            uint64_t v10 = 0x4974756F6B726F77;
            unint64_t v9 = 0xEB000000006E6F63;
            break;
          case 0xD:
            uint64_t v10 = 0x5274756F6B726F77;
            unint64_t v9 = 0xEC0000006574756FLL;
            break;
          case 0xE:
            uint64_t v10 = 0x697463656C666572;
            unint64_t v9 = 0xEA00000000006E6FLL;
            break;
          case 0xF:
            uint64_t v10 = 0x4D664F6574617473;
            unint64_t v9 = 0xEB00000000646E69;
            break;
          case 0x10:
            uint64_t v10 = 0x63416E6F69746F6DLL;
            unint64_t v9 = 0xEE00797469766974;
            break;
          case 0x11:
            uint64_t v10 = 0x7261506472696874;
            unint64_t v9 = 0xEF616964654D7974;
            break;
          case 0x12:
            uint64_t v10 = 0x6C6F686563616C70;
            unint64_t v9 = 0xEB00000000726564;
            break;
          case 0x13:
            uint64_t v10 = 0x76456B6165727473;
            unint64_t v9 = 0xEB00000000746E65;
            break;
          case 0x14:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6F746F6870;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE90000000000006FLL;
            if (v10 == 0x746F68506576696CLL) {
              goto LABEL_62;
            }
            goto LABEL_63;
          case 2:
            uint64_t v13 = 1701079414;
            goto LABEL_35;
          case 3:
            if (v10 != 0x636973756DLL) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v14 = 0x736163646F70;
            goto LABEL_45;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1802465122) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 6:
            uint64_t v13 = 1768191329;
LABEL_35:
            if (v10 != (v13 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 7:
            if (v10 != 0x7469736976) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 8:
            uint64_t v15 = 0x6E695069746C756DLL;
            uint64_t v16 = 7364941;
            goto LABEL_58;
          case 9:
            unint64_t v11 = 0xEA00000000007061;
            if (v10 != 0x4D636972656E6567) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 10:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1802398060) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 11:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v14 = 0x6361746E6F63;
LABEL_45:
            if (v10 != (v14 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 12:
            uint64_t v15 = 0x4974756F6B726F77;
            uint64_t v16 = 7237475;
            goto LABEL_58;
          case 13:
            unint64_t v11 = 0xEC0000006574756FLL;
            if (v10 != 0x5274756F6B726F77) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 14:
            unint64_t v11 = 0xEA00000000006E6FLL;
            if (v10 != 0x697463656C666572) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 15:
            uint64_t v15 = 0x4D664F6574617473;
            uint64_t v16 = 6581865;
            goto LABEL_58;
          case 16:
            unint64_t v11 = 0xEE00797469766974;
            if (v10 != 0x63416E6F69746F6DLL) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 17:
            unint64_t v11 = 0xEF616964654D7974;
            if (v10 != 0x7261506472696874) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 18:
            uint64_t v15 = 0x6C6F686563616C70;
            uint64_t v16 = 7497060;
LABEL_58:
            unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            if (v10 != v15) {
              goto LABEL_63;
            }
            goto LABEL_62;
          case 19:
            uint64_t v12 = 0x76456B6165727473;
            unint64_t v11 = 0xEB00000000746E65;
            goto LABEL_61;
          case 20:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x6E776F6E6B6E75) {
              goto LABEL_63;
            }
            goto LABEL_62;
          default:
LABEL_61:
            if (v10 != v12) {
              goto LABEL_63;
            }
LABEL_62:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v17 = 1;
              return v17 & 1;
            }
LABEL_63:
            char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              return v17 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v17 & 1;
            }
            break;
        }
      }
    }
  }
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_100542090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1005421C8(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v3);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1005422B8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v3 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
      if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v17 = v16;
          if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18) {
            break;
          }
          char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100542480(void *a1, uint64_t a2)
{
  return sub_100542A50(a1, a2, (unint64_t *)&unk_10080F9A0);
}

uint64_t sub_100542494(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    sub_10023D224(a1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v4 = Hasher._finalize()();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1954047348;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x64724F7465737361;
            unint64_t v9 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v10 = 0xD000000000000015;
            unint64_t v9 = 0x8000000100685630;
            break;
          case 3:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x656C746974;
            break;
          case 4:
            unint64_t v10 = 0x7461447972746E65;
            unint64_t v9 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v9 = 0xE800000000000000;
            unint64_t v10 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v9 = 0xEA00000000006574;
            unint64_t v10 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v10 = 0x72756F5365746164;
            unint64_t v9 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v9 = 0xE700000000000000;
            unint64_t v10 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v9 = 0x8000000100685680;
            unint64_t v10 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xED0000676E697265;
            if (v10 == 0x64724F7465737361) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            unint64_t v11 = 0x8000000100685630;
            if (v10 != 0xD000000000000015) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x656C746974) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            unint64_t v11 = 0xE900000000000065;
            if (v10 != 0x7461447972746E65) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            if (v10 != 0x6449656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            if (v10 != 0x6144656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 7:
            unint64_t v11 = 0xEA00000000006563;
            if (v10 != 0x72756F5365746164) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x64656767616C66) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x74706D6F7270) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 10:
            unint64_t v11 = 0x8000000100685680;
            unint64_t v12 = 0xD000000000000011;
            goto LABEL_36;
          case 11:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x726568746FLL) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v10 != v12) {
              goto LABEL_38;
            }
LABEL_37:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_38:
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_100542904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    Character.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100542A3C(void *a1, uint64_t a2)
{
  return sub_100542A50(a1, a2, (unint64_t *)&qword_100800A40);
}

uint64_t sub_100542A50(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = a1;
    char v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  sub_10001B284(0, a3);
  id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v10);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v15 = ~v9;
    unint64_t v16 = (v10 + 1) & v15;
    if ((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
    {
      do
      {
        id v17 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          break;
        }
        unint64_t v16 = (v16 + 1) & v15;
      }
      while (((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  char v14 = 1;
  return v14 & 1;
}

int64_t sub_100542BB4(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100542BF8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100811200);
  sub_100026A54(v0, (uint64_t)qword_100811200);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100542CEC(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_100542DE0, v5, v4);
}

uint64_t sub_100542DE0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    swift_bridgeObjectRetain();
    swift_release();
    swift_task_dealloc();
    id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v2(v1);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 40);
    id v7 = [*(id *)(v0 + 32) newBackgroundContext];
    *(void *)(v0 + 88) = v7;
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 96) = v8;
    *(void *)(v8 + 16) = v7;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    v7;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v9;
    uint64_t v10 = sub_100010218(&qword_100802680);
    void *v9 = v0;
    v9[1] = sub_100542F88;
    uint64_t v11 = *(void *)(v0 + 56);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 16, v11, sub_100561E04, v8, v10);
  }
}

uint64_t sub_100542F88()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v4 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100543128, v6, v5);
}

uint64_t sub_100543128()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1005431A4@<X0>(double **a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9BE8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateInterval();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  unint64_t v7 = sub_1002B8584((uint64_t)v5);
  sub_10001457C((uint64_t)v5, &qword_1007F9BE8);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    char v14 = _swiftEmptyArrayStorage;
LABEL_14:
    *a1 = v14;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_13;
  }
LABEL_3:
  id v17 = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = a1;
    uint64_t v16 = v1;
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      id v13 = [v11 managedObjectContext:v15 v16];
      if (!v13) {
        id v13 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      ++v10;
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      sub_10057F170(v12, 0, 0, v13);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v8 != v10);
    char v14 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v15;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_100543404(double a1)
{
  if (qword_1007F7CA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_100811200);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v5 + 56) = &type metadata for Double;
    *(void *)(v5 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v5 + 32) = Current - a1;
    uint64_t v7 = String.init(format:_:)();
    sub_10011EA98(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "ExportManager.export executed in %ss", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100543608(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  v67._object = a3;
  NSString v68 = a5;
  uint64_t v66 = a1;
  v67._countAndFlagsBits = a2;
  uint64_t v5 = type metadata accessor for CharacterSet();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  __chkstk_darwin(v5);
  unint64_t v62 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v61 = (char *)&v58 - v8;
  __chkstk_darwin(v9);
  id v63 = (char *)&v58 - v10;
  uint64_t v60 = sub_100010218((uint64_t *)&unk_100804220);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  unint64_t v58 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date.ISO8601FormatStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v58 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v58 - v20;
  __chkstk_darwin(v22);
  id v24 = (char *)&v58 - v23;
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v66 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v29, v25);
  static FormatStyle<>.iso8601.getter();
  Date.ISO8601FormatStyle.year()();
  id v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v15, v12);
  Date.ISO8601FormatStyle.month()();
  v30(v18, v12);
  Date.ISO8601FormatStyle.day()();
  v30(v21, v12);
  sub_100561E80(&qword_1007FFBC8, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
  Date.formatted<A>(_:)();
  v30(v24, v12);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  id v31 = *(void **)(v66 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (v31)
  {
    id v32 = [v31 string];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    uint64_t v36 = HIBYTE(v35) & 0xF;
    if ((v35 & 0x2000000000000000) == 0) {
      uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
    }
    if (v36)
    {
      v69._countAndFlagsBits = v33;
      v69._object = (void *)v35;
      id v37 = v58;
      Regex.init(_regexString:version:)();
      uint64_t v72 = 95;
      unint64_t v73 = 0xE100000000000000;
      sub_10022BBA0();
      sub_10022BBF4();
      sub_100014488((unint64_t *)&qword_100811230, (uint64_t *)&unk_100804220);
      uint64_t v38 = v60;
      RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v38);
      swift_bridgeObjectRelease();
      Swift::String v69 = v71;
      id v39 = v61;
      static CharacterSet.whitespacesAndNewlines.getter();
      uint64_t v72 = (uint64_t)&off_100791FA8;
      sub_100561E80(&qword_100811238, (void (*)(uint64_t))&type metadata accessor for CharacterSet);
      sub_100010218(&qword_100811240);
      sub_100014488(&qword_100811248, &qword_100811240);
      uint64_t v40 = v62;
      uint64_t v41 = v65;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v42 = v63;
      CharacterSet.union(_:)();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v64 + 8);
      v43(v40, v41);
      v43(v39, v41);
      sub_100014344();
      StringProtocol.trimmingCharacters(in:)();
      v43(v42, v41);
      swift_bridgeObjectRelease();
      sub_10055A870(200);
      swift_bridgeObjectRelease();
      v71._countAndFlagsBits = 95;
      v71._object = (void *)0xE100000000000000;
      v44._countAndFlagsBits = static String._fromSubstring(_:)();
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      String.append(_:)(v71);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v46 = v74;
  unint64_t v45 = v75;
  uint64_t v47 = v68;
  swift_beginAccess();
  uint64_t v72 = v46;
  unint64_t v73 = v45;
  swift_bridgeObjectRetain();
  v69._countAndFlagsBits = 46;
  v69._object = (void *)0xE100000000000000;
  String.append(_:)(v67);
  String.append(_:)(v69);
  swift_bridgeObjectRelease();
  uint64_t v48 = *v47;
  uint64_t v50 = v72;
  uint64_t v49 = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v51 = sub_100542090(v50, v49, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v51)
  {
    swift_bridgeObjectRelease();
    for (Swift::Int i = 1; ; ++i)
    {
      uint64_t v72 = v46;
      unint64_t v73 = v45;
      v69._countAndFlagsBits = 10335;
      v69._object = (void *)0xE200000000000000;
      Swift::Int v70 = i;
      swift_bridgeObjectRetain();
      v53._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v53);
      swift_bridgeObjectRelease();
      v54._countAndFlagsBits = 41;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      String.append(_:)(v69);
      swift_bridgeObjectRelease();
      v69._countAndFlagsBits = 46;
      v69._object = (void *)0xE100000000000000;
      String.append(_:)(v67);
      String.append(_:)(v69);
      swift_bridgeObjectRelease();
      uint64_t v55 = *v68;
      uint64_t v50 = v72;
      uint64_t v49 = v73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v56 = sub_100542090(v50, v49, v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (__OFADD__(i, 1))
      {
        __break(1u);
        return result;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10054BEBC(&v70, v50, v49);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_100543F18(uint64_t a1, char a2)
{
  return sub_100543F30(a1, a2, &qword_1008112C0);
}

uint64_t sub_100543F24(uint64_t a1, char a2)
{
  return sub_100543F30(a1, a2, &qword_10080A720);
}

uint64_t sub_100543F30(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100010218(a3);
  char v36 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    uint64_t v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = *(void **)(*(void *)(v6 + 48) + 8 * v17);
    uint64_t v23 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v17);
    if (v36)
    {
      sub_10002102C(v23, v37);
    }
    else
    {
      sub_10001B648((uint64_t)v23, (uint64_t)v37);
      id v24 = v22;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v25 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v8 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_10002102C(v37, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v19 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100544268(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_10080A220);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_10002102C(v22, v36);
    }
    else
    {
      sub_10001B648((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v24 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_10002102C(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1005445A4(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_10080A6E8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              os_log_type_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      Swift::Int v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10002102C(v24, v35);
      }
      else
      {
        sub_10001B648((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10002102C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1005448A4(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_1008112C8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v12];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v12 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v21 = v32[v12];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v22;
      }
    }
LABEL_30:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_31:
    char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v13 = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x100544DC0);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  os_log_type_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100544E14(uint64_t a1, char a2)
{
  return sub_100547AF0(a1, a2, &qword_100811268);
}

uint64_t sub_100544E20(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_10080A6A8);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          os_log_type_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    char v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  os_log_type_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100545148(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_1008113E0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          os_log_type_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_retain();
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  os_log_type_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100545420(uint64_t a1, int a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100010218((uint64_t *)&unk_100811288);
  int v42 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    id v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    int64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              os_log_type_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_100545844(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v28 = type metadata accessor for AttributedString();
  uint64_t v5 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100010218(&qword_1008112D0);
  char v9 = a2;
  uint64_t v29 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v8 + 16))
  {
    uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v11 = *(void *)(v8 + 64);
    unint64_t v26 = v2;
    uint64_t v27 = (void *)(v8 + 64);
    uint64_t v12 = -1;
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    unint64_t v13 = v12 & v11;
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v18 = v17 | (v16 << 6);
      }
      else
      {
        int64_t v19 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        unint64_t v20 = v27;
        if (v19 >= v14) {
          goto LABEL_23;
        }
        unint64_t v21 = v27[v19];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v19 + 1;
          if (v19 + 1 >= v14) {
            goto LABEL_23;
          }
          unint64_t v21 = v27[v16];
          if (!v21)
          {
            int64_t v22 = v19 + 2;
            if (v22 >= v14)
            {
LABEL_23:
              swift_release();
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v26;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v8 + 32);
              if (v25 >= 64) {
                bzero(v20, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v20 = -1 << v25;
              }
              os_log_type_t v3 = v26;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v27[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_32;
                }
                if (v16 >= v14) {
                  goto LABEL_23;
                }
                unint64_t v21 = v27[v16];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v16 = v22;
          }
        }
LABEL_20:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v18 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      char v23 = *(unsigned char *)(*(void *)(v8 + 48) + v18);
      unint64_t v24 = *(void *)(v8 + 56) + *(void *)(v5 + 72) * v18;
      if (v9) {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 32))(v7, v24, v28);
      }
      else {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v24, v28);
      }
      uint64_t result = sub_1005486DC(v23, (uint64_t)v7, v29);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  void *v3 = v29;
  return result;
}

unint64_t sub_100545B04(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_1008112D8);
  uint64_t v6 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    unint64_t v24 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              os_log_type_t v3 = v24;
              if (a2)
              {
                uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
                if (v23 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v23;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      unint64_t v20 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v15);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_100548898(v19, v21, v22, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_100545D00(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218((uint64_t *)&unk_10080A7C0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v23 >= v12) {
          goto LABEL_39;
        }
        unint64_t v24 = v32[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v12) {
            goto LABEL_39;
          }
          unint64_t v24 = v32[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v2;
                goto LABEL_46;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v32 = -1 << v31;
              }
              os_log_type_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v32[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v12) {
                  goto LABEL_39;
                }
                unint64_t v24 = v32[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v33 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v22);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      Hasher.init(_seed:)();
      if ((v33 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = v33;
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      Hasher._combine(_:)(v14);
      if ((*((void *)&v33 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v15 = *((void *)&v33 + 1);
      }
      else {
        Swift::UInt64 v15 = 0;
      }
      Hasher._combine(_:)(v15);
      uint64_t result = Hasher._finalize()();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v33;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v33;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v19) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100545FFC(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_10080A780);
  char v43 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v41 = (void *)(v5 + 64);
    uint64_t v42 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v23 >= v40) {
          goto LABEL_39;
        }
        unint64_t v24 = v41[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_39;
          }
          unint64_t v24 = v41[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_39:
              if ((v43 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v2;
                goto LABEL_46;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
              if (v39 >= 64) {
                bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v41 = -1 << v39;
              }
              os_log_type_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v40) {
                  goto LABEL_39;
                }
                unint64_t v24 = v41[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v30 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v31 = *(void *)(v5 + 56) + 104 * v22;
      long long v47 = *(_OWORD *)v31;
      long long v48 = *(_OWORD *)(v31 + 16);
      long long v49 = v30;
      char v32 = *(unsigned char *)(v31 + 32);
      uint64_t v33 = *(void *)(v31 + 40);
      uint64_t v34 = *(void *)(v31 + 48);
      char v46 = *(unsigned char *)(v31 + 56);
      uint64_t v35 = *(void *)(v31 + 72);
      uint64_t v36 = *(void *)(v31 + 80);
      uint64_t v37 = *(void *)(v31 + 96);
      uint64_t v44 = *(void *)(v31 + 88);
      uint64_t v45 = *(void *)(v31 + 64);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v38 = (id)v48;
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      if ((v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v49;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      Hasher._combine(_:)(v13);
      if ((*((void *)&v49 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = *((void *)&v49 + 1);
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      Hasher._combine(_:)(v14);
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        long long v19 = v49;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        long long v19 = v49;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
      uint64_t v20 = *(void *)(v7 + 56) + 104 * v18;
      *(_OWORD *)uint64_t v20 = v47;
      *(_OWORD *)(v20 + 16) = v48;
      *(unsigned char *)(v20 + 32) = v32;
      *(void *)(v20 + 40) = v33;
      *(void *)(v20 + 48) = v34;
      *(unsigned char *)(v20 + 56) = v46;
      *(void *)(v20 + 64) = v45;
      *(void *)(v20 + 72) = v35;
      *(void *)(v20 + 80) = v36;
      *(void *)(v20 + 88) = v44;
      *(void *)(v20 + 96) = v37;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v42;
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10054639C(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_100811348);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  char v33 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v2;
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v15) >> 6;
    while (++v17 != v26 || (v25 & 1) == 0)
    {
      BOOL v27 = v17 == v26;
      if (v17 == v26) {
        unint64_t v17 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v12 + 8 * v17);
      if (v28 != -1)
      {
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
        *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
        *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
        ++*(void *)(v7 + 16);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    JUMPOUT(0x100546768);
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_40;
  }
  if (v21 >= v11)
  {
    swift_release();
    os_log_type_t v3 = v34;
    unint64_t v22 = (void *)(v5 + 64);
    if (v33)
    {
LABEL_35:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_32;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_41;
          }
          if (v13 >= v11) {
            goto LABEL_32;
          }
          unint64_t v23 = *(void *)(v35 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_32:
    swift_release();
    os_log_type_t v3 = v34;
    if (v33) {
      goto LABEL_35;
    }
  }
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10054678C(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_100811370);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    uint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              os_log_type_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100546A34(uint64_t a1, int a2)
{
  return sub_100546A9C(a1, a2, _s4YearVMa, (uint64_t *)&unk_100811380, _s4YearVMa);
}

uint64_t sub_100546A68(uint64_t a1, int a2)
{
  return sub_100546A9C(a1, a2, _s5MonthVMa, &qword_100811378, _s5MonthVMa);
}

uint64_t sub_100546A9C(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  int64_t v8 = v5;
  uint64_t v10 = a3(0);
  uint64_t v43 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *v5;
  sub_100010218(a4);
  int v44 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v15 = result;
  if (*(void *)(v13 + 16))
  {
    int64_t v40 = v8;
    int64_t v16 = 0;
    uint64_t v17 = *(void *)(v13 + 64);
    uint64_t v42 = (void *)(v13 + 64);
    uint64_t v18 = 1 << *(unsigned char *)(v13 + 32);
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v20 = v19 & v17;
    int64_t v41 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v21 = result + 64;
    while (1)
    {
      if (v20)
      {
        unint64_t v23 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        unint64_t v24 = v23 | (v16 << 6);
      }
      else
      {
        int64_t v25 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v42;
        if (v25 >= v41) {
          goto LABEL_34;
        }
        unint64_t v26 = v42[v25];
        ++v16;
        if (!v26)
        {
          int64_t v16 = v25 + 1;
          if (v25 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v26 = v42[v16];
          if (!v26)
          {
            int64_t v27 = v25 + 2;
            if (v27 >= v41)
            {
LABEL_34:
              if ((v44 & 1) == 0)
              {
                uint64_t result = swift_release();
                int64_t v8 = v40;
                goto LABEL_41;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v13 + 32);
              if (v38 >= 64) {
                bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v42 = -1 << v38;
              }
              int64_t v8 = v40;
              *(void *)(v13 + 16) = 0;
              break;
            }
            unint64_t v26 = v42[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v16 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_43;
                }
                if (v16 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v26 = v42[v16];
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v27;
          }
        }
LABEL_21:
        unint64_t v20 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v16 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v13 + 48) + 8 * v24);
      uint64_t v29 = *(void *)(v43 + 72);
      uint64_t v30 = *(void *)(v13 + 56) + v29 * v24;
      if (v44) {
        sub_100561EC8(v30, (uint64_t)v12, a5);
      }
      else {
        sub_100561F30(v30, (uint64_t)v12, a5);
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v31 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v21 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v22 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v15 + 48) + 8 * v22) = v28;
      uint64_t result = sub_100561EC8((uint64_t)v12, *(void *)(v15 + 56) + v29 * v22, a5);
      ++*(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v8 = v15;
  return result;
}

unint64_t sub_100546E04(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_100811350);
  uint64_t v6 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    int64_t v25 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              os_log_type_t v3 = v25;
              if (a2)
              {
                uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
                if (v24 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v24;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = *(void **)(*(void *)(v5 + 48) + 8 * v15);
      uint64_t v20 = *(void *)(v5 + 56) + 16 * v15;
      uint64_t v21 = *(void **)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      if ((a2 & 1) == 0)
      {
        sub_10001DFB8(v19);
        id v23 = v21;
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_100548A1C(v19, (uint64_t)v21, v22, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_10054700C(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_1008113D8);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v23 >= v12) {
          goto LABEL_39;
        }
        unint64_t v24 = v33[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v12) {
            goto LABEL_39;
          }
          unint64_t v24 = v33[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v2;
                goto LABEL_46;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v33 = -1 << v32;
              }
              os_log_type_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v33[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v12) {
                  goto LABEL_39;
                }
                unint64_t v24 = v33[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v22);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      Hasher.init(_seed:)();
      if ((v34 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = v34;
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      Hasher._combine(_:)(v14);
      if ((*((void *)&v34 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v15 = *((void *)&v34 + 1);
      }
      else {
        Swift::UInt64 v15 = 0;
      }
      Hasher._combine(_:)(v15);
      uint64_t result = Hasher._finalize()();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v34;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v34;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v19) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_100547308(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_1008113D0);
  uint64_t v6 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_100548B80(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_1005474EC(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_10080A798);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v31 = -1 << v29;
              }
              os_log_type_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1005477B8(uint64_t a1, char a2)
{
  return sub_1005477D0(a1, a2, (uint64_t *)&unk_1008113F0);
}

uint64_t sub_1005477C4(uint64_t a1, char a2)
{
  return sub_1005477D0(a1, a2, &qword_1008113E8);
}

uint64_t sub_1005477D0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100010218(a3);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    int64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100547AE4(uint64_t a1, char a2)
{
  return sub_100547AF0(a1, a2, (uint64_t *)&unk_1008112A0);
}

uint64_t sub_100547AF0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100010218(a3);
  char v39 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    int64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100547DFC(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218(&qword_10080A770);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v32 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v32;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v31;
              }
              os_log_type_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
      {
        id v30 = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1005480DC(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218((uint64_t *)&unk_1008113B0);
  char v43 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v42 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_33:
          swift_release();
          os_log_type_t v3 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v42 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v42 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v36 = *(void **)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v38 = v36;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = *(void *)(v7 + 56) + v18;
    *(void *)uint64_t v20 = v36;
    *(unsigned char *)(v20 + 8) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  os_log_type_t v3 = v40;
  int64_t v24 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100548408(uint64_t a1, char a2)
{
  os_log_type_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100010218((uint64_t *)&unk_100811430);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                os_log_type_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              os_log_type_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1005486DC(char a1, uint64_t a2, void *a3)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t v6 = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  *(unsigned char *)(a3[6] + v6) = a1;
  uint64_t v7 = a3[7];
  uint64_t v8 = type metadata accessor for AttributedString();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * v6, a2, v8);
  ++a3[2];
  return result;
}

unint64_t sub_100548898(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a1;
  uint64_t v9 = (void *)(a4[7] + 16 * result);
  void *v9 = a2;
  v9[1] = a3;
  ++a4[2];
  return result;
}

unint64_t sub_100548A1C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  Hasher.init(_seed:)();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v8 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v8 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v8 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v8 = 3;
LABEL_7:
      Hasher._combine(_:)(v8);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v9 = a1;
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10001DFA8(a1);
      break;
  }
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a1;
  unint64_t v11 = (void *)(a4[7] + 16 * result);
  *unint64_t v11 = a2;
  v11[1] = a3;
  ++a4[2];
  return result;
}

unint64_t sub_100548B80(char a1, uint64_t a2, void *a3)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

id sub_100548CF4()
{
  return sub_100548D18(&qword_1008112C0);
}

id sub_100548D00()
{
  return sub_100548D18(&qword_10080A720);
}

id sub_100548D0C()
{
  return sub_100548D18(&qword_10080A220);
}

id sub_100548D18(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100010218(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_10001B648(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_10002102C(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100548ED8()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_10080A6E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10001B648(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_10002102C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005490C0()
{
  return sub_10054A838(&qword_1008112C8);
}

id sub_1005490CC()
{
  return sub_10054AD4C(&qword_100811268);
}

void *sub_1005490D8()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_10080A6A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100549294()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_1008113E0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100549440()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_100811288);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1005496D4()
{
  uint64_t v1 = type metadata accessor for AttributedString();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218(&qword_1008112D0);
  uint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100549960()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_1008112D8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    char v16 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    unint64_t v19 = (void *)(*(void *)(v4 + 56) + 16 * v15);
    *unint64_t v19 = v18;
    v19[1] = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100549B0C()
{
  uint64_t v1 = v0;
  sub_100010218((uint64_t *)&unk_10080A7C0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100549CB4()
{
  sub_100010218(&qword_10080A780);
  uint64_t v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v35 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v5 + 8 * v8);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v33 - 1) & v33;
    unint64_t v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = 104 * v14;
    uint64_t v17 = *(void *)(v1 + 56) + v16;
    char v18 = *(unsigned char *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 40);
    uint64_t v20 = *(void *)(v17 + 48);
    char v21 = *(unsigned char *)(v17 + 56);
    uint64_t v23 = *(void *)(v17 + 64);
    uint64_t v22 = *(void *)(v17 + 72);
    uint64_t v24 = *(void *)(v17 + 80);
    uint64_t v25 = *(void *)(v17 + 88);
    uint64_t v26 = *(void *)(v17 + 96);
    long long v28 = *(_OWORD *)v17;
    long long v27 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)(*(void *)(v3 + 48) + v15) = *(_OWORD *)(*(void *)(v1 + 48) + v15);
    uint64_t v29 = *(void *)(v3 + 56) + v16;
    *(_OWORD *)uint64_t v29 = v28;
    *(_OWORD *)(v29 + 16) = v27;
    *(unsigned char *)(v29 + 32) = v18;
    *(void *)(v29 + 40) = v19;
    *(void *)(v29 + 48) = v20;
    *(unsigned char *)(v29 + 56) = v21;
    *(void *)(v29 + 64) = v23;
    *(void *)(v29 + 72) = v22;
    *(void *)(v29 + 80) = v24;
    *(void *)(v29 + 88) = v25;
    *(void *)(v29 + 96) = v26;
    uint64_t v30 = (void *)v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v30;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v12) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v5 + 8 * v34);
  if (v33)
  {
    int64_t v8 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v8);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100549EC8()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_100811348);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10054A058()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_100811370);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10054A1E8()
{
  return sub_10054A250(_s4YearVMa, (uint64_t *)&unk_100811380, _s4YearVMa);
}

void *sub_10054A21C()
{
  return sub_10054A250(_s5MonthVMa, &qword_100811378, _s5MonthVMa);
}

void *sub_10054A250(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  sub_100010218(a2);
  uint64_t v10 = *v3;
  uint64_t v11 = static _DictionaryStorage.copy(original:)();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  uint64_t v30 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v31 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v16;
    if (!v27)
    {
      int64_t v16 = v26 + 1;
      if (v26 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v16);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 8 * v22;
    uint64_t v24 = *(void *)(*(void *)(v10 + 48) + 8 * v22);
    unint64_t v25 = *(void *)(v32 + 72) * v22;
    sub_100561F30(*(void *)(v10 + 56) + v25, (uint64_t)v9, a3);
    *(void *)(*(void *)(v12 + 48) + v23) = v24;
    id result = (void *)sub_100561EC8((uint64_t)v9, *(void *)(v12 + 56) + v25, a3);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v16 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v16);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10054A4B8()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_100811350);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v23;
    sub_10001DFB8(v17);
    id v19 = (id)v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10054A684()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_1008113D8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10054A82C()
{
  return sub_10054A838(&qword_1008113D0);
}

void *sub_10054A838(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100010218(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10054A9D4()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_10080A798);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10054AB78()
{
  return sub_10054AB90((uint64_t *)&unk_1008113F0);
}

void *sub_10054AB84()
{
  return sub_10054AB90(&qword_1008113E8);
}

void *sub_10054AB90(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100010218(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10054AD40()
{
  return sub_10054AD4C((uint64_t *)&unk_1008112A0);
}

id sub_10054AD4C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100010218(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10054AEF8()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_10080A770);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id v20 = v17;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10054B0C4()
{
  uint64_t v1 = v0;
  sub_100010218((uint64_t *)&unk_1008113B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    int64_t v21 = *(void **)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 8);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v22 = v19;
    v22[1] = v18;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v23 = v21;
    *(unsigned char *)(v23 + 8) = v20;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10054B284(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100561E80(&qword_1007FDCA8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100561E80((unint64_t *)&unk_100811330, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1005523E8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10054B5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _s14SuggestionInfoVMa(0);
  uint64_t v24 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = *v2;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    char v21 = v11;
    unint64_t v22 = v2;
    uint64_t v23 = a1;
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v24 + 72);
    do
    {
      sub_100561F30(*(void *)(v12 + 48) + v17 * v15, (uint64_t)v8, _s14SuggestionInfoVMa);
      if (static UUID.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        sub_100561E20((uint64_t)v8, _s14SuggestionInfoVMa);
        swift_bridgeObjectRelease();
        sub_100561E20(a2, _s14SuggestionInfoVMa);
        sub_100561F30(*(void *)(*v22 + 48) + v17 * v15, v23, _s14SuggestionInfoVMa);
        return 0;
      }
      sub_100561E20((uint64_t)v8, _s14SuggestionInfoVMa);
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    swift_bridgeObjectRelease();
    uint64_t v3 = v22;
    a1 = v23;
    uint64_t v11 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100561F30(a2, (uint64_t)v11, _s14SuggestionInfoVMa);
  uint64_t v25 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  sub_1005526A4((uint64_t)v11, v15, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v25;
  swift_bridgeObjectRelease();
  sub_100561EC8(a2, a1, _s14SuggestionInfoVMa);
  return 1;
}

uint64_t sub_10054B920(unsigned char *a1, Swift::Int a2)
{
  return sub_10054DCD8(a1, a2, &qword_100811340);
}

uint64_t sub_10054B934(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100561E80((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1005529E8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10054BC58(void *a1, void *a2)
{
  return sub_10054D504(a1, a2, (unint64_t *)&qword_100811410, (uint64_t)HKSampleType_ptr, &qword_100811418);
}

uint64_t sub_10054BC74(_OWORD *a1, double a2, double a3)
{
  uint64_t v5 = *v3;
  Hasher.init(_seed:)();
  CLLocationCoordinate2D.hash(into:)(a2, a3);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = (double *)(*(void *)(v5 + 48) + 16 * v8);
      if (*v10 == a2 && v10[1] == a3) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    long long v13 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v8);
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100552CA4(v8, isUniquelyReferenced_nonNull_native, a2, a3);
    uint64_t *v3 = v17;
    swift_bridgeObjectRelease();
    *(double *)&long long v13 = a2;
    *((double *)&v13 + 1) = a3;
    uint64_t result = 1;
  }
  *a1 = v13;
  return result;
}

uint64_t sub_10054BD9C(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100552DFC(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10054BEBC(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100552F5C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10054C06C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100561E80((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1005530F8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10054C390(void *a1, void *a2)
{
  return sub_10054D504(a1, a2, (unint64_t *)&qword_100800A40, (uint64_t)NSManagedObjectID_ptr, &qword_1007FDD48);
}

uint64_t sub_10054C3AC(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  sub_100041A58(a2);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_67:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100553548(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_70;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE500000000000000;
    uint64_t v10 = 0x6F746F6870;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        uint64_t v10 = 0x746F68506576696CLL;
        unint64_t v9 = 0xE90000000000006FLL;
        break;
      case 2:
        uint64_t v10 = 0x6F65646976;
        break;
      case 3:
        uint64_t v10 = 0x636973756DLL;
        break;
      case 4:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x74736163646F70;
        break;
      case 5:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1802465122;
        break;
      case 6:
        uint64_t v10 = 0x6F69647561;
        break;
      case 7:
        uint64_t v10 = 0x7469736976;
        break;
      case 8:
        uint64_t v10 = 0x6E695069746C756DLL;
        unint64_t v9 = 0xEB0000000070614DLL;
        break;
      case 9:
        unint64_t v9 = 0xEA00000000007061;
        uint64_t v10 = 0x4D636972656E6567;
        break;
      case 0xA:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1802398060;
        break;
      case 0xB:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x746361746E6F63;
        break;
      case 0xC:
        uint64_t v10 = 0x4974756F6B726F77;
        unint64_t v9 = 0xEB000000006E6F63;
        break;
      case 0xD:
        uint64_t v10 = 0x5274756F6B726F77;
        unint64_t v9 = 0xEC0000006574756FLL;
        break;
      case 0xE:
        uint64_t v10 = 0x697463656C666572;
        unint64_t v9 = 0xEA00000000006E6FLL;
        break;
      case 0xF:
        uint64_t v10 = 0x4D664F6574617473;
        unint64_t v9 = 0xEB00000000646E69;
        break;
      case 0x10:
        uint64_t v10 = 0x63416E6F69746F6DLL;
        unint64_t v9 = 0xEE00797469766974;
        break;
      case 0x11:
        uint64_t v10 = 0x7261506472696874;
        unint64_t v9 = 0xEF616964654D7974;
        break;
      case 0x12:
        uint64_t v10 = 0x6C6F686563616C70;
        unint64_t v9 = 0xEB00000000726564;
        break;
      case 0x13:
        uint64_t v10 = 0x76456B6165727473;
        unint64_t v9 = 0xEB00000000746E65;
        break;
      case 0x14:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE500000000000000;
    uint64_t v12 = 0x6F746F6870;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xE90000000000006FLL;
        if (v10 == 0x746F68506576696CLL) {
          goto LABEL_61;
        }
        goto LABEL_62;
      case 2:
        uint64_t v13 = 1701079414;
        goto LABEL_34;
      case 3:
        if (v10 != 0x636973756DLL) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 4:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v14 = 0x736163646F70;
        goto LABEL_44;
      case 5:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1802465122) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 6:
        uint64_t v13 = 1768191329;
LABEL_34:
        if (v10 != (v13 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 7:
        if (v10 != 0x7469736976) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 8:
        uint64_t v15 = 0x6E695069746C756DLL;
        uint64_t v16 = 7364941;
        goto LABEL_57;
      case 9:
        unint64_t v11 = 0xEA00000000007061;
        if (v10 != 0x4D636972656E6567) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 10:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1802398060) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 11:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v14 = 0x6361746E6F63;
LABEL_44:
        if (v10 != (v14 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 12:
        uint64_t v15 = 0x4974756F6B726F77;
        uint64_t v16 = 7237475;
        goto LABEL_57;
      case 13:
        unint64_t v11 = 0xEC0000006574756FLL;
        if (v10 != 0x5274756F6B726F77) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 14:
        unint64_t v11 = 0xEA00000000006E6FLL;
        if (v10 != 0x697463656C666572) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 15:
        uint64_t v15 = 0x4D664F6574617473;
        uint64_t v16 = 6581865;
        goto LABEL_57;
      case 16:
        unint64_t v11 = 0xEE00797469766974;
        if (v10 != 0x63416E6F69746F6DLL) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 17:
        unint64_t v11 = 0xEF616964654D7974;
        if (v10 != 0x7261506472696874) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 18:
        uint64_t v15 = 0x6C6F686563616C70;
        uint64_t v16 = 7497060;
LABEL_57:
        unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        if (v10 != v15) {
          goto LABEL_62;
        }
        goto LABEL_61;
      case 19:
        uint64_t v12 = 0x76456B6165727473;
        unint64_t v11 = 0xEB00000000746E65;
        goto LABEL_60;
      case 20:
        unint64_t v11 = 0xE700000000000000;
        if (v10 != 0x6E776F6E6B6E75) {
          goto LABEL_62;
        }
        goto LABEL_61;
      default:
LABEL_60:
        if (v10 != v12) {
          goto LABEL_62;
        }
LABEL_61:
        if (v9 != v11)
        {
LABEL_62:
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_69;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_67;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_69:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_70:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_10054CAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v19 = v2;
    uint64_t v20 = a2;
    uint64_t v21 = a1;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v22 + 72);
    while (1)
    {
      sub_100561F30(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
      char v15 = static UUID.== infix(_:_:)();
      sub_100561E20((uint64_t)v8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v20;
        a1 = v21;
        uint64_t v3 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_100561E20(v20, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    sub_100561F30(*(void *)(*v19 + 48) + v14 * v12, v21, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100561F30(a2, (uint64_t)v8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    uint64_t v23 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100553C60((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v23;
    swift_bridgeObjectRelease();
    sub_100561EC8(a2, a1, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    return 1;
  }
}

uint64_t sub_10054CDB0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Transcriber.TranscriptionOption();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100561E80((unint64_t *)&unk_1008112E0, (void (*)(uint64_t))&type metadata accessor for Transcriber.TranscriptionOption);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    char v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100561E80(&qword_1007FDD30, (void (*)(uint64_t))&type metadata accessor for Transcriber.TranscriptionOption);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100553F24((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10054D0D4(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain();
  }
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1005541E0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = ~v9;
  uint64_t v12 = *(void *)(v7 + 48);
  while (1)
  {
    unint64_t v13 = (void *)(v12 + 16 * v10);
    uint64_t v14 = v13[1];
    if (v14) {
      break;
    }
    if (!a3) {
      goto LABEL_16;
    }
LABEL_7:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_17;
    }
  }
  if (!a3) {
    goto LABEL_7;
  }
  BOOL v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v16 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
  Swift::Int v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_10054D2A0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    void *v3 = 0x8000000000000000;
    id v24 = a2;
    sub_100554398((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    void *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;
        if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  int64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_10054D4CC(void *a1, void *a2)
{
  return sub_10054D504(a1, a2, &qword_1008113A0, (uint64_t)NSManagedObject_ptr, &qword_1008113A8);
}

uint64_t sub_10054D4E8(void *a1, void *a2)
{
  return sub_10054D504(a1, a2, (unint64_t *)&unk_10080F9A0, (uint64_t)CKRecordID_ptr, (uint64_t *)&unk_1008113C0);
}

uint64_t sub_10054D504(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = __CocoaSet.member(for:)();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_10001B284(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_10054E1E8(v12, result + 1, a5, a3);
    id v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_1005513EC(v33, a5);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = (void *)v27;
      id v30 = v13;
    }
    sub_100552364((uint64_t)v13, v29);
    uint64_t *v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = NSObject._rawHashValue(seed:)(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_10001B284(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = static NSObject.== infix(_:_:)();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    uint64_t *v8 = 0x8000000000000000;
    id v32 = a2;
    sub_1005533B4((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    uint64_t *v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

uint64_t sub_10054D7D0(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  sub_10023D224(a2);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1005545D8(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_46;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE400000000000000;
    unint64_t v10 = 1954047348;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x64724F7465737361;
        unint64_t v9 = 0xED0000676E697265;
        break;
      case 2:
        unint64_t v10 = 0xD000000000000015;
        unint64_t v9 = 0x8000000100685630;
        break;
      case 3:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x656C746974;
        break;
      case 4:
        unint64_t v10 = 0x7461447972746E65;
        unint64_t v9 = 0xE900000000000065;
        break;
      case 5:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x6449656C646E7562;
        break;
      case 6:
        unint64_t v9 = 0xEA00000000006574;
        unint64_t v10 = 0x6144656C646E7562;
        break;
      case 7:
        unint64_t v10 = 0x72756F5365746164;
        unint64_t v9 = 0xEA00000000006563;
        break;
      case 8:
        unint64_t v9 = 0xE700000000000000;
        unint64_t v10 = 0x64656767616C66;
        break;
      case 9:
        unint64_t v9 = 0xE600000000000000;
        unint64_t v10 = 0x74706D6F7270;
        break;
      case 0xA:
        unint64_t v9 = 0x8000000100685680;
        unint64_t v10 = 0xD000000000000011;
        break;
      case 0xB:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x726568746FLL;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE400000000000000;
    unint64_t v12 = 1954047348;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xED0000676E697265;
        if (v10 == 0x64724F7465737361) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        unint64_t v11 = 0x8000000100685630;
        if (v10 != 0xD000000000000015) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x656C746974) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        unint64_t v11 = 0xE900000000000065;
        if (v10 != 0x7461447972746E65) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 5:
        unint64_t v11 = 0xE800000000000000;
        if (v10 != 0x6449656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 6:
        unint64_t v11 = 0xEA00000000006574;
        if (v10 != 0x6144656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 7:
        unint64_t v11 = 0xEA00000000006563;
        if (v10 != 0x72756F5365746164) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 8:
        unint64_t v11 = 0xE700000000000000;
        if (v10 != 0x64656767616C66) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 9:
        unint64_t v11 = 0xE600000000000000;
        if (v10 != 0x74706D6F7270) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 10:
        unint64_t v11 = 0x8000000100685680;
        unint64_t v12 = 0xD000000000000011;
        goto LABEL_35;
      case 11:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x726568746FLL) {
          goto LABEL_37;
        }
        goto LABEL_36;
      default:
LABEL_35:
        if (v10 != v12) {
          goto LABEL_37;
        }
LABEL_36:
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_45;
        }
LABEL_37:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_45:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_46:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_10054DCC4(unsigned char *a1, Swift::Int a2)
{
  return sub_10054DCD8(a1, a2, &qword_1007FDC48);
}

uint64_t sub_10054DCD8(unsigned char *a1, Swift::Int a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100554AE4(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    uint64_t *v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10054DE10(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    void *v3 = 0x8000000000000000;
    id v24 = a2;
    sub_100554C40((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    void *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;
        if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  id v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_10054E03C(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Character.hash(into:)();
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a2 && v14[1] == a3;
    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v16 = (Swift::Int *)(*(void *)(*v4 + 48) + 16 * v11);
      Swift::Int v17 = v16[1];
      *a1 = *v16;
      a1[1] = v17;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v19 = ~v10;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v19;
      if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v13 + 16 * v11);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100554E80(a2, a3, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

Swift::Int sub_10054E1CC(uint64_t a1, uint64_t a2)
{
  return sub_10054E1E8(a1, a2, &qword_1007FDD48, (unint64_t *)&qword_100800A40);
}

Swift::Int sub_10054E1E8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_100010218(a3);
    uint64_t v6 = static _SetStorage.convert(_:capacity:)();
    uint64_t v19 = v6;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10001B284(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_1005513EC(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

uint64_t sub_10054E3EC()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Calendar.Component();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100010218(&qword_1007FDCA0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    char v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100561E80(&qword_1007FDCA8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10054E7E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s14SuggestionInfoVMa(0);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100010218(&qword_100811280);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    BOOL v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    char v30 = v0;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_100561EC8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, _s14SuggestionInfoVMa);
      Hasher.init(_seed:)();
      type metadata accessor for UUID();
      sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for Date();
      sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
      dispatch thunk of Hashable.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_100561EC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, _s14SuggestionInfoVMa);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_10054EC30()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100010218(&qword_100811298);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10054F02C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218((uint64_t *)&unk_1008112B0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v5 << 6);
      }
      else
      {
        int64_t v16 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        if (v16 >= v10) {
          goto LABEL_39;
        }
        unint64_t v17 = v6[v16];
        ++v5;
        if (!v17)
        {
          int64_t v5 = v16 + 1;
          if (v16 + 1 >= v10) {
            goto LABEL_39;
          }
          unint64_t v17 = v6[v5];
          if (!v17)
          {
            int64_t v5 = v16 + 2;
            if (v16 + 2 >= v10) {
              goto LABEL_39;
            }
            unint64_t v17 = v6[v5];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v10)
              {
LABEL_39:
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v31;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v5 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_45;
                  }
                  if (v5 >= v10) {
                    goto LABEL_39;
                  }
                  unint64_t v17 = v6[v5];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v5 << 6);
      }
      int64_t v19 = (Swift::UInt64 *)(*(void *)(v2 + 48) + 16 * v15);
      Swift::UInt64 v20 = *v19;
      Swift::UInt64 v21 = v19[1];
      Hasher.init(_seed:)();
      if ((v20 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v22 = v20;
      }
      else {
        Swift::UInt64 v22 = 0;
      }
      Hasher._combine(_:)(v22);
      if ((v21 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v23 = v21;
      }
      else {
        Swift::UInt64 v23 = 0;
      }
      Hasher._combine(_:)(v23);
      uint64_t result = Hasher._finalize()();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (Swift::UInt64 *)(*(void *)(v4 + 48) + 16 * v12);
      Swift::UInt64 *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10054F300()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218((uint64_t *)&unk_100811310);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v18);
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10054F5AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DatePickerDataProvider.MediaDate();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100010218(&qword_100811408);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v30 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    BOOL v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_100561EC8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
      Hasher.init(_seed:)();
      type metadata accessor for Date();
      sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
      dispatch thunk of Hashable.hash(into:)();
      Hasher._combine(_:)(v4[*(int *)(v34 + 20)]);
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_100561EC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_10054F9AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218((uint64_t *)&unk_100811250);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10054FC8C()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100010218(&qword_100811400);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_100550088()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811260);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x100550584);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1005505D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100010218((uint64_t *)&unk_100811320);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v30 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    BOOL v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_100561EC8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
      Hasher.init(_seed:)();
      type metadata accessor for UUID();
      sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_100561EC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_1005509D0()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Transcriber.TranscriptionOption();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100010218((uint64_t *)&unk_1008112F0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100561E80((unint64_t *)&unk_1008112E0, (void (*)(uint64_t))&type metadata accessor for Transcriber.TranscriptionOption);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_100550DCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811390);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_36;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_36;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_42;
                  }
                  if (v11 >= v8) {
                    goto LABEL_36;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      Hasher.init(_seed:)();
      if (v20)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1005510D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811358);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    BOOL v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1005513EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100010218(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_100551688()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811398);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x100551AA8);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100551AD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100010218(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    unint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v20);
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_100551D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811360);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100552094()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811368);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::Int v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      Hasher.init(_seed:)();
      Character.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
      *unint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_100552364(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1005523E8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10054E3EC();
  }
  else
  {
    if (v12 > v11)
    {
      sub_100555628((uint64_t (*)(void))&type metadata accessor for Calendar.Component, &qword_1007FDCA0);
      goto LABEL_12;
    }
    sub_100555F78();
  }
  uint64_t v13 = *v3;
  sub_100561E80(&qword_1007FDCA8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    Swift::Int v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100561E80((unint64_t *)&unk_100811330, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1005526A4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = _s14SuggestionInfoVMa(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v23 = v3;
  if (v12 <= v11 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_10054E7E8();
    }
    else
    {
      if (v12 > v11)
      {
        uint64_t v13 = v8;
        sub_100555208(_s14SuggestionInfoVMa, &qword_100811280, _s14SuggestionInfoVMa);
        goto LABEL_15;
      }
      sub_100556328();
    }
    uint64_t v14 = *v3;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    type metadata accessor for Date();
    sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    Swift::Int v15 = Hasher._finalize()();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v8 = *(void *)(v8 + 72);
      while (1)
      {
        sub_100561F30(*(void *)(v14 + 48) + v8 * a2, (uint64_t)v10, _s14SuggestionInfoVMa);
        if (static UUID.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)()) {
          break;
        }
        sub_100561E20((uint64_t)v10, _s14SuggestionInfoVMa);
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_15;
        }
      }
      sub_100561E20((uint64_t)v10, _s14SuggestionInfoVMa);
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
  }
  uint64_t v13 = v8;
LABEL_15:
  uint64_t v18 = *v23;
  *(void *)(*v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_100561EC8(a1, *(void *)(v18 + 48) + *(void *)(v13 + 72) * a2, _s14SuggestionInfoVMa);
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    *(void *)(v18 + 16) = v22;
  }
  return result;
}

uint64_t sub_1005529E8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10054EC30();
  }
  else
  {
    if (v12 > v11)
    {
      sub_100555628((uint64_t (*)(void))&type metadata accessor for UUID, &qword_100811298);
      goto LABEL_12;
    }
    sub_100556738();
  }
  uint64_t v13 = *v3;
  sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100561E80((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_100552CA4(Swift::Int result, char a2, double a3, double a4)
{
  unint64_t v5 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a2 & 1) != 0) {
    goto LABEL_15;
  }
  if (a2)
  {
    sub_10054F02C();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_10055503C();
      goto LABEL_15;
    }
    sub_100556AE8();
  }
  uint64_t v10 = *v4;
  Hasher.init(_seed:)();
  CLLocationCoordinate2D.hash(into:)(a3, a4);
  uint64_t result = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v5 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = (double *)(*(void *)(v10 + 48) + 16 * v5);
      if (*v13 == a3 && v13[1] == a4) {
        goto LABEL_18;
      }
      unint64_t v5 = (v5 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
LABEL_15:
  uint64_t v15 = *v4;
  *(void *)(*v4 + 8 * (v5 >> 6) + 56) |= 1 << v5;
  uint64_t v16 = (double *)(*(void *)(v15 + 48) + 16 * v5);
  *uint64_t v16 = a3;
  v16[1] = a4;
  uint64_t v17 = *(void *)(v15 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (!v18)
  {
    *(void *)(v15 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_18:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_100552DFC(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10054F300();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_100555C38((uint64_t *)&unk_100811310);
      goto LABEL_14;
    }
    sub_100556D8C();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v5);
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_100552F5C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::UInt v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10054F9AC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100555468();
      goto LABEL_22;
    }
    sub_1005573CC();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1005530F8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10054FC8C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_100555628((uint64_t (*)(void))&type metadata accessor for Date, &qword_100811400);
      goto LABEL_12;
    }
    sub_10055767C();
  }
  uint64_t v13 = *v3;
  sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    BOOL v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100561E80((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005533B4(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_1005513EC(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100555A88(a4);
      goto LABEL_14;
    }
    sub_100558C6C(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10001B284(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

Swift::Int sub_100553548(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_100550088();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_100555C38(&qword_100811260);
        goto LABEL_74;
      }
      sub_100557A2C();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_100041A58(v5);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6F746F6870;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x746F68506576696CLL;
            unint64_t v11 = 0xE90000000000006FLL;
            break;
          case 2:
            uint64_t v12 = 0x6F65646976;
            break;
          case 3:
            uint64_t v12 = 0x636973756DLL;
            break;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x74736163646F70;
            break;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1802465122;
            break;
          case 6:
            uint64_t v12 = 0x6F69647561;
            break;
          case 7:
            uint64_t v12 = 0x7469736976;
            break;
          case 8:
            uint64_t v12 = 0x6E695069746C756DLL;
            uint64_t v13 = 7364941;
            goto LABEL_31;
          case 9:
            unint64_t v11 = 0xEA00000000007061;
            uint64_t v12 = 0x4D636972656E6567;
            break;
          case 0xA:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1802398060;
            break;
          case 0xB:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x746361746E6F63;
            break;
          case 0xC:
            uint64_t v12 = 0x4974756F6B726F77;
            uint64_t v13 = 7237475;
            goto LABEL_31;
          case 0xD:
            uint64_t v12 = 0x5274756F6B726F77;
            unint64_t v11 = 0xEC0000006574756FLL;
            break;
          case 0xE:
            uint64_t v12 = 0x697463656C666572;
            unint64_t v11 = 0xEA00000000006E6FLL;
            break;
          case 0xF:
            uint64_t v12 = 0x4D664F6574617473;
            uint64_t v13 = 6581865;
            goto LABEL_31;
          case 0x10:
            uint64_t v12 = 0x63416E6F69746F6DLL;
            unint64_t v11 = 0xEE00797469766974;
            break;
          case 0x11:
            uint64_t v12 = 0x7261506472696874;
            unint64_t v11 = 0xEF616964654D7974;
            break;
          case 0x12:
            uint64_t v12 = 0x6C6F686563616C70;
            uint64_t v13 = 7497060;
            goto LABEL_31;
          case 0x13:
            uint64_t v12 = 0x76456B6165727473;
            uint64_t v13 = 7630437;
LABEL_31:
            unint64_t v11 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 0x14:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x6F746F6870;
        switch(v5)
        {
          case 1:
            unint64_t v14 = 0xE90000000000006FLL;
            if (v12 != 0x746F68506576696CLL) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 2:
            uint64_t v19 = 1701079414;
            goto LABEL_57;
          case 3:
            if (v12 != 0x636973756DLL) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 4:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v16 = 0x736163646F70;
            goto LABEL_41;
          case 5:
            unint64_t v14 = 0xE400000000000000;
            if (v12 != 1802465122) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 6:
            uint64_t v19 = 1768191329;
LABEL_57:
            if (v12 != (v19 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 7:
            if (v12 != 0x7469736976) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 8:
            uint64_t v17 = 0x6E695069746C756DLL;
            uint64_t v18 = 7364941;
            goto LABEL_72;
          case 9:
            unint64_t v14 = 0xEA00000000007061;
            if (v12 != 0x4D636972656E6567) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 10:
            unint64_t v14 = 0xE400000000000000;
            if (v12 != 1802398060) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 11:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v16 = 0x6361746E6F63;
LABEL_41:
            if (v12 != (v16 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 12:
            uint64_t v17 = 0x4974756F6B726F77;
            uint64_t v18 = 7237475;
            goto LABEL_72;
          case 13:
            unint64_t v14 = 0xEC0000006574756FLL;
            if (v12 != 0x5274756F6B726F77) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 14:
            unint64_t v14 = 0xEA00000000006E6FLL;
            if (v12 != 0x697463656C666572) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 15:
            uint64_t v17 = 0x4D664F6574617473;
            uint64_t v18 = 6581865;
            goto LABEL_72;
          case 16:
            unint64_t v14 = 0xEE00797469766974;
            if (v12 != 0x63416E6F69746F6DLL) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 17:
            unint64_t v14 = 0xEF616964654D7974;
            if (v12 != 0x7261506472696874) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 18:
            uint64_t v17 = 0x6C6F686563616C70;
            uint64_t v18 = 7497060;
            goto LABEL_72;
          case 19:
            uint64_t v17 = 0x76456B6165727473;
            uint64_t v18 = 7630437;
LABEL_72:
            unint64_t v14 = v18 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            if (v12 != v17) {
              goto LABEL_68;
            }
            goto LABEL_67;
          case 20:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v15 = 0x6E776F6E6B6E75;
            goto LABEL_66;
          default:
LABEL_66:
            if (v12 != v15) {
              goto LABEL_68;
            }
LABEL_67:
            if (v11 == v14) {
              goto LABEL_77;
            }
LABEL_68:
            char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_78;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_74:
  uint64_t v21 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v21 + 48) + a2) = v5;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_77:
    swift_bridgeObjectRelease_n();
LABEL_78:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    JUMPOUT(0x100553BB8);
  }
  *(void *)(v21 + 16) = v24;
  return result;
}

uint64_t sub_100553C60(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  BOOL v27 = v3;
  uint64_t v28 = a1;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v13 = v8;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005505D8();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_100557F48();
LABEL_8:
    uint64_t v14 = *v3;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    Swift::Int v15 = Hasher._finalize()();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        sub_100561F30(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
        char v19 = static UUID.== infix(_:_:)();
        sub_100561E20((uint64_t)v10, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
        if (v19) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v13 = v8;
  sub_100555208((uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa, (uint64_t *)&unk_100811320, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
LABEL_14:
  uint64_t v20 = v28;
  uint64_t v21 = *v27;
  *(void *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_100561EC8(v20, *(void *)(v21 + 48) + *(void *)(v13 + 72) * a2, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100553F24(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for Transcriber.TranscriptionOption();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005509D0();
  }
  else
  {
    if (v12 > v11)
    {
      sub_100555628((uint64_t (*)(void))&type metadata accessor for Transcriber.TranscriptionOption, (uint64_t *)&unk_1008112F0);
      goto LABEL_12;
    }
    sub_100558304();
  }
  uint64_t v13 = *v3;
  sub_100561E80((unint64_t *)&unk_1008112E0, (void (*)(uint64_t))&type metadata accessor for Transcriber.TranscriptionOption);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100561E80(&qword_1007FDD30, (void (*)(uint64_t))&type metadata accessor for Transcriber.TranscriptionOption);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005541E0(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  char v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_23;
  }
  if (a4)
  {
    sub_100550DCC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1005558D8();
      goto LABEL_23;
    }
    sub_1005586B4();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v11 + 48);
    do
    {
      uint64_t v16 = (void *)(v15 + 16 * a3);
      uint64_t v17 = v16[1];
      if (v17)
      {
        if (a2)
        {
          BOOL v18 = *v16 == v8 && v17 == a2;
          if (v18 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
          {
LABEL_22:
            sub_100010218(&qword_100803920);
            uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_22;
      }
      a3 = (a3 + 1) & v14;
    }
    while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_23:
  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v20 = (Swift::Int *)(*(void *)(v19 + 48) + 16 * a3);
  Swift::Int *v20 = v8;
  v20[1] = a2;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_100554398(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1005510D8();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_100555A88(&qword_100811358);
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_10055898C();
  }
  uint64_t v9 = *v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for MKPointOfInterestCategory(0);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005545D8(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_100551688();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_100555C38(&qword_100811398);
        goto LABEL_49;
      }
      sub_100558EE4();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_10023D224(v5);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x64724F7465737361;
            unint64_t v11 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v12 = 0xD000000000000015;
            unint64_t v11 = 0x8000000100685630;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x656C746974;
            break;
          case 4:
            unint64_t v12 = 0x7461447972746E65;
            unint64_t v11 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            unint64_t v12 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v12 = 0x72756F5365746164;
            unint64_t v11 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            unint64_t v12 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v11 = 0x8000000100685680;
            unint64_t v12 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1954047348;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xED0000676E697265;
            if (v12 != 0x64724F7465737361) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 2:
            unint64_t v13 = 0x8000000100685630;
            if (v12 != 0xD000000000000015) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x656C746974) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 4:
            unint64_t v13 = 0xE900000000000065;
            if (v12 != 0x7461447972746E65) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x6449656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 6:
            unint64_t v13 = 0xEA00000000006574;
            if (v12 != 0x6144656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 7:
            unint64_t v13 = 0xEA00000000006563;
            if (v12 != 0x72756F5365746164) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 8:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x64656767616C66;
            goto LABEL_42;
          case 9:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x74706D6F7270) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 10:
            unint64_t v13 = 0x8000000100685680;
            if (v12 != 0xD000000000000011) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 11:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x726568746FLL) {
              goto LABEL_44;
            }
            goto LABEL_43;
          default:
LABEL_42:
            if (v12 != v14) {
              goto LABEL_44;
            }
LABEL_43:
            if (v11 == v13) {
              goto LABEL_52;
            }
LABEL_44:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_53;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_49:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_52:
    swift_bridgeObjectRelease_n();
LABEL_53:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    JUMPOUT(0x100554A84);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

Swift::Int sub_100554AE4(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  Swift::UInt v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_100551AD8(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_100555C38(a4);
      goto LABEL_14;
    }
    sub_100559300(v9, a4);
  }
  uint64_t v10 = *v4;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v6);
  uint64_t result = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_100554C40(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_100551D80();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_100555A88(&qword_100811360);
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100559578();
  }
  uint64_t v9 = *v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for NLTag(0);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_100554E80(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  char v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100552094();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100555DC4();
      goto LABEL_22;
    }
    sub_100559858();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  Character.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_10055501C()
{
  return sub_100555628((uint64_t (*)(void))&type metadata accessor for UUID, &qword_100811298);
}

void *sub_10055503C()
{
  uint64_t v1 = v0;
  sub_100010218((uint64_t *)&unk_1008112B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005551D4()
{
  return sub_100555208((uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate, &qword_100811408, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
}

void *sub_100555208(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_100010218(a2);
  uint64_t v11 = *v3;
  uint64_t v12 = static _SetStorage.copy(original:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v6 = v13;
    return result;
  }
  uint64_t v30 = v6;
  uint64_t result = (void *)(v12 + 56);
  uint64_t v15 = v11 + 56;
  unint64_t v16 = (unint64_t)((1 << *(unsigned char *)(v13 + 32)) + 63) >> 6;
  if (v13 != v11 || (unint64_t)result >= v11 + 56 + 8 * v16) {
    uint64_t result = memmove(result, (const void *)(v11 + 56), 8 * v16);
  }
  int64_t v18 = 0;
  *(void *)(v13 + 16) = *(void *)(v11 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v11 + 56);
  int64_t v22 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      unint64_t v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v24 = v23 | (v18 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v26 >= v22) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v15 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v22) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v15 + 8 * v18);
      if (!v27)
      {
        int64_t v18 = v26 + 2;
        if (v26 + 2 >= v22) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v15 + 8 * v18);
        if (!v27) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_12:
    unint64_t v25 = *(void *)(v8 + 72) * v24;
    sub_100561F30(*(void *)(v11 + 48) + v25, (uint64_t)v10, a3);
    uint64_t result = (void *)sub_100561EC8((uint64_t)v10, *(void *)(v13 + 48) + v25, a3);
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v22)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_30;
  }
  unint64_t v27 = *(void *)(v15 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v22) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v15 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_100555468()
{
  uint64_t v1 = v0;
  sub_100010218((uint64_t *)&unk_100811250);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10055561C()
{
  return sub_100555A88(&qword_1007FDD48);
}

void *sub_100555628(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_100010218(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  int64_t v26 = v4;
  unint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1005558D8()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_100811390);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_100555A88(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100010218(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100555C2C()
{
  return sub_100555C38(&qword_1007FDC48);
}

void *sub_100555C38(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100010218(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100555DC4()
{
  uint64_t v1 = v0;
  sub_100010218(&qword_100811368);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100555F78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100010218(&qword_1007FDCA0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100561E80(&qword_1007FDCA8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100556328()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s14SuggestionInfoVMa(0);
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100010218(&qword_100811280);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  char v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_100561F30(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, _s14SuggestionInfoVMa);
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    type metadata accessor for Date();
    sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_100561EC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, _s14SuggestionInfoVMa);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100556738()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100010218(&qword_100811298);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100556AE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218((uint64_t *)&unk_1008112B0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_41:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v16 >= v10) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v5;
    if (!v17)
    {
      int64_t v5 = v16 + 1;
      if (v16 + 1 >= v10) {
        goto LABEL_39;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v5);
      if (!v17)
      {
        int64_t v5 = v16 + 2;
        if (v16 + 2 >= v10) {
          goto LABEL_39;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v5);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_24:
    unint64_t v19 = (Swift::UInt64 *)(*(void *)(v2 + 48) + 16 * v15);
    Swift::UInt64 v20 = *v19;
    Swift::UInt64 v21 = v19[1];
    Hasher.init(_seed:)();
    if ((v20 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v22 = v20;
    }
    else {
      Swift::UInt64 v22 = 0;
    }
    Hasher._combine(_:)(v22);
    if ((v21 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v23 = v21;
    }
    else {
      Swift::UInt64 v23 = 0;
    }
    Hasher._combine(_:)(v23);
    uint64_t result = Hasher._finalize()();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (Swift::UInt64 *)(*(void *)(v4 + 48) + 16 * v12);
    Swift::UInt64 *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v10)
  {
LABEL_39:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_41;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v5 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_39;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v5);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_100556D8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218((uint64_t *)&unk_100811310);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100557008()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DatePickerDataProvider.MediaDate();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100010218(&qword_100811408);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  BOOL v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_100561F30(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
    Hasher.init(_seed:)();
    type metadata accessor for Date();
    sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    Hasher._combine(_:)(v4[*(int *)(v33 + 20)]);
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_100561EC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005573CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218((uint64_t *)&unk_100811250);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10055767C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100010218(&qword_100811400);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100561E80((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100557A2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811260);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x100557EF4);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100557F48()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100010218((uint64_t *)&unk_100811320);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  char v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_100561F30(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_100561E80((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_100561EC8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100558304()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Transcriber.TranscriptionOption();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100010218((uint64_t *)&unk_1008112F0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100561E80((unint64_t *)&unk_1008112E0, (void (*)(uint64_t))&type metadata accessor for Transcriber.TranscriptionOption);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005586B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811390);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v29) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    Hasher.init(_seed:)();
    if (v20)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain_n();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10055898C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811358);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v18 = v17;
    String.hash(into:)();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100558C6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100010218(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  unint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100558EE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811398);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1005592D0);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100559300(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100010218(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v20);
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100559578()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811360);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v18 = v17;
    String.hash(into:)();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100559858()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100010218(&qword_100811368);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v28)
          {
LABEL_32:
            uint64_t result = swift_release();
            uint64_t v1 = v0;
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          int64_t v5 = v17;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_23:
    id v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    Hasher.init(_seed:)();
    Character.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100559AF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_100559E90();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  uint64_t v13 = v10;
  uint64_t v63 = v9;
  unint64_t v14 = (void *)*a5;
  unint64_t v16 = sub_10001B5D0(v7, v8);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      unint64_t v23 = (void *)*a5;
      if (v15) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1005490D8();
      unint64_t v23 = (void *)*a5;
      if (v20) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v23[(v16 >> 6) + 8] |= 1 << v16;
    int64_t v28 = (uint64_t *)(v23[6] + 16 * v16);
    uint64_t *v28 = v11;
    v28[1] = v12;
    int64_t v29 = (void *)(v23[7] + 16 * v16);
    void *v29 = v63;
    v29[1] = v13;
    uint64_t v30 = v23[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    _OWORD v23[2] = v32;
LABEL_13:
    uint64_t v33 = sub_100559E90();
    if (v34)
    {
      uint64_t v37 = v33;
      uint64_t v38 = v34;
      uint64_t v39 = v35;
      uint64_t v40 = v36;
      do
      {
        long long v49 = (void *)*a5;
        unint64_t v50 = sub_10001B5D0(v37, v38);
        uint64_t v52 = v49[2];
        BOOL v53 = (v51 & 1) == 0;
        BOOL v31 = __OFADD__(v52, v53);
        uint64_t v54 = v52 + v53;
        if (v31) {
          goto LABEL_24;
        }
        char v55 = v51;
        if (v49[3] < v54)
        {
          sub_100544E20(v54, 1);
          unint64_t v50 = sub_10001B5D0(v37, v38);
          if ((v55 & 1) != (v56 & 1)) {
            goto LABEL_26;
          }
        }
        id v57 = (void *)*a5;
        if (v55)
        {
          uint64_t v41 = 16 * v50;
          uint64_t v42 = (uint64_t *)(v57[7] + 16 * v50);
          uint64_t v44 = *v42;
          uint64_t v43 = v42[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = (void *)(v57[7] + v41);
          swift_bridgeObjectRelease();
          void *v45 = v44;
          v45[1] = v43;
        }
        else
        {
          v57[(v50 >> 6) + 8] |= 1 << v50;
          unint64_t v58 = (uint64_t *)(v57[6] + 16 * v50);
          *unint64_t v58 = v37;
          v58[1] = v38;
          uint64_t v59 = (void *)(v57[7] + 16 * v50);
          void *v59 = v39;
          v59[1] = v40;
          uint64_t v60 = v57[2];
          BOOL v31 = __OFADD__(v60, 1);
          uint64_t v61 = v60 + 1;
          if (v31) {
            goto LABEL_25;
          }
          v57[2] = v61;
        }
        uint64_t v37 = sub_100559E90();
        uint64_t v38 = v46;
        uint64_t v39 = v47;
        uint64_t v40 = v48;
      }
      while (v46);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_100082D3C();
    return swift_release();
  }
  sub_100544E20(v19, a4 & 1);
  unint64_t v21 = sub_10001B5D0(v11, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    unint64_t v23 = (void *)*a5;
    if ((v20 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    char v24 = (uint64_t *)(v23[7] + 16 * v16);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = (void *)(v23[7] + 16 * v16);
    swift_bridgeObjectRelease();
    *uint64_t v27 = v26;
    v27[1] = v25;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100559E48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100559E90()
{
  void (*v14)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  void v23[4];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 16 * v6;
    uint64_t v8 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 56) + v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    unint64_t v14 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    _OWORD v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  unint64_t v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      BOOL v18 = v0[1];
      uint64_t v19 = *(void *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        uint64_t v5 = (v19 - 1) & v19;
        unint64_t v6 = __clz(__rbit64(v19)) + (v16 << 6);
        int64_t v4 = v16;
        goto LABEL_3;
      }
      char v20 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        uint64_t v19 = *(void *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          unint64_t v16 = v20;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          uint64_t v19 = *(void *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            unint64_t v16 = v3 + 3;
            goto LABEL_7;
          }
          char v20 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            uint64_t v19 = *(void *)(v18 + 8 * v20);
            if (v19) {
              goto LABEL_10;
            }
            unint64_t v16 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              uint64_t v19 = *(void *)(v18 + 8 * v16);
              if (v19) {
                goto LABEL_7;
              }
              int64_t v4 = v17 - 1;
              unint64_t v21 = v3 + 6;
              while (v17 != v21)
              {
                uint64_t v19 = *(void *)(v18 + 8 * v21++);
                if (v19)
                {
                  unint64_t v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_10055A034()
{
  void (*v9)(uint64_t *__return_ptr, char *);
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18[8];
  uint64_t v19;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    uint64_t v8 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v18[0] = v7;
    uint64_t v19 = v8;
    v9(&v17, v18);
    return v17;
  }
  uint64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      uint64_t v13 = v0[1];
      unint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        uint64_t v5 = (v14 - 1) & v14;
        unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
        int64_t v4 = v11;
        goto LABEL_3;
      }
      char v15 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        unint64_t v14 = *(void *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          uint64_t v11 = v15;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          unint64_t v14 = *(void *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            uint64_t v11 = v3 + 3;
            goto LABEL_7;
          }
          char v15 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            unint64_t v14 = *(void *)(v13 + 8 * v15);
            if (v14) {
              goto LABEL_10;
            }
            uint64_t v11 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              unint64_t v14 = *(void *)(v13 + 8 * v11);
              if (v14) {
                goto LABEL_7;
              }
              int64_t v4 = v12 - 1;
              unint64_t v16 = v3 + 6;
              while (v12 != v16)
              {
                unint64_t v14 = *(void *)(v13 + 8 * v16++);
                if (v14)
                {
                  uint64_t v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 9;
  }
  return result;
}

void sub_10055A19C()
{
  void (*v15)(uint64_t *__return_ptr, char *);
  uint64_t v16;
  uint64_t v17;

  uint64_t v1 = sub_100010218(&qword_1007FC1E8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100811440);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - v9;
  unint64_t v12 = v0[1];
  unint64_t v13 = *(void *)(*v0 + 16);
  if (v12 == v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56))((char *)&v16 - v9, 1, 1, v1, v10);
  }
  else
  {
    if (v12 >= v13)
    {
      __break(1u);
      return;
    }
    sub_10019C9D0(*v0+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v12, (uint64_t)&v16 - v9);
    v0[1] = v12 + 1;
    (*(void (**)(char *, void, uint64_t, uint64_t, __n128))(v2 + 56))(v11, 0, 1, v1, v14);
  }
  char v15 = (void (*)(uint64_t *__return_ptr, char *))v0[2];
  sub_10002C4EC((uint64_t)v11, (uint64_t)v7, (uint64_t *)&unk_100811440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
  {
    sub_10002C4EC((uint64_t)v7, (uint64_t)v4, &qword_1007FC1E8);
    v15(&v17, v4);
    sub_10001457C((uint64_t)v4, &qword_1007FC1E8);
  }
}

uint64_t sub_10055A3C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LayoutSubview();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v17 - v11;
  sub_10055A5E8((uint64_t)&v17 - v11);
  unint64_t v13 = *(void (**)(char *))(v1 + 56);
  sub_10002C4EC((uint64_t)v12, (uint64_t)v9, &qword_1007FD208);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    uint64_t v14 = type metadata accessor for InsightsMosaicLayout.Row();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    v13(v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v16 = type metadata accessor for InsightsMosaicLayout.Row();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
}

void sub_10055A5E8(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v1[2])
  {
    while (1)
    {
LABEL_10:
      unint64_t v13 = v1[1];
      unint64_t v14 = *(void *)(*v1 + 16);
      if (v13 == v14)
      {
        uint64_t v21 = type metadata accessor for LayoutSubview();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
        return;
      }
      if (v13 >= v14) {
        break;
      }
      unint64_t v15 = v13 + 1;
      uint64_t v16 = (void *)(*v1 + 32 * v13);
      uint64_t v18 = v16[6];
      uint64_t v17 = v16[7];
      uint64_t v19 = v16[4];
      uint64_t v20 = v16[5];
      v1[1] = v15;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v1[2] = v19;
      v1[3] = v20;
      v1[4] = v18;
      v1[5] = v17;
      v1[6] = v18;
      if (v19) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
LABEL_2:
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[5] >> 1;
  if (v6 == v7)
  {
    uint64_t v8 = type metadata accessor for LayoutSubview();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
LABEL_9:
    sub_10001457C((uint64_t)v5, &qword_1007FD208);
    goto LABEL_10;
  }
  if (v6 >= v7 || v6 < v1[4]) {
    goto LABEL_17;
  }
  uint64_t v10 = v1[3];
  uint64_t v11 = type metadata accessor for LayoutSubview();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v5, v10 + *(void *)(v12 + 72) * v6, v11);
  v1[6] = v6 + 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1) {
    goto LABEL_9;
  }
  sub_10002C4EC((uint64_t)v5, a1, &qword_1007FD208);
}

uint64_t sub_10055A870(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t sub_10055A90C(uint64_t a1, uint64_t a2)
{
  v2[49] = a1;
  v2[50] = a2;
  uint64_t v3 = type metadata accessor for String.Encoding();
  v2[51] = v3;
  v2[52] = *(void *)(v3 - 8);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL.DirectoryHint();
  v2[56] = v4;
  v2[57] = *(void *)(v4 - 8);
  v2[58] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[59] = v5;
  v2[60] = *(void *)(v5 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[70] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[71] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  v2[72] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date.FormatStyle.TimeStyle();
  v2[73] = v6;
  v2[74] = *(void *)(v6 - 8);
  v2[75] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date.FormatStyle.DateStyle();
  v2[76] = v7;
  v2[77] = *(void *)(v7 - 8);
  v2[78] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v2[79] = v8;
  v2[80] = *(void *)(v8 - 8);
  v2[81] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[82] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[83] = v10;
  v2[84] = v9;
  return _swift_task_switch(sub_10055ACD4, v10, v9);
}

uint64_t sub_10055ACD4()
{
  static Date.timeIntervalSinceReferenceDate.getter();
  double v2 = v1;
  *(double *)(v0 + 680) = v1;
  static Task<>.checkCancellation()();
  unint64_t v5 = *(void *)(v0 + 392);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 688) = v44;
    if (v44) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 688) = v6;
    if (v6)
    {
LABEL_7:
      unint64_t v53 = v5 >> 62;
      unint64_t v54 = v5;
      sub_1004792EC();
      if (qword_1007F7F08 != -1) {
        swift_once();
      }
      uint64_t v7 = *(void *)(v0 + 648);
      uint64_t v8 = *(void *)(v0 + 640);
      uint64_t v9 = *(void *)(v0 + 624);
      uint64_t v10 = *(void *)(v0 + 616);
      uint64_t v51 = *(void *)(v0 + 608);
      uint64_t v52 = *(void *)(v0 + 632);
      uint64_t v11 = *(void *)(v0 + 600);
      uint64_t v12 = *(void *)(v0 + 592);
      uint64_t v50 = *(void *)(v0 + 584);
      v13._countAndFlagsBits = 0xD000000000000017;
      v57._countAndFlagsBits = 0xD000000000000018;
      v57._object = (void *)0x80000001006A5ED0;
      v13._object = (void *)0x80000001006A5E90;
      v14._object = (void *)0x80000001006A5EB0;
      v14._countAndFlagsBits = 0xD000000000000013;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)qword_10083EE60, v14, v57);
      *(void *)(v0 + 696) = sub_100010218((uint64_t *)&unk_100806070);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1006D6280;
      Date.init()();
      static Date.FormatStyle.DateStyle.abbreviated.getter();
      static Date.FormatStyle.TimeStyle.omitted.getter();
      uint64_t v16 = Date.formatted(date:time:)();
      uint64_t v18 = v17;
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      *(void *)(v0 + 704) = v19;
      *(void *)(v0 + 712) = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v19(v11, v50);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      *(void *)(v0 + 720) = v20;
      *(void *)(v0 + 728) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v20(v9, v51);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      *(void *)(v0 + 736) = v21;
      *(void *)(v0 + 744) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v21(v7, v52);
      *(void *)(v15 + 56) = &type metadata for String;
      unint64_t v22 = sub_10001B2C0();
      *(void *)(v0 + 752) = v22;
      *(void *)(v15 + 64) = v22;
      *(void *)(v15 + 32) = v16;
      *(void *)(v15 + 40) = v18;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      id v23 = objc_allocWithZone((Class)NSMutableAttributedString);
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 760) = [v23 initWithString:v24];

      if (v53)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      *(void *)(v0 + 768) = v25;
      uint64_t v26 = *(void *)(v0 + 400);
      uint64_t v27 = self;
      *(void *)(v0 + 776) = v27;
      id v28 = [v27 progressWithTotalUnitCount:v25];
      *(void *)(v0 + 784) = v28;
      uint64_t v29 = type metadata accessor for ExportOptions();
      *(void *)(v0 + 792) = v29;
      uint64_t v30 = *(int *)(v29 + 52);
      *(_DWORD *)(v0 + 1128) = v30;
      BOOL v31 = *(void **)(v26 + v30);
      [v31 setTotalUnitCount:100];
      uint64_t v32 = *(int *)(v29 + 20);
      *(_DWORD *)(v0 + 1132) = v32;
      [v31 addChild:v28 withPendingUnitCount:qword_1006EAD90[*(char *)(v26 + v32)]];
      static Task<>.checkCancellation()();
      *(void *)(v0 + 800) = [objc_allocWithZone((Class)NSMutableAttributedString) init];
      unint64_t v33 = sub_100397014((uint64_t)_swiftEmptyArrayStorage);
      *(void *)(v0 + 384) = &_swiftEmptySetSingleton;
      *(_DWORD *)(v0 + 1136) = enum case for URL.DirectoryHint.inferFromPath(_:);
      *(void *)(v0 + 808) = NSLinkAttributeName;
      *(void *)(v0 + 832) = _swiftEmptyArrayStorage;
      *(void *)(v0 + 824) = 0;
      *(void *)(v0 + 816) = v33;
      uint64_t v34 = *(void *)(v0 + 392);
      swift_bridgeObjectRetain();
      if ((v34 & 0xC000000000000001) != 0)
      {
        uint64_t v35 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v35 = *(void *)(v34 + 32);
        swift_retain();
      }
      *(void *)(v0 + 840) = v35;
      *(void *)(v0 + 848) = 1;
      static Task<>.checkCancellation()();
      uint64_t v36 = *(void *)(v0 + 768);
      id v55 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v37._countAndFlagsBits = 0x207972746E45;
      v37._object = (void *)0xE600000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
      *(void *)(v0 + 368) = 1;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v38._countAndFlagsBits = 543584032;
      v38._object = (void *)0xE400000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
      *(void *)(v0 + 360) = v36;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v39);
      String.LocalizationValue.init(stringInterpolation:)();
      id v40 = (id)qword_10083EE60;
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v55 setLocalizedAdditionalDescription:v41];

      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_10055B598;
      uint64_t v43 = *(void *)(v0 + 400);
      return sub_1005965A8(v43);
    }
  }
  swift_release();
  if (qword_1007F7CA8 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_100026A54(v45, (uint64_t)qword_100811200);
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "ExportTask nothing to export", v48, 2u);
    swift_slowDealloc();
  }

  sub_1002E00EC();
  swift_allocError();
  *long long v49 = 3;
  swift_willThrow();
  sub_100543404(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10055B598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[108] = a1;
  v4[109] = a2;
  v4[110] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4[84];
    uint64_t v6 = v4[83];
    uint64_t v7 = sub_10055F334;
  }
  else
  {
    uint64_t v5 = v4[84];
    uint64_t v6 = v4[83];
    uint64_t v7 = sub_10055B6D8;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10055B6D8()
{
  uint64_t v1 = *(void *)(v0 + 880);
  static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 848);
    uint64_t v3 = *(void **)(v0 + 800);
    uint64_t v4 = *(void **)(v0 + 784);
    uint64_t v5 = *(void **)(v0 + 760);
    double v6 = *(double *)(v0 + 680);

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    [v4 setCompletedUnitCount:v2];

    swift_release();
    swift_bridgeObjectRelease();
    sub_100543404(v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t v9 = *(void *)(v0 + 400);
  if (*(unsigned __int8 *)(v9 + *(int *)(v0 + 1132)) - 1 >= 2)
  {
    uint64_t v18 = *(void *)(v0 + 840);
    unsigned int v83 = *(_DWORD *)(v0 + 1136);
    uint64_t v19 = *(void *)(v0 + 792);
    uint64_t v20 = *(void *)(v0 + 552);
    uint64_t v22 = *(void *)(v0 + 472);
    uint64_t v21 = *(void *)(v0 + 480);
    uint64_t v87 = v22;
    uint64_t v23 = *(void *)(v0 + 456);
    uint64_t v80 = *(void *)(v0 + 448);
    uint64_t v82 = *(void *)(v0 + 464);
    id v92 = (id)v20;
    sub_100479098(v20);
    sub_100543608(v18, 1819112552, (void *)0xE400000000000000, v20, (uint64_t *)(v0 + 384));
    uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    *(void *)(v0 + 888) = v85;
    *(void *)(v0 + 896) = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v85(v20, v22);
    uint64_t v24 = v19;
    id v25 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v27 = [v25 initWithString:v26];

    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v27 stringByAppendingPathComponent:v28];

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v76 = v31;
    uint64_t v78 = v30;
    uint64_t v32 = v31;

    swift_bridgeObjectRelease();
    *(void *)(v0 + 904) = v30;
    *(void *)(v0 + 912) = v32;
    unint64_t v33 = (void *)(v9 + *(int *)(v24 + 28));
    uint64_t v34 = v33[1];
    *(void *)(v0 + 280) = *v33;
    *(void *)(v0 + 288) = v34;
    uint64_t v35 = *(void (**)(uint64_t, void, uint64_t))(v23 + 104);
    *(void *)(v0 + 920) = v35;
    *(void *)(v0 + 928) = (v23 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v35(v82, v83, v80);
    *(void *)(v0 + 936) = sub_100014344();
    swift_bridgeObjectRetain();
    URL.appending<A>(path:directoryHint:)();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    *(void *)(v0 + 944) = v36;
    *(void *)(v0 + 952) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v36(v82, v80);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 296) = v78;
    *(void *)(v0 + 304) = v76;
    v35(v82, v83, v80);
    URL.appending<A>(path:directoryHint:)();
    v36(v82, v80);
    v85((uint64_t)v92, v87);
    Swift::String v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 960) = v37;
    *Swift::String v37 = v0;
    v37[1] = sub_10055C508;
    uint64_t v38 = *(void *)(v0 + 872);
    uint64_t v39 = *(void *)(v0 + 864);
LABEL_10:
    return sub_10022AA7C(v39, v38);
  }
  if (*(void *)(v0 + 824))
  {
    uint64_t v10 = *(void **)(v0 + 800);
    id v11 = objc_allocWithZone((Class)NSAttributedString);
    id v12 = v10;
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 initWithString:v13];

    [v12 appendAttributedString:v14];
  }
  uint64_t v15 = *(void *)(v0 + 872);
  uint64_t v16 = *(void *)(v0 + 816);
  [*(id *)(v0 + 800) appendAttributedString:*(void *)(v0 + 864)];
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 376) = v16;
  sub_100559AF8(v15, (uint64_t)sub_100559E48, 0, isUniquelyReferenced_nonNull_native, (void *)(v0 + 376));
  id v40 = *(void **)(v0 + 864);
  uint64_t v41 = *(void *)(v0 + 376);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v0 + 832);
  *(void *)(v0 + 1008) = v41;
  uint64_t v43 = *(void *)(v0 + 848);
  uint64_t v44 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v43];
  swift_release();
  if (v43 == v44)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static Task<>.checkCancellation()();
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 < 2)
    {
      uint64_t v48 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v49 = v48;
      swift_bridgeObjectRetain();
      uint64_t v50 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v50;
      *uint64_t v50 = v0;
      v50[1] = sub_10055E49C;
      uint64_t v39 = *(void *)(v0 + 800);
      uint64_t v38 = v41;
      goto LABEL_10;
    }
    if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
    {
      uint64_t v60 = *(void **)(v0 + 784);
      uint64_t v61 = *(void **)(v0 + 760);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
      id v59 = sub_100049F54();
      uint64_t v89 = v63;
      uint64_t v90 = *(void *)(v0 + 552);
      uint64_t v94 = *(void **)(v0 + 480);
      uint64_t v64 = *(void *)(v0 + 464);
      uint64_t v86 = *(void *)(v0 + 472);
      uint64_t v65 = *(void *)(v0 + 456);
      uint64_t v75 = *(void *)(v0 + 448);
      uint64_t v66 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
      uint64_t v67 = v66[1];
      *(void *)(v0 + 232) = *v66;
      *(void *)(v0 + 240) = v67;
      unsigned int v79 = enum case for URL.DirectoryHint.inferFromPath(_:);
      id v77 = *(void (**)(uint64_t))(v65 + 104);
      id v84 = v59;
      v77(v64);
      sub_100014344();
      swift_bridgeObjectRetain();
      URL.appending<A>(path:directoryHint:)();
      uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v81(v64, v75);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 88) = 0x74682E7865646E69;
      *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
      ((void (*)(uint64_t, void, uint64_t))v77)(v64, v79, v75);
      uint64_t v68 = v90;
      URL.appending<A>(path:directoryHint:)();
      v81(v64, v75);
      swift_bridgeObjectRelease();
      uint64_t v91 = (void (*)(uint64_t, uint64_t))v94[1];
      v91(v68, v86);
      *(void *)(v0 + 104) = v84;
      *(void *)(v0 + 112) = v89;
      static String.Encoding.utf8.getter();
      StringProtocol.write(to:atomically:encoding:)();
      int v88 = *(void **)(v0 + 800);
      Swift::String v69 = *(void **)(v0 + 760);
      uint64_t v70 = *(void *)(v0 + 512);
      uint64_t v71 = *(void *)(v0 + 472);
      uint64_t v72 = *(void *)(v0 + 432);
      uint64_t v74 = *(void *)(v0 + 408);
      uint64_t v73 = *(void *)(v0 + 416);

      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
      v91(v70, v71);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_100543404(*(double *)(v0 + 680));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v62 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v62(v42);
  }
  else
  {
    uint64_t v45 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v42;
    *(void *)(v0 + 824) = v45;
    *(void *)(v0 + 816) = v41;
    uint64_t v46 = *(void *)(v0 + 392);
    if ((v46 & 0xC000000000000001) != 0)
    {
      uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v47 = result;
    }
    else
    {
      uint64_t v47 = *(void *)(v46 + 8 * v45 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v47;
    *(void *)(v0 + 848) = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
    }
    else
    {
      static Task<>.checkCancellation()();
      uint64_t v51 = *(void *)(v0 + 768);
      id v93 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v52._countAndFlagsBits = 0x207972746E45;
      v52._object = (void *)0xE600000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v52);
      *(void *)(v0 + 368) = v45 + 1;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v53._countAndFlagsBits = 543584032;
      v53._object = (void *)0xE400000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v53);
      *(void *)(v0 + 360) = v51;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v54._countAndFlagsBits = 0;
      v54._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v54);
      String.LocalizationValue.init(stringInterpolation:)();
      id v55 = (id)qword_10083EE60;
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      NSString v56 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v93 setLocalizedAdditionalDescription:v56];

      Swift::String v57 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v57;
      void *v57 = v0;
      v57[1] = sub_10055B598;
      uint64_t v58 = *(void *)(v0 + 400);
      return sub_1005965A8(v58);
    }
  }
  return result;
}

uint64_t sub_10055C508(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[121] = a2;
  v5[122] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v5[84];
    uint64_t v7 = v5[83];
    uint64_t v8 = sub_10055F510;
  }
  else
  {
    v5[123] = a1;
    uint64_t v6 = v5[84];
    uint64_t v7 = v5[83];
    uint64_t v8 = sub_10055C640;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10055C640()
{
  uint64_t v1 = *(void *)(v0 + 976);
  uint64_t v2 = *(void *)(v0 + 968);
  *(void *)(v0 + 328) = *(void *)(v0 + 984);
  *(void *)(v0 + 336) = v2;
  static String.Encoding.utf8.getter();
  StringProtocol.write(to:atomically:encoding:)();
  if (v1)
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
    uint64_t v4 = *(void *)(v0 + 544);
    uint64_t v5 = *(void *)(v0 + 472);
    uint64_t v6 = *(void *)(v0 + 440);
    uint64_t v7 = *(void *)(v0 + 408);
    uint64_t v8 = *(void *)(v0 + 416);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v3(v4, v5);
    swift_bridgeObjectRelease();
    if (qword_1007F7CA8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100811200);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void *)(v0 + 840);
    if (v12)
    {
      uint64_t v138 = *(void **)(v0 + 864);
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412546;
      uint64_t v16 = *(void **)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
      *(void *)(v0 + 352) = v16;
      id v17 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v15 = v16;
      swift_release_n();
      *(_WORD *)(v14 + 12) = 2112;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 344) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v15[1] = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ExportTask failed to build html for entry %@: %@", (uint8_t *)v14, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_19;
  }
  uint64_t v19 = *(int *)(v0 + 1132);
  uint64_t v20 = *(void *)(v0 + 400);
  (*(void (**)(void, void))(*(void *)(v0 + 416) + 8))(*(void *)(v0 + 440), *(void *)(v0 + 408));
  swift_bridgeObjectRelease();
  if (!*(unsigned char *)(v20 + v19))
  {
    unint64_t v33 = *(void **)(*(void *)(v0 + 840) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
    if (v33)
    {
      id v34 = [v33 string];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      uint64_t v38 = HIBYTE(v37) & 0xF;
      if ((v37 & 0x2000000000000000) == 0) {
        uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
      }
      if (v38)
      {
        uint64_t v127 = *(void *)(v0 + 936);
        uint64_t v122 = *(void *)(v0 + 752);
        unint64_t v119 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
        uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
        uint64_t v39 = *(void *)(v0 + 648);
        uint64_t v113 = *(void *)(v0 + 632);
        uint64_t v115 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
        uint64_t v40 = *(void *)(v0 + 624);
        uint64_t v41 = *(void *)(v0 + 600);
        uint64_t v110 = *(void *)(v0 + 584);
        uint64_t v111 = *(void *)(v0 + 608);
        v142._object = (void *)0x80000001006A5F40;
        v42._object = (void *)0x80000001006A5F20;
        v42._countAndFlagsBits = 0x1000000000000018;
        v43._countAndFlagsBits = 0x25209480E2204025;
        v43._object = (void *)0xA900000000000040;
        v142._countAndFlagsBits = 0xD000000000000023;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)qword_10083EE60, v43, v142);
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = xmmword_1006D6270;
        Date.init()();
        static Date.FormatStyle.DateStyle.abbreviated.getter();
        static Date.FormatStyle.TimeStyle.omitted.getter();
        uint64_t v45 = Date.formatted(date:time:)();
        uint64_t v47 = v46;
        v112(v41, v110);
        v115(v40, v111);
        v119(v39, v113);
        *(void *)(v44 + 56) = &type metadata for String;
        *(void *)(v44 + 64) = v122;
        *(void *)(v44 + 32) = v45;
        *(void *)(v44 + 40) = v47;
        *(void *)(v0 + 264) = v35;
        *(void *)(v0 + 272) = v37;
        *(void *)(v0 + 248) = 10;
        *(void *)(v0 + 256) = 0xE100000000000000;
        *(void *)(v0 + 120) = 32;
        *(void *)(v0 + 128) = 0xE100000000000000;
        uint64_t v108 = v127;
        uint64_t v109 = v127;
        uint64_t v106 = &type metadata for String;
        uint64_t v107 = v127;
        uint64_t v48 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
        uint64_t v50 = v49;
        swift_bridgeObjectRelease();
        *(void *)(v44 + 96) = &type metadata for String;
        *(void *)(v44 + 104) = v122;
        *(void *)(v44 + 72) = v48;
        *(void *)(v44 + 80) = v50;
        String.init(format:_:)();
        swift_bridgeObjectRelease();
LABEL_18:
        uint64_t v57 = *(void *)(v0 + 912);
        uint64_t v58 = *(void *)(v0 + 904);
        uint64_t v134 = *(void (**)(os_log_t, uint64_t))(v0 + 888);
        id v59 = *(void **)(v0 + 864);
        uint64_t v60 = *(void **)(v0 + 808);
        uint64_t v61 = *(void **)(v0 + 760);
        uint64_t v129 = *(void *)(v0 + 472);
        os_log_t log = *(os_log_t *)(v0 + 544);
        sub_100010218(&qword_100802498);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1006D6280;
        *(void *)(inited + 64) = &type metadata for String;
        *(void *)(inited + 32) = v60;
        *(void *)(inited + 40) = v58;
        *(void *)(inited + 48) = v57;
        id v63 = v60;
        sub_100396DBC(inited);
        id v64 = objc_allocWithZone((Class)NSMutableAttributedString);
        NSString v65 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_100561E80((unint64_t *)&qword_10080A680, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v67 = [v64 initWithString:v65 attributes:isa];

        id v68 = objc_allocWithZone((Class)NSAttributedString);
        NSString v69 = String._bridgeToObjectiveC()();
        id v70 = [v68 initWithString:v69];

        [v61 appendAttributedString:v70];
        [v61 appendAttributedString:v67];

        swift_bridgeObjectRelease();
        v134(log, v129);
LABEL_19:
        uint64_t v71 = *(void *)(v0 + 832);
        uint64_t v72 = *(void *)(v0 + 816);
        *(void *)(v0 + 1008) = v72;
        uint64_t v73 = *(void *)(v0 + 848);
        uint64_t v74 = *(void *)(v0 + 688);
        [*(id *)(v0 + 784) setCompletedUnitCount:v73, v106, v107, v108, v109];
        swift_release();
        if (v73 == v74)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static Task<>.checkCancellation()();
          if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
          {
            if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
            {
              uint64_t v91 = *(void **)(v0 + 784);
              id v92 = *(void **)(v0 + 760);

              swift_bridgeObjectRelease();
              swift_release();
            }
            else
            {
              swift_release();
              id v90 = sub_100049F54();
              uint64_t v136 = *(void *)(v0 + 552);
              uint64_t v140 = *(void *)(v0 + 480);
              uint64_t v94 = *(void *)(v0 + 464);
              uint64_t v126 = *(void *)(v0 + 472);
              uint64_t v95 = *(void *)(v0 + 456);
              uint64_t v135 = v96;
              uint64_t v114 = *(void *)(v0 + 448);
              id v97 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
              uint64_t v98 = v97[1];
              *(void *)(v0 + 232) = *v97;
              *(void *)(v0 + 240) = v98;
              unsigned int v117 = enum case for URL.DirectoryHint.inferFromPath(_:);
              uint64_t v116 = *(void (**)(uint64_t))(v95 + 104);
              id v123 = v90;
              v116(v94);
              sub_100014344();
              swift_bridgeObjectRetain();
              URL.appending<A>(path:directoryHint:)();
              unint64_t v120 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
              v120(v94, v114);
              swift_bridgeObjectRelease();
              *(void *)(v0 + 88) = 0x74682E7865646E69;
              *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
              ((void (*)(uint64_t, void, uint64_t))v116)(v94, v117, v114);
              uint64_t v99 = v136;
              URL.appending<A>(path:directoryHint:)();
              v120(v94, v114);
              swift_bridgeObjectRelease();
              id v137 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
              v137(v99, v126);
              *(void *)(v0 + 104) = v123;
              *(void *)(v0 + 112) = v135;
              static String.Encoding.utf8.getter();
              StringProtocol.write(to:atomically:encoding:)();
              os_log_t loga = *(os_log_t *)(v0 + 800);
              uint64_t v100 = *(void **)(v0 + 760);
              uint64_t v101 = *(void *)(v0 + 512);
              uint64_t v102 = *(void *)(v0 + 472);
              uint64_t v103 = *(void *)(v0 + 432);
              uint64_t v105 = *(void *)(v0 + 408);
              uint64_t v104 = *(void *)(v0 + 416);

              (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v105);
              v137(v101, v102);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_100543404(*(double *)(v0 + 680));
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            id v93 = *(uint64_t (**)(uint64_t))(v0 + 8);
            return v93(v71);
          }
          else
          {
            uint64_t v78 = *(void **)(v0 + 800);
            swift_bridgeObjectRelease();
            id v79 = v78;
            swift_bridgeObjectRetain();
            uint64_t v80 = (void *)swift_task_alloc();
            *(void *)(v0 + 1016) = v80;
            *uint64_t v80 = v0;
            v80[1] = sub_10055E49C;
            uint64_t v81 = *(void *)(v0 + 800);
            return sub_10022AA7C(v81, v72);
          }
        }
        else
        {
          uint64_t v75 = *(void *)(v0 + 848);
          *(void *)(v0 + 832) = v71;
          *(void *)(v0 + 824) = v75;
          *(void *)(v0 + 816) = v72;
          uint64_t v76 = *(void *)(v0 + 392);
          if ((v76 & 0xC000000000000001) != 0)
          {
            uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v77 = result;
          }
          else
          {
            uint64_t v77 = *(void *)(v76 + 8 * v75 + 32);
            uint64_t result = swift_retain();
          }
          *(void *)(v0 + 840) = v77;
          *(void *)(v0 + 848) = v75 + 1;
          if (__OFADD__(v75, 1))
          {
            __break(1u);
          }
          else
          {
            static Task<>.checkCancellation()();
            uint64_t v82 = *(void *)(v0 + 768);
            uint64_t v139 = *(void **)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
            String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
            v83._countAndFlagsBits = 0x207972746E45;
            v83._object = (void *)0xE600000000000000;
            String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v83);
            *(void *)(v0 + 368) = v75 + 1;
            String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
            v84._countAndFlagsBits = 543584032;
            v84._object = (void *)0xE400000000000000;
            String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v84);
            *(void *)(v0 + 360) = v82;
            String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
            v85._countAndFlagsBits = 0;
            v85._object = (void *)0xE000000000000000;
            String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v85);
            String.LocalizationValue.init(stringInterpolation:)();
            id v86 = (id)qword_10083EE60;
            static Locale.current.getter();
            String.init(localized:table:bundle:locale:comment:)();
            NSString v87 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v139 setLocalizedAdditionalDescription:v87];

            int v88 = (void *)swift_task_alloc();
            *(void *)(v0 + 856) = v88;
            *int v88 = v0;
            v88[1] = sub_10055B598;
            uint64_t v89 = *(void *)(v0 + 400);
            return sub_1005965A8(v89);
          }
        }
        return result;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v133 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
    uint64_t v128 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
    uint64_t v52 = *(void *)(v0 + 648);
    uint64_t v125 = *(void *)(v0 + 632);
    uint64_t v53 = *(void *)(v0 + 624);
    uint64_t v54 = *(void *)(v0 + 608);
    uint64_t v55 = *(void *)(v0 + 600);
    uint64_t v56 = *(void *)(v0 + 584);
    Date.init()();
    static Date.FormatStyle.DateStyle.abbreviated.getter();
    static Date.FormatStyle.TimeStyle.omitted.getter();
    Date.formatted(date:time:)();
    v51(v55, v56);
    v128(v53, v54);
    v133(v52, v125);
    goto LABEL_18;
  }
  NSString v132 = *(void (**)(uint64_t, uint64_t))(v0 + 944);
  uint64_t v124 = *(void (**)(uint64_t, void, uint64_t))(v0 + 920);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  unsigned int v121 = *(_DWORD *)(v0 + 1136);
  uint64_t v22 = *(void *)(v0 + 552);
  uint64_t v23 = *(void *)(v0 + 528);
  uint64_t v25 = *(void *)(v0 + 464);
  uint64_t v24 = *(void *)(v0 + 472);
  uint64_t v118 = *(void *)(v0 + 448);
  swift_bridgeObjectRelease();
  URL.deletingPathExtension()();
  uint64_t v26 = URL.lastPathComponent.getter();
  uint64_t v28 = v27;
  v21(v22, v24);
  sub_100479098(v23);
  *(void *)(v0 + 312) = v26;
  *(void *)(v0 + 320) = v28;
  v124(v25, v121, v118);
  URL.appending<A>(path:directoryHint:)();
  v132(v25, v118);
  v21(v23, v24);
  swift_bridgeObjectRelease();
  URL.appendingPathExtension(_:)();
  v21(v22, v24);
  id v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 992) = v29;
  void *v29 = v0;
  v29[1] = sub_10055D8E4;
  uint64_t v30 = *(void *)(v0 + 544);
  uint64_t v31 = *(void *)(v0 + 536);
  return sub_10047A440(v30, v31);
}

uint64_t sub_10055D8E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1000) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 672);
  uint64_t v4 = *(void *)(v2 + 664);
  if (v0) {
    uint64_t v5 = sub_1005600D0;
  }
  else {
    uint64_t v5 = sub_10055DA20;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10055DA20()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 480) + 16))(*(void *)(v0 + 520), *(void *)(v0 + 536), *(void *)(v0 + 472));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v2 = *(void *)(v0 + 832);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v2 = sub_1002A59DC(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_1002A59DC(v3 > 1, v4 + 1, 1, v2);
  }
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  uint64_t v6 = *(void **)(v0 + 864);
  uint64_t v7 = *(void *)(v0 + 544);
  uint64_t v8 = *(void *)(v0 + 536);
  uint64_t v9 = *(void *)(v0 + 520);
  uint64_t v11 = *(void *)(v0 + 472);
  uint64_t v10 = *(void *)(v0 + 480);
  *(void *)(v2 + 16) = v4 + 1;
  unint64_t v12 = v2
      + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(void *)(v10 + 72) * v4;
  unint64_t v13 = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v9, v11);

  swift_bridgeObjectRelease();
  v5(v8, v11);
  v5(v7, v11);
  uint64_t v14 = *(void *)(v0 + 1000);
  uint64_t v15 = *(void *)(v0 + 816);
  *(void *)(v0 + 1008) = v15;
  uint64_t v16 = *(void *)(v0 + 848);
  uint64_t v17 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v16];
  swift_release();
  if (v16 == v17)
  {
    unint64_t v18 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static Task<>.checkCancellation()();
    if (v14)
    {
      uint64_t v19 = *(void **)(v0 + 800);
      uint64_t v20 = *(void **)(v0 + 784);
      uint64_t v21 = *(void **)(v0 + 760);
      double v22 = *(double *)(v0 + 680);
      swift_release();

      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_100543404(v22);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v34 = *(uint64_t (**)(void))(v0 + 8);
      return v34();
    }
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
    {
      if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
      {
        uint64_t v44 = *(void **)(v0 + 784);
        uint64_t v45 = *(void **)(v0 + 760);

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        id v43 = sub_100049F54();
        uint64_t v66 = *(void *)(v0 + 552);
        id v70 = *(void **)(v0 + 480);
        uint64_t v47 = *(void *)(v0 + 464);
        uint64_t v64 = *(void *)(v0 + 472);
        uint64_t v48 = *(void *)(v0 + 456);
        uint64_t v60 = *(void *)(v0 + 448);
        uint64_t v49 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
        uint64_t v50 = v49[1];
        *(void *)(v0 + 232) = *v49;
        *(void *)(v0 + 240) = v50;
        unsigned int v62 = enum case for URL.DirectoryHint.inferFromPath(_:);
        uint64_t v61 = *(void (**)(uint64_t, void))(v48 + 104);
        id v63 = v43;
        uint64_t v68 = v51;
        v61(v47, enum case for URL.DirectoryHint.inferFromPath(_:));
        sub_100014344();
        swift_bridgeObjectRetain();
        URL.appending<A>(path:directoryHint:)();
        uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v52(v47, v60);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = 0x74682E7865646E69;
        *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
        ((void (*)(uint64_t, void, uint64_t))v61)(v47, v62, v60);
        uint64_t v53 = v66;
        URL.appending<A>(path:directoryHint:)();
        v52(v47, v60);
        swift_bridgeObjectRelease();
        id v67 = (void (*)(uint64_t, uint64_t))v70[1];
        v67(v53, v64);
        *(void *)(v0 + 104) = v63;
        *(void *)(v0 + 112) = v68;
        static String.Encoding.utf8.getter();
        StringProtocol.write(to:atomically:encoding:)();
        NSString v65 = *(void **)(v0 + 800);
        uint64_t v54 = *(void **)(v0 + 760);
        uint64_t v55 = *(void *)(v0 + 512);
        uint64_t v56 = *(void *)(v0 + 472);
        uint64_t v57 = *(void *)(v0 + 432);
        uint64_t v59 = *(void *)(v0 + 408);
        uint64_t v58 = *(void *)(v0 + 416);

        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
        v67(v55, v56);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_100543404(*(double *)(v0 + 680));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v46 = *(uint64_t (**)(unint64_t))(v0 + 8);
      return v46(v18);
    }
    else
    {
      uint64_t v27 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v28 = v27;
      swift_bridgeObjectRetain();
      id v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v29;
      void *v29 = v0;
      v29[1] = sub_10055E49C;
      uint64_t v30 = *(void *)(v0 + 800);
      return sub_10022AA7C(v30, v15);
    }
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v13;
    *(void *)(v0 + 824) = v23;
    *(void *)(v0 + 816) = v15;
    uint64_t v24 = *(void *)(v0 + 392);
    if ((v24 & 0xC000000000000001) != 0)
    {
      uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v26 = result;
    }
    else
    {
      uint64_t v26 = *(void *)(v24 + 8 * v23 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v26;
    *(void *)(v0 + 848) = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      return result;
    }
    static Task<>.checkCancellation()();
    if (v14)
    {
      uint64_t v31 = *(void **)(v0 + 800);
      uint64_t v32 = *(void **)(v0 + 784);
      unint64_t v33 = *(void **)(v0 + 760);
      double v22 = *(double *)(v0 + 680);
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_18;
    }
    uint64_t v35 = *(void *)(v0 + 768);
    id v69 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v36._countAndFlagsBits = 0x207972746E45;
    v36._object = (void *)0xE600000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v36);
    *(void *)(v0 + 368) = v23 + 1;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v37._countAndFlagsBits = 543584032;
    v37._object = (void *)0xE400000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
    *(void *)(v0 + 360) = v35;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
    String.LocalizationValue.init(stringInterpolation:)();
    id v39 = (id)qword_10083EE60;
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v69 setLocalizedAdditionalDescription:v40];

    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 856) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_10055B598;
    uint64_t v42 = *(void *)(v0 + 400);
    return sub_1005965A8(v42);
  }
}

uint64_t sub_10055E49C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(v5 + 1024) = a2;
  *(void *)(v5 + 1032) = v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 672);
    uint64_t v7 = *(void *)(v5 + 664);
    uint64_t v8 = sub_100560CA4;
  }
  else
  {
    *(void *)(v5 + 1040) = a1;
    uint64_t v6 = *(void *)(v5 + 672);
    uint64_t v7 = *(void *)(v5 + 664);
    uint64_t v8 = sub_10055E608;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10055E608()
{
  uint64_t v1 = v0;
  v0[17] = v0[130];
  uint64_t v57 = v0[129];
  uint64_t v2 = v0[128];
  uint64_t v3 = v0[99];
  uint64_t v4 = v1[69];
  uint64_t v55 = v1[60];
  uint64_t v5 = v1[58];
  uint64_t v58 = v1[59];
  uint64_t v7 = v1[56];
  uint64_t v6 = v1[57];
  uint64_t v8 = v1[50];
  v1[18] = v2;
  sub_100479098(v4);
  uint64_t v9 = (void *)(v8 + *(int *)(v3 + 40));
  uint64_t v10 = v9[1];
  uint64_t v51 = v9;
  v1[19] = *v9;
  v1[20] = v10;
  unsigned int v11 = enum case for URL.DirectoryHint.inferFromPath(_:);
  *((_DWORD *)v1 + 285) = enum case for URL.DirectoryHint.inferFromPath(_:);
  unint64_t v12 = *(void (**)(void))(v6 + 104);
  v1[131] = v12;
  v1[132] = (v6 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  unsigned int v52 = v11;
  uint64_t v53 = (void (*)(uint64_t, void, uint64_t))v12;
  v12(v5);
  v1[133] = sub_100014344();
  swift_bridgeObjectRetain();
  URL.appending<A>(path:directoryHint:)();
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v1[134] = v13;
  v1[135] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v1[136] = v14;
  v1[137] = (v55 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v15 = v58;
  uint64_t v59 = v14;
  v14(v4, v15);
  static String.Encoding.utf8.getter();
  StringProtocol.write(to:atomically:encoding:)();
  if (v57)
  {
    uint64_t v16 = (void *)v1[100];
    uint64_t v17 = (void *)v1[98];
    unint64_t v18 = (void *)v1[95];
    double v19 = *((double *)v1 + 85);
    uint64_t v20 = v1[63];
    uint64_t v21 = v1[59];
    uint64_t v22 = v1[52];
    uint64_t v23 = v1[53];
    uint64_t v24 = v1[51];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    v59(v20, v21);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100543404(v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v1[1];
    return v25();
  }
  else
  {
    uint64_t v56 = v13;
    uint64_t v27 = *((int *)v1 + 283);
    uint64_t v28 = v1[63];
    uint64_t v29 = v1[59];
    uint64_t v30 = v1[50];
    (*(void (**)(void, void))(v1[52] + 8))(v1[53], v1[51]);
    v59(v28, v29);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v30 + v27) == 2)
    {
      uint64_t v31 = *((int *)v1 + 282);
      uint64_t v32 = v1[69];
      uint64_t v33 = v1[58];
      uint64_t v34 = v1[56];
      uint64_t v35 = v1[50];
      uint64_t v50 = v1[59];
      id v36 = [(id)v1[97] progressWithTotalUnitCount:100];
      v1[138] = v36;
      [*(id *)(v35 + v31) addChild:v36 withPendingUnitCount:10];
      sub_100479098(v32);
      uint64_t v37 = v51[1];
      v1[23] = *v51;
      v1[24] = v37;
      v53(v33, v52, v34);
      swift_bridgeObjectRetain();
      URL.appending<A>(path:directoryHint:)();
      v56(v33, v34);
      swift_bridgeObjectRelease();
      v59(v32, v50);
      sub_100479098(v32);
      v1[25] = 0x2E6C616E72756F4ALL;
      v1[26] = 0xEB00000000666470;
      v53(v33, v52, v34);
      URL.appending<A>(path:directoryHint:)();
      v56(v33, v34);
      swift_bridgeObjectRelease();
      v59(v32, v50);
      Swift::String v38 = (void *)swift_task_alloc();
      v1[139] = v38;
      *Swift::String v38 = v1;
      v38[1] = sub_10055EE90;
      uint64_t v39 = v1[61];
      uint64_t v40 = v1[62];
      return sub_10047A440(v40, v39);
    }
    else
    {
      uint64_t v49 = (void *)v1[100];
      uint64_t v41 = (void *)v1[98];
      uint64_t v48 = (void *)v1[95];
      uint64_t v42 = v1[69];
      uint64_t v43 = v1[59];
      uint64_t v44 = v1[58];
      uint64_t v45 = v1[56];
      swift_release();
      sub_100010218(&qword_100802740);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1006D6280;
      sub_100479098(v42);
      uint64_t v46 = v51[1];
      v1[21] = *v51;
      v1[22] = v46;
      v53(v44, v52, v45);
      swift_bridgeObjectRetain();
      URL.appending<A>(path:directoryHint:)();
      v56(v44, v45);
      swift_bridgeObjectRelease();
      v59(v42, v43);

      swift_bridgeObjectRelease();
      sub_100543404(*((double *)v1 + 85));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v47 = (uint64_t (*)(uint64_t))v1[1];
      return v47(v54);
    }
  }
}

uint64_t sub_10055EE90()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1120) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v2[136];
  uint64_t v4 = v2[62];
  uint64_t v5 = v2[59];
  v3(v2[61], v5);
  v3(v4, v5);
  uint64_t v6 = v2[84];
  uint64_t v7 = v2[83];
  if (v0) {
    uint64_t v8 = sub_100560E5C;
  }
  else {
    uint64_t v8 = sub_10055F054;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10055F054()
{
  uint64_t v1 = *(void **)(v0 + 1104);
  unsigned int v11 = *(void (**)(uint64_t, uint64_t))(v0 + 1088);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1048);
  uint64_t v3 = *(unsigned int *)(v0 + 1140);
  uint64_t v14 = *(void **)(v0 + 800);
  unint64_t v12 = *(void **)(v0 + 784);
  unint64_t v13 = *(void **)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 552);
  uint64_t v9 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 448);
  swift_release();
  sub_100010218(&qword_100802740);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1006D6280;
  sub_100479098(v4);
  *(void *)(v0 + 216) = 0x2E6C616E72756F4ALL;
  *(void *)(v0 + 224) = 0xEB00000000666470;
  v2(v5, v3, v6);
  URL.appending<A>(path:directoryHint:)();
  v10(v5, v6);
  swift_bridgeObjectRelease();
  v11(v4, v9);
  [v1 setCompletedUnitCount:100];

  swift_bridgeObjectRelease();
  sub_100543404(*(double *)(v0 + 680));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v15);
}

uint64_t sub_10055F334()
{
  uint64_t v1 = *((void *)v0 + 106);
  uint64_t v2 = (void *)*((void *)v0 + 100);
  uint64_t v3 = (void *)*((void *)v0 + 98);
  uint64_t v4 = (void *)*((void *)v0 + 95);
  double v5 = v0[85];
  swift_release();
  [v3 setCompletedUnitCount:v1];

  swift_release();
  swift_bridgeObjectRelease();
  sub_100543404(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v6();
}

uint64_t sub_10055F510()
{
  (*(void (**)(void, void))(v0 + 888))(*(void *)(v0 + 544), *(void *)(v0 + 472));
  if (qword_1007F7CA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100811200);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 840);
  if (v4)
  {
    id v57 = *(id *)(v0 + 864);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412546;
    uint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
    *(void *)(v0 + 352) = v8;
    id v9 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v7[1] = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "ExportTask failed to build html for entry %@: %@", (uint8_t *)v6, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 832);
  uint64_t v12 = *(void *)(v0 + 816);
  *(void *)(v0 + 1008) = v12;
  uint64_t v13 = *(void *)(v0 + 848);
  uint64_t v14 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v13];
  swift_release();
  if (v13 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static Task<>.checkCancellation()();
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
    {
      if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
      {
        uint64_t v32 = *(void **)(v0 + 784);
        uint64_t v33 = *(void **)(v0 + 760);

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        id v31 = sub_100049F54();
        uint64_t v54 = v35;
        uint64_t v55 = *(void *)(v0 + 552);
        uint64_t v59 = *(void **)(v0 + 480);
        uint64_t v36 = *(void *)(v0 + 464);
        uint64_t v52 = *(void *)(v0 + 472);
        uint64_t v37 = *(void *)(v0 + 456);
        uint64_t v47 = *(void *)(v0 + 448);
        Swift::String v38 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
        uint64_t v39 = v38[1];
        *(void *)(v0 + 232) = *v38;
        *(void *)(v0 + 240) = v39;
        unsigned int v49 = enum case for URL.DirectoryHint.inferFromPath(_:);
        uint64_t v48 = *(void (**)(uint64_t))(v37 + 104);
        id v51 = v31;
        v48(v36);
        sub_100014344();
        swift_bridgeObjectRetain();
        URL.appending<A>(path:directoryHint:)();
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
        v50(v36, v47);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = 0x74682E7865646E69;
        *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
        ((void (*)(uint64_t, void, uint64_t))v48)(v36, v49, v47);
        uint64_t v40 = v55;
        URL.appending<A>(path:directoryHint:)();
        v50(v36, v47);
        swift_bridgeObjectRelease();
        uint64_t v56 = (void (*)(uint64_t, uint64_t))v59[1];
        v56(v40, v52);
        *(void *)(v0 + 104) = v51;
        *(void *)(v0 + 112) = v54;
        static String.Encoding.utf8.getter();
        StringProtocol.write(to:atomically:encoding:)();
        os_log_t log = *(os_log_t *)(v0 + 800);
        uint64_t v41 = *(void **)(v0 + 760);
        uint64_t v42 = *(void *)(v0 + 512);
        uint64_t v43 = *(void *)(v0 + 472);
        uint64_t v44 = *(void *)(v0 + 432);
        uint64_t v46 = *(void *)(v0 + 408);
        uint64_t v45 = *(void *)(v0 + 416);

        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
        v56(v42, v43);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_100543404(*(double *)(v0 + 680));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v34(v11);
    }
    else
    {
      double v19 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v20 = v19;
      swift_bridgeObjectRetain();
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_10055E49C;
      uint64_t v22 = *(void *)(v0 + 800);
      return sub_10022AA7C(v22, v12);
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v11;
    *(void *)(v0 + 824) = v15;
    *(void *)(v0 + 816) = v12;
    uint64_t v16 = *(void *)(v0 + 392);
    if ((v16 & 0xC000000000000001) != 0)
    {
      uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v18 = result;
    }
    else
    {
      uint64_t v18 = *(void *)(v16 + 8 * v15 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v18;
    *(void *)(v0 + 848) = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      static Task<>.checkCancellation()();
      uint64_t v23 = *(void *)(v0 + 768);
      id v58 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._countAndFlagsBits = 0x207972746E45;
      v24._object = (void *)0xE600000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
      *(void *)(v0 + 368) = v15 + 1;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v25._countAndFlagsBits = 543584032;
      v25._object = (void *)0xE400000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
      *(void *)(v0 + 360) = v23;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
      String.LocalizationValue.init(stringInterpolation:)();
      id v27 = (id)qword_10083EE60;
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v58 setLocalizedAdditionalDescription:v28];

      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v29;
      void *v29 = v0;
      v29[1] = sub_10055B598;
      uint64_t v30 = *(void *)(v0 + 400);
      return sub_1005965A8(v30);
    }
  }
  return result;
}

uint64_t sub_1005600D0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 472);
  v1(*(void *)(v0 + 536), v3);
  v1(v2, v3);
  if (qword_1007F7CA8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_100811200);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 840);
  if (v7)
  {
    id v60 = *(id *)(v0 + 864);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    uint64_t v11 = *(void **)(v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
    *(void *)(v0 + 352) = v11;
    id v12 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v11;
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v10[1] = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "ExportTask failed to build html for entry %@: %@", (uint8_t *)v9, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v14 = *(void *)(v0 + 832);
  uint64_t v15 = *(void *)(v0 + 816);
  *(void *)(v0 + 1008) = v15;
  uint64_t v16 = *(void *)(v0 + 848);
  uint64_t v17 = *(void *)(v0 + 688);
  [*(id *)(v0 + 784) setCompletedUnitCount:v16];
  swift_release();
  if (v16 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static Task<>.checkCancellation()();
    if (*(unsigned __int8 *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)) - 1 >= 2)
    {
      if (*(unsigned char *)(*(void *)(v0 + 400) + *(int *)(v0 + 1132)))
      {
        uint64_t v35 = *(void **)(v0 + 784);
        uint64_t v36 = *(void **)(v0 + 760);

        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        id v34 = sub_100049F54();
        uint64_t v57 = v38;
        uint64_t v58 = *(void *)(v0 + 552);
        unsigned int v62 = *(void **)(v0 + 480);
        uint64_t v39 = *(void *)(v0 + 464);
        uint64_t v55 = *(void *)(v0 + 472);
        uint64_t v40 = *(void *)(v0 + 456);
        uint64_t v50 = *(void *)(v0 + 448);
        uint64_t v41 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 792) + 28));
        uint64_t v42 = v41[1];
        *(void *)(v0 + 232) = *v41;
        *(void *)(v0 + 240) = v42;
        unsigned int v52 = enum case for URL.DirectoryHint.inferFromPath(_:);
        id v51 = *(void (**)(uint64_t))(v40 + 104);
        id v54 = v34;
        v51(v39);
        sub_100014344();
        swift_bridgeObjectRetain();
        URL.appending<A>(path:directoryHint:)();
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v53(v39, v50);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = 0x74682E7865646E69;
        *(void *)(v0 + 96) = 0xEA00000000006C6DLL;
        ((void (*)(uint64_t, void, uint64_t))v51)(v39, v52, v50);
        uint64_t v43 = v58;
        URL.appending<A>(path:directoryHint:)();
        v53(v39, v50);
        swift_bridgeObjectRelease();
        uint64_t v59 = (void (*)(uint64_t, uint64_t))v62[1];
        v59(v43, v55);
        *(void *)(v0 + 104) = v54;
        *(void *)(v0 + 112) = v57;
        static String.Encoding.utf8.getter();
        StringProtocol.write(to:atomically:encoding:)();
        os_log_t log = *(os_log_t *)(v0 + 800);
        uint64_t v44 = *(void **)(v0 + 760);
        uint64_t v45 = *(void *)(v0 + 512);
        uint64_t v46 = *(void *)(v0 + 472);
        uint64_t v47 = *(void *)(v0 + 432);
        uint64_t v49 = *(void *)(v0 + 408);
        uint64_t v48 = *(void *)(v0 + 416);

        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
        v59(v45, v46);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_100543404(*(double *)(v0 + 680));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v37 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v37(v14);
    }
    else
    {
      uint64_t v22 = *(void **)(v0 + 800);
      swift_bridgeObjectRelease();
      id v23 = v22;
      swift_bridgeObjectRetain();
      Swift::String v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v24;
      void *v24 = v0;
      v24[1] = sub_10055E49C;
      uint64_t v25 = *(void *)(v0 + 800);
      return sub_10022AA7C(v25, v15);
    }
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 848);
    *(void *)(v0 + 832) = v14;
    *(void *)(v0 + 824) = v18;
    *(void *)(v0 + 816) = v15;
    uint64_t v19 = *(void *)(v0 + 392);
    if ((v19 & 0xC000000000000001) != 0)
    {
      uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v21 = result;
    }
    else
    {
      uint64_t v21 = *(void *)(v19 + 8 * v18 + 32);
      uint64_t result = swift_retain();
    }
    *(void *)(v0 + 840) = v21;
    *(void *)(v0 + 848) = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
    }
    else
    {
      static Task<>.checkCancellation()();
      uint64_t v26 = *(void *)(v0 + 768);
      id v61 = *(id *)(*(void *)(v0 + 400) + *(int *)(v0 + 1128));
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._countAndFlagsBits = 0x207972746E45;
      v27._object = (void *)0xE600000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
      *(void *)(v0 + 368) = v18 + 1;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v28._countAndFlagsBits = 543584032;
      v28._object = (void *)0xE400000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
      *(void *)(v0 + 360) = v26;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v29);
      String.LocalizationValue.init(stringInterpolation:)();
      id v30 = (id)qword_10083EE60;
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v61 setLocalizedAdditionalDescription:v31];

      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 856) = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_10055B598;
      uint64_t v33 = *(void *)(v0 + 400);
      return sub_1005965A8(v33);
    }
  }
  return result;
}

uint64_t sub_100560CA4()
{
  uint64_t v1 = (void *)*((void *)v0 + 100);
  uint64_t v2 = (void *)*((void *)v0 + 98);
  uint64_t v3 = (void *)*((void *)v0 + 95);
  double v4 = v0[85];
  swift_release();

  swift_bridgeObjectRelease();
  sub_100543404(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v5();
}

uint64_t sub_100560E5C()
{
  uint64_t v1 = (void *)*((void *)v0 + 138);
  uint64_t v2 = (void *)*((void *)v0 + 100);
  uint64_t v3 = (void *)*((void *)v0 + 98);
  double v4 = (void *)*((void *)v0 + 95);
  double v5 = v0[85];
  swift_release();
  [v1 setCompletedUnitCount:100];

  swift_bridgeObjectRelease();
  sub_100543404(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v6();
}

uint64_t sub_100561030(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FF308);
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1005611D4(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for JournalEntryMO();
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_100561368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for Locale();
  v3[5] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v3[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[7] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[8] = v5;
  v3[9] = v4;
  return _swift_task_switch(sub_10056145C, v5, v4);
}

uint64_t sub_10056145C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(int *)(type metadata accessor for ExportOptions() + 52);
  *(_DWORD *)(v0 + 144) = v2;
  uint64_t v3 = *(void **)(v1 + v2);
  String.LocalizationValue.init(stringLiteral:)();
  if (qword_1007F7F08 != -1) {
    swift_once();
  }
  id v4 = (id)qword_10083EE60;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setLocalizedAdditionalDescription:v5];

  static Task<>.checkCancellation()();
  *(void *)(v0 + 80) = 0;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100561644;
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 16);
  return sub_100542CEC(v8, v7);
}

uint64_t sub_100561644(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_10056176C, v4, v3);
}

uint64_t sub_10056176C()
{
  uint64_t v1 = v0[10];
  static Task<>.checkCancellation()();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100811218 + dword_100811218);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100561888;
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[3];
    return v7(v5, v6);
  }
}

uint64_t sub_100561888()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_100561AF8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_1005619BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005619BC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  static Task<>.checkCancellation()();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(int *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 24);
    id v6 = [self progressWithTotalUnitCount:100];
    *(void *)(v0 + 120) = v6;
    [*(id *)(v5 + v4) addChild:v6 withPendingUnitCount:10];
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100561B78;
    return sub_100479E3C();
  }
}

uint64_t sub_100561AF8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100561B78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_100561D50;
  }
  else {
    uint64_t v5 = sub_100561CB4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100561CB4()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_release();
  [v1 setCompletedUnitCount:100];

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100561D50()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100561DCC()
{
  return swift_deallocObject();
}

uint64_t sub_100561E04@<X0>(double **a1@<X8>)
{
  return sub_1005431A4(a1);
}

uint64_t sub_100561E20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100561E80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100561EC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100561F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ExportError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100562064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExportError()
{
  return &type metadata for ExportError;
}

unint64_t sub_1005620A0()
{
  unint64_t result = qword_100811420;
  if (!qword_100811420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100811420);
  }
  return result;
}

id sub_1005620F4()
{
  uint64_t v1 = (objc_class *)type metadata accessor for UnsupportedEntryViewController();
  v31.receiver = v0;
  v31.super_class = v1;
  [super viewDidLoad];
  if (qword_1007F7A38 != -1) {
    swift_once();
  }
  void v30[3] = v1;
  v30[0] = v0;
  swift_bridgeObjectRetain();
  id v2 = v0;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v1)
  {
    unsigned int v4 = sub_10002E0BC(v30, (uint64_t)v1);
    uint64_t v5 = *((void *)v1 - 1);
    __n128 v6 = __chkstk_darwin(v4);
    uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, objc_class *))(v5 + 8))(v8, v1);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v30);
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = objc_allocWithZone((Class)UIBarButtonItem);
  id v11 = [v10 initWithTitle:v3 style:0 target:v9 action:@"handleCloseButton" v30[0]];

  swift_unknownObjectRelease();
  id v12 = [v2 navigationController];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 navigationBar];

    id v15 = [v14 topItem];
    if (v15)
    {
      [v15 setLeftBarButtonItem:v11];
    }
  }
  uint64_t v16 = self;
  id v17 = [v16 mainBundle];
  v18._countAndFlagsBits = 0xD000000000000011;
  v32._object = (void *)0x800000010069A4C0;
  v18._object = (void *)0x800000010068F080;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0xD000000000000019;
  Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v32);

  id v21 = [v16 mainBundle];
  v22._countAndFlagsBits = 0xD00000000000005ELL;
  v33._object = (void *)0x800000010069A4C0;
  v22._object = (void *)0x80000001006A5FE0;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0xD000000000000019;
  Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v33);

  if (qword_1007F6D48 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)qword_10083D308;
  objc_allocWithZone((Class)type metadata accessor for FullScreenUnsupportedItemView());
  id v26 = v25;
  Swift::String v27 = sub_100161E20(v20._countAndFlagsBits, (uint64_t)v20._object, v24._countAndFlagsBits, (uint64_t)v24._object, 0, v25);
  id result = [v2 view];
  if (result)
  {
    Swift::String v29 = result;
    [result addSubview:v27];

    sub_1001DCF60(0.0);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100562644()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UnsupportedEntryViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for UnsupportedEntryViewController()
{
  return self;
}

uint64_t sub_10056269C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100811478);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100811478);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  NSString v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_100562764()
{
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

id sub_100562814@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  unsigned int v4 = *(void **)(v3 + 40);
  int v5 = *(_DWORD *)(v3 + 48);
  *(void *)a2 = v4;
  *(_DWORD *)(a2 + 8) = v5;

  return v4;
}

uint64_t sub_1005628D4(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

void sub_1005629A4(uint64_t a1, void *a2, int a3)
{
  swift_beginAccess();
  __n128 v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 48) = a3;
  id v7 = a2;
}

uint64_t sub_100562A14()
{
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t sub_100562AA0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 52);
  return result;
}

uint64_t sub_100562B34()
{
  return swift_release();
}

uint64_t sub_100562BF0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100562C94@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100562D40()
{
  return swift_release();
}

uint64_t sub_100562E0C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100562E74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100562F18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100562FC4()
{
  return swift_release();
}

uint64_t sub_100563090(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 64) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_1005630F8()
{
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

id sub_1005631B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  unsigned int v4 = *(void **)(v3 + 72);
  int v5 = *(_DWORD *)(v3 + 80);
  uint64_t v6 = *(void *)(v3 + 88);
  char v7 = *(unsigned char *)(v3 + 96);
  *(void *)a2 = v4;
  *(_DWORD *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = v7;

  return v4;
}

uint64_t sub_100563288(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

void sub_100563370(uint64_t a1, void *a2, int a3, uint64_t a4, char a5)
{
  swift_beginAccess();
  id v10 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = a2;
  *(_DWORD *)(a1 + 80) = a3;
  *(void *)(a1 + 88) = a4;
  *(unsigned char *)(a1 + 96) = a5;
  id v11 = a2;
}

uint64_t sub_1005633F8()
{
  return swift_retain();
}

uint64_t sub_100563488@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 104);
  return swift_retain();
}

uint64_t sub_100563520()
{
  return swift_release();
}

id sub_1005635EC@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 104);
  unsigned int v4 = *(void **)(v3 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
  if (v4)
  {
    uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
    *(void *)(a1 + 24) = _s10AudioAssetCMa(0);
    *(void *)(a1 + 32) = &off_1007B7DC8;
    unsigned int v4 = v6;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }

  return v4;
}

uint64_t sub_1005636CC()
{
  v1[3] = v0;
  v1[4] = type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  id v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  *id v2 = v1;
  v2[1] = sub_10056377C;
  return sub_1005648BC();
}

uint64_t sub_10056377C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100563AFC;
  }
  else {
    uint64_t v4 = sub_1005638D8;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1005638D8()
{
  uint64_t v1 = v0[3];
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  v0[2] = v1;
  sub_100568400(&qword_100811780);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = self;
  id v4 = [v3 defaultCenter];
  int v5 = self;
  id v6 = [v5 sharedInstance];
  [v4 addObserver:v1 selector:"handleAudioSessionInterruption:" name:AVAudioSessionInterruptionNotification object:v6];

  id v7 = [v3 defaultCenter];
  id v8 = [v5 sharedInstance];
  [v7 addObserver:v1 selector:"handleAudioSessionRouteChange:" name:AVAudioSessionRouteChangeNotification object:v8];

  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100563AFC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100563B60()
{
  v1[12] = v0;
  type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v3;
  v1[15] = v2;
  return _swift_task_switch(sub_100563BF8, v3, v2);
}

uint64_t sub_100563BF8()
{
  uint64_t v1 = v0[12];
  swift_getKeyPath();
  v0[5] = v1;
  v0[16] = OBJC_IVAR____TtC7Journal21AudioRecordingManager___observationRegistrar;
  v0[17] = sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  if (*(_DWORD *)(v1 + 80))
  {
    sub_100504C18();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[18] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100563E24;
    return sub_100140308();
  }
  else
  {
    swift_release();
    if (qword_1007F7CB0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100811478);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Prevented stopping the recording since we don't have any audio to save", v7, 2u);
      swift_slowDealloc();
    }

    id v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100563E24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_1005641A0;
  }
  else {
    uint64_t v5 = sub_100563F60;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100563F60()
{
  uint64_t v1 = v0[12];
  swift_release();
  swift_getKeyPath();
  v0[6] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[7] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  *(unsigned char *)(v1 + 96) = 0;
  v0[8] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[9] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  swift_retain();
  sub_10056844C(v1, v2);
  swift_release();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 0;
  v0[10] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = 0;
  v0[11] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1005641A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100564204()
{
  [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioEngine) pause];
  swift_getKeyPath();
  sub_100568400(&qword_100811780);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *(unsigned char *)(v0 + 96) = 0;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = sub_100568400(&qword_10080BE48);
  swift_retain();
  sub_100375FFC(v0, v1, 0);
  return swift_release();
}

uint64_t sub_1005643F4()
{
  v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_10056448C, v3, v2);
}

uint64_t sub_10056448C()
{
  uint64_t v1 = v0[5];
  swift_getKeyPath();
  uint64_t v2 = OBJC_IVAR____TtC7Journal21AudioRecordingManager___observationRegistrar;
  v0[2] = v1;
  v0[9] = v2;
  v0[10] = sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 52) == 2)
  {
    uint64_t v3 = v0[5];
    swift_getKeyPath();
    v0[3] = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(unsigned char *)(*(void *)(v3 + 104) + 16) = 1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100564624;
    return sub_100504834();
  }
  else
  {
    swift_release();
    os_log_type_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100564624()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_100564858;
  }
  else {
    uint64_t v5 = sub_100564760;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100564760()
{
  uint64_t v1 = v0[5];
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  v0[4] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100564858()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005648BC()
{
  v1[18] = v0;
  sub_100010218(&qword_1007FA1D0);
  v1[19] = swift_task_alloc();
  uint64_t v2 = sub_100010218(&qword_10080FF40);
  v1[20] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[21] = v3;
  v1[22] = *(void *)(v3 + 64);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v1[26] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v1[27] = v4;
  v1[28] = *(void *)(v4 - 8);
  v1[29] = swift_task_alloc();
  v1[30] = type metadata accessor for MainActor();
  v1[31] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[32] = v6;
  v1[33] = v5;
  return _swift_task_switch(sub_100564A98, v6, v5);
}

uint64_t sub_100564A98()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 41;
  v0[3] = sub_100564BA0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002DA94C;
  v0[13] = &unk_1007B29F0;
  v0[14] = v2;
  [v1 requestRecordPermissionWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100564BA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264);
  uint64_t v2 = *(void *)(*(void *)v0 + 256);
  return _swift_task_switch(sub_100564CA8, v2, v1);
}

uint64_t sub_100564CA8()
{
  if (*(unsigned char *)(v0 + 328) == 1)
  {
    if (qword_1007F6DC8 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void *)(v0 + 144);
    uint64_t v2 = qword_10083D360;
    uint64_t v3 = sub_100568400(&qword_10080BE48);
    uint64_t v4 = swift_retain();
    sub_10030FE24(v4, v3);
    *(void *)(v2 + 24) = v3;
    swift_unknownObjectWeakAssign();
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 272) = OBJC_IVAR____TtC7Journal21AudioRecordingManager___observationRegistrar;
    *(void *)(v0 + 120) = v1;
    *(void *)(v0 + 280) = sub_100568400(&qword_100811780);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 288) = *(void *)(v1 + 104);
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100564F18;
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 144);
    return sub_1003747A8(v6, v7, v3);
  }
  else
  {
    swift_release();
    sub_1002E63B4();
    swift_allocError();
    unsigned char *v9 = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100564F18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 256);
    uint64_t v4 = *(void *)(v2 + 264);
    uint64_t v5 = sub_1005656E4;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 256);
    uint64_t v4 = *(void *)(v2 + 264);
    uint64_t v5 = sub_100565034;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100565034()
{
  id v15 = v0;
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[26];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_release();
    sub_10001457C(v3, (uint64_t *)&unk_100800A60);
    if (qword_1007F7CB0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100811478);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      v0[16] = sub_10011EA98(0x292864726F636572, 0xE800000000000000, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s - creating an asset and attachment failed", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1002E63B4();
    swift_allocError();
    unsigned char *v8 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[29], v3, v1);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[39] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100565330;
    uint64_t v12 = v0[29];
    uint64_t v13 = v0[24];
    return sub_100503864(v13, v12);
  }
}

uint64_t sub_100565330()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v5 = sub_1005657A0;
  }
  else {
    uint64_t v5 = sub_10056546C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10056546C()
{
  uint64_t v18 = v0[27];
  uint64_t v19 = v0[29];
  unint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v17 = v0[28];
  uint64_t v14 = v3;
  uint64_t v4 = v0[21];
  uint64_t v15 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  swift_release();
  uint64_t v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32);
  v16(v1, v2, v6);
  static TaskPriority.high.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v3, v1, v6);
  swift_retain();
  uint64_t v9 = static MainActor.shared.getter();
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  v16(v11 + v10, v14, v6);
  *(void *)(v11 + ((v15 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  sub_100328A60(v5, (uint64_t)&unk_1008117D0, v11);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1, v6);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1005656E4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005657A0()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[18];
  swift_release();
  swift_getKeyPath();
  v0[17] = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = swift_retain();
  sub_10056882C(v5);
  swift_release();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1005658D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  uint64_t v6 = sub_100010218(&qword_1008117D8);
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = type metadata accessor for MainActor();
  v5[14] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[15] = v8;
  v5[16] = v7;
  return _swift_task_switch(sub_1005659D4, v8, v7);
}

uint64_t sub_1005659D4()
{
  if (qword_1007F7CB0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[17] = sub_100026A54(v1, (uint64_t)qword_100811478);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Recording task starting for identifier", v4, 2u);
    swift_slowDealloc();
  }

  sub_100010218(&qword_10080FF40);
  AsyncStream.makeAsyncIterator()();
  swift_beginAccess();
  v0[18] = 0;
  uint64_t v5 = static MainActor.shared.getter();
  v0[19] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[20] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100565B98;
  uint64_t v7 = v0[10];
  return AsyncStream.Iterator.next(isolation:)(v0 + 5, v5, &protocol witness table for MainActor, v7);
}

uint64_t sub_100565B98()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_100565CDC, v3, v2);
}

uint64_t sub_100565CDC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  v0[21] = v2;
  v0[22] = v1;
  if (v2)
  {
    uint64_t Strong = swift_weakLoadStrong();
    v0[23] = Strong;
    if (Strong)
    {
      uint64_t v4 = (void *)swift_task_alloc();
      v0[24] = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_100565E9C;
      return sub_100566AB8((uint64_t)v2, (uint64_t)v1);
    }
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_release();
  }
  else
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_release();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v6, "Recording task finished", v7, 2u);
      swift_slowDealloc();
    }
  }

  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100565E9C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  uint64_t v3 = *(void *)(*v0 + 168);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 200) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100566014;
  return sub_1005666C4(v3, v2);
}

uint64_t sub_100566014()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_100566134, v3, v2);
}

uint64_t sub_100566134()
{
  v0[26] = *(void *)(v0[23] + 24);
  swift_retain();
  v0[27] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[28] = v2;
  v0[29] = v1;
  return _swift_task_switch(sub_1005661D0, v2, v1);
}

uint64_t sub_1005661D0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 208) + 112);
  *(void *)(v0 + 240) = v1;
  return _swift_task_switch(sub_1005661F4, v1, 0);
}

uint64_t sub_1005661F4()
{
  if (*(void *)(v0[30] + 112))
  {
    uint64_t v1 = (void *)v0[21];
    uint64_t v2 = v0[18];
    swift_retain();
    sub_1004CF2AC(v1);
    v0[31] = v2;
    swift_release();
    if (v2)
    {
      uint64_t v3 = v0[28];
      uint64_t v4 = v0[29];
      uint64_t v5 = sub_100566400;
      goto LABEL_7;
    }
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = v0[18];
  }
  v0[32] = v6;
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[29];
  uint64_t v5 = sub_1005662B0;
LABEL_7:
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005662B0()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  return _swift_task_switch(sub_10056631C, v1, v2);
}

uint64_t sub_10056631C()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_release();

  v0[18] = v0[32];
  uint64_t v3 = static MainActor.shared.getter();
  v0[19] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100565B98;
  uint64_t v5 = v0[10];
  return AsyncStream.Iterator.next(isolation:)(v0 + 5, v3, &protocol witness table for MainActor, v5);
}

uint64_t sub_100566400()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  return _swift_task_switch(sub_10056646C, v1, v2);
}

uint64_t sub_10056646C()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (void *)v0[22];
    uint64_t v13 = (void *)v0[21];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Transcription error: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = (void *)v0[22];
    uint64_t v8 = (void *)v0[21];
    swift_release();

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  v0[18] = 0;
  uint64_t v9 = static MainActor.shared.getter();
  v0[19] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[20] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100565B98;
  uint64_t v11 = v0[10];
  return AsyncStream.Iterator.next(isolation:)(v0 + 5, v9, &protocol witness table for MainActor, v11);
}

uint64_t sub_1005666C4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100566760, v5, v4);
}

uint64_t sub_100566760()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  swift_release();
  uint64_t v4 = *(void **)(v1 + 32);
  id v5 = v3;
  id v6 = v2;
  [v4 recordingStartTime];
  if (v7 == 0.0)
  {
    uint64_t v8 = *(void *)(v0 + 48);
    id v9 = [*(id *)(v0 + 40) format];
    [v4 prepareToProcessWithFormat:v9 audioTime:v8 punchInTime:0.0];
  }
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = *(void **)(v0 + 40);
  uint64_t v17 = v11;
  uint64_t v18 = *(void **)(v0 + 48);
  [v4 processAudioBuffer:v11];
  swift_getKeyPath();
  *(void *)(v0 + 16) = v10;
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 16) = v10;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v12 = sub_1003044D8(v11);
  uint64_t v14 = v13;
  swift_endAccess();
  *(void *)(v0 + 16) = v10;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v10;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 16) = v10;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_1000C92C4((uint64_t)v12);
  swift_endAccess();
  *(void *)(v0 + 16) = v10;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v10;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 16) = v10;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_1000C92C4(v14);
  swift_endAccess();
  *(void *)(v0 + 16) = v10;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();

  swift_release();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100566AB8(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100566B54, v5, v4);
}

uint64_t sub_100566B54()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[5];
  id v6 = (void *)v0[6];
  swift_release();
  swift_getKeyPath();
  v0[2] = v1;
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v3 = *(unsigned char *)(v1 + 52);
  swift_getKeyPath();
  v0[2] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[2] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_1003A62F8(v3, v2, v6);
  swift_endAccess();
  v0[2] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100566CF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = Notification.userInfo.getter();
  if (!v5)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    return sub_10001457C((uint64_t)&v16, &qword_1007FAD50);
  }
  uint64_t v6 = v5;
  v14[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v14[2] = v7;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_10001B738((uint64_t)v15), (v9 & 1) != 0))
  {
    sub_10001B648(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)v15);
  if (!*((void *)&v17 + 1)) {
    return sub_10001457C((uint64_t)&v16, &qword_1007FAD50);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) != 0 && v15[0] == 1)
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v1;
    sub_1005D74B4((uint64_t)v4, (uint64_t)&unk_1008117C0, (uint64_t)v13);
    return swift_release();
  }
  return result;
}

uint64_t sub_100566EEC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100566F98;
  return sub_100563B60();
}

uint64_t sub_100566F98()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100568CC0;
  }
  else {
    uint64_t v4 = sub_100568CDC;
  }
  return _swift_task_switch(v4, v3, v2);
}

void sub_10056710C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = Notification.userInfo.getter();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v7;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v6 + 16) && (unint64_t v8 = sub_10001B738((uint64_t)v21), (v9 & 1) != 0))
    {
      sub_10001B648(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v22);
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)v21);
    if (*((void *)&v23 + 1))
    {
      if (swift_dynamicCast())
      {
        unint64_t v10 = v19;
        if (qword_1007F7CB0 != -1) {
          swift_once();
        }
        uint64_t v11 = type metadata accessor for Logger();
        sub_100026A54(v11, (uint64_t)qword_100811478);
        uint64_t v12 = Logger.logObject.getter();
        os_log_type_t v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v14 = 134217984;
          v21[0] = v10;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "AVAudioSession route changed during recording, reason: %lu", v14, 0xCu);
          swift_slowDealloc();
        }

        if (v10 <= 2)
        {
          uint64_t v15 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
          type metadata accessor for MainActor();
          swift_retain();
          uint64_t v16 = static MainActor.shared.getter();
          long long v17 = (void *)swift_allocObject();
          v17[2] = v16;
          v17[3] = &protocol witness table for MainActor;
          v17[4] = v1;
          sub_1005D74B4((uint64_t)v4, (uint64_t)&unk_1008117B0, (uint64_t)v17);
          swift_release();
        }
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v22, &qword_1007FAD50);
    }
  }
}

uint64_t sub_1005673E4()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100567490;
  return sub_100563B60();
}

uint64_t sub_100567490()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100567650;
  }
  else {
    uint64_t v4 = sub_1005675EC;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1005675EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100567650()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005676CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  a4(v8);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id *sub_1005677C4()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC7Journal21AudioRecordingManager___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100567868()
{
  sub_1005677C4();

  return swift_deallocClassInstance();
}

uint64_t sub_1005678C0()
{
  return type metadata accessor for AudioRecordingManager();
}

uint64_t type metadata accessor for AudioRecordingManager()
{
  uint64_t result = qword_1008114C0;
  if (!qword_1008114C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100567914()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005679FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + 16);
  if (v3)
  {
    id v4 = [v3 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

double sub_100567ACC()
{
  return sub_100567AE8();
}

double sub_100567AE8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v22 = v0;
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v5 = *(void **)(v0 + 72);
  unsigned int v6 = *(_DWORD *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  int v8 = *(unsigned __int8 *)(v0 + 96);
  id v9 = v5;
  double v10 = 0.0;
  double v11 = 0.0;
  if (v8 == 1 && v7)
  {
    double v12 = CACurrentMediaTime();
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v14 = v13;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    [self secondsForHostTime:v7];
    double v11 = v12 + v14 - v15;
  }
  if (v5)
  {
    id v16 = v9;
    [v16 sampleRate];
    if (v17 <= 0.0)
    {
    }
    else
    {
      [v16 sampleRate];
      double v19 = v18;

      double v10 = (double)v6 / v19;
    }
  }
  return v11 + v10;
}

uint64_t sub_100567D0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_1005643F4();
}

uint64_t sub_100567D98()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_1005636CC();
}

uint64_t sub_100567E24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10002C194;
  return sub_100563B60();
}

double sub_100567EB0()
{
  swift_getKeyPath();
  uint64_t v17 = v0;
  sub_100568400(&qword_100811780);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 72);
  unsigned int v2 = *(_DWORD *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  int v4 = *(unsigned __int8 *)(v17 + 96);
  id v5 = v1;
  uint64_t v6 = mach_absolute_time();
  double v7 = 0.0;
  double v8 = 0.0;
  if (v4 == 1)
  {
    if (v3)
    {
      BOOL v9 = v6 >= v3;
      uint64_t v10 = v6 - v3;
      if (v10 != 0 && v9)
      {
        [self secondsForHostTime:v10];
        double v8 = v11;
      }
    }
  }
  if (v1)
  {
    id v12 = v5;
    [v12 sampleRate];
    if (v13 <= 0.0)
    {
    }
    else
    {
      [v12 sampleRate];
      double v15 = v14;

      double v7 = (double)v2 / v15;
    }
  }
  return v8 + v7;
}

uint64_t sub_10056800C()
{
  return swift_bridgeObjectRetain();
}

double sub_1005680B0()
{
  return sub_100567EB0();
}

double sub_1005680D4()
{
  return 25.0;
}

uint64_t sub_100568160(uint64_t a1)
{
  uint64_t result = sub_100568400(&qword_100811780);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005681A4(uint64_t a1)
{
  uint64_t result = sub_100568400(&qword_1008117A0);
  *(void *)(a1 + 16) = result;
  return result;
}

void sub_1005681F0()
{
}

uint64_t sub_100568210()
{
  return sub_100563090(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100568234()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 52) = *(unsigned char *)(v0 + 24);
}

void sub_10056824C()
{
  sub_1005629A4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(_DWORD *)(v0 + 32));
}

uint64_t sub_100568274()
{
  return sub_100562E0C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100568294()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10002C194;
  return sub_1005673E4();
}

uint64_t sub_10056834C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_100566EEC();
}

uint64_t sub_100568400(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AudioRecordingManager();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10056844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100568400(&qword_10080BE48);
  id v5 = *(void **)(a2 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
  if (v5)
  {
    uint64_t v6 = v4;
    *(unsigned char *)(a2 + 16) = 0;
    double v14 = v5;
    sub_100375FFC(a1, v6, 1);
    uint64_t v7 = a2 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(NSObject *, void, uint64_t, uint64_t))(v8 + 32))(v14, 0, ObjectType, v8);
      swift_unknownObjectRelease();
      uint64_t v10 = v14;
    }
    else
    {
      osos_log_t log = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)id v12 = 136315138;
        sub_10011EA98(0xD000000000000025, 0x80000001006A6160, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, oslog, v11, "%s - pickerDelegate is nil", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }

      uint64_t v10 = oslog;
    }
  }
}

uint64_t sub_10056867C(uint64_t a1, uint64_t a2)
{
  if (qword_1007F6DB0 != -1) {
    swift_once();
  }
  int v5 = dword_100807BE0;
  *(void *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 48) = v5;
  *(unsigned char *)(v2 + 52) = 0;
  *(void *)(v2 + 56) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 64) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 72) = 0;
  *(_DWORD *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(_WORD *)(v2 + 96) = 0;
  ObservationRegistrar.init()();
  *(void *)(v2 + 104) = a1;
  type metadata accessor for AudioEngineRecordingMethod();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  uint64_t v7 = v6 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_outputContinuation;
  uint64_t v8 = sub_100010218((uint64_t *)&unk_10080FE90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioSession;
  type metadata accessor for SessionActor();
  uint64_t v10 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v10 + 112) = [self sharedInstance];
  *(void *)(v6 + v9) = v10;
  id v11 = [objc_allocWithZone((Class)AVAudioEngine) init];
  *(void *)(v6 + OBJC_IVAR____TtC7Journal26AudioEngineRecordingMethod_audioEngine) = v11;
  *(void *)(v2 + 16) = v6;
  id v12 = [objc_allocWithZone((Class)RCActivityWaveformProcessor) init];
  *(void *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = v12;
  return v2;
}

void sub_10056882C(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
    if (v3)
    {
      uint64_t v4 = *(void *)(v2 + 8);
      swift_getObjectType();
      int v5 = *(void (**)(void))(v4 + 16);
      osos_log_t log = v3;
      v5();
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
    swift_unknownObjectRelease();
  }
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10011EA98(0xD000000000000029, 0x80000001006A6130, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "%s - Unable to report failed recording attempt, delegate and/or asset is nil", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return;
  }
LABEL_7:
}

uint64_t sub_100568A10()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100568A48()
{
  uint64_t v1 = sub_100010218(&qword_10080FF40);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100568B34(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100010218(&qword_10080FF40) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10002C194;
  return sub_1005658D8(a1, v6, v7, v8, v9);
}

uint64_t sub_100568C5C()
{
  *(void *)(*(void *)(v0 + 16) + 104) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_100568C98()
{
  sub_100563370(*(void *)(v0 + 16), *(void **)(v0 + 24), *(_DWORD *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

void sub_100568CC4()
{
}

uint64_t sub_100568CE0(char a1)
{
  uint64_t v2 = v1;
  int v51 = a1 & 1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v57 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = v2;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &unk_1006D7000;
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = v2;
    if (sub_10058EA94(ObjectType, v8))
    {
      id v60 = [self defaultCenter];
      id v59 = String._bridgeToObjectiveC()();
      sub_100010218(&qword_1007FB618);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1006D7C30;
      id v58 = v12;
      strcpy((char *)v61, "downloadIDKey");
      HIWORD(v61[1]) = -4864;
      AnyHashable.init<A>(_:)();
      uint64_t v14 = UUID.uuidString.getter();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v14;
      *(void *)(inited + 80) = v15;
      v61[0] = 0xD000000000000013;
      v61[1] = 0x8000000100696650;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 168) = &_s16DownloadPriorityON;
      *(unsigned char *)(inited + 144) = v51;
      v61[0] = 0x64616F6C6E776F64;
      v61[1] = 0xEF79654B65707954;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 240) = &_s12DownloadTypeON;
      *(unsigned char *)(inited + 216) = 1;
      sub_100396738(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v18 = v59;
      id v17 = v60;
      [v60 postNotificationName:v59 object:0 userInfo:isa];

      uint64_t v10 = (_OWORD *)&unk_1006D7000;
    }
    else
    {
    }
  }
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentIdsMissingFile];
  uint64_t v20 = *(void *)(v19 + 56);
  uint64_t v42 = v19 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v43 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v53 = v57 + 16;
  id v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  uint64_t v52 = v57 + 48;
  uint64_t v48 = (uint64_t (**)(char *, uint64_t))(v57 + 8);
  uint64_t v49 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v56 = v19;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  unint64_t v47 = 0x80000001006966E0;
  long long v46 = v10[195];
  uint64_t v44 = (char *)&type metadata for Any + 8;
  unint64_t v45 = 0x8000000100696650;
  if (!v23) {
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v25 << 6);
  Swift::String v28 = v55;
  while (1)
  {
    uint64_t v32 = v57;
    Swift::String v33 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v33(v28, *(void *)(v56 + 48) + *(void *)(v57 + 72) * v27, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v3) == 1) {
      return swift_release();
    }
    id v34 = *v49;
    id v60 = (id)v25;
    uint64_t v35 = v50;
    v34(v50, v28, v3);
    id v59 = [self defaultCenter];
    id v58 = String._bridgeToObjectiveC()();
    sub_100010218(&qword_1007FB618);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = v46;
    strcpy((char *)v61, "downloadIDKey");
    HIWORD(v61[1]) = -4864;
    AnyHashable.init<A>(_:)();
    *(void *)(v36 + 96) = v3;
    uint64_t v37 = sub_100062E54((uint64_t *)(v36 + 72));
    v33((char *)v37, (unint64_t)v35, v3);
    v61[0] = 0xD000000000000013;
    v61[1] = v45;
    AnyHashable.init<A>(_:)();
    *(void *)(v36 + 168) = &_s16DownloadPriorityON;
    *(unsigned char *)(v36 + 144) = v51;
    v61[0] = 0x64616F6C6E776F64;
    v61[1] = 0xEF79654B65707954;
    AnyHashable.init<A>(_:)();
    *(void *)(v36 + 240) = &_s12DownloadTypeON;
    *(unsigned char *)(v36 + 216) = 0;
    sub_100396738(v36);
    Class v38 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v40 = v58;
    id v39 = v59;
    [v59 postNotificationName:v58 object:0 userInfo:v38];

    uint64_t v41 = v35;
    int64_t v25 = (int64_t)v60;
    uint64_t result = (*v48)(v41, v3);
    if (v23) {
      goto LABEL_14;
    }
LABEL_15:
    int64_t v29 = v25 + 1;
    Swift::String v28 = v55;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v29 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v29);
    ++v25;
    if (!v30)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v43) {
        goto LABEL_32;
      }
      unint64_t v30 = *(void *)(v42 + 8 * v25);
      if (!v30)
      {
        int64_t v25 = v29 + 2;
        if (v29 + 2 >= v43) {
          goto LABEL_32;
        }
        unint64_t v30 = *(void *)(v42 + 8 * v25);
        if (!v30) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v23 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v25 << 6);
  }
  int64_t v31 = v29 + 3;
  if (v31 >= v43)
  {
LABEL_32:
    (*v54)(v55, 1, 1, v3);
    return swift_release();
  }
  unint64_t v30 = *(void *)(v42 + 8 * v31);
  if (v30)
  {
    int64_t v25 = v31;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v25 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v25);
    ++v31;
    if (v30) {
      goto LABEL_28;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100569474(uint64_t a1)
{
  return sub_10056951C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001ALL, 0x80000001006A61D0, &qword_10083EA00);
}

uint64_t sub_1005694AC(uint64_t a1)
{
  return sub_10056951C(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD00000000000001ELL, 0x80000001006A61B0, &qword_10083EA08);
}

uint64_t sub_1005694E4(uint64_t a1)
{
  return sub_10056951C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001BLL, 0x80000001006A6190, &qword_10083EA10);
}

uint64_t sub_10056951C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  sub_10001FB8C();
  a2();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *a5 = result;
  return result;
}

ValueMetadata *_s12DownloadTypeOMa()
{
  return &_s12DownloadTypeON;
}

unsigned char *_s12DownloadTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005697B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16DownloadPriorityOMa()
{
  return &_s16DownloadPriorityON;
}

unint64_t sub_1005697F0()
{
  unint64_t result = qword_1008117E0;
  if (!qword_1008117E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008117E0);
  }
  return result;
}

unint64_t sub_100569848()
{
  unint64_t result = qword_1008117E8;
  if (!qword_1008117E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008117E8);
  }
  return result;
}

uint64_t sub_10056989C(void *a1, void *a2, int a3)
{
  uint64_t v91 = a2;
  id v93 = a1;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v77[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v81 = &v77[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v82 = &v77[-v12];
  __chkstk_darwin(v13);
  uint64_t v15 = &v77[-v14];
  uint64_t v16 = type metadata accessor for UUID();
  __chkstk_darwin(v16);
  uint64_t v86 = v17;
  NSString v87 = &v77[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v88 = v20;
  uint64_t v21 = *(void (**)(__n128))(v20 + 16);
  id v92 = &v77[-v22];
  uint64_t v90 = v23;
  uint64_t v84 = v3;
  uint64_t v85 = v20 + 16;
  Swift::String v83 = v21;
  v21(v19);
  if (qword_1007F7CD0 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100026A54(v24, (uint64_t)qword_1008117F0);
  int64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v27 = 67109120;
    LODWORD(aBlock[0]) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "(updateJournalEntryData) (isLocalUpdate) == %{BOOL}d", v27, 8u);
    swift_slowDealloc();
  }
  int v89 = a3;

  id v28 = [v93 encryptedValues];
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v28 objectForKeyedSubscript:v29];
  swift_unknownObjectRelease();

  if (v30)
  {
    aBlock[0] = (uint64_t)v30;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      __int16 v31 = v94;
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        id v34 = (uint8_t *)swift_slowAlloc();
        __int16 v35 = v31;
        uint64_t v36 = v34;
        *(_DWORD *)id v34 = 33554688;
        LOWORD(aBlock[0]) = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "(updateJournalEntryData) (record.textLength) == %hd", v36, 6u);
        swift_slowDealloc();
      }
    }
  }
  id v37 = [v93 encryptedValues];
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v37 objectForKeyedSubscript:v38];
  swift_unknownObjectRelease();

  if (v39)
  {
    aBlock[0] = (uint64_t)v39;
    sub_100010218((uint64_t *)&unk_1008060F0);
    int v40 = swift_dynamicCast();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v40 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      uint64_t v41 = v15;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v15, v7, v8);
      uint64_t v42 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
      int64_t v43 = v82;
      v42(v82, v15, v8);
      uint64_t v44 = v81;
      v42(v81, v41, v8);
      unint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.default.getter();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        os_log_t v79 = v45;
        uint64_t v49 = v48;
        uint64_t v80 = swift_slowAlloc();
        aBlock[0] = v80;
        *(_DWORD *)uint64_t v49 = 136315394;
        id v50 = [objc_allocWithZone((Class)NSDateFormatter) init];
        NSString v51 = String._bridgeToObjectiveC()();
        int v78 = v47;
        uint64_t v52 = v51;
        [v50 setDateFormat:v51];

        Class isa = Date._bridgeToObjectiveC()().super.isa;
        id v54 = [v50 stringFromDate:isa];

        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v57 = v56;

        uint64_t v94 = sub_10011EA98(v55, v57, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        id v58 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
        v58(v82, v8);
        *(_WORD *)(v49 + 12) = 2080;
        sub_10057CDDC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v94 = sub_10011EA98(v59, v60, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v58(v44, v8);
        os_log_t v61 = v79;
        _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v78, "(updateJournalEntryData) (record.updatedDate) == %s  %s", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v58(v41, v8);
      }
      else
      {

        uint64_t v76 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
        v76(v44, v8);
        v76(v43, v8);
        v76(v41, v8);
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
LABEL_16:
  uint64_t v62 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v63 = v87;
  uint64_t v64 = v90;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v83)(v87, v92, v90);
  uint64_t v65 = v88;
  unint64_t v66 = (*(unsigned __int8 *)(v88 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v67 = v66 + v86;
  uint64_t v68 = (char *)swift_allocObject();
  id v69 = v93;
  *((void *)v68 + 2) = v62;
  *((void *)v68 + 3) = v69;
  id v70 = v91;
  *((void *)v68 + 4) = v91;
  (*(void (**)(char *, unsigned char *, uint64_t))(v65 + 32))(&v68[v66], v63, v64);
  v68[v67] = v89 & 1;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = sub_10057CFE4;
  *(void *)(v71 + 24) = v68;
  aBlock[4] = (uint64_t)sub_10001B3DC;
  aBlock[5] = v71;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1003F44E4;
  aBlock[3] = (uint64_t)&unk_1007B2EC0;
  uint64_t v72 = _Block_copy(aBlock);
  id v73 = v69;
  id v74 = v70;
  swift_retain();
  swift_release();
  [v74 performBlockAndWait:v72];
  _Block_release(v72);
  (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v92, v64);
  LOBYTE(v74) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v74) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10056A2E0(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = v3;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithEntityName:v9];

  sub_1000FBDC8();
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1006D6270;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10001B2C0();
  *(void *)(v11 + 32) = 25705;
  *(void *)(v11 + 40) = 0xE200000000000000;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = a1;
  *(void *)(v11 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = NSPredicate.init(format:_:)();
  [v10 setPredicate:v13];

  uint64_t v23 = 0;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  void v14[3] = v10;
  void v14[4] = &v23;
  v14[5] = v4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_10057CDC0;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2D30;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a3;
  id v18 = v10;
  id v19 = v4;
  swift_retain();
  swift_release();
  [v17 performBlockAndWait:v16];

  _Block_release(v16);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v23;
    swift_release();
    return v21;
  }
  return result;
}

uint64_t sub_10056A564(void *a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  uint64_t v22 = _swiftEmptyArrayStorage;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithEntityName:v9];

  if ((a3 & 1) == 0) {
    [v10 setFetchLimit:a2];
  }
  sub_1000FBDC8();
  uint64_t v11 = NSPredicate.init(format:_:)();
  [v10 setPredicate:v11];

  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = v10;
  v12[4] = &v22;
  v12[5] = v4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10057CE28;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2DA8;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  id v16 = v10;
  id v17 = v4;
  swift_retain();
  swift_release();
  [v15 performBlockAndWait:v14];

  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v22;
    swift_release();
    return (uint64_t)v20;
  }
  return result;
}

uint64_t sub_10056A7B4(void *a1, uint64_t a2, char a3)
{
  unsigned int v4 = v3;
  uint64_t v24 = _swiftEmptyArrayStorage;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithEntityName:v9];

  if ((a3 & 1) == 0) {
    [v10 setFetchLimit:a2];
  }
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1000FBDC8();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [self andPredicateWithSubpredicates:isa];

  [v10 setPredicate:v12];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = v10;
  v13[4] = &v24;
  CGFloat v13[5] = v4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10057CE7C;
  *(void *)(v14 + 24) = v13;
  v22[4] = sub_10001B3DC;
  v22[5] = v14;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  void v22[2] = sub_1003F44E4;
  v22[3] = &unk_1007B2E20;
  id v15 = _Block_copy(v22);
  id v16 = a1;
  id v17 = v10;
  id v18 = v4;
  swift_retain();
  swift_release();
  [v16 performBlockAndWait:v15];

  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v24;
    swift_release();
    return (uint64_t)v21;
  }
  return result;
}

uint64_t sub_10056AB98(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = v5;
  v6[4] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10057A028;
  *(void *)(v7 + 24) = v6;
  void v14[4] = sub_10001AC84;
  v14[5] = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1003F44E4;
  void v14[3] = &unk_1007B2BC8;
  id v8 = _Block_copy(v14);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10056AD60(void *a1)
{
  id v1 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 initWithEntityName:v2];

  sub_1000FBDC8();
  NSString v4 = NSPredicate.init(format:_:)();
  [v3 setPredicate:v4];

  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithEntityName:v6];

  id v8 = NSPredicate.init(format:_:)();
  id v9 = NSPredicate.init(format:_:)();
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6280;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_10001B2C0();
  *(void *)(v10 + 32) = 0x656C746974;
  *(void *)(v10 + 40) = 0xE500000000000000;
  id v11 = NSPredicate.init(format:_:)();
  id v12 = NSPredicate.init(format:_:)();
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D6D30;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 40) = v9;
  *(void *)(v13 + 48) = v11;
  *(void *)(v13 + 56) = v12;
  specialized Array._endMutation()();
  id v27 = v8;
  id v26 = v9;
  id v14 = v11;
  id v15 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [self andPredicateWithSubpredicates:isa];

  [v7 setPredicate:v17];
  id v18 = (void *)swift_allocObject();
  void v18[2] = a1;
  v18[3] = v3;
  v18[4] = v7;
  v18[5] = v29;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_10057CDA0;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007B2CB8;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = a1;
  id v22 = v3;
  id v23 = v7;
  id v24 = v29;
  swift_retain();
  swift_release();
  [v21 performBlockAndWait:v20];

  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v20) {
    __break(1u);
  }
  return result;
}

id sub_10056B184(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v273 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v261 = (char *)&v252 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  id v271 = (char *)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v272 = (char *)&v252 - v8;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  unint64_t v274 = (char *)&v252 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v252 - v12;
  __chkstk_darwin(v14);
  unint64_t v269 = (char *)&v252 - v15;
  __chkstk_darwin(v16);
  uint64_t v270 = (uint64_t)&v252 - v17;
  __chkstk_darwin(v18);
  unint64_t v267 = (char *)&v252 - v19;
  __chkstk_darwin(v20);
  uint64_t v268 = (uint64_t)&v252 - v21;
  __chkstk_darwin(v22);
  uint64_t v265 = (char *)&v252 - v23;
  __chkstk_darwin(v24);
  uint64_t v266 = (uint64_t)&v252 - v25;
  __chkstk_darwin(v26);
  id v264 = (char *)&v252 - v27;
  __chkstk_darwin(v28);
  id v279 = (char *)&v252 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v252 - v31;
  uint64_t v275 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v275 - 8);
  __chkstk_darwin(v275);
  id v260 = (char *)&v252 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  id v37 = (char *)&v252 - v36;
  __chkstk_darwin(v38);
  int v40 = (char *)&v252 - v39;
  *(void *)&double v42 = __chkstk_darwin(v41).n128_u64[0];
  uint64_t v262 = (char *)&v252 - v43;
  id v44 = [a1 recordSystemFields:v42];
  if (!v44)
  {
    if (qword_1007F7CD0 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_100026A54(v56, (uint64_t)qword_1008117F0);
    id v57 = a1;
    id v58 = v1;
    id v59 = v57;
    id v60 = v58;
    os_log_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      *(void *)&long long v282 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 136446466;
      sub_10057CDDC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v285 = sub_10011EA98(v64, v65, (uint64_t *)&v282);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      id v66 = [v59 debugDescription];
      uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v69 = v68;

      uint64_t v285 = sub_10011EA98(v67, v69, (uint64_t *)&v282);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "%{public}s (getRecordFromJournalEntry) Failed to get entry system fields: %s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }
LABEL_24:

    return 0;
  }
  unint64_t v45 = v44;
  uint64_t v278 = v33;
  id v258 = v13;
  id v276 = v1;
  uint64_t v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v48 = v47;

  uint64_t v263 = v46;
  id v280 = sub_1002D1F50(v46, v48);
  if (!v280)
  {
    if (qword_1007F7CD0 != -1) {
      swift_once();
    }
    uint64_t v70 = type metadata accessor for Logger();
    sub_100026A54(v70, (uint64_t)qword_1008117F0);
    id v71 = a1;
    id v72 = v276;
    id v59 = v71;
    id v60 = v72;
    os_log_t v61 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      *(void *)&long long v282 = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136446466;
      unint64_t v259 = v48;
      sub_10057CDDC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v285 = sub_10011EA98(v75, v76, (uint64_t *)&v282);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2080;
      id v77 = [v59 debugDescription];
      uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v80 = v79;

      uint64_t v285 = sub_10011EA98(v78, v80, (uint64_t *)&v282);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v61, v73, "%{public}s (getRecordFromJournalEntry) Failed to get record from systemfields for the entry: %s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100040DD0(v263, v259);

      return 0;
    }
    sub_100040DD0(v263, v48);
    goto LABEL_24;
  }
  if (qword_1007F7CD0 != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  uint64_t v50 = sub_100026A54(v49, (uint64_t)qword_1008117F0);
  id v51 = a1;
  uint64_t v256 = v50;
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.default.getter();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v257 = v3;
  unint64_t v259 = v48;
  if (v54)
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 33554688;
    LOWORD(v282) = (unsigned __int16)[v51 textLength];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v52, v53, "(getRecordFromJournalEntry) (jEntry.textLength) == %hd", v55, 6u);
    swift_slowDealloc();
  }
  else
  {
  }
  id v81 = v280;
  id v281 = v51;
  id v82 = [v51 updatedDate];
  uint64_t v83 = v275;
  if (v82)
  {
    uint64_t v84 = v82;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v85 = v278;
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v278 + 32);
    v86(v32, v40, v83);
    uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56);
    v277(v32, 0, 1, v83);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v32, 1, v83) != 1)
    {
      int v89 = v262;
      v86(v262, v32, v83);
      uint64_t v90 = v89;
      uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
      v91(v37, v89, v83);
      id v92 = v260;
      v91(v260, v89, v83);
      id v93 = Logger.logObject.getter();
      os_log_type_t v94 = static os_log_type_t.default.getter();
      int v95 = v94;
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v96 = swift_slowAlloc();
        os_log_t v254 = v93;
        uint64_t v97 = v96;
        uint64_t v255 = swift_slowAlloc();
        *(void *)&long long v282 = v255;
        *(_DWORD *)uint64_t v97 = 136315394;
        uint64_t v252 = v97 + 4;
        id v98 = [objc_allocWithZone((Class)NSDateFormatter) init];
        NSString v99 = String._bridgeToObjectiveC()();
        int v253 = v95;
        uint64_t v100 = v99;
        [v98 setDateFormat:v99];

        Class isa = Date._bridgeToObjectiveC()().super.isa;
        id v102 = [v98 stringFromDate:isa];

        uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v105 = v104;

        uint64_t v285 = sub_10011EA98(v103, v105, (uint64_t *)&v282);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v106 = *(void (**)(char *, uint64_t))(v85 + 8);
        v106(v37, v83);
        *(_WORD *)(v97 + 12) = 2080;
        sub_10057CDDC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v107 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v285 = sub_10011EA98(v107, v108, (uint64_t *)&v282);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v106(v92, v83);
        os_log_t v109 = v254;
        _os_log_impl((void *)&_mh_execute_header, v254, (os_log_type_t)v253, "(getRecordFromJournalEntry) (jEntry.updatedDate) == %s  %s", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v106(v262, v83);
      }
      else
      {

        uint64_t v111 = *(void (**)(char *, uint64_t))(v85 + 8);
        v111(v92, v83);
        v111(v37, v83);
        v111(v90, v83);
      }
      id v88 = v281;
      NSString v87 = v277;
      goto LABEL_28;
    }
    NSString v87 = v277;
  }
  else
  {
    uint64_t v85 = v278;
    NSString v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v278 + 56);
    v87(v32, 1, 1, v275);
  }
  sub_10001457C((uint64_t)v32, (uint64_t *)&unk_1007FC470);
  id v88 = v281;
LABEL_28:
  uint64_t v277 = v87;
  id v112 = [v81 encryptedValues];
  id v113 = [v88 title];
  if (v113)
  {
    uint64_t v114 = v113;
    uint64_t v115 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v117 = v116;

    *((void *)&v283 + 1) = &type metadata for Data;
    uint64_t v284 = &protocol witness table for Data;
    *(void *)&long long v282 = v115;
    *((void *)&v282 + 1) = v117;
    id v88 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v118 = [v81 encryptedValues];
  id v119 = [v88 text];
  if (v119)
  {
    unint64_t v120 = v119;
    uint64_t v121 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v123 = v122;

    *((void *)&v283 + 1) = &type metadata for Data;
    uint64_t v284 = &protocol witness table for Data;
    *(void *)&long long v282 = v121;
    *((void *)&v282 + 1) = v123;
    id v88 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v124 = [v81 encryptedValues];
  id v125 = [v88 assetOrdering];
  if (v125)
  {
    uint64_t v126 = v125;
    uint64_t v127 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v129 = v128;

    *((void *)&v283 + 1) = &type metadata for Data;
    uint64_t v284 = &protocol witness table for Data;
    *(void *)&long long v282 = v127;
    *((void *)&v282 + 1) = v129;
    id v88 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  id v130 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v277;
  uint64_t v131 = (uint64_t)v279;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v132 = [v81 encryptedValues];
  id v133 = [v88 updatedDate];
  if (v133)
  {
    uint64_t v134 = v133;
    uint64_t v135 = (uint64_t)v264;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v136 = 0;
  }
  else
  {
    uint64_t v136 = 1;
    uint64_t v135 = (uint64_t)v264;
  }
  id v279 = (char *)(v85 + 56);
  v130(v135, v136, 1, v83);
  sub_10002C4EC(v135, v131, (uint64_t *)&unk_1007FC470);
  id v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  if (v137(v131, 1, v83) == 1)
  {
    sub_10001457C(v131, (uint64_t *)&unk_1007FC470);
    long long v282 = 0u;
    long long v283 = 0u;
    uint64_t v284 = 0;
  }
  else
  {
    *((void *)&v283 + 1) = v83;
    uint64_t v284 = &protocol witness table for Date;
    uint64_t v138 = sub_100062E54((uint64_t *)&v282);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v85 + 32))(v138, v131, v83);
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v139 = [v81 encryptedValues];
  id v140 = [v88 createdDate];
  uint64_t v141 = v137;
  if (v140)
  {
    Swift::String v142 = v140;
    uint64_t v143 = (uint64_t)v265;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v144 = 0;
  }
  else
  {
    uint64_t v144 = 1;
    uint64_t v143 = (uint64_t)v265;
  }
  v130(v143, v144, 1, v83);
  uint64_t v145 = v266;
  sub_10002C4EC(v143, v266, (uint64_t *)&unk_1007FC470);
  if (v141(v145, 1, v83) == 1)
  {
    sub_10001457C(v145, (uint64_t *)&unk_1007FC470);
    long long v282 = 0u;
    long long v283 = 0u;
    uint64_t v284 = 0;
  }
  else
  {
    *((void *)&v283 + 1) = v83;
    uint64_t v284 = &protocol witness table for Date;
    uint64_t v146 = sub_100062E54((uint64_t *)&v282);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v278 + 32))(v146, v145, v83);
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v147 = [v81 encryptedValues];
  id v148 = [v88 entryDate];
  uint64_t v149 = (char *)(v85 + 48);
  if (v148)
  {
    unint64_t v150 = v148;
    unint64_t v151 = v267;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v152 = v151;
    uint64_t v153 = 0;
  }
  else
  {
    uint64_t v153 = 1;
    uint64_t v152 = v267;
  }
  uint64_t v154 = (uint64_t)v269;
  v130((uint64_t)v152, v153, 1, v83);
  uint64_t v155 = (uint64_t)v152;
  uint64_t v156 = v268;
  sub_10002C4EC(v155, v268, (uint64_t *)&unk_1007FC470);
  if (v141(v156, 1, v83) == 1)
  {
    sub_10001457C(v156, (uint64_t *)&unk_1007FC470);
    long long v282 = 0u;
    long long v283 = 0u;
    uint64_t v284 = 0;
  }
  else
  {
    *((void *)&v283 + 1) = v83;
    uint64_t v284 = &protocol witness table for Date;
    uint64_t v157 = sub_100062E54((uint64_t *)&v282);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v278 + 32))(v157, v156, v83);
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v158 = [v81 encryptedValues];
  id v159 = [v88 bundleEndDate];
  if (v159)
  {
    uint64_t v160 = v159;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v161 = 0;
  }
  else
  {
    uint64_t v161 = 1;
  }
  v130(v154, v161, 1, v83);
  uint64_t v162 = v270;
  sub_10002C4EC(v154, v270, (uint64_t *)&unk_1007FC470);
  unsigned int v163 = v141(v162, 1, v83);
  id v264 = v149;
  if (v163 == 1)
  {
    sub_10001457C(v162, (uint64_t *)&unk_1007FC470);
    long long v282 = 0u;
    long long v283 = 0u;
    uint64_t v284 = 0;
  }
  else
  {
    *((void *)&v283 + 1) = v83;
    uint64_t v284 = &protocol witness table for Date;
    uint64_t v164 = sub_100062E54((uint64_t *)&v282);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v278 + 32))(v164, v162, v83);
  }
  uint64_t v165 = (uint64_t)v271;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v166 = [v81 encryptedValues];
  id v167 = [v88 dateSource];
  if (v167)
  {
    unint64_t v168 = v167;
    uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v171 = v170;

    *((void *)&v283 + 1) = &type metadata for String;
    uint64_t v284 = &protocol witness table for String;
    *(void *)&long long v282 = v169;
    *((void *)&v282 + 1) = v171;
    id v88 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v172 = [v81 encryptedValues];
  swift_getObjectType();
  unsigned __int16 v173 = (unsigned __int16)[v88 minimumSupportedAppVersion];
  *((void *)&v283 + 1) = &type metadata for Int16;
  uint64_t v284 = &protocol witness table for Int16;
  LOWORD(v282) = v173;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v174 = [v81 encryptedValues];
  if (*((unsigned char *)v276 + OBJC_IVAR____TtC7Journal13CoreDataStack_modelVersion))
  {
    if (*((unsigned char *)v276 + OBJC_IVAR____TtC7Journal13CoreDataStack_modelVersion) == 1)
    {
      unint64_t v175 = 0xE200000000000000;
      uint64_t v176 = 13174;
    }
    else
    {
      unint64_t v175 = 0xE500000000000000;
      uint64_t v176 = 0x726568746FLL;
    }
  }
  else
  {
    unint64_t v175 = 0xE200000000000000;
    uint64_t v176 = 12918;
  }
  swift_getObjectType();
  *((void *)&v283 + 1) = &type metadata for String;
  uint64_t v284 = &protocol witness table for String;
  *(void *)&long long v282 = v176;
  *((void *)&v282 + 1) = v175;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v177 = [v81 encryptedValues];
  id v178 = [v88 prompt];
  if (v178)
  {
    long long v179 = v178;
    uint64_t v180 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v182 = v181;

    *((void *)&v283 + 1) = &type metadata for Data;
    uint64_t v284 = &protocol witness table for Data;
    *(void *)&long long v282 = v180;
    *((void *)&v282 + 1) = v182;
    id v88 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  uint64_t v183 = (uint64_t)v272;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v184 = [v81 encryptedValues];
  swift_getObjectType();
  unsigned __int8 v185 = [v88 flagged];
  *((void *)&v283 + 1) = &type metadata for Bool;
  uint64_t v284 = &protocol witness table for Bool;
  LOBYTE(v282) = v185;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  [v81 encryptedValues];
  id v186 = [v88 bundleId];
  if (v186)
  {
    Class v187 = v186;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v188 = 0;
  }
  else
  {
    uint64_t v188 = 1;
  }
  uint64_t v189 = v273;
  uint64_t v190 = v257;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v273 + 56))(v165, v188, 1, v257);
  sub_10002C4EC(v165, v183, &qword_100800950);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48))(v183, 1, v190))
  {
    sub_10001457C(v183, &qword_100800950);
    long long v282 = 0u;
    long long v283 = 0u;
    uint64_t v284 = 0;
  }
  else
  {
    uint64_t v191 = v261;
    (*(void (**)(char *, uint64_t, uint64_t))(v189 + 16))(v261, v183, v190);
    sub_10001457C(v183, &qword_100800950);
    uint64_t v192 = v189;
    uint64_t v193 = UUID.uuidString.getter();
    uint64_t v195 = v194;
    (*(void (**)(char *, uint64_t))(v192 + 8))(v191, v190);
    uint64_t v83 = v275;
    *((void *)&v283 + 1) = &type metadata for String;
    uint64_t v284 = &protocol witness table for String;
    *(void *)&long long v282 = v193;
    *((void *)&v282 + 1) = v195;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v196 = [v81 encryptedValues];
  id v197 = v281;
  id v198 = [v281 bundleDate];
  if (v198)
  {
    id v199 = v198;
    uint64_t v200 = (uint64_t)v274;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v201 = 0;
  }
  else
  {
    uint64_t v201 = 1;
    uint64_t v200 = (uint64_t)v274;
  }
  v277((char *)v200, v201, 1, v83);
  uint64_t v202 = (uint64_t)v258;
  sub_10002C4EC(v200, (uint64_t)v258, (uint64_t *)&unk_1007FC470);
  if (v141(v202, 1, v83) == 1)
  {
    sub_10001457C(v202, (uint64_t *)&unk_1007FC470);
    long long v282 = 0u;
    long long v283 = 0u;
    uint64_t v284 = 0;
  }
  else
  {
    *((void *)&v283 + 1) = v83;
    uint64_t v284 = &protocol witness table for Date;
    id v203 = sub_100062E54((uint64_t *)&v282);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v278 + 32))(v203, v202, v83);
  }
  id v204 = v276;
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v205 = [v280 encryptedValues];
  id v206 = [v197 entryType];
  if (v206)
  {
    uint64_t v207 = v206;
    uint64_t v208 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v210 = v209;

    *((void *)&v283 + 1) = &type metadata for String;
    uint64_t v284 = &protocol witness table for String;
    *(void *)&long long v282 = v208;
    *((void *)&v282 + 1) = v210;
    id v197 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v211 = v280;
  id v212 = [v280 encryptedValues];
  swift_getObjectType();
  unsigned __int16 v213 = (unsigned __int16)[v197 textLength];
  *((void *)&v283 + 1) = &type metadata for Int16;
  uint64_t v284 = &protocol witness table for Int16;
  LOWORD(v282) = v213;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v214 = [v211 encryptedValues];
  id v215 = [v197 reflectionIcon];
  if (v215)
  {
    uint64_t v216 = v215;
    uint64_t v217 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v219 = v218;

    *((void *)&v283 + 1) = &type metadata for Data;
    uint64_t v284 = &protocol witness table for Data;
    *(void *)&long long v282 = v217;
    *((void *)&v282 + 1) = v219;
    id v197 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v220 = [v280 encryptedValues];
  id v221 = [v197 reflectionPrompt];
  if (v221)
  {
    uint64_t v222 = v221;
    uint64_t v223 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v225 = v224;

    *((void *)&v283 + 1) = &type metadata for Data;
    uint64_t v284 = &protocol witness table for Data;
    *(void *)&long long v282 = v223;
    *((void *)&v282 + 1) = v225;
    id v197 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v226 = [v280 encryptedValues];
  id v227 = [v197 reflectionType];
  if (v227)
  {
    uint64_t v228 = v227;
    uint64_t v229 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v231 = v230;

    *((void *)&v283 + 1) = &type metadata for String;
    uint64_t v284 = &protocol witness table for String;
    *(void *)&long long v282 = v229;
    *((void *)&v282 + 1) = v231;
    id v197 = v281;
  }
  else
  {
    uint64_t v284 = 0;
    long long v282 = 0u;
    long long v283 = 0u;
  }
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v232 = v280;
  id v233 = [v280 encryptedValues];
  swift_getObjectType();
  unsigned __int8 v234 = [v197 showPhotoMemoryBanner];
  *((void *)&v283 + 1) = &type metadata for Bool;
  uint64_t v284 = &protocol witness table for Bool;
  LOBYTE(v282) = v234;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v235 = [v232 encryptedValues];
  swift_getObjectType();
  unsigned __int8 v236 = [v197 showTitle];
  *((void *)&v283 + 1) = &type metadata for Bool;
  uint64_t v284 = &protocol witness table for Bool;
  LOBYTE(v282) = v236;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v237 = [v232 encryptedValues];
  swift_getObjectType();
  unsigned __int16 v238 = (unsigned __int16)[v197 minimumSupportedAppVersionMode];
  *((void *)&v283 + 1) = &type metadata for Int16;
  uint64_t v284 = &protocol witness table for Int16;
  LOWORD(v282) = v238;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  id v239 = v204;
  id v240 = v232;
  id v241 = v239;
  id v242 = v240;
  unint64_t v243 = Logger.logObject.getter();
  os_log_type_t v244 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v243, v244))
  {
    uint64_t v245 = swift_slowAlloc();
    id v281 = (id)swift_slowAlloc();
    *(void *)&long long v282 = v281;
    *(_DWORD *)uint64_t v245 = 136446466;
    sub_10057CDDC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v246 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v285 = sub_10011EA98(v246, v247, (uint64_t *)&v282);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v245 + 12) = 2080;
    id v279 = (char *)(v245 + 14);
    id v248 = [v242 debugDescription];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10055A870(1000);
    swift_bridgeObjectRelease();
    uint64_t v249 = static String._fromSubstring(_:)();
    unint64_t v251 = v250;
    swift_bridgeObjectRelease();
    uint64_t v285 = sub_10011EA98(v249, v251, (uint64_t *)&v282);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v243, v244, "%{public}s (getRecordFromJournalEntry) CKRecord Recreated from entry:\n%s", (uint8_t *)v245, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100040DD0(v263, v259);

  return v280;
}

uint64_t sub_10056D358(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = v5;
  v6[4] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10057CD34;
  *(void *)(v7 + 24) = v6;
  void v14[4] = sub_10001B3DC;
  v14[5] = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1003F44E4;
  void v14[3] = &unk_1007B2C40;
  uint64_t v8 = _Block_copy(v14);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10056D520()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008117F0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008117F0);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10056D5E8()
{
  if (qword_1007F7CD0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();

  return sub_100026A54(v0, (uint64_t)qword_1008117F0);
}

void sub_10056D64C(uint64_t a1, uint64_t a2, void **a3)
{
  sub_1002A4450(0xD000000000000011, 0x80000001006A62E0);
  type metadata accessor for JournalEntryMO();
  unint64_t v4 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  id v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *a3;
  *a3 = v7;
}

uint64_t sub_10056DA38(uint64_t a1, void *a2, void *a3, void *a4, int a5)
{
  LODWORD(v894) = a5;
  id v904 = a4;
  uint64_t v7 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v7 - 8);
  v862 = (char *)&v837 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  v870 = (char *)&v837 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v869 = (char *)&v837 - v12;
  __chkstk_darwin(v13);
  v868 = (char *)&v837 - v14;
  __chkstk_darwin(v15);
  v867 = (char *)&v837 - v16;
  __chkstk_darwin(v17);
  v866 = (char *)&v837 - v18;
  os_log_t v897 = (os_log_t)type metadata accessor for Date();
  Class isa = v897[-1].isa;
  __chkstk_darwin(v897);
  v863 = (char *)&v837 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v861 = (char *)&v837 - v21;
  __chkstk_darwin(v22);
  v860 = (char *)&v837 - v23;
  __chkstk_darwin(v24);
  v859 = (char *)&v837 - v25;
  __chkstk_darwin(v26);
  v858 = (char *)&v837 - v27;
  uint64_t v906 = type metadata accessor for UUID();
  os_log_t v28 = *(os_log_t *)(v906 - 8);
  __chkstk_darwin(v906);
  uint64_t v901 = v29;
  v903 = (char *)&v837 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  v871 = (char *)&v837 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v892 = (char *)&v837 - v34;
  __chkstk_darwin(v35);
  v891 = (char *)&v837 - v36;
  __chkstk_darwin(v37);
  v890 = (char *)&v837 - v38;
  __chkstk_darwin(v39);
  v889 = (char *)&v837 - v40;
  __chkstk_darwin(v41);
  v888 = (char *)&v837 - v42;
  __chkstk_darwin(v43);
  v887 = (char *)&v837 - v44;
  __chkstk_darwin(v45);
  v886 = (char *)&v837 - v46;
  __chkstk_darwin(v47);
  v885 = (char *)&v837 - v48;
  __chkstk_darwin(v49);
  v884 = (char *)&v837 - v50;
  __chkstk_darwin(v51);
  v883 = (char *)&v837 - v52;
  __chkstk_darwin(v53);
  v882 = (char *)&v837 - v54;
  __chkstk_darwin(v55);
  v881 = (char *)&v837 - v56;
  __chkstk_darwin(v57);
  v880 = (char *)&v837 - v58;
  __chkstk_darwin(v59);
  v879 = (char *)&v837 - v60;
  __chkstk_darwin(v61);
  v878 = (char *)&v837 - v62;
  __chkstk_darwin(v63);
  v877 = (char *)&v837 - v64;
  __chkstk_darwin(v65);
  v876 = (char *)&v837 - v66;
  __chkstk_darwin(v67);
  v875 = (char *)&v837 - v68;
  __chkstk_darwin(v69);
  v893 = (char *)&v837 - v70;
  __chkstk_darwin(v71);
  v874 = (char *)&v837 - v72;
  __chkstk_darwin(v73);
  os_log_t v895 = (os_log_t)((char *)&v837 - v74);
  __chkstk_darwin(v75);
  unint64_t v865 = (unint64_t)&v837 - v76;
  __chkstk_darwin(v77);
  v899 = (char *)&v837 - v78;
  __chkstk_darwin(v79);
  id v81 = (char *)&v837 - v80;
  sub_1002A4450(0xD000000000000016, 0x80000001006A63C0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  os_log_t v907 = v28;
  if (Strong)
  {
    uint64_t v83 = (void *)Strong;
    id v84 = [a2 recordID];
    id v85 = [v84 recordName];

    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v88 = v87;

    os_log_t v28 = v907;
    int v89 = (void *)sub_10056A2E0(v86, v88, a3);

    swift_bridgeObjectRelease();
  }
  else
  {
    int v89 = 0;
  }
  swift_beginAccess();
  uint64_t v90 = swift_unknownObjectWeakLoadStrong();
  uint64_t v905 = v30;
  uint64_t v902 = v31;
  if (!v90)
  {
    if (v89)
    {
      uint64_t v97 = 0;
      id v98 = v89;
      goto LABEL_11;
    }
LABEL_16:
    uint64_t v138 = sub_10056D5E8();
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v81, v138, v30);
    id v139 = v903;
    uint64_t v140 = v906;
    ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v906);
    unint64_t v141 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
    uint64_t v142 = swift_allocObject();
    ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v142 + v141, v139, v140);
    uint64_t v143 = swift_allocObject();
    *(void *)(v143 + 16) = sub_10057D084;
    *(void *)(v143 + 24) = v142;
    uint64_t v144 = swift_allocObject();
    *(void *)(v144 + 16) = a2;
    id v145 = a2;
    os_log_t v907 = (os_log_t)Logger.logObject.getter();
    LODWORD(v906) = static os_log_type_t.error.getter();
    uint64_t v146 = swift_allocObject();
    *(unsigned char *)(v146 + 16) = 34;
    uint64_t v147 = swift_allocObject();
    *(unsigned char *)(v147 + 16) = 8;
    uint64_t v148 = swift_allocObject();
    *(void *)(v148 + 16) = sub_10057D088;
    *(void *)(v148 + 24) = v143;
    uint64_t v149 = swift_allocObject();
    *(void *)(v149 + 16) = sub_10023D690;
    *(void *)(v149 + 24) = v148;
    uint64_t v150 = swift_allocObject();
    *(unsigned char *)(v150 + 16) = 32;
    uint64_t v151 = swift_allocObject();
    *(unsigned char *)(v151 + 16) = 8;
    uint64_t v152 = swift_allocObject();
    *(void *)(v152 + 16) = sub_10057D090;
    *(void *)(v152 + 24) = v144;
    uint64_t v153 = swift_allocObject();
    *(void *)(v153 + 16) = sub_10057D928;
    *(void *)(v153 + 24) = v152;
    sub_100010218(&qword_100811830);
    uint64_t v154 = swift_allocObject();
    sub_1001F3A0C(v154, 6);
    *uint64_t v155 = sub_10023D678;
    v155[1] = v146;
    v155[2] = sub_10023D9E0;
    v155[3] = v147;
    v155[4] = sub_10023D6D0;
    v155[5] = v149;
    v155[6] = sub_10023D9E0;
    v155[7] = v150;
    v155[8] = sub_10023D9E0;
    v155[9] = v151;
    v155[10] = sub_10057D934;
    v155[11] = v153;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v156 = v907;
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v156, (os_log_type_t)v906))
    {
      uint64_t v157 = (uint8_t *)sub_10011E998();
      uint64_t v910 = swift_slowAlloc();
      uint64_t v911 = 0;
      *(_WORD *)uint64_t v157 = 514;
      v912 = v157 + 2;
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D678;
      unint64_t v909 = v146;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      swift_release();
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
      unint64_t v909 = v147;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      swift_release();
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D6D0;
      unint64_t v909 = v149;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      uint64_t v158 = v905;
      swift_release();
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
      unint64_t v909 = v150;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      swift_release();
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
      unint64_t v909 = v151;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      swift_release();
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
      unint64_t v909 = v153;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      swift_release();
      os_log_t v159 = v907;
      _os_log_impl((void *)&_mh_execute_header, v907, (os_log_type_t)v906, "%{public}s (updateJournalEntryData) Unable to get journal entry with id: %s", v157, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_10011E9DC();

      return (*(uint64_t (**)(char *, uint64_t))(v902 + 8))(v81, v158);
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    id v167 = *(uint64_t (**)(char *, uint64_t))(v902 + 8);
    unint64_t v168 = v81;
    return v167(v168, v905);
  }
  uint64_t v91 = (void *)v90;
  id v92 = [a2 recordID];
  id v93 = [v92 recordName];

  uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v96 = v95;

  uint64_t v97 = (void *)sub_1004D59E0(v94, v96, a3);
  swift_bridgeObjectRelease();
  if (v89)
  {
    os_log_t v28 = v907;
    id v98 = v89;
    goto LABEL_11;
  }
  os_log_t v28 = v907;
  if (!v97) {
    goto LABEL_16;
  }
  id v98 = v97;
  int v89 = 0;
LABEL_11:
  uint64_t v99 = v906;
  id v872 = v89;
  id v100 = [v98 recordSystemFields];
  v900 = a2;
  id v873 = v97;
  id v898 = v98;
  if (!v100)
  {
    v899 = 0;
    goto LABEL_36;
  }
  uint64_t v101 = v100;
  uint64_t v102 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v104 = v103;

  uint64_t v864 = v102;
  id v105 = sub_1002D1F50(v102, v104);
  if (!v105)
  {
    v899 = 0;
LABEL_35:
    sub_100040DD0(v864, v104);
LABEL_36:
    id v174 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [a2 encodeSystemFieldsWithCoder:v174];
    id v175 = [v174 encodedData];
    uint64_t v176 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v178 = v177;

    uint64_t v864 = v176;
    unint64_t v865 = v178;
    Class v179 = Data._bridgeToObjectiveC()().super.isa;
    [v98 setRecordSystemFields:v179];

    if (v894)
    {
      id v180 = [self standardUserDefaults];
      NSString v181 = String._bridgeToObjectiveC()();
      id v182 = [v180 stringArrayForKey:v181];

      if (v182)
      {
        uint64_t v183 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v183 = _swiftEmptyArrayStorage;
      }
      os_log_t v213 = v895;
      id v214 = [a2 recordID];
      id v215 = [v214 recordName];

      uint64_t v216 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v218 = v217;

      LOBYTE(v216) = sub_100018958(v216, v218, v183);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v219 = (v216 & 1) == 0;
      id v220 = v898;
      [v898 setIsUploadedToCloud:v219];
      uint64_t v221 = sub_10056D5E8();
      (*(void (**)(os_log_t, uint64_t, uint64_t))(v31 + 16))(v213, v221, v30);
      uint64_t v222 = swift_allocObject();
      *(void *)(v222 + 16) = v220;
      id v904 = v220;
      os_log_t v907 = (os_log_t)Logger.logObject.getter();
      LODWORD(v906) = static os_log_type_t.default.getter();
      uint64_t v223 = swift_allocObject();
      *(unsigned char *)(v223 + 16) = 32;
      uint64_t v224 = swift_allocObject();
      *(unsigned char *)(v224 + 16) = 8;
      uint64_t v225 = swift_allocObject();
      *(unsigned char *)(v225 + 16) = 0;
      uint64_t v226 = swift_allocObject();
      *(unsigned char *)(v226 + 16) = 8;
      uint64_t v227 = swift_allocObject();
      *(unsigned char *)(v227 + 16) = 0;
      uint64_t v228 = swift_allocObject();
      *(unsigned char *)(v228 + 16) = 4;
      uint64_t v229 = swift_allocObject();
      *(void *)(v229 + 16) = sub_10057D684;
      *(void *)(v229 + 24) = v222;
      uint64_t v230 = swift_allocObject();
      *(void *)(v230 + 16) = sub_10057D740;
      *(void *)(v230 + 24) = v229;
      uint64_t v231 = swift_allocObject();
      *(void *)(v231 + 16) = sub_10057D748;
      *(void *)(v231 + 24) = v230;
      uint64_t v232 = v31;
      uint64_t v233 = swift_allocObject();
      *(void *)(v233 + 16) = sub_10057D750;
      *(void *)(v233 + 24) = v231;
      sub_100010218(&qword_100811830);
      uint64_t v234 = swift_allocObject();
      sub_1001F3A0C(v234, 9);
      void *v235 = sub_10023D9E0;
      v235[1] = v223;
      v235[2] = sub_10023D9E0;
      v235[3] = v224;
      v235[4] = sub_10057AD18;
      v235[5] = 0;
      v235[6] = sub_10023D9E0;
      v235[7] = v225;
      v235[8] = sub_10023D9E0;
      v235[9] = v226;
      v235[10] = sub_10057AD80;
      v235[11] = 0;
      v235[12] = sub_10023D9E0;
      v235[13] = v227;
      v235[14] = sub_10023D9E0;
      v235[15] = v228;
      v235[16] = sub_10057D758;
      v235[17] = v233;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      os_log_t v236 = v907;
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v236, (os_log_type_t)v906))
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_100040DD0(v864, v865);
        return (*(uint64_t (**)(os_log_t, uint64_t))(v232 + 8))(v895, v905);
      }
      id v237 = (uint8_t *)sub_10011E998();
      uint64_t v910 = swift_slowAlloc();
      uint64_t v911 = 0;
      *(_WORD *)id v237 = 770;
      v912 = v237 + 2;
      v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
      unint64_t v909 = v223;
      unsigned __int16 v238 = v899;
      sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
      if (!v238)
      {
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v224;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057AD18;
        unint64_t v909 = 0;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v225;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v226;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057AD80;
        unint64_t v909 = 0;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        uint64_t v239 = v905;
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v227;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v228;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D758;
        unint64_t v909 = v233;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        id v240 = v904;
        swift_release();
        os_log_t v241 = v907;
        _os_log_impl((void *)&_mh_execute_header, v907, (os_log_type_t)v906, "%s:%ld (entry.isUploadedToCloud) == %{BOOL}d", v237, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_10011E9DC();
        sub_100040DD0(v864, v865);

        return (*(uint64_t (**)(os_log_t, uint64_t))(v902 + 8))(v895, v239);
      }
      goto LABEL_226;
    }
    id v184 = [a2 encryptedValues];
    NSString v185 = String._bridgeToObjectiveC()();
    id v186 = (uint8_t *)[v184 objectForKeyedSubscript:v185];
    swift_unknownObjectRelease();

    Class v187 = v874;
    if (v186 && (v912 = v186, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
    {
      NSString v188 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v898 setEntryType:v188];
    }
    else
    {
      uint64_t v189 = sub_10056D5E8();
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v187, v189, v30);
      uint64_t v190 = v903;
      ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
      unint64_t v191 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
      uint64_t v192 = swift_allocObject();
      ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v192 + v191, v190, v99);
      uint64_t v193 = swift_allocObject();
      *(void *)(v193 + 16) = sub_10057D084;
      *(void *)(v193 + 24) = v192;
      uint64_t v194 = swift_allocObject();
      *(void *)(v194 + 16) = a2;
      id v195 = a2;
      id v196 = Logger.logObject.getter();
      LODWORD(v895) = static os_log_type_t.error.getter();
      uint64_t v197 = swift_allocObject();
      *(unsigned char *)(v197 + 16) = 34;
      uint64_t v198 = swift_allocObject();
      *(unsigned char *)(v198 + 16) = 8;
      uint64_t v199 = swift_allocObject();
      *(void *)(v199 + 16) = sub_10057D92C;
      *(void *)(v199 + 24) = v193;
      uint64_t v200 = v31;
      uint64_t v201 = swift_allocObject();
      *(void *)(v201 + 16) = sub_10057D928;
      *(void *)(v201 + 24) = v199;
      uint64_t v202 = swift_allocObject();
      *(unsigned char *)(v202 + 16) = 64;
      uint64_t v203 = swift_allocObject();
      *(unsigned char *)(v203 + 16) = 8;
      uint64_t v204 = swift_allocObject();
      *(void *)(v204 + 16) = sub_10057D0DC;
      *(void *)(v204 + 24) = v194;
      uint64_t v205 = swift_allocObject();
      *(void *)(v205 + 16) = sub_10057D124;
      *(void *)(v205 + 24) = v204;
      sub_100010218(&qword_100811830);
      uint64_t v206 = swift_allocObject();
      sub_1001F3A0C(v206, 6);
      *uint64_t v207 = sub_10023D9E0;
      v207[1] = v197;
      v207[2] = sub_10023D9E0;
      v207[3] = v198;
      v207[4] = sub_10057D934;
      v207[5] = v201;
      v207[6] = sub_10023D9E0;
      v207[7] = v202;
      v207[8] = sub_10023D9E0;
      v207[9] = v203;
      v207[10] = sub_10057D12C;
      v207[11] = v205;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v196, (os_log_type_t)v895))
      {
        os_log_t v894 = v196;
        uint64_t v208 = (uint8_t *)sub_10011E998();
        uint64_t v209 = swift_slowAlloc();
        uint64_t v910 = swift_slowAlloc();
        uint64_t v911 = v209;
        *(_WORD *)uint64_t v208 = 514;
        v912 = v208 + 2;
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v197;
        uint64_t v210 = v899;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        if (v210) {
          goto LABEL_226;
        }
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v198;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
        unint64_t v909 = v201;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        a2 = v900;
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v202;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        id v211 = v893;
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
        unint64_t v909 = v203;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        uint64_t v31 = v902;
        swift_release();
        v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D12C;
        unint64_t v909 = v205;
        sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
        uint64_t v99 = v906;
        v899 = 0;
        swift_release();
        os_log_t v212 = v894;
        _os_log_impl((void *)&_mh_execute_header, v894, (os_log_type_t)v895, "%{public}s (updateJournalEntryData) unable to get entryType from record: %@", v208, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_10011E9DC();

        uint64_t v30 = v905;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v874, v905);
        os_log_t v28 = v907;
LABEL_52:
        id v242 = [a2 encryptedValues];
        NSString v243 = String._bridgeToObjectiveC()();
        os_log_type_t v244 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v242 objectForKeyedSubscript:v243];
        swift_unknownObjectRelease();

        if (v244)
        {
          v908 = v244;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v245 = (uint64_t)v866;
          os_log_t v246 = v897;
          int v247 = swift_dynamicCast();
          Class v248 = isa;
          (*((void (**)(uint64_t, void, uint64_t, os_log_t))isa + 7))(v245, v247 ^ 1u, 1, v246);
          if ((*((unsigned int (**)(uint64_t, uint64_t, os_log_t))v248 + 6))(v245, 1, v246) != 1)
          {
            uint64_t v249 = v858;
            (*((void (**)(char *, uint64_t, os_log_t))v248 + 4))(v858, v245, v246);
            Class v250 = Date._bridgeToObjectiveC()().super.isa;
            [v898 setEntryDate:v250];

            (*((void (**)(char *, os_log_t))v248 + 1))(v249, v246);
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v245 = (uint64_t)v866;
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v866, 1, 1, v897);
        }
        sub_10001457C(v245, (uint64_t *)&unk_1007FC470);
        uint64_t v251 = sub_10056D5E8();
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v211, v251, v30);
        uint64_t v252 = v903;
        ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
        unint64_t v253 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
        uint64_t v254 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v254 + v253, v252, v99);
        uint64_t v255 = swift_allocObject();
        *(void *)(v255 + 16) = sub_10057D084;
        *(void *)(v255 + 24) = v254;
        uint64_t v256 = swift_allocObject();
        *(void *)(v256 + 16) = a2;
        id v257 = a2;
        os_log_t v895 = (os_log_t)Logger.logObject.getter();
        LODWORD(v252) = static os_log_type_t.error.getter();
        uint64_t v258 = swift_allocObject();
        *(unsigned char *)(v258 + 16) = 34;
        uint64_t v259 = swift_allocObject();
        *(unsigned char *)(v259 + 16) = 8;
        uint64_t v260 = swift_allocObject();
        *(void *)(v260 + 16) = sub_10057D92C;
        *(void *)(v260 + 24) = v255;
        uint64_t v261 = swift_allocObject();
        *(void *)(v261 + 16) = sub_10057D928;
        *(void *)(v261 + 24) = v260;
        uint64_t v262 = swift_allocObject();
        *(unsigned char *)(v262 + 16) = 64;
        uint64_t v263 = swift_allocObject();
        *(unsigned char *)(v263 + 16) = 8;
        uint64_t v264 = swift_allocObject();
        *(void *)(v264 + 16) = sub_10057DBB0;
        *(void *)(v264 + 24) = v256;
        uint64_t v265 = swift_allocObject();
        *(void *)(v265 + 16) = sub_10057D930;
        *(void *)(v265 + 24) = v264;
        sub_100010218(&qword_100811830);
        uint64_t v266 = swift_allocObject();
        sub_1001F3A0C(v266, 6);
        *unint64_t v267 = sub_10023D9E0;
        v267[1] = v258;
        v267[2] = sub_10023D9E0;
        v267[3] = v259;
        v267[4] = sub_10057D934;
        v267[5] = v261;
        v267[6] = sub_10023D9E0;
        v267[7] = v262;
        v267[8] = sub_10023D9E0;
        v267[9] = v263;
        v267[10] = sub_10057D938;
        v267[11] = v265;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v268 = v895;
        swift_bridgeObjectRelease();
        LODWORD(v894) = v252;
        if (os_log_type_enabled(v268, (os_log_type_t)v252))
        {
          unint64_t v269 = (uint8_t *)sub_10011E998();
          uint64_t v270 = swift_slowAlloc();
          uint64_t v910 = swift_slowAlloc();
          uint64_t v911 = v270;
          *(_WORD *)unint64_t v269 = 514;
          v912 = v269 + 2;
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v258;
          id v271 = v899;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          if (v271) {
            goto LABEL_226;
          }
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v259;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
          unint64_t v909 = v261;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          a2 = v900;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v262;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          id v272 = v893;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v263;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v31 = v902;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
          unint64_t v909 = v265;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v99 = v906;
          v899 = 0;
          swift_release();
          os_log_t v273 = v895;
          _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get entryDate from record: %@", v269, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10011E9DC();

          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v272, v905);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = v902;
          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v902 + 8))(v893, v905);
          a2 = v900;
          uint64_t v99 = v906;
        }
        os_log_t v28 = v907;
LABEL_61:
        id v274 = [a2 encryptedValues];
        NSString v275 = String._bridgeToObjectiveC()();
        id v276 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v274 objectForKeyedSubscript:v275];
        swift_unknownObjectRelease();

        if (v276)
        {
          v908 = v276;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v277 = (uint64_t)v867;
          os_log_t v278 = v897;
          int v279 = swift_dynamicCast();
          Class v280 = isa;
          (*((void (**)(uint64_t, void, uint64_t, os_log_t))isa + 7))(v277, v279 ^ 1u, 1, v278);
          int v281 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))v280 + 6))(v277, 1, v278);
          long long v282 = v875;
          if (v281 != 1)
          {
            long long v283 = v859;
            (*((void (**)(char *, uint64_t, os_log_t))v280 + 4))(v859, v277, v278);
            Class v284 = Date._bridgeToObjectiveC()().super.isa;
            [v898 setBundleEndDate:v284];

            (*((void (**)(char *, os_log_t))v280 + 1))(v283, v278);
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v277 = (uint64_t)v867;
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v867, 1, 1, v897);
          long long v282 = v875;
        }
        sub_10001457C(v277, (uint64_t *)&unk_1007FC470);
        uint64_t v285 = sub_10056D5E8();
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v282, v285, v30);
        unint64_t v286 = v903;
        ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
        unint64_t v287 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
        uint64_t v288 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v288 + v287, v286, v99);
        uint64_t v289 = swift_allocObject();
        *(void *)(v289 + 16) = sub_10057D084;
        *(void *)(v289 + 24) = v288;
        uint64_t v290 = swift_allocObject();
        *(void *)(v290 + 16) = a2;
        id v291 = a2;
        os_log_t v895 = (os_log_t)Logger.logObject.getter();
        LODWORD(v286) = static os_log_type_t.default.getter();
        uint64_t v292 = swift_allocObject();
        *(unsigned char *)(v292 + 16) = 34;
        uint64_t v293 = swift_allocObject();
        *(unsigned char *)(v293 + 16) = 8;
        uint64_t v294 = swift_allocObject();
        *(void *)(v294 + 16) = sub_10057D92C;
        *(void *)(v294 + 24) = v289;
        uint64_t v295 = swift_allocObject();
        *(void *)(v295 + 16) = sub_10057D928;
        *(void *)(v295 + 24) = v294;
        uint64_t v296 = swift_allocObject();
        *(unsigned char *)(v296 + 16) = 64;
        uint64_t v297 = swift_allocObject();
        *(unsigned char *)(v297 + 16) = 8;
        uint64_t v298 = swift_allocObject();
        *(void *)(v298 + 16) = sub_10057DBB0;
        *(void *)(v298 + 24) = v290;
        uint64_t v299 = swift_allocObject();
        *(void *)(v299 + 16) = sub_10057D930;
        *(void *)(v299 + 24) = v298;
        sub_100010218(&qword_100811830);
        uint64_t v300 = swift_allocObject();
        sub_1001F3A0C(v300, 6);
        *long long v301 = sub_10023D9E0;
        v301[1] = v292;
        v301[2] = sub_10023D9E0;
        v301[3] = v293;
        v301[4] = sub_10057D934;
        v301[5] = v295;
        v301[6] = sub_10023D9E0;
        v301[7] = v296;
        v301[8] = sub_10023D9E0;
        v301[9] = v297;
        v301[10] = sub_10057D938;
        v301[11] = v299;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v302 = v895;
        swift_bridgeObjectRelease();
        LODWORD(v894) = v286;
        if (os_log_type_enabled(v302, (os_log_type_t)v286))
        {
          uint64_t v303 = (uint8_t *)sub_10011E998();
          uint64_t v304 = swift_slowAlloc();
          uint64_t v910 = swift_slowAlloc();
          uint64_t v911 = v304;
          *(_WORD *)uint64_t v303 = 514;
          v912 = v303 + 2;
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v292;
          v305 = v899;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          if (v305) {
            goto LABEL_226;
          }
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v293;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
          unint64_t v909 = v295;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          a2 = v900;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v296;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v297;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v31 = v902;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
          unint64_t v909 = v299;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v99 = v906;
          v899 = 0;
          swift_release();
          os_log_t v306 = v895;
          _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get bundleEndDate from record: %@", v303, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10011E9DC();

          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v875, v905);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = v902;
          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v902 + 8))(v875, v905);
          a2 = v900;
          uint64_t v99 = v906;
        }
        os_log_t v28 = v907;
LABEL_70:
        id v307 = [a2 encryptedValues];
        NSString v308 = String._bridgeToObjectiveC()();
        uint64_t v309 = (uint8_t *)[v307 objectForKeyedSubscript:v308];
        swift_unknownObjectRelease();

        uint64_t v310 = v876;
        if (v309 && (v912 = v309, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          NSString v311 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v898 setDateSource:v311];
        }
        else
        {
          uint64_t v312 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v310, v312, v30);
          uint64_t v313 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v314 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v315 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v315 + v314, v313, v99);
          uint64_t v316 = swift_allocObject();
          *(void *)(v316 + 16) = sub_10057D084;
          *(void *)(v316 + 24) = v315;
          uint64_t v317 = swift_allocObject();
          *(void *)(v317 + 16) = a2;
          id v318 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v313) = static os_log_type_t.default.getter();
          uint64_t v319 = swift_allocObject();
          *(unsigned char *)(v319 + 16) = 34;
          uint64_t v320 = swift_allocObject();
          *(unsigned char *)(v320 + 16) = 8;
          uint64_t v321 = swift_allocObject();
          *(void *)(v321 + 16) = sub_10057D92C;
          *(void *)(v321 + 24) = v316;
          uint64_t v322 = swift_allocObject();
          *(void *)(v322 + 16) = sub_10057D928;
          *(void *)(v322 + 24) = v321;
          uint64_t v323 = swift_allocObject();
          *(unsigned char *)(v323 + 16) = 64;
          uint64_t v324 = swift_allocObject();
          *(unsigned char *)(v324 + 16) = 8;
          uint64_t v325 = swift_allocObject();
          *(void *)(v325 + 16) = sub_10057DBB0;
          *(void *)(v325 + 24) = v317;
          uint64_t v326 = swift_allocObject();
          *(void *)(v326 + 16) = sub_10057D930;
          *(void *)(v326 + 24) = v325;
          sub_100010218(&qword_100811830);
          uint64_t v327 = swift_allocObject();
          sub_1001F3A0C(v327, 6);
          void *v328 = sub_10023D9E0;
          v328[1] = v319;
          v328[2] = sub_10023D9E0;
          v328[3] = v320;
          v328[4] = sub_10057D934;
          v328[5] = v322;
          v328[6] = sub_10023D9E0;
          v328[7] = v323;
          v328[8] = sub_10023D9E0;
          v328[9] = v324;
          v328[10] = sub_10057D938;
          v328[11] = v326;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v329 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v313;
          if (os_log_type_enabled(v329, (os_log_type_t)v313))
          {
            v330 = (uint8_t *)sub_10011E998();
            uint64_t v331 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v331;
            *(_WORD *)v330 = 514;
            v912 = v330 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v319;
            v332 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v332) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v320;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v322;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v323;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v324;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v326;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v333 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get dateSource from record: %@", v330, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v876, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v876, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v334 = [a2 encryptedValues];
        NSString v335 = String._bridgeToObjectiveC()();
        NSFileAttributeKey v336 = (uint8_t *)[v334 objectForKeyedSubscript:v335];
        swift_unknownObjectRelease();

        uint64_t v337 = v877;
        if (v336 && (v912 = v336, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          NSFileProtectionType v338 = v908;
          unint64_t v339 = v909;
          Class v340 = Data._bridgeToObjectiveC()().super.isa;
          [v898 setTitle:v340];

          sub_100040DD0((uint64_t)v338, v339);
        }
        else
        {
          uint64_t v341 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v337, v341, v30);
          v342 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v343 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v344 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v344 + v343, v342, v99);
          uint64_t v345 = swift_allocObject();
          *(void *)(v345 + 16) = sub_10057D084;
          *(void *)(v345 + 24) = v344;
          uint64_t v346 = swift_allocObject();
          *(void *)(v346 + 16) = a2;
          id v347 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v342) = static os_log_type_t.default.getter();
          uint64_t v348 = swift_allocObject();
          *(unsigned char *)(v348 + 16) = 34;
          uint64_t v349 = swift_allocObject();
          *(unsigned char *)(v349 + 16) = 8;
          uint64_t v350 = swift_allocObject();
          *(void *)(v350 + 16) = sub_10057D92C;
          *(void *)(v350 + 24) = v345;
          uint64_t v351 = swift_allocObject();
          *(void *)(v351 + 16) = sub_10057D928;
          *(void *)(v351 + 24) = v350;
          uint64_t v352 = swift_allocObject();
          *(unsigned char *)(v352 + 16) = 64;
          uint64_t v353 = swift_allocObject();
          *(unsigned char *)(v353 + 16) = 8;
          uint64_t v354 = swift_allocObject();
          *(void *)(v354 + 16) = sub_10057DBB0;
          *(void *)(v354 + 24) = v346;
          uint64_t v355 = swift_allocObject();
          *(void *)(v355 + 16) = sub_10057D930;
          *(void *)(v355 + 24) = v354;
          sub_100010218(&qword_100811830);
          uint64_t v356 = swift_allocObject();
          sub_1001F3A0C(v356, 6);
          *uint64_t v357 = sub_10023D9E0;
          v357[1] = v348;
          v357[2] = sub_10023D9E0;
          v357[3] = v349;
          v357[4] = sub_10057D934;
          v357[5] = v351;
          v357[6] = sub_10023D9E0;
          v357[7] = v352;
          v357[8] = sub_10023D9E0;
          v357[9] = v353;
          v357[10] = sub_10057D938;
          v357[11] = v355;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v358 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v342;
          if (os_log_type_enabled(v358, (os_log_type_t)v342))
          {
            v359 = (uint8_t *)sub_10011E998();
            uint64_t v360 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v360;
            *(_WORD *)v359 = 514;
            v912 = v359 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v348;
            v361 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v361) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v349;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v351;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v352;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v353;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v355;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v362 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get titleData from record: %@", v359, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v877, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v877, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v363 = [a2 encryptedValues];
        NSString v364 = String._bridgeToObjectiveC()();
        uint64_t v365 = (uint8_t *)[v363 objectForKeyedSubscript:v364];
        swift_unknownObjectRelease();

        unint64_t v366 = v878;
        if (v365 && (v912 = v365, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v367 = v908;
          unint64_t v368 = v909;
          Class v369 = Data._bridgeToObjectiveC()().super.isa;
          [v898 setText:v369];

          sub_100040DD0((uint64_t)v367, v368);
        }
        else
        {
          uint64_t v370 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v366, v370, v30);
          v371 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v372 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v373 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v373 + v372, v371, v99);
          uint64_t v374 = swift_allocObject();
          *(void *)(v374 + 16) = sub_10057D084;
          *(void *)(v374 + 24) = v373;
          uint64_t v375 = swift_allocObject();
          *(void *)(v375 + 16) = a2;
          id v376 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v371) = static os_log_type_t.default.getter();
          uint64_t v377 = swift_allocObject();
          *(unsigned char *)(v377 + 16) = 34;
          uint64_t v378 = swift_allocObject();
          *(unsigned char *)(v378 + 16) = 8;
          uint64_t v379 = swift_allocObject();
          *(void *)(v379 + 16) = sub_10057D92C;
          *(void *)(v379 + 24) = v374;
          uint64_t v380 = swift_allocObject();
          *(void *)(v380 + 16) = sub_10057D928;
          *(void *)(v380 + 24) = v379;
          uint64_t v381 = swift_allocObject();
          *(unsigned char *)(v381 + 16) = 64;
          uint64_t v382 = swift_allocObject();
          *(unsigned char *)(v382 + 16) = 8;
          uint64_t v383 = swift_allocObject();
          *(void *)(v383 + 16) = sub_10057DBB0;
          *(void *)(v383 + 24) = v375;
          uint64_t v384 = swift_allocObject();
          *(void *)(v384 + 16) = sub_10057D930;
          *(void *)(v384 + 24) = v383;
          sub_100010218(&qword_100811830);
          uint64_t v385 = swift_allocObject();
          sub_1001F3A0C(v385, 6);
          void *v386 = sub_10023D9E0;
          v386[1] = v377;
          v386[2] = sub_10023D9E0;
          v386[3] = v378;
          v386[4] = sub_10057D934;
          v386[5] = v380;
          v386[6] = sub_10023D9E0;
          v386[7] = v381;
          v386[8] = sub_10023D9E0;
          v386[9] = v382;
          v386[10] = sub_10057D938;
          v386[11] = v384;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v387 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v371;
          if (os_log_type_enabled(v387, (os_log_type_t)v371))
          {
            v388 = (uint8_t *)sub_10011E998();
            uint64_t v389 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v389;
            *(_WORD *)v388 = 514;
            v912 = v388 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v377;
            v390 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v390) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v378;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v380;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v381;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v382;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v384;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v391 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get textData from record: %@", v388, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v878, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v878, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v392 = [a2 encryptedValues];
        NSString v393 = String._bridgeToObjectiveC()();
        unint64_t v394 = (uint8_t *)[v392 objectForKeyedSubscript:v393];
        swift_unknownObjectRelease();

        v395 = v879;
        if (v394 && (v912 = v394, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          v396 = v908;
          unint64_t v397 = v909;
          Class v398 = Data._bridgeToObjectiveC()().super.isa;
          [v898 setAssetOrdering:v398];

          sub_100040DD0((uint64_t)v396, v397);
        }
        else
        {
          uint64_t v399 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v395, v399, v30);
          v400 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v401 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v402 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v402 + v401, v400, v99);
          uint64_t v403 = swift_allocObject();
          *(void *)(v403 + 16) = sub_10057D084;
          *(void *)(v403 + 24) = v402;
          uint64_t v404 = swift_allocObject();
          *(void *)(v404 + 16) = a2;
          id v405 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v400) = static os_log_type_t.default.getter();
          uint64_t v406 = swift_allocObject();
          *(unsigned char *)(v406 + 16) = 34;
          uint64_t v407 = swift_allocObject();
          *(unsigned char *)(v407 + 16) = 8;
          uint64_t v408 = swift_allocObject();
          *(void *)(v408 + 16) = sub_10057D92C;
          *(void *)(v408 + 24) = v403;
          uint64_t v409 = swift_allocObject();
          *(void *)(v409 + 16) = sub_10057D928;
          *(void *)(v409 + 24) = v408;
          uint64_t v410 = swift_allocObject();
          *(unsigned char *)(v410 + 16) = 64;
          uint64_t v411 = swift_allocObject();
          *(unsigned char *)(v411 + 16) = 8;
          uint64_t v412 = swift_allocObject();
          *(void *)(v412 + 16) = sub_10057DBB0;
          *(void *)(v412 + 24) = v404;
          uint64_t v413 = swift_allocObject();
          *(void *)(v413 + 16) = sub_10057D930;
          *(void *)(v413 + 24) = v412;
          sub_100010218(&qword_100811830);
          uint64_t v414 = swift_allocObject();
          sub_1001F3A0C(v414, 6);
          void *v415 = sub_10023D9E0;
          v415[1] = v406;
          v415[2] = sub_10023D9E0;
          v415[3] = v407;
          v415[4] = sub_10057D934;
          v415[5] = v409;
          v415[6] = sub_10023D9E0;
          v415[7] = v410;
          v415[8] = sub_10023D9E0;
          v415[9] = v411;
          v415[10] = sub_10057D938;
          v415[11] = v413;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v416 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v400;
          if (os_log_type_enabled(v416, (os_log_type_t)v400))
          {
            v417 = (uint8_t *)sub_10011E998();
            uint64_t v418 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v418;
            *(_WORD *)v417 = 514;
            v912 = v417 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v406;
            v419 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v419) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v407;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v409;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v410;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v411;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v413;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v420 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get assetOrdering from record: %@", v417, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v879, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v879, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v421 = [a2 encryptedValues];
        NSString v422 = String._bridgeToObjectiveC()();
        NSString v423 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v421 objectForKeyedSubscript:v422];
        swift_unknownObjectRelease();

        if (v423)
        {
          v908 = v423;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v424 = (uint64_t)v868;
          os_log_t v425 = v897;
          int v426 = swift_dynamicCast();
          Class v427 = isa;
          (*((void (**)(uint64_t, void, uint64_t, os_log_t))isa + 7))(v424, v426 ^ 1u, 1, v425);
          int v428 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))v427 + 6))(v424, 1, v425);
          unint64_t v429 = v880;
          if (v428 != 1)
          {
            v430 = v860;
            (*((void (**)(char *, uint64_t, os_log_t))v427 + 4))(v860, v424, v425);
            Class v431 = Date._bridgeToObjectiveC()().super.isa;
            [v898 setCreatedDate:v431];

            (*((void (**)(char *, os_log_t))v427 + 1))(v430, v425);
            goto LABEL_111;
          }
        }
        else
        {
          uint64_t v424 = (uint64_t)v868;
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v868, 1, 1, v897);
          unint64_t v429 = v880;
        }
        sub_10001457C(v424, (uint64_t *)&unk_1007FC470);
        uint64_t v432 = sub_10056D5E8();
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v429, v432, v30);
        v433 = v903;
        ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
        unint64_t v434 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
        uint64_t v435 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v435 + v434, v433, v99);
        uint64_t v436 = swift_allocObject();
        *(void *)(v436 + 16) = sub_10057D084;
        *(void *)(v436 + 24) = v435;
        uint64_t v437 = swift_allocObject();
        *(void *)(v437 + 16) = a2;
        id v438 = a2;
        os_log_t v895 = (os_log_t)Logger.logObject.getter();
        LODWORD(v433) = static os_log_type_t.default.getter();
        uint64_t v439 = swift_allocObject();
        *(unsigned char *)(v439 + 16) = 34;
        uint64_t v440 = swift_allocObject();
        *(unsigned char *)(v440 + 16) = 8;
        uint64_t v441 = swift_allocObject();
        *(void *)(v441 + 16) = sub_10057D92C;
        *(void *)(v441 + 24) = v436;
        uint64_t v442 = swift_allocObject();
        *(void *)(v442 + 16) = sub_10057D928;
        *(void *)(v442 + 24) = v441;
        uint64_t v443 = swift_allocObject();
        *(unsigned char *)(v443 + 16) = 64;
        uint64_t v444 = swift_allocObject();
        *(unsigned char *)(v444 + 16) = 8;
        uint64_t v445 = swift_allocObject();
        *(void *)(v445 + 16) = sub_10057DBB0;
        *(void *)(v445 + 24) = v437;
        uint64_t v446 = swift_allocObject();
        *(void *)(v446 + 16) = sub_10057D930;
        *(void *)(v446 + 24) = v445;
        sub_100010218(&qword_100811830);
        uint64_t v447 = swift_allocObject();
        sub_1001F3A0C(v447, 6);
        *uint64_t v448 = sub_10023D9E0;
        v448[1] = v439;
        v448[2] = sub_10023D9E0;
        v448[3] = v440;
        v448[4] = sub_10057D934;
        v448[5] = v442;
        v448[6] = sub_10023D9E0;
        v448[7] = v443;
        v448[8] = sub_10023D9E0;
        v448[9] = v444;
        v448[10] = sub_10057D938;
        v448[11] = v446;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v449 = v895;
        swift_bridgeObjectRelease();
        LODWORD(v894) = v433;
        if (os_log_type_enabled(v449, (os_log_type_t)v433))
        {
          v450 = (uint8_t *)sub_10011E998();
          uint64_t v451 = swift_slowAlloc();
          uint64_t v910 = swift_slowAlloc();
          uint64_t v911 = v451;
          *(_WORD *)v450 = 514;
          v912 = v450 + 2;
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v439;
          v452 = v899;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          if (v452) {
            goto LABEL_226;
          }
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v440;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
          unint64_t v909 = v442;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          a2 = v900;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v443;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v444;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v31 = v902;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
          unint64_t v909 = v446;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v99 = v906;
          v899 = 0;
          swift_release();
          os_log_t v453 = v895;
          _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get createdDate from record: %@", v450, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10011E9DC();

          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v880, v905);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = v902;
          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v902 + 8))(v880, v905);
          a2 = v900;
          uint64_t v99 = v906;
        }
        os_log_t v28 = v907;
LABEL_111:
        id v454 = [a2 encryptedValues];
        NSString v455 = String._bridgeToObjectiveC()();
        v456 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v454 objectForKeyedSubscript:v455];
        swift_unknownObjectRelease();

        if (v456)
        {
          v908 = v456;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v457 = (uint64_t)v869;
          os_log_t v458 = v897;
          int v459 = swift_dynamicCast();
          Class v460 = isa;
          (*((void (**)(uint64_t, void, uint64_t, os_log_t))isa + 7))(v457, v459 ^ 1u, 1, v458);
          int v461 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))v460 + 6))(v457, 1, v458);
          v462 = v881;
          if (v461 != 1)
          {
            uint64_t v463 = v861;
            (*((void (**)(char *, uint64_t, os_log_t))v460 + 4))(v861, v457, v458);
            Class v464 = Date._bridgeToObjectiveC()().super.isa;
            [v898 setUpdatedDate:v464];

            (*((void (**)(char *, os_log_t))v460 + 1))(v463, v458);
            goto LABEL_120;
          }
        }
        else
        {
          uint64_t v457 = (uint64_t)v869;
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v869, 1, 1, v897);
          v462 = v881;
        }
        sub_10001457C(v457, (uint64_t *)&unk_1007FC470);
        uint64_t v465 = sub_10056D5E8();
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v462, v465, v30);
        id v466 = v903;
        ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
        unint64_t v467 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
        uint64_t v468 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v468 + v467, v466, v99);
        uint64_t v469 = swift_allocObject();
        *(void *)(v469 + 16) = sub_10057D084;
        *(void *)(v469 + 24) = v468;
        uint64_t v470 = swift_allocObject();
        *(void *)(v470 + 16) = a2;
        id v471 = a2;
        os_log_t v895 = (os_log_t)Logger.logObject.getter();
        LODWORD(v466) = static os_log_type_t.default.getter();
        uint64_t v472 = swift_allocObject();
        *(unsigned char *)(v472 + 16) = 34;
        uint64_t v473 = swift_allocObject();
        *(unsigned char *)(v473 + 16) = 8;
        uint64_t v474 = swift_allocObject();
        *(void *)(v474 + 16) = sub_10057D92C;
        *(void *)(v474 + 24) = v469;
        uint64_t v475 = swift_allocObject();
        *(void *)(v475 + 16) = sub_10057D928;
        *(void *)(v475 + 24) = v474;
        uint64_t v476 = swift_allocObject();
        *(unsigned char *)(v476 + 16) = 64;
        uint64_t v477 = swift_allocObject();
        *(unsigned char *)(v477 + 16) = 8;
        uint64_t v478 = swift_allocObject();
        *(void *)(v478 + 16) = sub_10057DBB0;
        *(void *)(v478 + 24) = v470;
        uint64_t v479 = swift_allocObject();
        *(void *)(v479 + 16) = sub_10057D930;
        *(void *)(v479 + 24) = v478;
        sub_100010218(&qword_100811830);
        uint64_t v480 = swift_allocObject();
        sub_1001F3A0C(v480, 6);
        void *v481 = sub_10023D9E0;
        v481[1] = v472;
        v481[2] = sub_10023D9E0;
        v481[3] = v473;
        v481[4] = sub_10057D934;
        v481[5] = v475;
        v481[6] = sub_10023D9E0;
        v481[7] = v476;
        v481[8] = sub_10023D9E0;
        v481[9] = v477;
        v481[10] = sub_10057D938;
        v481[11] = v479;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v482 = v895;
        swift_bridgeObjectRelease();
        LODWORD(v894) = v466;
        if (os_log_type_enabled(v482, (os_log_type_t)v466))
        {
          uint64_t v483 = (uint8_t *)sub_10011E998();
          uint64_t v484 = swift_slowAlloc();
          uint64_t v910 = swift_slowAlloc();
          uint64_t v911 = v484;
          *(_WORD *)uint64_t v483 = 514;
          v912 = v483 + 2;
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v472;
          v485 = v899;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          if (v485) {
            goto LABEL_226;
          }
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v473;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
          unint64_t v909 = v475;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          a2 = v900;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v476;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v477;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v31 = v902;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
          unint64_t v909 = v479;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v99 = v906;
          v899 = 0;
          swift_release();
          os_log_t v486 = v895;
          _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get updatedDate from record: %@", v483, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10011E9DC();

          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v881, v905);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = v902;
          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v902 + 8))(v881, v905);
          a2 = v900;
          uint64_t v99 = v906;
        }
        os_log_t v28 = v907;
LABEL_120:
        id v487 = [a2 encryptedValues];
        NSString v488 = String._bridgeToObjectiveC()();
        v489 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v487 objectForKeyedSubscript:v488];
        swift_unknownObjectRelease();

        v490 = v882;
        if (v489 && (v908 = v489, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          [v898 setMinimumSupportedAppVersion:(__int16)v912];
        }
        else
        {
          uint64_t v491 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v490, v491, v30);
          v492 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v493 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v494 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v494 + v493, v492, v99);
          uint64_t v495 = swift_allocObject();
          *(void *)(v495 + 16) = sub_10057D084;
          *(void *)(v495 + 24) = v494;
          uint64_t v496 = swift_allocObject();
          *(void *)(v496 + 16) = a2;
          id v497 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v492) = static os_log_type_t.default.getter();
          uint64_t v498 = swift_allocObject();
          *(unsigned char *)(v498 + 16) = 34;
          uint64_t v499 = swift_allocObject();
          *(unsigned char *)(v499 + 16) = 8;
          uint64_t v500 = swift_allocObject();
          *(void *)(v500 + 16) = sub_10057D92C;
          *(void *)(v500 + 24) = v495;
          uint64_t v501 = swift_allocObject();
          *(void *)(v501 + 16) = sub_10057D928;
          *(void *)(v501 + 24) = v500;
          uint64_t v502 = swift_allocObject();
          *(unsigned char *)(v502 + 16) = 64;
          uint64_t v503 = swift_allocObject();
          *(unsigned char *)(v503 + 16) = 8;
          uint64_t v504 = swift_allocObject();
          *(void *)(v504 + 16) = sub_10057DBB0;
          *(void *)(v504 + 24) = v496;
          uint64_t v505 = swift_allocObject();
          *(void *)(v505 + 16) = sub_10057D930;
          *(void *)(v505 + 24) = v504;
          sub_100010218(&qword_100811830);
          uint64_t v506 = swift_allocObject();
          sub_1001F3A0C(v506, 6);
          void *v507 = sub_10023D9E0;
          v507[1] = v498;
          v507[2] = sub_10023D9E0;
          v507[3] = v499;
          v507[4] = sub_10057D934;
          v507[5] = v501;
          v507[6] = sub_10023D9E0;
          v507[7] = v502;
          v507[8] = sub_10023D9E0;
          v507[9] = v503;
          v507[10] = sub_10057D938;
          v507[11] = v505;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v508 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v492;
          if (os_log_type_enabled(v508, (os_log_type_t)v492))
          {
            id v509 = (uint8_t *)sub_10011E998();
            uint64_t v510 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v510;
            *(_WORD *)id v509 = 514;
            v912 = v509 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v498;
            v511 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v511) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v499;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v501;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v502;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v503;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v505;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v512 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get minimumSupportedAppVersion from record: %@", v509, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v882, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v882, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v513 = [a2 encryptedValues];
        NSString v514 = String._bridgeToObjectiveC()();
        v515 = (uint8_t *)[v513 objectForKeyedSubscript:v514];
        swift_unknownObjectRelease();

        uint64_t v516 = v883;
        if (v515 && (v912 = v515, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          uint64_t v517 = v908;
          unint64_t v518 = v909;
          Class v519 = Data._bridgeToObjectiveC()().super.isa;
          [v898 setPrompt:v519];

          sub_100040DD0((uint64_t)v517, v518);
        }
        else
        {
          uint64_t v520 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v516, v520, v30);
          v521 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v522 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v523 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v523 + v522, v521, v99);
          uint64_t v524 = swift_allocObject();
          *(void *)(v524 + 16) = sub_10057D084;
          *(void *)(v524 + 24) = v523;
          uint64_t v525 = swift_allocObject();
          *(void *)(v525 + 16) = a2;
          id v526 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v521) = static os_log_type_t.default.getter();
          uint64_t v527 = swift_allocObject();
          *(unsigned char *)(v527 + 16) = 34;
          uint64_t v528 = swift_allocObject();
          *(unsigned char *)(v528 + 16) = 8;
          uint64_t v529 = swift_allocObject();
          *(void *)(v529 + 16) = sub_10057D92C;
          *(void *)(v529 + 24) = v524;
          uint64_t v530 = swift_allocObject();
          *(void *)(v530 + 16) = sub_10057D928;
          *(void *)(v530 + 24) = v529;
          uint64_t v531 = swift_allocObject();
          *(unsigned char *)(v531 + 16) = 64;
          uint64_t v532 = swift_allocObject();
          *(unsigned char *)(v532 + 16) = 8;
          uint64_t v533 = swift_allocObject();
          *(void *)(v533 + 16) = sub_10057DBB0;
          *(void *)(v533 + 24) = v525;
          uint64_t v534 = swift_allocObject();
          *(void *)(v534 + 16) = sub_10057D930;
          *(void *)(v534 + 24) = v533;
          sub_100010218(&qword_100811830);
          uint64_t v535 = swift_allocObject();
          sub_1001F3A0C(v535, 6);
          void *v536 = sub_10023D9E0;
          v536[1] = v527;
          v536[2] = sub_10023D9E0;
          v536[3] = v528;
          v536[4] = sub_10057D934;
          v536[5] = v530;
          v536[6] = sub_10023D9E0;
          v536[7] = v531;
          v536[8] = sub_10023D9E0;
          v536[9] = v532;
          v536[10] = sub_10057D938;
          v536[11] = v534;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v537 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v521;
          if (os_log_type_enabled(v537, (os_log_type_t)v521))
          {
            v538 = (uint8_t *)sub_10011E998();
            uint64_t v539 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v539;
            *(_WORD *)v538 = 514;
            v912 = v538 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v527;
            v540 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v540) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v528;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v530;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v531;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v532;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v534;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v541 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get prompt from record: %@", v538, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v883, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v883, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v542 = [a2 encryptedValues];
        NSString v543 = String._bridgeToObjectiveC()();
        v544 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v542 objectForKeyedSubscript:v543];
        swift_unknownObjectRelease();

        v545 = v884;
        if (v544 && (v908 = v544, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          [v898 setFlagged:v912];
        }
        else
        {
          uint64_t v546 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v545, v546, v30);
          v547 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v548 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v549 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v549 + v548, v547, v99);
          uint64_t v550 = swift_allocObject();
          *(void *)(v550 + 16) = sub_10057D084;
          *(void *)(v550 + 24) = v549;
          uint64_t v551 = swift_allocObject();
          *(void *)(v551 + 16) = a2;
          id v552 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v547) = static os_log_type_t.default.getter();
          uint64_t v553 = swift_allocObject();
          *(unsigned char *)(v553 + 16) = 34;
          uint64_t v554 = swift_allocObject();
          *(unsigned char *)(v554 + 16) = 8;
          uint64_t v555 = swift_allocObject();
          *(void *)(v555 + 16) = sub_10057D92C;
          *(void *)(v555 + 24) = v550;
          uint64_t v556 = swift_allocObject();
          *(void *)(v556 + 16) = sub_10057D928;
          *(void *)(v556 + 24) = v555;
          uint64_t v557 = swift_allocObject();
          *(unsigned char *)(v557 + 16) = 64;
          uint64_t v558 = swift_allocObject();
          *(unsigned char *)(v558 + 16) = 8;
          uint64_t v559 = swift_allocObject();
          *(void *)(v559 + 16) = sub_10057DBB0;
          *(void *)(v559 + 24) = v551;
          uint64_t v560 = swift_allocObject();
          *(void *)(v560 + 16) = sub_10057D930;
          *(void *)(v560 + 24) = v559;
          sub_100010218(&qword_100811830);
          uint64_t v561 = swift_allocObject();
          sub_1001F3A0C(v561, 6);
          void *v562 = sub_10023D9E0;
          v562[1] = v553;
          v562[2] = sub_10023D9E0;
          v562[3] = v554;
          v562[4] = sub_10057D934;
          v562[5] = v556;
          v562[6] = sub_10023D9E0;
          v562[7] = v557;
          v562[8] = sub_10023D9E0;
          v562[9] = v558;
          v562[10] = sub_10057D938;
          v562[11] = v560;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v563 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v547;
          if (os_log_type_enabled(v563, (os_log_type_t)v547))
          {
            v564 = (uint8_t *)sub_10011E998();
            uint64_t v565 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v565;
            *(_WORD *)v564 = 514;
            v912 = v564 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v553;
            v566 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v566) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v554;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v556;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v557;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v558;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v560;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v567 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get flagged from record: %@", v564, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v884, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v884, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v568 = [a2 encryptedValues];
        NSString v569 = String._bridgeToObjectiveC()();
        v570 = (uint8_t *)[v568 objectForKeyedSubscript:v569];
        swift_unknownObjectRelease();

        v571 = v885;
        if (v570 && (v912 = v570, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
        {
          v572 = v862;
          UUID.init(uuidString:)();
          swift_bridgeObjectRelease();
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v28[6].isa)(v572, 1, v99) == 1)
          {
            Class v573 = 0;
          }
          else
          {
            Class v573 = UUID._bridgeToObjectiveC()().super.isa;
            ((void (*)(char *, uint64_t))v28[1].isa)(v572, v99);
          }
          [v898 setBundleId:v573];
        }
        else
        {
          uint64_t v574 = sub_10056D5E8();
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v571, v574, v30);
          v575 = v903;
          ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
          unint64_t v576 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
          uint64_t v577 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v577 + v576, v575, v99);
          uint64_t v578 = swift_allocObject();
          *(void *)(v578 + 16) = sub_10057D084;
          *(void *)(v578 + 24) = v577;
          uint64_t v579 = swift_allocObject();
          *(void *)(v579 + 16) = a2;
          id v580 = a2;
          os_log_t v895 = (os_log_t)Logger.logObject.getter();
          LODWORD(v575) = static os_log_type_t.default.getter();
          uint64_t v581 = swift_allocObject();
          *(unsigned char *)(v581 + 16) = 34;
          uint64_t v582 = swift_allocObject();
          *(unsigned char *)(v582 + 16) = 8;
          uint64_t v583 = swift_allocObject();
          *(void *)(v583 + 16) = sub_10057D92C;
          *(void *)(v583 + 24) = v578;
          uint64_t v584 = swift_allocObject();
          *(void *)(v584 + 16) = sub_10057D928;
          *(void *)(v584 + 24) = v583;
          uint64_t v585 = swift_allocObject();
          *(unsigned char *)(v585 + 16) = 64;
          uint64_t v586 = swift_allocObject();
          *(unsigned char *)(v586 + 16) = 8;
          uint64_t v587 = swift_allocObject();
          *(void *)(v587 + 16) = sub_10057DBB0;
          *(void *)(v587 + 24) = v579;
          uint64_t v588 = swift_allocObject();
          *(void *)(v588 + 16) = sub_10057D930;
          *(void *)(v588 + 24) = v587;
          sub_100010218(&qword_100811830);
          uint64_t v589 = swift_allocObject();
          sub_1001F3A0C(v589, 6);
          void *v590 = sub_10023D9E0;
          v590[1] = v581;
          v590[2] = sub_10023D9E0;
          v590[3] = v582;
          v590[4] = sub_10057D934;
          v590[5] = v584;
          v590[6] = sub_10023D9E0;
          v590[7] = v585;
          v590[8] = sub_10023D9E0;
          v590[9] = v586;
          v590[10] = sub_10057D938;
          v590[11] = v588;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v591 = v895;
          swift_bridgeObjectRelease();
          LODWORD(v894) = v575;
          if (os_log_type_enabled(v591, (os_log_type_t)v575))
          {
            v592 = (uint8_t *)sub_10011E998();
            uint64_t v593 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v593;
            *(_WORD *)v592 = 514;
            v912 = v592 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v581;
            v594 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (v594) {
              goto LABEL_226;
            }
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v582;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
            unint64_t v909 = v584;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            a2 = v900;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v585;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v586;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v31 = v902;
            swift_release();
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
            unint64_t v909 = v588;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            uint64_t v99 = v906;
            v899 = 0;
            swift_release();
            os_log_t v595 = v895;
            _os_log_impl((void *)&_mh_execute_header, v895, (os_log_type_t)v894, "%{public}s (updateJournalEntryData) unable to get bundleId from record: %@", v592, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_10011E9DC();

            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v31 + 8))(v885, v905);
          }
          else
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v31 = v902;
            uint64_t v30 = v905;
            (*(void (**)(char *, uint64_t))(v902 + 8))(v885, v905);
            a2 = v900;
            uint64_t v99 = v906;
          }
          os_log_t v28 = v907;
        }
        id v596 = [a2 encryptedValues];
        NSString v597 = String._bridgeToObjectiveC()();
        v598 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v596 objectForKeyedSubscript:v597];
        swift_unknownObjectRelease();

        if (v598)
        {
          v908 = v598;
          sub_100010218((uint64_t *)&unk_1008060F0);
          uint64_t v599 = (uint64_t)v870;
          os_log_t v600 = v897;
          int v601 = swift_dynamicCast();
          Class v602 = isa;
          (*((void (**)(uint64_t, void, uint64_t, os_log_t))isa + 7))(v599, v601 ^ 1u, 1, v600);
          int v603 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))v602 + 6))(v599, 1, v600);
          v604 = v886;
          if (v603 != 1)
          {
            v605 = v863;
            (*((void (**)(char *, uint64_t, os_log_t))v602 + 4))(v863, v599, v600);
            Class v606 = Date._bridgeToObjectiveC()().super.isa;
            [v898 setBundleDate:v606];

            (*((void (**)(char *, os_log_t))v602 + 1))(v605, v600);
LABEL_164:
            id v629 = [a2 encryptedValues];
            NSString v630 = String._bridgeToObjectiveC()();
            v631 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v629 objectForKeyedSubscript:v630];
            swift_unknownObjectRelease();

            v632 = v887;
            if (v631 && (v908 = v631, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
            {
              [v898 setTextLength:(__int16)v912];
            }
            else
            {
              uint64_t v633 = sub_10056D5E8();
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v632, v633, v30);
              v634 = v903;
              ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
              unint64_t v635 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
              uint64_t v636 = swift_allocObject();
              ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v636 + v635, v634, v99);
              uint64_t v637 = swift_allocObject();
              *(void *)(v637 + 16) = sub_10057D084;
              *(void *)(v637 + 24) = v636;
              uint64_t v638 = swift_allocObject();
              *(void *)(v638 + 16) = a2;
              id v639 = a2;
              os_log_t v897 = (os_log_t)Logger.logObject.getter();
              LODWORD(v634) = static os_log_type_t.default.getter();
              uint64_t v640 = swift_allocObject();
              *(unsigned char *)(v640 + 16) = 34;
              uint64_t v641 = swift_allocObject();
              *(unsigned char *)(v641 + 16) = 8;
              uint64_t v642 = swift_allocObject();
              *(void *)(v642 + 16) = sub_10057D92C;
              *(void *)(v642 + 24) = v637;
              uint64_t v643 = swift_allocObject();
              *(void *)(v643 + 16) = sub_10057D928;
              *(void *)(v643 + 24) = v642;
              uint64_t v644 = swift_allocObject();
              *(unsigned char *)(v644 + 16) = 64;
              uint64_t v645 = swift_allocObject();
              *(unsigned char *)(v645 + 16) = 8;
              uint64_t v646 = swift_allocObject();
              *(void *)(v646 + 16) = sub_10057DBB0;
              *(void *)(v646 + 24) = v638;
              uint64_t v647 = swift_allocObject();
              *(void *)(v647 + 16) = sub_10057D930;
              *(void *)(v647 + 24) = v646;
              sub_100010218(&qword_100811830);
              uint64_t v648 = swift_allocObject();
              sub_1001F3A0C(v648, 6);
              void *v649 = sub_10023D9E0;
              v649[1] = v640;
              v649[2] = sub_10023D9E0;
              v649[3] = v641;
              v649[4] = sub_10057D934;
              v649[5] = v643;
              v649[6] = sub_10023D9E0;
              v649[7] = v644;
              v649[8] = sub_10023D9E0;
              v649[9] = v645;
              v649[10] = sub_10057D938;
              v649[11] = v647;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v650 = v897;
              swift_bridgeObjectRelease();
              LODWORD(isa) = v634;
              if (os_log_type_enabled(v650, (os_log_type_t)v634))
              {
                v651 = (uint8_t *)sub_10011E998();
                uint64_t v652 = swift_slowAlloc();
                uint64_t v910 = swift_slowAlloc();
                uint64_t v911 = v652;
                *(_WORD *)v651 = 514;
                v912 = v651 + 2;
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v640;
                v653 = v899;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                if (v653) {
                  goto LABEL_226;
                }
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v641;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
                unint64_t v909 = v643;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                a2 = v900;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v644;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v645;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v31 = v902;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
                unint64_t v909 = v647;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v99 = v906;
                v899 = 0;
                swift_release();
                os_log_t v654 = v897;
                _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get textLength from record: %@", v651, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_10011E9DC();

                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v31 + 8))(v887, v905);
              }
              else
              {

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v31 = v902;
                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v902 + 8))(v887, v905);
                a2 = v900;
                uint64_t v99 = v906;
              }
              os_log_t v28 = v907;
            }
            id v655 = [a2 encryptedValues];
            NSString v656 = String._bridgeToObjectiveC()();
            v657 = (uint8_t *)[v655 objectForKeyedSubscript:v656];
            swift_unknownObjectRelease();

            v658 = v888;
            if (v657 && (v912 = v657, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
            {
              v659 = v908;
              unint64_t v660 = v909;
              Class v661 = Data._bridgeToObjectiveC()().super.isa;
              [v898 setReflectionIcon:v661];

              sub_100040DD0((uint64_t)v659, v660);
            }
            else
            {
              uint64_t v662 = sub_10056D5E8();
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v658, v662, v30);
              v663 = v903;
              ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
              unint64_t v664 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
              uint64_t v665 = swift_allocObject();
              ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v665 + v664, v663, v99);
              uint64_t v666 = swift_allocObject();
              *(void *)(v666 + 16) = sub_10057D084;
              *(void *)(v666 + 24) = v665;
              uint64_t v667 = swift_allocObject();
              *(void *)(v667 + 16) = a2;
              id v668 = a2;
              os_log_t v897 = (os_log_t)Logger.logObject.getter();
              LODWORD(v663) = static os_log_type_t.default.getter();
              uint64_t v669 = swift_allocObject();
              *(unsigned char *)(v669 + 16) = 34;
              uint64_t v670 = swift_allocObject();
              *(unsigned char *)(v670 + 16) = 8;
              uint64_t v671 = swift_allocObject();
              *(void *)(v671 + 16) = sub_10057D92C;
              *(void *)(v671 + 24) = v666;
              uint64_t v672 = swift_allocObject();
              *(void *)(v672 + 16) = sub_10057D928;
              *(void *)(v672 + 24) = v671;
              uint64_t v673 = swift_allocObject();
              *(unsigned char *)(v673 + 16) = 64;
              uint64_t v674 = swift_allocObject();
              *(unsigned char *)(v674 + 16) = 8;
              uint64_t v675 = swift_allocObject();
              *(void *)(v675 + 16) = sub_10057DBB0;
              *(void *)(v675 + 24) = v667;
              uint64_t v676 = swift_allocObject();
              *(void *)(v676 + 16) = sub_10057D930;
              *(void *)(v676 + 24) = v675;
              sub_100010218(&qword_100811830);
              uint64_t v677 = swift_allocObject();
              sub_1001F3A0C(v677, 6);
              void *v678 = sub_10023D9E0;
              v678[1] = v669;
              v678[2] = sub_10023D9E0;
              v678[3] = v670;
              v678[4] = sub_10057D934;
              v678[5] = v672;
              v678[6] = sub_10023D9E0;
              v678[7] = v673;
              v678[8] = sub_10023D9E0;
              v678[9] = v674;
              v678[10] = sub_10057D938;
              v678[11] = v676;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v679 = v897;
              swift_bridgeObjectRelease();
              LODWORD(isa) = v663;
              if (os_log_type_enabled(v679, (os_log_type_t)v663))
              {
                v680 = (uint8_t *)sub_10011E998();
                uint64_t v681 = swift_slowAlloc();
                uint64_t v910 = swift_slowAlloc();
                uint64_t v911 = v681;
                *(_WORD *)v680 = 514;
                v912 = v680 + 2;
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v669;
                v682 = v899;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                if (v682) {
                  goto LABEL_226;
                }
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v670;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
                unint64_t v909 = v672;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                a2 = v900;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v673;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v674;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v31 = v902;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
                unint64_t v909 = v676;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v99 = v906;
                v899 = 0;
                swift_release();
                os_log_t v683 = v897;
                _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get reflectionIcon from record: %@", v680, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_10011E9DC();

                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v31 + 8))(v888, v905);
              }
              else
              {

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v31 = v902;
                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v902 + 8))(v888, v905);
                a2 = v900;
                uint64_t v99 = v906;
              }
              os_log_t v28 = v907;
            }
            id v684 = [a2 encryptedValues];
            NSString v685 = String._bridgeToObjectiveC()();
            v686 = (uint8_t *)[v684 objectForKeyedSubscript:v685];
            swift_unknownObjectRelease();

            v687 = v889;
            if (v686 && (v912 = v686, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
            {
              v688 = v908;
              unint64_t v689 = v909;
              Class v690 = Data._bridgeToObjectiveC()().super.isa;
              [v898 setReflectionPrompt:v690];

              sub_100040DD0((uint64_t)v688, v689);
            }
            else
            {
              uint64_t v691 = sub_10056D5E8();
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v687, v691, v30);
              v692 = v903;
              ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
              unint64_t v693 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
              uint64_t v694 = swift_allocObject();
              ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v694 + v693, v692, v99);
              uint64_t v695 = swift_allocObject();
              *(void *)(v695 + 16) = sub_10057D084;
              *(void *)(v695 + 24) = v694;
              uint64_t v696 = swift_allocObject();
              *(void *)(v696 + 16) = a2;
              id v697 = a2;
              os_log_t v897 = (os_log_t)Logger.logObject.getter();
              LODWORD(v692) = static os_log_type_t.default.getter();
              uint64_t v698 = swift_allocObject();
              *(unsigned char *)(v698 + 16) = 34;
              uint64_t v699 = swift_allocObject();
              *(unsigned char *)(v699 + 16) = 8;
              uint64_t v700 = swift_allocObject();
              *(void *)(v700 + 16) = sub_10057D92C;
              *(void *)(v700 + 24) = v695;
              uint64_t v701 = swift_allocObject();
              *(void *)(v701 + 16) = sub_10057D928;
              *(void *)(v701 + 24) = v700;
              uint64_t v702 = swift_allocObject();
              *(unsigned char *)(v702 + 16) = 64;
              uint64_t v703 = swift_allocObject();
              *(unsigned char *)(v703 + 16) = 8;
              uint64_t v704 = swift_allocObject();
              *(void *)(v704 + 16) = sub_10057DBB0;
              *(void *)(v704 + 24) = v696;
              uint64_t v705 = swift_allocObject();
              *(void *)(v705 + 16) = sub_10057D930;
              *(void *)(v705 + 24) = v704;
              sub_100010218(&qword_100811830);
              uint64_t v706 = swift_allocObject();
              sub_1001F3A0C(v706, 6);
              void *v707 = sub_10023D9E0;
              v707[1] = v698;
              v707[2] = sub_10023D9E0;
              v707[3] = v699;
              v707[4] = sub_10057D934;
              v707[5] = v701;
              v707[6] = sub_10023D9E0;
              v707[7] = v702;
              v707[8] = sub_10023D9E0;
              v707[9] = v703;
              v707[10] = sub_10057D938;
              v707[11] = v705;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v708 = v897;
              swift_bridgeObjectRelease();
              LODWORD(isa) = v692;
              if (os_log_type_enabled(v708, (os_log_type_t)v692))
              {
                v709 = (uint8_t *)sub_10011E998();
                uint64_t v710 = swift_slowAlloc();
                uint64_t v910 = swift_slowAlloc();
                uint64_t v911 = v710;
                *(_WORD *)v709 = 514;
                v912 = v709 + 2;
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v698;
                v711 = v899;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                if (v711) {
                  goto LABEL_226;
                }
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v699;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
                unint64_t v909 = v701;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                a2 = v900;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v702;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v703;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v31 = v902;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
                unint64_t v909 = v705;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v99 = v906;
                v899 = 0;
                swift_release();
                os_log_t v712 = v897;
                _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get reflectionPrompt from record: %@", v709, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_10011E9DC();

                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v31 + 8))(v889, v905);
              }
              else
              {

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v31 = v902;
                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v902 + 8))(v889, v905);
                a2 = v900;
                uint64_t v99 = v906;
              }
              os_log_t v28 = v907;
            }
            id v713 = [a2 encryptedValues];
            NSString v714 = String._bridgeToObjectiveC()();
            v715 = (uint8_t *)[v713 objectForKeyedSubscript:v714];
            swift_unknownObjectRelease();

            v716 = v890;
            if (v715 && (v912 = v715, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
            {
              NSString v717 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              [v898 setReflectionType:v717];
            }
            else
            {
              uint64_t v718 = sub_10056D5E8();
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v716, v718, v30);
              v719 = v903;
              ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
              unint64_t v720 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
              uint64_t v721 = swift_allocObject();
              ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v721 + v720, v719, v99);
              uint64_t v722 = swift_allocObject();
              *(void *)(v722 + 16) = sub_10057D084;
              *(void *)(v722 + 24) = v721;
              uint64_t v723 = swift_allocObject();
              *(void *)(v723 + 16) = a2;
              id v724 = a2;
              os_log_t v897 = (os_log_t)Logger.logObject.getter();
              LODWORD(v719) = static os_log_type_t.default.getter();
              uint64_t v725 = swift_allocObject();
              *(unsigned char *)(v725 + 16) = 34;
              uint64_t v726 = swift_allocObject();
              *(unsigned char *)(v726 + 16) = 8;
              uint64_t v727 = swift_allocObject();
              *(void *)(v727 + 16) = sub_10057D92C;
              *(void *)(v727 + 24) = v722;
              uint64_t v728 = swift_allocObject();
              *(void *)(v728 + 16) = sub_10057D928;
              *(void *)(v728 + 24) = v727;
              uint64_t v729 = swift_allocObject();
              *(unsigned char *)(v729 + 16) = 64;
              uint64_t v730 = swift_allocObject();
              *(unsigned char *)(v730 + 16) = 8;
              uint64_t v731 = swift_allocObject();
              *(void *)(v731 + 16) = sub_10057DBB0;
              *(void *)(v731 + 24) = v723;
              uint64_t v732 = swift_allocObject();
              *(void *)(v732 + 16) = sub_10057D930;
              *(void *)(v732 + 24) = v731;
              sub_100010218(&qword_100811830);
              uint64_t v733 = swift_allocObject();
              sub_1001F3A0C(v733, 6);
              void *v734 = sub_10023D9E0;
              v734[1] = v725;
              v734[2] = sub_10023D9E0;
              v734[3] = v726;
              v734[4] = sub_10057D934;
              v734[5] = v728;
              v734[6] = sub_10023D9E0;
              v734[7] = v729;
              v734[8] = sub_10023D9E0;
              v734[9] = v730;
              v734[10] = sub_10057D938;
              v734[11] = v732;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v735 = v897;
              swift_bridgeObjectRelease();
              LODWORD(isa) = v719;
              if (os_log_type_enabled(v735, (os_log_type_t)v719))
              {
                v736 = (uint8_t *)sub_10011E998();
                uint64_t v737 = swift_slowAlloc();
                uint64_t v910 = swift_slowAlloc();
                uint64_t v911 = v737;
                *(_WORD *)v736 = 514;
                v912 = v736 + 2;
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v725;
                v738 = v899;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                if (v738) {
                  goto LABEL_226;
                }
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v726;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
                unint64_t v909 = v728;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                a2 = v900;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v729;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v730;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v31 = v902;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
                unint64_t v909 = v732;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v99 = v906;
                v899 = 0;
                swift_release();
                os_log_t v739 = v897;
                _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get reflectionType from record: %@", v736, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_10011E9DC();

                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v31 + 8))(v890, v905);
              }
              else
              {

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v31 = v902;
                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v902 + 8))(v890, v905);
                a2 = v900;
                uint64_t v99 = v906;
              }
              os_log_t v28 = v907;
            }
            id v740 = [a2 encryptedValues];
            NSString v741 = String._bridgeToObjectiveC()();
            v742 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v740 objectForKeyedSubscript:v741];
            swift_unknownObjectRelease();

            v743 = v891;
            if (v742 && (v908 = v742, sub_100010218((uint64_t *)&unk_1008060F0), (swift_dynamicCast() & 1) != 0))
            {
              [v898 setShowPhotoMemoryBanner:v912];
            }
            else
            {
              uint64_t v744 = sub_10056D5E8();
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v743, v744, v30);
              v745 = v903;
              ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
              unint64_t v746 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
              uint64_t v747 = swift_allocObject();
              ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v747 + v746, v745, v99);
              uint64_t v748 = swift_allocObject();
              *(void *)(v748 + 16) = sub_10057D084;
              *(void *)(v748 + 24) = v747;
              uint64_t v749 = swift_allocObject();
              *(void *)(v749 + 16) = a2;
              id v750 = a2;
              os_log_t v897 = (os_log_t)Logger.logObject.getter();
              LODWORD(v745) = static os_log_type_t.default.getter();
              uint64_t v751 = swift_allocObject();
              *(unsigned char *)(v751 + 16) = 34;
              uint64_t v752 = swift_allocObject();
              *(unsigned char *)(v752 + 16) = 8;
              uint64_t v753 = swift_allocObject();
              *(void *)(v753 + 16) = sub_10057D92C;
              *(void *)(v753 + 24) = v748;
              uint64_t v754 = swift_allocObject();
              *(void *)(v754 + 16) = sub_10057D928;
              *(void *)(v754 + 24) = v753;
              uint64_t v755 = swift_allocObject();
              *(unsigned char *)(v755 + 16) = 64;
              uint64_t v756 = swift_allocObject();
              *(unsigned char *)(v756 + 16) = 8;
              uint64_t v757 = swift_allocObject();
              *(void *)(v757 + 16) = sub_10057DBB0;
              *(void *)(v757 + 24) = v749;
              uint64_t v758 = swift_allocObject();
              *(void *)(v758 + 16) = sub_10057D930;
              *(void *)(v758 + 24) = v757;
              sub_100010218(&qword_100811830);
              uint64_t v759 = swift_allocObject();
              sub_1001F3A0C(v759, 6);
              void *v760 = sub_10023D9E0;
              v760[1] = v751;
              v760[2] = sub_10023D9E0;
              v760[3] = v752;
              v760[4] = sub_10057D934;
              v760[5] = v754;
              v760[6] = sub_10023D9E0;
              v760[7] = v755;
              v760[8] = sub_10023D9E0;
              v760[9] = v756;
              v760[10] = sub_10057D938;
              v760[11] = v758;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v761 = v897;
              swift_bridgeObjectRelease();
              LODWORD(isa) = v745;
              if (os_log_type_enabled(v761, (os_log_type_t)v745))
              {
                v762 = (uint8_t *)sub_10011E998();
                uint64_t v763 = swift_slowAlloc();
                uint64_t v910 = swift_slowAlloc();
                uint64_t v911 = v763;
                *(_WORD *)v762 = 514;
                v912 = v762 + 2;
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v751;
                v764 = v899;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                if (v764) {
                  goto LABEL_226;
                }
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v752;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
                unint64_t v909 = v754;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                a2 = v900;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v755;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v756;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v31 = v902;
                swift_release();
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
                unint64_t v909 = v758;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                uint64_t v99 = v906;
                v899 = 0;
                swift_release();
                os_log_t v765 = v897;
                _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get showPhotoMemoryBanner from record: %@", v762, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_10011E9DC();

                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v31 + 8))(v891, v905);
              }
              else
              {

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v31 = v902;
                uint64_t v30 = v905;
                (*(void (**)(char *, uint64_t))(v902 + 8))(v891, v905);
                a2 = v900;
                uint64_t v99 = v906;
              }
              os_log_t v28 = v907;
            }
            id v766 = [a2 encryptedValues];
            NSString v767 = String._bridgeToObjectiveC()();
            v768 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v766 objectForKeyedSubscript:v767];
            swift_unknownObjectRelease();

            v769 = v892;
            if (v768)
            {
              v908 = v768;
              sub_100010218((uint64_t *)&unk_1008060F0);
              if (swift_dynamicCast())
              {
                [v898 setShowTitle:v912];
                goto LABEL_212;
              }
            }
            uint64_t v770 = sub_10056D5E8();
            (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v769, v770, v30);
            v771 = v903;
            ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
            unint64_t v772 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
            uint64_t v773 = swift_allocObject();
            ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v773 + v772, v771, v99);
            uint64_t v774 = swift_allocObject();
            *(void *)(v774 + 16) = sub_10057D084;
            *(void *)(v774 + 24) = v773;
            uint64_t v775 = swift_allocObject();
            *(void *)(v775 + 16) = a2;
            id v776 = a2;
            os_log_t v897 = (os_log_t)Logger.logObject.getter();
            LODWORD(v771) = static os_log_type_t.default.getter();
            uint64_t v777 = swift_allocObject();
            *(unsigned char *)(v777 + 16) = 34;
            uint64_t v778 = swift_allocObject();
            *(unsigned char *)(v778 + 16) = 8;
            uint64_t v779 = swift_allocObject();
            *(void *)(v779 + 16) = sub_10057D92C;
            *(void *)(v779 + 24) = v774;
            uint64_t v780 = swift_allocObject();
            *(void *)(v780 + 16) = sub_10057D928;
            *(void *)(v780 + 24) = v779;
            uint64_t v781 = swift_allocObject();
            *(unsigned char *)(v781 + 16) = 64;
            uint64_t v782 = swift_allocObject();
            *(unsigned char *)(v782 + 16) = 8;
            uint64_t v783 = swift_allocObject();
            *(void *)(v783 + 16) = sub_10057DBB0;
            *(void *)(v783 + 24) = v775;
            uint64_t v784 = swift_allocObject();
            *(void *)(v784 + 16) = sub_10057D930;
            *(void *)(v784 + 24) = v783;
            sub_100010218(&qword_100811830);
            uint64_t v785 = swift_allocObject();
            sub_1001F3A0C(v785, 6);
            void *v786 = sub_10023D9E0;
            v786[1] = v777;
            v786[2] = sub_10023D9E0;
            v786[3] = v778;
            v786[4] = sub_10057D934;
            v786[5] = v780;
            v786[6] = sub_10023D9E0;
            v786[7] = v781;
            v786[8] = sub_10023D9E0;
            v786[9] = v782;
            v786[10] = sub_10057D938;
            v786[11] = v784;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            os_log_t v787 = v897;
            swift_bridgeObjectRelease();
            LODWORD(isa) = v771;
            if (!os_log_type_enabled(v787, (os_log_type_t)v771))
            {

              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v31 = v902;
              uint64_t v30 = v905;
              (*(void (**)(char *, uint64_t))(v902 + 8))(v892, v905);
              a2 = v900;
              uint64_t v99 = v906;
              goto LABEL_211;
            }
            v788 = (uint8_t *)sub_10011E998();
            uint64_t v789 = swift_slowAlloc();
            uint64_t v910 = swift_slowAlloc();
            uint64_t v911 = v789;
            *(_WORD *)v788 = 514;
            v912 = v788 + 2;
            v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
            unint64_t v909 = v777;
            v790 = v899;
            sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
            if (!v790)
            {
              swift_release();
              v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
              unint64_t v909 = v778;
              sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
              swift_release();
              v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
              unint64_t v909 = v780;
              sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
              a2 = v900;
              swift_release();
              v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
              unint64_t v909 = v781;
              sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
              swift_release();
              v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
              unint64_t v909 = v782;
              sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
              uint64_t v31 = v902;
              swift_release();
              v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
              unint64_t v909 = v784;
              sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
              uint64_t v99 = v906;
              v899 = 0;
              swift_release();
              os_log_t v791 = v897;
              _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get showTitle from record: %@", v788, 0x16u);
              sub_100010218((uint64_t *)&unk_1007FC430);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_10011E9DC();

              uint64_t v30 = v905;
              (*(void (**)(char *, uint64_t))(v31 + 8))(v892, v905);
LABEL_211:
              os_log_t v28 = v907;
LABEL_212:
              id v792 = [a2 encryptedValues];
              NSString v793 = String._bridgeToObjectiveC()();
              v794 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))[v792 objectForKeyedSubscript:v793];
              swift_unknownObjectRelease();

              if (v794)
              {
                v908 = v794;
                sub_100010218((uint64_t *)&unk_1008060F0);
                if (swift_dynamicCast())
                {
                  id v795 = v898;
                  [v898 setMinimumSupportedAppVersionMode:(__int16)v912];

                  return sub_100040DD0(v864, v865);
                }
              }
              uint64_t v796 = sub_10056D5E8();
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v871, v796, v30);
              v797 = v903;
              ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
              unint64_t v798 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
              uint64_t v799 = swift_allocObject();
              ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v799 + v798, v797, v99);
              uint64_t v800 = swift_allocObject();
              *(void *)(v800 + 16) = sub_10057D084;
              *(void *)(v800 + 24) = v799;
              uint64_t v801 = swift_allocObject();
              *(void *)(v801 + 16) = a2;
              id v802 = a2;
              os_log_t v907 = (os_log_t)Logger.logObject.getter();
              LODWORD(v797) = static os_log_type_t.default.getter();
              uint64_t v803 = swift_allocObject();
              *(unsigned char *)(v803 + 16) = 34;
              uint64_t v804 = swift_allocObject();
              *(unsigned char *)(v804 + 16) = 8;
              uint64_t v805 = swift_allocObject();
              *(void *)(v805 + 16) = sub_10057D92C;
              *(void *)(v805 + 24) = v800;
              uint64_t v806 = swift_allocObject();
              *(void *)(v806 + 16) = sub_10057D928;
              *(void *)(v806 + 24) = v805;
              uint64_t v807 = swift_allocObject();
              *(unsigned char *)(v807 + 16) = 64;
              uint64_t v808 = swift_allocObject();
              *(unsigned char *)(v808 + 16) = 8;
              uint64_t v809 = swift_allocObject();
              *(void *)(v809 + 16) = sub_10057DBB0;
              *(void *)(v809 + 24) = v801;
              uint64_t v810 = swift_allocObject();
              *(void *)(v810 + 16) = sub_10057D930;
              *(void *)(v810 + 24) = v809;
              sub_100010218(&qword_100811830);
              uint64_t v811 = swift_allocObject();
              sub_1001F3A0C(v811, 6);
              void *v812 = sub_10023D9E0;
              v812[1] = v803;
              v812[2] = sub_10023D9E0;
              v812[3] = v804;
              v812[4] = sub_10057D934;
              v812[5] = v806;
              v812[6] = sub_10023D9E0;
              v812[7] = v807;
              v812[8] = sub_10023D9E0;
              v812[9] = v808;
              v812[10] = sub_10057D938;
              v812[11] = v810;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v813 = v907;
              swift_bridgeObjectRelease();
              LODWORD(v906) = v797;
              if (os_log_type_enabled(v813, (os_log_type_t)v797))
              {
                v814 = (uint8_t *)sub_10011E998();
                uint64_t v815 = swift_slowAlloc();
                uint64_t v910 = swift_slowAlloc();
                uint64_t v911 = v815;
                *(_WORD *)v814 = 514;
                v912 = v814 + 2;
                v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                unint64_t v909 = v803;
                v816 = v899;
                sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                if (!v816)
                {
                  swift_release();
                  v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                  unint64_t v909 = v804;
                  sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                  swift_release();
                  v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
                  unint64_t v909 = v806;
                  sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                  swift_release();
                  v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                  unint64_t v909 = v807;
                  sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                  swift_release();
                  v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
                  unint64_t v909 = v808;
                  sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                  uint64_t v817 = v902;
                  v818 = v871;
                  swift_release();
                  v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
                  unint64_t v909 = v810;
                  sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
                  swift_release();
                  os_log_t v819 = v907;
                  _os_log_impl((void *)&_mh_execute_header, v907, (os_log_type_t)v906, "%{public}s (updateJournalEntryData) unable to get minimumSupportedAppVersionMode from record: %@", v814, 0x16u);
                  sub_100010218((uint64_t *)&unk_1007FC430);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  sub_10011E9DC();
                  sub_100040DD0(v864, v865);

                  return (*(uint64_t (**)(char *, uint64_t))(v817 + 8))(v818, v905);
                }
                goto LABEL_226;
              }

              sub_100040DD0(v864, v865);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              id v167 = *(uint64_t (**)(char *, uint64_t))(v902 + 8);
              unint64_t v168 = v871;
              return v167(v168, v905);
            }
LABEL_226:
            uint64_t result = swift_errorRelease();
            __break(1u);
            return result;
          }
        }
        else
        {
          uint64_t v599 = (uint64_t)v870;
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v870, 1, 1, v897);
          v604 = v886;
        }
        sub_10001457C(v599, (uint64_t *)&unk_1007FC470);
        uint64_t v607 = sub_10056D5E8();
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v604, v607, v30);
        v608 = v903;
        ((void (*)(char *, id, uint64_t))v28[2].isa)(v903, v904, v99);
        unint64_t v609 = (LOBYTE(v28[10].isa) + 16) & ~(unint64_t)LOBYTE(v28[10].isa);
        uint64_t v610 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v28[4].isa)(v610 + v609, v608, v99);
        uint64_t v611 = swift_allocObject();
        *(void *)(v611 + 16) = sub_10057D084;
        *(void *)(v611 + 24) = v610;
        uint64_t v612 = swift_allocObject();
        *(void *)(v612 + 16) = a2;
        id v613 = a2;
        os_log_t v897 = (os_log_t)Logger.logObject.getter();
        LODWORD(v608) = static os_log_type_t.default.getter();
        uint64_t v614 = swift_allocObject();
        *(unsigned char *)(v614 + 16) = 34;
        uint64_t v615 = swift_allocObject();
        *(unsigned char *)(v615 + 16) = 8;
        uint64_t v616 = swift_allocObject();
        *(void *)(v616 + 16) = sub_10057D92C;
        *(void *)(v616 + 24) = v611;
        uint64_t v617 = swift_allocObject();
        *(void *)(v617 + 16) = sub_10057D928;
        *(void *)(v617 + 24) = v616;
        uint64_t v618 = swift_allocObject();
        *(unsigned char *)(v618 + 16) = 64;
        uint64_t v619 = swift_allocObject();
        *(unsigned char *)(v619 + 16) = 8;
        uint64_t v620 = swift_allocObject();
        *(void *)(v620 + 16) = sub_10057DBB0;
        *(void *)(v620 + 24) = v612;
        uint64_t v621 = swift_allocObject();
        *(void *)(v621 + 16) = sub_10057D930;
        *(void *)(v621 + 24) = v620;
        sub_100010218(&qword_100811830);
        uint64_t v622 = swift_allocObject();
        sub_1001F3A0C(v622, 6);
        void *v623 = sub_10023D9E0;
        v623[1] = v614;
        v623[2] = sub_10023D9E0;
        v623[3] = v615;
        v623[4] = sub_10057D934;
        v623[5] = v617;
        v623[6] = sub_10023D9E0;
        v623[7] = v618;
        v623[8] = sub_10023D9E0;
        v623[9] = v619;
        v623[10] = sub_10057D938;
        v623[11] = v621;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v624 = v897;
        swift_bridgeObjectRelease();
        LODWORD(isa) = v608;
        if (os_log_type_enabled(v624, (os_log_type_t)v608))
        {
          v625 = (uint8_t *)sub_10011E998();
          uint64_t v626 = swift_slowAlloc();
          uint64_t v910 = swift_slowAlloc();
          uint64_t v911 = v626;
          *(_WORD *)v625 = 514;
          v912 = v625 + 2;
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v614;
          v627 = v899;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          if (v627) {
            goto LABEL_226;
          }
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v615;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
          unint64_t v909 = v617;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          a2 = v900;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v618;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
          unint64_t v909 = v619;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v31 = v902;
          swift_release();
          v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
          unint64_t v909 = v621;
          sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
          uint64_t v99 = v906;
          v899 = 0;
          swift_release();
          os_log_t v628 = v897;
          _os_log_impl((void *)&_mh_execute_header, v897, (os_log_type_t)isa, "%{public}s (updateJournalEntryData) unable to get bundleDate from record: %@", v625, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_10011E9DC();

          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v886, v905);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = v902;
          uint64_t v30 = v905;
          (*(void (**)(char *, uint64_t))(v902 + 8))(v886, v905);
          a2 = v900;
          uint64_t v99 = v906;
        }
        os_log_t v28 = v907;
        goto LABEL_164;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v30 = v905;
      (*(void (**)(char *, uint64_t))(v200 + 8))(v874, v905);
      uint64_t v31 = v200;
      a2 = v900;
      uint64_t v99 = v906;
      os_log_t v28 = v907;
    }
    id v211 = v893;
    goto LABEL_52;
  }
  uint64_t v106 = v105;
  unint64_t v855 = v104;
  uint64_t v107 = sub_10056D5E8();
  unint64_t v108 = *(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 16);
  uint64_t v851 = v107;
  uint64_t v852 = v31 + 16;
  v850 = v108;
  ((void (*)(char *))v108)(v899);
  os_log_t v109 = (void (*)(char *, id, uint64_t))v28[2].isa;
  uint64_t v110 = v903;
  os_log_t v849 = v28 + 2;
  v848 = v109;
  v109(v903, v904, v99);
  uint64_t isa_low = LOBYTE(v28[10].isa);
  uint64_t v112 = (isa_low + 16) & ~isa_low;
  uint64_t v846 = v112 + v901;
  uint64_t v845 = isa_low | 7;
  uint64_t v113 = swift_allocObject();
  uint64_t v847 = v112;
  uint64_t v114 = (void (*)(uint64_t, char *, uint64_t))v28[4].isa;
  os_log_t v844 = v28 + 4;
  v843 = v114;
  v114(v113 + v112, v110, v99);
  uint64_t v115 = swift_allocObject();
  *(void *)(v115 + 16) = sub_10057D084;
  *(void *)(v115 + 24) = v113;
  uint64_t v116 = swift_allocObject();
  *(void *)(v116 + 16) = v106;
  uint64_t v117 = swift_allocObject();
  *(void *)(v117 + 16) = a2;
  id v853 = a2;
  id v854 = v106;
  os_log_t v857 = (os_log_t)Logger.logObject.getter();
  int v856 = static os_log_type_t.default.getter();
  uint64_t v118 = swift_allocObject();
  *(unsigned char *)(v118 + 16) = 34;
  uint64_t v119 = swift_allocObject();
  *(unsigned char *)(v119 + 16) = 8;
  uint64_t v120 = swift_allocObject();
  *(void *)(v120 + 16) = sub_10057D92C;
  *(void *)(v120 + 24) = v115;
  uint64_t v121 = swift_allocObject();
  *(void *)(v121 + 16) = sub_10057D928;
  *(void *)(v121 + 24) = v120;
  uint64_t v122 = swift_allocObject();
  *(unsigned char *)(v122 + 16) = 64;
  uint64_t v123 = swift_allocObject();
  *(unsigned char *)(v123 + 16) = 8;
  uint64_t v124 = swift_allocObject();
  *(void *)(v124 + 16) = sub_10057D79C;
  *(void *)(v124 + 24) = v116;
  uint64_t v125 = swift_allocObject();
  *(unsigned char *)(v125 + 16) = 64;
  uint64_t v126 = swift_allocObject();
  *(unsigned char *)(v126 + 16) = 8;
  uint64_t v127 = swift_allocObject();
  *(void *)(v127 + 16) = sub_10057DBB4;
  *(void *)(v127 + 24) = v117;
  uint64_t v842 = sub_100010218(&qword_100811830);
  uint64_t v128 = swift_allocObject();
  sub_1001F3A0C(v128, 9);
  void *v129 = sub_10023D9E0;
  v129[1] = v118;
  v129[2] = sub_10023D9E0;
  v129[3] = v119;
  v129[4] = sub_10057D934;
  v129[5] = v121;
  v129[6] = sub_10023D9E0;
  v129[7] = v122;
  v129[8] = sub_10023D9E0;
  v129[9] = v123;
  v129[10] = sub_10057D938;
  v129[11] = v124;
  v129[12] = sub_10023D9E0;
  v129[13] = v125;
  v129[14] = sub_10023D9E0;
  v129[15] = v126;
  v129[16] = sub_10057D938;
  v129[17] = v127;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_log_t v130 = v857;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v130, (os_log_type_t)v856))
  {
    uint64_t v838 = v126;
    uint64_t v131 = (uint8_t *)sub_10011E998();
    uint64_t v132 = swift_slowAlloc();
    uint64_t v133 = swift_slowAlloc();
    uint64_t v839 = v132;
    uint64_t v910 = v133;
    uint64_t v911 = v132;
    uint64_t v840 = v133;
    v841 = v131;
    *(_WORD *)uint64_t v131 = 770;
    v912 = v131 + 2;
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v118;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v119;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
    unint64_t v909 = v121;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    uint64_t v30 = v905;
    unint64_t v134 = v838;
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v122;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    id v135 = v854;
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v123;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
    unint64_t v909 = v124;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v125;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v134;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    uint64_t v136 = v899;
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D938;
    unint64_t v909 = v127;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    os_log_t v137 = v857;
    _os_log_impl((void *)&_mh_execute_header, v857, (os_log_type_t)v856, "%{public}s (updateJournalEntryData) change tags - local:%@  remote:%@", v841, 0x20u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_10011E9DC();

    uint64_t v31 = v902;
    v899 = *(char **)(v902 + 8);
    ((void (*)(char *, uint64_t))v899)(v136, v30);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v31 = v902;
    uint64_t v161 = v899;
    uint64_t v30 = v905;
    v899 = *(char **)(v902 + 8);
    ((void (*)(char *, uint64_t))v899)(v161, v905);
    id v135 = v854;
  }
  id v162 = [v853 recordChangeTag];
  unint64_t v104 = v855;
  if (v162)
  {
    unsigned int v163 = v162;
    uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v166 = v165;
  }
  else
  {
    uint64_t v164 = 0;
    uint64_t v166 = 0;
  }
  id v169 = [v135 recordChangeTag];
  if (!v169)
  {
    uint64_t v99 = v906;
    if (!v166) {
      goto LABEL_221;
    }
    goto LABEL_33;
  }
  uint64_t v170 = v169;
  uint64_t v171 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v173 = v172;

  if (!v166)
  {
    uint64_t v99 = v906;
    if (!v173) {
      goto LABEL_221;
    }
    goto LABEL_33;
  }
  uint64_t v99 = v906;
  if (!v173)
  {
LABEL_33:
    v899 = 0;

    swift_bridgeObjectRelease();
LABEL_34:
    id v98 = v898;
    a2 = v900;
    os_log_t v28 = v907;
    goto LABEL_35;
  }
  if (v164 != v171 || v166 != v173)
  {
    char v820 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v820) {
      goto LABEL_221;
    }
    v899 = 0;

    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_221:
  unint64_t v821 = v865;
  v850(v865, v851, v30);
  v822 = v903;
  v848(v903, v904, v99);
  uint64_t v823 = swift_allocObject();
  v843(v823 + v847, v822, v99);
  uint64_t v824 = swift_allocObject();
  *(void *)(v824 + 16) = sub_10057D084;
  *(void *)(v824 + 24) = v823;
  v825 = Logger.logObject.getter();
  os_log_type_t v826 = static os_log_type_t.default.getter();
  uint64_t v827 = swift_allocObject();
  *(unsigned char *)(v827 + 16) = 34;
  uint64_t v828 = swift_allocObject();
  *(unsigned char *)(v828 + 16) = 8;
  uint64_t v829 = swift_allocObject();
  *(void *)(v829 + 16) = sub_10057D92C;
  *(void *)(v829 + 24) = v824;
  uint64_t v830 = swift_allocObject();
  *(void *)(v830 + 16) = sub_10057D928;
  *(void *)(v830 + 24) = v829;
  uint64_t v831 = swift_allocObject();
  sub_1001F3A0C(v831, 3);
  void *v832 = sub_10023D9E0;
  v832[1] = v827;
  v832[2] = sub_10023D9E0;
  v832[3] = v828;
  v832[4] = sub_10057D934;
  v832[5] = v830;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v825, v826))
  {
    v833 = (uint8_t *)sub_10011E998();
    uint64_t v910 = swift_slowAlloc();
    uint64_t v911 = 0;
    *(_WORD *)v833 = 258;
    v912 = v833 + 2;
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v827;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10023D9E0;
    unint64_t v909 = v828;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    id v834 = v854;
    swift_release();
    v908 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10057D934;
    unint64_t v909 = v830;
    sub_10011E9A0(&v908, (uint64_t)&v912, (uint64_t)&v911, (uint64_t)&v910);
    unint64_t v835 = v865;
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v825, v826, "%{public}s (updateJournalEntryData) Local and Remote change tags are the same, nothing to update, ignoring...", v833, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_10011E9DC();
    sub_100040DD0(v864, v855);

    unint64_t v836 = v835;
  }
  else
  {

    sub_100040DD0(v864, v855);
    swift_release();
    swift_release();
    swift_release();

    unint64_t v836 = v821;
  }
  return ((uint64_t (*)(unint64_t, uint64_t))v899)(v836, v30);
}

uint64_t sub_100578D60(void *a1)
{
  id v1 = [a1 recordID];
  id v2 = [v1 recordName];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t sub_100578DD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1002A4450(a5, a6);
  type metadata accessor for JournalEntryMO();
  unint64_t v7 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v8 = v7;
  if (!(v7 >> 62))
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9) {
LABEL_3:
  }
    *a3 = v8;
LABEL_5:

  return swift_bridgeObjectRelease();
}

unint64_t sub_100579174(void *a1, uint64_t a2, char *a3)
{
  uint64_t v70 = a3;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for URL();
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  unint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v51 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  unint64_t v65 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v51 - v19;
  sub_1002A4450(0xD000000000000017, 0x80000001006A6220);
  type metadata accessor for JournalEntryMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v23 = v65;
  uint64_t v24 = v69;
  uint64_t v70 = v14;
  uint64_t v64 = v11;
  uint64_t v59 = v8;
  unint64_t v25 = result;
  if (!(result >> 62))
  {
    uint64_t v26 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_3;
    }
LABEL_28:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_28;
  }
LABEL_3:
  if (v26 >= 1)
  {
    uint64_t v27 = 0;
    uint64_t v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    unint64_t v68 = v25 & 0xC000000000000001;
    uint64_t v66 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    uint64_t v62 = (void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v63 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v56 = (void (**)(uint64_t, char *, uint64_t))(v24 + 32);
    uint64_t v60 = (void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    *(void *)&long long v22 = 136315138;
    long long v52 = v22;
    v51[1] = (char *)&type metadata for Any + 8;
    unint64_t v65 = v25;
    uint64_t v69 = v26;
    uint64_t v53 = v12;
    uint64_t v57 = v6;
    uint64_t v58 = a1;
    do
    {
      if (v68) {
        id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v29 = *(id *)(v25 + 8 * v27 + 32);
      }
      uint64_t v30 = v29;
      id v31 = [v29 id];
      if (v31)
      {
        uint64_t v32 = v31;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v33 = 0;
      }
      else
      {
        uint64_t v33 = 1;
      }
      uint64_t v34 = v70;
      (*v67)(v17, v33, 1, v12);
      sub_10002C4EC((uint64_t)v17, (uint64_t)v20, &qword_100800950);
      if ((*v66)(v20, 1, v12))
      {
        sub_10001457C((uint64_t)v20, &qword_100800950);
        if (qword_1007F7EA8 != -1) {
          swift_once();
        }
        uint64_t v35 = type metadata accessor for Logger();
        sub_100026A54(v35, (uint64_t)qword_100813200);
        uint64_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "JournalEntryMO.attachmentDirectoryPath is nil since id is nil", v38, 2u);
          unint64_t v25 = v65;
          swift_slowDealloc();
        }
      }
      else
      {
        (*v63)(v34, v20, v12);
        sub_10001457C((uint64_t)v20, &qword_100800950);
        UUID.uuidString.getter();
        (*v62)(v34, v12);
        type metadata accessor for Journaling();
        sub_1005E6B0C((uint64_t)v6);
        swift_bridgeObjectRelease();
        if ((*v61)(v6, 1, v71) == 1)
        {
          sub_10001457C((uint64_t)v6, (uint64_t *)&unk_100800A60);
          unint64_t v25 = v65;
        }
        else
        {
          uint64_t v39 = (uint64_t)v64;
          (*v56)((uint64_t)v64, v6, v71);
          uint64_t v40 = v59;
          if (qword_1007F7EA8 != -1) {
            swift_once();
          }
          uint64_t v41 = type metadata accessor for Logger();
          sub_100026A54(v41, (uint64_t)qword_100813200);
          (*v55)(v40, v39, v71);
          uint64_t v42 = Logger.logObject.getter();
          os_log_type_t v43 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = v40;
            uint64_t v45 = swift_slowAlloc();
            uint64_t v54 = swift_slowAlloc();
            v72[0] = v54;
            *(_DWORD *)uint64_t v45 = v52;
            sub_10057CDDC((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
            uint64_t v46 = v44;
            uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v45 + 4) = sub_10011EA98(v47, v48, v72);
            swift_bridgeObjectRelease();
            uint64_t v49 = *v60;
            (*v60)(v46, v71);
            _os_log_impl((void *)&_mh_execute_header, v42, v43, "Deleting entry attachments directory: %s", (uint8_t *)v45, 0xCu);
            swift_arrayDestroy();
            uint64_t v12 = v53;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v49 = *v60;
            (*v60)(v40, v71);
          }

          uint64_t v50 = (uint64_t)v64;
          unint64_t v25 = v65;
          sub_1005E760C((uint64_t)v64);
          v49((char *)v50, v71);
          id v6 = v57;
          a1 = v58;
        }
      }
      uint64_t v28 = v69;
      ++v27;
      [a1 deleteObject:v30];
    }
    while (v28 != v27);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_100579BF0(void *a1)
{
  sub_1002A4450(0xD00000000000002ALL, 0x80000001006A61F0);
  type metadata accessor for JournalEntryMO();
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    if ([v6 isRemovedFromCloud])
    {
      [a1 deleteObject:v7];
    }
    else
    {
      [v7 setIsUploadedToCloud:0];
      [v7 setRecordSystemFields:0];
    }
  }
LABEL_13:

  return swift_bridgeObjectRelease();
}

unint64_t sub_10057A028()
{
  return sub_100579BF0(*(void **)(v0 + 16));
}

uint64_t sub_10057A034()
{
  return swift_deallocObject();
}

uint64_t sub_10057A044(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10057A054()
{
  return swift_release();
}

void sub_10057A05C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1002A4450(0xD00000000000001CLL, 0x80000001006A62C0);
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v7 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v8 = v7;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (!v9) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_10;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (v14) {
      goto LABEL_12;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!v9) {
      return;
    }
    goto LABEL_27;
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v8 + 8 * i + 32);
    }
    uint64_t v12 = v11;
    [v11 setIsRemovedFromCloud:1];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  type metadata accessor for JournalEntryMO();
  unint64_t v13 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v4 = v13;
  if (v13 >> 62) {
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14) {
    goto LABEL_26;
  }
LABEL_12:
  uint64_t v38 = a1;
  uint64_t v39 = a4;
  if (v14 < 1) {
    __break(1u);
  }
  for (uint64_t j = 0; j != v14; ++j)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v4 + 8 * j + 32);
    }
    uint64_t v17 = v16;
    [v16 assetOrdering:v38, v39];
    if (!v18) {
      goto LABEL_20;
    }
    uint64_t v19 = v18;
    uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_100010218((uint64_t *)&unk_100811810);
    sub_100040E64();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_100040DD0(v20, v22);
    unint64_t v23 = v41;
    if (!v41)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      unint64_t v23 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v24 = v23[2];
    swift_bridgeObjectRelease();
    if (!v24) {
      [v17 setIsRemovedFromCloud:1];
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  a1 = v38;
  a4 = v39;
LABEL_27:
  id v41 = 0;
  unsigned int v25 = [a1 save:&v41];
  id v26 = v41;
  if (v25)
  {
    id v27 = v26;
  }
  else
  {
    id v28 = v41;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F7CD0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100026A54(v29, (uint64_t)qword_1008117F0);
    id v30 = a4;
    swift_errorRetain();
    id v31 = v30;
    swift_errorRetain();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      id v41 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446466;
      type metadata accessor for UUID();
      sub_10057CDDC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v36, v37, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2112;
      swift_errorRetain();
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v35 = v40;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s Unabled to fetch all empty journal entries for deletion: %@", (uint8_t *)v34, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_10057A814(void *a1@<X2>, uint64_t *a2@<X8>)
{
  sub_1002A4450(0xD000000000000019, 0x80000001006A63A0);
  type metadata accessor for JournalEntryMO();
  uint64_t v5 = NSManagedObjectContext.count<A>(for:)();
  if (v2)
  {
    if (qword_1007F7CD0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100026A54(v6, (uint64_t)qword_1008117F0);
    id v7 = a1;
    swift_errorRetain();
    id v8 = v7;
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446466;
      type metadata accessor for UUID();
      sub_10057CDDC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v13, v14, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2112;
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v24;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s Unabled to count entries: %@", (uint8_t *)v11, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = v5;
    if (qword_1007F7CD0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100026A54(v16, (uint64_t)qword_1008117F0);
    id v17 = a1;
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v23 = a2;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446466;
      type metadata accessor for UUID();
      sub_10057CDDC((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v21, v22, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s Entries Count %ld", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v23;
      swift_slowDealloc();
    }
    else
    {
    }
  }
  *a2 = v15;
}

uint64_t sub_10057AD18(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  sub_10011EA98(0xD00000000000006DLL, 0x80000001006A63E0, a3);
  uint64_t v4 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v4;
  return result;
}

void **sub_10057AD80(void **result)
{
  id v1 = *result;
  void *v1 = 135;
  *uint64_t result = v1 + 1;
  return result;
}

uint64_t sub_10057AD94(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 initWithEntityName:v3];

  sub_1000FBDC8();
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
  uint64_t v6 = sub_1000917A4(a1);
  *(void *)(v5 + 56) = sub_100010218(&qword_100811838);
  *(void *)(v5 + 64) = sub_10057D8CC();
  *(void *)(v5 + 32) = v6;
  id v7 = NSPredicate.init(format:_:)();
  [v4 setPredicate:v7];

  type metadata accessor for JournalEntryMO();
  uint64_t v8 = NSManagedObjectContext.fetch<A>(_:)();

  return v8;
}

id sub_10057AEE8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v4 - 8);
  unint64_t v178 = (char *)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v173 - v7;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  id v186 = (char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  NSString v185 = (char *)&v173 - v12;
  __chkstk_darwin(v13);
  id v184 = (char *)&v173 - v14;
  __chkstk_darwin(v15);
  uint64_t v183 = (char *)&v173 - v16;
  __chkstk_darwin(v17);
  id v182 = (char *)&v173 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v173 - v20;
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  Class v179 = (char *)&v173 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  id v180 = (char *)&v173 - v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v173 - v28;
  *(void *)&double v31 = __chkstk_darwin(v30).n128_u64[0];
  NSString v181 = (char *)&v173 - v32;
  id v33 = [a1 encryptedValues:v31];
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v33 objectForKeyedSubscript:v34];
  swift_unknownObjectRelease();

  if (v35)
  {
    uint64_t v188 = (uint64_t)v35;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v177 = a2;
      __int16 v36 = v190;
      if (qword_1007F7CD0 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_100026A54(v37, (uint64_t)qword_1008117F0);
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 33554688;
        LOWORD(v188) = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "(createNewJournalEntryFromRecord) (newRecord.textLength) == %hd", v40, 6u);
        swift_slowDealloc();
      }

      a2 = v177;
    }
  }
  id v41 = [a1 encryptedValues];
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v41 objectForKeyedSubscript:v42];
  swift_unknownObjectRelease();

  if (!v43)
  {
    Class v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v187(v21, 1, 1, v22);
    goto LABEL_15;
  }
  uint64_t v188 = (uint64_t)v43;
  sub_100010218((uint64_t *)&unk_1008060F0);
  int v44 = swift_dynamicCast();
  Class v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v187(v21, v44 ^ 1u, 1, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
LABEL_15:
    sub_10001457C((uint64_t)v21, (uint64_t *)&unk_1007FC470);
    goto LABEL_18;
  }
  uint64_t v177 = a2;
  uint64_t v45 = v181;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v181, v21, v22);
  if (qword_1007F7CD0 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for Logger();
  sub_100026A54(v46, (uint64_t)qword_1008117F0);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v47(v29, v45, v22);
  unint64_t v48 = v180;
  v47(v180, v45, v22);
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  int v51 = v50;
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v176 = swift_slowAlloc();
    uint64_t v188 = v176;
    *(_DWORD *)uint64_t v52 = 136315394;
    uint64_t v173 = (void (*)(char *, uint64_t))(v52 + 4);
    id v53 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v54 = String._bridgeToObjectiveC()();
    os_log_t v175 = v49;
    uint64_t v55 = v54;
    [v53 setDateFormat:v54];

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v57 = [v53 stringFromDate:isa];

    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v174 = v51;
    unint64_t v60 = v59;

    uint64_t v190 = sub_10011EA98(v58, v60, &v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v173 = *(void (**)(char *, uint64_t))(v23 + 8);
    v173(v29, v22);
    *(_WORD *)(v52 + 12) = 2080;
    sub_10057CDDC((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v61 = v180;
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v190 = sub_10011EA98(v62, v63, &v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v64 = v173;
    v173(v61, v22);
    os_log_t v65 = v175;
    _os_log_impl((void *)&_mh_execute_header, v175, (os_log_type_t)v174, "(createNewJournalEntryFromRecord) (newRecord.updatedDate) == %s  %s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v64(v181, v22);
  }
  else
  {

    uint64_t v66 = *(void (**)(char *, uint64_t))(v23 + 8);
    v66(v48, v22);
    v66(v29, v22);
    v66(v45, v22);
  }
  a2 = v177;
LABEL_18:
  type metadata accessor for JournalEntryMO();
  id v67 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a2];
  id v68 = [a1 recordID];
  id v69 = [v68 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v70 = type metadata accessor for UUID();
  uint64_t v71 = *(void *)(v70 - 8);
  NSString v181 = *(char **)(v71 + 48);
  Class v72 = 0;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v181)(v8, 1, v70) != 1)
  {
    Class v72 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v70);
  }
  [v67 setId:v72];

  [v67 setIsUploadedToCloud:1];
  [v67 setIsRemovedFromCloud:0];
  id v73 = [a1 encryptedValues];
  NSString v74 = String._bridgeToObjectiveC()();
  Class v75 = (Class)[v73 objectForKeyedSubscript:v74];
  swift_unknownObjectRelease();

  if (v75)
  {
    uint64_t v190 = (uint64_t)v75;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v76 = v188;
      unint64_t v77 = v189;
      Class v75 = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DD0(v76, v77);
    }
    else
    {
      Class v75 = 0;
    }
  }
  [v67 setTitle:v75];

  id v78 = [a1 encryptedValues];
  NSString v79 = String._bridgeToObjectiveC()();
  Class v80 = (Class)[v78 objectForKeyedSubscript:v79];
  swift_unknownObjectRelease();

  if (v80)
  {
    uint64_t v190 = (uint64_t)v80;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v81 = v188;
      unint64_t v82 = v189;
      Class v80 = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DD0(v81, v82);
    }
    else
    {
      Class v80 = 0;
    }
  }
  [v67 setText:v80];

  id v83 = [a1 encryptedValues];
  NSString v84 = String._bridgeToObjectiveC()();
  Class v85 = (Class)[v83 objectForKeyedSubscript:v84];
  swift_unknownObjectRelease();

  if (v85)
  {
    uint64_t v190 = (uint64_t)v85;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v86 = v188;
      unint64_t v87 = v189;
      Class v85 = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DD0(v86, v87);
    }
    else
    {
      Class v85 = 0;
    }
  }
  [v67 setAssetOrdering:v85];

  id v88 = [a1 encryptedValues];
  NSString v89 = String._bridgeToObjectiveC()();
  Class v90 = (Class)[v88 objectForKeyedSubscript:v89];
  swift_unknownObjectRelease();

  if (v90)
  {
    uint64_t v188 = (uint64_t)v90;
    sub_100010218((uint64_t *)&unk_1008060F0);
    uint64_t v91 = v182;
    int v92 = swift_dynamicCast();
    v187(v91, v92 ^ 1u, 1, v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v91, 1, v22) == 1)
    {
      Class v90 = 0;
    }
    else
    {
      Class v90 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v91, v22);
    }
  }
  else
  {
    v187(v182, 1, 1, v22);
  }
  [v67 setCreatedDate:v90];

  id v93 = [a1 encryptedValues];
  NSString v94 = String._bridgeToObjectiveC()();
  Class v95 = (Class)[v93 objectForKeyedSubscript:v94];
  swift_unknownObjectRelease();

  if (v95)
  {
    uint64_t v188 = (uint64_t)v95;
    sub_100010218((uint64_t *)&unk_1008060F0);
    uint64_t v96 = v183;
    int v97 = swift_dynamicCast();
    v187(v96, v97 ^ 1u, 1, v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v96, 1, v22) == 1)
    {
      Class v95 = 0;
    }
    else
    {
      Class v95 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v96, v22);
    }
  }
  else
  {
    v187(v183, 1, 1, v22);
  }
  [v67 setUpdatedDate:v95];

  id v98 = [a1 encryptedValues];
  NSString v99 = String._bridgeToObjectiveC()();
  Class v100 = (Class)[v98 objectForKeyedSubscript:v99];
  swift_unknownObjectRelease();

  if (v100)
  {
    uint64_t v188 = (uint64_t)v100;
    sub_100010218((uint64_t *)&unk_1008060F0);
    uint64_t v101 = v184;
    int v102 = swift_dynamicCast();
    v187(v101, v102 ^ 1u, 1, v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v101, 1, v22) == 1)
    {
      Class v100 = 0;
    }
    else
    {
      Class v100 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v101, v22);
    }
  }
  else
  {
    v187(v184, 1, 1, v22);
  }
  [v67 setBundleEndDate:v100];

  id v103 = [a1 encryptedValues];
  NSString v104 = String._bridgeToObjectiveC()();
  NSString v105 = [v103 objectForKeyedSubscript:v104];
  swift_unknownObjectRelease();

  if (v105)
  {
    uint64_t v190 = (uint64_t)v105;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v105 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v105 = 0;
    }
  }
  [v67 setDateSource:v105];

  id v106 = [a1 encryptedValues];
  NSString v107 = String._bridgeToObjectiveC()();
  Class v108 = (Class)[v106 objectForKeyedSubscript:v107];
  swift_unknownObjectRelease();

  if (v108)
  {
    uint64_t v188 = (uint64_t)v108;
    sub_100010218((uint64_t *)&unk_1008060F0);
    os_log_t v109 = v185;
    int v110 = swift_dynamicCast();
    v187(v109, v110 ^ 1u, 1, v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v109, 1, v22) == 1)
    {
      Class v108 = 0;
    }
    else
    {
      Class v108 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v109, v22);
    }
  }
  else
  {
    v187(v185, 1, 1, v22);
  }
  [v67 setEntryDate:v108];

  id v111 = [a1 encryptedValues];
  NSString v112 = String._bridgeToObjectiveC()();
  id v113 = [v111 objectForKeyedSubscript:v112];
  swift_unknownObjectRelease();

  if (v113)
  {
    uint64_t v188 = (uint64_t)v113;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v67 setMinimumSupportedAppVersion:(__int16)v190];
    }
  }
  id v114 = [a1 encryptedValues];
  NSString v115 = String._bridgeToObjectiveC()();
  Class v116 = (Class)[v114 objectForKeyedSubscript:v115];
  swift_unknownObjectRelease();

  if (v116)
  {
    uint64_t v190 = (uint64_t)v116;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v117 = v188;
      unint64_t v118 = v189;
      Class v116 = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DD0(v117, v118);
    }
    else
    {
      Class v116 = 0;
    }
  }
  [v67 setPrompt:v116];

  id v119 = [a1 encryptedValues];
  NSString v120 = String._bridgeToObjectiveC()();
  id v121 = [v119 objectForKeyedSubscript:v120];
  swift_unknownObjectRelease();

  if (v121)
  {
    uint64_t v188 = (uint64_t)v121;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v67 setFlagged:v190];
    }
  }
  id v122 = [a1 encryptedValues];
  NSString v123 = String._bridgeToObjectiveC()();
  id v124 = [v122 objectForKeyedSubscript:v123];
  swift_unknownObjectRelease();

  if (v124)
  {
    uint64_t v190 = (uint64_t)v124;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v125 = v178;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v181)(v125, 1, v70) == 1)
      {
        Class v126 = 0;
      }
      else
      {
        Class v126 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v71 + 8))(v125, v70);
      }
      [v67 setBundleId:v126];
    }
  }
  id v127 = [a1 encryptedValues];
  NSString v128 = String._bridgeToObjectiveC()();
  id v129 = [v127 objectForKeyedSubscript:v128];
  swift_unknownObjectRelease();

  if (!v129)
  {
    uint64_t v130 = (uint64_t)v186;
    v187(v186, 1, 1, v22);
    goto LABEL_76;
  }
  uint64_t v188 = (uint64_t)v129;
  sub_100010218((uint64_t *)&unk_1008060F0);
  uint64_t v130 = (uint64_t)v186;
  int v131 = swift_dynamicCast();
  v187((char *)v130, v131 ^ 1u, 1, v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v130, 1, v22) == 1)
  {
LABEL_76:
    sub_10001457C(v130, (uint64_t *)&unk_1007FC470);
    goto LABEL_77;
  }
  uint64_t v132 = v179;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v179, v130, v22);
  Class v133 = Date._bridgeToObjectiveC()().super.isa;
  [v67 setBundleDate:v133];

  (*(void (**)(char *, uint64_t))(v23 + 8))(v132, v22);
LABEL_77:
  id v134 = [a1 encryptedValues];
  NSString v135 = String._bridgeToObjectiveC()();
  id v136 = [v134 objectForKeyedSubscript:v135];
  swift_unknownObjectRelease();

  if (v136)
  {
    uint64_t v190 = (uint64_t)v136;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v137 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v67 setEntryType:v137];
    }
  }
  id v138 = [a1 encryptedValues];
  NSString v139 = String._bridgeToObjectiveC()();
  id v140 = [v138 objectForKeyedSubscript:v139];
  swift_unknownObjectRelease();

  if (v140)
  {
    uint64_t v188 = (uint64_t)v140;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v67 setTextLength:(__int16)v190];
    }
  }
  id v141 = [a1 encryptedValues];
  NSString v142 = String._bridgeToObjectiveC()();
  id v143 = [v141 objectForKeyedSubscript:v142];
  swift_unknownObjectRelease();

  if (v143)
  {
    uint64_t v190 = (uint64_t)v143;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v144 = v188;
      unint64_t v145 = v189;
      Class v146 = Data._bridgeToObjectiveC()().super.isa;
      [v67 setReflectionIcon:v146];

      sub_100040DD0(v144, v145);
    }
  }
  id v147 = [a1 encryptedValues];
  NSString v148 = String._bridgeToObjectiveC()();
  id v149 = [v147 objectForKeyedSubscript:v148];
  swift_unknownObjectRelease();

  if (v149)
  {
    uint64_t v190 = (uint64_t)v149;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      uint64_t v150 = v188;
      unint64_t v151 = v189;
      Class v152 = Data._bridgeToObjectiveC()().super.isa;
      [v67 setReflectionPrompt:v152];

      sub_100040DD0(v150, v151);
    }
  }
  id v153 = [a1 encryptedValues];
  NSString v154 = String._bridgeToObjectiveC()();
  id v155 = [v153 objectForKeyedSubscript:v154];
  swift_unknownObjectRelease();

  if (v155)
  {
    uint64_t v190 = (uint64_t)v155;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast())
    {
      NSString v156 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v67 setReflectionType:v156];
    }
  }
  id v157 = [a1 encryptedValues];
  NSString v158 = String._bridgeToObjectiveC()();
  id v159 = [v157 objectForKeyedSubscript:v158];
  swift_unknownObjectRelease();

  if (v159)
  {
    uint64_t v188 = (uint64_t)v159;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v67 setShowPhotoMemoryBanner:v190];
    }
  }
  id v160 = [a1 encryptedValues];
  NSString v161 = String._bridgeToObjectiveC()();
  id v162 = [v160 objectForKeyedSubscript:v161];
  swift_unknownObjectRelease();

  if (v162)
  {
    uint64_t v188 = (uint64_t)v162;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v67 setShowTitle:v190];
    }
  }
  id v163 = [a1 encryptedValues];
  NSString v164 = String._bridgeToObjectiveC()();
  id v165 = [v163 objectForKeyedSubscript:v164];
  swift_unknownObjectRelease();

  if (v165)
  {
    uint64_t v188 = (uint64_t)v165;
    sub_100010218((uint64_t *)&unk_1008060F0);
    if (swift_dynamicCast()) {
      [v67 setMinimumSupportedAppVersionMode:(__int16)v190];
    }
  }
  id v166 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  [a1 encodeSystemFieldsWithCoder:v166];
  id v167 = [v166 encodedData];
  uint64_t v168 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v170 = v169;

  Class v171 = Data._bridgeToObjectiveC()().super.isa;
  sub_100040DD0(v168, v170);
  [v67 setRecordSystemFields:v171];

  return v67;
}

unint64_t sub_10057CD34()
{
  return sub_100579174(*(void **)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_10057CD40()
{
  return swift_deallocObject();
}

uint64_t sub_10057CD50()
{
  return swift_deallocObject();
}

void sub_10057CDA0()
{
  sub_10057A05C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10057CDAC()
{
  return swift_deallocObject();
}

void sub_10057CDC0()
{
  sub_10056D64C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_10057CDCC()
{
  return swift_deallocObject();
}

uint64_t sub_10057CDDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10057CE28()
{
  return sub_100578DD4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD00000000000001ALL, 0x80000001006A6360);
}

uint64_t sub_10057CE68()
{
  return swift_deallocObject();
}

uint64_t sub_10057CE7C()
{
  return sub_100578DD4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unint64_t **)(v0 + 32), *(void *)(v0 + 40), 0xD00000000000001FLL, 0x80000001006A6380);
}

uint64_t sub_10057CEBC()
{
  return swift_deallocObject();
}

uint64_t sub_10057CECC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10057CF04()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_10057CFE4()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  int v6 = *((unsigned __int8 *)v0 + v2 + *(void *)(v1 + 64));

  return sub_10056DA38(v3, v4, v5, (char *)v0 + v2, v6);
}

uint64_t sub_10057D070()
{
  return swift_deallocObject();
}

uint64_t sub_10057D088()
{
  return sub_1000EFE5C(*(void (**)(__n128))(v0 + 16));
}

uint64_t sub_10057D090()
{
  return sub_100578D60(*(void **)(v0 + 16));
}

uint64_t sub_10057D098()
{
  return swift_deallocObject();
}

uint64_t sub_10057D0A8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D0B8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D0C8()
{
  return swift_deallocObject();
}

id sub_10057D0DC()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_10057D0E4()
{
  return swift_deallocObject();
}

uint64_t sub_10057D0F4()
{
  return swift_deallocObject();
}

uint64_t sub_10057D104()
{
  return swift_deallocObject();
}

uint64_t sub_10057D114()
{
  return swift_deallocObject();
}

uint64_t sub_10057D124()
{
  return sub_1005C3978(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10057D12C(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_1005C3604(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_10057D138()
{
  return swift_deallocObject();
}

uint64_t sub_10057D148()
{
  return swift_deallocObject();
}

uint64_t sub_10057D158()
{
  return swift_deallocObject();
}

uint64_t sub_10057D168()
{
  return swift_deallocObject();
}

uint64_t sub_10057D17C()
{
  return swift_deallocObject();
}

uint64_t sub_10057D18C()
{
  return swift_deallocObject();
}

uint64_t sub_10057D19C()
{
  return swift_deallocObject();
}

uint64_t sub_10057D1AC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D1C0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D1D0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D1E0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D1F0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D204()
{
  return swift_deallocObject();
}

uint64_t sub_10057D214()
{
  return swift_deallocObject();
}

uint64_t sub_10057D224()
{
  return swift_deallocObject();
}

uint64_t sub_10057D234()
{
  return swift_deallocObject();
}

uint64_t sub_10057D248()
{
  return swift_deallocObject();
}

uint64_t sub_10057D258()
{
  return swift_deallocObject();
}

uint64_t sub_10057D268()
{
  return swift_deallocObject();
}

uint64_t sub_10057D278()
{
  return swift_deallocObject();
}

uint64_t sub_10057D28C()
{
  return swift_deallocObject();
}

uint64_t sub_10057D29C()
{
  return swift_deallocObject();
}

uint64_t sub_10057D2AC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D2BC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D2D0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D2E0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D2F0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D300()
{
  return swift_deallocObject();
}

uint64_t sub_10057D314()
{
  return swift_deallocObject();
}

uint64_t sub_10057D324()
{
  return swift_deallocObject();
}

uint64_t sub_10057D334()
{
  return swift_deallocObject();
}

uint64_t sub_10057D344()
{
  return swift_deallocObject();
}

uint64_t sub_10057D358()
{
  return swift_deallocObject();
}

uint64_t sub_10057D368()
{
  return swift_deallocObject();
}

uint64_t sub_10057D378()
{
  return swift_deallocObject();
}

uint64_t sub_10057D388()
{
  return swift_deallocObject();
}

uint64_t sub_10057D39C()
{
  return swift_deallocObject();
}

uint64_t sub_10057D3AC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D3BC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D3CC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D3E0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D3F0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D400()
{
  return swift_deallocObject();
}

uint64_t sub_10057D410()
{
  return swift_deallocObject();
}

uint64_t sub_10057D424()
{
  return swift_deallocObject();
}

uint64_t sub_10057D434()
{
  return swift_deallocObject();
}

uint64_t sub_10057D444()
{
  return swift_deallocObject();
}

uint64_t sub_10057D454()
{
  return swift_deallocObject();
}

uint64_t sub_10057D468()
{
  return swift_deallocObject();
}

uint64_t sub_10057D478()
{
  return swift_deallocObject();
}

uint64_t sub_10057D488()
{
  return swift_deallocObject();
}

uint64_t sub_10057D498()
{
  return swift_deallocObject();
}

uint64_t sub_10057D4AC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D4BC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D4CC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D4DC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D4F0()
{
  return swift_deallocObject();
}

uint64_t sub_10057D500()
{
  return swift_deallocObject();
}

uint64_t sub_10057D510()
{
  return swift_deallocObject();
}

uint64_t sub_10057D520()
{
  return swift_deallocObject();
}

uint64_t sub_10057D534()
{
  return swift_deallocObject();
}

uint64_t sub_10057D544()
{
  return swift_deallocObject();
}

uint64_t sub_10057D554()
{
  return swift_deallocObject();
}

uint64_t sub_10057D564()
{
  return swift_deallocObject();
}

uint64_t sub_10057D578()
{
  return swift_deallocObject();
}

uint64_t sub_10057D588()
{
  return swift_deallocObject();
}

uint64_t sub_10057D598()
{
  return swift_deallocObject();
}

uint64_t sub_10057D5A8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D5BC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D5CC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D5DC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D5EC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D600()
{
  return swift_deallocObject();
}

uint64_t sub_10057D610()
{
  return swift_deallocObject();
}

uint64_t sub_10057D620()
{
  return swift_deallocObject();
}

uint64_t sub_10057D630()
{
  return swift_deallocObject();
}

uint64_t sub_10057D644()
{
  return swift_deallocObject();
}

uint64_t sub_10057D654()
{
  return swift_deallocObject();
}

uint64_t sub_10057D664()
{
  return swift_deallocObject();
}

uint64_t sub_10057D674()
{
  return swift_deallocObject();
}

id sub_10057D684()
{
  return [*(id *)(v0 + 16) isUploadedToCloud];
}

uint64_t sub_10057D6A8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D6B8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D6C8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D6D8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D6E8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D6F8()
{
  return swift_deallocObject();
}

uint64_t sub_10057D708()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10057D740()
{
  return sub_1004381F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10057D748()
{
  return sub_100438224(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10057D750@<X0>(_DWORD *a1@<X8>)
{
  return sub_10043824C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_10057D758(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100438198(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_10057D764()
{
  return swift_deallocObject();
}

id sub_10057D79C()
{
  id v1 = [*(id *)(v0 + 16) recordChangeTag];

  return v1;
}

uint64_t sub_10057D7D4()
{
  return swift_deallocObject();
}

uint64_t sub_10057D7E4()
{
  return swift_deallocObject();
}

uint64_t sub_10057D7F4()
{
  return swift_deallocObject();
}

uint64_t sub_10057D804()
{
  return swift_deallocObject();
}

uint64_t sub_10057D814()
{
  return swift_deallocObject();
}

uint64_t sub_10057D824()
{
  return swift_deallocObject();
}

uint64_t sub_10057D838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_10057D8AC()
{
  return swift_deallocObject();
}

uint64_t sub_10057D8BC()
{
  return swift_deallocObject();
}

unint64_t sub_10057D8CC()
{
  unint64_t result = qword_100811840;
  if (!qword_100811840)
  {
    sub_100014440(&qword_100811838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100811840);
  }
  return result;
}

uint64_t sub_10057DBBC()
{
  uint64_t v1 = sub_100010218(&qword_10080D258);
  __chkstk_darwin(v1 - 8);
  uint64_t v133 = (uint64_t)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v134 = (char *)&v121 - v4;
  __chkstk_darwin(v5);
  uint64_t v132 = (uint64_t)&v121 - v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v121 - v8;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v123 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v125 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v124 = (char *)&v121 - v13;
  uint64_t v147 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v147);
  uint64_t v15 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  NSString v148 = (char **)((char *)&v121 - v17);
  __chkstk_darwin(v18);
  Class v126 = (char *)&v121 - v19;
  __chkstk_darwin(v20);
  uint64_t v146 = (uint64_t)&v121 - v21;
  uint64_t v22 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v22 - 8);
  uint64_t v128 = (uint64_t)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v153 = (uint64_t)&v121 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t)&v121 - v27;
  __chkstk_darwin(v29);
  double v31 = (char *)&v121 - v30;
  uint64_t v154 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v154);
  id v33 = (id *)((char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v34);
  id v140 = (UIImage **)((char *)&v121 - v35);
  __chkstk_darwin(v36);
  id v141 = (id *)((char *)&v121 - v37);
  __chkstk_darwin(v38);
  uint64_t v40 = (UIImage **)((char *)&v121 - v39);
  uint64_t v122 = v0;
  id v41 = (uint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments);
  swift_beginAccess();
  uint64_t v42 = *v41;
  unint64_t v43 = (unint64_t)*v41 >> 62;
  uint64_t v144 = *v41;
  if (v43) {
    goto LABEL_99;
  }
  uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v44; ; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v149 = v10;
    uint64_t v127 = v28;
    uint64_t v150 = v31;
    unint64_t v151 = v40;
    uint64_t v46 = v140;
    id v121 = v9;
    if (!i) {
      break;
    }
    uint64_t v47 = v144;
    if (i < 1)
    {
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      JUMPOUT(0x10057EFD0);
    }
    uint64_t v48 = 0;
    uint64_t v28 = 0;
    NSURLResourceKey v139 = 0;
    unint64_t v143 = v144 & 0xC000000000000001;
    *(void *)&long long v137 = v123 + 56;
    unint64_t v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
    NSString v135 = (void (**)(uint64_t, char *, uint64_t))(v123 + 32);
    NSURLResourceKey v131 = NSURLFileSizeKey;
    uint64_t v130 = (void (**)(uint64_t, uint64_t))(v123 + 8);
    long long v129 = xmmword_1006D6280;
    id v136 = v15;
    id v138 = v33;
    NSString v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))i;
    while (1)
    {
      uint64_t v152 = v48;
      if (v143)
      {
        uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v9 = *(char **)(v47 + 8 * v28 + 32);
        swift_retain();
      }
      ++v28;
      uint64_t v49 = (uint64_t)&v9[OBJC_IVAR____TtC7Journal15AssetAttachment_assetType];
      sub_100168580((uint64_t)&v9[OBJC_IVAR____TtC7Journal15AssetAttachment_assetType], (uint64_t)v46, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v51 = (uint64_t)v46;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          uint64_t v52 = *v46;
          id v53 = UIImageHEICRepresentation(*v46);
          if (v53)
          {
            NSString v54 = v53;
            uint64_t v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v57 = v56;

            uint64_t v40 = v151;
            switch(v57 >> 62)
            {
              case 1uLL:

                sub_100040DD0(v55, v57);
                swift_release();
                LODWORD(v58) = HIDWORD(v55) - v55;
                if (__OFSUB__(HIDWORD(v55), v55)) {
                  goto LABEL_102;
                }
                uint64_t v58 = (int)v58;
LABEL_45:
                uint64_t v10 = v149;
                double v31 = v150;
                goto LABEL_35;
              case 2uLL:
                uint64_t v82 = *(void *)(v55 + 16);
                uint64_t v81 = *(void *)(v55 + 24);

                sub_100040DD0(v55, v57);
                swift_release();
                uint64_t v58 = v81 - v82;
                if (__OFSUB__(v81, v82)) {
                  goto LABEL_103;
                }
                uint64_t v10 = v149;
                goto LABEL_34;
              case 3uLL:

                sub_100040DD0(v55, v57);
                swift_release();
                uint64_t v58 = 0;
                goto LABEL_45;
              default:

                sub_100040DD0(v55, v57);
                swift_release();
                uint64_t v58 = BYTE6(v57);
                goto LABEL_45;
            }
          }
          swift_release();

          uint64_t v58 = 0;
          double v31 = v150;
          uint64_t v40 = v151;
          uint64_t v67 = v152;
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v51 = (uint64_t)v46 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
          goto LABEL_14;
        default:
LABEL_14:
          sub_1001684C0(v51);
          sub_100168580(v49, (uint64_t)v33, type metadata accessor for AssetAttachment.AssetType);
          uint64_t v59 = swift_getEnumCaseMultiPayload();
          uint64_t v60 = (uint64_t)v33;
          switch(v59)
          {
            case 1:

              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v137)(v153, 1, 1, v10);
              break;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v60 = (uint64_t)v33 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
              goto LABEL_17;
            default:
LABEL_17:
              uint64_t v61 = (unsigned int (**)(void, void, void))v148;
              sub_10016851C(v60, (uint64_t)v148);
              sub_100168580((uint64_t)v61, (uint64_t)v15, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                (*v135)(v153, v15, v10);
                uint64_t v62 = 0;
              }
              else
              {
                uint64_t v63 = v153;
                type metadata accessor for Journaling();
                uint64_t v64 = v128;
                sub_1005E6B0C(v128);
                uint64_t v10 = v149;
                swift_bridgeObjectRelease();
                if ((*v145)(v64, 1, v10) == 1)
                {
                  sub_10001457C(v64, (uint64_t *)&unk_100800A60);
                  uint64_t v62 = 1;
                }
                else
                {
                  os_log_t v65 = *v135;
                  uint64_t v66 = v125;
                  (*v135)((uint64_t)v125, (char *)v64, v10);
                  v65(v63, v66, v10);
                  uint64_t v62 = 0;
                }
                uint64_t v40 = v151;
                id v33 = v138;
                uint64_t v46 = v140;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v137)(v153, v62, 1, v10);
              sub_1001684C0((uint64_t)v148);
              break;
          }
          if ((*v145)(v153, 1, v10) == 1)
          {
            sub_10001457C(v153, (uint64_t *)&unk_100800A60);
            swift_release();
            uint64_t v58 = 0;
            double v31 = v150;
            uint64_t v67 = v152;
          }
          else
          {
            sub_100010218(&qword_1008038F0);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v129;
            NSURLResourceKey v69 = v131;
            *(void *)(inited + 32) = v131;
            uint64_t v70 = v69;
            sub_1000F400C(inited);
            swift_setDeallocating();
            type metadata accessor for URLResourceKey(0);
            swift_arrayDestroy();
            uint64_t v71 = (uint64_t)v134;
            NSURLResourceKey v72 = v139;
            URL.resourceValues(forKeys:)();
            if (v72)
            {
              swift_errorRelease();
              swift_bridgeObjectRelease();
              uint64_t v73 = type metadata accessor for URLResourceValues();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v71, 1, 1, v73);
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v73 = type metadata accessor for URLResourceValues();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v71, 0, 1, v73);
            }
            uint64_t v74 = v133;
            NSURLResourceKey v139 = 0;
            sub_10001B220(v71, v133, &qword_10080D258);
            type metadata accessor for URLResourceValues();
            uint64_t v75 = *(void *)(v73 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v74, 1, v73) == 1)
            {
              sub_10001457C(v71, &qword_10080D258);
              sub_10001457C(v74, &qword_10080D258);
              uint64_t v10 = v149;
              (*v130)(v153, v149);
              swift_release();
              uint64_t v58 = 0;
            }
            else
            {
              uint64_t v76 = URLResourceValues.fileSize.getter();
              uint64_t v77 = v71;
              char v79 = v78;
              sub_10001457C(v77, &qword_10080D258);
              (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v73);
              uint64_t v10 = v149;
              (*v130)(v153, v149);
              swift_release();
              if (v79) {
                uint64_t v58 = 0;
              }
              else {
                uint64_t v58 = v76;
              }
            }
LABEL_34:
            double v31 = v150;
            uint64_t v40 = v151;
LABEL_35:
            uint64_t v67 = v152;
            uint64_t v15 = v136;
            id v33 = v138;
            uint64_t v46 = v140;
          }
          break;
      }
      uint64_t v47 = v144;
      BOOL v80 = __OFADD__(v67, v58);
      uint64_t v48 = v67 + v58;
      if (v80) {
        break;
      }
      if (v142 == (void (**)(char *, uint64_t, uint64_t, uint64_t))v28) {
        goto LABEL_47;
      }
    }
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    swift_bridgeObjectRetain();
  }
  uint64_t v48 = 0;
  NSURLResourceKey v139 = 0;
LABEL_47:
  uint64_t v152 = v48;
  swift_bridgeObjectRelease();
  unint64_t v83 = *(void *)(v122 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (v83 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v84 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = (char *)v139;
  if (v84)
  {
    if (v84 < 1) {
      goto LABEL_104;
    }
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    unint64_t v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 & 0xC000000000000001);
    NSString v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56);
    NSString v148 = (char **)(v123 + 48);
    id v140 = (UIImage **)(v123 + 32);
    NSURLResourceKey v139 = NSURLFileSizeKey;
    id v138 = (id *)(v123 + 8);
    long long v137 = xmmword_1006D6280;
    uint64_t v28 = (uint64_t)v121;
    uint64_t v9 = v126;
    unint64_t v143 = v83;
    uint64_t v144 = v84;
    do
    {
      if (v145)
      {
        uint64_t v87 = v86;
        id v33 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v33 = *(id **)(v83 + 8 * v86 + 32);
        uint64_t v87 = v86;
        swift_retain();
      }
      uint64_t v153 = v87 + 1;
      id v88 = (char *)v33 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
      sub_100168580((uint64_t)v33 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v40, type metadata accessor for AssetAttachment.AssetType);
      uint64_t v89 = swift_getEnumCaseMultiPayload();
      uint64_t v90 = (uint64_t)v40;
      switch(v89)
      {
        case 1:
          uint64_t v91 = *v40;
          int v92 = UIImageHEICRepresentation(*v40);
          if (v92)
          {
            id v93 = v92;
            uint64_t v94 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v96 = v95;

            uint64_t v40 = v151;
            switch(v96 >> 62)
            {
              case 1uLL:

                sub_100040DD0(v94, v96);
                swift_release();
                LODWORD(v97) = HIDWORD(v94) - v94;
                if (__OFSUB__(HIDWORD(v94), v94)) {
                  goto LABEL_105;
                }
                uint64_t v97 = (int)v97;
LABEL_91:
                uint64_t v10 = v149;
                double v31 = v150;
                goto LABEL_81;
              case 2uLL:
                uint64_t v118 = *(void *)(v94 + 16);
                uint64_t v119 = *(void *)(v94 + 24);

                sub_100040DD0(v94, v96);
                swift_release();
                uint64_t v97 = v119 - v118;
                if (__OFSUB__(v119, v118)) {
                  goto LABEL_106;
                }
                uint64_t v10 = v149;
                double v31 = v150;
                goto LABEL_80;
              case 3uLL:

                sub_100040DD0(v94, v96);
                swift_release();
                uint64_t v97 = 0;
                goto LABEL_91;
              default:

                sub_100040DD0(v94, v96);
                swift_release();
                uint64_t v97 = BYTE6(v96);
                goto LABEL_91;
            }
          }
          swift_release();

          uint64_t v97 = 0;
          uint64_t v40 = v151;
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v90 = (uint64_t)v40 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
          goto LABEL_60;
        default:
LABEL_60:
          sub_1001684C0(v90);
          uint64_t v98 = (uint64_t)v88;
          NSString v99 = v141;
          sub_100168580(v98, (uint64_t)v141, type metadata accessor for AssetAttachment.AssetType);
          uint64_t v100 = swift_getEnumCaseMultiPayload();
          uint64_t v101 = (uint64_t)v99;
          switch(v100)
          {
            case 1:

              (*v142)(v31, 1, 1, v10);
              break;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v102 = sub_100010218(&qword_10080B3F0);
              uint64_t v101 = (uint64_t)v141 + *(int *)(v102 + 48);
              goto LABEL_63;
            default:
LABEL_63:
              uint64_t v103 = v146;
              sub_10016851C(v101, v146);
              sub_100168580(v103, (uint64_t)v9, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                ((void (*)(char *, char *, uint64_t))*v140)(v31, v9, v10);
                uint64_t v104 = 0;
              }
              else
              {
                type metadata accessor for Journaling();
                uint64_t v105 = v127;
                sub_1005E6B0C(v127);
                uint64_t v10 = v149;
                swift_bridgeObjectRelease();
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v148)(v105, 1, v10) == 1)
                {
                  sub_10001457C(v105, (uint64_t *)&unk_100800A60);
                  uint64_t v104 = 1;
                  double v31 = v150;
                }
                else
                {
                  id v106 = *v140;
                  NSString v107 = v124;
                  ((void (*)(char *, uint64_t, uint64_t))*v140)(v124, v105, v10);
                  double v31 = v150;
                  ((void (*)(char *, char *, uint64_t))v106)(v150, v107, v10);
                  uint64_t v104 = 0;
                }
                uint64_t v40 = v151;
                unint64_t v83 = v143;
              }
              (*v142)(v31, v104, 1, v10);
              sub_1001684C0(v146);
              break;
          }
          if (((unsigned int (*)(char *, uint64_t, uint64_t))*v148)(v31, 1, v10) == 1)
          {
            sub_10001457C((uint64_t)v31, (uint64_t *)&unk_100800A60);
            swift_release();
            uint64_t v97 = 0;
          }
          else
          {
            sub_100010218(&qword_1008038F0);
            uint64_t v108 = swift_initStackObject();
            *(_OWORD *)(v108 + 16) = v137;
            NSURLResourceKey v109 = v139;
            *(void *)(v108 + 32) = v139;
            int v110 = v109;
            sub_1000F400C(v108);
            swift_setDeallocating();
            type metadata accessor for URLResourceKey(0);
            swift_arrayDestroy();
            URL.resourceValues(forKeys:)();
            if (v15)
            {
              swift_errorRelease();
              swift_bridgeObjectRelease();
              uint64_t v111 = type metadata accessor for URLResourceValues();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v28, 1, 1, v111);
              uint64_t v15 = 0;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v111 = type metadata accessor for URLResourceValues();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v28, 0, 1, v111);
            }
            uint64_t v112 = v132;
            sub_10001B220(v28, v132, &qword_10080D258);
            type metadata accessor for URLResourceValues();
            uint64_t v113 = *(void *)(v111 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v112, 1, v111) == 1)
            {
              sub_10001457C(v28, &qword_10080D258);
              sub_10001457C(v112, &qword_10080D258);
              uint64_t v10 = v149;
              double v31 = v150;
              ((void (*)(char *, uint64_t))*v138)(v150, v149);
              swift_release();
              uint64_t v97 = 0;
            }
            else
            {
              uint64_t v114 = URLResourceValues.fileSize.getter();
              char v116 = v115;
              sub_10001457C(v28, &qword_10080D258);
              (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v111);
              uint64_t v10 = v149;
              double v31 = v150;
              ((void (*)(char *, uint64_t))*v138)(v150, v149);
              swift_release();
              BOOL v117 = (v116 & 1) == 0;
              uint64_t v9 = v126;
              if (v117) {
                uint64_t v97 = v114;
              }
              else {
                uint64_t v97 = 0;
              }
            }
LABEL_80:
            uint64_t v40 = v151;
LABEL_81:
            unint64_t v83 = v143;
          }
          break;
      }
      BOOL v80 = __OFADD__(v85, v97);
      v85 += v97;
      uint64_t v86 = v153;
      if (v80) {
        goto LABEL_98;
      }
    }
    while (v144 != v153);
    swift_bridgeObjectRelease();
    if (v85 <= v152) {
      return v152;
    }
    else {
      return v85;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return v152 & ~(v152 >> 63);
  }
}

uint64_t sub_10057F040()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100811850);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100811850);
  if (qword_1007F7D18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10057F108()
{
  type metadata accessor for EntryCRUDActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_10083EA18 = v0;
  return result;
}

id Journaling.EntryViewModel.id.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
}

double (*variable initialization expression of Journaling.EntryViewModel.didChange())(double, double)
{
  return AudioRecordingActivityState.hash(into:);
}

uint64_t sub_10057F170(void *a1, char a2, int a3, void *a4)
{
  uint64_t v5 = v4;
  id v161 = a1;
  id v162 = a4;
  int v163 = a3;
  int v165 = a2 & 1;
  uint64_t v6 = sub_100010218(&qword_100800F90);
  __chkstk_darwin(v6 - 8);
  NSString v142 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100010218(&qword_100811D88);
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  NSURLResourceKey v139 = (uint64_t *)((char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v145 = sub_100010218(&qword_100811D90);
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  unint64_t v143 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v10 - 8);
  id v160 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v159 = (char *)&v133 - v13;
  __chkstk_darwin(v14);
  uint64_t v150 = (char *)&v133 - v15;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  NSString v164 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v149 = (char *)&v133 - v20;
  uint64_t v21 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v21 - 8);
  id v136 = (char *)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  NSString v158 = (char *)&v133 - v24;
  __chkstk_darwin(v25);
  uint64_t v147 = (char *)&v133 - v26;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v133 = (char *)&v133 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v133 - v31;
  *(void *)(v4 + 56) = 0;
  swift_unknownObjectWeakInit();
  id v33 = *(void (**)(void))(v28 + 56);
  uint64_t v146 = v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  v33();
  uint64_t v34 = (void *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_didChange);
  void *v34 = AudioRecordingActivityState.hash(into:);
  v34[1] = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_cancelable) = 0;
  uint64_t v35 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_changeEventPublisher;
  uint64_t v138 = sub_100010218(&qword_1007F8038);
  swift_allocObject();
  *(void *)(v4 + v35) = PassthroughSubject.init()();
  uint64_t v152 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title;
  *(void *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 0;
  uint64_t v153 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
  *(void *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text) = 0;
  uint64_t v151 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts;
  *(void *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts) = 0;
  uint64_t v148 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource) = 5;
  uint64_t v154 = v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleId;
  id v166 = v33;
  uint64_t v167 = v28 + 56;
  v33();
  uint64_t v36 = *(void (**)(void))(v17 + 56);
  uint64_t v155 = v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleDate;
  v36();
  uint64_t v157 = v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleEndDate;
  v36();
  *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset) = _swiftEmptyArrayStorage;
  uint64_t v37 = v16;
  NSString v156 = v36;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v36)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalUpdatedDate, 1, 1, v16);
  UUID.init()();
  uint64_t v135 = v28;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v38 = (char *)(v28 + 32);
  uint64_t v39 = v40;
  id v134 = v32;
  uint64_t v41 = v27;
  v40((char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uniqueID), v32, v27);
  *(unsigned char *)(v5 + 16) = v165;
  id v42 = v161;
  id v43 = [v161 objectID];
  *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_void (*v77)(uint64_t, id) = v43;
  *(unsigned char *)(v5 + 40) = v163;
  id v44 = v162;
  *(void *)(v5 + 24) = v162;
  *(void *)(v5 + 32) = v42;
  id v162 = v44;
  id v161 = v42;
  id v45 = [v161 id];
  if (v45)
  {
    uint64_t v46 = v45;
    uint64_t v47 = v147;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v48 = 0;
    uint64_t v49 = (uint64_t)v47;
  }
  else
  {
    uint64_t v49 = (uint64_t)v147;
    uint64_t v48 = 1;
  }
  long long v137 = v39;
  uint64_t v147 = v38;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v166)(v49, v48, 1, v41);
  uint64_t v50 = v146;
  swift_beginAccess();
  sub_100041190(v49, v50, &qword_100800950);
  swift_endAccess();
  id v51 = [*(id *)(v5 + 32) entryDate];
  if (v51)
  {
    uint64_t v52 = v51;
    id v53 = v164;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v54 = *(void (**)(char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v55 = (uint64_t)v150;
    uint64_t v56 = v37;
    v54(v150, v53, v37);
    uint64_t v57 = v37;
    uint64_t v58 = v156;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v156)(v55, 0, 1, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v55, 1, v56) != 1)
    {
      uint64_t v59 = v149;
      v54(v149, (unsigned char *)v55, v56);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v55 = (uint64_t)v150;
    uint64_t v56 = v37;
    uint64_t v60 = v37;
    uint64_t v58 = v156;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v156)(v150, 1, 1, v60);
  }
  uint64_t v59 = v149;
  Date.init()();
  sub_10001457C(v55, (uint64_t *)&unk_1007FC470);
  NSString v54 = *(void (**)(char *, unsigned char *, uint64_t))(v17 + 32);
LABEL_9:
  v54((char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date), v59, v56);
  id v61 = [*(id *)(v5 + 32) dateSource];
  if (v61)
  {
    uint64_t v62 = v61;
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_t v65 = v64;
  }
  else
  {
    uint64_t v63 = 0;
    os_log_t v65 = (void *)0xE000000000000000;
  }
  v170._countAndFlagsBits = v63;
  v170._object = v65;
  *(unsigned char *)(v5 + v148) = sub_100044F1C(v170);
  id v66 = *(id *)(v5 + 32);
  uint64_t v67 = v164;
  sub_1002941E4(v164);

  v54((char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate), v67, v56);
  id v68 = *(void **)(v5 + 32);
  unsigned __int8 v69 = [v68 flagged];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) = v69;
  id v70 = [v68 prompt];
  if (v70)
  {
    uint64_t v71 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v73 = v72;

    id v70 = sub_100041F24(v71, v73);
    sub_100040DD0(v71, v73);
  }
  uint64_t v74 = (uint64_t)v159;
  uint64_t v75 = *(void **)(v5 + v151);
  *(void *)(v5 + v151) = v70;

  id v76 = [*(id *)(v5 + 32) title];
  if (v76)
  {
    uint64_t v77 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v79 = v78;

    id v76 = sub_100041F24(v77, v79);
    sub_100040DD0(v77, v79);
  }
  BOOL v80 = *(void **)(v5 + v152);
  *(void *)(v5 + v152) = v76;

  id v81 = [*(id *)(v5 + 32) text];
  if (v81)
  {
    uint64_t v82 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v84 = v83;

    id v81 = sub_100041F24(v82, v84);
    sub_100040DD0(v82, v84);
  }
  uint64_t v85 = (uint64_t)v160;
  uint64_t v86 = (uint64_t)v158;
  uint64_t v87 = *(void **)(v5 + v153);
  *(void *)(v5 + v153) = v81;

  id v88 = *(void **)(v5 + 32);
  unsigned __int8 v89 = [v88 showTitle];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = v89;
  id v90 = [v88 bundleId];
  if (v90)
  {
    uint64_t v91 = v90;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v92 = 1;
  }
  uint64_t v93 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v166)(v86, v92, 1, v41);
  uint64_t v94 = v154;
  swift_beginAccess();
  sub_100041190(v86, v94, &qword_100800950);
  swift_endAccess();
  id v95 = [*(id *)(v5 + 32) bundleDate];
  if (v95)
  {
    unint64_t v96 = v95;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v93 = 0;
  }
  uint64_t v97 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v74, v93, 1, v56);
  uint64_t v98 = v155;
  swift_beginAccess();
  sub_100041190(v74, v98, (uint64_t *)&unk_1007FC470);
  swift_endAccess();
  id v99 = [*(id *)(v5 + 32) bundleEndDate];
  if (v99)
  {
    uint64_t v100 = v99;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v97 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v85, v97, 1, v56);
  uint64_t v101 = v157;
  swift_beginAccess();
  sub_100041190(v85, v101, (uint64_t *)&unk_1007FC470);
  swift_endAccess();
  uint64_t v102 = *(void **)(v5 + 32);
  unsigned __int8 v103 = [v102 showPhotoMemoryBanner];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) = v103;
  unsigned __int8 v104 = [v102 flagged];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalBookmarkFromEntryMO) = v104;
  sub_1000E56EC();
  if (v165)
  {
    if (v163) {
      [v102 setIsDraft:1];
    }
    id v105 = [v102 id];
    id v106 = v137;
    if (v105)
    {
      NSString v107 = v105;
      uint64_t v108 = v134;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v109 = (uint64_t)v136;
      v106(v136, v108, v41);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v166)(v109, 0, 1, v41);
      uint64_t v110 = v135;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v109, 1, v41) != 1)
      {
        uint64_t v111 = v133;
        v106(v133, (char *)v109, v41);
        uint64_t v112 = UUID.uuidString.getter();
        sub_10004184C(v112, v113);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v41);
LABEL_38:
        id v123 = [self defaultCenter];
        [v123 addObserver:v5 selector:"contextObjectsDidChangeWithNotification:" name:NSManagedObjectContextObjectsDidChangeNotification object:*(void *)(v5 + 24)];

        uint64_t v169 = *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_changeEventPublisher);
        sub_100010218(&qword_100811D98);
        id v124 = v139;
        sub_10001B284(0, (unint64_t *)&qword_100805AB0);
        swift_retain();
        uint64_t *v124 = static OS_dispatch_queue.main.getter();
        static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
        uint64_t v125 = v140;
        uint64_t v126 = v141;
        (*(void (**)(uint64_t *, void, uint64_t))(v140 + 104))(v124, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v141);
        uint64_t v127 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
        uint64_t v128 = (uint64_t)v142;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v142, 1, 1, v127);
        sub_100014488(&qword_100811DA0, &qword_1007F8038);
        sub_10015D058((unint64_t *)&qword_100803910, (unint64_t *)&qword_100805AB0);
        long long v129 = v143;
        Publisher.collect<A>(_:options:)();
        sub_10001457C(v128, &qword_100800F90);
        (*(void (**)(uint64_t *, uint64_t))(v125 + 8))(v124, v126);
        swift_release();
        swift_allocObject();
        swift_weakInit();
        sub_100014488(&qword_100811DA8, &qword_100811D90);
        uint64_t v130 = v145;
        uint64_t v131 = Publisher<>.sink(receiveValue:)();

        swift_release();
        (*(void (**)(char *, uint64_t))(v144 + 8))(v129, v130);
        *(void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_cancelable) = v131;
        swift_release();
        return v5;
      }
    }
    else
    {
      uint64_t v109 = (uint64_t)v136;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v166)(v136, 1, 1, v41);
    }
    sub_10001457C(v109, &qword_100800950);
    if (qword_1007F7CD8 != -1) {
      swift_once();
    }
    uint64_t v114 = type metadata accessor for Logger();
    sub_100026A54(v114, (uint64_t)qword_100811850);
    swift_retain_n();
    char v115 = Logger.logObject.getter();
    os_log_type_t v116 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v115, v116))
    {
      BOOL v117 = (uint8_t *)swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      *(_DWORD *)BOOL v117 = 136315138;
      uint64_t v169 = v118;
      id v119 = [*(id *)(v5 + 32) debugDescription];
      uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v122 = v121;

      uint64_t v168 = sub_10011EA98(v120, v122, &v169);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v115, v116, "Error getting entry id for in-progress register %s", v117, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    goto LABEL_38;
  }

  return v5;
}

uint64_t sub_100580388(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = &_swiftEmptySetSingleton;
    uint64_t v10 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v1 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v5; ++i)
      {
        uint64_t v7 = swift_bridgeObjectRetain();
        sub_1005804C8(v7);
      }
      swift_bridgeObjectRelease();
      uint64_t v4 = v10;
    }
    if (v4[2])
    {
      uint64_t v8 = type metadata accessor for MainActor();
      __chkstk_darwin(v8);
      v9[2] = v3;
      _OWORD v9[3] = v4;
      sub_1002D7240((uint64_t)sub_1005868E4, (uint64_t)v9);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1005804C8(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_10054DCC4(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_100580624()
{
  uint64_t v1 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v1);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  v4._countAndFlagsBits = 0x6569567972746E45;
  v4._object = (void *)0xEF5B6C65646F4D77;
  String.append(_:)(v4);
  uint64_t v5 = type metadata accessor for UUID();
  sub_1002719CC((unint64_t *)&qword_100801100);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 8285;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v18[15] = *(unsigned char *)(v0 + 16);
  _print_unlocked<A, B>(_:_:)();
  v8._countAndFlagsBits = 0x6E4577654E736920;
  v8._object = (void *)0xED0000203A797274;
  String.append(_:)(v8);
  if (*(unsigned char *)(v0 + 40)) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 40)) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x203A6F6D20;
  v12._object = (void *)0xE500000000000000;
  String.append(_:)(v12);
  id v13 = [*(id *)(v0 + 32) id];
  if (v13)
  {
    uint64_t v14 = v13;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 1;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, v15, 1, v5);
  v16._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t Journaling.EntryViewModel.deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  sub_1000109BC(v0 + 48);
  sub_10001457C(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid, &qword_100800950);

  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uniqueID;
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  uint64_t v4 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  uint64_t v5 = type metadata accessor for Date();
  Swift::String v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate, v5);
  sub_10001457C(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleId, &qword_100800950);
  sub_10001457C(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleDate, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleEndDate, (uint64_t *)&unk_1007FC470);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001457C(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalUpdatedDate, (uint64_t *)&unk_1007FC470);
  return v0;
}

uint64_t Journaling.EntryViewModel.__deallocating_deinit()
{
  Journaling.EntryViewModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100580B18(uint64_t a1)
{
  if (sub_100542088(1, a1) & 1) != 0 || (sub_100542088(4, a1))
  {
    swift_bridgeObjectRetain();
    sub_1000E56EC();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if ((sub_100542088(0, a1) & 1) != 0 && (sub_100582864() & 1) == 0) {
    sub_10026F7C4(0);
  }
  uint64_t v3 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_didChange);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::String v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    v7(v1, a1, ObjectType, v5);
    swift_bridgeObjectRelease_n();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100580C88()
{
  v1[13] = v0;
  sub_100010218(&qword_100800950);
  v1[14] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  if (qword_1007F7CE0 != -1) {
    swift_once();
  }
  v1[21] = qword_10083EA18;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[22] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100580E3C;
  return sub_1000ED0DC();
}

uint64_t sub_100580E3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  return _swift_task_switch(sub_100580F4C, v1, 0);
}

uint64_t sub_100580F4C()
{
  if (qword_1007F7CD8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[23] = sub_100026A54(v1, (uint64_t)qword_100811850);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[13];
  if (v4)
  {
    os_log_type_t v14 = v3;
    uint64_t v6 = swift_slowAlloc();
    Swift::String v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543618;
    Swift::String v8 = *(void **)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
    v0[10] = v8;
    id v9 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::String v7 = v8;
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2048;
    unint64_t v10 = (void *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    if (*v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_release();
    v0[12] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v2, v14, "%{public}@ (finishEditingAndSave) assets.count: %ld", (uint8_t *)v6, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  Swift::String v12 = (void *)swift_task_alloc();
  v0[24] = v12;
  *Swift::String v12 = v0;
  v12[1] = sub_10058121C;
  return sub_1005820C0();
}

uint64_t sub_10058121C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  return _swift_task_switch(sub_10058132C, v1, 0);
}

uint64_t sub_10058132C()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  v0[25] = *(void *)(v0[13] + 24);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  swift_retain();
  BOOL v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *BOOL v4 = v0;
  v4[1] = sub_100581428;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_100581428()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  uint64_t v4 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1005815B8, v1, 0);
}

uint64_t sub_1005815B8()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080BA68 + dword_10080BA68);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  void *v1 = v0;
  v1[1] = sub_10058165C;
  return v3();
}

uint64_t sub_10058165C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v4 = sub_100581A34;
  }
  else {
    uint64_t v4 = sub_100581788;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100581788()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[13] + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_10001B220(v4, v3, &qword_100800950);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(v0[14], &qword_100800950);
    swift_retain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[13];
    if (v7)
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      uint64_t v22 = v10;
      id v11 = [*(id *)(v8 + 32) debugDescription];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      v0[9] = sub_10011EA98(v12, v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error getting entry id for in-progress deregister %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    uint64_t v16 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v17 = v0[15];
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v15, v0[14], v17);
    uint64_t v18 = UUID.uuidString.getter();
    sub_100041698(v18, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100581A34()
{
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_t log = v1;
    uint64_t v3 = (void *)v0[25];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412546;
    v0[11] = v3;
    id v6 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v3;
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v5[1] = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "(finishEditingAndSave) Error saving editing context %@: %@", (uint8_t *)v4, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100581C84(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if ([v1 isDraft] && (objc_msgSend(v1, "isRemovedFromCloud") & 1) == 0) {
    [v1 setIsDraft:0];
  }
  return sub_100585440();
}

id sub_100581CF8(uint64_t a1, char a2)
{
  return [*(id *)(a1 + 32) setIsDraft:a2 & 1];
}

void sub_100581D34()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v5 = Strong;
  id v6 = *(void **)(Strong + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (!v6)
  {
LABEL_9:
    [*(id *)(v5 + 32) setTitle:0];
    sub_10058518C();
    swift_release();
    return;
  }
  id v7 = v6;
  id v8 = [v7 string];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v22[1] = v9;
  void v22[2] = v11;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_100014344();
  uint64_t v12 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {

    goto LABEL_9;
  }
  id v16 = *(id *)(v5 + 32);
  uint64_t v17 = sub_10004243C();
  if (v18 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v20 = v17;
    unint64_t v21 = v18;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100040DBC(v20, v21);
  }
  [v16 setTitle:isa];

  sub_10058518C();
  swift_release();
}

void sub_100581F60()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void **)(Strong + 32);
    [v5 setShowTitle:*(unsigned __int8 *)(Strong + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle)];
    [v5 setIsUploadedToCloud:0];
    id v6 = v5;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    [v6 setUpdatedDate:isa];
    swift_release();
  }
}

uint64_t sub_1005820C0()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  if (qword_1007F7CE0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10083EA18;
  v1[6] = qword_10083EA18;
  return _swift_task_switch(sub_1005821B8, v3, 0);
}

uint64_t sub_1005821B8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  v0[7] = v2;
  uint64_t v3 = v0[5];
  if (v2)
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = v0[4];
    id v6 = v2;
    id v7 = (void *)sub_100020C00(0, v2, 0, 0.0);
    v0[8] = v7;
    uint64_t v8 = swift_allocObject();
    v0[9] = v8;
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v7;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
    swift_retain();
    id v9 = v7;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[10] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100582364;
    return NSManagedObjectContext.perform<A>(schedule:_:)();
  }
  else
  {
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100582364()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1005824F4, v1, 0);
}

uint64_t sub_1005824F4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);

  *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 0;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_100582570(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (a2)
  {
    uint64_t v4 = sub_10004243C();
    if (v5 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v7 = v4;
      unint64_t v8 = v5;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DBC(v7, v8);
    }
    [v2 setText:isa];

    id v9 = [a2 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v10 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v10 >= 0x8000)
    {
      if (qword_1007F7CD8 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100026A54(v11, (uint64_t)qword_100811850);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 134218240;
        swift_beginAccess();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v14 + 12) = 512;
        LOWORD(v10) = 0x7FFF;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "EntryViewModel: reducing textLength stored property value of (%ld) to Int16.max (%hd)", (uint8_t *)v14, 0x10u);
        swift_slowDealloc();
      }
      else
      {

        LOWORD(v10) = 0x7FFF;
      }
      goto LABEL_20;
    }
    if (v10 < -32768)
    {
      __break(1u);
      goto LABEL_23;
    }
    if ((_WORD)v10)
    {
LABEL_20:
      [v2 setTextLength:(__int16)v10];
      goto LABEL_21;
    }
  }
  else
  {
    [*(id *)(a1 + 32) setText:0];
  }
  unint64_t v15 = (unint64_t)sub_1000E7370();
  if (v15 >> 62)
  {
LABEL_23:
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    goto LABEL_15;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  swift_bridgeObjectRelease();
  if (v16 || (id v17 = [v2 title]) == 0)
  {
    LOWORD(v10) = 0;
    goto LABEL_20;
  }
  unint64_t v18 = v17;
  uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v21 = v20;

  sub_100040DD0(v19, v21);
  [v2 setTextLength:1];
LABEL_21:
  sub_10058518C();
}

uint64_t sub_100582864()
{
  uint64_t v1 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged)) {
    return 0;
  }
  uint64_t v3 = v0;
  sub_100010218(&qword_1007FC120);
  NSManagedObjectContext.performAndWait<A>(_:)();
  uint64_t v4 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
  unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  id v6 = v5;
  uint64_t v7 = (void *)sub_100020C00(0, v5, 0, 0.0);

  id v8 = 0;
  if (v15 >> 60 != 15)
  {
    sub_100040D64(v14, v15);
    id v8 = sub_100041F24(v14, v15);
    sub_100040DBC(v14, v15);
  }
  id v9 = (void *)sub_100020C00(0, v8, 0, 0.0);

  if (v9)
  {
    if (v7)
    {
      sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
      id v10 = v7;
      id v11 = v9;
      char v12 = static NSObject.== infix(_:_:)();

      if (v12)
      {

LABEL_10:
        sub_100040DBC(v14, v15);
        return 0;
      }
    }
    else
    {
      id v11 = v9;
    }
    if (*(void *)(v3 + v4))
    {
      if ((objc_msgSend(v11, "isEqualToAttributedString:") & 1) == 0) {
        *(unsigned char *)(v3 + v1) = 1;
      }
    }
  }
  else if (!v7)
  {
    goto LABEL_10;
  }
  os_log_type_t v13 = *(void **)(v3 + v4);
  *(void *)(v3 + v4) = v9;

  sub_100040DBC(v14, v15);
  *(unsigned char *)(v3 + v1) = 0;
  return 1;
}

void sub_100582A40(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*(id *)(a1 + 32) text];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_100582AB8(void *a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  id v4 = v3;
  uint64_t v5 = (void *)sub_100020C00(0, v3, 0, 0.0);

  unint64_t v6 = (void *)sub_100020C00(0, a1, 0, 0.0);
  unint64_t v7 = v6;
  if (!v5)
  {
    if (!v6)
    {
      char v10 = 0;
      return v10 & 1;
    }

    goto LABEL_7;
  }
  if (!v6)
  {

LABEL_7:
    char v10 = 1;
    return v10 & 1;
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
  id v8 = v5;
  char v9 = static NSObject.== infix(_:_:)();

  char v10 = v9 ^ 1;
  return v10 & 1;
}

uint64_t sub_100582B98()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 32);
    Class isa = *(Class *)(result + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
    if (isa)
    {
      id v3 = v1;
      id v4 = isa;
      uint64_t v5 = sub_10004243C();
      unint64_t v7 = v6;

      if (v7 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100040DBC(v5, v7);
      }
    }
    else
    {
      id v8 = v1;
    }
    [v1 setPrompt:isa];

    sub_10058518C();
    return swift_release();
  }
  return result;
}

uint64_t sub_100582C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 112) = a6;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = *(void *)(v7 - 8);
  *(void *)(v6 + 56) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  *(void *)(v6 + 64) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v6 + 72) = v9;
  *(void *)(v6 + 80) = *(void *)(v9 + 64);
  *(void *)(v6 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_100582DB0, 0, 0);
}

uint64_t sub_100582DB0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 56);
  char v7 = *(unsigned char *)(v0 + 112);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 96) = v10;
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v2, v4);
  *(unsigned char *)(v10 + v9 + v1) = v7;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v15, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v14);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100582F64;
  uint64_t v12 = *(void *)(v0 + 56);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v11, v12, sub_100586E1C, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_100582F64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1005830D8, 0, 0);
}

uint64_t sub_1005830D8()
{
  *(void *)(v0 + 16) = sub_1000F678C((uint64_t)&off_100794F98);
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100583184()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v26[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v26[-v9];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v12 = result;
  uint64_t v27 = v0;
  id v13 = *(id *)(result + 32);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v13 setEntryDate:isa];

  id v15 = *(id *)(v12 + 32);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setDateSource:v16];

  sub_10058518C();
  id v17 = [*(id *)(v12 + 32) entryDate];
  if (!v17)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_6;
  }
  unint64_t v18 = v17;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
  v19(v3, v7, v4);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    Date.init()();
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_1007FC470);
    goto LABEL_7;
  }
  v19(v10, v3, v4);
LABEL_7:
  uint64_t v20 = v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 40))(v20, v10, v4);
  swift_endAccess();
  id v21 = [*(id *)(v12 + 32) dateSource];
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = (void *)0xE000000000000000;
  }
  v28._countAndFlagsBits = v23;
  v28._object = v25;
  *(unsigned char *)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource) = sub_100044F1C(v28);
  return swift_release();
}

uint64_t sub_100583590(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = v2;
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = *(void *)(v4 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  *(void *)(v3 + 64) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v3 + 72) = v6;
  *(void *)(v3 + 80) = *(void *)(v6 + 64);
  *(void *)(v3 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_1005836B8, 0, 0);
}

uint64_t sub_1005836B8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 56);
  char v6 = *(unsigned char *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v7, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 96) = v10;
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v2, v4);
  *(unsigned char *)(v10 + v9 + v1) = v6;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v15, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v14);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10058386C;
  uint64_t v12 = *(void *)(v0 + 56);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v11, v12, sub_100586C88, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_10058386C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1005839E0, 0, 0);
}

uint64_t sub_1005839E0()
{
  *(void *)(v0 + 16) = sub_1000F678C((uint64_t)&off_100791948);
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100583A8C()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v30[-v9];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v12 = result;
  uint64_t v31 = v0;
  id v13 = *(id *)(result + 32);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v13 setEntryDate:isa];

  id v15 = *(id *)(v12 + 32);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setDateSource:v16];

  id v17 = *(id *)(v12 + 32);
  sub_10030DC34();

  sub_10058518C();
  id v18 = [*(id *)(v12 + 32) entryDate];
  if (!v18)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_6;
  }
  uint64_t v19 = v18;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
  v20(v3, v7, v4);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    Date.init()();
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_1007FC470);
    goto LABEL_7;
  }
  v20(v10, v3, v4);
LABEL_7:
  uint64_t v21 = v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  swift_beginAccess();
  uint64_t v22 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 40);
  v22(v21, v10, v4);
  swift_endAccess();
  id v23 = [*(id *)(v12 + 32) dateSource];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = (void *)0xE000000000000000;
  }
  v32._countAndFlagsBits = v25;
  v32._object = v27;
  *(unsigned char *)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource) = sub_100044F1C(v32);
  id v28 = *(id *)(v12 + 32);
  sub_1002941E4(v7);

  uint64_t v29 = v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate;
  swift_beginAccess();
  v22(v29, v7, v4);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100583F04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v6 = *(id *)(Strong + 32);
    swift_release();
    id v7 = [v6 createdDate];

    if (v7)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
    }
    else
    {
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    }
    return sub_10002C4EC((uint64_t)v4, a1, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    uint64_t v9 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1005840C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v4[18] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[19] = v7;
  v4[20] = *(void *)(v7 + 64);
  v4[21] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v4[22] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[23] = v9;
  v4[24] = *(void *)(v9 + 64);
  v4[25] = swift_task_alloc();
  uint64_t v10 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  v4[26] = v10;
  v4[27] = *(void *)(v10 + 64);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  if (qword_1007F7CE0 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10083EA18;
  v4[32] = qword_10083EA18;
  return _swift_task_switch(sub_100584340, v11, 0);
}

uint64_t sub_100584340()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v27 = v0[26];
  uint64_t v23 = v0[25];
  uint64_t v25 = v0[24];
  uint64_t v32 = v0[23];
  uint64_t v20 = v0[22];
  uint64_t v24 = v0[21];
  uint64_t v26 = v0[20];
  uint64_t v33 = v0[18];
  uint64_t v30 = v0[17];
  uint64_t v31 = v0[19];
  uint64_t v5 = v0[14];
  uint64_t v28 = v0[16];
  uint64_t v29 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v19 = v0[13];
  uint64_t v21 = *(void (**)(uint64_t))(v32 + 16);
  uint64_t v22 = v0[11];
  v21(v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v2, 0, 1, v20);
  sub_10002C4EC(v2, v1, &qword_100800950);
  uint64_t v7 = v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleId;
  swift_beginAccess();
  sub_100041190(v1, v7, &qword_100800950);
  swift_endAccess();
  id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  v18(v3, v6, v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v3, 0, 1, v33);
  sub_10002C4EC(v3, v4, (uint64_t *)&unk_1007FC470);
  uint64_t v8 = v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleDate;
  swift_beginAccess();
  sub_100041190(v4, v8, (uint64_t *)&unk_1007FC470);
  swift_endAccess();
  uint64_t v9 = v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleEndDate;
  swift_beginAccess();
  sub_100475AE4(v19, v9);
  swift_endAccess();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  ((void (*)(uint64_t, uint64_t, uint64_t))v21)(v23, v22, v20);
  v18(v24, v6, v33);
  sub_10001B220(v19, v3, (uint64_t *)&unk_1007FC470);
  unint64_t v11 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v12 = (v25 + *(unsigned __int8 *)(v31 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v13 = (v26 + *(unsigned __int8 *)(v27 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v14 = swift_allocObject();
  v0[33] = v14;
  *(void *)(v14 + 16) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v14 + v11, v23, v20);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 32))(v14 + v12, v24, v33);
  sub_10002C4EC(v3, v14 + v13, (uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v30, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v29);
  id v15 = (void *)swift_task_alloc();
  v0[34] = v15;
  void *v15 = v0;
  v15[1] = sub_100584768;
  uint64_t v16 = v0[17];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v15, v16, sub_100586B48, v14, (char *)&type metadata for () + 8);
}

uint64_t sub_100584768()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  uint64_t v4 = *(void *)(*(void *)v0 + 120);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1005848F8, v1, 0);
}

uint64_t sub_1005848F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1005849A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    id v10 = *(id *)(Strong + 32);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v10 setBundleId:isa];

    id v12 = *(id *)(v9 + 32);
    Class v13 = Date._bridgeToObjectiveC()().super.isa;
    [v12 setBundleDate:v13];

    uint64_t v14 = *(void **)(v9 + 32);
    sub_10001B220(a4, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15);
    id v17 = v14;
    Class v18 = 0;
    if (v12 != 1)
    {
      Class v18 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
    }
    [v17 setBundleEndDate:v18];
    swift_release();
  }
}

id sub_100584BA0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  [v1 setShowPhotoMemoryBanner:*(unsigned __int8 *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner)];

  return [v1 setIsUploadedToCloud:0];
}

uint64_t sub_100584BFC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    [*(id *)(result + 32) setFlagged:*(unsigned __int8 *)(result + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked)];
    sub_10058518C();
    uint64_t v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_didChange);
    uint64_t v3 = swift_retain();
    v2(v3);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100584CA4(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked);
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) = result;
  if (v2 != (result & 1))
  {
    uint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100586914;
    *(void *)(v5 + 24) = v4;
    v7[4] = sub_10001AC84;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1003F44E4;
    _OWORD v7[3] = &unk_1007B5B10;
    uint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
    [v3 performBlockAndWait:v6];
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      v7[0] = sub_1000F678C((uint64_t)&off_100793C20);
      PassthroughSubject.send(_:)();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

void *sub_100584E48()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62) {
    goto LABEL_23;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v3)
  {
LABEL_19:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  while (1)
  {
    uint64_t v4 = (v2 & 0xC000000000000001) != 0
       ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(v2 + 32);
    uint64_t v5 = v4;
    if ((*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x200))()) {
      break;
    }

    if (v3 != 1)
    {
      uint64_t v7 = 5;
      while (1)
      {
        uint64_t v8 = (v2 & 0xC000000000000001) != 0
           ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v2 + 8 * v7);
        uint64_t v5 = v8;
        uint64_t v9 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        if ((*(uint64_t (**)(void))((swift_isaMask & *v8) + 0x200))()) {
          goto LABEL_6;
        }

        ++v7;
        if (v9 == v3) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain_n();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (v3) {
        continue;
      }
    }
    goto LABEL_19;
  }
LABEL_6:
  swift_bridgeObjectRelease_n();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t result = v5;
  }
  else {
    uint64_t result = 0;
  }
  if (!result)
  {

    return 0;
  }
  return result;
}

uint64_t sub_100585038()
{
  uint64_t v1 = sub_1000F5E04((uint64_t)&off_100791920);
  unint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v6 = 0;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_15;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      if (sub_1005419E4(*((unsigned char *)v8 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type), (uint64_t)v1))
      {
      }
      else
      {
        uint64_t v10 = sub_10057DBBC();

        BOOL v11 = __OFADD__(v6, v10);
        v6 += v10;
        if (v11)
        {
          __break(1u);
          goto LABEL_14;
        }
      }
      if (v4 == ++v7) {
        goto LABEL_16;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_10058518C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v22[-v9];
  *(void *)&double v12 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v14 = &v22[-v13];
  uint64_t v15 = *(void **)(v0 + 32);
  [v15 setIsUploadedToCloud:0 v12];
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    uint64_t v16 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalUpdatedDate;
    swift_beginAccess();
    sub_10001B220(v16, (uint64_t)v14, (uint64_t *)&unk_1007FC470);
    int v17 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1);
    sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
    if (v17 == 1)
    {
      id v18 = [v15 updatedDate];
      if (v18)
      {
        uint64_t v19 = v18;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v20 = 1;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, v20, 1, v1);
      sub_10002C4EC((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
      swift_beginAccess();
      sub_100041190((uint64_t)v7, v16, (uint64_t *)&unk_1007FC470);
      swift_endAccess();
    }
  }
  static Date.now.getter();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  [v15 setUpdatedDate:isa];
}

uint64_t sub_100585440()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v35 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v19 = (char *)&v33 - v18;
  id v20 = [*(id *)(v0 + 32) id:v17];
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  uint64_t v21 = v20;
  uint64_t v33 = v8;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v22(v11, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    uint64_t v26 = &qword_100800950;
    uint64_t v27 = (uint64_t)v11;
    return sub_10001457C(v27, v26);
  }
  v22(v19, v11, v12);
  uint64_t v23 = v0;
  uint64_t v24 = v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalUpdatedDate;
  swift_beginAccess();
  sub_10001B220(v24, (uint64_t)v3, (uint64_t *)&unk_1007FC470);
  uint64_t v25 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v3, 1, v4) != 1)
  {
    uint64_t v29 = v33;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v33, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v19, v12);
    uint64_t v30 = (uint64_t)v34;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v34, v29, v4);
    id v31 = objc_allocWithZone((Class)_s16StreakEventAssetCMa(0));
    uint64_t v32 = sub_10063CCA0(2u, v15, v30);

    sub_10063E5C0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  uint64_t v26 = (uint64_t *)&unk_1007FC470;
  uint64_t v27 = (uint64_t)v3;
  return sub_10001457C(v27, v26);
}

id sub_100585890(uint64_t a1)
{
  return [*(id *)(a1 + 32) setIsRemovedFromCloud:1];
}

uint64_t sub_1005858C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1005858E0(a1, a2);
}

uint64_t sub_1005858E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 32);
  if (([v3 isDeleted] & 1) != 0
    || ([v3 isRemovedFromCloud] & 1) != 0)
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t result = (uint64_t)[v3 isFullyRemoved];
  }
  *a2 = result;
  return result;
}

uint64_t sub_100585958@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Journaling.EntryViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_100585998@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
  *a1 = v2;
  return v2;
}

uint64_t sub_1005859B0(uint64_t *a1, uint64_t *a2)
{
  return _s7Journal10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t _s7Journal10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = type metadata accessor for Date();
  uint64_t v72 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v70 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unsigned __int8 v69 = (char *)&v67 - v6;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v73 = (unint64_t *)((char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FEB40);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v74 = a1;
  uint64_t v20 = a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_10001B220(v20, (uint64_t)v19, &qword_100800950);
  uint64_t v75 = a2;
  uint64_t v21 = a2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  uint64_t v22 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_10001B220((uint64_t)v19, (uint64_t)v13, &qword_100800950);
  sub_10001B220(v21, v22, &qword_100800950);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v13, 1, v7) != 1)
  {
    sub_10001B220((uint64_t)v13, (uint64_t)v16, &qword_100800950);
    if (v23(v22, 1, v7) != 1)
    {
      uint64_t v24 = v73;
      (*(void (**)(unint64_t *, uint64_t, uint64_t))(v8 + 32))(v73, v22, v7);
      sub_1002719CC((unint64_t *)&qword_1007FEB50);
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v26 = *(void (**)(unint64_t *, uint64_t))(v8 + 8);
      v26(v24, v7);
      sub_10001457C((uint64_t)v19, &qword_100800950);
      v26((unint64_t *)v16, v7);
      sub_10001457C((uint64_t)v13, &qword_100800950);
      if ((v25 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    sub_10001457C((uint64_t)v19, &qword_100800950);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
LABEL_6:
    sub_10001457C((uint64_t)v13, (uint64_t *)&unk_1007FEB40);
    goto LABEL_15;
  }
  sub_10001457C((uint64_t)v19, &qword_100800950);
  if (v23(v22, 1, v7) != 1) {
    goto LABEL_6;
  }
  sub_10001457C((uint64_t)v13, &qword_100800950);
LABEL_8:
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  uint64_t v27 = v74;
  uint64_t v28 = v75;
  if (static NSObject.== infix(_:_:)())
  {
    uint64_t v29 = *(void **)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
    uint64_t v30 = *(void **)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
    if (v29)
    {
      uint64_t v31 = v72;
      if (!v30) {
        goto LABEL_15;
      }
      sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
      id v32 = v30;
      id v33 = v29;
      char v34 = static NSObject.== infix(_:_:)();

      if ((v34 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v31 = v72;
      if (v30) {
        goto LABEL_15;
      }
    }
    if (*(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) == *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle))
    {
      uint64_t v37 = *(void **)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
      uint64_t v38 = *(void **)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
      if (v37)
      {
        if (!v38) {
          goto LABEL_15;
        }
        sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
        id v39 = v38;
        id v40 = v37;
        char v41 = static NSObject.== infix(_:_:)();

        if ((v41 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v38)
      {
        goto LABEL_15;
      }
      id v42 = *(void **)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
      id v43 = *(void **)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
      if (v42)
      {
        if (!v43) {
          goto LABEL_15;
        }
        sub_10001B284(0, (unint64_t *)&qword_1007FBCA0);
        id v44 = v43;
        id v45 = v42;
        char v46 = static NSObject.== infix(_:_:)();

        if ((v46 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v43)
      {
        goto LABEL_15;
      }
      if (*(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) == *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner))
      {
        uint64_t v47 = (unint64_t *)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
        swift_beginAccess();
        unint64_t v48 = *v47;
        uint64_t v49 = (uint64_t *)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
        swift_beginAccess();
        uint64_t v50 = *v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v51 = sub_1004B7D78(v48, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v51)
        {
          id v68 = v49;
          unint64_t v73 = v47;
          uint64_t v52 = v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
          swift_beginAccess();
          id v53 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
          NSString v54 = v69;
          uint64_t v55 = v52;
          uint64_t v56 = v71;
          v53(v69, v55, v71);
          uint64_t v57 = v56;
          uint64_t v58 = v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
          swift_beginAccess();
          uint64_t v59 = v70;
          v53(v70, v58, v57);
          LOBYTE(v58) = static Date.== infix(_:_:)();
          uint64_t v62 = *(void (**)(char *, uint64_t))(v31 + 8);
          uint64_t v61 = v31 + 8;
          uint64_t v60 = v62;
          v62(v59, v57);
          v62(v54, v57);
          if (v58)
          {
            uint64_t v72 = v61;
            uint64_t v63 = v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate;
            swift_beginAccess();
            v53(v54, v63, v57);
            uint64_t v64 = v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate;
            swift_beginAccess();
            v53(v59, v64, v57);
            LOBYTE(v64) = static Date.== infix(_:_:)();
            v60(v59, v57);
            v60(v54, v57);
            if ((v64 & 1) != 0
              && *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) == *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked)
              && *(unsigned __int8 *)(v27
                                    + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalBookmarkFromEntryMO) == *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_originalBookmarkFromEntryMO))
            {
              unint64_t v65 = *v73;
              uint64_t v66 = *v68;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unsigned __int8 v35 = sub_1004B7D78(v65, v66);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v35 & 1;
            }
          }
        }
      }
    }
  }
LABEL_15:
  unsigned __int8 v35 = 0;
  return v35 & 1;
}

uint64_t sub_100586244()
{
  return sub_10015D058((unint64_t *)&qword_1007FD600, (unint64_t *)&qword_100800A40);
}

uint64_t type metadata accessor for EntryCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_1005862AC()
{
  return type metadata accessor for Journaling.EntryViewModel();
}

uint64_t type metadata accessor for Journaling.EntryViewModel()
{
  uint64_t result = qword_100811940;
  if (!qword_100811940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100586300()
{
  sub_100586508(319, (unint64_t *)&qword_1007FEA40, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
      {
        sub_100586508(319, (unint64_t *)&qword_1007FAAE0, (void (*)(uint64_t))&type metadata accessor for Date);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_100586508(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s14EntryViewModelC4ModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100586628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC4ModeOMa()
{
  return &_s14EntryViewModelC4ModeON;
}

uint64_t _s14EntryViewModelC15EntryPropertiesOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14EntryViewModelC15EntryPropertiesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005867BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC15EntryPropertiesOMa()
{
  return &_s14EntryViewModelC15EntryPropertiesON;
}

unint64_t sub_1005867F8()
{
  unint64_t result = qword_100811D78;
  if (!qword_100811D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100811D78);
  }
  return result;
}

unint64_t sub_100586850()
{
  unint64_t result = qword_100811D80;
  if (!qword_100811D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100811D80);
  }
  return result;
}

uint64_t sub_1005868A4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005868DC(uint64_t *a1)
{
  return sub_100580388(a1);
}

uint64_t sub_1005868E4()
{
  return sub_100580B18(*(void *)(v0 + 24));
}

uint64_t sub_100586914()
{
  return sub_100584BFC();
}

uint64_t sub_10058691C()
{
  return swift_deallocObject();
}

uint64_t sub_10058692C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10058693C()
{
  return swift_release();
}

uint64_t sub_100586944()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v11(v0 + v7, v5);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v10, 1, v5)) {
    v11(v0 + v10, v5);
  }

  return swift_deallocObject();
}

void sub_100586B48()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  sub_1005849A8(*(void *)(v0 + 16), v0 + v2, v0 + v5, v0 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t sub_100586C88()
{
  return sub_100586E48((uint64_t (*)(void, unint64_t, void))sub_100583A8C);
}

void sub_100586CB4(uint64_t *a1@<X8>)
{
  sub_100582A40(v1, a1);
}

uint64_t sub_100586CD0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100586D10()
{
  sub_100582570(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100586D2C()
{
  return sub_100581C84(v0);
}

uint64_t sub_100586D4C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100586E1C()
{
  return sub_100586E48((uint64_t (*)(void, unint64_t, void))sub_100583184);
}

uint64_t sub_100586E48(uint64_t (*a1)(void, unint64_t, void))
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a1(*(void *)(v1 + 16), v1 + v4, *(unsigned __int8 *)(v1 + v4 + *(void *)(v3 + 64)));
}

void sub_100586EEC(void *a1)
{
}

void sub_100586F14(void *a1)
{
}

void sub_100586F3C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)(v4 + *a2);
  *(void *)(v4 + *a2) = a1;
  id v8 = a1;

  uint64_t v9 = *(void **)(v4 + 24);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  v12[4] = a3;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10017D530;
  v12[3] = a4;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  [v9 performBlock:v11];
  _Block_release(v11);
}

char *sub_100587060(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView;
  id v10 = objc_allocWithZone((Class)UIView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for ThirdPartyMediaShadowEffectView();
  uint64_t v12 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView];
  uint64_t v15 = v12;
  id v16 = v14;
  [v15 bounds];
  [v16 setFrame:];

  uint64_t v17 = *(void **)&v12[v13];
  [v17 setAutoresizingMask:18];
  [v17 setClipsToBounds:1];
  [v15 addSubview:v17];

  return v15;
}

void sub_1005872EC(double a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ThirdPartyMediaShadowEffectView.Layer();
  [super setCornerRadius:a1];
  if ([v1 delegate])
  {
    type metadata accessor for ThirdPartyMediaShadowEffectView();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      id v4 = *(id *)(v3 + OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView);
      swift_unknownObjectRelease();
      id v5 = [v4 layer];

      if (v5)
      {
        [v1 cornerRadius];
        [v5 setCornerRadius:];
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1005874B4()
{
  if ([v0 delegate])
  {
    type metadata accessor for ThirdPartyMediaShadowEffectView();
    uint64_t v1 = swift_dynamicCastClass();
    if (v1)
    {
      id v2 = *(id *)(v1 + OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView);
      swift_unknownObjectRelease();
      id v4 = [v2 layer];

      if (v4)
      {
        id v3 = [v0 cornerCurve];
        [v4 setCornerCurve:v3];
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_100587698(long long *a1)
{
  long long v8 = a1[1];
  long long v9 = *a1;
  long long v7 = a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for ThirdPartyMediaShadowEffectView.Layer();
  v10[0] = v9;
  v10[1] = v8;
  _OWORD v10[2] = v7;
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  [super setCornerRadii:v10];
  if ([v1 delegate])
  {
    type metadata accessor for ThirdPartyMediaShadowEffectView();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4)
    {
      id v5 = *(id *)(v4 + OBJC_IVAR____TtC7Journal31ThirdPartyMediaShadowEffectView_contentView);
      swift_unknownObjectRelease();
      id v6 = [v5 layer];

      if (v6)
      {
        [v1 cornerRadii];
        [v6 setCornerRadii:v10];
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

id sub_100587900()
{
  return sub_100587934(0, type metadata accessor for ThirdPartyMediaShadowEffectView.Layer);
}

id sub_10058791C(uint64_t a1)
{
  return sub_100587934(a1, type metadata accessor for ThirdPartyMediaShadowEffectView);
}

id sub_100587934(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for ThirdPartyMediaShadowEffectView()
{
  return self;
}

uint64_t type metadata accessor for ThirdPartyMediaShadowEffectView.Layer()
{
  return self;
}

uint64_t sub_1005879C4()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setNumberStyle:1];
  id v1 = [v0 stringForObjectValue:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  if (v1)
  {
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {

    return 0;
  }
  return v2;
}

uint64_t sub_100587A94()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setNumberStyle:1];
  id v1 = [v0 stringForObjectValue:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  if (v1)
  {
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {

    return 0;
  }
  return v2;
}

uint64_t sub_100587B6C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_10058CC40;
  *(void *)(v2 + 24) = v0;
  v6[4] = sub_10001B3DC;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1003F44E4;
  v6[3] = &unk_1007B5DA0;
  uint64_t v3 = _Block_copy(v6);
  id v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  [v4 performBlockAndWait:v3];

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100587CC0()
{
  id v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_10058CBF4;
  *(void *)(v2 + 24) = v0;
  v6[4] = sub_10001AC84;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1003F44E4;
  v6[3] = &unk_1007B5CD8;
  uint64_t v3 = _Block_copy(v6);
  id v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  [v4 performBlockAndWait:v3];

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

id sub_100587E08(uint64_t a1)
{
  uint64_t isEscapingClosureAtFileLocation = a1;
  id v2 = *(id *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  sub_100438DFC(v2, 0x636E795365766173, 0xEA00000000002928, 0x6E6F6320706D6574, 0xEC00000074786574);

  v17[0] = 0;
  if (![v2 save:v17])
  {
    id v4 = v17[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6DB8 == -1) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  id v3 = v17[0];
  while (1)
  {
    id result = [v2 parentContext];
    if (!result) {
      break;
    }
    id v2 = result;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = isEscapingClosureAtFileLocation;
    *(void *)(v13 + 24) = v2;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = sub_10058CC28;
    void v14[3] = v13;
    v17[4] = sub_10001B3DC;
    v17[5] = v14;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = (id)1107296256;
    v17[2] = sub_1003F44E4;
    v17[3] = &unk_1007B5E18;
    uint64_t v15 = _Block_copy(v17);
    swift_retain();
    id v16 = v2;
    swift_retain();
    swift_release();
    [v16 performBlockAndWait:v15];

    _Block_release(v15);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_11:
    swift_once();
LABEL_4:
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_100807C00);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      long long v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      v17[0] = v2;
      id v10 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v9 = v2;
      swift_release_n();
      *(_WORD *)(v8 + 12) = 2112;
      swift_errorRetain();
      uint64_t v11 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v17[0] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v9[1] = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "(saveSync) Unable to save context %@ with error: %@", (uint8_t *)v8, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return result;
}

id sub_100588238(uint64_t a1)
{
  uint64_t isEscapingClosureAtFileLocation = a1;
  id v2 = *(id *)(a1 + 24);
  sub_100438DFC(v2, 0x636E795365766173, 0xEA00000000002928, 0x6E6F6320706D6574, 0xEC00000074786574);

  v17[0] = 0;
  if (![v2 save:v17])
  {
    id v4 = v17[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6DB8 == -1) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  id v3 = v17[0];
  while (1)
  {
    id result = [v2 parentContext];
    if (!result) {
      break;
    }
    id v2 = result;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = isEscapingClosureAtFileLocation;
    *(void *)(v13 + 24) = v2;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = sub_10058CC28;
    void v14[3] = v13;
    v17[4] = sub_10001B3DC;
    v17[5] = v14;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = (id)1107296256;
    v17[2] = sub_1003F44E4;
    v17[3] = &unk_1007B5D50;
    uint64_t v15 = _Block_copy(v17);
    swift_retain();
    id v16 = v2;
    swift_retain();
    swift_release();
    [v16 performBlockAndWait:v15];

    _Block_release(v15);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_11:
    swift_once();
LABEL_4:
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_100807C00);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      long long v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      v17[0] = v2;
      id v10 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v9 = v2;
      swift_release_n();
      *(_WORD *)(v8 + 12) = 2112;
      swift_errorRetain();
      uint64_t v11 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v17[0] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v9[1] = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "(saveSync) Unable to save context %@ with error: %@", (uint8_t *)v8, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return result;
}

char *sub_10058865C(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal15AdminComposerVC_infoLabel;
  id v4 = objc_allocWithZone((Class)UILabel);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal15AdminComposerVC_textView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UITextView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal15AdminComposerVC_assetsTable;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UITableView) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal15AdminComposerVC_toolbar;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UIToolbar) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal15AdminComposerVC_undoButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal15AdminComposerVC_redoButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal15AdminComposerVC_model] = a1;
  swift_retain();

  v135.receiver = v5;
  v135.super_class = (Class)type metadata accessor for AdminComposerVC();
  long long v9 = [(char *)[v135 initWithNibName:0 bundle:0]];
  id result = (char *)[v9 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v11 = result;
  uint64_t v132 = OBJC_IVAR____TtC7Journal15AdminComposerVC_infoLabel;
  [result addSubview:*(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_infoLabel]];

  id result = (char *)[v9 view];
  if (!result)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v12 = result;
  uint64_t v13 = OBJC_IVAR____TtC7Journal15AdminComposerVC_textView;
  [result addSubview:*(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_textView]];

  id result = (char *)[v9 view];
  if (!result)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v14 = result;
  uint64_t v131 = OBJC_IVAR____TtC7Journal15AdminComposerVC_assetsTable;
  [result addSubview:*(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_assetsTable]];

  id result = (char *)[v9 view];
  if (!result)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v15 = result;
  uint64_t v16 = OBJC_IVAR____TtC7Journal15AdminComposerVC_toolbar;
  [result addSubview:*(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_toolbar]];

  id v17 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:21 target:v9 action:"doUndo"];
  uint64_t v18 = OBJC_IVAR____TtC7Journal15AdminComposerVC_undoButton;
  objc_super v19 = *(void **)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_undoButton];
  *(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_undoButton] = v17;

  id v20 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:22 target:v9 action:"doRedo"];
  uint64_t v21 = OBJC_IVAR____TtC7Journal15AdminComposerVC_redoButton;
  uint64_t v22 = *(void **)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_redoButton];
  *(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_redoButton] = v20;

  id v23 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:3 target:v9 action:"doSave"];
  uint64_t v24 = OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton;
  char v25 = *(void **)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton];
  *(void *)&v9[OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton] = v23;

  uint64_t v26 = *(void **)&v9[v16];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  id result = (char *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_1006D6D20;
  uint64_t v27 = *(void **)&v9[v18];
  if (!v27)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  *((void *)result + 4) = v27;
  uint64_t v28 = *(void **)&v9[v21];
  if (!v28)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  *((void *)result + 5) = v28;
  uint64_t v130 = v24;
  uint64_t v29 = *(void **)&v9[v24];
  if (!v29)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  *((void *)result + 6) = v29;
  unsigned __int8 v134 = result;
  specialized Array._endMutation()();
  sub_10058CBB4();
  id v30 = v26;
  id v31 = v27;
  id v32 = v28;
  id v33 = v29;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 setItems:isa];

  id v35 = *(id *)&v9[v16];
  id v36 = sub_1001DDF20(0, 0.0);

  id v37 = *(id *)&v9[v16];
  id v38 = [v37 superview];
  id v39 = &stru_1007D7000;
  uint64_t v133 = v13;
  if (v38)
  {
    id v40 = v38;
    [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v37 trailingAnchor];
    id v42 = [v40 trailingAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    [v43 setConstant:0.0];
    if (v43)
    {
      id v43 = v43;
      id v44 = &stru_1007D7000;
      [v43 setActive:1];

      id v37 = v43;
    }
    else
    {
      id v44 = &stru_1007D7000;
    }

    id v39 = &stru_1007D7000;
  }
  else
  {
    id v43 = 0;
    id v40 = v37;
    id v44 = &stru_1007D7000;
  }

  id v45 = *(id *)&v9[v16];
  id v46 = [v45 superview];
  if (v46)
  {
    uint64_t v47 = v46;
    [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v48 = [v45 leadingAnchor];
    id v49 = [v47 leadingAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49];

    [v50 setConstant:0.0];
    if (v50)
    {
      id v50 = v50;
      [v50 v44[90].name:1];

      id v45 = v50;
    }

    id v39 = &stru_1007D7000;
  }
  else
  {
    id v50 = 0;
    uint64_t v47 = v45;
  }

  id v51 = *(id *)&v9[v16];
  [v51 v39[96].name];
  id v52 = [v51 heightAnchor];
  id v53 = [v52 constraintEqualToConstant:44.0];

  [v53 v44[90].name:1];
  NSString v54 = *(void **)&v9[v16];
  id v55 = *(id *)&v9[v132];
  id v56 = v54;
  [v55 v39[96].name];
  id v57 = [v55 topAnchor];
  id v58 = [v56 bottomAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  [v59 setConstant:5.0];
  [v59 v44[90].name:1];

  id v60 = *(id *)&v9[v132];
  id v61 = [v60 superview];
  if (v61)
  {
    uint64_t v62 = v61;
    [v60 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v63 = [v60 trailingAnchor];
    id v64 = [v62 trailingAnchor];
    id v65 = [v63 constraintEqualToAnchor:v64];

    [v65 setConstant:0.0];
    uint64_t v66 = &stru_1007D7000;
    if (v65)
    {
      id v65 = v65;
      [v65 v44[90].name:1];

      id v60 = v65;
    }
    uint64_t v67 = &selRef_drawMapRect_zoomScale_inContext_;

    id v68 = &stru_1007D7000;
  }
  else
  {
    id v65 = 0;
    uint64_t v62 = v60;
    id v68 = &stru_1007D7000;
    uint64_t v67 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v66 = &stru_1007D7000;
  }

  id v69 = *(id *)&v9[v132];
  id v70 = [v69 v67[77]];
  if (v70)
  {
    uint64_t v71 = v70;
    [v69 v68[96].name];
    id v72 = [v69 leadingAnchor];
    id v73 = [v71 leadingAnchor];
    id v74 = [v72 constraintEqualToAnchor:v73];

    [v74 setConstant:0.0];
    if (v74)
    {
      id v74 = v74;
      [v74 v44[90].name:1];

      id v69 = v74;
    }

    id v68 = &stru_1007D7000;
  }
  else
  {
    id v74 = 0;
    uint64_t v71 = v69;
  }

  id v75 = *(id *)&v9[v132];
  [v75 v68[96].name];
  id v76 = [v75 heightAnchor];
  id v77 = [v76 constraintEqualToConstant:100.0];

  [v77 v44[90].name:1];
  unint64_t v78 = *(void **)&v9[v132];
  id v79 = *(id *)&v9[v133];
  id v80 = v78;
  [v79 v68[96].name];
  id v81 = [v79 topAnchor];
  uint64_t v82 = v68;
  id v83 = [v80 bottomAnchor];
  id v84 = [v81 constraintEqualToAnchor:v83];

  [v84 setConstant:5.0];
  [v84 setActive:1];

  id v85 = *(id *)&v9[v133];
  id v86 = [v85 superview];
  if (v86)
  {
    uint64_t v87 = v86;
    [v85 v82[96].name];
    id v88 = [v85 trailingAnchor];
    id v89 = [v87 trailingAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89];

    [v90 setConstant:5.0];
    if (v90)
    {
      id v90 = v90;
      uint64_t v91 = &stru_1007D7000;
      [v90 setActive:1];

      id v85 = v90;
    }
    else
    {
      uint64_t v91 = &stru_1007D7000;
    }

    uint64_t v66 = &stru_1007D7000;
    uint64_t v92 = &stru_1007D7000;
  }
  else
  {
    id v90 = 0;
    uint64_t v87 = v85;
    uint64_t v92 = v82;
    uint64_t v91 = &stru_1007D7000;
  }

  id v93 = *(id *)&v9[v133];
  id v94 = [v93 superview];
  if (v94)
  {
    id v95 = v94;
    [v93 v92[96].name];
    id v96 = [v93 leadingAnchor];
    id v97 = [v95 leadingAnchor];
    id v98 = [v96 constraintEqualToAnchor:v97];

    [v98 setConstant:5.0];
    if (v98)
    {
      id v98 = v98;
      [v98 v91[90].name:1];

      id v93 = v98;
    }

    uint64_t v92 = &stru_1007D7000;
  }
  else
  {
    id v98 = 0;
    id v95 = v93;
  }

  id v99 = *(id *)&v9[v133];
  [v99 v92[96].name];
  id v100 = [v99 heightAnchor];
  id v101 = [v100 constraintEqualToConstant:100.0];

  [v101 v91[90].name:1];
  uint64_t v102 = *(void **)&v9[v133];
  id v103 = *(id *)&v9[v131];
  id v104 = v102;
  [v103 v92[96].name];
  id v105 = [v103 topAnchor];
  uint64_t v106 = (uint64_t)v92;
  id v107 = [v104 bottomAnchor];
  id v108 = [v105 constraintEqualToAnchor:v107];

  [v108 setConstant:10.0];
  [v108 setActive:1];

  id v109 = *(id *)&v9[v131];
  id v110 = [v109 superview];
  if (v110)
  {
    uint64_t v111 = v110;
    [v109 *(SEL *)(v106 + 2304):0];
    id v112 = [v109 trailingAnchor];
    id v113 = [v111 trailingAnchor];
    id v114 = [v112 constraintEqualToAnchor:v113];

    [v114 setConstant:0.0];
    if (v114)
    {
      id v114 = v114;
      [v114 setActive:1];

      id v109 = v114;
    }

    uint64_t v66 = &stru_1007D7000;
    uint64_t v106 = 0x1007D7000;
  }
  else
  {
    id v114 = 0;
    uint64_t v111 = v109;
  }

  id v115 = *(id *)&v9[v131];
  id v116 = sub_1001DDD3C(0, 0.0);

  id v117 = *(id *)&v9[v131];
  id v118 = [v117 superview];
  if (v118)
  {
    id v119 = v118;
    [v117 *(SEL *)(v106 + 2304):0];
    id v120 = [v117 leadingAnchor];
    id v121 = [v119 leadingAnchor];
    id v122 = [v120 v66[68].types:v121];

    [v122 setConstant:0.0];
    if (v122)
    {
      id v122 = v122;
      [v122 setActive:1];

      id v117 = v122;
    }
    p_info = (__objc2_class_ro **)(_TtCC7Journal13JurassicTheme6Colors + 32);
  }
  else
  {
    id v122 = 0;
    id v119 = v117;
    p_info = _TtCC7Journal13JurassicTheme6Colors.info;
  }

  [*(id *)&v9[v131] setEditing:1 animated:0];
  id v124 = v9;
  NSString v125 = String._bridgeToObjectiveC()();
  [v124 setTitle:v125];

  uint64_t v126 = *(void **)&v9[v133];
  uint64_t v127 = *(void *)((char *)&p_info[450]->flags + (void)v124);
  [v126 setAttributedText:*(void *)(v127 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text)];
  [v126 setDelegate:v124];
  *(void *)(v127 + 56) = &off_1007B5C28;
  id result = (char *)swift_unknownObjectWeakAssign();
  uint64_t v128 = *(void **)&v9[v130];
  if (v128)
  {
    id v129 = v128;
    NSManagedObjectContext.performAndWait<A>(_:)();
    [v129 setEnabled:v134];

    sub_100589814();
    swift_release();
    return v124;
  }
LABEL_59:
  __break(1u);
  return result;
}

void sub_100589688()
{
}

void sub_1005896E8()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton);
  if (v1)
  {
    id v2 = v1;
    NSManagedObjectContext.performAndWait<A>(_:)();
    [v2 setEnabled:v3];
  }
  else
  {
    __break(1u);
  }
}

void sub_100589814()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v2);
  id v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC7Journal15AdminComposerVC_model);
  v34._countAndFlagsBits = 0x203A74786574;
  v34._object = (void *)0xE600000000000000;
  long long v9 = *(void **)(v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (v9)
  {
    id v10 = *(id *)(v8 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  }
  else
  {
    id v11 = objc_allocWithZone((Class)NSAttributedString);
    NSString v12 = String._bridgeToObjectiveC()();
    id v10 = [v11 initWithString:v12];

    long long v9 = 0;
  }
  id v13 = v9;
  id v14 = [v10 description];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v17 = v16;

  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);

  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 10;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  strcpy((char *)&v34, "bundleId: ");
  BYTE3(v34._object) = 0;
  HIDWORD(v34._object) = -369098752;
  id v20 = [*(id *)(v8 + 32) bundleId];
  if (v20)
  {
    uint64_t v21 = v20;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
  }
  else
  {
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
  }
  v24._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 10;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  strcpy((char *)&v34, "bundleDate: ");
  BYTE5(v34._object) = 0;
  HIWORD(v34._object) = -5120;
  id v26 = [*(id *)(v8 + 32) bundleDate];
  if (v26)
  {
    uint64_t v27 = v26;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v4, 0, 1, v28);
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 1, 1, v29);
  }
  v30._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 10;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  id v32 = *(void **)(v1 + OBJC_IVAR____TtC7Journal15AdminComposerVC_infoLabel);
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v32 setText:v33];
}

void sub_100589C2C()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for AdminComposerVC();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal15AdminComposerVC_assetsTable];
    [v1 addSubview:v3];

    [v3 setDataSource:v0];
    [v3 setDelegate:v0];
    id v4 = [v0 navigationItem];
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1006D6D00;
    *(void *)(v5 + 32) = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:3 target:v0 action:"save"];
    specialized Array._endMutation()();
    sub_10058CBB4();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 setRightBarButtonItems:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100589DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_100589E7C, v6, v5);
}

uint64_t sub_100589E7C()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_100589F18;
  return sub_100580C88();
}

uint64_t sub_100589F18()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10010AEB4, v3, v2);
}

id sub_10058A198()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdminComposerVC();
  return [super dealloc];
}

uint64_t type metadata accessor for AdminComposerVC()
{
  return self;
}

void sub_10058A29C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10058A508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_10058A5A0, v7, v6);
}

uint64_t sub_10058A5A0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_10022823C;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_1000E99A4(v2);
}

uint64_t sub_10058A820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  uint64_t v7 = type metadata accessor for IndexSet();
  v6[5] = v7;
  void v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[9] = v9;
  v6[10] = v8;
  return _swift_task_switch(sub_10058A918, v9, v8);
}

uint64_t sub_10058A918()
{
  IndexPath.row.getter();
  IndexSet.init(integer:)();
  uint64_t v1 = IndexPath.row.getter();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10058A9EC;
  uint64_t v3 = *(void *)(v0 + 56);
  return sub_1000EB9E4(v3, v1);
}

uint64_t sub_10058A9EC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v4 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_10058AB70, v6, v5);
}

uint64_t sub_10058AB70()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10058AEEC(void *a1)
{
  uint64_t v2 = v1;
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6280;
  uint64_t v5 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  id v6 = [a1 text];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v9;
  }
  else
  {
    uint64_t v8 = 0;
  }
  v10._countAndFlagsBits = v8;
  v10._object = v5;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 32) = 0xD000000000000023;
  *(void *)(v4 + 40) = 0x80000001006A6860;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC7Journal15AdminComposerVC_model);
  id v12 = [a1 attributedText];
  id v13 = v12;
  if (v12
    && *(void *)(v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text)
    && (objc_msgSend(v12, "isEqualToAttributedString:") & 1) == 0)
  {
    *(unsigned char *)(v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
  }
  id v14 = *(void **)(v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  *(void *)(v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text) = v13;
}

void sub_10058B0F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  uint64_t v8 = OBJC_IVAR____TtC7Journal15AdminComposerVC_assetsTable;
  uint64_t v9 = OBJC_IVAR____TtC7Journal15AdminComposerVC_textView;
  uint64_t v10 = OBJC_IVAR____TtC7Journal15AdminComposerVC_model;
  int64_t v11 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v7)
  {
    unint64_t v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_18:
    switch(*(unsigned char *)(*(void *)(a1 + 48) + v14))
    {
      case 1:
        [*(id *)&v2[v8] reloadData];
        break;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xA:
        continue;
      case 9:
        id v18 = [v2 navigationController];
        if (v18)
        {
          Swift::String v19 = v18;
        }
        break;
      default:
        [*(id *)&v2[v9] setAttributedText:*(void *)(*(void *)&v2[v10] + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text)];
        break;
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v12 >= v11) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v12);
  if (v16)
  {
LABEL_17:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_18;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v11) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v11) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 < v11)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v12 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v12 >= v11) {
          goto LABEL_26;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v12);
        ++v17;
        if (v16) {
          goto LABEL_17;
        }
      }
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      JUMPOUT(0x10058B368);
    }
    goto LABEL_16;
  }
LABEL_26:
  swift_release();
  id v20 = *(void **)&v2[OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton];
  if (!v20) {
    goto LABEL_30;
  }
  id v21 = v20;
  NSManagedObjectContext.performAndWait<A>(_:)();
  [v21 setEnabled:v22];

  sub_100589814();
}

uint64_t sub_10058B394()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v4;
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);

  return swift_deallocObject();
}

uint64_t sub_10058B490(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v6;
  uint64_t v11 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + v6) & ~v5);
  int64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *int64_t v12 = v2;
  v12[1] = sub_100052588;
  return sub_10058A820(a1, v7, v8, v9, v10, v11);
}

void sub_10058B5BC(void *a1)
{
  sub_100438DFC(a1, 0x636E795365766173, 0xEA00000000002928, 0xD000000000000013, 0x800000010069B8D0);
  id v15 = 0;
  unsigned int v2 = [a1 save:&v15];
  id v3 = v15;
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6DB8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100026A54(v6, (uint64_t)qword_100807C00);
    id v7 = a1;
    swift_errorRetain();
    id v8 = v7;
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      int64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412546;
      id v15 = v8;
      id v13 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int64_t v12 = v8;

      *(_WORD *)(v11 + 12) = 2112;
      swift_errorRetain();
      uint64_t v14 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v15 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v12[1] = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "(saveSync) Unable to save parentContext %@ with error: %@", (uint8_t *)v11, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_10058B8C8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal15AdminComposerVC_infoLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal15AdminComposerVC_textView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UITextView) init];
  uint64_t v3 = OBJC_IVAR____TtC7Journal15AdminComposerVC_assetsTable;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UITableView) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal15AdminComposerVC_toolbar;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIToolbar) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal15AdminComposerVC_undoButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal15AdminComposerVC_redoButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal15AdminComposerVC_saveButton] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10058B9D8()
{
  uint64_t v1 = (void *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal15AdminComposerVC_model)
                + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0x2820737465737341;
}

char *sub_10058BAC8()
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (double *)type metadata accessor for URL();
  uint64_t v6 = *((void *)v5 - 1);
  __chkstk_darwin(v5);
  id v8 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  countAndFlagsBits = *(unsigned char **)(v0 + OBJC_IVAR____TtC7Journal15AdminComposerVC_model);
  unint64_t v10 = IndexPath.row.getter();
  uint64_t v11 = (uint64_t *)&countAndFlagsBits[OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll];
  swift_beginAccess();
  uint64_t object = *v11;
  id v93 = v8;
  if ((object & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      countAndFlagsBits = *(id *)(object + 8 * v10 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  countAndFlagsBits = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  id v8 = (char *)[objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  id v13 = [v8 textLabel];
  id v95 = v8;
  if (v13)
  {
    uint64_t object = (uint64_t)v13;
    sub_100041A58(countAndFlagsBits[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type]);
    NSString v14 = String._bridgeToObjectiveC()();
    id v8 = v95;
    swift_bridgeObjectRelease();
    [(id)object setText:v14];
  }
  id v15 = [v8 textLabel];
  if (v15)
  {
    uint64_t object = (uint64_t)v15;
    id v16 = [self systemFontOfSize:16.0 weight:UIFontWeightBold];
    [(id)object setFont:v16];

    id v8 = v95;
  }
  id v17 = [v8 detailTextLabel];
  if (v17)
  {
    uint64_t object = (uint64_t)v17;
    [v17 setNumberOfLines:0];
  }
  id v18 = [v8 textLabel];
  if (v18)
  {
    uint64_t object = (uint64_t)v18;
    [v18 setNumberOfLines:0];
  }
  Swift::String v19 = *(void **)&countAndFlagsBits[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  id v94 = countAndFlagsBits;
  if (v19)
  {
    uint64_t v1 = (void *)0xE000000000000000;
    *(void *)&long long v100 = 0;
    *((void *)&v100 + 1) = 0xE000000000000000;
    id v8 = v19;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    *(void *)&long long v100 = 0xD000000000000013;
    *((void *)&v100 + 1) = 0x800000010068D4A0;
    unsigned int v20 = [v8 isUploadedToCloud];
    BOOL v21 = v20 == 0;
    if (v20) {
      uint64_t v22 = 5457241;
    }
    else {
      uint64_t v22 = 20302;
    }
    if (v21) {
      unint64_t v23 = 0xE200000000000000;
    }
    else {
      unint64_t v23 = 0xE300000000000000;
    }
    unint64_t v24 = v23;
    String.append(_:)(*(Swift::String *)&v22);
    swift_bridgeObjectRelease();
    v96._countAndFlagsBits = 0;
    v96._uint64_t object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v96._countAndFlagsBits = 0x7461646174654D0ALL;
    v96._uint64_t object = (void *)0xEB00000000203A61;
    id v25 = [v8 assetMetaData];
    if (v25)
    {
      id v26 = v25;
      uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v28;

      switch(v29 >> 62)
      {
        case 1uLL:
          sub_100040DD0(v27, v29);
          if (!__OFSUB__(HIDWORD(v27), v27)) {
            goto LABEL_29;
          }
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
          JUMPOUT(0x10058C7C0);
        case 2uLL:
          uint64_t v33 = *(void *)(v27 + 16);
          uint64_t v32 = *(void *)(v27 + 24);
          sub_100040DD0(v27, v29);
          if (!__OFSUB__(v32, v33)) {
            goto LABEL_29;
          }
          goto LABEL_94;
        default:
          sub_100040DD0(v27, v29);
LABEL_29:
          uint64_t v31 = sub_1005879C4();
          unint64_t v30 = v34;
          break;
      }
    }
    else
    {
      unint64_t v30 = 0xE100000000000000;
      uint64_t v31 = 48;
    }
    unint64_t v35 = v30;
    String.append(_:)(*(Swift::String *)&v31);
    swift_bridgeObjectRelease();
    v36._countAndFlagsBits = 0x736574796220;
    v36._uint64_t object = (void *)0xE600000000000000;
    String.append(_:)(v36);
    String.append(_:)(v96);
    swift_bridgeObjectRelease();
    v96._countAndFlagsBits = 0;
    v96._uint64_t object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease();
    v96._countAndFlagsBits = 0xD000000000000012;
    v96._uint64_t object = (void *)0x800000010068D4C0;
    id v37 = sub_1001836EC(0);
    if (v37 && (id v38 = v37, v39 = [v37 data], v38, v39))
    {
      uint64_t v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v42 = v41;

      switch(v42 >> 62)
      {
        case 1uLL:
          sub_100040DD0(v40, v42);
          if (!__OFSUB__(HIDWORD(v40), v40)) {
            goto LABEL_39;
          }
          goto LABEL_95;
        case 2uLL:
          uint64_t v46 = *(void *)(v40 + 16);
          uint64_t v45 = *(void *)(v40 + 24);
          sub_100040DD0(v40, v42);
          if (!__OFSUB__(v45, v46)) {
            goto LABEL_39;
          }
          goto LABEL_96;
        default:
          sub_100040DD0(v40, v42);
LABEL_39:
          uint64_t v44 = sub_1005879C4();
          unint64_t v43 = v47;
          break;
      }
    }
    else
    {
      unint64_t v43 = 0xE100000000000000;
      uint64_t v44 = 48;
    }
    unint64_t v48 = v43;
    String.append(_:)(*(Swift::String *)&v44);
    swift_bridgeObjectRelease();
    v49._countAndFlagsBits = 0x736574796220;
    v49._uint64_t object = (void *)0xE600000000000000;
    String.append(_:)(v49);
    String.append(_:)(v96);
    swift_bridgeObjectRelease();
    id v50 = [v8 fileAttachment];
    if (v50)
    {
      id v51 = v50;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      type metadata accessor for Journaling();
      sub_1005E6B0C((uint64_t)v4);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, double *))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_100052EAC((uint64_t)v4);
      }
      else
      {
        id v52 = v93;
        (*(void (**)(char *, char *, double *))(v6 + 32))(v93, v4, v5);
        v96._countAndFlagsBits = 0;
        v96._uint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(33);
        swift_bridgeObjectRelease();
        v96._countAndFlagsBits = 0xD000000000000019;
        v96._uint64_t object = (void *)0x800000010068D4E0;
        sub_100464660();
        if (v53)
        {
          unint64_t v56 = 0xE100000000000000;
          uint64_t v54 = 48;
        }
        else
        {
          uint64_t v54 = sub_1005879C4();
          unint64_t v56 = v55;
        }
        unint64_t v57 = v56;
        String.append(_:)(*(Swift::String *)&v54);
        swift_bridgeObjectRelease();
        v58._countAndFlagsBits = 0x736574796220;
        v58._uint64_t object = (void *)0xE600000000000000;
        String.append(_:)(v58);
        String.append(_:)(v96);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, double *))(v6 + 8))(v52, v5);
      }
    }
    long long v59 = v100;
    id v5 = (double *)sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v61 = *((void *)v5 + 2);
    unint64_t v60 = *((void *)v5 + 3);
    uint64_t object = v61 + 1;
    if (v61 >= v60 >> 1) {
      id v5 = (double *)sub_1002A54A0((char *)(v60 > 1), v61 + 1, 1, (char *)v5);
    }
    *((void *)v5 + 2) = object;
    *(_OWORD *)&v5[2 * v61 + 4] = v59;

    countAndFlagsBits = v94;
  }
  else
  {
    id v5 = _swiftEmptyArrayStorage;
  }
  uint64_t v6 = *(void *)&countAndFlagsBits[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments];
  if ((unint64_t)v6 >> 62)
  {
LABEL_66:
    if (v6 < 0) {
      uint64_t object = v6;
    }
    else {
      uint64_t object = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
    if (!v62) {
      goto LABEL_70;
    }
    goto LABEL_52;
  }
  uint64_t v62 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v62) {
    goto LABEL_70;
  }
LABEL_52:
  if (v62 < 1)
  {
    __break(1u);
LABEL_92:
    id v5 = (double *)sub_1002A54A0(0, *((void *)v5 + 2) + 1, 1, (char *)v5);
    goto LABEL_81;
  }
  uint64_t v63 = 0;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    unint64_t v64 = sub_1005DA880();
    uint64_t v66 = v65;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = (double *)sub_1002A54A0(0, *((void *)v5 + 2) + 1, 1, (char *)v5);
    }
    unint64_t v68 = *((void *)v5 + 2);
    unint64_t v67 = *((void *)v5 + 3);
    if (v68 >= v67 >> 1) {
      id v5 = (double *)sub_1002A54A0((char *)(v67 > 1), v68 + 1, 1, (char *)v5);
    }
    ++v63;
    *((void *)v5 + 2) = v68 + 1;
    id v69 = &v5[2 * v68];
    *((void *)v69 + 4) = v64;
    *((void *)v69 + 5) = v66;
    swift_release();
    swift_bridgeObjectRelease();
  }
  while (v62 != v63);
LABEL_70:
  swift_bridgeObjectRelease();
  id v70 = v94;
  swift_getObjectType();
  uint64_t v71 = swift_conformsToProtocol2();
  if (v71) {
    uint64_t v72 = v71;
  }
  else {
    uint64_t v72 = 0;
  }
  if (v71) {
    id v73 = v70;
  }
  else {
    id v73 = 0;
  }
  if (!v73) {
    goto LABEL_86;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = type metadata accessor for Optional();
  id v93 = (char *)&v93;
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  id v79 = (char *)&v93 - v78;
  id v80 = v70;
  sub_10058D2BC(ObjectType, v72, (uint64_t)v79);
  uint64_t v81 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v76);

LABEL_85:
    id v70 = v94;
LABEL_86:
    id v8 = v95;
    uint64_t v6 = (uint64_t)&selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
    goto LABEL_87;
  }
  uint64_t v1 = v80;
  uint64_t v97 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v99 = swift_getAssociatedConformanceWitness();
  uint64_t v82 = sub_100062E54(&v96._countAndFlagsBits);
  (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 32))(v82, v79, AssociatedTypeWitness);
  sub_1001874F4((long long *)&v96._countAndFlagsBits, &v100);
  sub_10002E0BC(&v100, v101);
  uint64_t v83 = sub_100369B80();
  if (!v84)
  {

    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v100);
    goto LABEL_85;
  }
  v96._countAndFlagsBits = 0x617461646174654DLL;
  v96._uint64_t object = (void *)0xEA00000000000A3ALL;
  String.append(_:)(*(Swift::String *)&v83);
  swift_bridgeObjectRelease();
  uint64_t object = (uint64_t)v96._object;
  countAndFlagsBits = (unsigned char *)v96._countAndFlagsBits;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v8 = v95;
  uint64_t v6 = 0x1007D9000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_92;
  }
LABEL_81:
  unint64_t v87 = *((void *)v5 + 2);
  unint64_t v86 = *((void *)v5 + 3);
  if (v87 >= v86 >> 1) {
    id v5 = (double *)sub_1002A54A0((char *)(v86 > 1), v87 + 1, 1, (char *)v5);
  }
  *((void *)v5 + 2) = v87 + 1;
  id v88 = &v5[2 * v87];
  *((void *)v88 + 4) = countAndFlagsBits;
  *((void *)v88 + 5) = object;
  swift_bridgeObjectRelease();

  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v100);
  id v70 = v94;
LABEL_87:
  id v89 = [v8 *(SEL *)(v6 + 2472) v93];
  if (v89)
  {
    id v90 = v89;
    *(void *)&long long v100 = v5;
    sub_100010218(&qword_100800A70);
    sub_1000245BC();
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    NSString v91 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v90 setText:v91];
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v8;
}