uint64_t sub_100004B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014BE08);
  v1 = sub_100007D30(v0, (uint64_t)qword_10014BE08);
  if (qword_10014BF80 != -1) {
    swift_once();
  }
  v2 = sub_100007D30(v0, (uint64_t)qword_100162F58);
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100004BE8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for OperationsManager()) init];
  qword_10014BE28 = (uint64_t)result;
  return result;
}

id variable initialization expression of OperationsManager.mapTableAssetMetadataQueue()
{
  id v0 = [self strongToWeakObjectsMapTable];

  return v0;
}

id sub_100004C58()
{
  uint64_t v1 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableFileAttachmentsQueue;
  v2 = self;
  v3 = v0;
  *(void *)&v0[v1] = [v2 strongToWeakObjectsMapTable];
  uint64_t v4 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableAssetMetadataQueue;
  *(void *)&v3[v4] = [self strongToWeakObjectsMapTable];
  id v5 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v6 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority;
  *(void *)&v3[OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority] = v5;
  uint64_t v7 = qword_10014C028;
  id v8 = v5;
  if (v7 != -1) {
    swift_once();
  }
  [v8 setUnderlyingQueue:qword_1001630B8];

  id v9 = *(id *)&v3[v6];
  NSString v10 = sub_100104B38();
  [v9 setName:v10];

  v11 = *(void **)&v3[v6];
  [v11 setMaxConcurrentOperationCount:6];
  [v11 setQualityOfService:9];
  id v12 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v13 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority;
  *(void *)&v3[OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority] = v12;
  uint64_t v14 = qword_10014C030;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  [v15 setUnderlyingQueue:qword_1001630C0];

  id v16 = *(id *)&v3[v13];
  NSString v17 = sub_100104B38();
  [v16 setName:v17];

  v18 = *(void **)&v3[v13];
  [v18 setMaxConcurrentOperationCount:6];
  [v18 setQualityOfService:-1];
  id v19 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v20 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority;
  *(void *)&v3[OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority] = v19;
  uint64_t v21 = qword_10014C038;
  id v22 = v19;
  if (v21 != -1) {
    swift_once();
  }
  [v22 setUnderlyingQueue:qword_1001630C8];

  id v23 = *(id *)&v3[v20];
  NSString v24 = sub_100104B38();
  [v23 setName:v24];

  v25 = *(void **)&v3[v20];
  [v25 setMaxConcurrentOperationCount:2];
  [v25 setQualityOfService:33];
  id v26 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v27 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_fileAttachmentsQueue;
  *(void *)&v3[OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_fileAttachmentsQueue] = v26;
  uint64_t v28 = qword_10014BF58;
  id v29 = v26;
  if (v28 != -1) {
    swift_once();
  }
  [v29 setUnderlyingQueue:qword_100162E58];

  id v30 = *(id *)&v3[v27];
  NSString v31 = sub_100104B38();
  [v30 setName:v31];

  v32 = *(void **)&v3[v27];
  [v32 setMaxConcurrentOperationCount:2];
  [v32 setQualityOfService:-1];
  id v33 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v34 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_assetMetadataQueue;
  *(void *)&v3[OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_assetMetadataQueue] = v33;
  uint64_t v35 = qword_10014BF60;
  id v36 = v33;
  if (v35 != -1) {
    swift_once();
  }
  [v36 setUnderlyingQueue:qword_100162E60];

  id v37 = *(id *)&v3[v34];
  NSString v38 = sub_100104B38();
  [v37 setName:v38];

  v39 = *(void **)&v3[v34];
  [v39 setMaxConcurrentOperationCount:2];
  [v39 setQualityOfService:-1];
  id v40 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v41 = OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_batchRecordDownloadQueue;
  *(void *)&v3[OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_batchRecordDownloadQueue] = v40;
  uint64_t v42 = qword_10014BF68;
  id v43 = v40;
  if (v42 != -1) {
    swift_once();
  }
  [v43 setUnderlyingQueue:qword_100162E68];

  id v44 = *(id *)&v3[v41];
  NSString v45 = sub_100104B38();
  [v44 setName:v45];

  v46 = *(void **)&v3[v41];
  [v46 setMaxConcurrentOperationCount:1];
  id v47 = v46;
  [v47 setQualityOfService:9];

  v49.receiver = v3;
  v49.super_class = (Class)type metadata accessor for OperationsManager();
  return [super init];
}

void static OperationsManager.getAssetMetaDataOperationsRunningCount()()
{
}

void static OperationsManager.addAssetMetadata(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id static OperationsManager.getRunningAssetsMetadataOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_100005468(a1, a2, &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableAssetMetadataQueue);
}

id static OperationsManager.cancelAssetMetaDataOperations()()
{
  return sub_100007464("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableAssetMetadataQueue);
}

void static OperationsManager.getAttachmentOperationsRunningCount()()
{
}

void static OperationsManager.addAttachment(recordID:operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100005310(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  sub_100007268(a4);
  if (v8 <= 99)
  {
    if (qword_10014BE20 != -1) {
      swift_once();
    }
    id v9 = *(void **)(qword_10014BE28 + *a5);
    id v10 = objc_allocWithZone((Class)NSString);
    id v11 = v9;
    swift_bridgeObjectRetain();
    NSString v12 = sub_100104B38();
    swift_bridgeObjectRelease();
    id v13 = [v10 initWithString:v12];

    [v11 setObject:a3 forKey:v13];
    uint64_t v14 = *(void **)(qword_10014BE28 + *a4);
    [v14 addOperation:a3];
  }
}

id static OperationsManager.getRunningAttachmentOperation(recordID:)(uint64_t a1, uint64_t a2)
{
  return sub_100005468(a1, a2, &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableFileAttachmentsQueue);
}

id sub_100005468(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_10014BE28 + *a3);
  id v5 = objc_allocWithZone((Class)NSString);
  id v6 = v4;
  swift_bridgeObjectRetain();
  NSString v7 = sub_100104B38();
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithString:v7];

  id v9 = [v6 objectForKey:v8];
  if (v9 && [v9 isCancelled])
  {

    return 0;
  }
  return v9;
}

id static OperationsManager.cancelAttachmentOperations()()
{
  return sub_100007464("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableFileAttachmentsQueue);
}

void static OperationsManager.getBatchRecordDownloadOperationsRunningCount()()
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  id v0 = [*(id *)(qword_10014BE28 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_batchRecordDownloadQueue) operations];
  sub_100008234(0, &qword_10014C1E8);
  unint64_t v1 = sub_100104D28();

  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1001055E8();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_5:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v4 = (id)sub_1001054D8();
      }
      else {
        id v4 = *(id *)(v1 + 8 * i + 32);
      }
      id v5 = v4;
      if ([v4 isCancelled])
      {
      }
      else
      {
        sub_100105548();
        sub_100105578();
        sub_100105588();
        sub_100105558();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_1001055E8();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

id static OperationsManager.addBatchRecordDownload(operation:)(uint64_t a1)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_10014BE28 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_batchRecordDownloadQueue);

  return [v2 addOperation:a1];
}

id static OperationsManager.cancelAllOngoingDownloads()()
{
  sub_100007464("OperationsManager.cancelAssetMetaDataOperations", &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_assetMetadataQueue, &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableAssetMetadataQueue);
  sub_100007464("OperationsManager.cancelAttachmentOperations", &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_fileAttachmentsQueue, &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_mapTableFileAttachmentsQueue);

  return _s20JournalWidgetsSecure17OperationsManagerC017cancelBatchRecordD0yyFZ_0();
}

void static OperationsManager.cancelAllThumbnailOperations()()
{
  if (qword_10014BE00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100103DB8();
  sub_100007D30(v0, (uint64_t)qword_10014BE08);
  unint64_t v1 = sub_100103D98();
  os_log_type_t v2 = sub_100105018();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelAllThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_10014BE20 != -1) {
    swift_once();
  }
  id v4 = *(void **)(qword_10014BE28 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority);
  id v5 = *(void **)(qword_10014BE28 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority);
  id v8 = objc_retain(*(id *)(qword_10014BE28
                         + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority));
  id v6 = v4;
  id v7 = v5;
  [v8 cancelAllOperations];
  [v6 cancelAllOperations];
  [v7 cancelAllOperations];
}

id static OperationsManager.cancelLowPriorityThumbnailOperations()()
{
  if (qword_10014BE00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100103DB8();
  sub_100007D30(v0, (uint64_t)qword_10014BE08);
  unint64_t v1 = sub_100103D98();
  os_log_type_t v2 = sub_100105018();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelLowPriorityThumbnailOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_10014BE20 != -1) {
    swift_once();
  }
  id v4 = *(void **)(qword_10014BE28 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority);

  return [v4 cancelAllOperations];
}

id OperationsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationsManager();
  return [super dealloc];
}

void static OperationsManager.addMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.addAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_100005C58(uint64_t a1, void *a2)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_10014BE28 + *a2);
  NSString v5 = sub_100104B38();
  [v4 addObserver:a1 forKeyPath:v5 options:0 context:0];
}

void static OperationsManager.removeMetadataDownloadObserver(_:)(uint64_t a1)
{
}

void static OperationsManager.removeAttachmentsDownloadObserver(_:)(uint64_t a1)
{
}

void sub_100005D3C(uint64_t a1, void *a2)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  id v4 = *(id *)(qword_10014BE28 + *a2);
  NSString v5 = sub_100104B38();
  [v4 removeObserver:a1 forKeyPath:v5];
}

uint64_t variable initialization expression of OperationBase.lock()
{
  sub_100049D18();
  type metadata accessor for OperationBase.Locked();
  uint64_t v0 = sub_100007D8C();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.delegate()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.bundleId@<X0>(uint64_t a1@<X8>)
{
  return sub_100005F10((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t variable initialization expression of Journaling.EntryViewModel.prompts()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.changeEventPublisher()
{
  return sub_100103DF8();
}

uint64_t variable initialization expression of Journaling.EntryViewModel.textChanged()
{
  return 0;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.dateSource()
{
  return 5;
}

uint64_t variable initialization expression of Journaling.EntryViewModel.originalUpdatedDate@<X0>(uint64_t a1@<X8>)
{
  return sub_100005F10((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

void *variable initialization expression of Journaling.EntryViewModel.assetsAll()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100005F10@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t sub_100005F84(uint64_t a1, uint64_t a2)
{
  return sub_100006DD4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_100005FB8()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_100005FC0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100103BC8();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_100006014(uint64_t a1, uint64_t a2)
{
  char v3 = sub_100103BD8();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10000606C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100103BE8();
  *a1 = v3;
  return result;
}

uint64_t sub_100006094()
{
  return sub_100103C18();
}

uint64_t sub_1000060E0()
{
  return sub_100103C08();
}

Swift::Int sub_100006138()
{
  return sub_100105928();
}

uint64_t sub_1000061A0(uint64_t a1, id *a2)
{
  uint64_t result = sub_100104B58();
  *a2 = 0;
  return result;
}

uint64_t sub_100006218(uint64_t a1, id *a2)
{
  char v3 = sub_100104B68();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100006298@<X0>(void *a1@<X8>)
{
  sub_100104B78();
  NSString v2 = sub_100104B38();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000062DC()
{
  sub_100008094(&qword_10014C2B8, type metadata accessor for FileProtectionType);
  sub_100008094(&qword_10014C2C0, type metadata accessor for FileProtectionType);

  return sub_100105638();
}

uint64_t sub_100006398()
{
  swift_getWitnessTable();

  return sub_100103BF8();
}

uint64_t sub_100006404()
{
  sub_100008094(&qword_10014C4E8, type metadata accessor for MKPointOfInterestCategory);
  sub_100008094(&qword_10014C4F0, type metadata accessor for MKPointOfInterestCategory);

  return sub_100105638();
}

uint64_t sub_1000064C0()
{
  sub_100008094((unint64_t *)&qword_10014C528, type metadata accessor for Key);
  sub_100008094(&qword_10014C530, type metadata accessor for Key);

  return sub_100105638();
}

uint64_t sub_10000657C()
{
  sub_100008094(&qword_10014C518, type metadata accessor for DocumentAttributeKey);
  sub_100008094(&qword_10014C520, type metadata accessor for DocumentAttributeKey);

  return sub_100105638();
}

uint64_t sub_100006638()
{
  sub_100008094(&qword_10014C508, type metadata accessor for DocumentType);
  sub_100008094(&qword_10014C510, type metadata accessor for DocumentType);

  return sub_100105638();
}

uint64_t sub_1000066F4()
{
  sub_100008094(&qword_10014C4F8, type metadata accessor for DocumentReadingOptionKey);
  sub_100008094(&qword_10014C500, type metadata accessor for DocumentReadingOptionKey);

  return sub_100105638();
}

uint64_t sub_1000067B0()
{
  sub_100008094((unint64_t *)&qword_10014C4C8, type metadata accessor for AttributeName);
  sub_100008094(&qword_10014C4D0, type metadata accessor for AttributeName);

  return sub_100105638();
}

uint64_t sub_10000686C()
{
  sub_100008094(&qword_10014C4A0, type metadata accessor for TraitKey);
  sub_100008094(&qword_10014C4A8, type metadata accessor for TraitKey);

  return sub_100105638();
}

void *sub_100006928@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_100006938@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_100006944()
{
  return sub_100105638();
}

uint64_t sub_100006A0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100104B78();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100006A38()
{
  sub_100008094(&qword_10014C5C0, type metadata accessor for NLTagScheme);
  sub_100008094(&qword_10014C5C8, type metadata accessor for NLTagScheme);

  return sub_100105638();
}

uint64_t sub_100006AF4()
{
  sub_100008094(&qword_10014C5B0, type metadata accessor for NLTag);
  sub_100008094(&qword_10014C5B8, type metadata accessor for NLTag);

  return sub_100105638();
}

uint64_t sub_100006BB0()
{
  sub_100008094((unint64_t *)&qword_10014C4D8, type metadata accessor for OptionKey);
  sub_100008094(&qword_10014C4E0, type metadata accessor for OptionKey);

  return sub_100105638();
}

uint64_t sub_100006C6C@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_100104B38();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100006CB4()
{
  sub_100008094(&qword_10014C5D0, type metadata accessor for GEOPOICategory);
  sub_100008094(&qword_10014C5D8, type metadata accessor for GEOPOICategory);

  return sub_100105638();
}

uint64_t sub_100006D70()
{
  return Double.hashValue.getter(*v0);
}

void sub_100006D78()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100105908(v1);
}

uint64_t sub_100006DAC()
{
  return sub_1001058C8();
}

uint64_t sub_100006DBC(uint64_t a1, uint64_t a2)
{
  return sub_100006DD4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100006DD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_100104B78();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100006E18()
{
  sub_100104B78();
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100006E6C()
{
  sub_100104B78();
  sub_1001058D8();
  sub_100104BC8();
  Swift::Int v0 = sub_100105928();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_100006EE0(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100006EF4()
{
  uint64_t v0 = sub_100104B78();
  uint64_t v2 = v1;
  if (v0 == sub_100104B78() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1001057F8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void _s20JournalWidgetsSecure17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  if (qword_10014BE20 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v5 = qword_10014BE28;
  sub_100007E0C(&qword_10014C328);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100106D20;
  id v7 = *(void **)(v5 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v7;
  id v8 = *(void **)(v5 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v8;
  id v9 = *(void **)(v5 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v9;
  uint64_t v30 = inited;
  sub_100104D48();
  unint64_t v10 = v30 & 0xC000000000000001;
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  unint64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      id v15 = (id)sub_1001054D8();
      goto LABEL_8;
    }
    if (v14 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v15 = *(id *)(v30 + 32 + 8 * v14);
LABEL_8:
    id v29 = v15;
    id v16 = [v15 operations:v28];
    sub_100008234(0, &qword_10014C1E8);
    unint64_t v17 = sub_100104D28();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1001055E8();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_10:
        uint64_t v19 = 4;
        while (1)
        {
          id v20 = (v17 & 0xC000000000000001) != 0 ? (id)sub_1001054D8() : *(id *)(v17 + 8 * v19);
          uint64_t v21 = v20;
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v19 - 4, 1)) {
            break;
          }
          type metadata accessor for ThumbnailCacheOperation();
          uint64_t v23 = swift_dynamicCastClass();
          if (v23)
          {
            NSString v24 = (void *)v23;
            BOOL v25 = *(void *)(v23 + qword_100151B00) == a1 && *(void *)(v23 + qword_100151B00 + 8) == a2;
            if (v25 || (sub_1001057F8() & 1) != 0)
            {
              id v26 = v21;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v27 = v26;
              [v24 setQueuePriority:v28];

              return;
            }
          }

          ++v19;
          if (v22 == v18) {
            goto LABEL_3;
          }
        }
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18) {
        goto LABEL_10;
      }
    }
LABEL_3:
    ++v14;

    swift_bridgeObjectRelease();
    unint64_t v10 = v30 & 0xC000000000000001;
    if (v14 == 3)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

void sub_100007268(void *a1)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  id v2 = [*(id *)(qword_10014BE28 + *a1) operations];
  sub_100008234(0, &qword_10014C1E8);
  unint64_t v3 = sub_100104D28();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1001055E8();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_17;
  }
LABEL_5:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_1001054D8();
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      id v7 = v6;
      if ([v6 isCancelled])
      {
      }
      else
      {
        sub_100105548();
        sub_100105578();
        sub_100105588();
        sub_100105558();
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_18:
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
LABEL_19:
      swift_release();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_1001055E8();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

id sub_100007464(const char *a1, void *a2, void *a3)
{
  if (qword_10014BE00 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100103DB8();
  sub_100007D30(v6, (uint64_t)qword_10014BE08);
  id v7 = sub_100103D98();
  os_log_type_t v8 = sub_100105018();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  if (qword_10014BE20 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10014BE28;
  [*(id *)(qword_10014BE28 + *a2) cancelAllOperations];
  id v11 = *(void **)(v10 + *a3);

  return [v11 removeAllObjects];
}

id _s20JournalWidgetsSecure17OperationsManagerC017cancelBatchRecordD0yyFZ_0()
{
  if (qword_10014BE00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100103DB8();
  sub_100007D30(v0, (uint64_t)qword_10014BE08);
  uint64_t v1 = sub_100103D98();
  os_log_type_t v2 = sub_100105018();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "OperationsManager.cancelBatchRecordOperations", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_10014BE20 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_10014BE28 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_batchRecordDownloadQueue);

  return [v4 cancelAllOperations];
}

id _s20JournalWidgetsSecure17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0G14CacheOperationC_So03OS_I6_queueCtFZ_0(uint64_t a1)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10014BE28;
  sub_100008234(0, &qword_10014C330);
  if (qword_10014C028 != -1) {
    swift_once();
  }
  if (sub_100105218())
  {
    unint64_t v3 = &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority;
  }
  else
  {
    if (qword_10014C038 != -1) {
      swift_once();
    }
    char v4 = sub_100105218();
    unint64_t v3 = &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority;
    if (v4) {
      unint64_t v3 = &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority;
    }
  }
  uint64_t v5 = *(void **)(v2 + *v3);

  return [v5 addOperation:a1];
}

void *_s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_10014BE20 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v4 = qword_10014BE28;
    sub_100008234(0, &qword_10014C330);
    if (qword_10014C028 != -1) {
      swift_once();
    }
    if (sub_100105218())
    {
      uint64_t v5 = &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority;
    }
    else
    {
      if (qword_10014C038 != -1) {
        swift_once();
      }
      char v6 = sub_100105218();
      uint64_t v5 = &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority;
      if (v6) {
        uint64_t v5 = &OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority;
      }
    }
    id v7 = [*(id *)(v4 + *v5) operations];
    sub_100008234(0, &qword_10014C1E8);
    unint64_t v8 = sub_100104D28();

    if (v8 >> 62) {
      break;
    }
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_30;
    }
LABEL_12:
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)sub_1001054D8() : *(id *)(v8 + 8 * v10);
      id v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      type metadata accessor for ThumbnailCacheOperation();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        id v15 = (void *)v14;
        BOOL v16 = *(void *)(v14 + qword_100151B00) == a1 && *(void *)(v14 + qword_100151B00 + 8) == a2;
        if (v16 || (sub_1001057F8()) && ([v15 isCancelled] & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }

      ++v10;
      if (v13 == v9) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1001055E8();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_12;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

void _s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailjH0C_So17OS_dispatch_queueCtSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_10014BE20 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10014BE28;
  sub_100007E0C(&qword_10014C328);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100106D20;
  char v6 = *(void **)(v4 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueHighPriority);
  *(void *)(inited + 32) = v6;
  id v7 = *(void **)(v4 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueRegularPriority);
  *(void *)(inited + 40) = v7;
  unint64_t v8 = *(void **)(v4 + OBJC_IVAR____TtC20JournalWidgetsSecure17OperationsManager_cacheQueueLowPriority);
  *(void *)(inited + 48) = v8;
  uint64_t v30 = inited;
  sub_100104D48();
  uint64_t v9 = v30;
  unint64_t v10 = v30 & 0xC000000000000001;
  uint64_t v11 = v30 & 0xFFFFFFFFFFFFFF8;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v15 = (id)sub_1001054D8();
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_23;
    }
    id v15 = *(id *)(v30 + 32);
  }
  BOOL v16 = v15;
  id v17 = [v15 underlyingQueue];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = _s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a1, a2);

    BOOL v16 = v18;
    if (v19) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v20 = (id)sub_1001054D8();
  }
  else
  {
    if (*(void *)(v11 + 16) < 2uLL) {
      goto LABEL_23;
    }
    id v20 = *(id *)(v9 + 40);
  }
  uint64_t v21 = v20;
  id v22 = [v20 underlyingQueue];
  if (v22)
  {
    id v23 = v22;
    NSString v24 = _s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a1, a2);

    uint64_t v21 = v23;
    if (v24) {
      goto LABEL_21;
    }
  }

  if (v10)
  {
    id v25 = (id)sub_1001054D8();
    goto LABEL_19;
  }
  if (*(void *)(v11 + 16) < 3uLL)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v25 = *(id *)(v9 + 48);
LABEL_19:
  id v26 = v25;
  id v27 = [v25 underlyingQueue];
  if (v27)
  {
    id v28 = v27;
    id v29 = _s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a1, a2);

    id v26 = v28;
    if (v29)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_100007D30(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for OperationsManager()
{
  return self;
}

uint64_t sub_100007D8C()
{
  return sub_100105508();
}

uint64_t sub_100007E0C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100007E50(long long *a1)
{
  long long v2 = *a1;
  if (sub_100102DCC(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_100007EC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_100102DCC(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

uint64_t sub_100007F30(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100007F78()
{
  unint64_t result = qword_10014C238;
  if (!qword_10014C238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C238);
  }
  return result;
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

__n128 _s9IconStyleVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

uint64_t sub_100008004()
{
  return sub_100008094(&qword_10014C2A0, type metadata accessor for FileProtectionType);
}

uint64_t sub_10000804C()
{
  return sub_100008094(&qword_10014C2A8, type metadata accessor for FileProtectionType);
}

uint64_t sub_100008094(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000080DC()
{
  return sub_100008094(&qword_10014C2B0, type metadata accessor for FileProtectionType);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_100008138@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4
                                                                             + class metadata base offset for ManagedBuffer)
                                                                 - 8)
                                                     + 16))(a2, v3);
}

uint64_t *sub_1000081D0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100008234(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

__n128 sub_100008270(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100008284(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000082A4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for OptionKey(uint64_t a1)
{
}

uint64_t sub_100008334(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100008354(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for InsightsDataManager.WordCountGroup(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000083D0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000083F0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for MKPointOfInterestCategory(uint64_t a1)
{
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
}

void type metadata accessor for DocumentType(uint64_t a1)
{
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_1000084D0()
{
  return sub_100008094(&qword_10014C3B8, type metadata accessor for Key);
}

uint64_t sub_100008518()
{
  return sub_100008094(&qword_10014C3C0, type metadata accessor for Key);
}

uint64_t sub_100008560()
{
  return sub_100008094(&qword_10014C3C8, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_1000085A8()
{
  return sub_100008094(&qword_10014C3D0, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_1000085F0()
{
  return sub_100008094(&qword_10014C3D8, type metadata accessor for DocumentType);
}

uint64_t sub_100008638()
{
  return sub_100008094(&qword_10014C3E0, type metadata accessor for DocumentType);
}

uint64_t sub_100008680()
{
  return sub_100008094(&qword_10014C3E8, type metadata accessor for DocumentType);
}

uint64_t sub_1000086C8()
{
  return sub_100008094(&qword_10014C3F0, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100008710()
{
  return sub_100008094(&qword_10014C3F8, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100008758()
{
  return sub_100008094(&qword_10014C400, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_1000087A0()
{
  return sub_100008094(&qword_10014C408, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_1000087E8()
{
  return sub_100008094(&qword_10014C410, type metadata accessor for MKPointOfInterestCategory);
}

uint64_t sub_100008830()
{
  return sub_100008094(&qword_10014C418, type metadata accessor for OptionKey);
}

uint64_t sub_100008878()
{
  return sub_100008094(&qword_10014C420, type metadata accessor for OptionKey);
}

uint64_t sub_1000088C0()
{
  return sub_100008094(&qword_10014C428, type metadata accessor for AttributeName);
}

uint64_t sub_100008908()
{
  return sub_100008094(&qword_10014C430, type metadata accessor for AttributeName);
}

uint64_t sub_100008950()
{
  return sub_100008094(&qword_10014C438, type metadata accessor for Weight);
}

uint64_t sub_100008998()
{
  return sub_100008094(&qword_10014C440, type metadata accessor for Weight);
}

uint64_t sub_1000089E0()
{
  return sub_100008094(&qword_10014C448, type metadata accessor for Weight);
}

uint64_t sub_100008A28()
{
  return sub_100008094(&qword_10014C450, type metadata accessor for TraitKey);
}

uint64_t sub_100008A70()
{
  return sub_100008094(&qword_10014C458, type metadata accessor for TraitKey);
}

uint64_t sub_100008AB8()
{
  return sub_100008094(&qword_10014C460, type metadata accessor for TraitKey);
}

uint64_t sub_100008B00()
{
  return sub_100008094(&qword_10014C468, type metadata accessor for AttributeName);
}

uint64_t sub_100008B48()
{
  return sub_100008094(&qword_10014C470, type metadata accessor for OptionKey);
}

uint64_t sub_100008B90()
{
  return sub_100008094((unint64_t *)&qword_10014C478, type metadata accessor for CFString);
}

uint64_t sub_100008BD8()
{
  return sub_100008094(&qword_10014C480, type metadata accessor for CFString);
}

uint64_t sub_100008C20()
{
  return sub_100008094(&qword_10014C488, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_100008C68()
{
  return sub_100008094(&qword_10014C490, type metadata accessor for Key);
}

uint64_t sub_100008CB0()
{
  return sub_100008094(&qword_10014C498, type metadata accessor for DocumentAttributeKey);
}

unint64_t sub_100008CF8()
{
  unint64_t result = qword_10014C4C0;
  if (!qword_10014C4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C4C0);
  }
  return result;
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for NSMergePolicyType(uint64_t a1)
{
}

void type metadata accessor for NLTag(uint64_t a1)
{
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
}

void type metadata accessor for GEOPOICategory(uint64_t a1)
{
}

void sub_100008DC4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100008E0C()
{
  return sub_100008094(&qword_10014C568, type metadata accessor for GEOPOICategory);
}

uint64_t sub_100008E54()
{
  return sub_100008094(&qword_10014C570, type metadata accessor for GEOPOICategory);
}

uint64_t sub_100008E9C()
{
  return sub_100008094(&qword_10014C578, type metadata accessor for GEOPOICategory);
}

uint64_t sub_100008EE4()
{
  return sub_100008094(&qword_10014C580, type metadata accessor for NLTagScheme);
}

uint64_t sub_100008F2C()
{
  return sub_100008094(&qword_10014C588, type metadata accessor for NLTagScheme);
}

uint64_t sub_100008F74()
{
  return sub_100008094(&qword_10014C590, type metadata accessor for NLTagScheme);
}

uint64_t sub_100008FBC()
{
  return sub_100008094(&qword_10014C598, type metadata accessor for NLTag);
}

uint64_t sub_100009004()
{
  return sub_100008094(&qword_10014C5A0, type metadata accessor for NLTag);
}

uint64_t sub_10000904C()
{
  return sub_100008094(&qword_10014C5A8, type metadata accessor for NLTag);
}

uint64_t sub_1000090A8()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.notRemovedFromCloud = result;
  return result;
}

uint64_t *NSPredicate.notRemovedFromCloud.unsafeMutableAddressor()
{
  if (qword_10014BE30 != -1) {
    swift_once();
  }
  return &static NSPredicate.notRemovedFromCloud;
}

id static NSPredicate.notRemovedFromCloud.getter()
{
  return sub_10000A450(&qword_10014BE30, (void **)&static NSPredicate.notRemovedFromCloud);
}

uint64_t sub_10000916C()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.removedFromCloud = result;
  return result;
}

uint64_t *NSPredicate.removedFromCloud.unsafeMutableAddressor()
{
  if (qword_10014BE38 != -1) {
    swift_once();
  }
  return &static NSPredicate.removedFromCloud;
}

id static NSPredicate.removedFromCloud.getter()
{
  return sub_10000A450(&qword_10014BE38, (void **)&static NSPredicate.removedFromCloud);
}

uint64_t sub_100009230()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.notUploadedToCloud = result;
  return result;
}

uint64_t *NSPredicate.notUploadedToCloud.unsafeMutableAddressor()
{
  if (qword_10014BE40 != -1) {
    swift_once();
  }
  return &static NSPredicate.notUploadedToCloud;
}

id static NSPredicate.notUploadedToCloud.getter()
{
  return sub_10000A450(&qword_10014BE40, (void **)&static NSPredicate.notUploadedToCloud);
}

uint64_t sub_1000092F4()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.entryDateNotNil = result;
  return result;
}

uint64_t *NSPredicate.entryDateNotNil.unsafeMutableAddressor()
{
  if (qword_10014BE48 != -1) {
    swift_once();
  }
  return &static NSPredicate.entryDateNotNil;
}

id static NSPredicate.entryDateNotNil.getter()
{
  return sub_10000A450(&qword_10014BE48, (void **)&static NSPredicate.entryDateNotNil);
}

uint64_t sub_1000093B8()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.isDraftEntry = result;
  return result;
}

uint64_t *NSPredicate.isDraftEntry.unsafeMutableAddressor()
{
  if (qword_10014BE50 != -1) {
    swift_once();
  }
  return &static NSPredicate.isDraftEntry;
}

id static NSPredicate.isDraftEntry.getter()
{
  return sub_10000A450(&qword_10014BE50, (void **)&static NSPredicate.isDraftEntry);
}

uint64_t sub_100009484()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.isNotDraftEntry = result;
  return result;
}

uint64_t *NSPredicate.isNotDraftEntry.unsafeMutableAddressor()
{
  if (qword_10014BE58 != -1) {
    swift_once();
  }
  return &static NSPredicate.isNotDraftEntry;
}

id static NSPredicate.isNotDraftEntry.getter()
{
  return sub_10000A450(&qword_10014BE58, (void **)&static NSPredicate.isNotDraftEntry);
}

uint64_t sub_100009548()
{
  sub_10000A49C();
  uint64_t result = sub_100104FB8();
  static NSPredicate.isNotTipEntry = result;
  return result;
}

uint64_t *NSPredicate.isNotTipEntry.unsafeMutableAddressor()
{
  if (qword_10014BE60 != -1) {
    swift_once();
  }
  return &static NSPredicate.isNotTipEntry;
}

id static NSPredicate.isNotTipEntry.getter()
{
  return sub_10000A450(&qword_10014BE60, (void **)&static NSPredicate.isNotTipEntry);
}

uint64_t sub_10000960C()
{
  sub_10000A49C();
  sub_100007E0C(&qword_10014C648);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100108250;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_10000A4DC();
  *(void *)(v0 + 32) = 0x737465737361;
  *(void *)(v0 + 40) = 0xE600000000000000;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x6E65646469487369;
  *(void *)(v0 + 80) = 0xE800000000000000;
  uint64_t result = sub_100104FB8();
  static NSPredicate.unhiddenAssets = result;
  return result;
}

uint64_t *NSPredicate.unhiddenAssets.unsafeMutableAddressor()
{
  if (qword_10014BE68 != -1) {
    swift_once();
  }
  return &static NSPredicate.unhiddenAssets;
}

id static NSPredicate.unhiddenAssets.getter()
{
  return sub_10000A450(&qword_10014BE68, (void **)&static NSPredicate.unhiddenAssets);
}

uint64_t sub_100009740()
{
  sub_10000A49C();
  sub_100007E0C(&qword_10014C648);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100108250;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_10000A4DC();
  *(void *)(v0 + 32) = 0x676E654C74786574;
  *(void *)(v0 + 40) = 0xEA00000000006874;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x676E654C74786574;
  *(void *)(v0 + 80) = 0xEA00000000006874;
  uint64_t result = sub_100104FB8();
  static NSPredicate.hasNonEmptyText = result;
  return result;
}

uint64_t *NSPredicate.hasNonEmptyText.unsafeMutableAddressor()
{
  if (qword_10014BE70 != -1) {
    swift_once();
  }
  return &static NSPredicate.hasNonEmptyText;
}

id static NSPredicate.hasNonEmptyText.getter()
{
  return sub_10000A450(&qword_10014BE70, (void **)&static NSPredicate.hasNonEmptyText);
}

uint64_t sub_100009868()
{
  sub_10000A49C();
  sub_100007E0C(&qword_10014C648);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100108260;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_10000A4DC();
  *(void *)(v0 + 32) = 0x656C746974;
  *(void *)(v0 + 40) = 0xE500000000000000;
  uint64_t result = sub_100104FB8();
  static NSPredicate.hasNonEmptyTitle = result;
  return result;
}

uint64_t *NSPredicate.hasNonEmptyTitle.unsafeMutableAddressor()
{
  if (qword_10014BE78 != -1) {
    swift_once();
  }
  return &static NSPredicate.hasNonEmptyTitle;
}

id static NSPredicate.hasNonEmptyTitle.getter()
{
  return sub_10000A450(&qword_10014BE78, (void **)&static NSPredicate.hasNonEmptyTitle);
}

void sub_100009978()
{
  sub_100007E0C(&qword_10014C328);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100106D20;
  if (qword_10014BE30 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v0 + 32) = static NSPredicate.notRemovedFromCloud;
  uint64_t v2 = qword_10014BE58;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.isNotDraftEntry;
  *(void *)(v0 + 40) = static NSPredicate.isNotDraftEntry;
  uint64_t v5 = qword_10014BE60;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v0 + 48) = static NSPredicate.isNotTipEntry;
  sub_100104D48();
  sub_10000A49C();
  id v8 = v7;
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self andPredicateWithSubpredicates:isa];

  static NSPredicate.allJournalEntries = (uint64_t)v10;
}

uint64_t *NSPredicate.allJournalEntries.unsafeMutableAddressor()
{
  if (qword_10014BE80 != -1) {
    swift_once();
  }
  return &static NSPredicate.allJournalEntries;
}

id static NSPredicate.allJournalEntries.getter()
{
  return sub_10000A450(&qword_10014BE80, (void **)&static NSPredicate.allJournalEntries);
}

void sub_100009B64()
{
  sub_100007E0C(&qword_10014C328);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100106D20;
  if (qword_10014BE68 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.unhiddenAssets;
  *(void *)(v0 + 32) = static NSPredicate.unhiddenAssets;
  uint64_t v2 = qword_10014BE70;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.hasNonEmptyText;
  *(void *)(v0 + 40) = static NSPredicate.hasNonEmptyText;
  uint64_t v5 = qword_10014BE78;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)static NSPredicate.hasNonEmptyTitle;
  *(void *)(v0 + 48) = static NSPredicate.hasNonEmptyTitle;
  sub_100104D48();
  sub_10000A49C();
  id v8 = v7;
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self orPredicateWithSubpredicates:isa];

  static NSPredicate.entryNotBlank = (uint64_t)v10;
}

uint64_t *NSPredicate.entryNotBlank.unsafeMutableAddressor()
{
  if (qword_10014BE88 != -1) {
    swift_once();
  }
  return &static NSPredicate.entryNotBlank;
}

id static NSPredicate.entryNotBlank.getter()
{
  return sub_10000A450(&qword_10014BE88, (void **)&static NSPredicate.entryNotBlank);
}

void sub_100009D50()
{
  sub_100007E0C(&qword_10014C328);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100108270;
  if (qword_10014BE88 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)static NSPredicate.entryNotBlank;
  *(void *)(v0 + 32) = static NSPredicate.entryNotBlank;
  uint64_t v2 = qword_10014BE30;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)static NSPredicate.notRemovedFromCloud;
  *(void *)(v0 + 40) = static NSPredicate.notRemovedFromCloud;
  uint64_t v5 = qword_10014BE48;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)static NSPredicate.entryDateNotNil;
  *(void *)(v0 + 48) = static NSPredicate.entryDateNotNil;
  uint64_t v8 = qword_10014BE60;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  id v10 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v0 + 56) = static NSPredicate.isNotTipEntry;
  sub_100104D48();
  sub_10000A49C();
  id v11 = v10;
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [self andPredicateWithSubpredicates:isa];

  static NSPredicate.validEntries = (uint64_t)v13;
}

uint64_t *NSPredicate.validEntries.unsafeMutableAddressor()
{
  if (qword_10014BE90 != -1) {
    swift_once();
  }
  return &static NSPredicate.validEntries;
}

id static NSPredicate.validEntries.getter()
{
  return sub_10000A450(&qword_10014BE90, (void **)&static NSPredicate.validEntries);
}

uint64_t sub_100009F7C(uint64_t a1)
{
  return sub_10000A174(a1, 0x6F7250736465656ELL, 0xEF676E6973736563, &static NSPredicate.attachmentNeedsProcessing);
}

uint64_t *NSPredicate.attachmentNeedsProcessing.unsafeMutableAddressor()
{
  if (qword_10014BE98 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentNeedsProcessing;
}

id static NSPredicate.attachmentNeedsProcessing.getter()
{
  return sub_10000A450(&qword_10014BE98, (void **)&static NSPredicate.attachmentNeedsProcessing);
}

uint64_t sub_10000A018()
{
  sub_10000A49C();
  sub_100007E0C(&qword_10014C648);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100108250;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_10000A4DC();
  *(void *)(v0 + 32) = 0x6F7250736465656ELL;
  *(void *)(v0 + 40) = 0xEF676E6973736563;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 0x6F7250736465656ELL;
  *(void *)(v0 + 80) = 0xEF676E6973736563;
  uint64_t result = sub_100104FB8();
  static NSPredicate.attachmentDoesNotNeedsProcessing = result;
  return result;
}

uint64_t *NSPredicate.attachmentDoesNotNeedsProcessing.unsafeMutableAddressor()
{
  if (qword_10014BEA0 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentDoesNotNeedsProcessing;
}

id static NSPredicate.attachmentDoesNotNeedsProcessing.getter()
{
  return sub_10000A450(&qword_10014BEA0, (void **)&static NSPredicate.attachmentDoesNotNeedsProcessing);
}

uint64_t sub_10000A148(uint64_t a1)
{
  return sub_10000A174(a1, 0x45676E6965427369, 0xED00006465746964, &static NSPredicate.assetIsBeingEdited);
}

uint64_t sub_10000A174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_10000A49C();
  sub_100007E0C(&qword_10014C648);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100108260;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_10000A4DC();
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  uint64_t result = sub_100104FB8();
  *a4 = result;
  return result;
}

uint64_t *NSPredicate.assetIsBeingEdited.unsafeMutableAddressor()
{
  if (qword_10014BEA8 != -1) {
    swift_once();
  }
  return &static NSPredicate.assetIsBeingEdited;
}

id static NSPredicate.assetIsBeingEdited.getter()
{
  return sub_10000A450(&qword_10014BEA8, (void **)&static NSPredicate.assetIsBeingEdited);
}

uint64_t sub_10000A290()
{
  sub_10000A49C();
  sub_100007E0C(&qword_10014C648);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100108250;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_10000A4DC();
  strcpy((char *)(v0 + 32), "isBeingEdited");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 96) = &type metadata for String;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 64) = v1;
  strcpy((char *)(v0 + 72), "isBeingEdited");
  *(_WORD *)(v0 + 86) = -4864;
  uint64_t result = sub_100104FB8();
  static NSPredicate.attachmentAssetIsNotBeingEdited = result;
  return result;
}

uint64_t *NSPredicate.attachmentAssetIsNotBeingEdited.unsafeMutableAddressor()
{
  if (qword_10014BEB0 != -1) {
    swift_once();
  }
  return &static NSPredicate.attachmentAssetIsNotBeingEdited;
}

id static NSPredicate.attachmentAssetIsNotBeingEdited.getter()
{
  return sub_10000A450(&qword_10014BEB0, (void **)&static NSPredicate.attachmentAssetIsNotBeingEdited);
}

uint64_t sub_10000A3C0(uint64_t a1)
{
  return sub_10000A174(a1, 0x6E65646469487369, 0xE800000000000000, &static NSPredicate.assetIsHidden);
}

uint64_t *NSPredicate.assetIsHidden.unsafeMutableAddressor()
{
  if (qword_10014BEB8 != -1) {
    swift_once();
  }
  return &static NSPredicate.assetIsHidden;
}

id static NSPredicate.assetIsHidden.getter()
{
  return sub_10000A450(&qword_10014BEB8, (void **)&static NSPredicate.assetIsHidden);
}

id sub_10000A450(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  id v3 = *a2;

  return v3;
}

unint64_t sub_10000A49C()
{
  unint64_t result = qword_10014C640;
  if (!qword_10014C640)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10014C640);
  }
  return result;
}

unint64_t sub_10000A4DC()
{
  unint64_t result = qword_10014C650;
  if (!qword_10014C650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C650);
  }
  return result;
}

BOOL static DataConfig.UnitsCounterType.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void DataConfig.UnitsCounterType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int DataConfig.UnitsCounterType.hashValue.getter(unsigned __int8 a1)
{
  return sub_100105928();
}

BOOL sub_10000A5B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000A5C4()
{
  Swift::UInt v1 = *v0;
  sub_1001058D8();
  sub_1001058E8(v1);
  return sub_100105928();
}

void sub_10000A60C()
{
  sub_1001058E8(*v0);
}

Swift::Int sub_10000A638()
{
  Swift::UInt v1 = *v0;
  sub_1001058D8();
  sub_1001058E8(v1);
  return sub_100105928();
}

unint64_t sub_10000A680()
{
  unint64_t result = qword_10014C658[0];
  if (!qword_10014C658[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10014C658);
  }
  return result;
}

unsigned char *_s16UnitsCounterTypeOwCP(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s16UnitsCounterTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16UnitsCounterTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000A83CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10000A864(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000A870(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DataConfig.UnitsCounterType()
{
  return &type metadata for DataConfig.UnitsCounterType;
}

uint64_t sub_10000A88C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10000A8EC()
{
  sub_100007E0C(&qword_10014C718);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = [objc_allocWithZone((Class)sub_100007E0C(&qword_10014C720)) init];
  sub_100007E0C(&qword_10014C728);
  uint64_t result = swift_allocObject();
  v0[3] = result;
  v0[4] = 0xD000000000000011;
  v0[5] = 0x8000000100110960;
  qword_100162DD8 = (uint64_t)v0;
  return result;
}

uint64_t sub_10000A984()
{
  uint64_t v0 = sub_1001050A8();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100105098();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100104808();
  __chkstk_darwin(v5 - 8);
  sub_10000ABA8();
  sub_1001047F8();
  sub_100105088();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t result = sub_1001050E8();
  qword_100162DE0 = result;
  return result;
}

uint64_t sub_10000AB2C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10000AB5C()
{
  sub_10000AB2C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageCache()
{
  return sub_10000ABE8();
}

unint64_t sub_10000ABA8()
{
  unint64_t result = qword_10014C710;
  if (!qword_10014C710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10014C710);
  }
  return result;
}

uint64_t sub_10000ABE8()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10000AC18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E0C(&qword_10014C828);
  uint64_t v2 = sub_100105618();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100010808(v6, (uint64_t)v15, &qword_10014C830);
    unint64_t result = sub_10000B574((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1000103D0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000AD5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E0C(&qword_10014C800);
  uint64_t v2 = (void *)sub_100105618();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_10000B5B8(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000AE60(uint64_t a1)
{
  return sub_10000B0E0(a1, &qword_10014C870, &qword_10014C878);
}

unint64_t sub_10000AE74(uint64_t a1)
{
  return sub_10000B0E0(a1, &qword_10014C7E0, &qword_10014C7E8);
}

unint64_t sub_10000AE88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E0C(&qword_10014C820);
  uint64_t v2 = (void *)sub_100105618();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_10000B7C0((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000AF88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E0C(&qword_10014C808);
  uint64_t v2 = sub_100105618();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100010808(v6, (uint64_t)&v13, &qword_10014C810);
    uint64_t v7 = v13;
    unint64_t result = sub_10000B7C0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1000103D0(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000B0B8(uint64_t a1)
{
  return sub_10000B0E0(a1, &qword_10014C7F0, &qword_10014C7F8);
}

unint64_t sub_10000B0CC(uint64_t a1)
{
  return sub_10000B0E0(a1, &qword_10014C850, &qword_10014C858);
}

unint64_t sub_10000B0E0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v6 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E0C(a2);
  uint64_t v5 = sub_100105618();
  uint64_t v6 = (void *)v5;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  uint64_t v8 = v5 + 64;
  uint64_t v9 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100010808(v9, (uint64_t)&v16, a3);
    uint64_t v10 = v16;
    unint64_t result = sub_10000B730(v16);
    if (v12) {
      break;
    }
    *(void *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v6[6] + 8 * result) = v10;
    unint64_t result = (unint64_t)sub_1000103D0(&v17, (_OWORD *)(v6[7] + 32 * result));
    uint64_t v13 = v6[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6[2] = v15;
    v9 += 40;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t Journaling.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MapManager()
{
  return self;
}

uint64_t sub_10000B23C(uint64_t a1, uint64_t a2)
{
  return sub_10000B264(a1, a2, &qword_10014C7C8);
}

uint64_t sub_10000B250(uint64_t a1, uint64_t a2)
{
  return sub_10000B264(a1, a2, (unint64_t *)&qword_10014C8A0);
}

uint64_t sub_10000B264(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return sub_100105058();
}

unint64_t sub_10000B500(double a1, double a2)
{
  sub_1001058D8();
  CLLocationCoordinate2D.hash(into:)(a1, a2);
  Swift::Int v4 = sub_100105928();

  return sub_10000DD04(v4, a1, a2);
}

unint64_t sub_10000B574(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_100105428(*(void *)(v2 + 40));

  return sub_10000DD78(a1, v4);
}

unint64_t sub_10000B5B8(unsigned __int8 a1)
{
  sub_1001058D8();
  sub_100104BC8();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_100105928();

  return sub_10000DE40(a1, v2);
}

unint64_t sub_10000B6E8(uint64_t a1)
{
  uint64_t v2 = sub_1001058C8();

  return sub_10000E0B8(a1, v2);
}

unint64_t sub_10000B730(uint64_t a1)
{
  sub_100104B78();
  sub_1001058D8();
  sub_100104BC8();
  Swift::Int v2 = sub_100105928();
  swift_bridgeObjectRelease();
  return sub_10000E3DC(a1, v2);
}

unint64_t sub_10000B7C0(uint64_t a1)
{
  sub_1001058D8();
  type metadata accessor for CFString(0);
  sub_100010490();
  sub_100103C08();
  Swift::Int v2 = sub_100105928();

  return sub_10000E154(a1, v2);
}

unint64_t sub_10000B844(double a1, double a2)
{
  sub_1001058D8();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_100105908(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_100105908(v5);
  Swift::Int v6 = sub_100105928();

  return sub_10000DD04(v6, a1, a2);
}

unint64_t sub_10000B8D0(char a1)
{
  char v2 = a1 & 1;
  sub_1001058D8();
  sub_1001058E8(a1 & 1);
  Swift::Int v3 = sub_100105928();

  return sub_10000E280(v2, v3);
}

unint64_t sub_10000B940(unsigned __int8 a1)
{
  sub_1001058D8();
  sub_1001058E8(a1);
  Swift::Int v2 = sub_100105928();

  return sub_10000E33C(a1, v2);
}

unint64_t sub_10000B9AC(unsigned __int8 a1)
{
  sub_1001058D8();
  sub_10003E020();
  Swift::Int v2 = sub_100105928();

  return sub_10000E554(a1, v2);
}

unint64_t sub_10000BA18(void *a1)
{
  sub_1001058D8();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      sub_1001058E8(v2);
      break;
    default:
      sub_1001058E8(4uLL);
      sub_100104B78();
      id v3 = a1;
      sub_100104BC8();
      swift_bridgeObjectRelease();
      sub_10001087C(a1);
      break;
  }
  Swift::Int v4 = sub_100105928();

  return sub_10000E870(a1, v4);
}

unint64_t sub_10000BB28(uint64_t a1)
{
  sub_100104B78();
  sub_1001058D8();
  sub_100104BC8();
  Swift::Int v2 = sub_100105928();
  swift_bridgeObjectRelease();

  return sub_10000E3DC(a1, v2);
}

uint64_t sub_10000BBBC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C7D8);
  char v43 = a2;
  uint64_t result = sub_100105608();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v41 = (void *)(v5 + 64);
    uint64_t v42 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v23 >= v40) {
          goto LABEL_39;
        }
        unint64_t v24 = v41[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_39;
          }
          unint64_t v24 = v41[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_39:
              if ((v43 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
              if (v39 >= 64) {
                bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v41 = -1 << v39;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v40) {
                  goto LABEL_39;
                }
                unint64_t v24 = v41[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v30 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v31 = *(void *)(v5 + 56) + 104 * v22;
      long long v47 = *(_OWORD *)v31;
      long long v48 = *(_OWORD *)(v31 + 16);
      long long v49 = v30;
      char v32 = *(unsigned char *)(v31 + 32);
      uint64_t v33 = *(void *)(v31 + 40);
      uint64_t v34 = *(void *)(v31 + 48);
      char v46 = *(unsigned char *)(v31 + 56);
      uint64_t v35 = *(void *)(v31 + 72);
      uint64_t v36 = *(void *)(v31 + 80);
      uint64_t v37 = *(void *)(v31 + 96);
      uint64_t v44 = *(void *)(v31 + 88);
      uint64_t v45 = *(void *)(v31 + 64);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v38 = (id)v48;
        swift_bridgeObjectRetain();
      }
      sub_1001058D8();
      if ((v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v49;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      sub_100105908(v13);
      if ((*((void *)&v49 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = *((void *)&v49 + 1);
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      sub_100105908(v14);
      uint64_t result = sub_100105928();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        long long v19 = v49;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        long long v19 = v49;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
      uint64_t v20 = *(void *)(v7 + 56) + 104 * v18;
      *(_OWORD *)uint64_t v20 = v47;
      *(_OWORD *)(v20 + 16) = v48;
      *(unsigned char *)(v20 + 32) = v32;
      *(void *)(v20 + 40) = v33;
      *(void *)(v20 + 48) = v34;
      *(unsigned char *)(v20 + 56) = v46;
      *(void *)(v20 + 64) = v45;
      *(void *)(v20 + 72) = v35;
      *(void *)(v20 + 80) = v36;
      *(void *)(v20 + 88) = v44;
      *(void *)(v20 + 96) = v37;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v42;
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10000BF5C(uint64_t a1, char a2)
{
  return sub_10000BF74(a1, a2, &qword_10014C868);
}

uint64_t sub_10000BF68(uint64_t a1, char a2)
{
  return sub_10000BF74(a1, a2, &qword_10014C870);
}

uint64_t sub_10000BF74(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::Int v4 = v3;
  uint64_t v6 = *v3;
  sub_100007E0C(a3);
  char v36 = a2;
  uint64_t v7 = sub_100105608();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    long long v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v6 + 48) + 8 * v17);
    int64_t v23 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v17);
    if (v36)
    {
      sub_1000103D0(v23, v37);
    }
    else
    {
      sub_1000105E4((uint64_t)v23, (uint64_t)v37);
      id v24 = v22;
    }
    sub_100104B78();
    sub_1001058D8();
    sub_100104BC8();
    Swift::Int v25 = sub_100105928();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v8 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_1000103D0(v37, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  long long v19 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v19 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *Swift::Int v4 = v8;
  return result;
}

uint64_t sub_10000C2AC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C848);
  uint64_t result = sub_100105608();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v23 >= v12) {
          goto LABEL_39;
        }
        unint64_t v24 = v33[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v12) {
            goto LABEL_39;
          }
          unint64_t v24 = v33[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_46;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v32;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v33[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v12) {
                  goto LABEL_39;
                }
                unint64_t v24 = v33[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      unint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v22);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      sub_1001058D8();
      if ((v34 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = v34;
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      sub_100105908(v14);
      if ((*((void *)&v34 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v15 = *((void *)&v34 + 1);
      }
      else {
        Swift::UInt64 v15 = 0;
      }
      sub_100105908(v15);
      uint64_t result = sub_100105928();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v34;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v34;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v19) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_10000C5A8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C840);
  uint64_t v6 = (void *)sub_100105608();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_10000DA2C(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_10000C78C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C838);
  uint64_t result = sub_100105608();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v31 = -1 << v29;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_1001058D8();
      sub_1001058E8(v26);
      uint64_t result = sub_100105928();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10000CA58(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C890);
  uint64_t v6 = sub_100105608();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  char v33 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v34 = v2;
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    sub_1001058D8();
    sub_100104BC8();
    swift_bridgeObjectRelease();
    Swift::Int v14 = sub_100105928();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v15) >> 6;
    while (++v17 != v26 || (v25 & 1) == 0)
    {
      BOOL v27 = v17 == v26;
      if (v17 == v26) {
        unint64_t v17 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v12 + 8 * v17);
      if (v28 != -1)
      {
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
        *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
        *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
        ++*(void *)(v7 + 16);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    JUMPOUT(0x10000CE24);
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_40;
  }
  if (v21 >= v11)
  {
    swift_release();
    id v3 = v34;
    char v22 = (void *)(v5 + 64);
    if (v33)
    {
LABEL_35:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *char v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_32;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_41;
          }
          if (v13 >= v11) {
            goto LABEL_32;
          }
          unint64_t v23 = *(void *)(v35 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_32:
    swift_release();
    id v3 = v34;
    if (v33) {
      goto LABEL_35;
    }
  }
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10000CE48(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C8A8);
  uint64_t result = sub_100105608();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    long long v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              id v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_1001058C8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10000D0F0(uint64_t a1, int a2)
{
  return sub_10000D180(a1, a2, _s14descr100137F61O4YearVMa, &qword_10014C8B8, _s14descr100137F61O4YearVMa, _s14descr100137F61O4YearVMa);
}

uint64_t sub_10000D138(uint64_t a1, int a2)
{
  return sub_10000D180(a1, a2, _s14descr100137F61O5MonthVMa, &qword_10014C8B0, _s14descr100137F61O5MonthVMa, _s14descr100137F61O5MonthVMa);
}

uint64_t sub_10000D180(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  char v43 = a6;
  uint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v44 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  int64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = *v6;
  sub_100007E0C(a4);
  int v45 = a2;
  uint64_t result = sub_100105608();
  uint64_t v16 = result;
  if (*(void *)(v14 + 16))
  {
    int64_t v17 = 0;
    uint64_t v18 = *(void *)(v14 + 64);
    uint64_t v42 = (void *)(v14 + 64);
    uint64_t v19 = 1 << *(unsigned char *)(v14 + 32);
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v21 = v20 & v18;
    int64_t v40 = v9;
    int64_t v41 = (unint64_t)(v19 + 63) >> 6;
    uint64_t v22 = result + 64;
    while (1)
    {
      if (v21)
      {
        unint64_t v24 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        unint64_t v25 = v24 | (v17 << 6);
      }
      else
      {
        int64_t v26 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v42;
        if (v26 >= v41) {
          goto LABEL_34;
        }
        unint64_t v27 = v42[v26];
        ++v17;
        if (!v27)
        {
          int64_t v17 = v26 + 1;
          if (v26 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v27 = v42[v17];
          if (!v27)
          {
            int64_t v28 = v26 + 2;
            if (v28 >= v41)
            {
LABEL_34:
              if ((v45 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v9 = v40;
                goto LABEL_41;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v14 + 32);
              if (v39 >= 64) {
                bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v42 = -1 << v39;
              }
              uint64_t v9 = v40;
              *(void *)(v14 + 16) = 0;
              break;
            }
            unint64_t v27 = v42[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v17 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_43;
                }
                if (v17 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v27 = v42[v17];
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v28;
          }
        }
LABEL_21:
        unint64_t v21 = (v27 - 1) & v27;
        unint64_t v25 = __clz(__rbit64(v27)) + (v17 << 6);
      }
      uint64_t v29 = *(void *)(*(void *)(v14 + 48) + 8 * v25);
      uint64_t v30 = *(void *)(v44 + 72);
      uint64_t v31 = *(void *)(v14 + 56) + v30 * v25;
      if (v45) {
        sub_1000108F4(v31, (uint64_t)v13, a5);
      }
      else {
        sub_10001088C(v31, (uint64_t)v13, v43);
      }
      uint64_t result = sub_1001058C8();
      uint64_t v32 = -1 << *(unsigned char *)(v16 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v23 = __clz(__rbit64((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v22 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v23 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(void *)(*(void *)(v16 + 48) + 8 * v23) = v29;
      uint64_t result = sub_1000108F4((uint64_t)v13, *(void *)(v16 + 56) + v30 * v23, a5);
      ++*(void *)(v16 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v9 = v16;
  return result;
}

unint64_t sub_10000D4E8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C898);
  uint64_t v6 = (void *)sub_100105608();
  if (*(void *)(v5 + 16))
  {
    unint64_t v25 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              id v3 = v25;
              if (a2)
              {
                uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
                if (v24 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v24;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = *(void **)(*(void *)(v5 + 48) + 8 * v15);
      uint64_t v20 = *(void *)(v5 + 56) + 16 * v15;
      unint64_t v21 = *(void **)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      if ((a2 & 1) == 0)
      {
        sub_10001086C(v19);
        id v23 = v21;
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_10000DBA0(v19, (uint64_t)v21, v22, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_10000D6F0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_100007E0C(&qword_10014C860);
  char v35 = a2;
  uint64_t v6 = sub_100105608();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1000103D0(v22, v36);
    }
    else
    {
      sub_1000105E4((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_100104B78();
    sub_1001058D8();
    sub_100104BC8();
    Swift::Int v24 = sub_100105928();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1000103D0(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_10000DA2C(char a1, uint64_t a2, void *a3)
{
  sub_1001058D8();
  sub_100104BC8();
  swift_bridgeObjectRelease();
  sub_100105928();
  unint64_t result = sub_1001053B8();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_10000DBA0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1001058D8();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v8 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v8 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v8 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v8 = 3;
LABEL_7:
      sub_1001058E8(v8);
      break;
    default:
      sub_1001058E8(4uLL);
      sub_100104B78();
      id v9 = a1;
      sub_100104BC8();
      swift_bridgeObjectRelease();
      sub_10001087C(a1);
      break;
  }
  sub_100105928();
  unint64_t result = sub_1001053B8();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a1;
  uint64_t v11 = (void *)(a4[7] + 16 * result);
  void *v11 = a2;
  v11[1] = a3;
  ++a4[2];
  return result;
}

unint64_t sub_10000DD04(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10000DD78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000103E0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_100105438();
      sub_10001043C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10000DE40(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 0x656772614C78;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x69576D756964656DLL;
          unint64_t v7 = 0xEA00000000006564;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656772616CLL;
          break;
        case 3:
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6C6C616D73;
          break;
        case 5:
          unint64_t v7 = 0xEA00000000006E65;
          uint64_t v8 = 0x657263536C6C7566;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656772614C78;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEA00000000006564;
          if (v8 == 0x69576D756964656DLL) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x656772616CLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          if (v8 != 0x6D756964656DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6C6C616D73;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000006E65;
          if (v8 != 0x657263536C6C7566) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_1001057F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10000E0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10000E154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_100010490();
    id v7 = v6;
    char v8 = sub_100103BF8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_100103BF8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10000E280(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10000E33C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10000E3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_100104B78();
    uint64_t v8 = v7;
    if (v6 == sub_100104B78() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1001057F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_100104B78();
          uint64_t v15 = v14;
          if (v13 == sub_100104B78() && v15 == v16) {
            break;
          }
          char v18 = sub_1001057F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10000E554(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x6F746F6870;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x6F65646976;
          break;
        case 2:
          uint64_t v8 = 0x6F69647561;
          break;
        case 3:
          uint64_t v8 = 0x616964656DLL;
          break;
        case 4:
          uint64_t v8 = 0x6563616C70;
          break;
        case 5:
          uint64_t v8 = 0x61737265766E6F63;
          unint64_t v7 = 0xEC0000006E6F6974;
          break;
        case 6:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7974697669746361;
          break;
        case 7:
          uint64_t v8 = 0x697463656C666572;
          unint64_t v7 = 0xEA00000000006E6FLL;
          break;
        case 8:
          uint64_t v8 = 0x4D664F6574617473;
          unint64_t v7 = 0xEB00000000646E69;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x6F746F6870;
      switch(v6)
      {
        case 1:
          uint64_t v11 = 1701079414;
          goto LABEL_15;
        case 2:
          uint64_t v11 = 1768191329;
LABEL_15:
          if (v8 != (v11 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 3:
          if (v8 != 0x616964656DLL) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 4:
          if (v8 != 0x6563616C70) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 5:
          unint64_t v9 = 0xEC0000006E6F6974;
          if (v8 != 0x61737265766E6F63) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 6:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x7974697669746361) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 7:
          uint64_t v10 = 0x697463656C666572;
          unint64_t v9 = 0xEA00000000006E6FLL;
          goto LABEL_26;
        case 8:
          unint64_t v9 = 0xEB00000000646E69;
          if (v8 != 0x4D664F6574617473) {
            goto LABEL_28;
          }
          goto LABEL_27;
        default:
LABEL_26:
          if (v8 != v10) {
            goto LABEL_28;
          }
LABEL_27:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_28:
          char v12 = sub_1001057F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10000E870(void *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (2)
    {
      unint64_t v7 = *(void **)(*(void *)(v2 + 48) + 8 * v4);
      switch((unint64_t)v7)
      {
        case 0uLL:
          if (a1) {
            goto LABEL_4;
          }
          break;
        case 1uLL:
          if (a1 != (void *)1) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (a1 != (void *)2) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          if (a1 != (void *)3) {
            goto LABEL_4;
          }
          break;
        default:
          if ((unint64_t)a1 >= 4)
          {
            uint64_t v8 = sub_100104B78();
            uint64_t v10 = v9;
            if (v8 == sub_100104B78() && v10 == v11)
            {
              sub_10001086C(v7);
              sub_10001086C(v7);
              sub_10001086C(a1);
              swift_bridgeObjectRelease_n();
              sub_10001087C(a1);
              sub_10001087C(v7);
              sub_10001087C(v7);
              return v4;
            }
            char v13 = sub_1001057F8();
            sub_10001086C(v7);
            sub_10001086C(v7);
            sub_10001086C(a1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10001087C(a1);
            sub_10001087C(v7);
            sub_10001087C(v7);
            if (v13) {
              return v4;
            }
          }
LABEL_4:
          unint64_t v4 = (v4 + 1) & v6;
          if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
            continue;
          }
          break;
      }
      break;
    }
  }
  return v4;
}

void *sub_10000EA48()
{
  sub_100007E0C(&qword_10014C7D8);
  char v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1001055F8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v35 = v3;
    return result;
  }
  unint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    unint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v5 + 8 * v8);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v33 - 1) & v33;
    unint64_t v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = 104 * v14;
    uint64_t v17 = *(void *)(v1 + 56) + v16;
    char v18 = *(unsigned char *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 40);
    uint64_t v20 = *(void *)(v17 + 48);
    char v21 = *(unsigned char *)(v17 + 56);
    uint64_t v23 = *(void *)(v17 + 64);
    uint64_t v22 = *(void *)(v17 + 72);
    uint64_t v24 = *(void *)(v17 + 80);
    uint64_t v25 = *(void *)(v17 + 88);
    uint64_t v26 = *(void *)(v17 + 96);
    long long v28 = *(_OWORD *)v17;
    long long v27 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)(*(void *)(v3 + 48) + v15) = *(_OWORD *)(*(void *)(v1 + 48) + v15);
    uint64_t v29 = *(void *)(v3 + 56) + v16;
    *(_OWORD *)uint64_t v29 = v28;
    *(_OWORD *)(v29 + 16) = v27;
    *(unsigned char *)(v29 + 32) = v18;
    *(void *)(v29 + 40) = v19;
    *(void *)(v29 + 48) = v20;
    *(unsigned char *)(v29 + 56) = v21;
    *(void *)(v29 + 64) = v23;
    *(void *)(v29 + 72) = v22;
    *(void *)(v29 + 80) = v24;
    *(void *)(v29 + 88) = v25;
    *(void *)(v29 + 96) = v26;
    BOOL v30 = (void *)v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v30;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v12) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v5 + 8 * v34);
  if (v33)
  {
    int64_t v8 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v8);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10000EC5C()
{
  return sub_10000F948(&qword_10014C868);
}

id sub_10000EC68()
{
  return sub_10000F948(&qword_10014C870);
}

id sub_10000EC74()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_10014C848);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001055F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    char v18 = *(void **)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10000EE1C()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_10014C840);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001055F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10000EFC0()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_10014C838);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001055F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10000F164()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_10014C890);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001055F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10000F2F4()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_10014C8A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001055F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10000F484()
{
  return sub_10000F514(_s14descr100137F61O4YearVMa, &qword_10014C8B8, _s14descr100137F61O4YearVMa, _s14descr100137F61O4YearVMa);
}

void *sub_10000F4CC()
{
  return sub_10000F514(_s14descr100137F61O5MonthVMa, &qword_10014C8B0, _s14descr100137F61O5MonthVMa, _s14descr100137F61O5MonthVMa);
}

void *sub_10000F514(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  int64_t v32 = a3;
  unint64_t v33 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v31 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  int64_t v9 = (char *)&v30 - v8;
  sub_100007E0C(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_1001055F8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  BOOL v30 = v6;
  id result = (void *)(v11 + 64);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v10 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v27);
    ++v17;
    if (!v28)
    {
      int64_t v17 = v27 + 1;
      if (v27 + 1 >= v21) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v14 + 8 * v17);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v23 = __clz(__rbit64(v28)) + (v17 << 6);
LABEL_12:
    uint64_t v24 = 8 * v23;
    uint64_t v25 = *(void *)(*(void *)(v10 + 48) + 8 * v23);
    unint64_t v26 = *(void *)(v31 + 72) * v23;
    sub_10001088C(*(void *)(v10 + 56) + v26, (uint64_t)v9, v32);
    *(void *)(*(void *)(v12 + 48) + v24) = v25;
    id result = (void *)sub_1000108F4((uint64_t)v9, *(void *)(v12 + 56) + v26, v33);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v21)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v14 + 8 * v29);
  if (v28)
  {
    int64_t v17 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v17 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v17);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10000F770()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_10014C898);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001055F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v23;
    sub_10001086C(v17);
    id v19 = (id)v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10000F93C()
{
  return sub_10000F948(&qword_10014C860);
}

id sub_10000F948(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100007E0C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1001055F8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_1000105E4(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_1000103D0(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_10000FB08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100007E0C(&qword_10014C7D8);
    uint64_t v3 = (void *)sub_100105618();
    for (unint64_t i = (double *)(a1 + 144); ; i += 15)
    {
      uint64_t v24 = v1;
      double v5 = *(i - 14);
      double v6 = *(i - 13);
      long long v25 = *((_OWORD *)i - 6);
      long long v26 = *((_OWORD *)i - 5);
      char v7 = *((unsigned char *)i - 64);
      uint64_t v9 = *((void *)i - 7);
      uint64_t v8 = *((void *)i - 6);
      char v10 = *((unsigned char *)i - 40);
      uint64_t v12 = *((void *)i - 4);
      uint64_t v11 = *((void *)i - 3);
      uint64_t v13 = *((void *)i - 2);
      uint64_t v14 = *((void *)i - 1);
      double v15 = *i;
      unint64_t result = sub_10000B500(v5, v6);
      if (v17) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v18 = (double *)(v3[6] + 16 * result);
      double *v18 = v5;
      v18[1] = v6;
      uint64_t v19 = v3[7] + 104 * result;
      *(_OWORD *)uint64_t v19 = v25;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v7;
      *(void *)(v19 + 40) = v9;
      *(void *)(v19 + 48) = v8;
      *(unsigned char *)(v19 + 56) = v10;
      *(void *)(v19 + 64) = v12;
      *(void *)(v19 + 72) = v11;
      *(void *)(v19 + 80) = v13;
      *(void *)(v19 + 88) = v14;
      *(double *)(v19 + 96) = v15;
      uint64_t v20 = v3[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_10;
      }
      v3[2] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = (id)v26;
      swift_bridgeObjectRetain();
      uint64_t v1 = v24 - 1;
      if (v24 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_10000FC80(uint64_t a1)
{
  uint64_t v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v3 = *((void *)v2 - 1);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v65 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v7 = (uint64_t *)((char *)&v58 - v6);
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v9 = sub_10000FB08((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  uint64_t v59 = v12;
  while (1)
  {
    sub_10001088C(v11, (uint64_t)v7, _s10VisitAssetC9VisitDataVMa);
    double v15 = (double *)((char *)v7 + v2[10]);
    if ((_BYTE)v15[1]) {
      goto LABEL_4;
    }
    unint64_t v16 = (double *)((char *)v7 + v2[11]);
    if ((_BYTE)v16[1]) {
      goto LABEL_4;
    }
    double v17 = *v15;
    double v18 = *v16;
    if (*(void *)(v9 + 16))
    {
      sub_10000B500(v17, *v16);
      if (v19) {
        goto LABEL_4;
      }
    }
    uint64_t v20 = (uint64_t *)((char *)v7 + v2[13]);
    unint64_t v21 = v20[1];
    int v64 = *((unsigned __int8 *)v7 + v2[14]);
    if (v21 >> 60 == 15)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v23 = *v20;
      sub_10001030C(*v20, v21);
      uint64_t v22 = (void *)sub_10000B264(v23, v21, &qword_10014C7C8);
      sub_100010364(v23, v21);
    }
    uint64_t v24 = (char *)v7 + v2[16];
    uint64_t v25 = *(void *)v24;
    int v26 = v24[8];
    sub_10001088C((uint64_t)v7, v65, _s10VisitAssetC9VisitDataVMa);
    if (v26 == 1)
    {
      int64_t v27 = (uint64_t *)(v65 + v2[15]);
      if (v27[1])
      {
        uint64_t v25 = 0;
        if (v22)
        {
          id v28 = [v22 placemark];
          id v29 = [v28 location];

          if (v29)
          {
            [v29 horizontalAccuracy];
            uint64_t v25 = v30;
          }
        }
      }
      else
      {
        uint64_t v25 = *v27;
      }
    }
    sub_1000102B0(v65);
    uint64_t v31 = (void *)v7[1];
    v63 = v8;
    if (v31)
    {
      uint64_t v66 = *v7;
      int64_t v32 = v31;
    }
    else
    {
      uint64_t v66 = 0;
      int64_t v32 = (void *)0xE000000000000000;
    }
    id v33 = v22;
    swift_bridgeObjectRetain();
    id v62 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67 = (void *)v9;
    unint64_t v36 = sub_10000B500(v17, v18);
    uint64_t v37 = *(void *)(v9 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v9 + 24) >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_10000EA48();
      }
    }
    else
    {
      sub_10000BBBC(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_10000B500(v17, v18);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_39;
      }
      unint64_t v36 = v41;
    }
    char v43 = v64 & 1;
    uint64_t v44 = v67;
    v60 = v22;
    unint64_t v61 = (unint64_t)v67;
    v64 &= 1u;
    if (v40)
    {
      uint64_t v45 = v67[7] + 104 * v36;
      char v46 = v2;
      long long v47 = *(void **)(v45 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v2 = v46;
      char v48 = v64;
      swift_bridgeObjectRelease();
      *(double *)uint64_t v45 = v17;
      *(double *)(v45 + 8) = v18;
      *(void *)(v45 + 16) = v22;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = 1;
      *(void *)(v45 + 40) = v66;
      *(void *)(v45 + 48) = v32;
      *(unsigned char *)(v45 + 56) = v48;
      *(void *)(v45 + 64) = 0;
      *(void *)(v45 + 72) = 0;
      *(void *)(v45 + 80) = v25;
      *(void *)(v45 + 88) = 0;
      *(void *)(v45 + 96) = 0xE000000000000000;
    }
    else
    {
      v67[(v36 >> 6) + 8] |= 1 << v36;
      long long v49 = (double *)(v44[6] + 16 * v36);
      *long long v49 = v17;
      v49[1] = v18;
      uint64_t v50 = v44[7] + 104 * v36;
      *(double *)uint64_t v50 = v17;
      *(double *)(v50 + 8) = v18;
      *(void *)(v50 + 16) = v22;
      *(void *)(v50 + 24) = 0;
      *(unsigned char *)(v50 + 32) = 1;
      *(void *)(v50 + 40) = v66;
      *(void *)(v50 + 48) = v32;
      *(unsigned char *)(v50 + 56) = v43;
      *(void *)(v50 + 64) = 0;
      *(void *)(v50 + 72) = 0;
      *(void *)(v50 + 80) = v25;
      *(void *)(v50 + 88) = 0;
      *(void *)(v50 + 96) = 0xE000000000000000;
      uint64_t v51 = v44[2];
      BOOL v52 = __OFADD__(v51, 1);
      uint64_t v53 = v51 + 1;
      if (v52) {
        goto LABEL_38;
      }
      v44[2] = v53;
    }
    swift_bridgeObjectRelease();
    id v54 = v62;
    id v62 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1000B7290(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v9 = v61;
    unint64_t v56 = *((void *)v8 + 2);
    unint64_t v55 = *((void *)v8 + 3);
    if (v56 >= v55 >> 1) {
      uint64_t v8 = sub_1000B7290((double *)(v55 > 1), v56 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v56 + 1;
    uint64_t v13 = &v8[13 * v56];
    v13[4] = v17;
    v13[5] = v18;
    *((void *)v13 + 6) = v60;
    v13[7] = 0.0;
    *((unsigned char *)v13 + 64) = 1;
    id v14 = v62;
    *((void *)v13 + 9) = v66;
    *((void *)v13 + 10) = v14;
    *((unsigned char *)v13 + 88) = v64;
    v13[12] = 0.0;
    v13[13] = 0.0;
    *((void *)v13 + 14) = v25;
    v13[15] = 0.0;
    v13[16] = -2.68156159e154;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v59;
LABEL_4:
    sub_1000102B0((uint64_t)v7);
    v11 += v12;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = sub_100105878();
  __break(1u);
  return result;
}

BOOL sub_100010230(double a1, double a2, double a3, double a4)
{
  if (a1 < -90.0 || a1 > 90.0 || a2 < -180.0 || a2 > 180.0) {
    return 0;
  }
  BOOL v7 = a4 >= 0.0;
  if (a4 > 360.0) {
    BOOL v7 = 0;
  }
  if (a3 > 180.0) {
    BOOL v7 = 0;
  }
  return a3 >= 0.0 && v7;
}

uint64_t sub_1000102B0(uint64_t a1)
{
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001030C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100010364(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100010378(a1, a2);
  }
  return a1;
}

uint64_t sub_100010378(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

_OWORD *sub_1000103D0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1000103E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001043C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100010490()
{
  unint64_t result = qword_10014C818;
  if (!qword_10014C818)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C818);
  }
  return result;
}

unint64_t sub_1000104E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100007E0C(&qword_10014C838);
  uint64_t v3 = (void *)sub_100105618();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t result = sub_10000B8D0(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_10000B8D0(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000105E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100010640(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014C880);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_100007E0C(&qword_10014C888);
    char v7 = (void *)sub_100105618();
    uint64_t v8 = &v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_100010808(v9, (uint64_t)v5, &qword_10014C880);
      unsigned __int8 v11 = *v5;
      unint64_t result = sub_10000B940(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v7[6] + result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = sub_100103358();
      unint64_t result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 32))(v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v8, v16);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_100010808(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007E0C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_10001086C(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

void sub_10001087C(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

uint64_t sub_10001088C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000108F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10001095C()
{
  unint64_t result = 0x6E6F697461727564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7469736E65746E69;
      break;
    case 2:
      unint64_t result = 0x6E6964726F636572;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100010A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10001286C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100010A2C()
{
  return 0;
}

void sub_100010A38(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100010A44(uint64_t a1)
{
  unint64_t v2 = sub_100012198();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100010A80(uint64_t a1)
{
  unint64_t v2 = sub_100012198();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100010ABC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_10014CA20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_100012198();
  sub_100105968();
  LOBYTE(v12) = 0;
  sub_100105748();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 16);
    HIBYTE(v11) = 1;
    sub_100007E0C(&qword_10014C9E8);
    sub_1000123B8(&qword_10014CA28, (void (*)(void))sub_100012428);
    sub_100105768();
    uint64_t v9 = _s10AudioAssetC9AudioDataVMa(0);
    LOBYTE(v12) = 2;
    sub_100103978();
    sub_10001210C(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    sub_100007E0C(&qword_10014CA08);
    sub_10001247C(&qword_10014CA38, &qword_10014CA40);
    sub_100105768();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100010D80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007E0C(&qword_10014C9D8);
  uint64_t v7 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s10AudioAssetC9AudioDataVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v20 = a1;
  sub_100012154(a1, v13);
  sub_100012198();
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)v20);
  }
  uint64_t v14 = v7;
  LOBYTE(v22) = 0;
  uint64_t v15 = v19;
  *(void *)uint64_t v12 = sub_100105698();
  v12[8] = v16 & 1;
  sub_100007E0C(&qword_10014C9E8);
  char v21 = 1;
  sub_1000123B8(&qword_10014C9F0, (void (*)(void))sub_10001223C);
  sub_1001056B8();
  *((void *)v12 + 2) = v22;
  sub_100103978();
  LOBYTE(v22) = 2;
  sub_10001210C(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100012290((uint64_t)v6, (uint64_t)&v12[*(int *)(v10 + 24)]);
  sub_100007E0C(&qword_10014CA08);
  char v21 = 3;
  sub_10001247C(&qword_10014CA10, &qword_10014CA18);
  sub_1001056B8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  *(void *)&v12[*(int *)(v10 + 28)] = v22;
  sub_1000122F8((uint64_t)v12, v18);
  sub_1000121EC((uint64_t)v20);
  return sub_10001235C((uint64_t)v12);
}

uint64_t sub_1000111B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100010D80(a1, a2);
}

uint64_t sub_1000111CC(void *a1)
{
  return sub_100010ABC(a1);
}

uint64_t sub_1000111E4()
{
  uint64_t v1 = sub_100007E0C(&qword_10014CA48);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (double *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10AudioAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_9;
  }
  swift_retain();
  sub_1000F5B0C((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_9:
    sub_100012510((uint64_t)v3, &qword_10014CA48);
    return 0;
  }
  sub_10001256C((uint64_t)v3, (uint64_t)v7);
  if ((_BYTE)v7[1]) {
    goto LABEL_10;
  }
  double v8 = *v7;
  if (qword_10014C050 != -1)
  {
    double v14 = *v7;
    swift_once();
    double v8 = v14;
  }
  id v9 = [(id)qword_100151F20 stringFromTimeInterval:v8 + 0.5];
  if (!v9)
  {
LABEL_10:
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100104B78();
  }
  sub_10001235C((uint64_t)v7);
  return v11;
}

uint64_t sub_100011408()
{
  return swift_release();
}

id sub_100011418()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10AudioAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100011460()
{
  return _s10AudioAssetCMa(0);
}

uint64_t _s10AudioAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014C8E8);
}

uint64_t sub_100011488()
{
  return swift_updateClassMetadata2();
}

void *sub_1000114CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v7 = *(int *)(a3 + 24);
    double v8 = (void *)(a1 + v7);
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100103978();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100011670(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100011740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100011894(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  double v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100011A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100011B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  double v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100011D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100011D60);
}

uint64_t sub_100011D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100011E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100011E34);
}

uint64_t sub_100011E34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    double v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10AudioAssetC9AudioDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014C950);
}

uint64_t sub_100011F00(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100011F38()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100011FD8()
{
  if (!qword_1001518D0)
  {
    sub_100103978();
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001518D0);
    }
  }
}

uint64_t sub_100012030()
{
  return swift_retain();
}

uint64_t sub_100012040(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10AudioAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100012058()
{
  return sub_1000111E4();
}

uint64_t sub_10001207C()
{
  return sub_10001210C(&qword_10014C990, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa);
}

uint64_t sub_1000120C4()
{
  return sub_10001210C(&qword_10014C998, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa);
}

uint64_t sub_10001210C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100012154(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100012198()
{
  unint64_t result = qword_10014C9E0;
  if (!qword_10014C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C9E0);
  }
  return result;
}

uint64_t sub_1000121EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_10001223C()
{
  unint64_t result = qword_10014C9F8;
  if (!qword_10014C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C9F8);
  }
  return result;
}

uint64_t sub_100012290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000122F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001235C(uint64_t a1)
{
  uint64_t v2 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000123B8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_10014C9E8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012428()
{
  unint64_t result = qword_10014CA30;
  if (!qword_10014CA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CA30);
  }
  return result;
}

uint64_t sub_10001247C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_10014CA08);
    sub_10001210C(a2, (void (*)(uint64_t))type metadata accessor for TranscriptViewModelSegment);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100012510(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100007E0C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001256C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s10AudioAssetC9AudioDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10AudioAssetC9AudioDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001272CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AudioAssetC9AudioDataV10CodingKeysOMa()
{
  return &_s10AudioAssetC9AudioDataV10CodingKeysON;
}

unint64_t sub_100012768()
{
  unint64_t result = qword_10014CA50;
  if (!qword_10014CA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CA50);
  }
  return result;
}

unint64_t sub_1000127C0()
{
  unint64_t result = qword_10014CA58;
  if (!qword_10014CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CA58);
  }
  return result;
}

unint64_t sub_100012818()
{
  unint64_t result = qword_10014CA60;
  if (!qword_10014CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CA60);
  }
  return result;
}

uint64_t sub_10001286C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736E65746E69 && a2 == 0xEB00000000736569 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6964726F636572 && a2 == 0xED00006574614467 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001001109F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100012A60()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014CA68);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014CA68);
  if (qword_10014BF70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F28);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100012B28()
{
  uint64_t v0 = sub_1001039D8();
  sub_1000081D0(v0, qword_10014CA80);
  sub_100007D30(v0, (uint64_t)qword_10014CA80);
  return sub_1001039C8();
}

double *sub_100012B74()
{
  id v1 = [v0 assets];
  if (!v1
    || (uint64_t v2 = v1,
        id v3 = [v1 allObjects],
        v2,
        uint64_t v4 = sub_100104D28(),
        v3,
        uint64_t v5 = sub_100012EC4(v4),
        unint64_t result = (double *)swift_bridgeObjectRelease(),
        !v5))
  {
    if (qword_10014BED0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100103DB8();
    sub_100007D30(v11, (uint64_t)qword_10014CA68);
    uint64_t v12 = sub_100103D98();
    os_log_type_t v13 = sub_100104FF8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (double *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      if (qword_10014BED8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1001039D8();
      sub_100007D30(v15, (uint64_t)qword_10014CA80);
      sub_100012FC0();
      uint64_t v16 = sub_1001057C8();
      sub_1000456B4(v16, v17, (uint64_t *)&v18);
      sub_1001052C8();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s WARNING: JournalEntryMO assets is nil", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return _swiftEmptyArrayStorage;
  }
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v7 = *(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1001055E8();
  unint64_t result = (double *)swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_5:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (((unint64_t)v5 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_1001054D8();
      }
      else {
        id v9 = *(id *)&v5[i + 4];
      }
      uint64_t v10 = v9;
      if (([v9 isRemovedFromCloud] & 1) != 0
        || ([v10 isUndoablyDeleted] & 1) != 0)
      {
      }
      else
      {
        sub_100105548();
        sub_100105578();
        sub_100105588();
        sub_100105558();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

double *sub_100012EC4(uint64_t a1)
{
  char v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100105568();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1000105E4(i, (uint64_t)v5);
    type metadata accessor for JournalEntryAssetMO();
    if (!swift_dynamicCast()) {
      break;
    }
    sub_100105548();
    sub_100105578();
    sub_100105588();
    sub_100105558();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

unint64_t sub_100012FC0()
{
  unint64_t result = qword_10014CA98;
  if (!qword_10014CA98)
  {
    sub_1001039D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CA98);
  }
  return result;
}

id sub_100013018(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_fallbackView;
  type metadata accessor for CanvasFallbackAssetView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v11[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_hasCalledSizeTypeUpdated] = 0;
  v11[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_sizeType] = 4;
  *(void *)&v11[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v11[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_isAssetFinishedLoading] = 0;

  v13.receiver = v11;
  v13.super_class = (Class)type metadata accessor for JournalAssetView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10001312C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_fallbackView;
  type metadata accessor for CanvasFallbackAssetView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_hasCalledSizeTypeUpdated] = 0;
  v5[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_sizeType] = 4;
  *(void *)&v5[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_loadingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_isAssetFinishedLoading] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for JournalAssetView();
  [super initWithCoder:a1];

  return v6;
}

id sub_100013230()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalAssetView()
{
  return self;
}

uint64_t sub_1000132D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000132FC()
{
  sub_100105278();
  uint64_t result = sub_100105278();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s8MetadataC5InputOMa();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000133EC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1000134F4(a1);
  return v2;
}

uint64_t sub_10001342C()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014CAF0);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014CAF0);
  if (qword_10014BF80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000134F4(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  uint64_t v4 = sub_100105278();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_OWORD *)(v1 + *(void *)(*(void *)v1 + 112)) = xmmword_1001085E0;
  uint64_t v5 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v6 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v1;
}

uint64_t sub_10001363C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  sub_100105278();
  uint64_t v2 = sub_100105278();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100014CFC(*(void *)(v0 + *(void *)(*(void *)v0 + 112)), *(void *)(v0 + *(void *)(*(void *)v0 + 112) + 8));
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v4 = _s8MetadataC5InputOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_100013778()
{
  sub_10001363C();

  return swift_deallocClassInstance();
}

uint64_t _s8MetadataCMa()
{
  return sub_10000ABE8();
}

uint64_t _s8MetadataC5InputOMa()
{
  return sub_10000ABE8();
}

uint64_t sub_100013800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100013808()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1000138A0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    void *v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      uint64_t v14 = *(void *)a2;
      unint64_t v15 = *((void *)a2 + 1);
      sub_10001030C(*(void *)a2, v15);
      void *v3 = v14;
      v3[1] = v15;
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_100013A2C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return sub_100010378(*(void *)a1, *((void *)a1 + 1));
  }
}

void *sub_100013B30(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    unint64_t v12 = *((void *)a2 + 1);
    sub_10001030C(*(void *)a2, v12);
    char v10 = 0;
    *a1 = v11;
    a1[1] = v12;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_100013C7C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_100010378(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      uint64_t v20 = *(void *)a2;
      unint64_t v19 = *((void *)a2 + 1);
      sub_10001030C(v20, v19);
      char v18 = 0;
      *(void *)a1 = v20;
      *((void *)a1 + 1) = v19;
    }
    a1[v7] = v18;
  }
  return a1;
}

_OWORD *sub_100013EA0(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_100013FD8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      sub_100010378(*(void *)a1, *((void *)a1 + 1));
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1000141F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_100014324(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1000144ECLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100014514(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1000145CC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

BOOL sub_1000146A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 32))();
  if (v2) {
    swift_release();
  }
  return v2 == 0;
}

uint64_t sub_1000146EC(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x140))();
  if (v5)
  {
    unsigned int v6 = v5;
    id v7 = [v5 assetMetaData];

    if (v7)
    {
      uint64_t v9 = sub_100103848();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    uint64_t v16 = v9;
    unint64_t v17 = v11;
    __chkstk_darwin(v8);
    _OWORD v15[2] = a1;
    v15[3] = a2;
    sub_100007E0C(&qword_10014CC08);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v12 = _s8MetadataCMa();
    sub_100014A54((void (*)(char *, char *))sub_100014D10, (uint64_t)v15, (uint64_t)&type metadata for Never, v12, v13, (uint64_t)&v18);
    sub_100010364(v16, v17);
    unsigned int v5 = v18;
  }
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(a2 + 40))(v5, a1, a2);
}

uint64_t sub_1000148E4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = _s8MetadataC5InputOMa();
  __chkstk_darwin(v4);
  unsigned int v6 = (uint64_t *)((char *)&v11 - v5);
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  _s8MetadataCMa();
  *unsigned int v6 = v8;
  v6[1] = v7;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = swift_allocObject();
  sub_1000134F4((uint64_t)v6);
  *a2 = v9;
  return sub_10001030C(v8, v7);
}

uint64_t sub_100014A54@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  int64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  char v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_100014CFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_100010364(a1, a2);
  }
  return a1;
}

uint64_t sub_100014D10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000148E4(a1, a2);
}

uint64_t sub_100014D30()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014CC10);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014CC10);
  if (qword_10014BF90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F88);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100014DF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 369) = a5;
  *(unsigned char *)(v6 + 368) = a4;
  *(void *)(v6 + 256) = a3;
  *(void *)(v6 + 264) = a6;
  *(void *)(v6 + 240) = a1;
  *(void *)(v6 + 248) = a2;
  uint64_t v7 = sub_100007E0C(&qword_10014CCF8);
  *(void *)(v6 + 272) = v7;
  *(void *)(v6 + 280) = *(void *)(v7 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  sub_100007E0C(&qword_10014CD00);
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = swift_task_alloc();
  *(void *)(v6 + 312) = sub_100104E38();
  *(void *)(v6 + 320) = sub_100104E28();
  uint64_t v9 = sub_100104DE8();
  *(void *)(v6 + 328) = v9;
  *(void *)(v6 + 336) = v8;
  return _swift_task_switch(sub_100014F40, v9, v8);
}

uint64_t sub_100014F40()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (_OWORD *)(v0 + 16);
    char v37 = *(unsigned char *)(v0 + 369);
    uint64_t v4 = v1 + 32;
    uint64_t v36 = sub_100104E58();
    uint64_t v5 = *(void *)(v36 - 8);
    char v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    int64_t v34 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    id v33 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v38 = v2;
      uint64_t v7 = *(void *)(v0 + 296);
      uint64_t v8 = *(void *)(v0 + 304);
      uint64_t v9 = *(void **)(v0 + 264);
      char v10 = *(unsigned char *)(v0 + 368);
      long long v12 = *(_OWORD *)(v4 + 16);
      long long v11 = *(_OWORD *)(v4 + 32);
      _OWORD *v3 = *(_OWORD *)v4;
      *(_OWORD *)(v0 + 32) = v12;
      *(_OWORD *)(v0 + 48) = v11;
      long long v14 = *(_OWORD *)(v4 + 64);
      long long v13 = *(_OWORD *)(v4 + 80);
      long long v15 = *(_OWORD *)(v4 + 48);
      *(void *)(v0 + 112) = *(void *)(v4 + 96);
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      *(_OWORD *)(v0 + 64) = v15;
      v35(v8, 1, 1, v36);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      uint64_t v17 = (void *)(v16 + 16);
      *(void *)(v16 + 24) = 0;
      long long v18 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v16 + 96) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v16 + 112) = v18;
      *(void *)(v16 + 128) = *(void *)(v0 + 112);
      long long v19 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v16 + 32) = *v3;
      *(_OWORD *)(v16 + 48) = v19;
      long long v20 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v16 + 64) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v16 + 80) = v20;
      *(unsigned char *)(v16 + 136) = v10;
      *(unsigned char *)(v16 + 137) = v37;
      *(void *)(v16 + 144) = v9;
      sub_100017B58(v8, v7);
      LODWORD(v8) = (*v34)(v7, 1, v36);
      sub_100017BC0(v0 + 16);
      sub_100017BC0(v0 + 16);
      id v21 = v9;
      uint64_t v22 = *(void *)(v0 + 296);
      if (v8 == 1)
      {
        sub_100017C14(*(void *)(v0 + 296));
        if (!*v17) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_100104E48();
        (*v33)(v22, v36);
        if (!*v17)
        {
LABEL_8:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_100104DE8();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v26 = **(void **)(v0 + 248);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_10014CD18;
      *(void *)(v27 + 24) = v16;
      sub_100007E0C(&qword_10014CCD0);
      uint64_t v28 = v25 | v23;
      if (v25 | v23)
      {
        uint64_t v28 = v0 + 184;
        *(void *)(v0 + 184) = 0;
        *(void *)(v0 + 192) = 0;
        *(void *)(v0 + 200) = v23;
        *(void *)(v0 + 208) = v25;
      }
      uint64_t v6 = *(void *)(v0 + 304);
      *(void *)(v0 + 216) = 1;
      *(void *)(v0 + 224) = v28;
      *(void *)(v0 + 232) = v26;
      swift_task_create();
      swift_release();
      sub_100017D64(v0 + 16);
      sub_100017C14(v6);
      v4 += 104;
      uint64_t v2 = v38 - 1;
      if (v38 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_100007E0C(&qword_10014CCD0);
  sub_100104E08();
  *(void *)(v0 + 344) = &_swiftEmptyArrayStorage;
  uint64_t v29 = sub_100104E28();
  *(void *)(v0 + 352) = v29;
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_100015308;
  uint64_t v31 = *(void *)(v0 + 272);
  return TaskGroup.Iterator.next(isolation:)(v0 + 120, v29, &protocol witness table for MainActor, v31);
}

uint64_t sub_100015308()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_10001544C, v3, v2);
}

uint64_t sub_10001544C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void **)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v5 = *(void **)(v0 + 176);
    uint64_t v22 = *(void **)(v0 + 128);
    id v6 = v22;
    id v19 = v1;
    sub_10001786C(v4, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(char **)(v0 + 344);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v8 = sub_1000B7610(0, *((void *)v8 + 2) + 1, 1, *(char **)(v0 + 344));
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1000B7610((char *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    long long v11 = &v8[64 * v10];
    *((void *)v11 + 4) = v19;
    *((void *)v11 + 5) = v22;
    v11[48] = v2;
    v11[49] = BYTE1(v2) & 1;
    *((void *)v11 + 7) = v21;
    v11[64] = v3 & 1;
    v11[65] = BYTE1(v3) & 1;
    v11[66] = BYTE2(v3) & 1;
    *((void *)v11 + 9) = v20;
    *((void *)v11 + 10) = v4;
    *((void *)v11 + 11) = v5;
    sub_100017DB8(v1, v22, v2, v21, v3, v20, v4, v5);
    *(void *)(v0 + 344) = v8;
    uint64_t v12 = sub_100104E28();
    *(void *)(v0 + 352) = v12;
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v13;
    *long long v13 = v0;
    v13[1] = sub_100015308;
    uint64_t v14 = *(void *)(v0 + 272);
    return TaskGroup.Iterator.next(isolation:)(v0 + 120, v12, &protocol witness table for MainActor, v14);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v16 = *(void **)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    swift_release();
    *uint64_t v16 = v15;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1000156B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a7;
  *(unsigned char *)(v7 + 57) = a6;
  *(unsigned char *)(v7 + 56) = a5;
  *(void *)(v7 + 32) = a1;
  return _swift_task_switch(sub_1000156E4, 0, 0);
}

uint64_t sub_1000156E4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = (objc_class *)_s15MOMapAnnotationCMa();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  id v6 = &v5[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager15MOMapAnnotation_title];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager15MOMapAnnotation_coordinate];
  *(void *)uint64_t v7 = v2;
  *((void *)v7 + 1) = v3;
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  id v27 = [super init];
  int v8 = *((unsigned __int8 *)v1 + 32);
  char v9 = *((unsigned char *)v1 + 56);
  long long v11 = (void *)v1[2];
  uint64_t v10 = v1[3];
  uint64_t v12 = *(void *)(v0 + 40);
  if (!v11) {
    goto LABEL_6;
  }
  unint64_t v13 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v13) & 0xF;
  }
  char v15 = v14 != 0;
  if (v14)
  {
    char v16 = 0;
  }
  else
  {
LABEL_6:
    char v15 = 0;
    char v16 = *(double *)(v12 + 80) > 150.0;
  }
  char v26 = *(unsigned char *)(v0 + 57);
  char v17 = *(unsigned char *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 32);
  if (v8) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v10;
  }
  id v20 = [*(id *)(v0 + 48) traitCollection];
  id v21 = sub_100033CA8(v11, v9, v15, v16, v20);
  uint64_t v23 = v22;

  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 17) = v9;
  *(void *)(v18 + 24) = v19;
  *(unsigned char *)(v18 + 32) = (v26 & 1) == 0;
  *(unsigned char *)(v18 + 33) = v15;
  *(unsigned char *)(v18 + 34) = v16;
  *(void *)(v18 + 40) = 0x4000000000000000;
  *(void *)(v18 + 48) = v21;
  *(void *)(v18 + 56) = v23;
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t _s36MOSuggestionAssetMapSnapshotProviderCMa()
{
  return self;
}

uint64_t sub_1000158D8(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000159B4;
  return v6(a1);
}

uint64_t sub_1000159B4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double *sub_100015AAC(double *a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((void *)a1 + 2) < 3uLL)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v36 = (int *)v4;
    if (qword_10014BEE8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100103DB8();
    sub_100007D30(v7, (uint64_t)qword_10014CC10);
    int v8 = sub_100103D98();
    os_log_type_t v9 = sub_100105018();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetMapsClusterer] Building dendrogram", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = objc_allocWithZone((Class)_s30MOSuggestionAssetMapsClustererCMa());
    uint64_t v12 = swift_bridgeObjectRetain();
    unint64_t v13 = sub_100073DDC(v12, 1.0);
    sub_1000740C0();
    uint64_t v14 = sub_100074FD4();
    int64_t v15 = *((void *)v14 + 2);
    if (v15)
    {
      char v35 = v13;
      unint64_t v41 = _swiftEmptyArrayStorage;
      sub_1000C3C38(0, v15, 0);
      uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
      int64_t v34 = v14;
      uint64_t v17 = (uint64_t)v14 + ((v16 + 32) & ~v16);
      uint64_t v37 = *(void *)(v3 + 72);
      a1 = v41;
      uint64_t v18 = v36;
      do
      {
        sub_1000170BC(v17, (uint64_t)v6);
        uint64_t v19 = *v6;
        uint64_t v20 = v6[1];
        uint64_t v21 = v18[12];
        uint64_t v22 = (uint64_t *)((char *)v6 + v18[11]);
        uint64_t v23 = v22[1];
        uint64_t v40 = *v22;
        uint64_t v24 = v6[3];
        uint64_t v25 = *(void **)((char *)v6 + v18[9]);
        if (v24 >= 2) {
          uint64_t v26 = v6[3];
        }
        else {
          uint64_t v26 = 0;
        }
        uint64_t v38 = v26;
        int v39 = *((unsigned __int8 *)v6 + v21);
        uint64_t v27 = *(uint64_t *)((char *)v6 + v18[13]);
        id v28 = v25;
        swift_bridgeObjectRetain();
        sub_100017120((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000C3C38(0, *((void *)a1 + 2) + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        unint64_t v30 = *((void *)a1 + 2);
        unint64_t v29 = *((void *)a1 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_1000C3C38(v29 > 1, v30 + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        *((void *)a1 + 2) = v30 + 1;
        uint64_t v31 = &a1[13 * v30];
        *((void *)v31 + 4) = v19;
        *((void *)v31 + 5) = v20;
        uint64_t v32 = v38;
        *((void *)v31 + 6) = v25;
        *((void *)v31 + 7) = v32;
        *((unsigned char *)v31 + 64) = v24 < 2;
        *((void *)v31 + 9) = v40;
        *((void *)v31 + 10) = v23;
        *((unsigned char *)v31 + 88) = v39;
        v31[12] = 0.0;
        v31[13] = 0.0;
        *((void *)v31 + 14) = v27;
        v17 += v37;
        v31[15] = 0.0;
        v31[16] = -2.68156159e154;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
  }
  return a1;
}

#error "1000169D0: switch analysis failed: failed to propagate the switch expression (funcsize=966)"

uint64_t sub_1000170BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017120(uint64_t a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001717C(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 152) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  *(void *)(v3 + 80) = sub_100104E38();
  *(void *)(v3 + 88) = sub_100104E28();
  uint64_t v5 = sub_100104DE8();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = v4;
  return _swift_task_switch(sub_10001721C, v5, v4);
}

uint64_t sub_10001721C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v4 = sub_100015AAC((double *)v2);
  *(void *)(v0 + 112) = v4;
  BOOL v5 = *(void *)(v2 + 16) == 1;
  uint64_t v6 = sub_100015E08(v2, v4, v3, v1, 1);
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = sub_100007E0C(&qword_10014CCD0);
  uint64_t v8 = sub_100007E0C(&qword_10014CCD8);
  uint64_t v9 = sub_100104E28();
  *(void *)(v0 + 128) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *(void *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 24) = v3;
  *(unsigned char *)(v10 + 25) = v5;
  *(void *)(v10 + 32) = v6;
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  void *v11 = v0;
  v11[1] = sub_1000173A8;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 56, v7, v8, v9, &protocol witness table for MainActor, &unk_10014CCE8, v10, v7);
}

uint64_t sub_1000173A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10001752C, v3, v2);
}

uint64_t sub_10001752C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_100105568();
    uint64_t v3 = 0;
    do
    {
      uint64_t v5 = *(void **)(v1 + v3 + 32);
      uint64_t v4 = *(void **)(v1 + v3 + 40);
      char v6 = *(unsigned char *)(v1 + v3 + 48);
      char v7 = *(unsigned char *)(v1 + v3 + 49);
      uint64_t v8 = *(void *)(v1 + v3 + 56);
      char v9 = *(unsigned char *)(v1 + v3 + 64);
      char v10 = *(unsigned char *)(v1 + v3 + 65);
      char v11 = *(unsigned char *)(v1 + v3 + 66);
      uint64_t v12 = *(void *)(v1 + v3 + 72);
      uint64_t v13 = *(void **)(v1 + v3 + 80);
      uint64_t v14 = *(void **)(v1 + v3 + 88);
      *(void *)(v0 + 16) = v4;
      *(unsigned char *)(v0 + 24) = v6;
      *(unsigned char *)(v0 + 25) = v7;
      *(void *)(v0 + 32) = v8;
      *(unsigned char *)(v0 + 40) = v9;
      *(unsigned char *)(v0 + 41) = v10;
      *(unsigned char *)(v0 + 42) = v11;
      *(void *)(v0 + 48) = v12;
      id v15 = v4;
      id v16 = v5;
      sub_10001786C(v13, v14);
      id v17 = v16;
      id v18 = v15;
      sub_10001786C(v13, v14);
      sub_1000178AC(v13, v14);

      id v19 = v17;
      id v20 = v18;
      sub_10001786C(v13, v14);
      sub_1000178AC(v13, v14);

      id v21 = v19;
      id v22 = v20;
      sub_10001786C(v13, v14);

      id v23 = objc_allocWithZone((Class)_s19MOPOIAnnotationViewCMa());
      sub_100088B90((uint64_t)v17, (long long *)(v0 + 16), v13, v14);

      sub_1000178AC(v13, v14);
      sub_100105548();
      sub_100105578();
      sub_100105588();
      sub_100105558();
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void **)(v0 + 120);
  sub_1000178EC();
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v24 setAnnotationViews:isa];

  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v27 = *(void *)(v0 + 120);
  return v26(v27);
}

uint64_t sub_10001779C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 25);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 24);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *char v10 = v3;
  v10[1] = sub_100017E10;
  return sub_100014DF8(a1, a2, v6, v9, v7, v8);
}

id sub_10001786C(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

void sub_1000178AC(void *a1, void *a2)
{
  if (a1)
  {
  }
}

unint64_t sub_1000178EC()
{
  unint64_t result = qword_10014CCF0;
  if (!qword_10014CCF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10014CCF0);
  }
  return result;
}

uint64_t sub_10001792C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10001798C(uint64_t a1)
{
  uint64_t v4 = v1 + 32;
  char v5 = *(unsigned char *)(v1 + 136);
  char v6 = *(unsigned char *)(v1 + 137);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_100017A64;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 57) = v6;
  *(unsigned char *)(v8 + 56) = v5;
  *(void *)(v8 + 32) = a1;
  return _swift_task_switch(sub_1000156E4, 0, 0);
}

uint64_t sub_100017A64()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100017B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014CD00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017BC0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100017C14(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014CD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100017C74()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100017CAC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_100017A64;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10014CD10 + dword_10014CD10);
  return v6(a1, v4);
}

uint64_t sub_100017D64(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

void sub_100017DB8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  if (a1)
  {

    sub_1000178AC(a7, a8);
  }
}

uint64_t type metadata accessor for JournalSortingUtilities()
{
  return self;
}

uint64_t sub_100017E38()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014CDC0);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014CDC0);
  if (qword_10014BF78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F40);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100017F00(uint64_t a1, uint64_t a2)
{
  uint64_t v128 = sub_100103978();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v5 = __chkstk_darwin(v128);
  v119 = &v112[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = v6;
  __chkstk_darwin(v5);
  v135 = &v112[-v7];
  uint64_t v8 = sub_1001039D8();
  v132 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  v117 = &v112[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  v125 = &v112[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  v124 = &v112[-v14];
  uint64_t v116 = v15;
  __chkstk_darwin(v13);
  v137 = &v112[-v16];
  uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v17 - 8);
  id v19 = &v112[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_100103818();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  v130 = &v112[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = &v112[-v25];
  __chkstk_darwin(v24);
  id v28 = &v112[-v27];
  uint64_t v29 = &v2[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_sessionID];
  unint64_t v30 = v2;
  v121 = v29;
  sub_1001039C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(&v30[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_customBundleURL], 1, 1, v20);
  v131 = v30;
  v30[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_persistentStoresLoadSuccess] = 0;
  uint64_t v136 = a1;
  sub_10006BC04();
  uint64_t v126 = a2;
  sub_100019FD0(a2, (uint64_t)v19);
  int v31 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v133 = v20;
  v138 = v28;
  uint64_t v129 = v21;
  uint64_t v134 = v8;
  if (v31 == 1)
  {
    sub_100019F70((uint64_t)v19);
    uint64_t v32 = v8;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v26, v19, v20);
    if (qword_10014BEF0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100103DB8();
    sub_100007D30(v33, (uint64_t)qword_10014CDC0);
    int64_t v34 = v130;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(v130, v26, v20);
    char v35 = sub_100103D98();
    os_log_type_t v36 = sub_100105018();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      sub_10001A2A8((unint64_t *)&qword_10014CE20, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v38 = sub_1001057C8();
      uint64_t v147 = sub_1000456B4(v38, v39, &aBlock);
      uint64_t v20 = v133;
      uint64_t v21 = v129;
      sub_1001052C8();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v34, v20);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "(sharedCoredataInit) customModelURL assigned :%s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v28 = v138;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v34, v20);
    }

    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 40))(v28, v26, v20);
    uint64_t v32 = v134;
  }
  if (qword_10014BEF0 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_100103DB8();
  v130 = (unsigned char *)sub_100007D30(v40, (uint64_t)qword_10014CDC0);
  unint64_t v41 = sub_100103D98();
  os_log_type_t v42 = sub_100105018();
  if (os_log_type_enabled(v41, v42))
  {
    char v43 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)char v43 = 136315138;
    swift_beginAccess();
    sub_10001A2A8((unint64_t *)&qword_10014CE20, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v44 = sub_1001057C8();
    uint64_t v147 = sub_1000456B4(v44, v45, &aBlock);
    sub_1001052C8();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "(sharedCoredataInit) Using modelURL :%s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  char v46 = v132;
  swift_beginAccess();
  id v47 = objc_allocWithZone((Class)NSManagedObjectModel);
  sub_100103788(v48);
  uint64_t v50 = v49;
  id v51 = [v47 initWithContentsOfURL:v49];

  if (v51)
  {
    uint64_t v52 = v136;
    id v53 = objc_allocWithZone((Class)NSPersistentContainer);
    swift_bridgeObjectRetain();
    id v54 = v51;
    NSString v55 = sub_100104B38();
    swift_bridgeObjectRelease();
    id v56 = [v53 initWithName:v55 managedObjectModel:v54];

    id v123 = v54;
    v57 = &unk_100162000;
    uint64_t v58 = v131;
    uint64_t v120 = OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container;
    *(void *)&v131[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container] = v56;
    id v59 = sub_100019140(v52);
    sub_100007E0C(&qword_10014C328);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_100108700;
    *(void *)(v60 + 32) = v59;
    uint64_t aBlock = v60;
    sub_100104D48();
    sub_100008234(0, &qword_10014CE28);
    id v61 = v56;
    id v122 = v59;
    Class isa = sub_100104D18().super.isa;
    swift_bridgeObjectRelease();
    [v61 setPersistentStoreDescriptions:isa];

    v63 = (char *)v46[2];
    int v64 = v137;
    ((void (*)(unsigned char *, char *, uint64_t))v63)(v137, v121, v32);
    uint64_t v65 = v124;
    v121 = v63;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v63)(v124, v64, v32);
    uint64_t v66 = v32;
    v67 = v58;
    v68 = sub_100103D98();
    os_log_type_t v69 = sub_100105018();
    int v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      v115 = (char *)(v46 + 2);
      uint64_t v72 = v71;
      uint64_t v114 = swift_slowAlloc();
      uint64_t aBlock = v114;
      *(_DWORD *)uint64_t v72 = 136446466;
      int v113 = v70;
      sub_10001A2A8((unint64_t *)&qword_10014CA98, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v73 = sub_1001057C8();
      uint64_t v139 = sub_1000456B4(v73, v74, &aBlock);
      sub_1001052C8();
      swift_bridgeObjectRelease();
      v124 = (unsigned char *)v46[1];
      ((void (*)(unsigned char *, uint64_t))v124)(v65, v66);
      *(_WORD *)(v72 + 12) = 2080;
      uint64_t v75 = v120;
      id v76 = [*(id *)&v58[v120] name];
      uint64_t v77 = sub_100104B78();
      unint64_t v79 = v78;

      int v64 = v137;
      uint64_t v80 = v77;
      uint64_t v58 = v131;
      uint64_t v139 = sub_1000456B4(v80, v79, &aBlock);
      v57 = (void *)&unk_100162000;
      sub_1001052C8();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v113, "%{public}s (sharedCoredataInit) -> CoreDataStack init for container %s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v81 = v135;
      uint64_t v82 = v75;
    }
    else
    {
      v124 = (unsigned char *)v46[1];
      ((void (*)(unsigned char *, uint64_t))v124)(v65, v66);

      v81 = v135;
      uint64_t v82 = v120;
    }
    sub_100103968();
    id v83 = [*(id *)&v58[v82] viewContext];
    *(void *)&v67[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_context] = v83;
    uint64_t aBlock = 1;
    type metadata accessor for NSMergePolicyType(0);
    id v84 = v83;
    [v84 setMergePolicy:sub_100105858()];

    swift_unknownObjectRelease();
    v85 = (objc_class *)type metadata accessor for CoreDataStackShared();
    v146.receiver = v67;
    v146.super_class = v85;
    v86 = [super init];
    int v87 = MKBGetDeviceLockState();
    v88 = v125;
    if (v87 == 1)
    {
      uint64_t v89 = v134;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v121)(v125, v64, v134);
      v90 = sub_100103D98();
      os_log_type_t v91 = sub_100104FF8();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)v92 = 136446210;
        sub_10001A2A8((unint64_t *)&qword_10014CA98, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v93 = sub_1001057C8();
        uint64_t v139 = sub_1000456B4(v93, v94, &aBlock);
        sub_1001052C8();
        swift_bridgeObjectRelease();
        v95 = (void (*)(unsigned char *, uint64_t))v124;
        ((void (*)(unsigned char *, uint64_t))v124)(v88, v89);
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{public}s (sharedCoredataInit) SharedDeviceInfoProvider.isDeviceLocked == TRUE, unable to complete CoreDataStackShared initialization.", v92, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
        sub_100019F70(v126);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v135, v128);
        v95(v137, v89);
      }
      else
      {

        swift_release();
        v110 = (void (*)(unsigned char *, uint64_t))v124;
        ((void (*)(unsigned char *, uint64_t))v124)(v88, v89);

        sub_100019F70(v126);
        (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v81, v128);
        v110(v64, v89);
      }
    }
    else
    {
      v131 = *(char **)&v86[v57[449]];
      v96 = v117;
      uint64_t v97 = v134;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v121)(v117, v64, v134);
      uint64_t v98 = v127;
      v99 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v127 + 16);
      v100 = v119;
      v132 = v86;
      uint64_t v101 = v128;
      v99(v119, v81, v128);
      unint64_t v102 = (*((unsigned __int8 *)v46 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v46 + 80);
      unint64_t v103 = (v116 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
      v104 = v46;
      unint64_t v105 = (*(unsigned __int8 *)(v98 + 80) + v103 + 8) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      uint64_t v106 = swift_allocObject();
      ((void (*)(unint64_t, unsigned char *, uint64_t))v104[4])(v106 + v102, v96, v97);
      *(void *)(v106 + v103) = v132;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v98 + 32))(v106 + v105, v100, v101);
      v144 = sub_10001A19C;
      uint64_t v145 = v106;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v141 = 1107296256;
      v142 = sub_100019C4C;
      v143 = &unk_1001399B0;
      v107 = _Block_copy(&aBlock);
      v108 = v132;
      swift_release();
      [v131 loadPersistentStoresWithCompletionHandler:v107];

      _Block_release(v107);
      swift_release();
      sub_100019F70(v126);
      uint64_t v109 = v101;
      v86 = (char *)v132;
      (*(void (**)(unsigned char *, uint64_t))(v98 + 8))(v135, v109);
      ((void (*)(unsigned char *, uint64_t))v124)(v137, v97);
    }
    (*(void (**)(unsigned char *, uint64_t))(v129 + 8))(v138, v133);
    return (uint64_t)v86;
  }
  else
  {
    uint64_t aBlock = 0;
    unint64_t v141 = 0xE000000000000000;
    sub_100105498(35);
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0xD000000000000021;
    unint64_t v141 = 0x8000000100110CB0;
    sub_10001A2A8((unint64_t *)&qword_10014CE20, (void (*)(uint64_t))&type metadata accessor for URL);
    v148._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v148);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1001055C8();
    __break(1u);
  }
  return result;
}

id sub_100019140(uint64_t a1)
{
  uint64_t v2 = sub_100103818();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 48) == 1) {
    sub_100103768();
  }
  else {
    sub_10006BD64();
  }
  id v6 = objc_allocWithZone((Class)NSPersistentStoreDescription);
  sub_100103788(v7);
  uint64_t v9 = v8;
  id v10 = [v6 initWithURL:v8];

  [v10 setShouldInferMappingModelAutomatically:1];
  [v10 setShouldMigrateStoreAutomatically:1];
  sub_100104B78();
  NSString v11 = sub_100104B38();
  swift_bridgeObjectRelease();
  [v10 setOption:v11 forKey:NSPersistentStoreFileProtectionKey];

  sub_100008234(0, &qword_10014CE38);
  Class isa = sub_1001051F8(1).super.super.isa;
  [v10 setOption:isa forKey:NSPersistentHistoryTrackingKey];

  Class v13 = sub_1001051F8(1).super.super.isa;
  [v10 setOption:v13 forKey:NSPersistentStoreRemoteChangeNotificationPostOptionKey];

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

void sub_100019360(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001039D8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - v17;
  if (a2)
  {
    id v19 = (void *)sub_1001036B8();
    if (qword_10014BEF0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_100103DB8();
    sub_100007D30(v20, (uint64_t)qword_10014CDC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, a3, v13);
    id v21 = v19;
    uint64_t v22 = sub_100103D98();
    os_log_type_t v23 = sub_100105008();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = v13;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v61 = v59;
      *(_DWORD *)uint64_t v25 = 136446466;
      sub_10001A2A8((unint64_t *)&qword_10014CA98, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v26 = sub_1001057C8();
      double v60 = COERCE_DOUBLE(sub_1000456B4(v26, v27, &v61));
      sub_1001052C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v24);
      *(_WORD *)(v25 + 12) = 2112;
      double v60 = *(double *)&v21;
      id v28 = v21;
      sub_1001052C8();
      *(void *)uint64_t v58 = v21;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s (sharedCoredataInit) LoadPersistentStores Unresolved error: %@", (uint8_t *)v25, 0x16u);
      sub_100007E0C(&qword_10014DF20);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    }
  }
  else
  {
    uint64_t v54 = a5;
    uint64_t v55 = v16;
    uint64_t v56 = a3;
    a4[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_persistentStoresLoadSuccess] = 1;
    id v29 = [*(id *)&a4[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container] viewContext];
    id v30 = [v29 persistentStoreCoordinator];

    if (v30)
    {
      id v31 = [v30 persistentStores];

      sub_100008234(0, (unint64_t *)&qword_10014CE30);
      unint64_t v32 = sub_100104D28();

      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1001055E8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = 0;
    }
    v57 = v12;
    uint64_t v58 = v10;
    if (qword_10014BEF0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_100103DB8();
    sub_100007D30(v34, (uint64_t)qword_10014CDC0);
    char v35 = a4;
    os_log_type_t v36 = sub_100103D98();
    os_log_type_t v37 = sub_100105018();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v59 = v9;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v61 = v53;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v52 = v39 + 4;
      sub_10001A2A8((unint64_t *)&qword_10014CA98, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = sub_1001057C8();
      double v60 = COERCE_DOUBLE(sub_1000456B4(v40, v41, &v61));
      sub_1001052C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2048;
      double v60 = *(double *)&v33;
      sub_1001052C8();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s(sharedCoredataInit) persistentStoresCount:%ld", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v9 = v59;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v42 = v54;
    uint64_t v43 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v55, v56, v13);
    unint64_t v45 = v57;
    uint64_t v44 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v42, v9);
    char v46 = sub_100103D98();
    os_log_type_t v47 = sub_100105018();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v61 = v56;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v54 = v48 + 4;
      sub_10001A2A8((unint64_t *)&qword_10014CA98, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v49 = sub_1001057C8();
      double v60 = COERCE_DOUBLE(sub_1000456B4(v49, v50, &v61));
      sub_1001052C8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      *(_WORD *)(v48 + 12) = 2048;
      sub_100103918();
      double v60 = -v51;
      sub_1001052C8();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v59);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s (sharedCoredataInit) container.loadPersistentStores completed in %f seconds.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v9);
    }
  }
}

void sub_100019C4C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id sub_100019D08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDataStackShared();
  return [super dealloc];
}

uint64_t sub_100019DE0()
{
  return type metadata accessor for CoreDataStackShared();
}

uint64_t type metadata accessor for CoreDataStackShared()
{
  uint64_t result = qword_10014CE08;
  if (!qword_10014CE08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100019E34()
{
  sub_1001039D8();
  if (v0 <= 0x3F)
  {
    sub_100019F18();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100019F18()
{
  if (!qword_10014CE18)
  {
    sub_100103818();
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10014CE18);
    }
  }
}

uint64_t sub_100019F70(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151990);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100019FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001A038()
{
  uint64_t v1 = sub_1001039D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_10001A19C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1001039D8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_100103978() - 8);
  uint64_t v9 = *(unsigned char **)(v2 + v7);
  uint64_t v10 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  sub_100019360(a1, a2, v2 + v6, v9, v10);
}

uint64_t sub_10001A290(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001A2A0()
{
  return swift_release();
}

uint64_t sub_10001A2A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001A2F0()
{
  uint64_t v0 = sub_100007E0C(&qword_10014CE48);

  return TupleWidget.init(_:)(v0, v0);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_10001A370()
{
  unint64_t result = qword_10014CE40;
  if (!qword_10014CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CE40);
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalWidgetBundle()
{
  return &type metadata for JournalWidgetBundle;
}

uint64_t sub_10001A3D4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10001A3F4()
{
  unint64_t result = qword_10014CE50;
  if (!qword_10014CE50)
  {
    sub_100007F30(&qword_10014CE58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CE50);
  }
  return result;
}

unint64_t sub_10001A454()
{
  unint64_t result = qword_10014CE60;
  if (!qword_10014CE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CE60);
  }
  return result;
}

BOOL sub_10001A4A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_10001A4D0()
{
  if (*v0) {
    return 0xD000000000000045;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

uint64_t getEnumTagSinglePayload for NSItemProviderExtensionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NSItemProviderExtensionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001A678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10001A6A0(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NSItemProviderExtensionError()
{
  return &type metadata for NSItemProviderExtensionError;
}

unint64_t sub_10001A6C0()
{
  unint64_t result = qword_10014CE68;
  if (!qword_10014CE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CE68);
  }
  return result;
}

uint64_t sub_10001A714(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_10014CF50);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10001EA80();
  sub_100105968();
  char v13 = 0;
  type metadata accessor for StreakSummary();
  sub_10001EAD4(&qword_10014CF60, (void (*)(uint64_t))type metadata accessor for StreakSummary);
  sub_1001057A8();
  if (!v1)
  {
    _s14descr100136C01O8SnapshotVMa();
    char v12 = 1;
    sub_1001057A8();
    char v11 = 2;
    sub_100105798();
    char v10 = 3;
    sub_100105798();
    char v9 = 4;
    sub_100105798();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10001A960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = (int *)type metadata accessor for StreakSummary();
  uint64_t v4 = __chkstk_darwin(v3);
  unint64_t v32 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v33 = (uint64_t)&v25 - v6;
  uint64_t v34 = sub_100007E0C(&qword_10014CF68);
  uint64_t v30 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  os_log_type_t v36 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s14descr100136C01O8SnapshotVMa();
  char v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100103978();
  char v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(&v11[v3[5]], 1, 1, v12);
  v13(&v11[v3[6]], 1, 1, v12);
  *(void *)&v11[v3[7]] = 0;
  uint64_t v14 = (uint64_t)&v11[v9[7]];
  v13((char *)v14, 1, 1, v12);
  v13((char *)(v14 + v3[5]), 1, 1, v12);
  v13((char *)(v14 + v3[6]), 1, 1, v12);
  id v31 = v3;
  *(void *)(v14 + v3[7]) = 0;
  uint64_t v15 = v9[8];
  *(void *)&v11[v15] = 0;
  uint64_t v16 = v9[9];
  *(void *)&v11[v16] = 0;
  uint64_t v17 = v9[10];
  *(void *)&v11[v17] = 0;
  sub_100012154(a1, a1[3]);
  sub_10001EA80();
  uint64_t v18 = v35;
  sub_100105958();
  if (!v18)
  {
    uint64_t v27 = v15;
    uint64_t v28 = v14;
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    char v35 = a1;
    uint64_t v19 = (uint64_t)v32;
    char v41 = 0;
    sub_10001EAD4(&qword_10014CF70, (void (*)(uint64_t))type metadata accessor for StreakSummary);
    uint64_t v20 = v36;
    sub_1001056F8();
    sub_10001EB1C(v33, (uint64_t)v11);
    char v40 = 1;
    sub_1001056F8();
    sub_10001EB1C(v19, v28);
    char v39 = 2;
    *(void *)&v11[v27] = sub_1001056E8();
    char v38 = 3;
    *(void *)&v11[v25] = sub_1001056E8();
    char v37 = 4;
    uint64_t v22 = v34;
    uint64_t v23 = sub_1001056E8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v22);
    uint64_t v24 = v29;
    a1 = v35;
    *(void *)&v11[v26] = v23;
    sub_10001EB80((uint64_t)v11, v24, (uint64_t (*)(void))_s14descr100136C01O8SnapshotVMa);
  }
  sub_1000121EC((uint64_t)a1);
  return sub_10001CA08((uint64_t)v11, (uint64_t (*)(void))_s14descr100136C01O8SnapshotVMa);
}

uint64_t sub_10001AE0C()
{
  uint64_t result = 0x6144657669746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6557657669746361;
      break;
    case 2:
      uint64_t result = 0x6E756F4364726F77;
      break;
    case 3:
      uint64_t result = 0x746E756F43796164;
      break;
    case 4:
      uint64_t result = 0x5473656972746E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10001AED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10001EE84(a1, a2);
  *a3 = result;
  return result;
}

void sub_10001AEFC(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10001AF08(uint64_t a1)
{
  unint64_t v2 = sub_10001EA80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001AF44(uint64_t a1)
{
  unint64_t v2 = sub_10001EA80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001AF80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001A960(a1, a2);
}

uint64_t sub_10001AF98(void *a1)
{
  return sub_10001A714(a1);
}

void sub_10001AFB0()
{
  uint64_t v1 = v0;
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  __chkstk_darwin(Update);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_10014CEA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)_s14descr100136C01O8SnapshotVMa();
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options;
  if (sub_1000A83B0(5u, *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options)))
  {
    id v13 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v14 = sub_100104B38();
    id v37 = [v13 initWithSuiteName:v14];

    if (v37)
    {
      NSString v15 = sub_100104B38();
      id v16 = [v37 dataForKey:v15];

      if (v16)
      {
        uint64_t v34 = Update;
        uint64_t v17 = sub_100103848();
        unint64_t v19 = v18;

        sub_100103678();
        swift_allocObject();
        sub_100103668();
        sub_10001EAD4(&qword_10014CEA8, (void (*)(uint64_t))_s14descr100136C01O8SnapshotVMa);
        uint64_t v35 = v17;
        unint64_t v36 = v19;
        sub_100103658();
        swift_release();
        (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v7, 0, 1, v8);
        sub_10001C920((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))_s14descr100136C01O8SnapshotVMa);
        swift_getKeyPath();
        uint64_t v33 = 0;
        uint64_t v39 = v1;
        sub_10001EAD4(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
        sub_100103B58();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B78();
        swift_release();
        uint64_t v21 = v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
        swift_beginAccess();
        sub_10001C988((uint64_t)v11, v21);
        swift_endAccess();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B68();
        swift_release();
        unint64_t v32 = &v11[v8[5]];
        swift_getKeyPath();
        uint64_t v39 = v1;
        sub_100103B58();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B78();
        swift_release();
        swift_beginAccess();
        uint64_t v22 = type metadata accessor for InsightsDataManager.Streaks(0);
        sub_10001C988((uint64_t)v32, v21 + *(int *)(v22 + 20));
        swift_endAccess();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B68();
        swift_release();
        uint64_t v23 = *(void *)&v11[v8[6]];
        swift_getKeyPath();
        uint64_t v39 = v1;
        sub_100103B58();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B78();
        swift_release();
        *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount) = v23;
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B68();
        swift_release();
        uint64_t v24 = *(void *)&v11[v8[7]];
        swift_getKeyPath();
        uint64_t v39 = v1;
        sub_100103B58();
        swift_release();
        uint64_t v39 = v1;
        swift_getKeyPath();
        sub_100103B78();
        swift_release();
        uint64_t v25 = v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate;
        swift_beginAccess();
        unint64_t v32 = (char *)type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
        uint64_t v26 = v25 + *((int *)v32 + 5);
        *(void *)uint64_t v26 = v24;
        *(unsigned char *)(v26 + 8) = 0;
        uint64_t v38 = v1;
        swift_getKeyPath();
        sub_100103B68();
        swift_release();
        uint64_t v31 = *(void *)&v11[v8[8]];
        swift_getKeyPath();
        uint64_t v38 = v1;
        sub_100103B58();
        swift_release();
        uint64_t v38 = v1;
        swift_getKeyPath();
        sub_100103B78();
        swift_release();
        uint64_t v27 = v25 + *((int *)v32 + 8);
        *(void *)uint64_t v27 = v31;
        *(unsigned char *)(v27 + 8) = 0;
        uint64_t v38 = v1;
        swift_getKeyPath();
        sub_100103B68();
        swift_release();
        sub_100103948();
        uint64_t v28 = *(void *)(v1 + v12);
        uint64_t v29 = v34;
        *(void *)&v4[*(int *)(v34 + 20)] = 0;
        *(void *)&v4[*(int *)(v29 + 24)] = v28;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(&v31 - 2) = v1;
        *(&v31 - 1) = (uint64_t)v4;
        uint64_t v38 = v1;
        swift_bridgeObjectRetain();
        sub_100103B48();
        swift_release();
        sub_10001CA08((uint64_t)v4, type metadata accessor for InsightsDataManager.LastUpdate);

        sub_100010378(v35, v36);
        sub_10001CA08((uint64_t)v11, (uint64_t (*)(void))_s14descr100136C01O8SnapshotVMa);
      }
      else
      {
        id v20 = v37;
      }
    }
  }
}

uint64_t sub_10001B7C0()
{
  uint64_t v1 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v43 - v4;
  uint64_t v6 = type metadata accessor for StreakSummary();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)&v43 - v10;
  uint64_t v48 = _s14descr100136C01O8SnapshotVMa();
  __chkstk_darwin(v48);
  uint64_t v49 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100103978();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v43 - v18;
  uint64_t v50 = v0;
  uint64_t result = sub_1000A83B0(5u, *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options));
  if (result)
  {
    swift_getKeyPath();
    uint64_t v21 = v50;
    uint64_t v22 = v50 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager___observationRegistrar;
    uint64_t v54 = v50;
    uint64_t v45 = sub_10001EAD4(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    uint64_t v46 = v22;
    sub_100103B58();
    swift_release();
    uint64_t v23 = v21 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v23, v13);
    sub_100103888();
    sub_10001EAD4(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
    LOBYTE(v22) = sub_100104A98();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24(v17, v13);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v19, v13);
    if ((v22 & 1) == 0)
    {
      swift_getKeyPath();
      uint64_t v53 = v50;
      sub_100103B58();
      swift_release();
      uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
      uint64_t result = sub_1000A83B0(5u, *(void *)(v23 + *(int *)(Update + 24)));
      if ((result & 1) == 0)
      {
        swift_getKeyPath();
        uint64_t v26 = v50;
        uint64_t v53 = v50;
        sub_100103B58();
        swift_release();
        uint64_t v27 = v26 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
        swift_beginAccess();
        sub_10001EB80(v27, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StreakSummary);
        swift_getKeyPath();
        uint64_t v52 = v26;
        sub_100103B58();
        swift_release();
        uint64_t v28 = type metadata accessor for InsightsDataManager.Streaks(0);
        sub_10001EB80(v27 + *(int *)(v28 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StreakSummary);
        swift_getKeyPath();
        uint64_t v52 = v26;
        sub_100103B58();
        swift_release();
        uint64_t v44 = *(void *)(v26 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount);
        swift_getKeyPath();
        uint64_t v52 = v26;
        sub_100103B58();
        swift_release();
        uint64_t v29 = v26 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate;
        swift_beginAccess();
        sub_10001EB80(v29, (uint64_t)v5, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        uint64_t v43 = sub_10001BF30();
        sub_10001CA08((uint64_t)v5, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        swift_getKeyPath();
        uint64_t v51 = v26;
        sub_100103B58();
        swift_release();
        uint64_t v30 = v29;
        uint64_t v31 = v47;
        sub_10001EB80(v30, v47, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        uint64_t v32 = sub_10001C0D0();
        sub_10001CA08(v31, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
        uint64_t v33 = v49;
        sub_10001C920((uint64_t)v11, v49, (uint64_t (*)(void))type metadata accessor for StreakSummary);
        uint64_t v34 = (int *)v48;
        sub_10001C920((uint64_t)v9, v33 + *(int *)(v48 + 20), (uint64_t (*)(void))type metadata accessor for StreakSummary);
        *(void *)(v33 + v34[6]) = v44;
        *(void *)(v33 + v34[7]) = v43;
        *(void *)(v33 + v34[8]) = v32;
        id v35 = objc_allocWithZone((Class)NSUserDefaults);
        NSString v36 = sub_100104B38();
        id v37 = [v35 initWithSuiteName:v36];

        if (v37)
        {
          sub_1001036A8();
          swift_allocObject();
          sub_100103698();
          sub_10001EAD4(&qword_10014CE80, (void (*)(uint64_t))_s14descr100136C01O8SnapshotVMa);
          uint64_t v38 = sub_100103688();
          unint64_t v40 = v39;
          swift_release();
          Class isa = sub_100103838().super.isa;
          NSString v42 = sub_100104B38();
          [v37 setObject:isa forKey:v42];

          sub_100010378(v38, v40);
        }
        return sub_10001CA08(v33, (uint64_t (*)(void))_s14descr100136C01O8SnapshotVMa);
      }
    }
  }
  return result;
}

uint64_t sub_10001BF30()
{
  uint64_t v1 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + *(int *)(sub_100007E0C(&qword_10014CE90) + 32));
  uint64_t result = sub_10001C678(v4);
  if (v7) {
    goto LABEL_10;
  }
  unsigned int v8 = *(_DWORD *)(v4 + 36);
  if (v8 != v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (result == v9)
  {
    sub_10001EB80(v0, (uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    uint64_t v10 = &v3[*(int *)(v1 + 20)];
    uint64_t v11 = *(void *)v10;
    int v12 = v10[8];
    sub_10001CA08((uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    if (v12) {
      return 0;
    }
    else {
      return v11;
    }
  }
  else
  {
    uint64_t v13 = sub_10001C678(v4);
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    uint64_t v18 = sub_10001C718(v13, v14, v16 & 1, v9, v8, 0);
    sub_10001C914(v13, v15, v17);
    sub_10001EB80(v0, (uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_10001CA08((uint64_t)v3, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    return v18;
  }
}

uint64_t sub_10001C0D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103948();
  uint64_t v9 = sub_10001C2C8((uint64_t)v8);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v13)
  {
    sub_10001C5C8(v9, v11, v13);
    sub_10001EB80(v1, (uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_10001CA08((uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  }
  else
  {
    sub_10001EB80(v1, (uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    uint64_t v14 = &v4[*(int *)(v2 + 32)];
    uint64_t v11 = *(void *)v14;
    int v15 = v14[8];
    sub_10001CA08((uint64_t)v4, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    if (v15) {
      return 0;
    }
  }
  return v11;
}

uint64_t sub_10001C2C8(uint64_t a1)
{
  uint64_t v23 = sub_100007E0C(&qword_10014CE88);
  __chkstk_darwin(v23);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007E0C(&qword_10014CE90);
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v22 = v1;
  uint64_t v11 = v1 + v10;
  sub_10001EAD4((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
  char v12 = sub_100104A38();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v21[1] = a1;
  v13(v8, a1, v5);
  sub_10001C60C(v11, (uint64_t)v4);
  if ((v12 & 1) == 0)
  {
    sub_100012510((uint64_t)v4, &qword_10014CE88);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  char v14 = sub_100104A48();
  sub_100012510((uint64_t)v4, &qword_10014CE88);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v14 & 1) == 0) {
    return 0;
  }
  uint64_t v15 = *(void *)(v22 + *(int *)(v9 + 32));
  uint64_t v16 = sub_1000FF52C();
  if (!*(void *)(v15 + 16)) {
    return 0;
  }
  unint64_t v17 = sub_10000B6E8(v16);
  if ((v18 & 1) == 0) {
    return 0;
  }
  uint64_t v19 = *(void *)(*(void *)(v15 + 56) + 32 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v19;
}

uint64_t _s14descr100136C01O8SnapshotVMa()
{
  uint64_t result = qword_10014CF08;
  if (!qword_10014CF08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001C5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001C60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014CE88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001C678(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 88);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10001C718(uint64_t result, uint64_t a2, char a3, uint64_t a4, unsigned int a5, char a6)
{
  if (a6 & 1) != 0 || (a3) {
    goto LABEL_38;
  }
  unint64_t v8 = result;
  if (a4 < result) {
    goto LABEL_36;
  }
  uint64_t v9 = a2;
  if (a5 != a2)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (result != a4)
  {
    uint64_t result = sub_100007E0C(&qword_10014CE90);
    unsigned int v11 = a5;
    uint64_t v12 = *(void *)(v6 + *(int *)(result + 32));
    uint64_t v13 = v12 + 64;
    uint64_t v14 = v12 + 96;
    uint64_t v10 = 1;
    while (1)
    {
      if ((v8 & 0x8000000000000000) != 0 || (uint64_t v15 = 1 << *(unsigned char *)(v12 + 32), (uint64_t)v8 >= v15))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      unint64_t v16 = v8 >> 6;
      unint64_t v17 = *(void *)(v13 + 8 * (v8 >> 6));
      if (((v17 >> v8) & 1) == 0) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(v12 + 36) != v9) {
        goto LABEL_34;
      }
      unint64_t v18 = v17 & (-2 << (v8 & 0x3F));
      if (v18)
      {
        unint64_t v8 = __clz(__rbit64(v18)) | v8 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v19 = v16 + 1;
        unint64_t v20 = (unint64_t)(v15 + 63) >> 6;
        if (v16 + 1 >= v20) {
          goto LABEL_26;
        }
        unint64_t v21 = *(void *)(v13 + 8 * v19);
        if (!v21)
        {
          unint64_t v19 = v16 + 2;
          if (v16 + 2 >= v20) {
            goto LABEL_26;
          }
          unint64_t v21 = *(void *)(v13 + 8 * v19);
          if (!v21)
          {
            unint64_t v19 = v16 + 3;
            if (v16 + 3 >= v20) {
              goto LABEL_26;
            }
            unint64_t v21 = *(void *)(v13 + 8 * v19);
            if (!v21)
            {
              while (v20 - 4 != v16)
              {
                unint64_t v21 = *(void *)(v14 + 8 * v16++);
                if (v21)
                {
                  uint64_t v22 = v14;
                  uint64_t result = sub_10001C914(v8, v9, 0);
                  uint64_t v14 = v22;
                  unsigned int v11 = a5;
                  unint64_t v19 = v16 + 3;
                  goto LABEL_17;
                }
              }
              uint64_t v23 = v14;
              uint64_t result = sub_10001C914(v8, v9, 0);
              uint64_t v14 = v23;
              unsigned int v11 = a5;
LABEL_26:
              unint64_t v8 = v15;
              goto LABEL_27;
            }
          }
        }
LABEL_17:
        unint64_t v8 = __clz(__rbit64(v21)) + (v19 << 6);
      }
LABEL_27:
      if (v9 != v11) {
        goto LABEL_35;
      }
      if (v8 == a4) {
        return v10;
      }
      uint64_t v9 = a5;
      if (__OFADD__(v10++, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
    }
  }
  return 0;
}

uint64_t sub_10001C914(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001C920(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001C988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001C9EC()
{
  return sub_10001FF24(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10001CA08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_10001CA68(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100103978();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = (int *)type metadata accessor for StreakSummary();
    uint64_t v13 = v12[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (v9((uint64_t *)((char *)a2 + v13), 1, v7))
    {
      uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v15, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    }
    uint64_t v17 = v12[6];
    unint64_t v18 = (char *)a1 + v17;
    unint64_t v19 = (char *)a2 + v17;
    if (v9((uint64_t *)((char *)a2 + v17), 1, v7))
    {
      uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v18, v19, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + v12[7]) = *(uint64_t *)((char *)a2 + v12[7]);
    uint64_t v21 = a3[5];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v35 = v8;
    NSString v36 = a3;
    if (v9((uint64_t *)((char *)a2 + v21), 1, v7))
    {
      uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v22, v23, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v7);
    }
    uint64_t v25 = v12[5];
    uint64_t v26 = &v22[v25];
    uint64_t v27 = &v23[v25];
    if (v9((uint64_t *)&v23[v25], 1, v7))
    {
      uint64_t v28 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v27, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v7);
    }
    uint64_t v29 = v12[6];
    uint64_t v30 = &v22[v29];
    uint64_t v31 = &v23[v29];
    if (v9((uint64_t *)&v23[v29], 1, v7))
    {
      uint64_t v32 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v30, v31, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v7);
    }
    *(void *)&v22[v12[7]] = *(void *)&v23[v12[7]];
    uint64_t v33 = v36[7];
    *(uint64_t *)((char *)a1 + v36[6]) = *(uint64_t *)((char *)a2 + v36[6]);
    *(uint64_t *)((char *)a1 + v33) = *(uint64_t *)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + v36[8]) = *(uint64_t *)((char *)a2 + v36[8]);
  }
  return a1;
}

uint64_t sub_10001CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103978();
  uint64_t v14 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v4);
  }
  uint64_t v6 = type metadata accessor for StreakSummary();
  uint64_t v7 = a1 + *(int *)(v6 + 20);
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + *(int *)(v6 + 24);
  if (!v5(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  if (!v5(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v4);
  }
  uint64_t v10 = v9 + *(int *)(v6 + 20);
  if (!v5(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v10, v4);
  }
  uint64_t v11 = v9 + *(int *)(v6 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v11, 1, v4);
  if (!result)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v13(v11, v4);
  }
  return result;
}

char *sub_10001D1A0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v8(&a2[v11], 1, v6))
  {
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v15 = v10[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v8(&a2[v15], 1, v6))
  {
    uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v19 = a3[5];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v34 = a3;
  uint64_t v22 = v8;
  if (v8(&a2[v19], 1, v6))
  {
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  uint64_t v24 = v10[5];
  uint64_t v25 = &v20[v24];
  uint64_t v26 = &v21[v24];
  if (v22(&v21[v24], 1, v6))
  {
    uint64_t v27 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = v10[6];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  if (v22(&v21[v28], 1, v6))
  {
    uint64_t v31 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  }
  *(void *)&v20[v10[7]] = *(void *)&v21[v10[7]];
  uint64_t v32 = v34[7];
  *(void *)&a1[v34[6]] = *(void *)&a2[v34[6]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  *(void *)&a1[v34[8]] = *(void *)&a2[v34[8]];
  return a1;
}

char *sub_10001D640(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v8 = v7(a1, 1, v6);
  int v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = (int *)type metadata accessor for StreakSummary();
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v7(&a1[v12], 1, v6);
  int v16 = v7(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = v11[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v7(&a1[v18], 1, v6);
  int v22 = v7(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v19, v20, v6);
LABEL_19:
  *(void *)&a1[v11[7]] = *(void *)&a2[v11[7]];
  uint64_t v24 = a3[5];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v7(&a1[v24], 1, v6);
  int v28 = v7(v26, 1, v6);
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = v11[5];
  uint64_t v31 = &v25[v30];
  uint64_t v32 = &v26[v30];
  int v33 = v7(&v25[v30], 1, v6);
  int v34 = v7(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = v11[6];
  id v37 = &v25[v36];
  uint64_t v38 = &v26[v36];
  int v39 = v7(&v25[v36], 1, v6);
  int v40 = v7(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v37, v38, v6);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v6);
    goto LABEL_36;
  }
  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v37, 0, 1, v6);
LABEL_37:
  *(void *)&v25[v11[7]] = *(void *)&v26[v11[7]];
  *(void *)&a1[v43[6]] = *(void *)&v44[v43[6]];
  *(void *)&a1[v43[7]] = *(void *)&v44[v43[7]];
  *(void *)&a1[v43[8]] = *(void *)&v44[v43[8]];
  return a1;
}

char *sub_10001DD40(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v8(&a2[v11], 1, v6))
  {
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v15 = v10[6];
  int v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v8(&a2[v15], 1, v6))
  {
    uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v19 = a3[5];
  uint64_t v20 = &a1[v19];
  int v21 = &a2[v19];
  int v34 = a3;
  int v22 = v8;
  if (v8(&a2[v19], 1, v6))
  {
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  }
  uint64_t v24 = v10[5];
  uint64_t v25 = &v20[v24];
  uint64_t v26 = &v21[v24];
  if (v22(&v21[v24], 1, v6))
  {
    uint64_t v27 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = v10[6];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  if (v22(&v21[v28], 1, v6))
  {
    uint64_t v31 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v30, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  }
  *(void *)&v20[v10[7]] = *(void *)&v21[v10[7]];
  uint64_t v32 = v34[7];
  *(void *)&a1[v34[6]] = *(void *)&a2[v34[6]];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  *(void *)&a1[v34[8]] = *(void *)&a2[v34[8]];
  return a1;
}

char *sub_10001E1E0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v8 = v7(a1, 1, v6);
  int v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = (int *)type metadata accessor for StreakSummary();
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v7(&a1[v12], 1, v6);
  int v16 = v7(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = v11[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v7(&a1[v18], 1, v6);
  int v22 = v7(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v19, v20, v6);
LABEL_19:
  *(void *)&a1[v11[7]] = *(void *)&a2[v11[7]];
  uint64_t v24 = a3[5];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v7(&a1[v24], 1, v6);
  int v28 = v7(v26, 1, v6);
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = v11[5];
  uint64_t v31 = &v25[v30];
  uint64_t v32 = &v26[v30];
  int v33 = v7(&v25[v30], 1, v6);
  int v34 = v7(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = v11[6];
  id v37 = &v25[v36];
  uint64_t v38 = &v26[v36];
  int v39 = v7(&v25[v36], 1, v6);
  int v40 = v7(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v37, v38, v6);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v6);
    goto LABEL_36;
  }
  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v37, 0, 1, v6);
LABEL_37:
  *(void *)&v25[v11[7]] = *(void *)&v26[v11[7]];
  uint64_t v42 = v44[7];
  *(void *)&a1[v44[6]] = *(void *)&v45[v44[6]];
  *(void *)&a1[v42] = *(void *)&v45[v42];
  *(void *)&a1[v44[8]] = *(void *)&v45[v44[8]];
  return a1;
}

uint64_t sub_10001E8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001E8F0);
}

uint64_t sub_10001E8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10001E95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001E970);
}

uint64_t sub_10001E970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10001E9E0()
{
  uint64_t result = type metadata accessor for StreakSummary();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10001EA80()
{
  unint64_t result = qword_10014CF58;
  if (!qword_10014CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CF58);
  }
  return result;
}

uint64_t sub_10001EAD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001EB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001EB80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s14descr100136C01O8SnapshotV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr100136C01O8SnapshotV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001ED44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr100136C01O8SnapshotV10CodingKeysOMa()
{
  return &_s14descr100136C01O8SnapshotV10CodingKeysON;
}

unint64_t sub_10001ED80()
{
  unint64_t result = qword_10014CF78;
  if (!qword_10014CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CF78);
  }
  return result;
}

unint64_t sub_10001EDD8()
{
  unint64_t result = qword_10014CF80;
  if (!qword_10014CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CF80);
  }
  return result;
}

unint64_t sub_10001EE30()
{
  unint64_t result = qword_10014CF88;
  if (!qword_10014CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CF88);
  }
  return result;
}

uint64_t sub_10001EE84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144657669746361 && a2 == 0xEA00000000007379;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6557657669746361 && a2 == 0xEB00000000736B65 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E756F4364726F77 && a2 == 0xE900000000000074 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F43796164 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5473656972746E65 && a2 == 0xEF72616559736968)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t getEnumTagSinglePayload for AssetSizeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetSizeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001F254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetSizeType()
{
  return &type metadata for AssetSizeType;
}

unint64_t sub_10001F290()
{
  unint64_t result = qword_10014CF90;
  if (!qword_10014CF90)
  {
    sub_100007F30(&qword_10014CF98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CF90);
  }
  return result;
}

uint64_t sub_10001F2EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, char a7)
{
  uint64_t v10 = (void *)0xE600000000000000;
  sub_1001039D8();
  sub_100012FC0();
  v13._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 45;
  v14._object = (void *)0xE100000000000000;
  sub_100104BE8(v14);
  v15._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 45;
  v16._object = (void *)0xE100000000000000;
  sub_100104BE8(v16);
  v11._countAndFlagsBits = 0x656772614C78;
  switch(a7)
  {
    case 1:
      v11._countAndFlagsBits = 0x69576D756964656DLL;
      uint64_t v10 = (void *)0xEA00000000006564;
      break;
    case 2:
      uint64_t v10 = (void *)0xE500000000000000;
      v11._countAndFlagsBits = 0x656772616CLL;
      break;
    case 3:
      v11._countAndFlagsBits = 0x6D756964656DLL;
      break;
    case 4:
      uint64_t v10 = (void *)0xE500000000000000;
      v11._countAndFlagsBits = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v10 = (void *)0xEA00000000006E65;
      v11._countAndFlagsBits = 0x657263536C6C7566;
      break;
    default:
      break;
  }
  v11._object = v10;
  sub_100104BE8(v11);
  swift_bridgeObjectRelease();
  if ((a6 & 1) == 0)
  {
    v17._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 45;
    v18._object = (void *)0xE100000000000000;
    sub_100104BE8(v18);
    swift_bridgeObjectRelease();
  }
  if ((a4 & 1) == 0)
  {
    v19._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 45;
    v20._object = (void *)0xE100000000000000;
    sub_100104BE8(v20);
    swift_bridgeObjectRelease();
  }
  return 0x2D626D756874;
}

uint64_t sub_10001F568(unsigned __int8 *a1, char *a2)
{
  return sub_10005444C(*a1, *a2);
}

Swift::Int sub_10001F574()
{
  return sub_10003DD6C();
}

uint64_t sub_10001F57C()
{
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10001F670()
{
  return sub_10003E384();
}

uint64_t sub_10001F678@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10001F7E4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10001F6A8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x656772614C78;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x69576D756964656DLL;
      unint64_t v2 = 0xEA00000000006564;
      goto LABEL_3;
    case 2:
      *a1 = 0x656772616CLL;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6C6C616D73;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 0x657263536C6C7566;
      a1[1] = 0xEA00000000006E65;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_10001F77C(void *a1@<X8>)
{
  *a1 = &off_1001382B0;
}

unint64_t sub_10001F790()
{
  unint64_t result = qword_10014CFA0;
  if (!qword_10014CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CFA0);
  }
  return result;
}

uint64_t sub_10001F7E4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001386B8;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

void _s32MOPOIAnnotationViewConfigurationVwxx(id *a1)
{
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  Swift::OpaquePointer v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 _s32MOPOIAnnotationViewConfigurationVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s32MOPOIAnnotationViewConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s32MOPOIAnnotationViewConfigurationVMa()
{
  return &_s32MOPOIAnnotationViewConfigurationVN;
}

void *sub_10001FA58()
{
  __n128 result = (void *)sub_10000AD5C((uint64_t)&off_100138608);
  off_10014CFA8 = result;
  return result;
}

void *sub_10001FA80()
{
  __n128 result = (void *)sub_10000AD5C((uint64_t)&off_100138588);
  off_10014CFB0 = result;
  return result;
}

uint64_t sub_10001FAA8()
{
  if (*(uint64_t *)(v0 + 16) > 1 || (*(unsigned char *)(v0 + 24) & 1) != 0)
  {
    if (qword_10014BF00 != -1) {
      swift_once();
    }
    unint64_t v1 = off_10014CFB0;
    if (!*((void *)off_10014CFB0 + 2)) {
      return 0;
    }
  }
  else
  {
    if (qword_10014BEF8 != -1) {
      swift_once();
    }
    unint64_t v1 = off_10014CFA8;
    if (!*((void *)off_10014CFA8 + 2)) {
      return 0;
    }
  }
  unint64_t v2 = sub_10000B5B8(*(unsigned char *)(v0 + 8));
  if (v3) {
    return *(void *)(v1[7] + 8 * v2);
  }
  return 0;
}

double sub_10001FB84()
{
  double v1 = COERCE_DOUBLE(sub_10001FAA8());
  double v2 = 0.0;
  double v3 = 0.0;
  if ((v4 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v7 = v1 * 0.45;
      double v5 = (v1 - v1 * 0.45) * 0.5;
      double v6 = v5;
    }
    else
    {
      double v5 = v1 * 0.55 * 0.5;
      double v6 = *(double *)(v0 + 32);
      double v7 = v1 * 0.45;
    }
    nullsub_1(v5, v6, v7, v7);
    double v3 = v8;
  }
  double v9 = COERCE_DOUBLE(sub_10001FAA8());
  if ((v10 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v13 = v9 * 0.45;
      double v11 = (v9 - v9 * 0.45) * 0.5;
      double v12 = v11;
    }
    else
    {
      double v11 = v9 * 0.55 * 0.5;
      double v12 = *(double *)(v0 + 32);
      double v13 = v9 * 0.45;
    }
    double v2 = nullsub_1(v11, v12, v13, v13);
  }
  double v14 = COERCE_DOUBLE(sub_10001FAA8());
  double v15 = 0.0;
  if ((v16 & 1) == 0)
  {
    if ((*(uint64_t *)(v0 + 16) > 1
       || (*(unsigned char *)(v0 + 24) & 1) != 0
       || (*(unsigned char *)(v0 + 26) & 1) != 0 && (*(unsigned char *)(v0 + 9) & 1) == 0)
      && (*(unsigned char *)(v0 + 25) & 1) != 0)
    {
      double v19 = v14 * 0.45;
      double v17 = (v14 - v14 * 0.45) * 0.5;
      double v18 = v17;
    }
    else
    {
      double v17 = v14 * 0.55 * 0.5;
      double v18 = *(double *)(v0 + 32);
      double v19 = v14 * 0.45;
    }
    nullsub_1(v17, v18, v19, v19);
  }
  double v20 = v3 * 0.15 * 0.5;
  double v21 = v15 - v20;

  return nullsub_1(v2 - v20, v21, v3 * 1.15, v3 * 1.15);
}

uint64_t sub_10001FD84@<X0>(uint64_t a1@<X8>)
{
  return sub_100020F58(&OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate, a1);
}

uint64_t sub_10001FDAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100021054(a1, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate, a2);
}

uint64_t sub_10001FDD4(uint64_t a1, uint64_t *a2)
{
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  __chkstk_darwin(Update - 8);
  double v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002AB78(a1, (uint64_t)v6, type metadata accessor for InsightsDataManager.LastUpdate);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  double v11 = v6;
  uint64_t v12 = v7;
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B48();
  swift_release();
  return sub_10002AAD8((uint64_t)v6, type metadata accessor for InsightsDataManager.LastUpdate);
}

uint64_t sub_10001FF24(uint64_t a1, uint64_t a2)
{
  return sub_1000212B0(a1, a2, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
}

id sub_10001FF58()
{
  uint64_t v1 = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager____lazy_storage___workContext;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager____lazy_storage___workContext);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager____lazy_storage___workContext);
  }
  else
  {
    id v4 = [*(id *)(v0 + 16) newBackgroundContext];
    NSString v5 = sub_100104B38();
    [v4 setName:v5];

    id v6 = [self mergeByPropertyStoreTrumpMergePolicy];
    [v4 setMergePolicy:v6];

    [v4 setAutomaticallyMergesChangesFromParent:1];
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_100020050@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  swift_beginAccess();
  uint64_t v4 = sub_100103AE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10002014C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  swift_beginAccess();
  uint64_t v5 = sub_100103AE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100020248(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100103AE8();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B48();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000203D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  swift_beginAccess();
  uint64_t v4 = sub_100103AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_10002046C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__referenceDate;
  swift_beginAccess();
  return sub_10002ACE4(v3, a1);
}

uint64_t sub_100020538@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__referenceDate;
  swift_beginAccess();
  return sub_10002ACE4(v4, a2);
}

uint64_t sub_100020604(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002ACE4(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B48();
  swift_release();
  return sub_10002AD68((uint64_t)v6);
}

uint64_t sub_100020730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__referenceDate;
  swift_beginAccess();
  sub_10002ADC8(a2, v3);
  return swift_endAccess();
}

uint64_t sub_10002079C()
{
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100020864@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount + 16);
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount + 24);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount);
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100020924()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100020A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount);
  *uint64_t v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100020A64@<X0>(uint64_t a1@<X8>)
{
  return sub_100020F58(&OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup, a1);
}

uint64_t sub_100020A8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100021054(a1, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup, a2);
}

uint64_t sub_100020AB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002AB78(a1, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B48();
  swift_release();
  return sub_10002AAD8((uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
}

uint64_t sub_100020C04(uint64_t a1, uint64_t a2)
{
  return sub_1000212B0(a1, a2, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
}

uint64_t sub_100020C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100103978();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(a1, 1, 1, v2);
  uint64_t v4 = (int *)type metadata accessor for StreakSummary();
  v3(a1 + v4[5], 1, 1, v2);
  v3(a1 + v4[6], 1, 1, v2);
  *(void *)(a1 + v4[7]) = 0;
  uint64_t v5 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v6 = a1 + v5[5];
  v3(v6, 1, 1, v2);
  v3(v6 + v4[5], 1, 1, v2);
  v3(v6 + v4[6], 1, 1, v2);
  *(void *)(v6 + v4[7]) = 0;
  uint64_t v7 = a1 + v5[6];
  v3(v7, 1, 1, v2);
  v3(v7 + v4[5], 1, 1, v2);
  v3(v7 + v4[6], 1, 1, v2);
  *(void *)(v7 + v4[7]) = 0;
  uint64_t v8 = a1 + v5[7];
  v3(v8, 1, 1, v2);
  v3(v8 + v4[5], 1, 1, v2);
  v3(v8 + v4[6], 1, 1, v2);
  *(void *)(v8 + v4[7]) = 0;
  uint64_t v9 = a1 + v5[8];
  v3(v9, 1, 1, v2);
  v3(v9 + v4[5], 1, 1, v2);
  v3(v9 + v4[6], 1, 1, v2);
  *(void *)(v9 + v4[7]) = 0;
  uint64_t v10 = a1 + v5[9];
  v3(v10, 1, 1, v2);
  v3(v10 + v4[5], 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v10 + v4[6], 1, 1, v2);
  *(void *)(v10 + v4[7]) = 0;
  return result;
}

uint64_t sub_100020F30@<X0>(uint64_t a1@<X8>)
{
  return sub_100020F58(&OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks, a1);
}

uint64_t sub_100020F58@<X0>(void *a1@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_10002AB78(v7, a3, a2);
}

uint64_t sub_10002102C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100021054(a1, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks, a2);
}

uint64_t sub_100021054@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t (*a3)(void)@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v8 = v7 + *a2;
  swift_beginAccess();
  return sub_10002AB78(v8, a4, a3);
}

uint64_t sub_10002112C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for InsightsDataManager.Streaks(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002AB78(a1, (uint64_t)v6, type metadata accessor for InsightsDataManager.Streaks);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B48();
  swift_release();
  return sub_10002AAD8((uint64_t)v6, type metadata accessor for InsightsDataManager.Streaks);
}

uint64_t sub_10002127C(uint64_t a1, uint64_t a2)
{
  return sub_1000212B0(a1, a2, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks);
}

uint64_t sub_1000212B0(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a1 + *a3;
  swift_beginAccess();
  sub_10002AC18(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_100021320()
{
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000213F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime + 8);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime + 16);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime + 24);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime);
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000214C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000215DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime);
  *uint64_t v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100021664()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100021710@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002B7AC(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__places);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000217C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000218A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__places) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000218E8()
{
  sub_10002AAD8(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  uint64_t v2 = sub_100103AE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10002AD68(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__referenceDate);
  swift_bridgeObjectRelease();
  sub_10002AAD8(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  sub_10002AAD8(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager___observationRegistrar;
  uint64_t v4 = sub_100103B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_100021A98()
{
  sub_1000218E8();

  return swift_deallocClassInstance();
}

uint64_t sub_100021AF0()
{
  return type metadata accessor for InsightsDataManager(0);
}

uint64_t type metadata accessor for InsightsDataManager(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014D038);
}

void sub_100021B18()
{
  type metadata accessor for InsightsDataManager.LastUpdate(319);
  if (v0 <= 0x3F)
  {
    sub_100103AE8();
    if (v1 <= 0x3F)
    {
      sub_100011FD8();
      if (v2 <= 0x3F)
      {
        type metadata accessor for InsightsDataManager.EntrySummaryGroup(319);
        if (v3 <= 0x3F)
        {
          type metadata accessor for InsightsDataManager.Streaks(319);
          if (v4 <= 0x3F)
          {
            sub_100103B98();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for InsightsDataManager.LastUpdate(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014D4C0);
}

uint64_t type metadata accessor for InsightsDataManager.EntrySummaryGroup(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014D418);
}

uint64_t type metadata accessor for InsightsDataManager.Streaks(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014D370);
}

ValueMetadata *type metadata accessor for InsightsDataManager.PlacesGroup()
{
  return &type metadata for InsightsDataManager.PlacesGroup;
}

uint64_t destroy for InsightsDataManager.AllTimeGroup()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InsightsDataManager.AllTimeGroup(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsDataManager.AllTimeGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InsightsDataManager.AllTimeGroup(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.AllTimeGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.AllTimeGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.AllTimeGroup()
{
  return &type metadata for InsightsDataManager.AllTimeGroup;
}

uint64_t destroy for InsightsDataManager.WordCountGroup()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InsightsDataManager.WordCountGroup(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsDataManager.WordCountGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InsightsDataManager.WordCountGroup(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.WordCountGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.WordCountGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.WordCountGroup()
{
  return &type metadata for InsightsDataManager.WordCountGroup;
}

unsigned char *storeEnumTagSinglePayload for InsightsDataManager.Option(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000221B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.Option()
{
  return &type metadata for InsightsDataManager.Option;
}

uint64_t *sub_1000221E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_100103978();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v84 = v7;
    if (v8(a2, 1, v6))
    {
      uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v12 = (int *)type metadata accessor for StreakSummary();
    uint64_t v13 = v12[5];
    double v14 = (char *)a1 + v13;
    double v15 = (char *)a2 + v13;
    if (v8((uint64_t *)((char *)a2 + v13), 1, v6))
    {
      uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v14, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v14, 0, 1, v6);
    }
    uint64_t v17 = v12[6];
    double v18 = (char *)a1 + v17;
    double v19 = (char *)a2 + v17;
    if (v8((uint64_t *)((char *)a2 + v17), 1, v6))
    {
      uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v18, v19, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v18, 0, 1, v6);
    }
    *(uint64_t *)((char *)a1 + v12[7]) = *(uint64_t *)((char *)a2 + v12[7]);
    uint64_t v21 = a3[5];
    int v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v82 = a1;
    if (v8((uint64_t *)((char *)a2 + v21), 1, v6))
    {
      uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v22, v23, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v22, 0, 1, v6);
    }
    uint64_t v25 = v12[5];
    uint64_t v26 = &v22[v25];
    int v27 = &v23[v25];
    if (v8((uint64_t *)&v23[v25], 1, v6))
    {
      uint64_t v28 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v26, v27, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v26, 0, 1, v6);
    }
    uint64_t v29 = v12[6];
    uint64_t v30 = &v22[v29];
    uint64_t v31 = &v23[v29];
    if (v8((uint64_t *)&v23[v29], 1, v6))
    {
      uint64_t v32 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v30, 0, 1, v6);
    }
    *(void *)&v22[v12[7]] = *(void *)&v23[v12[7]];
    uint64_t v33 = a3[6];
    int v34 = (char *)v82 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v8((uint64_t *)((char *)a2 + v33), 1, v6))
    {
      uint64_t v36 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v34, v35, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v34, 0, 1, v6);
    }
    uint64_t v37 = v12[5];
    uint64_t v38 = &v34[v37];
    int v39 = &v35[v37];
    if (v8((uint64_t *)&v35[v37], 1, v6))
    {
      uint64_t v40 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v38, v39, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v38, 0, 1, v6);
    }
    uint64_t v41 = v12[6];
    uint64_t v42 = &v34[v41];
    uint64_t v43 = &v35[v41];
    if (v8((uint64_t *)&v35[v41], 1, v6))
    {
      uint64_t v44 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v42, v43, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v42, 0, 1, v6);
    }
    *(void *)&v34[v12[7]] = *(void *)&v35[v12[7]];
    uint64_t v45 = a3[7];
    uint64_t v46 = (char *)v82 + v45;
    uint64_t v47 = (char *)a2 + v45;
    if (v8((uint64_t *)((char *)a2 + v45), 1, v6))
    {
      uint64_t v48 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v46, v47, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v46, 0, 1, v6);
    }
    uint64_t v49 = v12[5];
    uint64_t v50 = &v46[v49];
    uint64_t v51 = &v47[v49];
    if (v8((uint64_t *)&v47[v49], 1, v6))
    {
      uint64_t v52 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v50, v51, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v50, 0, 1, v6);
    }
    uint64_t v53 = v12[6];
    uint64_t v54 = &v46[v53];
    uint64_t v55 = &v47[v53];
    if (v8((uint64_t *)&v47[v53], 1, v6))
    {
      uint64_t v56 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v54, v55, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v54, 0, 1, v6);
    }
    *(void *)&v46[v12[7]] = *(void *)&v47[v12[7]];
    uint64_t v57 = a3[8];
    uint64_t v58 = (char *)v82 + v57;
    uint64_t v59 = (char *)a2 + v57;
    if (v8((uint64_t *)((char *)a2 + v57), 1, v6))
    {
      uint64_t v60 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v58, v59, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v58, 0, 1, v6);
    }
    uint64_t v61 = v12[5];
    id v62 = &v58[v61];
    v63 = &v59[v61];
    if (v8((uint64_t *)&v59[v61], 1, v6))
    {
      uint64_t v64 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v62, v63, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v62, 0, 1, v6);
    }
    uint64_t v65 = v12[6];
    uint64_t v66 = &v58[v65];
    v67 = &v59[v65];
    if (v8((uint64_t *)&v59[v65], 1, v6))
    {
      uint64_t v68 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v66, v67, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v66, 0, 1, v6);
    }
    *(void *)&v58[v12[7]] = *(void *)&v59[v12[7]];
    uint64_t v11 = v82;
    uint64_t v69 = a3[9];
    int v70 = (char *)v82 + v69;
    uint64_t v71 = (char *)a2 + v69;
    if (v8((uint64_t *)v71, 1, v6))
    {
      uint64_t v72 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v70, v71, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v70, 0, 1, v6);
    }
    uint64_t v73 = v12[5];
    unint64_t v74 = &v70[v73];
    uint64_t v75 = &v71[v73];
    if (v8((uint64_t *)&v71[v73], 1, v6))
    {
      uint64_t v76 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v74, v75, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v74, 0, 1, v6);
    }
    uint64_t v77 = v12[6];
    unint64_t v78 = &v70[v77];
    unint64_t v79 = &v71[v77];
    if (v8((uint64_t *)&v71[v77], 1, v6))
    {
      uint64_t v80 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v78, v79, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v78, 0, 1, v6);
    }
    *(void *)&v70[v12[7]] = *(void *)&v71[v12[7]];
  }
  return v11;
}

uint64_t sub_100022E78(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_100103978();
  uint64_t v26 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v4);
  }
  uint64_t v6 = type metadata accessor for StreakSummary();
  uint64_t v7 = a1 + *(int *)(v6 + 20);
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + *(int *)(v6 + 24);
  if (!v5(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[5];
  if (!v5(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v9, v4);
  }
  uint64_t v10 = v9 + *(int *)(v6 + 20);
  if (!v5(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v10, v4);
  }
  uint64_t v11 = v9 + *(int *)(v6 + 24);
  if (!v5(v11, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v11, v4);
  }
  uint64_t v12 = a1 + a2[6];
  if (!v5(v12, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v12, v4);
  }
  uint64_t v13 = v12 + *(int *)(v6 + 20);
  if (!v5(v13, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v13, v4);
  }
  uint64_t v14 = v12 + *(int *)(v6 + 24);
  if (!v5(v14, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v14, v4);
  }
  uint64_t v15 = a1 + a2[7];
  if (!v5(v15, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v15, v4);
  }
  uint64_t v16 = v15 + *(int *)(v6 + 20);
  if (!v5(v16, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v16, v4);
  }
  uint64_t v17 = v15 + *(int *)(v6 + 24);
  if (!v5(v17, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v17, v4);
  }
  uint64_t v18 = a1 + a2[8];
  if (!v5(v18, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v4);
  }
  uint64_t v19 = v18 + *(int *)(v6 + 20);
  if (!v5(v19, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v19, v4);
  }
  uint64_t v20 = v18 + *(int *)(v6 + 24);
  if (!v5(v20, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v20, v4);
  }
  uint64_t v21 = a1 + a2[9];
  if (!v5(v21, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v21, v4);
  }
  uint64_t v22 = v21 + *(int *)(v6 + 20);
  if (!v5(v22, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v4);
  }
  uint64_t v23 = v21 + *(int *)(v6 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v23, 1, v4);
  if (!result)
  {
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    return v25(v23, v4);
  }
  return result;
}

char *sub_1000233BC(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v9 = (int *)type metadata accessor for StreakSummary();
  uint64_t v10 = v9[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v7(&a2[v10], 1, v5))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v12, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  uint64_t v14 = v9[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v81 = v6;
  if (v7(&a2[v14], 1, v5))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v15, v16, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
  uint64_t v18 = a3[5];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  unint64_t v79 = a1;
  if (v7(&a2[v18], 1, v5))
  {
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v20, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  uint64_t v22 = v9[5];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  if (v7(&v20[v22], 1, v5))
  {
    uint64_t v25 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v23, v24, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  uint64_t v26 = v9[6];
  int v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  if (v7(&v20[v26], 1, v5))
  {
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v27, v28, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  }
  *(void *)&v19[v9[7]] = *(void *)&v20[v9[7]];
  uint64_t v30 = a3[6];
  uint64_t v31 = &v79[v30];
  uint64_t v32 = &a2[v30];
  if (v7(&a2[v30], 1, v5))
  {
    uint64_t v33 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v31, v32, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
  }
  uint64_t v34 = v9[5];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  if (v7(&v32[v34], 1, v5))
  {
    uint64_t v37 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v35, v36, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v5);
  }
  uint64_t v38 = v9[6];
  int v39 = &v31[v38];
  uint64_t v40 = &v32[v38];
  if (v7(&v32[v38], 1, v5))
  {
    uint64_t v41 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v40, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v39, 0, 1, v5);
  }
  *(void *)&v31[v9[7]] = *(void *)&v32[v9[7]];
  uint64_t v42 = a3[7];
  uint64_t v43 = &v79[v42];
  uint64_t v44 = &a2[v42];
  if (v7(&a2[v42], 1, v5))
  {
    uint64_t v45 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v43, v44, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v5);
  }
  uint64_t v46 = v9[5];
  uint64_t v47 = &v43[v46];
  uint64_t v48 = &v44[v46];
  if (v7(&v44[v46], 1, v5))
  {
    uint64_t v49 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v47, v48, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v47, 0, 1, v5);
  }
  uint64_t v50 = v9[6];
  uint64_t v51 = &v43[v50];
  uint64_t v52 = &v44[v50];
  if (v7(&v44[v50], 1, v5))
  {
    uint64_t v53 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v51, v52, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v51, 0, 1, v5);
  }
  *(void *)&v43[v9[7]] = *(void *)&v44[v9[7]];
  uint64_t v54 = a3[8];
  uint64_t v55 = &v79[v54];
  uint64_t v56 = &a2[v54];
  if (v7(&a2[v54], 1, v5))
  {
    uint64_t v57 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v55, v56, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v55, 0, 1, v5);
  }
  uint64_t v58 = v9[5];
  uint64_t v59 = &v55[v58];
  uint64_t v60 = &v56[v58];
  if (v7(&v56[v58], 1, v5))
  {
    uint64_t v61 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v59, v60, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v59, 0, 1, v5);
  }
  uint64_t v62 = v9[6];
  v63 = &v55[v62];
  uint64_t v64 = &v56[v62];
  if (v7(&v56[v62], 1, v5))
  {
    uint64_t v65 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v63, v64, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v63, 0, 1, v5);
  }
  *(void *)&v55[v9[7]] = *(void *)&v56[v9[7]];
  uint64_t v66 = a3[9];
  v67 = &v79[v66];
  uint64_t v68 = &a2[v66];
  if (v7(v68, 1, v5))
  {
    uint64_t v69 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v67, v68, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v67, 0, 1, v5);
  }
  uint64_t v70 = v9[5];
  uint64_t v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  if (v7(&v68[v70], 1, v5))
  {
    uint64_t v73 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v71, v72, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v71, 0, 1, v5);
  }
  uint64_t v74 = v9[6];
  uint64_t v75 = &v67[v74];
  uint64_t v76 = &v68[v74];
  if (v7(&v68[v74], 1, v5))
  {
    uint64_t v77 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v75, v76, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v5);
  }
  *(void *)&v67[v9[7]] = *(void *)&v68[v9[7]];
  return v79;
}

char *sub_100023FF4(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_100103978();
  uint64_t v118 = *(void *)(v5 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
  int v7 = v6(a1, 1, v5);
  int v8 = v6(a2, 1, v5);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(a1, a2, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(a1, v5);
LABEL_6:
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(a1, a2, v5);
LABEL_7:
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = v6(&a1[v11], 1, v5);
  int v15 = v6(v13, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v12, v13, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v12, 0, 1, v5);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v12, v5);
LABEL_12:
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v12, v13, v5);
LABEL_13:
  uint64_t v17 = v10[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = v6(&a1[v17], 1, v5);
  int v21 = v6(v19, 1, v5);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v18, v19, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v18, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v18, v5);
LABEL_18:
    uint64_t v22 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v18, v19, v5);
LABEL_19:
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v23 = a3[5];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  int v26 = v6(&a1[v23], 1, v5);
  int v27 = v6(v25, 1, v5);
  uint64_t v28 = a1;
  uint64_t v116 = a2;
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v24, v25, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v24, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v24, v5);
LABEL_24:
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v24, v25, v5);
LABEL_25:
  uint64_t v30 = v10[5];
  uint64_t v31 = &v24[v30];
  uint64_t v32 = &v25[v30];
  int v33 = v6(&v24[v30], 1, v5);
  int v34 = v6(v32, 1, v5);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v31, v32, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v31, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v31, v5);
LABEL_30:
    uint64_t v35 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v31, v32, v5);
LABEL_31:
  uint64_t v36 = v10[6];
  uint64_t v37 = &v24[v36];
  uint64_t v38 = &v25[v36];
  int v39 = v6(&v24[v36], 1, v5);
  int v40 = v6(v38, 1, v5);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v37, v38, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v37, 0, 1, v5);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v37, v5);
LABEL_36:
    uint64_t v41 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v37, v38, v5);
LABEL_37:
  *(void *)&v24[v10[7]] = *(void *)&v25[v10[7]];
  uint64_t v42 = a3[6];
  uint64_t v43 = &v28[v42];
  uint64_t v44 = &v116[v42];
  int v45 = v6(&v28[v42], 1, v5);
  int v46 = v6(v44, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v43, v44, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v43, 0, 1, v5);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v43, v5);
LABEL_42:
    uint64_t v47 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v43, v44, v5);
LABEL_43:
  uint64_t v48 = v10[5];
  uint64_t v49 = &v43[v48];
  uint64_t v50 = &v44[v48];
  int v51 = v6(&v43[v48], 1, v5);
  int v52 = v6(v50, 1, v5);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v49, v50, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v49, 0, 1, v5);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v49, v5);
LABEL_48:
    uint64_t v53 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v49, v50, v5);
LABEL_49:
  uint64_t v54 = v10[6];
  uint64_t v55 = &v43[v54];
  uint64_t v56 = &v44[v54];
  int v57 = v6(&v43[v54], 1, v5);
  int v58 = v6(v56, 1, v5);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v55, v56, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v55, 0, 1, v5);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v55, v5);
LABEL_54:
    uint64_t v59 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v55, v56, v5);
LABEL_55:
  *(void *)&v43[v10[7]] = *(void *)&v44[v10[7]];
  uint64_t v60 = a3[7];
  uint64_t v61 = &v28[v60];
  uint64_t v62 = &v116[v60];
  int v63 = v6(&v28[v60], 1, v5);
  int v64 = v6(v62, 1, v5);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v61, v62, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v61, 0, 1, v5);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v61, v5);
LABEL_60:
    uint64_t v65 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v61, v62, v5);
LABEL_61:
  uint64_t v66 = v10[5];
  v67 = &v61[v66];
  uint64_t v68 = &v62[v66];
  int v69 = v6(&v61[v66], 1, v5);
  int v70 = v6(v68, 1, v5);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v67, v68, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v67, 0, 1, v5);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v67, v5);
LABEL_66:
    uint64_t v71 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v67, v68, v5);
LABEL_67:
  uint64_t v72 = v10[6];
  uint64_t v73 = &v61[v72];
  uint64_t v74 = &v62[v72];
  int v75 = v6(&v61[v72], 1, v5);
  int v76 = v6(v74, 1, v5);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v73, v74, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v73, 0, 1, v5);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v73, v5);
LABEL_72:
    uint64_t v77 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v73, v74, v5);
LABEL_73:
  *(void *)&v61[v10[7]] = *(void *)&v62[v10[7]];
  uint64_t v78 = a3[8];
  unint64_t v79 = &v28[v78];
  uint64_t v80 = &v116[v78];
  int v81 = v6(&v28[v78], 1, v5);
  int v82 = v6(v80, 1, v5);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v79, v80, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v79, 0, 1, v5);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v79, v5);
LABEL_78:
    uint64_t v83 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v79, v80, v5);
LABEL_79:
  uint64_t v84 = v10[5];
  v85 = &v79[v84];
  v86 = &v80[v84];
  int v87 = v6(&v79[v84], 1, v5);
  int v88 = v6(v86, 1, v5);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v85, v86, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v85, 0, 1, v5);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v5);
LABEL_84:
    uint64_t v89 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v85, v86, v5);
LABEL_85:
  uint64_t v90 = v10[6];
  os_log_type_t v91 = &v79[v90];
  v92 = &v80[v90];
  int v93 = v6(&v79[v90], 1, v5);
  int v94 = v6(v92, 1, v5);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v91, v92, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v91, 0, 1, v5);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v91, v5);
LABEL_90:
    uint64_t v95 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v91, v92, v5);
LABEL_91:
  v96 = v28;
  *(void *)&v79[v10[7]] = *(void *)&v80[v10[7]];
  uint64_t v97 = a3[9];
  uint64_t v98 = &v28[v97];
  v99 = &v116[v97];
  int v100 = v6(v98, 1, v5);
  int v101 = v6(v99, 1, v5);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v98, v99, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v98, 0, 1, v5);
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v98, v5);
LABEL_96:
    uint64_t v102 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_97;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v98, v99, v5);
LABEL_97:
  uint64_t v103 = v10[5];
  v104 = &v98[v103];
  unint64_t v105 = &v99[v103];
  int v106 = v6(&v98[v103], 1, v5);
  int v107 = v6(v105, 1, v5);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v104, v105, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v104, 0, 1, v5);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v104, v5);
LABEL_102:
    uint64_t v108 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_103;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v104, v105, v5);
LABEL_103:
  uint64_t v109 = v10[6];
  v110 = &v98[v109];
  v111 = &v99[v109];
  int v112 = v6(&v98[v109], 1, v5);
  int v113 = v6(v111, 1, v5);
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v110, v111, v5);
      goto LABEL_109;
    }
    (*(void (**)(char *, uint64_t))(v118 + 8))(v110, v5);
    goto LABEL_108;
  }
  if (v113)
  {
LABEL_108:
    uint64_t v114 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_109;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v110, v111, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v110, 0, 1, v5);
LABEL_109:
  *(void *)&v98[v10[7]] = *(void *)&v99[v10[7]];
  return v96;
}

char *sub_100025348(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v9 = (int *)type metadata accessor for StreakSummary();
  uint64_t v10 = v9[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v7(&a2[v10], 1, v5))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v12, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  uint64_t v14 = v9[6];
  int v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v81 = v6;
  if (v7(&a2[v14], 1, v5))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v16, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  }
  *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
  uint64_t v18 = a3[5];
  uint64_t v19 = &a1[v18];
  int v20 = &a2[v18];
  unint64_t v79 = a1;
  if (v7(&a2[v18], 1, v5))
  {
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v20, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  uint64_t v22 = v9[5];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  if (v7(&v20[v22], 1, v5))
  {
    uint64_t v25 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v24, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
  }
  uint64_t v26 = v9[6];
  int v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  if (v7(&v20[v26], 1, v5))
  {
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v27, v28, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v27, 0, 1, v5);
  }
  *(void *)&v19[v9[7]] = *(void *)&v20[v9[7]];
  uint64_t v30 = a3[6];
  uint64_t v31 = &v79[v30];
  uint64_t v32 = &a2[v30];
  if (v7(&a2[v30], 1, v5))
  {
    uint64_t v33 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v31, v32, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, v5);
  }
  uint64_t v34 = v9[5];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  if (v7(&v32[v34], 1, v5))
  {
    uint64_t v37 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v35, v36, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v35, 0, 1, v5);
  }
  uint64_t v38 = v9[6];
  int v39 = &v31[v38];
  int v40 = &v32[v38];
  if (v7(&v32[v38], 1, v5))
  {
    uint64_t v41 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v39, v40, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v39, 0, 1, v5);
  }
  *(void *)&v31[v9[7]] = *(void *)&v32[v9[7]];
  uint64_t v42 = a3[7];
  uint64_t v43 = &v79[v42];
  uint64_t v44 = &a2[v42];
  if (v7(&a2[v42], 1, v5))
  {
    uint64_t v45 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v43, v44, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v43, 0, 1, v5);
  }
  uint64_t v46 = v9[5];
  uint64_t v47 = &v43[v46];
  uint64_t v48 = &v44[v46];
  if (v7(&v44[v46], 1, v5))
  {
    uint64_t v49 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v47, v48, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v47, 0, 1, v5);
  }
  uint64_t v50 = v9[6];
  int v51 = &v43[v50];
  int v52 = &v44[v50];
  if (v7(&v44[v50], 1, v5))
  {
    uint64_t v53 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v51, v52, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v51, 0, 1, v5);
  }
  *(void *)&v43[v9[7]] = *(void *)&v44[v9[7]];
  uint64_t v54 = a3[8];
  uint64_t v55 = &v79[v54];
  uint64_t v56 = &a2[v54];
  if (v7(&a2[v54], 1, v5))
  {
    uint64_t v57 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v55, v56, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v55, 0, 1, v5);
  }
  uint64_t v58 = v9[5];
  uint64_t v59 = &v55[v58];
  uint64_t v60 = &v56[v58];
  if (v7(&v56[v58], 1, v5))
  {
    uint64_t v61 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v59, v60, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v59, 0, 1, v5);
  }
  uint64_t v62 = v9[6];
  int v63 = &v55[v62];
  int v64 = &v56[v62];
  if (v7(&v56[v62], 1, v5))
  {
    uint64_t v65 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v63, v64, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v63, 0, 1, v5);
  }
  *(void *)&v55[v9[7]] = *(void *)&v56[v9[7]];
  uint64_t v66 = a3[9];
  v67 = &v79[v66];
  uint64_t v68 = &a2[v66];
  if (v7(v68, 1, v5))
  {
    uint64_t v69 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v67, v68, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v67, 0, 1, v5);
  }
  uint64_t v70 = v9[5];
  uint64_t v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  if (v7(&v68[v70], 1, v5))
  {
    uint64_t v73 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v71, v72, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v71, 0, 1, v5);
  }
  uint64_t v74 = v9[6];
  int v75 = &v67[v74];
  int v76 = &v68[v74];
  if (v7(&v68[v74], 1, v5))
  {
    uint64_t v77 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v75, v76, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v5);
  }
  *(void *)&v67[v9[7]] = *(void *)&v68[v9[7]];
  return v79;
}

char *sub_100025F80(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_100103978();
  uint64_t v118 = *(void *)(v5 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 48);
  int v7 = v6(a1, 1, v5);
  int v8 = v6(a2, 1, v5);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(a1, a2, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(a1, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(a1, v5);
LABEL_6:
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(a1, a2, v5);
LABEL_7:
  uint64_t v10 = (int *)type metadata accessor for StreakSummary();
  uint64_t v11 = v10[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = v6(&a1[v11], 1, v5);
  int v15 = v6(v13, 1, v5);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v12, v13, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v12, 0, 1, v5);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v12, v5);
LABEL_12:
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v12, v13, v5);
LABEL_13:
  uint64_t v17 = v10[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = v6(&a1[v17], 1, v5);
  int v21 = v6(v19, 1, v5);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v18, v19, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v18, 0, 1, v5);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v18, v5);
LABEL_18:
    uint64_t v22 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v18, v19, v5);
LABEL_19:
  *(void *)&a1[v10[7]] = *(void *)&a2[v10[7]];
  uint64_t v23 = a3[5];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  int v26 = v6(&a1[v23], 1, v5);
  int v27 = v6(v25, 1, v5);
  uint64_t v28 = a1;
  uint64_t v116 = a2;
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v24, v25, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v24, 0, 1, v5);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v24, v5);
LABEL_24:
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v24, v25, v5);
LABEL_25:
  uint64_t v30 = v10[5];
  uint64_t v31 = &v24[v30];
  uint64_t v32 = &v25[v30];
  int v33 = v6(&v24[v30], 1, v5);
  int v34 = v6(v32, 1, v5);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v31, v32, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v31, 0, 1, v5);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v31, v5);
LABEL_30:
    uint64_t v35 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v31, v32, v5);
LABEL_31:
  uint64_t v36 = v10[6];
  uint64_t v37 = &v24[v36];
  uint64_t v38 = &v25[v36];
  int v39 = v6(&v24[v36], 1, v5);
  int v40 = v6(v38, 1, v5);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v37, v38, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v37, 0, 1, v5);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v37, v5);
LABEL_36:
    uint64_t v41 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v37, v38, v5);
LABEL_37:
  *(void *)&v24[v10[7]] = *(void *)&v25[v10[7]];
  uint64_t v42 = a3[6];
  uint64_t v43 = &v28[v42];
  uint64_t v44 = &v116[v42];
  int v45 = v6(&v28[v42], 1, v5);
  int v46 = v6(v44, 1, v5);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v43, v44, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v43, 0, 1, v5);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v43, v5);
LABEL_42:
    uint64_t v47 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v43, v44, v5);
LABEL_43:
  uint64_t v48 = v10[5];
  uint64_t v49 = &v43[v48];
  uint64_t v50 = &v44[v48];
  int v51 = v6(&v43[v48], 1, v5);
  int v52 = v6(v50, 1, v5);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v49, v50, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v49, 0, 1, v5);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v49, v5);
LABEL_48:
    uint64_t v53 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v49, v50, v5);
LABEL_49:
  uint64_t v54 = v10[6];
  uint64_t v55 = &v43[v54];
  uint64_t v56 = &v44[v54];
  int v57 = v6(&v43[v54], 1, v5);
  int v58 = v6(v56, 1, v5);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v55, v56, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v55, 0, 1, v5);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v55, v5);
LABEL_54:
    uint64_t v59 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v55, v56, v5);
LABEL_55:
  *(void *)&v43[v10[7]] = *(void *)&v44[v10[7]];
  uint64_t v60 = a3[7];
  uint64_t v61 = &v28[v60];
  uint64_t v62 = &v116[v60];
  int v63 = v6(&v28[v60], 1, v5);
  int v64 = v6(v62, 1, v5);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v61, v62, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v61, 0, 1, v5);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v61, v5);
LABEL_60:
    uint64_t v65 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v61, v62, v5);
LABEL_61:
  uint64_t v66 = v10[5];
  v67 = &v61[v66];
  uint64_t v68 = &v62[v66];
  int v69 = v6(&v61[v66], 1, v5);
  int v70 = v6(v68, 1, v5);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v67, v68, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v67, 0, 1, v5);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v67, v5);
LABEL_66:
    uint64_t v71 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v67, v68, v5);
LABEL_67:
  uint64_t v72 = v10[6];
  uint64_t v73 = &v61[v72];
  uint64_t v74 = &v62[v72];
  int v75 = v6(&v61[v72], 1, v5);
  int v76 = v6(v74, 1, v5);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v73, v74, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v73, 0, 1, v5);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v73, v5);
LABEL_72:
    uint64_t v77 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v73, v74, v5);
LABEL_73:
  *(void *)&v61[v10[7]] = *(void *)&v62[v10[7]];
  uint64_t v78 = a3[8];
  unint64_t v79 = &v28[v78];
  uint64_t v80 = &v116[v78];
  int v81 = v6(&v28[v78], 1, v5);
  int v82 = v6(v80, 1, v5);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v79, v80, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v79, 0, 1, v5);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v79, v5);
LABEL_78:
    uint64_t v83 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v79, v80, v5);
LABEL_79:
  uint64_t v84 = v10[5];
  v85 = &v79[v84];
  v86 = &v80[v84];
  int v87 = v6(&v79[v84], 1, v5);
  int v88 = v6(v86, 1, v5);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v85, v86, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v85, 0, 1, v5);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v85, v5);
LABEL_84:
    uint64_t v89 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v85, v86, v5);
LABEL_85:
  uint64_t v90 = v10[6];
  os_log_type_t v91 = &v79[v90];
  v92 = &v80[v90];
  int v93 = v6(&v79[v90], 1, v5);
  int v94 = v6(v92, 1, v5);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v91, v92, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v91, 0, 1, v5);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v91, v5);
LABEL_90:
    uint64_t v95 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v91, v92, v5);
LABEL_91:
  v96 = v28;
  *(void *)&v79[v10[7]] = *(void *)&v80[v10[7]];
  uint64_t v97 = a3[9];
  uint64_t v98 = &v28[v97];
  v99 = &v116[v97];
  int v100 = v6(v98, 1, v5);
  int v101 = v6(v99, 1, v5);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v98, v99, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v98, 0, 1, v5);
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v98, v5);
LABEL_96:
    uint64_t v102 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    goto LABEL_97;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v98, v99, v5);
LABEL_97:
  uint64_t v103 = v10[5];
  v104 = &v98[v103];
  unint64_t v105 = &v99[v103];
  int v106 = v6(&v98[v103], 1, v5);
  int v107 = v6(v105, 1, v5);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v104, v105, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v104, 0, 1, v5);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v104, v5);
LABEL_102:
    uint64_t v108 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_103;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v104, v105, v5);
LABEL_103:
  uint64_t v109 = v10[6];
  v110 = &v98[v109];
  v111 = &v99[v109];
  int v112 = v6(&v98[v109], 1, v5);
  int v113 = v6(v111, 1, v5);
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 40))(v110, v111, v5);
      goto LABEL_109;
    }
    (*(void (**)(char *, uint64_t))(v118 + 8))(v110, v5);
    goto LABEL_108;
  }
  if (v113)
  {
LABEL_108:
    uint64_t v114 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_109;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v110, v111, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v110, 0, 1, v5);
LABEL_109:
  *(void *)&v98[v10[7]] = *(void *)&v99[v10[7]];
  return v96;
}

uint64_t sub_1000272D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000272E8);
}

uint64_t sub_1000272E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100027354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100027368);
}

uint64_t sub_100027368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000273D8()
{
  uint64_t result = type metadata accessor for StreakSummary();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10002746C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v8 = *(void *)(v7 - 8);
    int v70 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v64 = v8;
    if (v70(a2, 1, v7))
    {
      uint64_t v9 = sub_100007E0C(&qword_10014D3B8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_100103AD8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      int v14 = (char *)a2 + v12;
      uint64_t v15 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v7 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = type metadata accessor for UniformDateBins(0);
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 20));
    uint64_t v68 = v20;
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 24));
    uint64_t v21 = sub_100007E0C(&qword_10014CE90);
    uint64_t v22 = *(int *)(v21 + 28);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_100103978();
    int v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    uint64_t v67 = sub_100007E0C(&qword_10014CE88);
    v26(&v23[*(int *)(v67 + 36)], &v24[*(int *)(v67 + 36)], v25);
    uint64_t v69 = v21;
    *(uint64_t *)((char *)a1 + *(int *)(v21 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v21 + 32));
    uint64_t v27 = *(int *)(a3 + 20);
    uint64_t v28 = *(int *)(a3 + 24);
    uint64_t v66 = a3;
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    v29[8] = v30[8];
    *(void *)uint64_t v29 = *(void *)v30;
    uint64_t v31 = (char *)a1 + v28;
    uint64_t v32 = (char *)a2 + v28;
    swift_bridgeObjectRetain();
    uint64_t v65 = v7;
    if (v70((uint64_t *)v32, 1, v7))
    {
      uint64_t v33 = sub_100007E0C(&qword_10014D3B8);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v31, v32, v34);
      v26(&v31[*(int *)(v7 + 20)], &v32[*(int *)(v7 + 20)], v25);
      uint64_t v35 = *(int *)(v7 + 24);
      uint64_t v36 = v7;
      uint64_t v37 = &v31[v35];
      uint64_t v38 = &v32[v35];
      uint64_t v39 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v31, 0, 1, v36);
    }
    *(void *)&v31[*(int *)(v68 + 20)] = *(void *)&v32[*(int *)(v68 + 20)];
    *(void *)&v31[*(int *)(v68 + 24)] = *(void *)&v32[*(int *)(v68 + 24)];
    uint64_t v40 = *(int *)(v69 + 28);
    uint64_t v41 = &v31[v40];
    uint64_t v42 = &v32[v40];
    v26(&v31[v40], &v32[v40], v25);
    v26(&v41[*(int *)(v67 + 36)], &v42[*(int *)(v67 + 36)], v25);
    *(void *)&v31[*(int *)(v69 + 32)] = *(void *)&v32[*(int *)(v69 + 32)];
    uint64_t v43 = v66;
    uint64_t v44 = *(int *)(v66 + 28);
    int v45 = (char *)a1 + v44;
    int v46 = (char *)a2 + v44;
    swift_bridgeObjectRetain();
    if (v70((uint64_t *)v46, 1, v65))
    {
      uint64_t v47 = sub_100007E0C(&qword_10014D3B8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
      v26(&v45[*(int *)(v65 + 20)], &v46[*(int *)(v65 + 20)], v25);
      uint64_t v49 = *(int *)(v65 + 24);
      uint64_t v50 = &v45[v49];
      int v51 = &v46[v49];
      uint64_t v52 = sub_100103AE8();
      uint64_t v53 = v51;
      uint64_t v43 = v66;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v53, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v45, 0, 1, v65);
    }
    *(void *)&v45[*(int *)(v68 + 20)] = *(void *)&v46[*(int *)(v68 + 20)];
    *(void *)&v45[*(int *)(v68 + 24)] = *(void *)&v46[*(int *)(v68 + 24)];
    uint64_t v54 = *(int *)(v69 + 28);
    uint64_t v55 = &v45[v54];
    uint64_t v56 = &v46[v54];
    v26(&v45[v54], &v46[v54], v25);
    v26(&v55[*(int *)(v67 + 36)], &v56[*(int *)(v67 + 36)], v25);
    *(void *)&v45[*(int *)(v69 + 32)] = *(void *)&v46[*(int *)(v69 + 32)];
    uint64_t v57 = *(int *)(v43 + 32);
    uint64_t v58 = *(int *)(v43 + 36);
    uint64_t v59 = (char *)a1 + v57;
    uint64_t v60 = (char *)a2 + v57;
    v59[8] = v60[8];
    *(void *)uint64_t v59 = *(void *)v60;
    uint64_t v61 = (char *)a1 + v58;
    uint64_t v62 = (char *)a2 + v58;
    swift_bridgeObjectRetain();
    v26(v61, v62, v25);
  }
  return a1;
}

uint64_t sub_100027B04(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    uint64_t v6 = sub_100103AD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 20);
    uint64_t v8 = sub_100103978();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = a1 + *(int *)(v4 + 24);
    uint64_t v10 = sub_100103AE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = sub_100007E0C(&qword_10014CE90);
  uint64_t v12 = a1 + *(int *)(v11 + 28);
  uint64_t v13 = sub_100103978();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v27)((void *)(v13 - 8), v12, v13);
  uint64_t v14 = sub_100007E0C(&qword_10014CE88);
  v27(v12 + *(int *)(v14 + 36), v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[6];
  if (!v5(v15, 1, v4))
  {
    uint64_t v16 = sub_100103AD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    v27(v15 + *(int *)(v4 + 20), v13);
    uint64_t v17 = v15 + *(int *)(v4 + 24);
    uint64_t v18 = sub_100103AE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  uint64_t v19 = v15 + *(int *)(v11 + 28);
  v27(v19, v13);
  v27(v19 + *(int *)(v14 + 36), v13);
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + a2[7];
  if (!v5(v20, 1, v4))
  {
    uint64_t v21 = sub_100103AD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    v27(v20 + *(int *)(v4 + 20), v13);
    uint64_t v22 = v20 + *(int *)(v4 + 24);
    uint64_t v23 = sub_100103AE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  uint64_t v24 = v20 + *(int *)(v11 + 28);
  v27(v24, v13);
  v27(v24 + *(int *)(v14 + 36), v13);
  swift_bridgeObjectRelease();
  uint64_t v25 = a1 + a2[9];

  return ((uint64_t (*)(uint64_t, uint64_t))v27)(v25, v13);
}

char *sub_100027F08(char *a1, char *a2, int *a3)
{
  uint64_t v5 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v61 = v6;
  if (v64(a2, 1, v5))
  {
    uint64_t v7 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(v5 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(v5 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  uint64_t v17 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v17 + 20)] = *(void *)&a2[*(int *)(v17 + 20)];
  *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&a2[*(int *)(v17 + 24)];
  uint64_t v18 = sub_100007E0C(&qword_10014CE90);
  uint64_t v19 = *(int *)(v18 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_100103978();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  uint64_t v62 = sub_100007E0C(&qword_10014CE88);
  v23(&v20[*(int *)(v62 + 36)], &v21[*(int *)(v62 + 36)], v22);
  uint64_t v63 = v18;
  *(void *)&a1[*(int *)(v18 + 32)] = *(void *)&a2[*(int *)(v18 + 32)];
  uint64_t v24 = a3[5];
  uint64_t v25 = a3[6];
  int v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  v26[8] = v27[8];
  *(void *)int v26 = *(void *)v27;
  uint64_t v28 = &a1[v25];
  uint64_t v29 = &a2[v25];
  swift_bridgeObjectRetain();
  if (v64(v29, 1, v5))
  {
    uint64_t v30 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    uint64_t v31 = v5;
  }
  else
  {
    uint64_t v32 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    v23(&v28[*(int *)(v5 + 20)], &v29[*(int *)(v5 + 20)], v22);
    uint64_t v33 = *(int *)(v5 + 24);
    uint64_t v34 = &v28[v33];
    uint64_t v35 = &v29[v33];
    uint64_t v36 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    uint64_t v31 = v5;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v28, 0, 1, v5);
  }
  *(void *)&v28[*(int *)(v17 + 20)] = *(void *)&v29[*(int *)(v17 + 20)];
  *(void *)&v28[*(int *)(v17 + 24)] = *(void *)&v29[*(int *)(v17 + 24)];
  uint64_t v37 = *(int *)(v63 + 28);
  uint64_t v38 = &v28[v37];
  uint64_t v39 = &v29[v37];
  v23(&v28[v37], &v29[v37], v22);
  v23(&v38[*(int *)(v62 + 36)], &v39[*(int *)(v62 + 36)], v22);
  *(void *)&v28[*(int *)(v63 + 32)] = *(void *)&v29[*(int *)(v63 + 32)];
  uint64_t v40 = a3;
  uint64_t v41 = a3[7];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  swift_bridgeObjectRetain();
  if (v64(v43, 1, v31))
  {
    uint64_t v44 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v42, v43, v45);
    v23(&v42[*(int *)(v31 + 20)], &v43[*(int *)(v31 + 20)], v22);
    uint64_t v46 = *(int *)(v31 + 24);
    uint64_t v47 = &v42[v46];
    uint64_t v48 = &v43[v46];
    uint64_t v49 = sub_100103AE8();
    uint64_t v50 = v48;
    uint64_t v40 = a3;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v50, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v42, 0, 1, v31);
  }
  *(void *)&v42[*(int *)(v17 + 20)] = *(void *)&v43[*(int *)(v17 + 20)];
  *(void *)&v42[*(int *)(v17 + 24)] = *(void *)&v43[*(int *)(v17 + 24)];
  uint64_t v51 = *(int *)(v63 + 28);
  uint64_t v52 = &v42[v51];
  uint64_t v53 = &v43[v51];
  v23(&v42[v51], &v43[v51], v22);
  v23(&v52[*(int *)(v62 + 36)], &v53[*(int *)(v62 + 36)], v22);
  *(void *)&v42[*(int *)(v63 + 32)] = *(void *)&v43[*(int *)(v63 + 32)];
  uint64_t v54 = v40[8];
  uint64_t v55 = v40[9];
  uint64_t v56 = &a1[v54];
  uint64_t v57 = &a2[v54];
  v56[8] = v57[8];
  *(void *)uint64_t v56 = *(void *)v57;
  uint64_t v58 = &a1[v55];
  uint64_t v59 = &a2[v55];
  swift_bridgeObjectRetain();
  v23(v58, v59, v22);
  return a1;
}

char *sub_10002855C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v82 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  int v8 = v7(a1, 1, v6);
  int v87 = v7;
  int v9 = v7(a2, 1, v6);
  uint64_t v89 = a3;
  if (v8)
  {
    if (!v9)
    {
      uint64_t v10 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v6 + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = *(int *)(v6 + 24);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_10002AAD8((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
LABEL_6:
    uint64_t v19 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v62 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24))(a1, a2, v62);
  uint64_t v63 = *(int *)(v6 + 20);
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  uint64_t v66 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  uint64_t v67 = *(int *)(v6 + 24);
  uint64_t v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  uint64_t v70 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 24))(v68, v69, v70);
LABEL_7:
  uint64_t v20 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v20 + 20)] = *(void *)&a2[*(int *)(v20 + 20)];
  uint64_t v84 = v20;
  *(void *)&a1[*(int *)(v20 + 24)] = *(void *)&a2[*(int *)(v20 + 24)];
  uint64_t v21 = sub_100007E0C(&qword_10014CE90);
  uint64_t v22 = *(int *)(v21 + 28);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_100103978();
  uint64_t v81 = *(void *)(v25 - 8);
  int v26 = *(void (**)(char *, char *, uint64_t))(v81 + 24);
  v26(v23, v24, v25);
  uint64_t v83 = sub_100007E0C(&qword_10014CE88);
  int v88 = v26;
  v26(&v23[*(int *)(v83 + 36)], &v24[*(int *)(v83 + 36)], v25);
  uint64_t v86 = v21;
  *(void *)&a1[*(int *)(v21 + 32)] = *(void *)&a2[*(int *)(v21 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v89[5];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = v89[6];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  LODWORD(v26) = v87(&a1[v31], 1, v6);
  int v34 = v87(v33, 1, v6);
  v85 = a1;
  if (v26)
  {
    if (!v34)
    {
      uint64_t v35 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v32, v33, v35);
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(&v32[*(int *)(v6 + 20)], &v33[*(int *)(v6 + 20)], v25);
      uint64_t v36 = *(int *)(v6 + 24);
      uint64_t v37 = &v32[v36];
      uint64_t v38 = &v33[v36];
      uint64_t v39 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v32, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    sub_10002AAD8((uint64_t)v32, type metadata accessor for CalendarBinningUnit);
LABEL_12:
    uint64_t v40 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v71 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24))(v32, v33, v71);
  v88(&v32[*(int *)(v6 + 20)], &v33[*(int *)(v6 + 20)], v25);
  uint64_t v72 = *(int *)(v6 + 24);
  uint64_t v73 = &v32[v72];
  uint64_t v74 = &v33[v72];
  uint64_t v75 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
LABEL_13:
  *(void *)&v32[*(int *)(v84 + 20)] = *(void *)&v33[*(int *)(v84 + 20)];
  *(void *)&v32[*(int *)(v84 + 24)] = *(void *)&v33[*(int *)(v84 + 24)];
  uint64_t v41 = *(int *)(v86 + 28);
  uint64_t v42 = &v32[v41];
  uint64_t v43 = &v33[v41];
  v88(&v32[v41], &v33[v41], v25);
  v88(&v42[*(int *)(v83 + 36)], &v43[*(int *)(v83 + 36)], v25);
  *(void *)&v32[*(int *)(v86 + 32)] = *(void *)&v33[*(int *)(v86 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v89[7];
  uint64_t v45 = &v85[v44];
  uint64_t v46 = &a2[v44];
  LODWORD(v42) = v87(&v85[v44], 1, v6);
  int v47 = v87(v46, 1, v6);
  if (!v42)
  {
    if (!v47)
    {
      uint64_t v76 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 24))(v45, v46, v76);
      v88(&v45[*(int *)(v6 + 20)], &v46[*(int *)(v6 + 20)], v25);
      uint64_t v77 = *(int *)(v6 + 24);
      uint64_t v78 = &v45[v77];
      unint64_t v79 = &v46[v77];
      uint64_t v80 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
      goto LABEL_19;
    }
    sub_10002AAD8((uint64_t)v45, type metadata accessor for CalendarBinningUnit);
    goto LABEL_18;
  }
  if (v47)
  {
LABEL_18:
    uint64_t v53 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v45, v46, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v48 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(&v45[*(int *)(v6 + 20)], &v46[*(int *)(v6 + 20)], v25);
  uint64_t v49 = *(int *)(v6 + 24);
  uint64_t v50 = &v45[v49];
  uint64_t v51 = &v46[v49];
  uint64_t v52 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v45, 0, 1, v6);
LABEL_19:
  *(void *)&v45[*(int *)(v84 + 20)] = *(void *)&v46[*(int *)(v84 + 20)];
  *(void *)&v45[*(int *)(v84 + 24)] = *(void *)&v46[*(int *)(v84 + 24)];
  uint64_t v54 = *(int *)(v86 + 28);
  uint64_t v55 = &v45[v54];
  uint64_t v56 = &v46[v54];
  v88(&v45[v54], &v46[v54], v25);
  v88(&v55[*(int *)(v83 + 36)], &v56[*(int *)(v83 + 36)], v25);
  *(void *)&v45[*(int *)(v86 + 32)] = *(void *)&v46[*(int *)(v86 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v89[8];
  uint64_t v58 = &v85[v57];
  uint64_t v59 = &a2[v57];
  uint64_t v60 = *(void *)v59;
  v58[8] = v59[8];
  *(void *)uint64_t v58 = v60;
  v88(&v85[v89[9]], &a2[v89[9]], v25);
  return v85;
}

char *sub_100028EEC(char *a1, char *a2, int *a3)
{
  uint64_t v5 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v65 = a1;
  uint64_t v60 = v6;
  if (v63(a2, 1, v5))
  {
    uint64_t v7 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(v5 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = *(int *)(v5 + 24);
    uint64_t v14 = &v65[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_100103AE8();
    uint64_t v17 = v15;
    a1 = v65;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v17, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v65, 0, 1, v5);
  }
  uint64_t v18 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v18 + 20)] = *(void *)&a2[*(int *)(v18 + 20)];
  *(void *)&a1[*(int *)(v18 + 24)] = *(void *)&a2[*(int *)(v18 + 24)];
  uint64_t v19 = sub_100007E0C(&qword_10014CE90);
  uint64_t v20 = *(int *)(v19 + 28);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_100103978();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  uint64_t v61 = sub_100007E0C(&qword_10014CE88);
  v24(&v21[*(int *)(v61 + 36)], &v22[*(int *)(v61 + 36)], v23);
  uint64_t v62 = v19;
  *(void *)&a1[*(int *)(v19 + 32)] = *(void *)&a2[*(int *)(v19 + 32)];
  uint64_t v25 = a3[5];
  uint64_t v26 = a3[6];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  v27[8] = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  uint64_t v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  if (v63(&a2[v26], 1, v5))
  {
    uint64_t v31 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v5;
  }
  else
  {
    uint64_t v33 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v29, v30, v33);
    v24(&v29[*(int *)(v5 + 20)], &v30[*(int *)(v5 + 20)], v23);
    uint64_t v34 = *(int *)(v5 + 24);
    uint64_t v35 = &v29[v34];
    uint64_t v36 = &v30[v34];
    uint64_t v37 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    uint64_t v32 = v5;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v29, 0, 1, v5);
  }
  *(void *)&v29[*(int *)(v18 + 20)] = *(void *)&v30[*(int *)(v18 + 20)];
  *(void *)&v29[*(int *)(v18 + 24)] = *(void *)&v30[*(int *)(v18 + 24)];
  uint64_t v38 = *(int *)(v62 + 28);
  uint64_t v39 = &v29[v38];
  uint64_t v40 = &v30[v38];
  v24(&v29[v38], &v30[v38], v23);
  v24(&v39[*(int *)(v61 + 36)], &v40[*(int *)(v61 + 36)], v23);
  *(void *)&v29[*(int *)(v62 + 32)] = *(void *)&v30[*(int *)(v62 + 32)];
  uint64_t v41 = a3;
  uint64_t v42 = a3[7];
  uint64_t v43 = &v65[v42];
  uint64_t v44 = &a2[v42];
  if (v63(&a2[v42], 1, v32))
  {
    uint64_t v45 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
    v24(&v43[*(int *)(v32 + 20)], &v44[*(int *)(v32 + 20)], v23);
    uint64_t v47 = *(int *)(v32 + 24);
    uint64_t v48 = &v43[v47];
    uint64_t v49 = &v44[v47];
    uint64_t v50 = sub_100103AE8();
    uint64_t v51 = v49;
    uint64_t v41 = a3;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v51, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v43, 0, 1, v32);
  }
  *(void *)&v43[*(int *)(v18 + 20)] = *(void *)&v44[*(int *)(v18 + 20)];
  *(void *)&v43[*(int *)(v18 + 24)] = *(void *)&v44[*(int *)(v18 + 24)];
  uint64_t v52 = *(int *)(v62 + 28);
  uint64_t v53 = &v43[v52];
  uint64_t v54 = &v44[v52];
  v24(&v43[v52], &v44[v52], v23);
  v24(&v53[*(int *)(v61 + 36)], &v54[*(int *)(v61 + 36)], v23);
  *(void *)&v43[*(int *)(v62 + 32)] = *(void *)&v44[*(int *)(v62 + 32)];
  uint64_t v55 = v41[8];
  uint64_t v56 = v41[9];
  uint64_t v57 = &v65[v55];
  uint64_t v58 = &a2[v55];
  v57[8] = v58[8];
  *(void *)uint64_t v57 = *(void *)v58;
  v24(&v65[v56], &a2[v56], v23);
  return v65;
}

char *sub_100029530(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
  int v8 = v7(a1, 1, v6);
  uint64_t v86 = v7;
  int v9 = v7(a2, 1, v6);
  int v88 = a3;
  if (v8)
  {
    if (!v9)
    {
      uint64_t v10 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = *(int *)(v6 + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = *(int *)(v6 + 24);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_10002AAD8((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
LABEL_6:
    uint64_t v19 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v61 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(a1, a2, v61);
  uint64_t v62 = *(int *)(v6 + 20);
  uint64_t v63 = &a1[v62];
  uint64_t v64 = &a2[v62];
  uint64_t v65 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
  uint64_t v66 = *(int *)(v6 + 24);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  uint64_t v69 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
LABEL_7:
  uint64_t v20 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v20 + 20)] = *(void *)&a2[*(int *)(v20 + 20)];
  uint64_t v83 = v20;
  *(void *)&a1[*(int *)(v20 + 24)] = *(void *)&a2[*(int *)(v20 + 24)];
  uint64_t v21 = sub_100007E0C(&qword_10014CE90);
  uint64_t v22 = *(int *)(v21 + 28);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_100103978();
  uint64_t v80 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v80 + 40);
  v26(v23, v24, v25);
  uint64_t v82 = sub_100007E0C(&qword_10014CE88);
  int v87 = v26;
  v26(&v23[*(int *)(v82 + 36)], &v24[*(int *)(v82 + 36)], v25);
  uint64_t v85 = v21;
  *(void *)&a1[*(int *)(v21 + 32)] = *(void *)&a2[*(int *)(v21 + 32)];
  swift_bridgeObjectRelease();
  uint64_t v27 = v88[5];
  uint64_t v28 = v88[6];
  uint64_t v29 = &a1[v27];
  uint64_t v30 = &a2[v27];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = &a1[v28];
  uint64_t v32 = &a2[v28];
  LODWORD(v26) = v86(&a1[v28], 1, v6);
  int v33 = v86(v32, 1, v6);
  uint64_t v84 = a1;
  if (v26)
  {
    if (!v33)
    {
      uint64_t v34 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v31[*(int *)(v6 + 20)], &v32[*(int *)(v6 + 20)], v25);
      uint64_t v35 = *(int *)(v6 + 24);
      uint64_t v36 = &v31[v35];
      uint64_t v37 = &v32[v35];
      uint64_t v38 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v31, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_10002AAD8((uint64_t)v31, type metadata accessor for CalendarBinningUnit);
LABEL_12:
    uint64_t v39 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v70 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v31, v32, v70);
  v87(&v31[*(int *)(v6 + 20)], &v32[*(int *)(v6 + 20)], v25);
  uint64_t v71 = *(int *)(v6 + 24);
  uint64_t v72 = &v31[v71];
  uint64_t v73 = &v32[v71];
  uint64_t v74 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
LABEL_13:
  *(void *)&v31[*(int *)(v83 + 20)] = *(void *)&v32[*(int *)(v83 + 20)];
  *(void *)&v31[*(int *)(v83 + 24)] = *(void *)&v32[*(int *)(v83 + 24)];
  uint64_t v40 = *(int *)(v85 + 28);
  uint64_t v41 = &v31[v40];
  uint64_t v42 = &v32[v40];
  v87(&v31[v40], &v32[v40], v25);
  v87(&v41[*(int *)(v82 + 36)], &v42[*(int *)(v82 + 36)], v25);
  *(void *)&v31[*(int *)(v85 + 32)] = *(void *)&v32[*(int *)(v85 + 32)];
  swift_bridgeObjectRelease();
  uint64_t v43 = v88[7];
  uint64_t v44 = &v84[v43];
  uint64_t v45 = &a2[v43];
  LODWORD(v41) = v86(&v84[v43], 1, v6);
  int v46 = v86(v45, 1, v6);
  if (!v41)
  {
    if (!v46)
    {
      uint64_t v75 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 40))(v44, v45, v75);
      v87(&v44[*(int *)(v6 + 20)], &v45[*(int *)(v6 + 20)], v25);
      uint64_t v76 = *(int *)(v6 + 24);
      uint64_t v77 = &v44[v76];
      uint64_t v78 = &v45[v76];
      uint64_t v79 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
      goto LABEL_19;
    }
    sub_10002AAD8((uint64_t)v44, type metadata accessor for CalendarBinningUnit);
    goto LABEL_18;
  }
  if (v46)
  {
LABEL_18:
    uint64_t v52 = sub_100007E0C(&qword_10014D3B8);
    memcpy(v44, v45, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v47 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v44[*(int *)(v6 + 20)], &v45[*(int *)(v6 + 20)], v25);
  uint64_t v48 = *(int *)(v6 + 24);
  uint64_t v49 = &v44[v48];
  uint64_t v50 = &v45[v48];
  uint64_t v51 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v44, 0, 1, v6);
LABEL_19:
  *(void *)&v44[*(int *)(v83 + 20)] = *(void *)&v45[*(int *)(v83 + 20)];
  *(void *)&v44[*(int *)(v83 + 24)] = *(void *)&v45[*(int *)(v83 + 24)];
  uint64_t v53 = *(int *)(v85 + 28);
  uint64_t v54 = &v44[v53];
  uint64_t v55 = &v45[v53];
  v87(&v44[v53], &v45[v53], v25);
  v87(&v54[*(int *)(v82 + 36)], &v55[*(int *)(v82 + 36)], v25);
  *(void *)&v44[*(int *)(v85 + 32)] = *(void *)&v45[*(int *)(v85 + 32)];
  swift_bridgeObjectRelease();
  uint64_t v56 = v88[8];
  uint64_t v57 = v88[9];
  uint64_t v58 = &v84[v56];
  uint64_t v59 = &a2[v56];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v59[8];
  v87(&v84[v57], &a2[v57], v25);
  return v84;
}

uint64_t sub_100029EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100029EB4);
}

uint64_t sub_100029EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014CE90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100103978();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 36);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100029FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100029FC4);
}

uint64_t sub_100029FC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014CE90);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100103978();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 36);
    return v13(v15, a2, a2, v14);
  }
}

void sub_10002A0CC()
{
  sub_10002A1A4();
  if (v0 <= 0x3F)
  {
    sub_100103978();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10002A1A4()
{
  if (!qword_10014D428)
  {
    unint64_t v0 = type metadata accessor for DateBinDictionary();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10014D428);
    }
  }
}

uint64_t destroy for InsightsDataManager.TimeSummary()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InsightsDataManager.TimeSummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InsightsDataManager.TimeSummary(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for InsightsDataManager.TimeSummary(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.TimeSummary(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.TimeSummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.TimeSummary()
{
  return &type metadata for InsightsDataManager.TimeSummary;
}

uint64_t *sub_10002A3C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100103978();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10002A4A0(uint64_t a1)
{
  uint64_t v2 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002A59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002A634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10002A6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002A744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002A758);
}

uint64_t sub_10002A758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10002A818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002A82C);
}

uint64_t sub_10002A82C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100103978();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10002A8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002B6C0(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
}

unint64_t sub_10002A91C()
{
  unint64_t result = qword_10014D500;
  if (!qword_10014D500)
  {
    sub_100007F30(&qword_10014D508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D500);
  }
  return result;
}

void sub_10002A980(void *a1@<X8>)
{
  *a1 = &off_100138768;
}

unint64_t sub_10002A994()
{
  unint64_t result = qword_10014D510;
  if (!qword_10014D510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D510);
  }
  return result;
}

uint64_t sub_10002A9F0()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__places) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AA3C()
{
  return sub_1000215DC(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_10002AA60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100021054(a1, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks, a2);
}

uint64_t sub_10002AAA0()
{
  return sub_1000212B0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, type metadata accessor for InsightsDataManager.Streaks);
}

uint64_t sub_10002AAD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002AB38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100021054(a1, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup, a2);
}

uint64_t sub_10002AB78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002ABE0()
{
  return sub_1000212B0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
}

uint64_t sub_10002AC18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002AC88()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 16) + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002ACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002AD4C()
{
  return sub_100020730(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10002AD68(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002ADC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002AE38()
{
  return sub_1000203D0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10002AE54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100021054(a1, &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate, a2);
}

uint64_t sub_10002AE94()
{
  return sub_1000212B0(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
}

void destroy for InsightsDataManager.TopPlace(uint64_t a1)
{
  if (*(void *)a1 >= 4uLL) {

  }
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for InsightsDataManager.TopPlace(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2 >= 4uLL) {
    id v5 = v4;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRetain();
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for InsightsDataManager.TopPlace(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }
    sub_10002AAD8(a1, (uint64_t (*)(void))type metadata accessor for MKPointOfInterestCategory);
    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v9 = *(void **)(a2 + 32);
  unint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v9;
  id v11 = v9;

  return a1;
}

uint64_t assignWithTake for InsightsDataManager.TopPlace(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
    sub_10002AAD8(a1, (uint64_t (*)(void))type metadata accessor for MKPointOfInterestCategory);
  }
  *(void *)a1 = v5;
LABEL_6:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.TopPlace(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsDataManager.TopPlace(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.TopPlace()
{
  return &type metadata for InsightsDataManager.TopPlace;
}

void *sub_10002B188(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001039D8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10002B25C(uint64_t a1)
{
  uint64_t v2 = sub_1001039D8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10002B2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10002B344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10002B3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10002B450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10002B4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002B4E8);
}

uint64_t sub_10002B4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 9) {
      return v10 - 8;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10002B5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002B5B8);
}

uint64_t sub_10002B5B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001039D8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 8;
  }
  return result;
}

uint64_t type metadata accessor for InsightsDataManager.TopAssetCategory(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014D570);
}

uint64_t sub_10002B694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002B6C0(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10002B6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10002B764()
{
  return sub_10002B7AC((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10002B7AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B7F4(char a1)
{
  uint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F65646976;
      break;
    case 2:
      uint64_t result = 0x6F69647561;
      break;
    case 3:
      uint64_t result = 0x616964656DLL;
      break;
    case 4:
      uint64_t result = 0x6563616C70;
      break;
    case 5:
      uint64_t result = 0x61737265766E6F63;
      break;
    case 6:
      uint64_t result = 0x7974697669746361;
      break;
    case 7:
      uint64_t result = 0x697463656C666572;
      break;
    case 8:
      uint64_t result = 0x4D664F6574617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002B904(unsigned __int8 *a1, char *a2)
{
  return sub_100053F18(*a1, *a2);
}

Swift::Int sub_10002B910()
{
  return sub_100105928();
}

uint64_t sub_10002B958()
{
  return sub_10003E020();
}

Swift::Int sub_10002B960()
{
  return sub_100105928();
}

uint64_t sub_10002B9A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10002DBF4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10002B9D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002B7F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002BA00()
{
  return sub_100104CF8();
}

uint64_t sub_10002BA60()
{
  return sub_100104CB8();
}

uint64_t sub_10002BAB0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_10014D6B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10002E5EC();
  sub_100105968();
  char v15 = 0;
  sub_1001039D8();
  sub_10002B7AC(&qword_10014D6B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_1001057A8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for InsightsDataManager.EntrySummary(0);
    char v14 = 1;
    sub_100103978();
    sub_10002B7AC(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001057A8();
    char v13 = 2;
    sub_1001057A8();
    v11[1] = *(void *)(v3 + *(int *)(v9 + 28));
    char v12 = 3;
    sub_100007E0C(&qword_10014D698);
    sub_10002E694(&qword_10014D6C0, (void (*)(void))sub_10002E710);
    sub_1001057A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10002BD7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_100103978();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v32 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - v7;
  uint64_t v9 = sub_1001039D8();
  uint64_t v35 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100007E0C(&qword_10014D680);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  char v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for InsightsDataManager.EntrySummary(0);
  __chkstk_darwin(v13);
  char v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10002E5EC();
  uint64_t v39 = v12;
  uint64_t v16 = (uint64_t)v40;
  sub_100105958();
  if (v16) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v30 = v13;
  uint64_t v17 = v15;
  uint64_t v40 = a1;
  char v45 = 0;
  sub_10002B7AC(&qword_10014D690, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v18 = v37;
  sub_1001056F8();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v17, v18, v9);
  char v44 = 1;
  sub_10002B7AC(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v19 = v8;
  uint64_t v20 = v33;
  sub_1001056F8();
  v29[1] = v9;
  uint64_t v21 = v30;
  uint64_t v22 = &v17[*(int *)(v30 + 20)];
  uint64_t v37 = v17;
  uint64_t v23 = v19;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v24(v22, v23, v20);
  char v43 = 2;
  uint64_t v25 = v32;
  uint64_t v26 = v38;
  sub_1001056F8();
  v24(&v37[*(int *)(v21 + 24)], v25, v20);
  sub_100007E0C(&qword_10014D698);
  char v42 = 3;
  sub_10002E694(&qword_10014D6A0, (void (*)(void))sub_10002E640);
  sub_1001056F8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v26);
  uint64_t v27 = (uint64_t)v37;
  *(void *)&v37[*(int *)(v21 + 28)] = v41;
  sub_10002AB78(v27, v31, type metadata accessor for InsightsDataManager.EntrySummary);
  sub_1000121EC((uint64_t)v40);
  return sub_10002AAD8(v27, type metadata accessor for InsightsDataManager.EntrySummary);
}

uint64_t sub_10002C3A0()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4464657461657263;
      break;
    case 2:
      uint64_t result = 0x7461447972746E65;
      break;
    case 3:
      uint64_t result = 0x7079547465737361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002C434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002E970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10002C45C(uint64_t a1)
{
  unint64_t v2 = sub_10002E5EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002C498(uint64_t a1)
{
  unint64_t v2 = sub_10002E5EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002C4D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002BD7C(a1, a2);
}

uint64_t sub_10002C4EC(void *a1)
{
  return sub_10002BAB0(a1);
}

void sub_10002C504(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)v2;
  switch(*(void *)v2)
  {
    case 0:
      Swift::UInt v5 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v5 = 1;
      goto LABEL_7;
    case 2:
      Swift::UInt v5 = 2;
      goto LABEL_7;
    case 3:
      Swift::UInt v5 = 3;
LABEL_7:
      sub_1001058E8(v5);
      break;
    default:
      sub_1001058E8(4uLL);
      sub_100104B78();
      id v6 = v4;
      sub_100104BC8();
      swift_bridgeObjectRelease();
      sub_10001087C(v4);
      sub_10001087C(v4);
      break;
  }
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    sub_1001058F8(0);
  }
  else
  {
    Swift::UInt v7 = *(void *)(v2 + 8);
    sub_1001058F8(1u);
    sub_1001058E8(v7);
  }
  uint64_t v8 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  sub_10002CCE4(a1, v8);
  swift_bridgeObjectRelease();
  id v9 = *(id *)(v2 + 32);
  sub_100105228();
}

id sub_10002C668@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return sub_10001086C(v2);
}

Swift::Int sub_10002C674()
{
  sub_1001058D8();
  sub_10002C504((uint64_t)v1);
  return sub_100105928();
}

Swift::Int sub_10002C6B8()
{
  sub_1001058D8();
  sub_10002C504((uint64_t)v1);
  return sub_100105928();
}

uint64_t sub_10002C6F4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_10002CFC8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_10002C740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001039D8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

unint64_t sub_10002C7AC()
{
  unint64_t result = qword_10014D5B8;
  if (!qword_10014D5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D5B8);
  }
  return result;
}

unint64_t sub_10002C804()
{
  unint64_t result = qword_10014D5C0;
  if (!qword_10014D5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D5C0);
  }
  return result;
}

void sub_10002C858(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_57;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_10002CB90(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_100008234(0, &qword_10014D5C8);
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        return;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          return;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v30) {
            return;
          }
          unint64_t v17 = *(void *)(v29 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    Swift::Int v19 = *(void *)(a2 + 40);
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    Swift::Int v21 = sub_100105208(v19);
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v31 = v12;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = sub_100105218();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = sub_100105218();

        if (v28) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v30) {
    return;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __CocoaSet.isEqual(to:)(v6, v5);
}

void sub_10002CB90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1001053D8()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_100105418();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

void sub_10002CCE4(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = sub_100105928();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1001053C8();
    sub_100008234(0, &qword_10014D5C8);
    sub_10002CF58();
    sub_100104ED8();
    a2 = v22;
    uint64_t v4 = v23;
    uint64_t v5 = v24;
    int64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v4 = a2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v6 = 0;
  }
  Swift::UInt v11 = 0;
  int64_t v12 = (unint64_t)(v5 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_100105408()) {
      goto LABEL_26;
    }
    sub_100008234(0, &qword_10014D5C8);
    swift_dynamicCast();
    int64_t v16 = v21;
    if (!v21) {
      goto LABEL_26;
    }
    int64_t v15 = v6;
    uint64_t v13 = v7;
LABEL_10:
    Swift::Int v18 = sub_100105208(v3);

    v11 ^= v18;
    int64_t v6 = v15;
    unint64_t v7 = v13;
  }
  if (v7)
  {
    uint64_t v13 = (v7 - 1) & v7;
    unint64_t v14 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v15 = v6;
LABEL_9:
    int64_t v16 = *(void **)(*(void *)(a2 + 48) + 8 * v14);
    Swift::Int v21 = v16;
    id v17 = v16;
    if (!v16) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 >= v12) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v15);
    if (!v19)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v12) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v15);
      if (!v19)
      {
        int64_t v20 = v6 + 3;
        while (v12 != v20)
        {
          unint64_t v19 = *(void *)(v4 + 8 * v20++);
          if (v19)
          {
            int64_t v15 = v20 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_10002CFC0();
        sub_1001058E8(v11);
        return;
      }
    }
LABEL_22:
    uint64_t v13 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

unint64_t sub_10002CF58()
{
  unint64_t result = qword_10014D5D0;
  if (!qword_10014D5D0)
  {
    sub_100008234(255, &qword_10014D5C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D5D0);
  }
  return result;
}

uint64_t sub_10002CFC0()
{
  return swift_release();
}

uint64_t sub_10002CFC8(uint64_t a1, uint64_t a2)
{
  sub_10002D208(a1, (uint64_t)&v14);
  sub_10002D208(a2, (uint64_t)&v13);
  sub_10002D208((uint64_t)&v14, (uint64_t)&v15);
  switch(v15)
  {
    case 0:
      sub_10002D208((uint64_t)&v13, (uint64_t)&v16);
      if (v16) {
        goto LABEL_23;
      }
      goto LABEL_15;
    case 1:
      sub_10002D208((uint64_t)&v13, (uint64_t)&v16);
      if (v16 == 1) {
        goto LABEL_15;
      }
      goto LABEL_23;
    case 2:
      sub_10002D208((uint64_t)&v13, (uint64_t)&v16);
      if (v16 == 2) {
        goto LABEL_15;
      }
      goto LABEL_23;
    case 3:
      sub_10002D208((uint64_t)&v13, (uint64_t)&v16);
      if (v16 == 3) {
        goto LABEL_15;
      }
      goto LABEL_23;
    default:
      sub_10002D208((uint64_t)&v13, (uint64_t)&v16);
      if (v16 < 4) {
        goto LABEL_23;
      }
      uint64_t v4 = sub_100104B78();
      uint64_t v6 = v5;
      if (v4 == sub_100104B78() && v6 == v7)
      {
        sub_10002D264(&v14);
        sub_10002D264(&v13);
        swift_bridgeObjectRelease_n();
        sub_10002D290(&v13);
        sub_10002D290(&v14);
      }
      else
      {
        char v8 = sub_1001057F8();
        sub_10002D264(&v14);
        sub_10002D264(&v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10002D290(&v13);
        sub_10002D290(&v14);
        char v9 = 0;
        if ((v8 & 1) == 0) {
          return v9 & 1;
        }
      }
LABEL_15:
      char v10 = *(unsigned char *)(a2 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        if (!*(unsigned char *)(a2 + 16)) {
          goto LABEL_23;
        }
      }
      else
      {
        if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
          char v10 = 1;
        }
        if (v10) {
          goto LABEL_23;
        }
      }
      sub_10002C858(*(void *)(a1 + 24), *(void *)(a2 + 24));
      if (v11)
      {
        sub_100008234(0, &qword_10014C330);
        char v9 = sub_100105218();
        return v9 & 1;
      }
LABEL_23:
      char v9 = 0;
      return v9 & 1;
  }
}

uint64_t sub_10002D208(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_10002D264(id *a1)
{
  return a1;
}

id *sub_10002D290(id *a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsDataManager.AssetCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InsightsDataManager.AssetCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002D418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.AssetCategory()
{
  return &type metadata for InsightsDataManager.AssetCategory;
}

unint64_t sub_10002D454()
{
  unint64_t result = qword_10014D5D8;
  if (!qword_10014D5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D5D8);
  }
  return result;
}

uint64_t sub_10002D4A8(void *a1, uint64_t a2)
{
  char v45 = a1;
  uint64_t v46 = a2;
  uint64_t v3 = type metadata accessor for UniformDateBins(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0) - 8;
  __chkstk_darwin(v44);
  int v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100103AE8();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  uint64_t v14 = Update - 8;
  __chkstk_darwin(Update);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103888();
  *(void *)&v16[*(int *)(v14 + 28)] = 0;
  *(void *)&v16[*(int *)(v14 + 32)] = &_swiftEmptySetSingleton;
  sub_10002DB8C((uint64_t)v16, v2 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__lastUpdated, type metadata accessor for InsightsDataManager.LastUpdate);
  *(void *)(v2 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager____lazy_storage___workContext) = 0;
  sub_100103A68();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v2 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar, v12, v9);
  uint64_t v17 = v2 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__referenceDate;
  uint64_t v43 = v2;
  uint64_t v18 = sub_100103978();
  unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  int64_t v20 = (void *)(v2 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__wordCount);
  *int64_t v20 = 0;
  v20[1] = 0;
  v20[2] = 0;
  v20[3] = &_swiftEmptyArrayStorage;
  uint64_t v21 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v6, 1, 1, v21);
  *(void *)&v6[*(int *)(v4 + 28)] = 0;
  *(void *)&v6[*(int *)(v4 + 32)] = 1;
  sub_1000D9A48((uint64_t)v6, (uint64_t)v8);
  uint64_t v23 = v44;
  uint64_t v24 = &v8[*(int *)(v44 + 28)];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  uint64_t v25 = v23;
  char v42 = &v8[*(int *)(v23 + 32)];
  v22(v6, 1, 1, v21);
  *(void *)&v6[*(int *)(v4 + 28)] = 0;
  *(void *)&v6[*(int *)(v4 + 32)] = 1;
  sub_1000D9A48((uint64_t)v6, (uint64_t)v42);
  char v42 = &v8[*(int *)(v25 + 36)];
  v22(v6, 1, 1, v21);
  *(void *)&v6[*(int *)(v4 + 28)] = 0;
  *(void *)&v6[*(int *)(v4 + 32)] = 1;
  sub_1000D9A48((uint64_t)v6, (uint64_t)v42);
  unint64_t v26 = &v8[*(int *)(v25 + 40)];
  *(void *)unint64_t v26 = 0;
  v26[8] = 1;
  sub_100103898();
  uint64_t v27 = v43;
  sub_10002DB8C((uint64_t)v8, v43 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__byEntryDate, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  uint64_t v28 = v27 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
  v19(v27 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks, 1, 1, v18);
  uint64_t v29 = (int *)type metadata accessor for StreakSummary();
  v19(v28 + v29[5], 1, 1, v18);
  v19(v28 + v29[6], 1, 1, v18);
  *(void *)(v28 + v29[7]) = 0;
  int64_t v30 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v31 = v28 + v30[5];
  v19(v31, 1, 1, v18);
  v19(v31 + v29[5], 1, 1, v18);
  v19(v31 + v29[6], 1, 1, v18);
  *(void *)(v31 + v29[7]) = 0;
  uint64_t v32 = v28 + v30[6];
  v19(v32, 1, 1, v18);
  v19(v32 + v29[5], 1, 1, v18);
  v19(v32 + v29[6], 1, 1, v18);
  *(void *)(v32 + v29[7]) = 0;
  uint64_t v33 = v28 + v30[7];
  v19(v33, 1, 1, v18);
  v19(v33 + v29[5], 1, 1, v18);
  v19(v33 + v29[6], 1, 1, v18);
  *(void *)(v33 + v29[7]) = 0;
  uint64_t v34 = v28 + v30[8];
  v19(v34, 1, 1, v18);
  v19(v34 + v29[5], 1, 1, v18);
  v19(v34 + v29[6], 1, 1, v18);
  *(void *)(v34 + v29[7]) = 0;
  uint64_t v35 = v28 + v30[9];
  v19(v35, 1, 1, v18);
  v19(v35 + v29[5], 1, 1, v18);
  v19(v35 + v29[6], 1, 1, v18);
  *(void *)(v35 + v29[7]) = 0;
  uint64_t v36 = (void *)(v27 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__allTime);
  *uint64_t v36 = &_swiftEmptyArrayStorage;
  v36[1] = &_swiftEmptyArrayStorage;
  _OWORD v36[2] = 0;
  v36[3] = &_swiftEmptyArrayStorage;
  *(void *)(v27 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__places) = &_swiftEmptyArrayStorage;
  *(void *)(v27 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__updateTask) = 0;
  sub_100103B88();
  uint64_t v37 = v45;
  uint64_t v38 = v46;
  *(void *)(v27 + 16) = v45;
  *(void *)(v27 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options) = v38;
  id v39 = v37;
  sub_10001AFB0();
  return v27;
}

uint64_t sub_10002DB8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002DBF4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100138790;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

unint64_t sub_10002DC40()
{
  unint64_t result = qword_10014D5E0;
  if (!qword_10014D5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D5E0);
  }
  return result;
}

char *sub_10002DC94(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001039D8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_100103978();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10002DDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002DEBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002DFB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002E0B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10002E1AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002E2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002E2BC);
}

uint64_t sub_10002E2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100103978();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10002E3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002E3E4);
}

uint64_t sub_10002E3E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001039D8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100103978();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for InsightsDataManager.EntrySummary(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014D640);
}

uint64_t sub_10002E514()
{
  uint64_t result = sub_1001039D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100103978();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_10002E5EC()
{
  unint64_t result = qword_10014D688;
  if (!qword_10014D688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D688);
  }
  return result;
}

unint64_t sub_10002E640()
{
  unint64_t result = qword_10014D6A8;
  if (!qword_10014D6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D6A8);
  }
  return result;
}

uint64_t sub_10002E694(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_10014D698);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002E710()
{
  unint64_t result = qword_10014D6C8;
  if (!qword_10014D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D6C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InsightsDataManager.EntrySummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002E830);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsDataManager.EntrySummary.CodingKeys()
{
  return &type metadata for InsightsDataManager.EntrySummary.CodingKeys;
}

unint64_t sub_10002E86C()
{
  unint64_t result = qword_10014D6D0;
  if (!qword_10014D6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D6D0);
  }
  return result;
}

unint64_t sub_10002E8C4()
{
  unint64_t result = qword_10014D6D8;
  if (!qword_10014D6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D6D8);
  }
  return result;
}

unint64_t sub_10002E91C()
{
  unint64_t result = qword_10014D6E0;
  if (!qword_10014D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D6E0);
  }
  return result;
}

uint64_t sub_10002E970(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461447972746E65 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7079547465737361 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

double sub_10002EB58@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100103978();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_10014D7F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReportedStreaks = (int *)type metadata accessor for LastReportedStreaks();
  uint64_t v10 = *((void *)ReportedStreaks - 1);
  __chkstk_darwin(ReportedStreaks);
  uint64_t v12 = (uint64_t **)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_100104928() & 1) == 0)
  {
    sub_100032C08((uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, ReportedStreaks) != 1)
    {
      sub_100033808((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for LastReportedStreaks);
      uint64_t v18 = sub_10008BA74(*v12, (uint64_t)v12 + ReportedStreaks[5], *(uint64_t *)((char *)v12 + ReportedStreaks[6]), (uint64_t *)((char *)v12 + ReportedStreaks[7]), *(uint64_t *)((char *)v12 + ReportedStreaks[8]), *(uint64_t *)((char *)v12 + ReportedStreaks[9]), 0);
      uint64_t v16 = v19;
      sub_100103948();
      sub_1000337A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for LastReportedStreaks);
      uint64_t v13 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
      uint64_t v20 = a1 + v13[7];
      uint64_t v21 = sub_100104918();
      char v17 = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
      (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
      goto LABEL_6;
    }
    sub_100012510((uint64_t)v8, &qword_10014D7F0);
  }
  sub_100103948();
  uint64_t v13 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v14 = a1 + v13[7];
  uint64_t v15 = sub_100104918();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = 0;
  char v17 = 0;
  uint64_t v18 = 2;
LABEL_6:
  uint64_t v22 = (uint64_t *)(a1 + v13[5]);
  *uint64_t v22 = v18;
  v22[1] = v16;
  *(void *)&double result = 2;
  *(_OWORD *)(a1 + v13[6]) = xmmword_100109290;
  *(unsigned char *)(a1 + v13[8]) = v17;
  *(unsigned char *)(a1 + v13[9]) = 2;
  return result;
}

uint64_t sub_10002EEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a6;
  uint64_t v22 = a5;
  uint64_t v23 = a3;
  uint64_t v9 = sub_100104938();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007E0C(&qword_10014CD00);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100104E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  *((void *)v19 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v17], v12, v9);
  uint64_t v20 = &v19[v18];
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = a4;
  *(void *)&v19[(v18 + 23) & 0xFFFFFFFFFFFFFFF8] = v24;
  swift_retain();
  swift_retain();
  sub_1000491D4((uint64_t)v15, v25, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_10002F0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10002F104(a1, a2, a3, a4, a5, (uint64_t)&unk_10013A0B0, (uint64_t)&unk_10014D830);
}

uint64_t sub_10002F0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10002F104(a1, a2, a3, a4, a5, (uint64_t)&unk_10013A088, (uint64_t)&unk_10014D7D0);
}

uint64_t sub_10002F104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10002EEBC(0, a1, a2, a3, a6, a7);
}

uint64_t sub_10002F170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017E10;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10002F224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017E10;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10002F2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = sub_100103978();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  sub_100007E0C((uint64_t *)&unk_100151950);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return _swift_task_switch(sub_10002F404, 0, 0);
}

uint64_t sub_10002F404()
{
  unint64_t v1 = sub_100033350();
  v0[23] = v1;
  if (v1)
  {
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container];
    v0[24] = v2;
    v0[25] = sub_10005746C((uint64_t)&off_1001388B0);
    v0[26] = sub_100104E38();
    id v3 = v2;
    v0[27] = sub_100104E28();
    uint64_t v5 = sub_100104DE8();
    return _swift_task_switch(sub_10002F55C, v5, v4);
  }
  else
  {
    sub_10002EB58(v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_10002F55C()
{
  unint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[25];
  swift_release();
  type metadata accessor for InsightsDataManager(0);
  swift_allocObject();
  v0[28] = sub_10002D4A8(v1, v2);

  id v3 = (void *)swift_task_alloc();
  v0[29] = v3;
  void *v3 = v0;
  v3[1] = sub_10002F628;
  return sub_1000D8AF4();
}

uint64_t sub_10002F628()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10002F724, 0, 0);
}

uint64_t sub_10002F724()
{
  *(void *)(v0 + 240) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_10002F7B0, v2, v1);
}

uint64_t sub_10002F7B0()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  swift_release();
  swift_getKeyPath();
  v0[31] = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager___observationRegistrar;
  v0[5] = v1;
  v0[32] = sub_1000338D4(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v3 = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
  v0[33] = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for StreakSummary();
  v0[34] = v5;
  v0[35] = *(void *)(v4 + *(int *)(v5 + 28));
  swift_getKeyPath();
  v0[6] = v1;
  sub_100103B58();
  swift_release();
  sub_100010808(v4 + *(int *)(v5 + 24), v2, (uint64_t *)&unk_100151950);
  return _swift_task_switch(sub_10002F93C, 0, 0);
}

uint64_t sub_10002F93C()
{
  *(void *)(v0 + 288) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_10002F9C8, v2, v1);
}

uint64_t sub_10002F9C8()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[21];
  swift_release();
  swift_getKeyPath();
  v0[7] = v3;
  sub_100103B58();
  swift_release();
  uint64_t v5 = type metadata accessor for InsightsDataManager.Streaks(0);
  v0[37] = v5;
  v0[38] = *(void *)(v3 + v1 + *(int *)(v5 + 20) + *(int *)(v2 + 28));
  swift_getKeyPath();
  v0[8] = v3;
  sub_100103B58();
  swift_release();
  sub_100010808(v3 + v1 + *(int *)(v5 + 20) + *(int *)(v2 + 24), v4, (uint64_t *)&unk_100151950);
  return _swift_task_switch(sub_10002FAFC, 0, 0);
}

uint64_t sub_10002FAFC()
{
  *(void *)(v0 + 312) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_10002FB88, v2, v1);
}

uint64_t sub_10002FB88()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[28];
  swift_release();
  swift_getKeyPath();
  v0[9] = v4;
  sub_100103B58();
  swift_release();
  v0[40] = *(void *)(v4 + v2 + *(int *)(v1 + 24) + *(int *)(v3 + 28));
  return _swift_task_switch(sub_10002FC60, 0, 0);
}

uint64_t sub_10002FC60()
{
  *(void *)(v0 + 328) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_10002FCEC, v2, v1);
}

uint64_t sub_10002FCEC()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[28];
  swift_release();
  swift_getKeyPath();
  v0[10] = v4;
  sub_100103B58();
  swift_release();
  v0[42] = *(void *)(v4 + v2 + *(int *)(v1 + 28) + *(int *)(v3 + 28));
  return _swift_task_switch(sub_10002FDC4, 0, 0);
}

uint64_t sub_10002FDC4()
{
  if (*(void *)(v0 + 96))
  {
    sub_100103328();
    int v1 = *(unsigned __int8 *)(v0 + 344);
  }
  else
  {
    int v1 = 0;
  }
  uint64_t v3 = *(uint64_t **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v7 = sub_10008BA74(*(uint64_t **)(v0 + 280), v2, *(void *)(v0 + 304), v3, *(void *)(v0 + 320), *(void *)(v0 + 336), v1);
  uint64_t v9 = v8;
  uint64_t v30 = v11;
  uint64_t v31 = v10;
  sub_100012510((uint64_t)v3, (uint64_t *)&unk_100151950);
  sub_100012510(v2, (uint64_t *)&unk_100151950);
  sub_100103948();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, 1, 1, v6);
  if (v7 != 2)
  {
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    sub_100010808(*(void *)(v0 + 160), v12, (uint64_t *)&unk_100151950);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_100012510(*(void *)(v0 + 152), (uint64_t *)&unk_100151950);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 152), *(void *)(v0 + 120));
      if ((sub_1001038E8() & 1) != 0 && v9 > 1)
      {
        uint64_t v15 = *(void *)(v0 + 136);
        uint64_t v16 = *(void *)(v0 + 120);
        uint64_t v17 = *(void *)(v0 + 128);
        sub_1001038A8();
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      else
      {
        (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
      }
    }
  }
  unint64_t v18 = *(void **)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 144);
  uint64_t v20 = *(void *)(v0 + 120);
  uint64_t v21 = *(void *)(v0 + 128);
  uint64_t v22 = *(void *)(v0 + 88);
  sub_100012510(*(void *)(v0 + 160), (uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  sub_100103948();
  uint64_t v23 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v24 = v22 + v23[7];
  sub_100104908();
  swift_release();

  uint64_t v25 = sub_100104918();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  unint64_t v26 = (uint64_t *)(v22 + v23[5]);
  *unint64_t v26 = v7;
  v26[1] = v9;
  uint64_t v27 = (void *)(v22 + v23[6]);
  *uint64_t v27 = v31;
  v27[1] = v30;
  *(unsigned char *)(v22 + v23[8]) = 1;
  *(unsigned char *)(v22 + v23[9]) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1000300EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  sub_100007E0C(&qword_10014D7E8);
  v4[15] = swift_task_alloc();
  uint64_t v5 = sub_100103AD8();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v6 = sub_100103AE8();
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StreaksWidgetTimelineEntry();
  v4[22] = v7;
  v4[23] = *(void *)(v7 - 8);
  v4[24] = swift_task_alloc();
  uint64_t v8 = sub_1001048E8();
  v4[25] = v8;
  v4[26] = *(void *)(v8 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  sub_100007E0C(&qword_10014D7F0);
  v4[29] = swift_task_alloc();
  v4[30] = type metadata accessor for InsightsDataManager.Streaks(0);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  uint64_t ReportedStreaks = type metadata accessor for LastReportedStreaks();
  v4[37] = ReportedStreaks;
  v4[38] = *(void *)(ReportedStreaks - 8);
  v4[39] = swift_task_alloc();
  sub_100007E0C(&qword_10014D7F8);
  v4[40] = swift_task_alloc();
  sub_100007E0C((uint64_t *)&unk_100151950);
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  uint64_t v10 = sub_100103978();
  v4[48] = v10;
  v4[49] = *(void *)(v10 - 8);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  return _swift_task_switch(sub_100030518, 0, 0);
}

uint64_t sub_100030518()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 376);
  type metadata accessor for JournalWidgetBridge();
  sub_10006B698(v3);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 376);
    uint64_t v6 = (uint64_t *)&unk_100151950;
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 96);
    (*(void (**)(void, void, void))(*(void *)(v0 + 392) + 32))(*(void *)(v0 + 408), *(void *)(v0 + 376), *(void *)(v0 + 384));
    if (v7)
    {
      sub_100103328();
      unsigned __int8 v8 = *(unsigned char *)(v0 + 577);
    }
    else
    {
      unsigned __int8 v8 = 3;
    }
    uint64_t v9 = *(char **)(v0 + 408);
    uint64_t v10 = *(void *)(v0 + 384);
    uint64_t v11 = *(void *)(v0 + 392);
    uint64_t v12 = *(void *)(v0 + 320);
    uint64_t v13 = sub_100033690(v8);
    sub_10005BC30(v9, v13, v12);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v14 = sub_100007E0C(&qword_10014D7D8);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    {
      (*(void (**)(void, void, uint64_t))(v15 + 32))(*(void *)(v0 + 88), *(void *)(v0 + 320), v14);
      goto LABEL_19;
    }
    uint64_t v6 = (uint64_t *)&unk_10014D7F8;
    uint64_t v5 = *(void *)(v0 + 320);
  }
  sub_100012510(v5, v6);
  uint64_t v16 = sub_100033350();
  *(void *)(v0 + 416) = v16;
  if (v16)
  {
    uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container];
    *(void *)(v0 + 424) = v17;
    *(void *)(v0 + 432) = sub_10005746C((uint64_t)&off_1001388D8);
    *(void *)(v0 + 440) = sub_100104E38();
    id v18 = v17;
    *(void *)(v0 + 448) = sub_100104E28();
    uint64_t v20 = sub_100104DE8();
    return _swift_task_switch(sub_100030BF8, v20, v19);
  }
  uint64_t v22 = *(void *)(v0 + 392);
  uint64_t v21 = *(void *)(v0 + 400);
  uint64_t v48 = *(void *)(v0 + 384);
  uint64_t v23 = *(void *)(v0 + 336);
  uint64_t v50 = *(void *)(v0 + 328);
  uint64_t v24 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 160);
  uint64_t v49 = *(void *)(v0 + 152);
  uint64_t v51 = v4;
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 128);
  sub_10002EB58(*(void *)(v0 + 192));
  sub_100103AB8();
  (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v26, enum case for Calendar.Component.minute(_:), v27);
  sub_100103948();
  sub_100103A98();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v28(v21, v48);
  uint64_t v29 = v28;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v24, v49);
  sub_100010808(v23, v50, (uint64_t *)&unk_100151950);
  uint64_t v30 = 1;
  if (v51(v50, 1, v48) != 1)
  {
    uint64_t v31 = *(void *)(v0 + 400);
    uint64_t v32 = *(void *)(v0 + 384);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 392) + 32))(v31, *(void *)(v0 + 328), v32);
    sub_1001048C8();
    v29(v31, v32);
    uint64_t v30 = 0;
  }
  uint64_t v33 = *(void *)(v0 + 200);
  uint64_t v34 = *(void *)(v0 + 208);
  uint64_t v35 = *(void *)(v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v35, v30, 1, v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v33) == 1)
  {
    uint64_t v36 = *(void *)(v0 + 120);
    sub_1001048D8();
    sub_100012510(v36, &qword_10014D7E8);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 216), *(void *)(v0 + 120), *(void *)(v0 + 200));
  }
  uint64_t v52 = *(void *)(v0 + 336);
  uint64_t v37 = *(void *)(v0 + 216);
  uint64_t v38 = *(void *)(v0 + 224);
  uint64_t v40 = *(void *)(v0 + 200);
  uint64_t v39 = *(void *)(v0 + 208);
  uint64_t v42 = *(void *)(v0 + 184);
  uint64_t v41 = *(void *)(v0 + 192);
  sub_100007E0C(&qword_10014D800);
  unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_100108260;
  sub_100033740(v41, v44 + v43, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v37, v40);
  sub_1000338D4(qword_10014D788, (void (*)(uint64_t))type metadata accessor for StreaksWidgetTimelineEntry);
  sub_100104978();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v40);
  sub_100012510(v52, (uint64_t *)&unk_100151950);
  sub_1000337A8(v41, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_100030BF8()
{
  uint64_t v1 = (void *)v0[53];
  uint64_t v2 = v0[54];
  swift_release();
  type metadata accessor for InsightsDataManager(0);
  swift_allocObject();
  v0[57] = sub_10002D4A8(v1, v2);

  uint64_t v3 = (void *)swift_task_alloc();
  v0[58] = v3;
  void *v3 = v0;
  v3[1] = sub_100030CC4;
  return sub_1000D8AF4();
}

uint64_t sub_100030CC4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030DC0, 0, 0);
}

uint64_t sub_100030DC0()
{
  *(void *)(v0 + 472) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_100030E4C, v2, v1);
}

uint64_t sub_100030E4C()
{
  uint64_t v1 = v0[57];
  uint64_t v2 = v0[36];
  swift_release();
  swift_getKeyPath();
  v0[60] = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager___observationRegistrar;
  v0[5] = v1;
  v0[61] = sub_1000338D4(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v3 = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
  v0[62] = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__streaks;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_100033740(v4, v2, type metadata accessor for InsightsDataManager.Streaks);
  return _swift_task_switch(sub_100030F8C, 0, 0);
}

uint64_t sub_100030F8C()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = type metadata accessor for StreakSummary();
  v0[63] = v2;
  v0[64] = *(void *)(v1 + *(int *)(v2 + 28));
  sub_1000337A8(v1, type metadata accessor for InsightsDataManager.Streaks);
  v0[65] = sub_100104E28();
  uint64_t v4 = sub_100104DE8();
  return _swift_task_switch(sub_100031050, v4, v3);
}

uint64_t sub_100031050()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[35];
  swift_release();
  swift_getKeyPath();
  v0[6] = v2;
  sub_100103B58();
  swift_release();
  sub_100033740(v2 + v1, v3, type metadata accessor for InsightsDataManager.Streaks);
  return _swift_task_switch(sub_10003112C, 0, 0);
}

uint64_t sub_10003112C()
{
  uint64_t v1 = v0[35];
  sub_100010808(v1 + *(int *)(v0[63] + 24), v0[46], (uint64_t *)&unk_100151950);
  sub_1000337A8(v1, type metadata accessor for InsightsDataManager.Streaks);
  v0[66] = sub_100104E28();
  uint64_t v3 = sub_100104DE8();
  return _swift_task_switch(sub_1000311F4, v3, v2);
}

uint64_t sub_1000311F4()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[34];
  swift_release();
  swift_getKeyPath();
  v0[7] = v2;
  sub_100103B58();
  swift_release();
  sub_100033740(v2 + v1, v3, type metadata accessor for InsightsDataManager.Streaks);
  return _swift_task_switch(sub_1000312D0, 0, 0);
}

uint64_t sub_1000312D0()
{
  uint64_t v1 = v0[34];
  v0[67] = *(void *)(v1 + *(int *)(v0[30] + 20) + *(int *)(v0[63] + 28));
  sub_1000337A8(v1, type metadata accessor for InsightsDataManager.Streaks);
  v0[68] = sub_100104E28();
  uint64_t v3 = sub_100104DE8();
  return _swift_task_switch(sub_100031394, v3, v2);
}

uint64_t sub_100031394()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[33];
  swift_release();
  swift_getKeyPath();
  v0[8] = v2;
  sub_100103B58();
  swift_release();
  sub_100033740(v2 + v1, v3, type metadata accessor for InsightsDataManager.Streaks);
  return _swift_task_switch(sub_100031470, 0, 0);
}

uint64_t sub_100031470()
{
  uint64_t v1 = v0[33];
  sub_100010808(v1 + *(int *)(v0[30] + 20) + *(int *)(v0[63] + 24), v0[45], (uint64_t *)&unk_100151950);
  sub_1000337A8(v1, type metadata accessor for InsightsDataManager.Streaks);
  v0[69] = sub_100104E28();
  uint64_t v3 = sub_100104DE8();
  return _swift_task_switch(sub_100031544, v3, v2);
}

uint64_t sub_100031544()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[32];
  swift_release();
  swift_getKeyPath();
  v0[9] = v2;
  sub_100103B58();
  swift_release();
  sub_100033740(v2 + v1, v3, type metadata accessor for InsightsDataManager.Streaks);
  return _swift_task_switch(sub_100031620, 0, 0);
}

uint64_t sub_100031620()
{
  uint64_t v1 = v0[32];
  v0[70] = *(void *)(v1 + *(int *)(v0[30] + 24) + *(int *)(v0[63] + 28));
  sub_1000337A8(v1, type metadata accessor for InsightsDataManager.Streaks);
  v0[71] = sub_100104E28();
  uint64_t v3 = sub_100104DE8();
  return _swift_task_switch(sub_1000316E4, v3, v2);
}

uint64_t sub_1000316E4()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[31];
  swift_release();
  swift_getKeyPath();
  v0[10] = v2;
  sub_100103B58();
  swift_release();
  sub_100033740(v2 + v1, v3, type metadata accessor for InsightsDataManager.Streaks);
  return _swift_task_switch(sub_1000317C0, 0, 0);
}

uint64_t sub_1000317C0()
{
  uint64_t v24 = *(void *)(v0 + 536);
  uint64_t v25 = *(void *)(v0 + 560);
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v27 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(uint64_t **)(v0 + 312);
  uint64_t v6 = *(int **)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v28 = *(void *)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v7 + *(int *)(*(void *)(v0 + 240) + 28) + *(int *)(*(void *)(v0 + 504) + 28));
  sub_1000337A8(v7, type metadata accessor for InsightsDataManager.Streaks);
  *uint64_t v5 = v1;
  uint64_t v26 = (uint64_t)v5 + v6[5];
  sub_100033870(v2, v26, (uint64_t *)&unk_100151950);
  uint64_t v10 = v6[6];
  *(uint64_t *)((char *)v5 + v10) = v24;
  uint64_t v11 = (uint64_t)v5 + v6[7];
  sub_100033870(v3, v11, (uint64_t *)&unk_100151950);
  uint64_t v12 = v6[8];
  *(uint64_t *)((char *)v5 + v12) = v25;
  uint64_t v13 = v6[9];
  *(uint64_t *)((char *)v5 + v13) = v9;
  sub_100033740((uint64_t)v5, v8, (uint64_t (*)(void))type metadata accessor for LastReportedStreaks);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v4 + 56))(v8, 0, 1, v6);
  sub_100032F84(v8);
  sub_100012510(v8, &qword_10014D7F0);
  uint64_t v14 = *v5;
  sub_100010808(v26, v27, (uint64_t *)&unk_100151950);
  uint64_t v15 = *(uint64_t *)((char *)v5 + v10);
  sub_100010808(v11, v28, (uint64_t *)&unk_100151950);
  uint64_t v16 = *(uint64_t *)((char *)v5 + v12);
  uint64_t v17 = *(uint64_t *)((char *)v5 + v13);
  if (v30)
  {
    sub_100103328();
    int v18 = *(unsigned __int8 *)(v0 + 576);
  }
  else
  {
    int v18 = 0;
  }
  uint64_t v20 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 352);
  uint64_t v29 = *(void **)(v0 + 416);
  uint64_t v31 = *(void *)(v0 + 312);
  uint64_t v21 = sub_10008E000(v14, v19, v15, v20, v16, v17, v18);
  sub_100012510(v20, (uint64_t *)&unk_100151950);
  sub_100012510(v19, (uint64_t *)&unk_100151950);
  sub_1000324CC((uint64_t)v21);
  swift_bridgeObjectRelease();
  sub_1001048D8();
  sub_1000338D4(qword_10014D788, (void (*)(uint64_t))type metadata accessor for StreaksWidgetTimelineEntry);
  sub_100104978();
  swift_release();

  sub_1000337A8(v31, (uint64_t (*)(void))type metadata accessor for LastReportedStreaks);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

double sub_100031BD8@<D0>(uint64_t a1@<X8>)
{
  return sub_10002EB58(a1);
}

uint64_t sub_100031C18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  type metadata accessor for StreaksWidgetTimelineProviderDefinition();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017E10;
  return sub_10002F2D8(a1, v6, a3);
}

uint64_t sub_100031CD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  type metadata accessor for StreaksWidgetTimelineProviderDefinition();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017E10;
  return sub_1000300EC(a1, v6, a3);
}

uint64_t sub_100031D98(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100031DD8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10013A0B0, (uint64_t)&unk_10014D830);
}

uint64_t sub_100031DB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100031DD8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10013A088, (uint64_t)&unk_10014D7D0);
}

uint64_t sub_100031DD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = *a1;
  type metadata accessor for StreaksWidgetTimelineProviderDefinition();
  return sub_10002EEBC(v13, a2, a3, a4, a7, a8);
}

uint64_t sub_100031E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017A64;
  return AppIntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100031EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017E10;
  return AppIntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_100031FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[2] = a6;
  v7[3] = a7;
  type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v10 = swift_task_alloc();
  v7[4] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v7[5] = v11;
  void *v11 = v7;
  v11[1] = sub_100032094;
  return sub_10002F2D8(v10, a4, a5);
}

uint64_t sub_100032094()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100032190, 0, 0);
}

uint64_t sub_100032190()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_1000337A8(v1, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100032220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[2] = a6;
  v7[3] = a7;
  uint64_t v10 = sub_100007E0C(&qword_10014D7D8);
  v7[4] = v10;
  v7[5] = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  v7[6] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v7[7] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_100032338;
  return sub_1000300EC(v11, a4, a5);
}

uint64_t sub_100032338()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100032434, 0, 0);
}

uint64_t sub_100032434()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void *sub_1000324CC(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = (int *)v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = &_swiftEmptyArrayStorage;
  if (v15)
  {
    uint64_t v46 = &_swiftEmptyArrayStorage;
    sub_1000C3CBC(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v18 = *(void *)(v9 + 72);
    uint64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v35 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v36 = (void (**)(void))(v6 + 32);
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v40 = v18;
    uint64_t v41 = v5;
    uint64_t v42 = v4;
    uint64_t v45 = v8;
    do
    {
      sub_100033740(v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry);
      uint64_t v19 = &v11[*(int *)(v8 + 24)];
      if (*v19 != 2)
      {
        uint64_t v20 = *((void *)v19 + 1);
        sub_100010808((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v4, (uint64_t *)&unk_100151950);
        if ((*v38)(v4, 1, v5) == 1)
        {
          sub_100012510((uint64_t)v4, (uint64_t *)&unk_100151950);
        }
        else
        {
          uint64_t v21 = v37;
          (*v36)();
          if ((sub_1001038E8() & 1) != 0 && v20 > 1) {
            sub_1001038A8();
          }
          (*v35)(v21, v5);
        }
      }
      (*v39)(v14, v11, v5);
      uint64_t v22 = *(void *)v19;
      uint64_t v23 = *((void *)v19 + 1);
      uint64_t v24 = v44;
      uint64_t v25 = &v11[*(int *)(v45 + 28)];
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *((void *)v25 + 1);
      uint64_t v28 = &v14[v44[7]];
      sub_100104908();
      uint64_t v29 = sub_100104918();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
      uint64_t v30 = &v14[v24[5]];
      *(void *)uint64_t v30 = v22;
      *((void *)v30 + 1) = v23;
      uint64_t v31 = &v14[v24[6]];
      *(void *)uint64_t v31 = v26;
      *((void *)v31 + 1) = v27;
      v14[v24[8]] = 1;
      v14[v24[9]] = 2;
      sub_1000337A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry);
      uint64_t v16 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000C3CBC(0, v16[2] + 1, 1);
        uint64_t v16 = v46;
      }
      unint64_t v33 = v16[2];
      unint64_t v32 = v16[3];
      uint64_t v5 = v41;
      uint64_t v4 = v42;
      if (v33 >= v32 >> 1)
      {
        sub_1000C3CBC(v32 > 1, v33 + 1, 1);
        uint64_t v16 = v46;
      }
      v16[2] = v33 + 1;
      sub_100033808((uint64_t)v14, (uint64_t)v16+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v33, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
      v17 += v40;
      --v15;
      uint64_t v8 = v45;
    }
    while (v15);
  }
  return v16;
}

uint64_t type metadata accessor for StreaksWidgetTimelineProviderDefinition()
{
  return self;
}

ValueMetadata *type metadata accessor for StreaksWidgetStaticTimelineProvider()
{
  return &type metadata for StreaksWidgetStaticTimelineProvider;
}

ValueMetadata *type metadata accessor for StreaksWidgetIntentTimelineProvider()
{
  return &type metadata for StreaksWidgetIntentTimelineProvider;
}

uint64_t sub_100032A18()
{
  return sub_1000338D4(qword_10014D788, (void (*)(uint64_t))type metadata accessor for StreaksWidgetTimelineEntry);
}

unint64_t sub_100032A64()
{
  unint64_t result = qword_10014D7A0[0];
  if (!qword_10014D7A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10014D7A0);
  }
  return result;
}

uint64_t sub_100032ABC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100104938() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + v6 + 8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100017E10;
  return sub_100032220(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100032C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t ReportedStreaks = type metadata accessor for LastReportedStreaks();
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v4 = sub_100104B38();
  id v5 = [v3 initWithSuiteName:v4];

  if (v5)
  {
    NSString v6 = sub_100104B38();
    id v7 = [v5 objectForKey:v6];

    if (v7)
    {
      sub_100105328();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v16, 0, sizeof(v16));
    }
    sub_100033870((uint64_t)v16, (uint64_t)v17, &qword_10014D818);
    if (v18)
    {
      if (swift_dynamicCast())
      {
        sub_100103678();
        swift_allocObject();
        sub_100103668();
        sub_1000338D4(&qword_10014D820, (void (*)(uint64_t))type metadata accessor for LastReportedStreaks);
        sub_100103658();
        sub_100010378(v14, v15);
        swift_release();
        uint64_t v12 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(ReportedStreaks - 8) + 56))(a1, v12, 1, ReportedStreaks);
      }
    }
    else
    {
      sub_100012510((uint64_t)v17, &qword_10014D818);
    }
    id v8 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v9 = sub_100104B38();
    id v10 = [v8 initWithSuiteName:v9];

    if (v10)
    {
      NSString v11 = sub_100104B38();
      [v10 removeObjectForKey:v11];

      uint64_t v12 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(ReportedStreaks - 8) + 56))(a1, v12, 1, ReportedStreaks);
    }
  }
  uint64_t result = sub_1001055C8();
  __break(1u);
  return result;
}

uint64_t sub_100032F84(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014D7F0);
  __chkstk_darwin(v2 - 8);
  NSString v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t ReportedStreaks = type metadata accessor for LastReportedStreaks();
  uint64_t v6 = *(void *)(ReportedStreaks - 8);
  __chkstk_darwin(ReportedStreaks);
  id v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100010808(a1, (uint64_t)v4, &qword_10014D7F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, ReportedStreaks) == 1)
  {
    sub_100012510((uint64_t)v4, &qword_10014D7F0);
    id v9 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v10 = sub_100104B38();
    id v11 = [v9 initWithSuiteName:v10];

    if (v11)
    {
      NSString v12 = sub_100104B38();
      [v11 removeObjectForKey:v12];

      return 1;
    }
  }
  else
  {
    sub_100033808((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LastReportedStreaks);
    sub_1001036A8();
    swift_allocObject();
    sub_100103698();
    sub_1000338D4(&qword_10014D810, (void (*)(uint64_t))type metadata accessor for LastReportedStreaks);
    uint64_t v13 = sub_100103688();
    unint64_t v15 = v14;
    swift_release();
    id v16 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v17 = sub_100104B38();
    id v18 = [v16 initWithSuiteName:v17];

    if (v18)
    {
      Class isa = sub_100103838().super.isa;
      NSString v20 = sub_100104B38();
      [v18 setObject:isa forKey:v20];
      sub_100010378(v13, v15);

      sub_1000337A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LastReportedStreaks);
      return 1;
    }
  }
  uint64_t result = sub_1001055C8();
  __break(1u);
  return result;
}

unsigned char *sub_100033350()
{
  uint64_t v0 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!qword_10014D6E8)
  {
LABEL_9:
    if (qword_10014C0C0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100103818();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v2, 1, 1, v13);
    id v14 = objc_allocWithZone((Class)type metadata accessor for CoreDataStackShared());
    uint64_t v15 = swift_retain();
    NSString v10 = (unsigned char *)sub_100017F00(v15, (uint64_t)v2);
    id v16 = [*(id *)&v10[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container] viewContext];
    id v17 = [v16 persistentStoreCoordinator];

    if (!v17) {
      goto LABEL_18;
    }
    id v18 = [v17 persistentStores];
    sub_10003391C();
    unint64_t v19 = sub_100104D28();

    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1001055E8();

      swift_bridgeObjectRelease_n();
      if (!v22) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

      if (!v20) {
        goto LABEL_18;
      }
    }
    if (v10[OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_persistentStoresLoadSuccess])
    {
      id v4 = (id)qword_10014D6E8;
      qword_10014D6E8 = (uint64_t)v10;
      goto LABEL_16;
    }
LABEL_18:

    return 0;
  }
  uint64_t v3 = *(void **)(qword_10014D6E8 + OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_container);
  id v4 = (id)qword_10014D6E8;
  id v5 = [v3 viewContext];
  id v6 = [v5 persistentStoreCoordinator];

  if (!v6) {
    goto LABEL_8;
  }
  id v7 = [v6 persistentStores];
  sub_10003391C();
  unint64_t v8 = sub_100104D28();

  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

    if (v9) {
      goto LABEL_5;
    }
LABEL_8:
    NSString v12 = (void *)qword_10014D6E8;
    qword_10014D6E8 = 0;

    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1001055E8();

  swift_bridgeObjectRelease_n();
  if (!v11) {
    goto LABEL_8;
  }
LABEL_5:
  if (*((unsigned char *)v4 + OBJC_IVAR____TtC20JournalWidgetsSecure19CoreDataStackShared_persistentStoresLoadSuccess) != 1) {
    goto LABEL_8;
  }
  NSString v10 = (unsigned char *)qword_10014D6E8;
LABEL_16:
  uint64_t v21 = v10;

  return v10;
}

uint64_t sub_100033690(unsigned __int8 a1)
{
  int v1 = a1;
  sub_100007E0C(&qword_10014D808);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1001092A0;
  BOOL v3 = v1 == 2;
  *(unsigned char *)(result + 32) = v1 == 2;
  *(void *)(result + 40) = 0;
  uint64_t v4 = 94;
  uint64_t v5 = 68;
  uint64_t v6 = 22;
  uint64_t v7 = 4;
  *(unsigned char *)(result + 48) = v1 == 2;
  if (v1 != 2) {
    uint64_t v7 = 1;
  }
  *(void *)(result + 56) = v7;
  *(unsigned char *)(result + 64) = v3;
  if (v1 != 2)
  {
    uint64_t v6 = 9;
    uint64_t v5 = 41;
  }
  *(void *)(result + 72) = v6;
  if (v1 != 2) {
    uint64_t v4 = 85;
  }
  *(unsigned char *)(result + 80) = v3;
  *(void *)(result + 88) = v5;
  *(unsigned char *)(result + 96) = v3;
  *(void *)(result + 104) = v4;
  *(unsigned char *)(result + 112) = v3;
  *(void *)(result + 120) = 100;
  return result;
}

uint64_t sub_100033740(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000337A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100033808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100033870(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007E0C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000338D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003391C()
{
  unint64_t result = qword_10014CE30;
  if (!qword_10014CE30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10014CE30);
  }
  return result;
}

uint64_t sub_100033960()
{
  uint64_t v1 = sub_100104938();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100033A5C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100104938() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + v6 + 8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100017E10;
  return sub_100031FB0(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100033BAC()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014D840);
  sub_100007D30(v0, (uint64_t)qword_10014D840);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

id sub_100033CA8(void *a1, char a2, char a3, char a4, void *a5)
{
  if (!a1)
  {
LABEL_16:
    if ((a2 & 1) != 0
      && (id v30 = [self workStyleAttributes]) != 0)
    {
      id v20 = v30;
      if (qword_10014BF08 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_100103DB8();
      sub_100007D30(v31, (uint64_t)qword_10014D840);
      unint64_t v32 = sub_100103D98();
      os_log_type_t v33 = sub_100105018();
      if (!os_log_type_enabled(v32, v33)) {
        goto LABEL_30;
      }
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      uint64_t v35 = "[POIClustering] [RENDERING] Work";
    }
    else
    {
      if ((a3 & 1) != 0
        || (a4 & 1) == 0
        || (v36 = [objc_allocWithZone((Class)GEOPlace) initWithLatitude:4 longitude:0.0 placeType:0.0], id v20 = objc_msgSend(self, "styleAttributesForPlace:", v36), v36, !v20))
      {
        if (qword_10014BF08 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_100103DB8();
        sub_100007D30(v53, (uint64_t)qword_10014D840);
        id v54 = a1;
        uint64_t v55 = sub_100103D98();
        os_log_type_t v56 = sub_100105018();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = 7104878;
          uint64_t v58 = swift_slowAlloc();
          v72[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v58 = 136315394;
          if (a1 && (id v59 = [v54 name]) != 0)
          {
            uint64_t v60 = v59;
            uint64_t v61 = sub_100104B78();
            unint64_t v63 = v62;
          }
          else
          {
            unint64_t v63 = 0xE300000000000000;
            uint64_t v61 = 7104878;
          }
          uint64_t v73 = sub_1000456B4(v61, v63, v72);
          sub_1001052C8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v58 + 12) = 2080;
          if (a1 && (id v64 = [v54 pointOfInterestCategory]) != 0)
          {
            uint64_t v65 = v64;
            uint64_t v57 = sub_100104B78();
            unint64_t v67 = v66;
          }
          else
          {
            unint64_t v67 = 0xE300000000000000;
          }
          uint64_t v73 = sub_1000456B4(v57, v67, v72);
          sub_1001052C8();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v55, v56, "[POIClustering] [RENDERING] Fallback, mkMapItem.name=%s, mkMapItem.poiCategory=%s", (uint8_t *)v58, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        return 0;
      }
      if (qword_10014BF08 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_100103DB8();
      sub_100007D30(v37, (uint64_t)qword_10014D840);
      unint64_t v32 = sub_100103D98();
      os_log_type_t v33 = sub_100105018();
      if (!os_log_type_enabled(v32, v33)) {
        goto LABEL_30;
      }
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      uint64_t v35 = "[POIClustering] [RENDERING] City";
    }
    _os_log_impl((void *)&_mh_execute_header, v32, v33, v35, v34, 2u);
    swift_slowDealloc();
LABEL_30:

    goto LABEL_31;
  }
  id v10 = a1;
  id v11 = [v10 pointOfInterestCategory];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_100104B78();
    uint64_t v15 = v14;
    if (v13 == sub_100104B78() && v15 == v16)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    char v18 = sub_1001057F8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_15;
    }
  }
  id v19 = [v10 _styleAttributes];
  if (!v19)
  {
LABEL_15:

    goto LABEL_16;
  }
  id v20 = v19;
  if (qword_10014BF08 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100103DB8();
  sub_100007D30(v21, (uint64_t)qword_10014D840);
  id v22 = v10;
  uint64_t v23 = sub_100103D98();
  os_log_type_t v24 = sub_100105018();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218242;
    id v26 = [v22 name];
    if (v26)
    {
      uint64_t v27 = v26;
      sub_100104B78();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v29 = 0;
    }
    v72[1] = v29;
    sub_100007E0C(&qword_10014D858);
    sub_100105288();

    swift_bridgeObjectRelease();
    sub_1001052C8();

    *(_WORD *)(v25 + 12) = 2080;
    id v68 = [v22 pointOfInterestCategory];
    sub_100007E0C(&qword_10014D860);
    uint64_t v69 = sub_100105268();
    unint64_t v71 = v70;

    v72[0] = sub_1000456B4(v69, v71, &v73);
    sub_1001052C8();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[POIClustering] [RENDERING] POI mapItemName=%ld, mapItemPOICategory=%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
LABEL_31:
  [a5 displayScale];
  double v39 = v38;
  id v40 = [objc_allocWithZone((Class)VKIconModifiers) init];
  objc_msgSend(v40, "setNightMode:", objc_msgSend(a5, "userInterfaceStyle") == (id)2);
  id result = [self iconManager];
  if (!result)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v42 = result;
  float v43 = v39;
  id v44 = v20;
  NSString v45 = sub_100104B38();
  *(float *)&double v46 = v43;
  id v47 = [v42 imageForStyleAttributes:v44 withStylesheetName:v45 contentScale:7 sizeGroup:v40 modifiers:v46];

  if (!v47)
  {

    return v47;
  }
  id v48 = v47;
  id result = [v48 fillColor];
  if (!result) {
    goto LABEL_56;
  }
  id v49 = result;
  id v47 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v49];

  id v50 = v48;
  id result = [v50 image];
  if (result)
  {
    id v51 = result;
    [v50 contentScale];
    [objc_allocWithZone((Class)UIImage) initWithCGImage:v51 scale:0 orientation:v52];

    return v47;
  }
LABEL_57:
  __break(1u);
  return result;
}

void *_s9IconStyleVwCP(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void _s9IconStyleVwxx(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t _s9IconStyleVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t _s9IconStyleVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t _s9IconStyleVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IconStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s9IconStyleVMa()
{
  return &_s9IconStyleVN;
}

unint64_t sub_100034790(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000348C4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_10014D9B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_100036574();
  sub_100105968();
  LOBYTE(v14) = 0;
  sub_100105728();
  if (!v2)
  {
    uint64_t v9 = _s10PhotoAssetC9PhotoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_100103978();
    sub_10003652C(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v14) = 2;
    sub_100105728();
    LOBYTE(v14) = 3;
    sub_100105748();
    LOBYTE(v14) = 4;
    sub_100105748();
    id v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_10003652C(&qword_10014D9B8, type metadata accessor for CGSize);
    sub_100105768();
    LOBYTE(v14) = 6;
    sub_100105728();
    LOBYTE(v14) = 7;
    sub_100105728();
    LOBYTE(v14) = 8;
    sub_100105728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100034C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007E0C(&qword_10014D998);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10PhotoAssetC9PhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_100012154(a1, a1[3]);
  sub_100036574();
  id v44 = v9;
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  uint64_t *v11 = sub_100105678();
  v11[1] = v17;
  sub_100103978();
  LOBYTE(v46) = 1;
  sub_10003652C(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  char v18 = (int *)v45;
  sub_100012290(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_100105678();
  id v20 = (uint64_t *)((char *)v11 + v18[6]);
  *id v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_100105698();
  uint64_t v23 = (char *)v11 + v18[7];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_100105698();
  id v26 = (char *)v11 + v18[8];
  *(void *)id v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_10003652C(&qword_10014D9A8, type metadata accessor for CGSize);
  sub_1001056B8();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_100105678();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  *uint64_t v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_100105678();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  id v36 = v44;
  uint64_t v37 = sub_100105678();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  id v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *id v40 = v37;
  v40[1] = v39;
  sub_1000365C8((uint64_t)v11, v15);
  sub_1000121EC(v12);
  return sub_10003662C((uint64_t)v11);
}

unint64_t sub_10003524C()
{
  return sub_100034790(*v0);
}

uint64_t sub_100035254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100036894(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003527C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_100035288(uint64_t a1)
{
  unint64_t v2 = sub_100036574();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000352C4(uint64_t a1)
{
  unint64_t v2 = sub_100036574();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100035300@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100034C30(a1, a2);
}

uint64_t sub_100035318(void *a1)
{
  return sub_1000348C4(a1);
}

uint64_t sub_100035330(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100035368(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000353A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000353D8()
{
  uint64_t v1 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_10014D9C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10PhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_1000F5E40((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_100012510((uint64_t)v7, &qword_10014D9C0);
    return 0;
  }
  else
  {
    sub_1000365C8((uint64_t)v7, (uint64_t)v4);
    sub_100012510((uint64_t)v7, &qword_10014D9C0);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_10003662C((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_100035574()
{
  return swift_release();
}

id sub_100035584()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10PhotoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000355CC()
{
  return _s10PhotoAssetCMa(0);
}

uint64_t _s10PhotoAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014D890);
}

uint64_t sub_1000355F4()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100035638(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103978();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    char v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v23;
    id v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    char v27 = (char *)v4 + v24;
    char v28 = (char *)a2 + v24;
    *(_OWORD *)char v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = (uint64_t *)((char *)v4 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (uint64_t *)((char *)v4 + v30);
    uint64_t v35 = (uint64_t *)((char *)a2 + v30);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[12];
    uint64_t v38 = (uint64_t *)((char *)v4 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100035870(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100035974(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  id v26 = (char *)a2 + v22;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)((char *)a1 + v28);
  uint64_t v33 = (void *)((char *)a2 + v28);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100035B5C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  long long v29 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100035E00(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  v13[8] = v14[8];
  *(void *)int v13 = *(void *)v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = (char *)a1 + v16;
  uint64_t v20 = (char *)a2 + v16;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  uint64_t v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *sub_100035F9C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = (char *)a1 + v22;
  uint64_t v26 = (char *)a2 + v22;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  long long v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(_OWORD *)long long v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  uint64_t v31 = (void *)((char *)a1 + v28);
  uint64_t v32 = (void *)((char *)a2 + v28);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000361E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000361FC);
}

uint64_t sub_1000361FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000362BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000362D0);
}

uint64_t sub_1000362D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10PhotoAssetC9PhotoDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014D8F8);
}

void sub_10003639C()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100036450()
{
  return swift_retain();
}

uint64_t sub_100036460(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10PhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100036478()
{
  return sub_1000353D8();
}

uint64_t sub_10003649C()
{
  return sub_10003652C(&qword_10014D950, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_1000364E4()
{
  return sub_10003652C(&qword_10014D958, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_10003652C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100036574()
{
  unint64_t result = qword_10014D9A0;
  if (!qword_10014D9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D9A0);
  }
  return result;
}

uint64_t sub_1000365C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003662C(uint64_t a1)
{
  uint64_t v2 = _s10PhotoAssetC9PhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s10PhotoAssetC9PhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100036754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10PhotoAssetC9PhotoDataV10CodingKeysOMa()
{
  return &_s10PhotoAssetC9PhotoDataV10CodingKeysON;
}

unint64_t sub_100036790()
{
  unint64_t result = qword_10014D9C8;
  if (!qword_10014D9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D9C8);
  }
  return result;
}

unint64_t sub_1000367E8()
{
  unint64_t result = qword_10014D9D0;
  if (!qword_10014D9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D9D0);
  }
  return result;
}

unint64_t sub_100036840()
{
  unint64_t result = qword_10014D9D8;
  if (!qword_10014D9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D9D8);
  }
  return result;
}

uint64_t sub_100036894(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564497465737361 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7243657261757173 && a2 == 0xEE0074636552706FLL || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100111030 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100111050)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_100036C70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1001057F8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1001057F8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100036D38(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_didThumbnailFinishLoading) = a1;
  return sub_100036ECC();
}

void sub_100036D4C()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = sub_100104B38();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];
  [v0 setClipsToBounds:0];
  id v3 = [self defaultCenter];
  NSString v4 = sub_100104B38();
  [v3 addObserver:v0 selector:"handleAllowedVideosNotification:" name:v4 object:0];
}

uint64_t sub_100036ECC()
{
  uint64_t v0 = sub_1001047C8();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100104808();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000ABA8();
  uint64_t v8 = (void *)sub_1001050C8();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10003A234;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100062F14;
  aBlock[3] = &unk_10013A230;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  sub_1001047D8();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003A254();
  sub_100007E0C(&qword_10014DA28);
  sub_10003A2AC();
  sub_100105388();
  sub_1001050D8();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_10003714C()
{
  uint64_t v0 = sub_100007E0C(&qword_10014CD00);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC20JournalWidgetsSecure18VideoAssetGridView_durationLabel;
    id v6 = [*(id *)(Strong + OBJC_IVAR____TtC20JournalWidgetsSecure18VideoAssetGridView_durationLabel) superview];

    uint64_t v7 = *(void **)&v4[v5];
    if (v6)
    {
      [v4 bringSubviewToFront:v7];
    }
    else
    {
      uint64_t v8 = qword_10014C0E8;
      id v9 = v7;
      if (v8 != -1) {
        swift_once();
      }
      [v9 setFont:qword_1001631D8];

      uint64_t v10 = *(void **)&v4[v5];
      uint64_t v11 = self;
      id v12 = v10;
      id v13 = [v11 whiteColor];
      [v12 setTextColor:v13];

      int v14 = *(void **)&v4[v5];
      [v14 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
      [v14 setAdjustsFontForContentSizeCategory:1];
      [v14 setAdjustsFontSizeToFitWidth:1];
      [v4 addSubview:v14];
      uint64_t v15 = qword_10014C100;
      id v16 = v14;
      if (v15 != -1) {
        swift_once();
      }
      uint64_t v17 = &OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling19MotionActivityAsset_metadata;
      double v18 = *(double *)&qword_1001631F0;
      id v19 = [v16 superview];
      p_weak_ivar_lyt = &JurassicTheme.weak_ivar_lyt;
      if (v19)
      {
        uint64_t v21 = v19;
        [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v22 = [v16 trailingAnchor];
        id v23 = [v21 trailingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        [v24 setConstant:-v18];
        if (v24)
        {
          id v24 = v24;
          [v24 setActive:1];

          uint64_t v21 = v24;
        }

        uint64_t v17 = &OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling19MotionActivityAsset_metadata;
        p_weak_ivar_lyt = (void **)(&JurassicTheme + 56);
      }
      else
      {
        id v24 = 0;
      }

      double v25 = *((double *)v17 + 62);
      id v26 = *(id *)&v4[v5];
      id v27 = [v26 superview];
      if (v27)
      {
        uint64_t v28 = v27;
        [v26 setBackgroundColor:0];
        id v29 = [v26 leadingAnchor];
        id v30 = [v28 leadingAnchor];
        id v31 = [v29 constraintGreaterThanOrEqualToAnchor:v30];

        [v31 setConstant:v25];
        if (v31)
        {
          id v31 = v31;
          [v31 setActive:1];

          uint64_t v28 = v31;
        }
      }
      else
      {
        id v31 = 0;
      }

      double v32 = *((double *)v17 + 62);
      uint64_t v33 = qword_10014C110;
      id v34 = *(id *)&v4[v5];
      if (v33 != -1) {
        swift_once();
      }
      id v35 = sub_100050F08(0, 1, v32 - *(double *)&qword_100163200);
    }
    uint64_t v36 = sub_100104E58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v2, 1, 1, v36);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100104E38();
    swift_retain();
    uint64_t v38 = sub_100104E28();
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    v39[4] = v37;
    swift_release();
    sub_100039B4C((uint64_t)v2, (uint64_t)&unk_10014DA38, (uint64_t)v39);
    swift_release();
  }
}

uint64_t sub_10003769C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  uint64_t v5 = sub_1001047C8();
  v4[32] = v5;
  v4[33] = *(void *)(v5 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v6 = sub_100104808();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  sub_100007E0C((uint64_t *)&unk_100151990);
  v4[38] = swift_task_alloc();
  uint64_t v7 = sub_100103818();
  v4[39] = v7;
  v4[40] = *(void *)(v7 - 8);
  v4[41] = swift_task_alloc();
  sub_100104E38();
  v4[42] = sub_100104E28();
  uint64_t v9 = sub_100104DE8();
  v4[43] = v9;
  v4[44] = v8;
  return _swift_task_switch(sub_100037878, v9, v8);
}

uint64_t sub_100037878()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = *(void **)&Strong[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView];
    if (v3)
    {
      id v4 = v3;
      id v5 = [v4 layer];
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {

      }
      id v7 = [v6 player];
      id v8 = [v7 currentItem];

      if (v8)
      {
        v0[45] = [v8 asset];

        sub_100007E0C(&qword_10014DA40);
        uint64_t v9 = sub_100103BA8();
        v0[46] = v9;
        uint64_t v10 = (void *)swift_task_alloc();
        v0[47] = v10;
        *uint64_t v10 = v0;
        v10[1] = sub_100037C04;
        return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 20, v9);
      }
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11
    && (id v12 = (void *)v11,
        id v13 = *(void **)(v11 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_videoAsset),
        id v14 = v13,
        v12,
        v13))
  {
    uint64_t v15 = v0[39];
    uint64_t v16 = v0[40];
    uint64_t v17 = (char *)v0[38];
    sub_100038520(0, 1, v17);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) != 1)
    {
      (*(void (**)(void, void, void))(v0[40] + 32))(v0[41], v0[38], v0[39]);
      id v23 = (uint64_t (*)(uint64_t))((char *)&dword_100152178 + dword_100152178);
      double v18 = (void *)swift_task_alloc();
      v0[49] = v18;
      void *v18 = v0;
      v18[1] = sub_100037FC0;
      uint64_t v19 = v0[41];
      return v23(v19);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[40] + 56))(v0[38], 1, 1, v0[39]);
  }
  uint64_t v20 = v0[38];
  swift_release();
  sub_100012510(v20, (uint64_t *)&unk_100151990);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100037C04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_100038474;
  }
  else
  {

    swift_release();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_100037D28;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100037D28()
{
  uint64_t v12 = v0[37];
  uint64_t v1 = v0[34];
  uint64_t v15 = v0[36];
  uint64_t v16 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v14 = v0[33];
  swift_release();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[22];
  sub_10000ABA8();
  uint64_t v5 = v0[21];
  id v13 = (void *)sub_1001050C8();
  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v3;
  v8[4] = v5;
  v8[5] = v4;
  v0[12] = sub_10003A62C;
  v0[13] = v8;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100062F14;
  v0[11] = &unk_10013A2F8;
  uint64_t v9 = _Block_copy(v0 + 8);
  swift_retain();
  sub_1001047D8();
  v0[30] = _swiftEmptyArrayStorage;
  sub_10003A254();
  sub_100007E0C(&qword_10014DA28);
  sub_10003A2AC();
  sub_100105388();
  sub_1001050D8();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v16);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100037FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_1000383C4;
  }
  else
  {
    v8[50] = a2;
    v8[51] = a3;
    v8[52] = a1;
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_100038100;
  }
  return _swift_task_switch(v11, v9, v10);
}

uint64_t sub_100038100()
{
  uint64_t v1 = v0[50];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[51];
  uint64_t v18 = v0[39];
  uint64_t v19 = v0[41];
  uint64_t v13 = v0[37];
  uint64_t v15 = v0[36];
  uint64_t v2 = v0[34];
  uint64_t v16 = v0[35];
  uint64_t v17 = v0[40];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[33];
  swift_release();
  sub_10000ABA8();
  uint64_t v14 = (void *)sub_1001050C8();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v5;
  v7[3] = v11;
  v7[4] = v1;
  v7[5] = v12;
  v0[6] = sub_10003A4E4;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100062F14;
  v0[5] = &unk_10013A2A8;
  id v8 = _Block_copy(v0 + 2);
  swift_retain();
  sub_1001047D8();
  v0[29] = _swiftEmptyArrayStorage;
  sub_10003A254();
  sub_100007E0C(&qword_10014DA28);
  sub_10003A2AC();
  sub_100105388();
  sub_1001050D8();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1000383C4()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100038474()
{
  uint64_t v1 = *(void **)(v0 + 360);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100038520@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v160 = a2;
  uint64_t v159 = a1;
  v135 = a3;
  uint64_t v4 = sub_100007E0C(&qword_10014DA48);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v141 = (void (**)(char *, uint64_t, uint64_t))((char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v137 = (char *)&v119 - v7;
  uint64_t v148 = sub_100103CC8();
  uint64_t v139 = *(void *)(v148 - 8);
  uint64_t v8 = __chkstk_darwin(v148);
  v130 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v140 = (char *)&v119 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v136 = (char *)&v119 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v147 = (char *)&v119 - v15;
  __chkstk_darwin(v14);
  uint64_t v128 = (char *)&v119 - v16;
  uint64_t v157 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v17 = __chkstk_darwin(v157);
  v153 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v119 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v155 = (uint64_t)&v119 - v22;
  __chkstk_darwin(v21);
  uint64_t v156 = (uint64_t)&v119 - v23;
  uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151990);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v138 = (uint64_t)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  v151 = (char *)&v119 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v132 = (uint64_t)&v119 - v30;
  __chkstk_darwin(v29);
  v143 = (char *)&v119 - v31;
  uint64_t v163 = sub_100103818();
  uint64_t v142 = *(void *)(v163 - 8);
  uint64_t v32 = __chkstk_darwin(v163);
  uint64_t v129 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  v150 = (char *)&v119 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v127 = (char *)&v119 - v37;
  __chkstk_darwin(v36);
  v144 = (char *)&v119 - v38;
  uint64_t v165 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v39 = __chkstk_darwin(v165);
  v152 = (void (**)(char *, uint64_t))((char *)&v119 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (uint64_t)&v119 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v145 = (id *)((char *)&v119 - v45);
  __chkstk_darwin(v44);
  v164 = (uint64_t *)((char *)&v119 - v46);
  uint64_t v131 = v3;
  unint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachments);
  if (v47 >> 62) {
    goto LABEL_85;
  }
  uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_3:
  if (v48)
  {
    unint64_t v162 = v47 & 0xC000000000000001;
    objc_super v146 = (void (*)(char *, uint64_t))(v142 + 56);
    v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
    v149 = (void (**)(char *, uint64_t, uint64_t))(v142 + 32);
    uint64_t v133 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
    id v122 = (void (**)(char *, uint64_t, uint64_t))(v139 + 32);
    uint64_t v120 = (void (**)(char *, char *, uint64_t))(v139 + 16);
    uint64_t v134 = (void (**)(char *, uint64_t))(v142 + 8);
    uint64_t v49 = 4;
    unint64_t v161 = v47;
    v121 = (void (**)(char *, uint64_t))(v139 + 8);
    while (1)
    {
      uint64_t v51 = v49 - 4;
      if (v162)
      {
        uint64_t v52 = sub_1001054D8();
        uint64_t v53 = v49 - 3;
        if (__OFADD__(v51, 1)) {
          goto LABEL_83;
        }
      }
      else
      {
        uint64_t v52 = *(void *)(v47 + 8 * v49);
        swift_retain();
        uint64_t v53 = v49 - 3;
        if (__OFADD__(v51, 1))
        {
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          swift_bridgeObjectRetain_n();
          uint64_t v48 = sub_1001055E8();
          goto LABEL_3;
        }
      }
      uint64_t v54 = v52 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType;
      sub_10003A5C4(v52 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, v43, type metadata accessor for AssetAttachment.AssetType);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          id v50 = *(void **)v43;
          swift_release();

          goto LABEL_6;
        case 2u:
          if (v160)
          {
            os_log_type_t v56 = (void *)v43;
            goto LABEL_79;
          }
          uint64_t v55 = *(void *)(v52 + 16);
          os_log_type_t v56 = (void *)v43;
          goto LABEL_16;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v57 = v54;
          uint64_t v58 = (id *)v152;
          sub_10003A5C4(v57, (uint64_t)v152, type metadata accessor for AssetAttachment.AssetType);
          uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v60 = (uint64_t)v58;
          uint64_t v61 = (uint64_t)v153;
          switch(EnumCaseMultiPayload)
          {
            case 1:

              uint64_t v62 = (uint64_t)v151;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v146)(v151, 1, 1, v163);
              break;
            case 4:
              swift_bridgeObjectRelease();
              uint64_t v60 = (uint64_t)v58 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
              goto LABEL_21;
            default:
LABEL_21:
              unint64_t v63 = v158;
              sub_10003A560(v60, (uint64_t)v158);
              sub_10003A5C4((uint64_t)v63, v61, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v62 = (uint64_t)v151;
                (*v149)(v151, v61, v163);
                uint64_t v64 = 0;
              }
              else
              {
                type metadata accessor for Journaling();
                uint64_t v65 = v138;
                sub_100058118(v138);
                swift_bridgeObjectRelease();
                if ((*v154)(v65, 1, v163) == 1)
                {
                  sub_100012510(v65, (uint64_t *)&unk_100151990);
                  uint64_t v64 = 1;
                  uint64_t v62 = (uint64_t)v151;
                }
                else
                {
                  unint64_t v66 = *v149;
                  uint64_t v67 = v163;
                  id v68 = v129;
                  (*v149)(v129, v65, v163);
                  uint64_t v69 = v151;
                  v66(v151, (uint64_t)v68, v67);
                  uint64_t v62 = (uint64_t)v69;
                  uint64_t v64 = 0;
                }
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v146)(v62, v64, 1, v163);
              sub_10003A504((uint64_t)v158);
              break;
          }
          os_log_type_t v56 = (void *)(v43 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48));
          if ((*v154)(v62, 1, v163) == 1)
          {
            sub_100012510(v62, (uint64_t *)&unk_100151990);
            goto LABEL_32;
          }
          (*v149)(v150, v62, v163);
          sub_100103738();
          uint64_t v71 = v70;
          swift_bridgeObjectRetain();
          uint64_t v72 = v147;
          sub_100103C78();
          uint64_t v73 = (uint64_t)v141;
          sub_100103C68();
          uint64_t v74 = v148;
          if ((*v133)(v73, 1, v148) == 1)
          {
            sub_100012510(v73, &qword_10014DA48);
            swift_bridgeObjectRelease();
            uint64_t v75 = v134;
LABEL_31:
            (*v75)(v150, v163);
LABEL_32:
            sub_10003A504((uint64_t)v56);
            goto LABEL_33;
          }
          v124 = v56;
          uint64_t v126 = v71;
          uint64_t v76 = v140;
          (*v122)(v140, v73, v74);
          sub_100103CA8();
          int v123 = sub_100103CB8();
          v125 = *v121;
          v125(v72, v74);
          uint64_t v77 = v130;
          (*v120)(v130, v76, v74);
          if (v123)
          {
            uint64_t v78 = v125;
            v125(v140, v74);
            v78(v77, v74);
            swift_bridgeObjectRelease();
            uint64_t v75 = v134;
            os_log_type_t v56 = v124;
          }
          else
          {
            sub_100103C98();
            int v123 = sub_100103CB8();
            uint64_t v79 = v72;
            uint64_t v80 = v125;
            v125(v79, v74);
            v80(v140, v74);
            v80(v77, v74);
            swift_bridgeObjectRelease();
            uint64_t v75 = v134;
            os_log_type_t v56 = v124;
            if ((v123 & 1) == 0) {
              goto LABEL_31;
            }
          }
          uint64_t v81 = *v75;
          if (v160)
          {
            v81(v150, v163);
            goto LABEL_79;
          }
          uint64_t v55 = *(void *)(v52 + 16);
          v81(v150, v163);
LABEL_16:
          sub_10003A504((uint64_t)v56);
          if (v55 == v159)
          {
LABEL_80:
            v117 = v135;
            swift_bridgeObjectRelease_n();
            sub_1000CF538(v117);
            return swift_release();
          }
LABEL_33:
          swift_release();
          unint64_t v47 = v161;
LABEL_6:
          ++v49;
          if (v53 == v48) {
            goto LABEL_39;
          }
          break;
        default:
          sub_10003A504(v43);
          swift_release();
          goto LABEL_6;
      }
    }
  }
LABEL_39:
  swift_bridgeObjectRelease_n();
  unint64_t v47 = *(void *)(v131 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_sourceAttachments);
  if (v47 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v82 = sub_1001055E8();
    if (v82) {
      goto LABEL_41;
    }
  }
  else
  {
    uint64_t v82 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v82)
    {
LABEL_41:
      unint64_t v162 = v47 & 0xC000000000000001;
      v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
      v153 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56);
      v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 32);
      v151 = (char *)(v139 + 48);
      unint64_t v141 = (void (**)(char *, uint64_t, uint64_t))(v139 + 32);
      uint64_t v83 = (void (**)(void, void))(v139 + 8);
      v140 = (char *)(v139 + 16);
      v152 = (void (**)(char *, uint64_t))(v142 + 8);
      uint64_t v43 = 4;
      unint64_t v161 = v47;
      v150 = (char *)v82;
      while (1)
      {
        uint64_t v85 = v83;
        uint64_t v86 = v43 - 4;
        if (v162)
        {
          uint64_t v87 = sub_1001054D8();
          uint64_t v88 = v43 - 3;
          if (__OFADD__(v86, 1)) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v87 = *(void *)(v47 + 8 * v43);
          swift_retain();
          uint64_t v88 = v43 - 3;
          if (__OFADD__(v86, 1)) {
            goto LABEL_84;
          }
        }
        uint64_t v89 = v87 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType;
        sub_10003A5C4(v87 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, (uint64_t)v164, type metadata accessor for AssetAttachment.AssetType);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v84 = (void *)*v164;
            swift_release();

            goto LABEL_43;
          case 2u:
            if (v160)
            {
              os_log_type_t v56 = v164;
              goto LABEL_79;
            }
            uint64_t v90 = *(void *)(v87 + 16);
            os_log_type_t v56 = v164;
            goto LABEL_54;
          case 4u:
            swift_bridgeObjectRelease();
            uint64_t v91 = v89;
            v92 = v145;
            sub_10003A5C4(v91, (uint64_t)v145, type metadata accessor for AssetAttachment.AssetType);
            uint64_t v93 = swift_getEnumCaseMultiPayload();
            uint64_t v94 = (uint64_t)v92;
            switch(v93)
            {
              case 1:

                uint64_t v95 = (uint64_t)v143;
                (*v153)(v143, 1, 1, v163);
                goto LABEL_66;
              case 4:
                swift_bridgeObjectRelease();
                uint64_t v94 = (uint64_t)v92 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
                goto LABEL_59;
              default:
LABEL_59:
                uint64_t v96 = v156;
                sub_10003A560(v94, v156);
                sub_10003A5C4(v96, v155, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v95 = (uint64_t)v143;
                  (*v154)((uint64_t)v143, v155, v163);
                }
                else
                {
                  type metadata accessor for Journaling();
                  uint64_t v97 = v132;
                  sub_100058118(v132);
                  swift_bridgeObjectRelease();
                  if ((*v158)(v97, 1, v163) == 1)
                  {
                    sub_100012510(v97, (uint64_t *)&unk_100151990);
                    uint64_t v98 = 1;
                    uint64_t v95 = (uint64_t)v143;
                    goto LABEL_65;
                  }
                  v99 = *v154;
                  int v100 = v127;
                  uint64_t v101 = v97;
                  uint64_t v102 = v163;
                  (*v154)((uint64_t)v127, v101, v163);
                  uint64_t v103 = v143;
                  v99((uint64_t)v143, (uint64_t)v100, v102);
                  uint64_t v95 = (uint64_t)v103;
                }
                uint64_t v98 = 0;
LABEL_65:
                (*v153)((char *)v95, v98, 1, v163);
                sub_10003A504(v156);
LABEL_66:
                uint64_t v104 = sub_100007E0C(&qword_10014DA50);
                os_log_type_t v56 = (void *)((char *)v164 + *(int *)(v104 + 48));
                if ((*v158)(v95, 1, v163) == 1)
                {
                  sub_100012510(v95, (uint64_t *)&unk_100151990);
                  uint64_t v83 = v85;
                  goto LABEL_76;
                }
                (*v154)((uint64_t)v144, v95, v163);
                sub_100103738();
                int v106 = v105;
                swift_bridgeObjectRetain();
                int v107 = v147;
                sub_100103C78();
                uint64_t v108 = v148;
                uint64_t v109 = (uint64_t)v137;
                sub_100103C68();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v151)(v109, 1, v108) == 1)
                {
                  sub_100012510(v109, &qword_10014DA48);
                  swift_bridgeObjectRelease();
                  uint64_t v82 = (uint64_t)v150;
                  uint64_t v83 = v85;
LABEL_75:
                  (*v152)(v144, v163);
LABEL_76:
                  sub_10003A504((uint64_t)v56);
                  swift_release();
                  unint64_t v47 = v161;
                  goto LABEL_44;
                }
                v149 = v106;
                v110 = v128;
                (*v141)(v128, v109, v108);
                sub_100103CA8();
                char v111 = sub_100103CB8();
                objc_super v146 = (void (*)(char *, uint64_t))*v85;
                v146(v107, v108);
                (*(void (**)(char *, char *, uint64_t))v140)(v136, v110, v108);
                if (v111)
                {
                  int v112 = v146;
                  v146(v110, v108);
                  v112(v136, v108);
                  swift_bridgeObjectRelease();
                  uint64_t v82 = (uint64_t)v150;
                }
                else
                {
                  sub_100103C98();
                  int v113 = v136;
                  LODWORD(v139) = sub_100103CB8();
                  uint64_t v114 = v107;
                  v115 = v146;
                  v146(v114, v108);
                  v115(v110, v108);
                  v115(v113, v108);
                  swift_bridgeObjectRelease();
                  uint64_t v82 = (uint64_t)v150;
                  uint64_t v83 = v85;
                  if ((v139 & 1) == 0) {
                    goto LABEL_75;
                  }
                }
                uint64_t v116 = *v152;
                if (v160)
                {
                  v116(v144, v163);
LABEL_79:
                  sub_10003A504((uint64_t)v56);
                  goto LABEL_80;
                }
                uint64_t v90 = *(void *)(v87 + 16);
                v116(v144, v163);
LABEL_54:
                sub_10003A504((uint64_t)v56);
                if (v90 == v159) {
                  goto LABEL_80;
                }
                swift_release();
                unint64_t v47 = v161;
LABEL_43:
                uint64_t v83 = v85;
LABEL_44:
                ++v43;
                if (v88 == v82) {
                  goto LABEL_87;
                }
                break;
            }
            break;
          default:
            sub_10003A504((uint64_t)v164);
            swift_release();
            goto LABEL_43;
        }
      }
    }
  }
LABEL_87:
  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v135, 1, 1, v163);
}

void sub_10003993C(uint64_t a1, CMTimeValue a2, uint64_t a3, CMTimeEpoch a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v8 = (void *)Strong;
  id v9 = *(id *)(Strong + OBJC_IVAR____TtC20JournalWidgetsSecure18VideoAssetGridView_durationLabel);

  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double Seconds = CMTimeGetSeconds(&v22);
  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double v11 = CMTimeGetSeconds(&v22);
  id v12 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v13 = v12;
  if (v11 < 60.0)
  {
    [v12 setAllowedUnits:192];
    uint64_t v14 = &selRef_setZeroFormattingBehavior_;
    uint64_t v15 = 0x10000;
LABEL_6:
    [v13 *v14 v15];
    goto LABEL_7;
  }
  if (v11 > 3600.0)
  {
    uint64_t v14 = &selRef_setAllowedUnits_;
    uint64_t v15 = 224;
    goto LABEL_6;
  }
LABEL_7:
  id v16 = [v13 stringFromTimeInterval:v11];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_100104B78();
    unint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    sub_10003A3FC(1uLL, v18, v20);
    swift_bridgeObjectRelease();
    sub_100104BA8();
    swift_bridgeObjectRelease();
  }
  NSString v21 = sub_100104B38();
  swift_bridgeObjectRelease();
  [v9 setText:v21];
}

uint64_t sub_100039B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100104E58();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_100104E48();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100012510(a1, &qword_10014CD00);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100104DE8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_100039CD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100103488();
  if (v2)
  {
    uint64_t v3 = v2;
    sub_100105448();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10000B574((uint64_t)v15), (v5 & 1) != 0))
    {
      sub_1000105E4(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001043C((uint64_t)v15);
    if (*((void *)&v17 + 1))
    {
      sub_100007E0C(&qword_10014DA20);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_videoAsset);
        if (v6)
        {
          id v7 = v6;
          uint64_t v8 = sub_100103988();
          char v10 = sub_100036C70(v8, v9, (void *)0xD000000000000019);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0
            || (*(unsigned char *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_isLoaded) & 1) == 0)
          {
          }
          else
          {
            double v11 = (void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction);
            uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction);
            void *v11 = 0;
            v11[1] = 0;
            sub_10003A1EC(v12);
            sub_10003EA1C();
            sub_10003E858();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction);
          uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction);
          *uint64_t v13 = 0;
          v13[1] = 0;
          sub_10003A1EC(v14);
          sub_10003EA1C();
          sub_10003E858();
        }
      }
    }
    else
    {
      sub_100012510((uint64_t)&v16, &qword_10014D818);
    }
  }
}

void sub_10003A0F8()
{
}

id sub_10003A108()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoAssetGridView();
  return [super dealloc];
}

uint64_t sub_10003A150()
{
  return type metadata accessor for VideoAssetGridView();
}

uint64_t type metadata accessor for VideoAssetGridView()
{
  uint64_t result = qword_10014DA10;
  if (!qword_10014DA10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003A1A4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10003A1EC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10003A1FC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10003A234()
{
}

uint64_t sub_10003A23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003A24C()
{
  return swift_release();
}

unint64_t sub_10003A254()
{
  unint64_t result = qword_1001519A0;
  if (!qword_1001519A0)
  {
    sub_1001047C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001519A0);
  }
  return result;
}

unint64_t sub_10003A2AC()
{
  unint64_t result = qword_1001519B0;
  if (!qword_1001519B0)
  {
    sub_100007F30(&qword_10014DA28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001519B0);
  }
  return result;
}

uint64_t sub_10003A308()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10003A348(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100017A64;
  return sub_10003769C(a1, v4, v5, v6);
}

unint64_t sub_10003A3FC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_100104BD8();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_100104C68();
}

uint64_t sub_10003A4AC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10003A4E4()
{
  sub_10003993C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10003A504(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003A560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003A5C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003A644(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v7 = sub_100007E0C(&qword_10014DAE8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10003B064();
  sub_100105968();
  LOBYTE(v14) = 0;
  sub_100105758();
  if (!v5)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    char v16 = 1;
    sub_10003B10C();
    sub_100105768();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10003A7D4()
{
  if (*v0) {
    return 0x74706D6F7270;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_10003A804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003ADC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003A82C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10003A838(uint64_t a1)
{
  unint64_t v2 = sub_10003B064();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003A874(uint64_t a1)
{
  unint64_t v2 = sub_10003B064();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003A8B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10003AE9C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_10003A8E8(void *a1)
{
  return sub_10003A644(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10003A914()
{
  return swift_release();
}

id sub_10003A924()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15ReflectionAssetCMa();
  return [super dealloc];
}

uint64_t sub_10003A96C()
{
  return _s15ReflectionAssetCMa();
}

uint64_t _s15ReflectionAssetCMa()
{
  uint64_t result = qword_10014DA80;
  if (!qword_10014DA80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003A9C0()
{
  return swift_updateClassMetadata2();
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwxx(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 24);
  if (v1 >> 60 != 15) {
    return sub_100010378(*(void *)(result + 16), v1);
  }
  return result;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = (uint64_t *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v5 = *v3;
    sub_10001030C(*v3, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_10001030C(*v5, a2[3]);
      uint64_t v9 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v6;
      sub_100010378(v9, v10);
      return a1;
    }
    sub_10003AB4C(a1 + 16);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *unint64_t v4 = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_10001030C(*v5, a2[3]);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_10003AB4C(uint64_t a1)
{
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_100010378(v8, v6);
      return a1;
    }
    sub_10003AB4C(a1 + 16);
  }
  *unint64_t v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 24) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataVMa()
{
  return &_s15ReflectionAssetC14ReflectionDataVN;
}

unint64_t sub_10003ACEC()
{
  unint64_t result = qword_10014DA90;
  if (!qword_10014DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DA90);
  }
  return result;
}

unint64_t sub_10003AD44()
{
  unint64_t result = qword_10014DA98;
  if (!qword_10014DA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DA98);
  }
  return result;
}

uint64_t sub_10003AD98()
{
  return swift_retain();
}

uint64_t sub_10003ADA8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling15ReflectionAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10003ADC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10003AE9C(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_10014DAD8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_100012154(a1, v7);
  sub_10003B064();
  sub_100105958();
  if (!v1)
  {
    unsigned char v9[16] = 0;
    uint64_t v7 = sub_1001056A8();
    v9[15] = 1;
    sub_10003B0B8();
    sub_1001056B8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1000121EC((uint64_t)a1);
  return v7;
}

unint64_t sub_10003B064()
{
  unint64_t result = qword_10014DAE0;
  if (!qword_10014DAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DAE0);
  }
  return result;
}

unint64_t sub_10003B0B8()
{
  unint64_t result = qword_10014DEE0;
  if (!qword_10014DEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DEE0);
  }
  return result;
}

unint64_t sub_10003B10C()
{
  unint64_t result = qword_10014DAF0;
  if (!qword_10014DAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DAF0);
  }
  return result;
}

unsigned char *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003B22CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOMa()
{
  return &_s15ReflectionAssetC14ReflectionDataV10CodingKeysON;
}

unint64_t sub_10003B268()
{
  unint64_t result = qword_10014DAF8;
  if (!qword_10014DAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DAF8);
  }
  return result;
}

unint64_t sub_10003B2C0()
{
  unint64_t result = qword_10014DB00;
  if (!qword_10014DB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DB00);
  }
  return result;
}

unint64_t sub_10003B318()
{
  unint64_t result = qword_10014DB08;
  if (!qword_10014DB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DB08);
  }
  return result;
}

uint64_t _s13MOMapLocationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s13MOMapLocationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  int v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13MOMapLocationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13MOMapLocationVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13MOMapLocationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13MOMapLocationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13MOMapLocationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13MOMapLocationVMa()
{
  return &_s13MOMapLocationVN;
}

id sub_10003B680()
{
  uint64_t v1 = (void *)v0[2];
  id v2 = v1;
  if (v1 == (void *)1)
  {
    uint64_t v3 = *v0;
    unint64_t v4 = v0[1];
    sub_10001030C(*v0, v4);
    Class isa = sub_100103838().super.isa;
    id v2 = [self metadataWithDataRepresentation:isa];
    sub_100010378(v3, v4);

    v0[2] = (uint64_t)v2;
    id v6 = v2;
  }
  sub_10003D8C4(v1);
  return v2;
}

uint64_t sub_10003B728(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_10014DC48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_10003D6D0();
  sub_100105968();
  long long v11 = *v3;
  v10[15] = 0;
  sub_10003B10C();
  sub_1001057A8();
  if (!v2)
  {
    _s9LinkAssetC8LinkDataVMa(0);
    LOBYTE(v11) = 1;
    sub_100103978();
    sub_10003D688(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v11) = 2;
    sub_100103818();
    sub_10003D688(&qword_10014DC50, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_100105768();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10003B974(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007E0C(&qword_10014DC30);
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s9LinkAssetC8LinkDataVMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v15 + 2) = 1;
  uint64_t v16 = a1[3];
  uint64_t v24 = a1;
  sub_100012154(a1, v16);
  sub_10003D6D0();
  sub_100105958();
  if (v2)
  {
    sub_1000121EC((uint64_t)v24);
    sub_10003D724((id)1);
  }
  else
  {
    uint64_t v17 = v22;
    unint64_t v20 = v6;
    char v26 = 0;
    sub_10003B0B8();
    sub_1001056F8();
    *(_OWORD *)uint64_t v15 = v25;
    sub_100103978();
    LOBYTE(v25) = 1;
    sub_10003D688(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001056B8();
    sub_100033870((uint64_t)v9, (uint64_t)&v15[*(int *)(v13 + 24)], (uint64_t *)&unk_100151950);
    sub_100103818();
    LOBYTE(v25) = 2;
    sub_10003D688(&qword_10014DC40, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v18 = (uint64_t)v20;
    sub_1001056B8();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v23);
    sub_100033870(v18, (uint64_t)&v15[*(int *)(v13 + 28)], (uint64_t *)&unk_100151990);
    sub_10003D734((uint64_t)v15, v21);
    sub_1000121EC((uint64_t)v24);
    sub_10003D798((uint64_t)v15);
  }
}

uint64_t sub_10003BDA8()
{
  uint64_t v1 = 1702125924;
  if (*v0 != 1) {
    uint64_t v1 = 7107189;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_10003BDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003DAE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003BE14(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10003BE20(uint64_t a1)
{
  unint64_t v2 = sub_10003D6D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003BE5C(uint64_t a1)
{
  unint64_t v2 = sub_10003D6D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10003BE98(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10003BEB0(void *a1)
{
  return sub_10003B728(a1);
}

uint64_t sub_10003BEC8()
{
  uint64_t v1 = sub_100007E0C(&qword_10014DC58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007E0C(&qword_10014DC60);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling9LinkAsset_metadata);
  if (!v11) {
    return 0;
  }
  swift_retain();
  sub_1000F62D8((uint64_t)v10);
  uint64_t v12 = _s9LinkAssetC8LinkDataVMa(0);
  uint64_t v13 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
  {
    sub_10003D7F4((uint64_t)v10, (uint64_t)v8);
    sub_100033870((uint64_t)v8, (uint64_t)v3, &qword_10014DC60);
    (*v13)(v3, 0, 1, v4);
    uint64_t v14 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_10003D85C((uint64_t)v3, v14);
    swift_endAccess();
    swift_release();
    sub_100012510((uint64_t)v10, &qword_10014DC60);
  }
  else
  {
    id v16 = sub_10003B680();
    sub_100033870((uint64_t)v10, (uint64_t)v3, &qword_10014DC60);
    (*v13)(v3, 0, 1, v4);
    uint64_t v17 = v11 + *(void *)(*(void *)v11 + 104);
    swift_beginAccess();
    sub_10003D85C((uint64_t)v3, v17);
    swift_endAccess();
    swift_release();
    if (v16)
    {
      id v18 = [v16 title];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v15 = sub_100104B78();

        return v15;
      }
    }
  }
  return 0;
}

uint64_t sub_10003C1CC()
{
  return swift_release();
}

id sub_10003C1DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9LinkAssetCMa(0);
  [super dealloc];
}

uint64_t sub_10003C224()
{
  return _s9LinkAssetCMa(0);
}

uint64_t _s9LinkAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014DB38);
}

uint64_t sub_10003C24C()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_10003C298(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_10001030C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = (void *)a2[2];
    if (v9 != (void *)1) {
      id v10 = v9;
    }
    a1[2] = (uint64_t)v9;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_100103978();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = (char *)a1 + v18;
    unint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100103818();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151990);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_10003C518(uint64_t *a1, uint64_t a2)
{
  sub_100010378(*a1, a1[1]);
  uint64_t v4 = (void *)a1[2];
  if (v4 != (void *)1) {

  }
  int v5 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  unint64_t v8 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_100103818();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t *sub_10003C6B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_10001030C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  unint64_t v8 = (void *)a2[2];
  if (v8 != (void *)1) {
    id v9 = v8;
  }
  a1[2] = (uint64_t)v8;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100103978();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100103818();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t *sub_10003C8E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_10001030C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100010378(v8, v9);
  uint64_t v10 = a1 + 2;
  uint64_t v11 = (void *)a1[2];
  uint64_t v12 = (void *)a2[2];
  if (v11 == (void *)1)
  {
    if (v12 != (void *)1)
    {
      *uint64_t v10 = v12;
      id v13 = v12;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v12 == (void *)1)
  {
    sub_100012510((uint64_t)(a1 + 2), &qword_10014DB48);
    uint64_t v12 = (void *)a2[2];
LABEL_6:
    *uint64_t v10 = v12;
    goto LABEL_8;
  }
  *uint64_t v10 = v12;
  id v14 = v12;

LABEL_8:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100103978();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_13:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_14:
  uint64_t v24 = *(int *)(a3 + 28);
  long long v25 = (char *)a1 + v24;
  char v26 = (char *)a2 + v24;
  uint64_t v27 = sub_100103818();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_19;
  }
  if (v31)
  {
LABEL_19:
    uint64_t v32 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t sub_10003CC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 28);
  id v13 = (void *)(a1 + v12);
  id v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100103818();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t *sub_10003CE50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100010378(v6, v7);
  uint64_t v9 = a1 + 2;
  uint64_t v8 = (void *)a1[2];
  uint64_t v10 = *(void *)(a2 + 16);
  if (v8 == (void *)1) {
    goto LABEL_4;
  }
  if (v10 == 1)
  {
    sub_100012510((uint64_t)(a1 + 2), &qword_10014DB48);
    uint64_t v10 = 1;
LABEL_4:
    *uint64_t v9 = v10;
    goto LABEL_6;
  }
  *uint64_t v9 = v10;

LABEL_6:
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  id v13 = (char *)(a2 + v11);
  uint64_t v14 = sub_100103978();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_11:
    uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_12:
  uint64_t v20 = *(int *)(a3 + 28);
  int v21 = (char *)a1 + v20;
  int v22 = (char *)(a2 + v20);
  uint64_t v23 = sub_100103818();
  uint64_t v24 = *(void *)(v23 - 8);
  long long v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_17;
  }
  if (v27)
  {
LABEL_17:
    uint64_t v28 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_10003D188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003D19C);
}

uint64_t sub_10003D19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151990);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10003D2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003D2EC);
}

uint64_t sub_10003D2EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 16) = (a2 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151990);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s9LinkAssetC8LinkDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014DBA8);
}

void sub_10003D444()
{
  sub_10003D558(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_10003D558(319, (unint64_t *)&qword_10014CE18, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10003D558(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100105278();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10003D5AC()
{
  return swift_retain();
}

uint64_t sub_10003D5BC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling9LinkAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10003D5D4()
{
  return sub_10003BEC8();
}

uint64_t sub_10003D5F8()
{
  return sub_10003D688(&qword_10014DBE8, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa);
}

uint64_t sub_10003D640()
{
  return sub_10003D688(&qword_10014DBF0, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa);
}

uint64_t sub_10003D688(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003D6D0()
{
  unint64_t result = qword_10014DC38;
  if (!qword_10014DC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DC38);
  }
  return result;
}

void sub_10003D724(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_10003D734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9LinkAssetC8LinkDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003D798(uint64_t a1)
{
  uint64_t v2 = _s9LinkAssetC8LinkDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003D7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014DC60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003D85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014DC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_10003D8C4(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

unsigned char *_s9LinkAssetC8LinkDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003D9A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9LinkAssetC8LinkDataV10CodingKeysOMa()
{
  return &_s9LinkAssetC8LinkDataV10CodingKeysON;
}

unint64_t sub_10003D9DC()
{
  unint64_t result = qword_10014DC68;
  if (!qword_10014DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DC68);
  }
  return result;
}

unint64_t sub_10003DA34()
{
  unint64_t result = qword_10014DC70;
  if (!qword_10014DC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DC70);
  }
  return result;
}

unint64_t sub_10003DA8C()
{
  unint64_t result = qword_10014DC78;
  if (!qword_10014DC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DC78);
  }
  return result;
}

uint64_t sub_10003DAE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AssetContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003DCD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetContentType()
{
  return &type metadata for AssetContentType;
}

unint64_t sub_10003DD10()
{
  unint64_t result = qword_10014DC80;
  if (!qword_10014DC80)
  {
    sub_100007F30(&qword_10014DC88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DC80);
  }
  return result;
}

Swift::Int sub_10003DD6C()
{
  return sub_100105928();
}

Swift::Int sub_10003DE78()
{
  return sub_100105928();
}

Swift::Int sub_10003DF78()
{
  return sub_100105928();
}

uint64_t sub_10003E020()
{
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E164()
{
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E250()
{
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10003E2E0()
{
  return sub_100105928();
}

Swift::Int sub_10003E384()
{
  return sub_100105928();
}

Swift::Int sub_10003E48C()
{
  return sub_100105928();
}

uint64_t sub_10003E588(unsigned __int8 *a1, char *a2)
{
  return sub_1000541B8(*a1, *a2);
}

Swift::Int sub_10003E594()
{
  return sub_10003DE78();
}

uint64_t sub_10003E59C()
{
  return sub_10003E164();
}

Swift::Int sub_10003E5A4()
{
  return sub_10003E48C();
}

uint64_t sub_10003E5AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10003E70C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10003E5DC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x636973756DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x74736163646F70;
      goto LABEL_3;
    case 2:
      *a1 = 0x656C6369747261;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1802465122;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 30324;
      a1[1] = 0xE200000000000000;
      break;
    case 5:
      *a1 = 0xD000000000000010;
      a1[1] = 0x8000000100110300;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_10003E6A4(void *a1@<X8>)
{
  *a1 = &off_100138928;
}

unint64_t sub_10003E6B8()
{
  unint64_t result = qword_10014DC90;
  if (!qword_10014DC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DC90);
  }
  return result;
}

uint64_t sub_10003E70C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001384D8;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

id sub_10003E758()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = sub_100104B38();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];

  return [v0 setClipsToBounds:0];
}

void sub_10003E858()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction);
  *uint64_t v1 = 0;
  v1[1] = 0;
  sub_10003A1EC(v2);
  uint64_t v3 = OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView;
  unint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    unint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    [v8 pause];

    uint64_t v9 = *(void **)(v0 + v3);
    if (v9)
    {
      id v10 = v9;
      id v11 = [v10 layer];
      self;
      uint64_t v12 = (void *)swift_dynamicCastObjCClass();
      if (!v12) {

      }
      id v13 = [v12 player];
      if (v13)
      {
        [v13 replaceCurrentItemWithPlayerItem:0];
      }
      uint64_t v14 = *(void **)(v0 + v3);
      if (v14)
      {
        id v15 = v14;
        id v16 = [v15 layer];
        self;
        int v17 = (void *)swift_dynamicCastObjCClass();
        if (!v17) {

        }
        [v17 setPlayer:0];
      }
    }
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_isLoaded) = 0;
}

uint64_t sub_10003EA1C()
{
  uint64_t v1 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001039D8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  id v13 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v12);
  int v17 = (char *)&v32 - v16;
  int v18 = *(void **)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_videoAsset);
  if (v18 && !*(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailOverride))
  {
    uint64_t v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v15;
    uint64_t v41 = result;
    id v38 = v18;
    uint64_t v42 = v17;
    sub_100103968();
    uint64_t v37 = OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_sizeType;
    switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_sizeType))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v19 = sub_1001057F8();
        swift_bridgeObjectRelease();
        if (v19)
        {
LABEL_9:
          if (qword_10014C038 != -1) {
            swift_once();
          }
          uint64_t v20 = &qword_1001630C8;
        }
        else
        {
          if (qword_10014C030 != -1) {
            swift_once();
          }
          uint64_t v20 = &qword_1001630C0;
        }
        id v36 = (id)*v20;
        sub_1001039C8();
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v34(v3, v9, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
        uint64_t v35 = v9;
        uint64_t v21 = v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_latestImageRequestID;
        swift_beginAccess();
        sub_10004103C((uint64_t)v3, v21, &qword_10014DD70);
        swift_endAccess();
        LODWORD(v37) = *(unsigned __int8 *)(v0 + v37);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        int v22 = v39;
        v34(v39, v9, v4);
        uint64_t v24 = v40;
        uint64_t v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v13, v42, v41);
        unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        unint64_t v26 = (v6 + *(unsigned __int8 *)(v24 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v33;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v25, v22, v4);
        (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v26, v13, v23);
        uint64_t v28 = self;
        swift_retain();
        id v29 = [v28 currentTraitCollection];
        int v30 = v36;
        int v31 = v38;
        sub_10009ECE4(v37, 0, 1, v36, v29, (uint64_t)sub_100041230, v27);

        swift_release();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v23);
        uint64_t result = swift_release();
        break;
    }
  }
  return result;
}

uint64_t sub_10003EFBC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerStatusObserver) = 0;

  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerTimeControlStatusObserver);
  *(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerTimeControlStatusObserver) = 0;

  uint64_t v3 = v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_timeObserver;
  swift_beginAccess();
  sub_100010808(v3, (uint64_t)&v10, &qword_10014D818);
  if (!*((void *)&v11 + 1)) {
    return sub_100012510((uint64_t)&v10, &qword_10014D818);
  }
  sub_1000103D0(&v10, &v12);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 layer];
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (!v7) {

    }
    id v8 = [v7 player];
    if (v8)
    {
      sub_100012154(&v12, v13);
      [v8 removeTimeObserver:sub_1001057E8()];

      swift_unknownObjectRelease();
    }
  }
  long long v10 = 0u;
  long long v11 = 0u;
  swift_beginAccess();
  sub_10004103C((uint64_t)&v10, v3, &qword_10014D818);
  swift_endAccess();
  return sub_1000121EC((uint64_t)&v12);
}

uint64_t sub_10003F164(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_didThumbnailFinishLoading) = result;
  return result;
}

void *sub_10003F174(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = &v4[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_timeObserver];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(void *)&v4[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v10 = OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  long long v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView] = 0;
  uint64_t v13 = &v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_isLoaded] = 0;
  v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_videoAsset] = 0;
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailOverride] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_latestImageRequestID];
  uint64_t v15 = sub_1001039D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v16 = [super initWithFrame:a1, a2, a3, a4];
  int v17 = *(void (**)(void))((swift_isaMask & *v16) + 0x298);
  int v18 = v16;
  v17();

  return v18;
}

void *sub_10003F388(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_timeObserver];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerStatusObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerTimeControlStatusObserver] = 0;
  uint64_t v4 = OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView;
  id v5 = objc_allocWithZone((Class)UIImageView);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView____lazy_storage___player] = 0;
  *(void *)&v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView] = 0;
  uint64_t v7 = &v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_isLoaded] = 0;
  v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_didThumbnailFinishLoading] = 0;
  *(void *)&v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_videoAsset] = 0;
  *(void *)&v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailOverride] = 0;
  id v8 = &v6[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_latestImageRequestID];
  uint64_t v9 = sub_1001039D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  uint64_t v10 = [super initWithCoder:a1];
  id v11 = v10;
  if (v10)
  {
    long long v12 = *(void (**)(void))((swift_isaMask & *v10) + 0x298);
    uint64_t v13 = v10;
    v12();
  }
  return v11;
}

uint64_t sub_10003F580()
{
  sub_1000132D4(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_delegate);
  sub_100012510(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_timeObserver, &qword_10014D818);

  sub_10003A1EC(*(void *)(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_finishPlayingAction));
  return sub_100012510(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_latestImageRequestID, &qword_10014DD70);
}

id sub_10003F658()
{
  sub_10003E858();
  sub_10003EFBC();
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView];
  *(void *)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView] = 0;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VideoAssetView();
  return [super dealloc];
}

uint64_t sub_10003F86C()
{
  return type metadata accessor for VideoAssetView();
}

uint64_t type metadata accessor for VideoAssetView()
{
  uint64_t result = qword_10014DD28;
  if (!qword_10014DD28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003F8C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = sub_1001047C8();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100104808();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100103978();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001039D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008234(0, (unint64_t *)&qword_10014C710);
  uint64_t v32 = sub_1001050C8();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  char v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  aBlock[4] = sub_100041468;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100062F14;
  aBlock[3] = &unk_10013A6C8;
  objc_super v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  int v22 = v34;
  sub_1001047D8();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_100041558((unint64_t *)&qword_1001519A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007E0C(&qword_10014DA28);
  sub_10003A2AC();
  uint64_t v24 = v35;
  uint64_t v23 = v36;
  sub_100105388();
  unint64_t v25 = (void *)v32;
  sub_1001050D8();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_10003FD94(uint64_t a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v68 = a4;
  uint64_t v72 = a3;
  uint64_t v5 = sub_100103978();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v63 - v8;
  uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v66 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)&v63 - v12;
  uint64_t v13 = sub_1001039D8();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v67 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007E0C(&qword_10014DD78);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007E0C(&qword_10014DD70);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  int v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v25 = (char *)&v63 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v63 - v26;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      uint64_t v29 = a2;
      uint64_t v30 = Strong;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v72, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
      uint64_t v72 = v30;
      uint64_t v31 = (uint64_t)&v30[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_latestImageRequestID];
      swift_beginAccess();
      sub_100010808(v31, (uint64_t)v25, &qword_10014DD70);
      uint64_t v32 = (uint64_t)&v18[*(int *)(v16 + 48)];
      sub_100010808((uint64_t)v27, (uint64_t)v18, &qword_10014DD70);
      sub_100010808((uint64_t)v25, v32, &qword_10014DD70);
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      if (v33((uint64_t)v18, 1, v13) == 1)
      {
        uint64_t v34 = a2;
        id v35 = a2;
        sub_100012510((uint64_t)v25, &qword_10014DD70);
        sub_100012510((uint64_t)v27, &qword_10014DD70);
        if (v33(v32, 1, v13) == 1)
        {
          sub_100012510((uint64_t)v18, &qword_10014DD70);
          goto LABEL_18;
        }
      }
      else
      {
        sub_100010808((uint64_t)v18, (uint64_t)v22, &qword_10014DD70);
        if (v33(v32, 1, v13) != 1)
        {
          uint64_t v45 = v67;
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v67, v32, v13);
          sub_100041558((unint64_t *)&qword_10014DD88, (void (*)(uint64_t))&type metadata accessor for UUID);
          id v46 = v29;
          char v47 = sub_100104A98();
          uint64_t v48 = *(void (**)(char *, uint64_t))(v14 + 8);
          v48(v45, v13);
          sub_100012510((uint64_t)v25, &qword_10014DD70);
          sub_100012510((uint64_t)v27, &qword_10014DD70);
          v48(v22, v13);
          uint64_t v34 = v29;
          sub_100012510((uint64_t)v18, &qword_10014DD70);
          if (v47)
          {
LABEL_18:
            uint64_t v49 = v72;
            [*(id *)&v72[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView] setImage:v34];
            char v50 = 1;
            (*(void (**)(uint64_t))((swift_isaMask & *(void *)v49) + 0x258))(1);
            swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v52 = v70;
            uint64_t v51 = (uint64_t)v71;
            uint64_t v53 = v69;
            switch(v49[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_sizeType])
            {
              case 5:
                break;
              default:
                char v50 = sub_1001057F8();
                break;
            }
            swift_retain_n();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v51, v68, v52);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
            if ((v50 & 1) == 0)
            {
              uint64_t v54 = v66;
              sub_100010808(v51, v66, (uint64_t *)&unk_100151950);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v54, 1, v52) == 1)
              {
                sub_100012510(v54, (uint64_t *)&unk_100151950);
LABEL_27:
                sub_100104738();
                sub_100008234(0, &qword_10014DD80);
                sub_1001051C8();
                swift_release();
                goto LABEL_28;
              }
              uint64_t v55 = v64;
              (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v64, v54, v52);
              os_log_type_t v56 = v65;
              sub_100103948();
              sub_1001038A8();
              double v58 = v57;
              id v59 = *(void (**)(char *, uint64_t))(v53 + 8);
              v59(v56, v52);
              v59(v55, v52);
              if (v58 >= 0.1) {
                goto LABEL_27;
              }
            }
            swift_beginAccess();
            uint64_t v60 = swift_unknownObjectWeakLoadStrong();
            if (v60)
            {
              uint64_t v61 = (void *)v60;
              id v62 = *(id *)(v60 + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView);

              [v62 setAlpha:1.0];
              swift_release_n();

LABEL_29:
              sub_100012510(v51, (uint64_t *)&unk_100151950);
              swift_release();
              return;
            }
LABEL_28:
            swift_release();
            swift_release();

            goto LABEL_29;
          }
LABEL_19:

          return;
        }
        id v44 = a2;
        sub_100012510((uint64_t)v25, &qword_10014DD70);
        sub_100012510((uint64_t)v27, &qword_10014DD70);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
        uint64_t v34 = a2;
      }
      sub_100012510((uint64_t)v18, &qword_10014DD78);
      goto LABEL_19;
    }
  }
  swift_beginAccess();
  uint64_t v36 = swift_unknownObjectWeakLoadStrong();
  if (v36)
  {
    uint64_t v37 = (void *)v36;
    int v38 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v36 + OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v38 == 1
      || (uint64_t v39 = v36 + OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_loadingDelegate,
          !swift_unknownObjectWeakLoadStrong()))
    {
    }
    else
    {
      uint64_t v40 = *(void *)(v39 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v40 + 8))(v37, ObjectType, v40);

      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v42)
  {
    uint64_t v43 = v42;
    (*(void (**)(void))((swift_isaMask & *v42) + 0x258))(0);
  }
}

void sub_1000407D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView);

    [v2 setAlpha:1.0];
  }
}

void sub_100040994(SEL *a1, double a2, double a3, double a4, double a5)
{
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for VideoAssetView();
  [super a1:a2 a3:a4 a5:a5];
  id v11 = *(id *)&v5[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_fallbackView];
  [v5 bounds];
  [v11 setFrame:];

  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView];
  [v5 bounds];
  [v12 setFrame:];
  uint64_t v13 = *(void **)&v5[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView];
  if (v13)
  {
    id v14 = v13;
    [v5 bounds];
    [v14 setFrame:];
  }
}

void sub_100040AA0()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for VideoAssetView();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure16JournalAssetView_fallbackView];
  [v0 bounds];
  [v1 setFrame:];

  id v2 = *(void **)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_thumbnailView];
  [v0 bounds];
  [v2 setFrame:];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC20JournalWidgetsSecure14VideoAssetView_playerView];
  if (v3)
  {
    id v4 = v3;
    [v0 bounds];
    [v4 setFrame:];
  }
}

void sub_100040C6C()
{
  sub_100040D48();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100040D48()
{
  if (!qword_10014DD38)
  {
    sub_1001039D8();
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10014DD38);
    }
  }
}

id sub_100040E28(void *a1, uint64_t a2, uint64_t (*a3)(void), SEL *a4)
{
  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return [super a4];
}

void sub_100040E7C(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for VideoPlayerView();
  uint64_t v12 = *a7;
  id v13 = v14.receiver;
  [super v12:a2, a3, a4, a5];
  [v13 layoutSubviews];
}

id sub_100040FD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoPlayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for VideoPlayerView()
{
  return self;
}

uint64_t sub_10004102C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004103C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007E0C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000410A0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000410D8()
{
  uint64_t v1 = sub_1001039D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100041230(void *a1)
{
  uint64_t v3 = *(void *)(sub_1001039D8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_100103978() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10003F8C0(a1, v7, v1 + v4, v8);
}

uint64_t sub_100041308()
{
  uint64_t v1 = sub_1001039D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_100041468()
{
  uint64_t v1 = *(void *)(sub_1001039D8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100103978() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_10003FD94(v5, v6, (char *)(v0 + v2), v7);
}

uint64_t sub_100041538(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100041548()
{
  return swift_release();
}

void sub_100041550()
{
}

uint64_t sub_100041558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1000415A0(char a1)
{
  uint64_t v2 = self;
  id v3 = [v2 mainScreen];
  [v3 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v29.origin.x = v5;
  v29.origin.y = v7;
  v29.size.width = v9;
  v29.size.height = v11;
  double Width = CGRectGetWidth(v29);
  if (qword_10014C0F0 != -1) {
    swift_once();
  }
  double v13 = Width - (*(double *)&qword_1001631E0 + *(double *)&qword_1001631E0);
  if (qword_10014C118 != -1) {
    swift_once();
  }
  double v14 = *(double *)&qword_100163208;
  double v15 = v13 - *(double *)&qword_100163208;
  double v28 = v15 * 0.5;
  double v16 = *(double *)&qword_100163208 * 0.5;
  id v17 = [v2 mainScreen];
  [v17 bounds];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;

  v30.origin.x = v19;
  v30.origin.y = v21;
  v30.size.width = v23;
  v30.size.height = v25;
  double v26 = CGRectGetWidth(v30);
  if (qword_10014C0F8 != -1) {
    swift_once();
  }
  switch(a1)
  {
    case 2:
      double v15 = v28 - v14;
      break;
    case 3:
      double v15 = v28 - v14;
      break;
    case 4:
      double v15 = v15 * 0.25 - v16;
      break;
    case 5:
      double v15 = v26 - (*(double *)&qword_1001631E8 + *(double *)&qword_1001631E8);
      break;
    default:
      return v15;
  }
  return v15;
}

uint64_t sub_1000417F0()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >> 60 == 15) {
    return 0;
  }
  uint64_t v2 = *(void *)v0;
  sub_10001030C(*(void *)v0, *(void *)(v0 + 8));
  unint64_t v3 = sub_100041A2C();
  if (!v3)
  {
    sub_100010364(v2, v1);
    return 0;
  }
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_5;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    double v8 = _swiftEmptyArrayStorage;
    sub_100010364(v2, v1);
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1001055E8();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_5:
  if (v5 >= 1)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        sub_1001054D8();
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_100104D08();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_100104D68();
          }
          sub_100104D98();
          sub_100104D48();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      unint64_t v9 = v4 + 32;
      do
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRetain();
          sub_100104D08();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_100104D68();
          }
          sub_100104D98();
          sub_100104D48();
        }
        v9 += 8;
        --v5;
      }
      while (v5);
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_100041A2C()
{
  sub_100008234(0, &qword_10014DF08);
  sub_100008234(0, (unint64_t *)&unk_10014DF10);
  sub_100008234(0, &qword_10014C7D0);
  unint64_t v0 = sub_100105078();
  unint64_t v1 = v0;
  if (v0)
  {
    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_100007E0C(&qword_10014DF28);
      uint64_t v3 = sub_1001055D8();
      swift_bridgeObjectRelease_n();
      return v3;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_100105808();
      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

unint64_t sub_100041D5C(char a1)
{
  unint64_t result = 0x7461446574756F72;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t result = 0x6D69547472617473;
      break;
    case 4:
      unint64_t result = 0x656D6954646E65;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
    case 7:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 8:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100041E78(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C((uint64_t *)&unk_10014DEF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_100043D78();
  sub_100105968();
  long long v10 = *v3;
  char v11 = 0;
  sub_10003B10C();
  sub_100105768();
  if (!v2)
  {
    LOBYTE(v10) = 1;
    sub_100105728();
    LOBYTE(v10) = 2;
    sub_100105748();
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    LOBYTE(v10) = 3;
    sub_100103978();
    sub_100043D08(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v10) = 4;
    sub_100105768();
    LOBYTE(v10) = 5;
    sub_100105748();
    LOBYTE(v10) = 6;
    sub_100105748();
    LOBYTE(v10) = 7;
    sub_100105728();
    LOBYTE(v10) = 8;
    sub_100105728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000421A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v40 - v8;
  uint64_t v43 = sub_100007E0C(&qword_10014DED0);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  __chkstk_darwin(v44);
  double v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v45 = a1;
  sub_100012154(a1, v14);
  sub_100043D78();
  double v15 = v11;
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)v45);
  }
  uint64_t v16 = (uint64_t)v9;
  uint64_t v17 = (uint64_t)v7;
  uint64_t v18 = v41;
  uint64_t v19 = v42;
  char v47 = 0;
  sub_10003B0B8();
  uint64_t v20 = v43;
  CGFloat v21 = v15;
  sub_1001056B8();
  *(_OWORD *)double v13 = v46;
  LOBYTE(v46) = 1;
  *((void *)v13 + 2) = sub_100105678();
  *((void *)v13 + 3) = v22;
  LOBYTE(v46) = 2;
  *((void *)v13 + 4) = sub_100105698();
  v13[40] = v23 & 1;
  uint64_t v24 = sub_100103978();
  LOBYTE(v46) = 3;
  sub_100043D08(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v40 = v24;
  sub_1001056B8();
  sub_100033870(v16, (uint64_t)&v13[*(int *)(v44 + 28)], (uint64_t *)&unk_100151950);
  LOBYTE(v46) = 4;
  sub_1001056B8();
  CGFloat v25 = (int *)v44;
  sub_100033870(v17, (uint64_t)&v13[*(int *)(v44 + 32)], (uint64_t *)&unk_100151950);
  LOBYTE(v46) = 5;
  uint64_t v26 = sub_100105698();
  uint64_t v27 = &v13[v25[9]];
  *(void *)uint64_t v27 = v26;
  v27[8] = v28 & 1;
  LOBYTE(v46) = 6;
  uint64_t v29 = sub_100105698();
  CGRect v30 = &v13[v25[10]];
  *(void *)CGRect v30 = v29;
  v30[8] = v31 & 1;
  LOBYTE(v46) = 7;
  uint64_t v32 = sub_100105678();
  uint64_t v33 = (uint64_t *)&v13[v25[11]];
  *uint64_t v33 = v32;
  v33[1] = v34;
  LOBYTE(v46) = 8;
  uint64_t v35 = sub_100105678();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v20);
  int v38 = (uint64_t *)&v13[v25[12]];
  *int v38 = v35;
  v38[1] = v37;
  sub_100043DCC((uint64_t)v13, v19);
  sub_1000121EC((uint64_t)v45);
  return sub_100043E30((uint64_t)v13);
}

unint64_t sub_100042748()
{
  return sub_100041D5C(*v0);
}

uint64_t sub_100042750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100044098(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100042778(uint64_t a1)
{
  unint64_t v2 = sub_100043D78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000427B4(uint64_t a1)
{
  unint64_t v2 = sub_100043D78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000427F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000421A8(a1, a2);
}

uint64_t sub_100042808(void *a1)
{
  return sub_100041E78(a1);
}

id sub_100042820(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v24 = a4;
  int v11 = a3 & 1;
  uint64_t v12 = sub_100007E0C(&qword_10014DF30);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone((Class)type metadata accessor for WorkoutRouteThumbnailCacheOperation());
  id v16 = v6;
  swift_bridgeObjectRetain();
  id v17 = a6;
  id v18 = v15;
  sub_1000853B0((uint64_t)v14);
  sub_100033870((uint64_t)v14, (uint64_t)v18 + qword_100162FD0, &qword_10014DF30);

  uint64_t v19 = (void *)sub_1001050F8();
  uint64_t v20 = v16;
  id v21 = sub_1000A4EC0(v20, a1, a2, v11, v24, a5, v19);

  return v21;
}

uint64_t sub_100042980(uint64_t a1, char a2)
{
  return sub_10001F2EC(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id, a1, 2, 0, 0, 1, a2);
}

uint64_t sub_1000429AC()
{
  return swift_release();
}

id sub_1000429BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s17WorkoutRouteAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100042A04()
{
  return _s17WorkoutRouteAssetCMa(0);
}

uint64_t _s17WorkoutRouteAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014DDB8);
}

uint64_t sub_100042A2C()
{
  return swift_updateClassMetadata2();
}

_OWORD *sub_100042A70(_OWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_10001030C(*(void *)a2, *(void *)(a2 + 8));
      *(void *)uint64_t v4 = v9;
      *((void *)v4 + 1) = v7;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    *((void *)v4 + 2) = *(void *)(a2 + 16);
    *((void *)v4 + 3) = v10;
    *((void *)v4 + 4) = *(void *)(a2 + 32);
    *((unsigned char *)v4 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = sub_100103978();
    uint64_t v15 = *(void *)(v14 - 8);
    id v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (const void *)(a2 + v18);
    if (v16((const void *)(a2 + v18), 1, v14))
    {
      uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = (char *)v4 + v23;
    uint64_t v27 = a2 + v23;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = *(unsigned char *)(v27 + 8);
    uint64_t v28 = a3[11];
    uint64_t v29 = a3[12];
    CGRect v30 = (void *)((char *)v4 + v28);
    char v31 = (void *)(a2 + v28);
    uint64_t v32 = v31[1];
    *CGRect v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (void *)((char *)v4 + v29);
    uint64_t v34 = (void *)(a2 + v29);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100042D34(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_100010378(*a1, v4);
  }
  swift_bridgeObjectRelease();
  int v5 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (char *)a1 + *(int *)(a2 + 32);
  if (!v8(v9, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100042E78(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_10001030C(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  if (v14((char *)a2 + v16, 1, v12))
  {
    uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = (uint64_t)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = (uint64_t)a2 + v21;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (uint64_t *)((char *)a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  char v31 = (void *)(a1 + v27);
  uint64_t v32 = (uint64_t *)((char *)a2 + v27);
  uint64_t v33 = v32[1];
  *char v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000430EC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_10001030C(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_10003AB4C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)a2;
  sub_10001030C(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v6;
  sub_100010378(v9, v10);
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_100103978();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_13:
    uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_14:
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v17((void *)(a1 + v21), 1, v15);
  int v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v22, v23, v15);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_19;
  }
  if (v25)
  {
LABEL_19:
    uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_20:
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004349C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  return a1;
}

uint64_t sub_1000436BC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_10003AB4C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_100010378(v8, v6);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_100103978();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_11:
    uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_12:
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  int v22 = v15((void *)(a1 + v19), 1, v13);
  int v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v20, v21, v13);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v20, v13);
    goto LABEL_17;
  }
  if (v23)
  {
LABEL_17:
    uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v20, v21, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
LABEL_18:
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100043A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100043A1C);
}

uint64_t sub_100043A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100043ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100043AF0);
}

uint64_t sub_100043AF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014DE28);
}

void sub_100043BBC()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100043C78()
{
  return sub_100043D08(&qword_10014DE88, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
}

uint64_t sub_100043CC0()
{
  return sub_100043D08(&qword_10014DE90, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
}

uint64_t sub_100043D08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100043D50()
{
  return swift_retain();
}

uint64_t sub_100043D60(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling17WorkoutRouteAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_100043D78()
{
  unint64_t result = qword_10014DED8;
  if (!qword_10014DED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DED8);
  }
  return result;
}

uint64_t sub_100043DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100043E30(uint64_t a1)
{
  uint64_t v2 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100043F58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOMa()
{
  return &_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysON;
}

unint64_t sub_100043F94()
{
  unint64_t result = qword_10014DF38;
  if (!qword_10014DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DF38);
  }
  return result;
}

unint64_t sub_100043FEC()
{
  unint64_t result = qword_10014DF40;
  if (!qword_10014DF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DF40);
  }
  return result;
}

unint64_t sub_100044044()
{
  unint64_t result = qword_10014DF48;
  if (!qword_10014DF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DF48);
  }
  return result;
}

uint64_t sub_100044098(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446574756F72 && a2 == 0xE900000000000061;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100111430 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_100044454()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014DF50);
  sub_100007D30(v0, (uint64_t)qword_10014DF50);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

id AssetMetadataDownloadOperation.__allocating_init(recordId:database:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[qword_10014DF68] = a1;
  *(void *)&v7[qword_10014DF70] = a2;
  *(void *)&v7[qword_10014DF78] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return [super init];
}

id AssetMetadataDownloadOperation.init(recordId:database:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[qword_10014DF68] = a1;
  *(void *)&v3[qword_10014DF70] = a2;
  *(void *)&v3[qword_10014DF78] = a3;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for AssetMetadataDownloadOperation();
  return [super init];
}

uint64_t type metadata accessor for AssetMetadataDownloadOperation()
{
  uint64_t result = qword_10014DFC8;
  if (!qword_10014DFC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssetMetadataDownloadOperation.main@Sendable ()()
{
  v1[4] = v0;
  sub_100007E0C((uint64_t *)&unk_100151990);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_100103818();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_100044770, 0, 0);
}

uint64_t sub_100044770()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_10014DF78);
  uint64_t v3 = swift_task_alloc();
  v0[10] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  unint64_t v5 = sub_100045298();
  *uint64_t v4 = v0;
  v4[1] = sub_100044878;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10014DF90, v3, v5);
}

uint64_t sub_100044878()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100044E84;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100044994;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100044994()
{
  uint64_t v32 = v0;
  id v1 = (id)v0[2];
  if (!sub_1001051D8()) {
    goto LABEL_10;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_10:
    if (qword_10014BF10 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100103DB8();
    sub_100007D30(v19, (uint64_t)qword_10014DF50);
    id v1 = v1;
    uint64_t v20 = sub_100103D98();
    os_log_type_t v21 = sub_100105008();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)int v22 = 136315138;
      id v23 = [v1 debugDescription];
      uint64_t v24 = sub_100104B78();
      unint64_t v26 = v25;

      v0[3] = sub_1000456B4(v24, v26, &v31);
      sub_1001052C8();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "error getting DataConfig.JournalEntryAssetFileAttachment.file :%s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_20:

LABEL_23:
      uint64_t v11 = 0;
      uint64_t v13 = 0;
      id v1 = 0;
      goto LABEL_24;
    }

LABEL_22:
    goto LABEL_23;
  }
  id v3 = [v2 fileURL];
  if (!v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[7] + 56))(v0[5], 1, 1, v0[6]);
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  sub_1001037A8();

  objc_super v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v9(v8, v5, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
LABEL_16:
    sub_100019F70(v0[5]);
    if (qword_10014BF10 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100103DB8();
    sub_100007D30(v27, (uint64_t)qword_10014DF50);
    uint64_t v20 = sub_100103D98();
    os_log_type_t v28 = sub_100105008();
    if (os_log_type_enabled(v20, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v28, "ckAsset.fileURL is nil", v29, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    swift_unknownObjectRelease();
    goto LABEL_22;
  }
  uint64_t v10 = v0[12];
  v9(v0[9], v0[5], v0[6]);
  uint64_t v11 = sub_100103828();
  uint64_t v13 = v12;
  uint64_t v14 = v0[9];
  uint64_t v15 = v0[6];
  uint64_t v16 = v0[7];
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);

    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  swift_unknownObjectRelease();
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, id))v0[1];
  return v30(v11, v13, v1);
}

uint64_t sub_100044E84()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100044F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_100044F30, 0, 0);
}

uint64_t sub_100044F30()
{
  id v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_10014DF68);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10004503C;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10005E414;
  v0[13] = &unk_10013A790;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10004503C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_10004516C;
  }
  else {
    uint64_t v2 = sub_10004514C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004514C()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004516C()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000451D8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017A64;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_100044F30, 0, 0);
}

unint64_t sub_100045298()
{
  unint64_t result = qword_10014DF98;
  if (!qword_10014DF98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10014DF98);
  }
  return result;
}

id AssetMetadataDownloadOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void AssetMetadataDownloadOperation.init()()
{
}

void sub_10004533C()
{
}

void sub_10004536C()
{
  id v1 = *(void **)(v0 + qword_10014DF78);
}

id AssetMetadataDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetMetadataDownloadOperation();
  return [super dealloc];
}

void sub_1000453F4(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_10014DF78);
}

uint64_t sub_100045450(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1000454E0;
  return AssetMetadataDownloadOperation.main@Sendable ()();
}

uint64_t sub_1000454E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    uint64_t v10 = *(void **)(v8 + 16);
    *uint64_t v10 = a1;
    v10[1] = a2;
    v10[2] = a3;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
  return v11();
}

unsigned char **sub_100045604(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t sub_100045614(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10004563C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1000456B4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1001052C8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1000456B4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000457DC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000105E4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000105E4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000121EC((uint64_t)v12);
  return v7;
}

uint64_t sub_100045788()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000457D4()
{
  return type metadata accessor for AssetMetadataDownloadOperation();
}

uint64_t sub_1000457DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1001052D8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100045998(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_100105528();
  if (!v8)
  {
    sub_1001055B8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_100105628();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100045998(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100045A30(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100045BA8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100045BA8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100045A30(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000769F0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1001054A8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1001055B8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_100104BF8();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_100105628();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1001055B8();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100045BA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007E0C(&qword_10014E0C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t *sub_100045CFC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100103978();
    uint64_t v8 = *(void *)(v7 - 8);
    int64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    int v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100045FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103978();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v7, 1, v4);
  if (!result)
  {
    int64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v4);
  }
  return result;
}

char *sub_100046128(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_100046398(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_100046724(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_100046994(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_19:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_100046D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100046D34);
}

uint64_t sub_100046D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100046DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046DB8);
}

uint64_t sub_100046DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StreakSummary()
{
  uint64_t result = qword_10014E120;
  if (!qword_10014E120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100046E78()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100046F14(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_10014E170);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_1000485F4();
  sub_100105968();
  char v12 = 0;
  sub_100103978();
  sub_100048B20(&qword_10014DF00);
  sub_100105768();
  if (!v1)
  {
    type metadata accessor for StreakSummary();
    char v11 = 1;
    sub_100105768();
    char v10 = 2;
    sub_100105768();
    char v9 = 3;
    sub_100105798();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100047128@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v30 - v7;
  __chkstk_darwin(v6);
  uint64_t v39 = (uint64_t)&v30 - v8;
  uint64_t v40 = sub_100007E0C(&qword_10014E160);
  uint64_t v35 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StreakSummary();
  char v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100103978();
  int v16 = *(void (**)(void))(*(void *)(v15 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1, v15);
  uint64_t v34 = &v14[v12[7]];
  v16();
  uint64_t v17 = (uint64_t)&v14[v12[8]];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16)(v17, 1, 1, v15);
  uint64_t v18 = v12[9];
  *(void *)&v14[v18] = 0;
  sub_100012154(a1, a1[3]);
  sub_1000485F4();
  uint64_t v38 = v10;
  uint64_t v19 = v41;
  sub_100105958();
  uint64_t v20 = (uint64_t)a1;
  if (!v19)
  {
    uint64_t v31 = v17;
    uint64_t v32 = v18;
    uint64_t v41 = a1;
    uint64_t v22 = (uint64_t)v36;
    uint64_t v21 = (uint64_t)v37;
    uint64_t v23 = v35;
    char v45 = 0;
    uint64_t v24 = sub_100048B20(&qword_10014CA00);
    unint64_t v25 = v38;
    sub_1001056B8();
    sub_1000486A4(v39, (uint64_t)v14);
    char v44 = 1;
    uint64_t v39 = v24;
    sub_1001056B8();
    sub_1000486A4(v22, (uint64_t)v34);
    char v43 = 2;
    sub_1001056B8();
    sub_1000486A4(v21, v31);
    char v42 = 3;
    uint64_t v27 = v40;
    uint64_t v28 = sub_1001056E8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v27);
    uint64_t v29 = v33;
    uint64_t v20 = (uint64_t)v41;
    *(void *)&v14[v32] = v28;
    sub_10004870C((uint64_t)v14, v29);
  }
  sub_1000121EC(v20);
  return sub_100048648((uint64_t)v14);
}

uint64_t sub_10004754C()
{
  uint64_t result = 0x7473726966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1953718636;
      break;
    case 2:
      uint64_t result = 0x6E4F676E69646E65;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000475D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10004897C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000475F8(uint64_t a1)
{
  unint64_t v2 = sub_1000485F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100047634(uint64_t a1)
{
  unint64_t v2 = sub_1000485F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100047670@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100047128(a1, a2);
}

uint64_t sub_100047688(void *a1)
{
  return sub_100046F14(a1);
}

uint64_t sub_1000476A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v66 = sub_100007E0C(&qword_10014E190);
  uint64_t v4 = __chkstk_darwin(v66);
  uint64_t v63 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v62 = (char *)&v52 - v6;
  uint64_t v65 = sub_100007E0C(&qword_10014E198);
  uint64_t v7 = __chkstk_darwin(v65);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v52 - v11;
  __chkstk_darwin(v10);
  uint64_t v64 = (uint64_t)&v52 - v12;
  uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  int v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = sub_100103978();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v60 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v67 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v52 - v25;
  sub_100010808(v2, (uint64_t)v18, (uint64_t *)&unk_100151950);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v27(v18, 1, v19) == 1)
  {
    uint64_t v28 = (uint64_t)v18;
LABEL_5:
    sub_100012510(v28, (uint64_t *)&unk_100151950);
    char v31 = 0;
    return v31 & 1;
  }
  double v58 = v9;
  uint64_t v59 = a1;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v29(v26, v18, v19);
  uint64_t v30 = type metadata accessor for StreakSummary();
  sub_100010808(v2 + *(int *)(v30 + 24), (uint64_t)v16, (uint64_t *)&unk_100151950);
  if (v27(v16, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    uint64_t v28 = (uint64_t)v16;
    goto LABEL_5;
  }
  uint64_t v32 = v67;
  v29(v67, v16, v19);
  uint64_t v33 = sub_100048B20((unint64_t *)&qword_10014CE98);
  uint64_t result = sub_100104A48();
  if (result)
  {
    uint64_t v35 = v26;
    uint64_t v36 = *(int *)(v66 + 48);
    uint64_t v37 = v66;
    uint64_t v54 = v29;
    uint64_t v38 = v62;
    uint64_t v39 = &v62[v36];
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v55 = v40;
    double v57 = v35;
    ((void (*)(char *))v40)(v62);
    uint64_t v56 = v33;
    uint64_t v41 = v39;
    uint64_t v53 = v39;
    v40(v39, (uint64_t)v32, v19);
    char v42 = v63;
    char v43 = &v63[*(int *)(v37 + 48)];
    v40(v63, (uint64_t)v38, v19);
    v40(v43, (uint64_t)v41, v19);
    uint64_t v44 = (uint64_t)v61;
    char v45 = v54;
    v54(v61, v42, v19);
    long long v46 = *(void (**)(char *, uint64_t))(v20 + 8);
    v46(v43, v19);
    char v47 = &v42[*(int *)(v66 + 48)];
    v45(v42, v38, v19);
    v45(v47, v53, v19);
    v45((char *)(v44 + *(int *)(v65 + 36)), v47, v19);
    v46(v42, v19);
    uint64_t v48 = v64;
    sub_100048B64(v44, v64);
    uint64_t v49 = v59;
    LOBYTE(v38) = sub_100104A48();
    char v50 = v60;
    v55(v60, v49, v19);
    uint64_t v51 = (uint64_t)v58;
    sub_100010808(v48, (uint64_t)v58, &qword_10014E198);
    if (v38) {
      char v31 = sub_100104A28();
    }
    else {
      char v31 = 0;
    }
    sub_100012510(v51, &qword_10014E198);
    v46(v50, v19);
    sub_100012510(v48, &qword_10014E198);
    v46(v67, v19);
    v46(v57, v19);
    return v31 & 1;
  }
  __break(1u);
  return result;
}

BOOL sub_100047CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103978();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v77 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151970);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v71 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v76 = &v66[-v11];
  __chkstk_darwin(v10);
  uint64_t v13 = &v66[-v12];
  uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v69 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v70 = &v66[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v72 = &v66[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v73 = &v66[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v79 = &v66[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v75 = &v66[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = &v66[-v28];
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = &v66[-v31];
  __chkstk_darwin(v30);
  uint64_t v34 = &v66[-v33];
  sub_100010808(a1, (uint64_t)&v66[-v33], (uint64_t *)&unk_100151950);
  uint64_t v80 = a2;
  sub_100010808(a2, (uint64_t)v32, (uint64_t *)&unk_100151950);
  uint64_t v78 = v7;
  uint64_t v35 = (uint64_t)&v13[*(int *)(v7 + 48)];
  sub_100010808((uint64_t)v34, (uint64_t)v13, (uint64_t *)&unk_100151950);
  sub_100010808((uint64_t)v32, v35, (uint64_t *)&unk_100151950);
  uint64_t v81 = v5;
  uint64_t v36 = *(unsigned int (**)(void, void, void))(v5 + 48);
  if (v36(v13, 1, v4) == 1)
  {
    sub_100012510((uint64_t)v32, (uint64_t *)&unk_100151950);
    sub_100012510((uint64_t)v34, (uint64_t *)&unk_100151950);
    if (v36(v35, 1, v4) == 1)
    {
      uint64_t v74 = v36;
      sub_100012510((uint64_t)v13, (uint64_t *)&unk_100151950);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v37 = (uint64_t)v13;
LABEL_21:
    sub_100012510(v37, (uint64_t *)&unk_100151970);
    return 0;
  }
  sub_100010808((uint64_t)v13, (uint64_t)v29, (uint64_t *)&unk_100151950);
  if (v36(v35, 1, v4) == 1)
  {
    sub_100012510((uint64_t)v32, (uint64_t *)&unk_100151950);
    sub_100012510((uint64_t)v34, (uint64_t *)&unk_100151950);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v29, v4);
    goto LABEL_6;
  }
  uint64_t v74 = v36;
  uint64_t v38 = v81;
  uint64_t v39 = v77;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v35, v4);
  sub_100048B20(&qword_10014CE78);
  int v67 = sub_100104A98();
  uint64_t v68 = a1;
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
  v40(v39, v4);
  sub_100012510((uint64_t)v32, (uint64_t *)&unk_100151950);
  sub_100012510((uint64_t)v34, (uint64_t *)&unk_100151950);
  v40(v29, v4);
  a1 = v68;
  sub_100012510((uint64_t)v13, (uint64_t *)&unk_100151950);
  if ((v67 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v41 = type metadata accessor for StreakSummary();
  char v42 = v75;
  sub_100010808(a1 + *(int *)(v41 + 20), (uint64_t)v75, (uint64_t *)&unk_100151950);
  char v43 = v79;
  sub_100010808(v80 + *(int *)(v41 + 20), (uint64_t)v79, (uint64_t *)&unk_100151950);
  uint64_t v44 = v76;
  uint64_t v45 = (uint64_t)&v76[*(int *)(v78 + 48)];
  sub_100010808((uint64_t)v42, (uint64_t)v76, (uint64_t *)&unk_100151950);
  sub_100010808((uint64_t)v43, v45, (uint64_t *)&unk_100151950);
  long long v46 = v74;
  if (v74(v44, 1, v4) != 1)
  {
    uint64_t v68 = v41;
    char v47 = v73;
    sub_100010808((uint64_t)v44, (uint64_t)v73, (uint64_t *)&unk_100151950);
    if (v46(v45, 1, v4) != 1)
    {
      uint64_t v74 = v46;
      uint64_t v48 = (uint64_t)v42;
      uint64_t v49 = v81;
      char v50 = v77;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v45, v4);
      sub_100048B20(&qword_10014CE78);
      char v51 = sub_100104A98();
      uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
      v52(v50, v4);
      sub_100012510((uint64_t)v79, (uint64_t *)&unk_100151950);
      sub_100012510(v48, (uint64_t *)&unk_100151950);
      v52(v47, v4);
      sub_100012510((uint64_t)v44, (uint64_t *)&unk_100151950);
      uint64_t v41 = v68;
      if ((v51 & 1) == 0) {
        return 0;
      }
      goto LABEL_15;
    }
    sub_100012510((uint64_t)v79, (uint64_t *)&unk_100151950);
    sub_100012510((uint64_t)v42, (uint64_t *)&unk_100151950);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v47, v4);
    goto LABEL_13;
  }
  sub_100012510((uint64_t)v43, (uint64_t *)&unk_100151950);
  sub_100012510((uint64_t)v42, (uint64_t *)&unk_100151950);
  if (v46(v45, 1, v4) != 1)
  {
LABEL_13:
    uint64_t v37 = (uint64_t)v44;
    goto LABEL_21;
  }
  uint64_t v74 = v46;
  sub_100012510((uint64_t)v44, (uint64_t *)&unk_100151950);
LABEL_15:
  uint64_t v53 = v72;
  sub_100010808(a1 + *(int *)(v41 + 24), (uint64_t)v72, (uint64_t *)&unk_100151950);
  uint64_t v68 = v41;
  uint64_t v54 = v80 + *(int *)(v41 + 24);
  uint64_t v55 = v70;
  sub_100010808(v54, (uint64_t)v70, (uint64_t *)&unk_100151950);
  uint64_t v56 = v71;
  uint64_t v57 = (uint64_t)&v71[*(int *)(v78 + 48)];
  sub_100010808((uint64_t)v53, (uint64_t)v71, (uint64_t *)&unk_100151950);
  sub_100010808((uint64_t)v55, v57, (uint64_t *)&unk_100151950);
  double v58 = v74;
  if (v74(v56, 1, v4) == 1)
  {
    sub_100012510((uint64_t)v55, (uint64_t *)&unk_100151950);
    sub_100012510((uint64_t)v53, (uint64_t *)&unk_100151950);
    if (v58(v57, 1, v4) == 1)
    {
      sub_100012510((uint64_t)v56, (uint64_t *)&unk_100151950);
      return *(void *)(a1 + *(int *)(v68 + 28)) == *(void *)(v80 + *(int *)(v68 + 28));
    }
    goto LABEL_20;
  }
  uint64_t v59 = v69;
  sub_100010808((uint64_t)v56, (uint64_t)v69, (uint64_t *)&unk_100151950);
  if (v58(v57, 1, v4) == 1)
  {
    sub_100012510((uint64_t)v55, (uint64_t *)&unk_100151950);
    sub_100012510((uint64_t)v53, (uint64_t *)&unk_100151950);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v59, v4);
LABEL_20:
    uint64_t v37 = (uint64_t)v56;
    goto LABEL_21;
  }
  uint64_t v61 = (uint64_t)v55;
  uint64_t v62 = v81;
  uint64_t v63 = v77;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v77, v57, v4);
  sub_100048B20(&qword_10014CE78);
  char v64 = sub_100104A98();
  uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
  v65(v63, v4);
  sub_100012510(v61, (uint64_t *)&unk_100151950);
  sub_100012510((uint64_t)v72, (uint64_t *)&unk_100151950);
  v65(v59, v4);
  sub_100012510((uint64_t)v56, (uint64_t *)&unk_100151950);
  if (v64) {
    return *(void *)(a1 + *(int *)(v68 + 28)) == *(void *)(v80 + *(int *)(v68 + 28));
  }
  return 0;
}

unint64_t sub_1000485F4()
{
  unint64_t result = qword_10014E168;
  if (!qword_10014E168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E168);
  }
  return result;
}

uint64_t sub_100048648(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000486A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004870C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for StreakSummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004883CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreakSummary.CodingKeys()
{
  return &type metadata for StreakSummary.CodingKeys;
}

unint64_t sub_100048878()
{
  unint64_t result = qword_10014E178;
  if (!qword_10014E178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E178);
  }
  return result;
}

unint64_t sub_1000488D0()
{
  unint64_t result = qword_10014E180;
  if (!qword_10014E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E180);
  }
  return result;
}

unint64_t sub_100048928()
{
  unint64_t result = qword_10014E188;
  if (!qword_10014E188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E188);
  }
  return result;
}

uint64_t sub_10004897C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953718636 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E4F676E69646E65 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100048B20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100103978();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014E198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StreaksWidgetUtil()
{
  return self;
}

uint64_t sub_100048BF0(uint64_t a1)
{
  uint64_t v2 = sub_100104888();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100103F48();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100103F28();
  sub_100048EEC();
  char v10 = sub_100105338();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10) {
    return 0xD00000000000007CLL;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v3 + 88))(v5, v2) == enum case for WidgetFamily.accessoryCircular(_:))
  {
    if (qword_10014C008 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_100163090;
    uint64_t v15 = *(void *)algn_100163098;
    sub_100007F78();
    swift_bridgeObjectRetain();
    return sub_100104488();
  }
  else
  {
    if (qword_10014C000 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_100163080;
    uint64_t v15 = *(void *)algn_100163088;
    sub_100007F78();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100104488();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v11;
}

unint64_t sub_100048EEC()
{
  unint64_t result = qword_10014E238;
  if (!qword_10014E238)
  {
    sub_100103F48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E238);
  }
  return result;
}

uint64_t sub_100048F44(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100103F48();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103F28();
  sub_100048EEC();
  char v8 = sub_100105338();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8) {
    return 0xD00000000000007CLL;
  }
  if (a1 == 2 || a2 < 4)
  {
    if (qword_10014C010 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1001630A0;
    uint64_t v14 = *(void *)algn_1001630A8;
    sub_100007F78();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a1) {
      uint64_t v10 = sub_10008A99C();
    }
    else {
      uint64_t v10 = sub_10008A7DC();
    }
    uint64_t v13 = v10;
    uint64_t v14 = v11;
    sub_100007F78();
  }
  return sub_100104488();
}

uint64_t sub_10004910C()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014E240);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014E240);
  if (qword_10014BF70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F28);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000491D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100104E58();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_100104E48();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100017C14(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100104DE8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

BOOL OperationBase.hasCompletions.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_10014E258);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_100049F98(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return (v5 & 1) == 0;
}

uint64_t sub_1000494A8()
{
  sub_100007F30(&qword_10014E260);
  sub_100105948();
  swift_getFunctionTypeMetadata1();
  sub_100104DD8();

  return swift_getWitnessTable();
}

void OperationBase.onResult(_:)()
{
  uint64_t v1 = *(void *)(v0 + qword_10014E258);
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_10004A1C8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t OperationBase.onSuccess(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  OperationBase.onResult(_:)();

  return swift_release();
}

uint64_t sub_1000496CC()
{
  uint64_t v1 = *(void *)(v0 + qword_10014E258);
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10004BE74(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  return v5;
}

uint64_t sub_1000497F4(uint64_t a1)
{
  uint64_t v2 = v1;
  NSString v4 = sub_100104B38();
  [v1 willChangeValueForKey:v4];

  uint64_t v5 = *(void *)&v1[qword_10014E258];
  type metadata accessor for OperationBase.Locked();
  sub_100007F30(&qword_10014E260);
  sub_100105948();
  swift_getFunctionTypeMetadata1();
  sub_100104DD8();
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_10004BD20(v6, &v17);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = v17;
  NSString v9 = sub_100104B38();
  [v2 didChangeValueForKey:v9];

  if (!sub_100104DB8()) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = 0;
  for (uint64_t i = v8 + 40; ; i += 16)
  {
    BOOL v12 = sub_100104D88();
    sub_100104D58();
    if (!v12) {
      break;
    }
    uint64_t v13 = *(void (**)(uint64_t))(i - 8);
    uint64_t v14 = v10 + 1;
    BOOL v15 = __OFADD__(v10, 1);
    uint64_t result = swift_retain();
    if (v15) {
      goto LABEL_11;
    }
    v13(a1);
    swift_release();
    ++v10;
    if (v14 == sub_100104DB8()) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1001054C8();
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t OperationBase.State.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100138950;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t OperationBase.State.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7964616572;
  }
  if (a1 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

uint64_t sub_100049AFC()
{
  swift_getWitnessTable();

  return sub_100105818();
}

uint64_t sub_100049B70(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100049BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100049C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100049CBC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = OperationBase.State.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100049CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OperationBase.State.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100049D18()
{
  return 0;
}

uint64_t OperationBase.isAsynchronous.getter()
{
  return 1;
}

Swift::Int sub_100049D90()
{
  return sub_100105928();
}

void sub_100049DD4()
{
}

Swift::Int sub_100049DFC()
{
  return sub_100105928();
}

uint64_t sub_100049E3C@<X0>(unsigned char *a1@<X8>)
{
  sub_100007F30(&qword_10014E260);
  sub_100105948();
  swift_getFunctionTypeMetadata1();
  sub_100104DD8();
  swift_getWitnessTable();
  uint64_t result = sub_100104F38();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100049F04()
{
  return 8;
}

void *sub_100049F10(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100049F1C()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100049F90()
{
  return sub_100049F1C();
}

uint64_t sub_100049F98@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for OperationBase.Locked()
{
  return sub_10000ABE8();
}

uint64_t OperationBase.main@Sendable ()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = swift_isaMask & *v1;
  return _swift_task_switch(sub_10004A054, 0, 0);
}

uint64_t sub_10004A054()
{
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0[3] + 80) - 8) + 56))(v0[2], 1, 1);
  unsigned __int8 v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10004A0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  swift_retain();
  sub_100007F30(&qword_10014E260);
  sub_100105948();
  swift_getFunctionTypeMetadata1();
  sub_100104DD8();
  return sub_100104DA8();
}

uint64_t sub_10004A1C8(uint64_t a1)
{
  return sub_10004A0E8(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_10004A1E8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_100007F30(&qword_10014E260);
  uint64_t v7 = sub_100105948();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = sub_100105278();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10004A430(v7, (uint64_t)&v17, (uint64_t)v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v14, 0, 1, a4);
  a2(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10004A3EC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004A424(uint64_t a1)
{
  return sub_10004A1E8(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_10004A430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

Class sub_10004A500(uint64_t a1, uint64_t a2)
{
  return sub_10004A5D8(a1, a2, (void (*)(void))sub_10004A518);
}

Swift::Int sub_10004A518()
{
  Swift::Int v0 = sub_100057478((uint64_t)&off_1001389B8);
  swift_arrayDestroy();
  return v0;
}

Class sub_10004A560(uint64_t a1, uint64_t a2)
{
  return sub_10004A5D8(a1, a2, (void (*)(void))sub_10004A578);
}

Swift::Int sub_10004A578()
{
  Swift::Int v0 = sub_100057478((uint64_t)&off_1001389E8);
  swift_arrayDestroy();
  return v0;
}

Class sub_10004A5C0(uint64_t a1, uint64_t a2)
{
  return sub_10004A5D8(a1, a2, (void (*)(void))sub_10004A644);
}

Class sub_10004A5D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjCClassMetadata();
  a3();
  v4.super.Class isa = sub_100104EA8().super.isa;
  swift_bridgeObjectRelease();

  return v4.super.isa;
}

Swift::Int sub_10004A644()
{
  Swift::Int v0 = sub_100057478((uint64_t)&off_100138A18);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_10004A68C(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isFinished.getter();

  return v2 & 1;
}

uint64_t OperationBase.isFinished.getter()
{
  return sub_10004A71C();
}

uint64_t type metadata accessor for OperationBase.State()
{
  return sub_10000ABE8();
}

uint64_t sub_10004A6E0(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isExecuting.getter();

  return v2 & 1;
}

uint64_t OperationBase.isExecuting.getter()
{
  return sub_10004A71C();
}

uint64_t sub_10004A71C()
{
  return sub_100105818() & 1;
}

uint64_t sub_10004A7C8()
{
  return 1;
}

uint64_t sub_10004A7D0(void *a1)
{
  id v1 = a1;
  char v2 = OperationBase.isReady.getter();

  return v2 & 1;
}

uint64_t OperationBase.isReady.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for OperationBase();
  unsigned int v1 = [super isReady];
  if (v1)
  {
    sub_1000496CC();
    type metadata accessor for OperationBase.State();
    swift_getWitnessTable();
    LOBYTE(v1) = sub_100105818();
  }
  return v1 & 1;
}

uint64_t type metadata accessor for OperationBase()
{
  return sub_10000ABE8();
}

Swift::Void __swiftcall OperationBase.start()()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x50);
  sub_100007F30(&qword_10014E260);
  uint64_t v2 = sub_100105948();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v20[-v4];
  uint64_t v6 = sub_100007E0C(&qword_10014CD00);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ([v0 isCancelled])
  {
    sub_100104DF8();
    sub_10004B400();
    uint64_t v9 = swift_allocError();
    sub_100104998();
    *uint64_t v5 = v9;
    swift_storeEnumTagMultiPayload();
    sub_1000497F4((uint64_t)v5);
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v10 = sub_100104E58();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = 0;
    v11[3] = 0;
    v11[4] = v0;
    uint64_t v12 = v0;
    uint64_t v13 = sub_1000491D4((uint64_t)v8, (uint64_t)&unk_10014E278, (uint64_t)v11);
    NSString v14 = sub_100104B38();
    [v12 willChangeValueForKey:v14];

    uint64_t v15 = *(void *)((char *)v12 + qword_10014E258);
    __chkstk_darwin(v16);
    *(void *)&v20[-16] = v1;
    *(void *)&v20[-8] = v13;
    type metadata accessor for OperationBase.Locked();
    uint64_t v17 = v15 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v15 + 16);
    uint64_t v18 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v18);
    sub_10004B3AC(v17);
    os_unfair_lock_unlock(v18);
    NSString v19 = sub_100104B38();
    [v12 didChangeValueForKey:v19];

    swift_release();
  }
}

uint64_t sub_10004AC3C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a4;
  uint64_t v12 = swift_isaMask & *a4;
  uint64_t v5 = *(void *)(v12 + 0x50);
  v4[3] = v5;
  sub_100007F30(&qword_10014E260);
  uint64_t v6 = sub_100105948();
  v4[4] = v6;
  v4[5] = *(void *)(v6 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v7 = sub_100105278();
  v4[7] = v7;
  v4[8] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[9] = v8;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))(*(void *)(v12 + 104) + **(int **)(v12 + 104));
  uint64_t v9 = (void *)swift_task_alloc();
  v4[12] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10004AEB0;
  return v11(v8);
}

uint64_t sub_10004AEB0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10004B1DC;
  }
  else {
    uint64_t v2 = sub_10004AFC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004AFC4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v0[8] + 8))(v1, v0[7]);
    type metadata accessor for OperationBase.Failure();
    swift_getWitnessTable();
    uint64_t v4 = swift_allocError();
    swift_willThrow();
    uint64_t v6 = v0[5];
    uint64_t v5 = (uint64_t *)v0[6];
    uint64_t v7 = v0[4];
    *uint64_t v5 = v4;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_1000497F4((uint64_t)v5);
    swift_errorRelease();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {
    uint64_t v8 = v0[11];
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
    swift_storeEnumTagMultiPayload();
    sub_1000497F4(v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10004B1DC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = (void *)v0[6];
  uint64_t v3 = v0[4];
  *uint64_t v1 = v0[13];
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_1000497F4((uint64_t)v1);
  swift_errorRelease();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10004B2B8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004B2F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100017A64;
  return sub_10004AC3C(a1, v4, v5, v6);
}

uint64_t sub_10004B3AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(unsigned char *)a1 = 1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a1 + 16) = v3;
  return result;
}

unint64_t sub_10004B400()
{
  unint64_t result = qword_10014E280[0];
  if (!qword_10014E280[0])
  {
    sub_100104DF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10014E280);
  }
  return result;
}

void sub_10004B458(void *a1)
{
  id v1 = a1;
  OperationBase.start()();
}

Swift::Void __swiftcall OperationBase.cancel()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for OperationBase();
  [super cancel];
  uint64_t v1 = *(void *)&v0[qword_10014E258];
  swift_getKeyPath();
  type metadata accessor for OperationBase.Locked();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_10004B69C(v2, &v4);
  os_unfair_lock_unlock(v3);
  swift_release_n();
  if (v4)
  {
    sub_100104E68();
    swift_release();
  }
}

uint64_t sub_10004B620()
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10004B694()
{
  return sub_10004B620();
}

uint64_t sub_10004B69C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

void sub_10004B6E4(void *a1)
{
  id v1 = a1;
  OperationBase.cancel()();
}

id sub_10004B72C(void *a1)
{
  id v1 = a1;
  sub_10004B794();

  NSString v2 = sub_100104B38();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_10004B794()
{
  int v0 = sub_1000496CC();
  if (!v0) {
    return 0x7964616572;
  }
  if (v0 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

void sub_10004B804()
{
}

id OperationBase.init()()
{
  uint64_t v1 = qword_10014E258;
  NSString v2 = v0;
  char v8 = sub_100049D18();
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  type metadata accessor for OperationBase.Locked();
  uint64_t v5 = sub_100007E08();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)&v0[v1] = v5;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for OperationBase();
  return [super init];
}

id sub_10004B95C()
{
  return OperationBase.init()();
}

id OperationBase.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OperationBase();
  return [super dealloc];
}

uint64_t sub_10004B9DC()
{
  return swift_release();
}

uint64_t sub_10004B9EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10004BA08()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10004BA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_10004BA58(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004BB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10004BB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10004BB58()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10004BB94(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10004BBD4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 sub_10004BC3C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_10004BC50(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_10004BC98(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10004BCE0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_10004BD20(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)a1 = 2;
  *a2 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_10004B804();
}

uint64_t sub_10004BD6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004BDA4(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100017A64;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10014E408 + dword_10014E408);
  return v6(a1, v4);
}

uint64_t type metadata accessor for OperationBase.Failure()
{
  return sub_10000ABE8();
}

uint64_t sub_10004BE74@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 24))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result;
  return result;
}

uint64_t sub_10004BEBC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t _s15GenericMapAssetC14GenericMapDataV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_10004BF38(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10004BFD4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10004BFFC()
{
  return swift_getWitnessTable();
}

unint64_t sub_10004C01C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x736C6562616CLL;
      break;
    case 4:
      unint64_t result = 0x736E69616D6F64;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10004C0F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_10014E5F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10004DA64();
  sub_100105968();
  LOBYTE(v13) = 0;
  sub_100105728();
  if (!v2)
  {
    uint64_t v9 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
    LOBYTE(v13) = 1;
    sub_100103978();
    sub_10004D9F4(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v13) = 2;
    sub_100105758();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    sub_100007E0C(&qword_10014E5D0);
    sub_10004DBB4(&qword_10014E600);
    sub_100105768();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    sub_100105768();
    LOBYTE(v13) = 5;
    sub_100105758();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v12 = 6;
    sub_100007E0C(&qword_10014E5E0);
    sub_10004DC54(&qword_10014E608, &qword_10014E5E0, (void (*)(void))sub_10004DC18);
    sub_1001057A8();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    sub_1001057A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10004C4A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014E5C0);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s16StateOfMindAssetC15StateOfMindDataVMa(0);
  __chkstk_darwin(v10);
  char v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  sub_100012154(a1, v13);
  sub_10004DA64();
  uint64_t v14 = v9;
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)v30);
  }
  uint64_t v15 = (uint64_t)v6;
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  LOBYTE(v32) = 0;
  *char v12 = sub_100105678();
  v12[1] = v18;
  sub_100103978();
  LOBYTE(v32) = 1;
  sub_10004D9F4(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100012290(v15, (uint64_t)v12 + v10[5]);
  LOBYTE(v32) = 2;
  uint64_t v19 = sub_1001056A8();
  uint64_t v20 = (char *)v12 + v10[6];
  *(void *)uint64_t v20 = v19;
  v20[8] = v21 & 1;
  sub_100007E0C(&qword_10014E5D0);
  char v31 = 3;
  sub_10004DBB4(&qword_10014E5D8);
  sub_1001056B8();
  *(uint64_t *)((char *)v12 + v10[7]) = v32;
  char v31 = 4;
  sub_1001056B8();
  *(uint64_t *)((char *)v12 + v10[8]) = v32;
  LOBYTE(v32) = 5;
  uint64_t v22 = sub_1001056A8();
  uint64_t v23 = (char *)v12 + v10[9];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  sub_100007E0C(&qword_10014E5E0);
  char v31 = 6;
  sub_10004DC54(&qword_10014E5E8, &qword_10014E5E0, (void (*)(void))sub_10004DAB8);
  sub_1001056F8();
  *(uint64_t *)((char *)v12 + v10[10]) = v32;
  char v31 = 7;
  sub_1001056F8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  *(uint64_t *)((char *)v12 + v10[11]) = v32;
  sub_10004DAF4((uint64_t)v12, v27);
  sub_1000121EC((uint64_t)v30);
  return sub_10004DB58((uint64_t)v12);
}

unint64_t sub_10004CA48()
{
  return sub_10004C01C(*v0);
}

uint64_t sub_10004CA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10004DF5C(a1, a2);
  *a3 = result;
  return result;
}

void sub_10004CA78(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10004CA84(uint64_t a1)
{
  unint64_t v2 = sub_10004DA64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004CAC0(uint64_t a1)
{
  unint64_t v2 = sub_10004DA64();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10004CAFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004C4A0(a1, a2);
}

uint64_t sub_10004CB14(void *a1)
{
  return sub_10004C0F8(a1);
}

uint64_t sub_10004CB2C(int a1, char a2, id a3)
{
  BOOL v5 = [a3 userInterfaceStyle] != (id)1;
  uint64_t v6 = v3 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id;

  return sub_10001F2EC(v6, v5, 0, 1, 0, 1, a2);
}

uint64_t sub_10004CB98()
{
  return swift_release();
}

id sub_10004CBA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StateOfMindAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10004CBF0()
{
  return _s16StateOfMindAssetCMa(0);
}

uint64_t _s16StateOfMindAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014E4C0);
}

uint64_t sub_10004CC18()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_10004CC5C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103978();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v20 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v23) = *(uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10004CE58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_10004CF4C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v18 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10004D0F8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10004D340(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v16 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  return a1;
}

void *sub_10004D4C0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004D6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004D6E4);
}

uint64_t sub_10004D6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10004D7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004D7C0);
}

uint64_t sub_10004D7C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t _s16StateOfMindAssetC15StateOfMindDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014E528);
}

void sub_10004D8A4()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10004D964()
{
  return sub_10004D9F4(&qword_10014E578, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_10004D9AC()
{
  return sub_10004D9F4(&qword_10014E580, (void (*)(uint64_t))_s16StateOfMindAssetC15StateOfMindDataVMa);
}

uint64_t sub_10004D9F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004DA3C()
{
  return swift_retain();
}

uint64_t sub_10004DA4C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16StateOfMindAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_10004DA64()
{
  unint64_t result = qword_10014E5C8;
  if (!qword_10014E5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E5C8);
  }
  return result;
}

uint64_t sub_10004DAB8()
{
  return sub_10004DC54(&qword_10014E5F0, &qword_10014CC08, (void (*)(void))sub_10003B0B8);
}

uint64_t sub_10004DAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004DB58(uint64_t a1)
{
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004DBB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_10014E5D0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004DC18()
{
  return sub_10004DC54(&qword_10014E610, &qword_10014CC08, (void (*)(void))sub_10003B10C);
}

uint64_t sub_10004DC54(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004DE1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysOMa()
{
  return &_s16StateOfMindAssetC15StateOfMindDataV10CodingKeysON;
}

unint64_t sub_10004DE58()
{
  unint64_t result = qword_10014E618;
  if (!qword_10014E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E618);
  }
  return result;
}

unint64_t sub_10004DEB0()
{
  unint64_t result = qword_10014E620;
  if (!qword_10014E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E620);
  }
  return result;
}

unint64_t sub_10004DF08()
{
  unint64_t result = qword_10014E628;
  if (!qword_10014E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E628);
  }
  return result;
}

uint64_t sub_10004DF5C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000100111960 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100111980 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E69616D6F64 && a2 == 0xE700000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001001119A0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001001119C0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001001119E0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t type metadata accessor for QueryContainer()
{
  return self;
}

uint64_t *sub_10004E280(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100103F48();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    int v13 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
    *(_OWORD *)&v10[v13[5]] = *(_OWORD *)&v11[v13[5]];
    *(_OWORD *)&v10[v13[6]] = *(_OWORD *)&v11[v13[6]];
    uint64_t v14 = v13[7];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    uint64_t v17 = sub_100104918();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_100007E0C(&qword_10014E6D8);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v10[v13[8]] = v11[v13[8]];
    v10[v13[9]] = v11[v13[9]];
  }
  return a1;
}

uint64_t sub_10004E4FC(uint64_t a1, uint64_t a2)
{
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100103F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v5 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 28);
  uint64_t v8 = sub_100104918();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_10004E670(void *a1, void *a2, uint64_t a3)
{
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100103F48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v8[v11[5]] = *(_OWORD *)&v9[v11[5]];
  *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
  uint64_t v12 = v11[7];
  int v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_100104918();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  return a1;
}

void *sub_10004E89C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E6D0);
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100103F48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v22 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v8[v11[5]] = *(_OWORD *)&v9[v11[5]];
  *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
  uint64_t v12 = v11[7];
  int v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_100104918();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    uint64_t v20 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_12:
  uint64_t result = v22;
  v8[v11[8]] = v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  return result;
}

char *sub_10004EB50(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100103F48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v9[v12[5]] = *(_OWORD *)&v10[v12[5]];
  *(_OWORD *)&v9[v12[6]] = *(_OWORD *)&v10[v12[6]];
  uint64_t v13 = v12[7];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_100104918();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v9[v12[8]] = v10[v12[8]];
  v9[v12[9]] = v10[v12[9]];
  return a1;
}

char *sub_10004ED84(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E6D0);
    uint64_t v6 = sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100103F48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v23 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v9[v12[5]] = *(_OWORD *)&v10[v12[5]];
  *(_OWORD *)&v9[v12[6]] = *(_OWORD *)&v10[v12[6]];
  uint64_t v13 = v12[7];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_100104918();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_10;
  }
  if (v20)
  {
LABEL_10:
    uint64_t v21 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_11:
  uint64_t result = v23;
  v9[v12[8]] = v10[v12[8]];
  v9[v12[9]] = v10[v12[9]];
  return result;
}

uint64_t sub_10004F040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004F054);
}

uint64_t sub_10004F054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for StreaksWidgetTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10004F150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004F164);
}

uint64_t sub_10004F164(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for StreaksWidgetTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for StreaksWidgetAccessoryRectangularView()
{
  uint64_t result = qword_10014E740;
  if (!qword_10014E740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004F2B8()
{
  sub_10004F380();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StreaksWidgetTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10004F380()
{
  if (!qword_10014E750)
  {
    sub_100103F48();
    unint64_t v0 = sub_100103E78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10014E750);
    }
  }
}

uint64_t sub_10004F3D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004F3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v160 = a1;
  uint64_t v156 = a2;
  uint64_t v154 = sub_100007E0C(&qword_10014E798);
  __chkstk_darwin(v154);
  uint64_t v155 = (uint64_t *)((char *)&v133 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v139 = sub_100007E0C(&qword_10014E7A0);
  __chkstk_darwin(v139);
  v143 = (uint64_t *)((char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_100103FE8();
  uint64_t v142 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  v140 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_100007E0C(&qword_10014E7A8);
  uint64_t v5 = __chkstk_darwin(v158);
  unint64_t v141 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v145 = (void (*)(uint64_t, uint64_t))((char *)&v133 - v7);
  uint64_t v148 = sub_1001043C8();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  objc_super v146 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100103F48();
  uint64_t v161 = *(void *)(v159 - 8);
  uint64_t v9 = __chkstk_darwin(v159);
  uint64_t v138 = (uint64_t)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v149 = (char *)&v133 - v12;
  __chkstk_darwin(v11);
  uint64_t v157 = (uint64_t)&v133 - v13;
  uint64_t v137 = sub_100104888();
  uint64_t v14 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v16 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007E0C(&qword_10014E7B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v153 = (uint64_t)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v152 = (char *)&v133 - v20;
  uint64_t v21 = (int *)type metadata accessor for WidgetHeaderView();
  uint64_t v22 = __chkstk_darwin(v21);
  char v24 = (uint64_t *)((char *)&v133 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v133 - v25;
  if (qword_10014BFF0 != -1) {
    swift_once();
  }
  uint64_t v162 = qword_100163060;
  uint64_t v163 = *(void *)algn_100163068;
  unint64_t v27 = sub_100007F78();
  swift_bridgeObjectRetain();
  unint64_t v136 = v27;
  uint64_t v28 = sub_100104488();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33 & 1;
  *char v24 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E7B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = (uint64_t *)((char *)v24 + v21[5]);
  *uint64_t v35 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E7C0);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (uint64_t *)((char *)v24 + v21[6]);
  *uint64_t v36 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E6D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (uint64_t *)((char *)v24 + v21[7]);
  *uint64_t v37 = v28;
  v37[1] = v30;
  _OWORD v37[2] = v34;
  v37[3] = v32;
  sub_100050A7C((uint64_t)v24, (uint64_t)v26);
  uint64_t v38 = v160 + *(int *)(type metadata accessor for StreaksWidgetAccessoryRectangularView() + 20);
  uint64_t v39 = (unsigned __int8 *)(v38 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20));
  uint64_t v40 = *v39;
  v151 = v24;
  v150 = v26;
  if (v40 == 2)
  {
    uint64_t v41 = v137;
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for WidgetFamily.accessoryRectangular(_:), v137);
    uint64_t v42 = v157;
    sub_100096040(v157);
    uint64_t v43 = sub_100048BF0((uint64_t)v16);
    uint64_t v45 = v44;
    char v47 = v46 & 1;
    uint64_t v145 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
    v161 += 8;
    v145(v42, v159);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v41);
    sub_100104358();
    uint64_t v48 = v147;
    uint64_t v49 = v146;
    uint64_t v50 = v148;
    (*(void (**)(char *, void, uint64_t))(v147 + 104))(v146, enum case for Font.Leading.tight(_:), v148);
    sub_1001043E8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    uint64_t v51 = sub_100104468();
    uint64_t v53 = v52;
    LOBYTE(v50) = v54;
    swift_release();
    sub_100050AE0(v43, v45, v47);
    swift_bridgeObjectRelease();
    sub_100104388();
    uint64_t v55 = sub_100104428();
    uint64_t v57 = v56;
    LOBYTE(v43) = v58 & 1;
    sub_100050AE0(v51, v53, v50 & 1);
    swift_bridgeObjectRelease();
    LODWORD(v162) = sub_1001041F8();
    uint64_t v147 = sub_100104438();
    objc_super v146 = v59;
    char v61 = v60;
    uint64_t v148 = v62;
    sub_100050AE0(v55, v57, v43);
    swift_bridgeObjectRelease();
    sub_100096040(v42);
    uint64_t v63 = v149;
    sub_100103F28();
    sub_100048EEC();
    uint64_t v64 = v159;
    LOBYTE(v55) = sub_100105338();
    uint64_t v65 = v145;
    v145((uint64_t)v63, v64);
    v65(v42, v64);
    if (v55) {
      double v66 = 1.0;
    }
    else {
      double v66 = 0.1;
    }
    uint64_t KeyPath = swift_getKeyPath();
    sub_100096040(v42);
    sub_100103F28();
    char v68 = sub_100105338();
    v65((uint64_t)v63, v64);
    v65(v42, v64);
    int v69 = v68 & 1;
    if (v69) {
      uint64_t v70 = 0;
    }
    else {
      uint64_t v70 = 2;
    }
    uint64_t v71 = swift_getKeyPath();
    uint64_t v72 = v155;
    uint64_t v73 = v146;
    *uint64_t v155 = v147;
    v72[1] = (uint64_t)v73;
    *((unsigned char *)v72 + 16) = v61 & 1;
    v72[3] = v148;
    v72[4] = KeyPath;
    *((double *)v72 + 5) = v66;
    v72[6] = v71;
    v72[7] = v70;
    *((unsigned char *)v72 + 64) = v69;
    swift_storeEnumTagMultiPayload();
    sub_100007E0C(&qword_10014E7C8);
    sub_100050B00();
    sub_100050BA0();
    uint64_t v74 = (uint64_t)v152;
    sub_1001041B8();
  }
  else
  {
    uint64_t v75 = *((void *)v39 + 1);
    uint64_t v76 = v138;
    sub_100096040(v138);
    uint64_t v77 = v157;
    sub_100103F28();
    unint64_t v78 = sub_100048EEC();
    uint64_t v79 = v159;
    unint64_t v135 = v78;
    char v80 = sub_100105338();
    uint64_t v81 = v161 + 8;
    uint64_t v82 = v79;
    uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
    v83(v77, v82);
    uint64_t v137 = v75;
    if (v80)
    {
      char v84 = 0;
      uint64_t v85 = 0x8000000100111790;
      unint64_t v86 = 0xD00000000000007CLL;
    }
    else
    {
      if (v40) {
        uint64_t v87 = sub_10008A62C();
      }
      else {
        uint64_t v87 = sub_10008A47C();
      }
      uint64_t v162 = v87;
      uint64_t v163 = v88;
      unint64_t v86 = sub_100104488();
      uint64_t v85 = v89;
      char v84 = v90 & 1;
    }
    uint64_t v91 = v159;
    uint64_t v134 = v83;
    v83(v76, v159);
    sub_100104368();
    uint64_t v92 = v147;
    uint64_t v93 = v146;
    uint64_t v94 = v148;
    (*(void (**)(char *, void, uint64_t))(v147 + 104))(v146, enum case for Font.Leading.tight(_:), v148);
    sub_1001043E8();
    uint64_t v161 = v81;
    swift_release();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
    uint64_t v95 = sub_100104468();
    uint64_t v97 = v96;
    LOBYTE(v93) = v98;
    swift_release();
    char v99 = v93 & 1;
    sub_100050AE0(v86, v85, v84);
    swift_bridgeObjectRelease();
    sub_100104388();
    uint64_t v100 = sub_100104428();
    uint64_t v102 = v101;
    LOBYTE(v93) = v103 & 1;
    sub_100050AE0(v95, v97, v99);
    swift_bridgeObjectRelease();
    LODWORD(v162) = sub_1001041F8();
    uint64_t v147 = sub_100104438();
    uint64_t v105 = v104;
    uint64_t v148 = v106;
    int v108 = v107 & 1;
    sub_100050AE0(v100, v102, (char)v93);
    swift_bridgeObjectRelease();
    uint64_t v109 = v157;
    sub_100096040(v157);
    v110 = v149;
    sub_100103F28();
    LOBYTE(v95) = sub_100105338();
    char v111 = v134;
    v134((uint64_t)v110, v91);
    v111(v109, v91);
    if (v95) {
      double v112 = 1.0;
    }
    else {
      double v112 = 0.1;
    }
    uint64_t v113 = swift_getKeyPath();
    uint64_t v114 = swift_getKeyPath();
    v115 = v140;
    sub_100103FB8();
    uint64_t v116 = swift_getKeyPath();
    v117 = v143;
    uint64_t v118 = v142;
    uint64_t v119 = v144;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))((char *)v143 + *(int *)(v139 + 28), v115, v144);
    uint64_t *v117 = v116;
    uint64_t v120 = (uint64_t)v141;
    sub_100010808((uint64_t)v117, (uint64_t)&v141[*(int *)(v158 + 36)], &qword_10014E7A0);
    uint64_t v121 = v147;
    *(void *)uint64_t v120 = v147;
    *(void *)(v120 + 8) = v105;
    uint64_t v122 = v105;
    char v123 = v108;
    LODWORD(v146) = v108;
    *(unsigned char *)(v120 + 16) = v108;
    *(void *)(v120 + 24) = v148;
    *(void *)(v120 + 32) = v113;
    *(double *)(v120 + 40) = v112;
    *(void *)(v120 + 48) = v114;
    *(void *)(v120 + 56) = 1;
    *(unsigned char *)(v120 + 64) = 0;
    uint64_t v124 = v121;
    uint64_t v125 = v122;
    sub_100050DA8(v121, v122, v123);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100012510((uint64_t)v117, &qword_10014E7A0);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v115, v119);
    sub_100050AE0(v124, v125, (char)v146);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v126 = v145;
    sub_100050DB8(v120, (uint64_t)v145);
    sub_100010808((uint64_t)v126, (uint64_t)v155, &qword_10014E7A8);
    swift_storeEnumTagMultiPayload();
    sub_100007E0C(&qword_10014E7C8);
    sub_100050B00();
    sub_100050BA0();
    uint64_t v74 = (uint64_t)v152;
    sub_1001041B8();
    sub_100012510((uint64_t)v126, &qword_10014E7A8);
  }
  uint64_t v127 = (uint64_t)v150;
  uint64_t v128 = (uint64_t)v151;
  sub_100050CE0((uint64_t)v150, (uint64_t)v151);
  uint64_t v129 = v153;
  sub_100010808(v74, v153, &qword_10014E7B0);
  uint64_t v130 = v156;
  sub_100050CE0(v128, v156);
  uint64_t v131 = sub_100007E0C(&qword_10014E818);
  sub_100010808(v129, v130 + *(int *)(v131 + 48), &qword_10014E7B0);
  sub_100012510(v74, &qword_10014E7B0);
  sub_100050D44(v127);
  sub_100012510(v129, &qword_10014E7B0);
  return sub_100050D44(v128);
}

__n128 sub_10005031C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100105008();
    uint64_t v23 = (void *)sub_1001042C8();
    sub_100103CD8();
  }
  sub_100103F58();
  sub_100050CE0(v13, a9);
  char v24 = (_OWORD *)(a9 + *(int *)(sub_100007E0C(&qword_10014E840) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *char v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

double sub_1000504D4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100050530(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10014E830, &qword_10014E838).n128_u64[0];
  return result;
}

__n128 sub_100050530@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100105008();
    long long v28 = (void *)sub_1001042C8();
    sub_100103CD8();

    uint64_t v19 = a17;
  }
  sub_100103F58();
  sub_100010808(v17, a9, a16);
  __n128 v29 = (_OWORD *)(a9 + *(int *)(sub_100007E0C(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *__n128 v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  void v29[2] = v33;
  v29[3] = v34;
  return result;
}

__n128 sub_100050700@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100105008();
    uint64_t v23 = (void *)sub_1001042C8();
    sub_100103CD8();
  }
  sub_100103F58();
  uint64_t v24 = sub_100007E0C(&qword_10014E820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_100007E0C(&qword_10014E828) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  _OWORD *v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_1000508F4()
{
  return sub_100104548();
}

uint64_t sub_100050910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007E0C(&qword_10014E780);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_100104158();
  *((void *)v6 + 1) = 0x4000000000000000;
  v6[16] = 0;
  uint64_t v7 = sub_100007E0C(&qword_10014E788);
  sub_10004F3F4(v2, (uint64_t)&v6[*(int *)(v7 + 44)]);
  uint64_t v8 = sub_1001046F8();
  sub_100050530(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v8, v9, &qword_10014E780, &qword_10014E790);
  return sub_100012510((uint64_t)v6, &qword_10014E780);
}

uint64_t sub_100050A24()
{
  return sub_1001040B8();
}

uint64_t sub_100050A48()
{
  return sub_1001040B8();
}

uint64_t sub_100050A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100050AE0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_100050B00()
{
  unint64_t result = qword_10014E7D0;
  if (!qword_10014E7D0)
  {
    sub_100007F30(&qword_10014E7A8);
    sub_100050BA0();
    sub_100050EC4(&qword_10014E810, &qword_10014E7A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E7D0);
  }
  return result;
}

unint64_t sub_100050BA0()
{
  unint64_t result = qword_10014E7D8;
  if (!qword_10014E7D8)
  {
    sub_100007F30(&qword_10014E7C8);
    sub_100050C40();
    sub_100050EC4(&qword_10014E800, &qword_10014E808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E7D8);
  }
  return result;
}

unint64_t sub_100050C40()
{
  unint64_t result = qword_10014E7E0;
  if (!qword_10014E7E0)
  {
    sub_100007F30(&qword_10014E7E8);
    sub_100050EC4(&qword_10014E7F0, &qword_10014E7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E7E0);
  }
  return result;
}

uint64_t sub_100050CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100050D44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetHeaderView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100050DA8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100050DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014E7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100050E24()
{
  unint64_t result = qword_10014E848;
  if (!qword_10014E848)
  {
    sub_100007F30(&qword_10014E790);
    sub_100050EC4(&qword_10014E850, &qword_10014E780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014E848);
  }
  return result;
}

uint64_t sub_100050EC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100050F08(char a1, char a2, double a3)
{
  uint64_t v4 = v3;
  id v8 = [v4 superview];
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v10 = [v4 bottomAnchor];
    if (a1 == 1)
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];
    }
    else
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintLessThanOrEqualToAnchor:v11];
    }
  }
  else
  {
    id v10 = [v4 bottomAnchor];
    id v11 = [v9 bottomAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];
  }
  id v13 = v12;

  if (v13)
  {
    [v13 setConstant:-a3];
    if (a2)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }
  else if (a2)
  {
    id v13 = 0;
  }

  return v13;
}

Swift::Void __swiftcall UIView.removeAllConstraints()()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    id v3 = v2;
    do
    {
      id v4 = v3;
      id v5 = [v4 constraints];
      sub_100008234(0, &qword_10014E858);
      unint64_t v6 = sub_100104D28();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_1001055E8();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_3;
        }
      }
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)sub_1001054D8();
        }
        else {
          id v9 = *(id *)(v6 + 8 * i + 32);
        }
        id v10 = v9;
        if ([v9 firstItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_100008234(0, &qword_10014C330);
            if (sub_100105218()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
        if ([v10 secondItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_100008234(0, &qword_10014C330);
            if (sub_100105218()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      id v3 = [v4 superview];
    }
    while (v3);
  }
  Class isa = (Class)[v1 constraints];
  if (!isa)
  {
    sub_100008234(0, &qword_10014E858);
    sub_100104D28();
    Class isa = sub_100104D18().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 removeConstraints:isa];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:1];
}

uint64_t sub_1000513D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100051408()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014E860);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014E860);
  if (qword_10014BF98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162FA0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for PersistentCache()
{
  return sub_10000ABE8();
}

uint64_t type metadata accessor for Cropping()
{
  return self;
}

uint64_t sub_10005150C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100104748();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000515D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_100104748();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = v13 + v10;
  unint64_t v15 = ((v13 + v10 + v12) & ~v10) + v13;
  uint64_t v16 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v16 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    uint64_t v20 = v8;
    uint64_t v21 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v22 = ((unint64_t)a2 + v11) & v21;
    uint64_t v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v23(((unint64_t)a1 + v11) & v21, v22, v20);
    v23((v14 + (((unint64_t)a1 + v11) & v21)) & v21, (v14 + v22) & v21, v20);
  }
  return a1;
}

uint64_t sub_100051780(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_100104748();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v11 = v6 + 8;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  v12(v8, v5);
  uint64_t v9 = (*(void *)(v11 + 56) + v7 + v8) & ~v7;

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v5);
}

uint64_t sub_100051864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_100104748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 48) + v11 + v13) & ~v11, (*(void *)(v10 + 48) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_100051954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_100104748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 40) + v11 + v13) & ~v11, (*(void *)(v10 + 40) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_100051A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_100104748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 32) + v11 + v13) & ~v11, (*(void *)(v10 + 32) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_100051B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_100104748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 24) + v11 + v13) & ~v11, (*(void *)(v10 + 24) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_100051C24(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_100104748();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + v12 + (v13 & ~v12)) & ~v12)
      + *(void *)(*(void *)(v8 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_100051EB0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_100104748() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = ((*(void *)(v10 + 64) + v14 + (v15 & ~v14)) & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1000521BCLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          unint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for VibrantShapeStyleModifier()
{
  return sub_10000ABE8();
}

uint64_t sub_1000521FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052240@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_100103E68();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v43 - v6;
  uint64_t v50 = sub_100104748();
  uint64_t v7 = *(void *)(v50 - 8);
  uint64_t v8 = __chkstk_darwin(v50);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v44 = (char *)&v43 - v12;
  uint64_t v52 = a1;
  uint64_t v54 = *(void *)(a1 + 16);
  uint64_t v46 = *(void *)(v54 - 8);
  __chkstk_darwin(v11);
  uint64_t v49 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100104868();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unsigned int v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unsigned int v20 = (char *)&v43 - v19;
  uint64_t v21 = sub_100007E0C(&qword_10014EA40);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100104048();
  uint64_t v24 = sub_1001046E8();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24);
  sub_100052794((uint64_t)v23);
  if (a1 == 1
    && (sub_1001040C8(),
        sub_100104848(),
        sub_1000527F4(),
        char v25 = sub_100104A98(),
        long long v26 = *(void (**)(char *, uint64_t))(v15 + 8),
        v26(v18, v14),
        v26(v20, v14),
        (v25 & 1) == 0))
  {
    uint64_t v29 = v46;
    uint64_t v30 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v49, v51, v54);
    long long v31 = v43;
    sub_100104008();
    uint64_t v33 = v47;
    uint64_t v32 = v48;
    __n128 v34 = v45;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v45, enum case for ColorScheme.dark(_:), v48);
    char v35 = sub_100103E58();
    long long v36 = *(void (**)(char *, uint64_t))(v33 + 8);
    v36(v34, v32);
    v36(v31, v32);
    uint64_t v37 = 36;
    if (v35) {
      uint64_t v37 = 40;
    }
    uint64_t v38 = v30 + *(int *)(v52 + v37);
    uint64_t v39 = v44;
    uint64_t v40 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v44, v38, v50);
    uint64_t v41 = v54;
    uint64_t v42 = v49;
    sub_100103E48();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v42, v41);
  }
  else
  {
    uint64_t v27 = v50;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for BlendMode.normal(_:), v50);
    sub_100103E48();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v27);
  }
}

uint64_t sub_100052770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ShapeStyle._makeView<A>(view:inputs:)(a1, a2, a5, a3, a6, a4);
}

uint64_t sub_100052794(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014EA40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000527F4()
{
  unint64_t result = qword_10014EA48;
  if (!qword_10014EA48)
  {
    sub_100104868();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EA48);
  }
  return result;
}

uint64_t sub_10005284C()
{
  sub_1001041D8();

  return swift_getWitnessTable();
}

uint64_t sub_100052894()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014EA50);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014EA50);
  if (qword_10014BF80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10005295C()
{
  v1[4] = v0;
  sub_100007E0C((uint64_t *)&unk_100151990);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_100103818();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  void *v3 = v1;
  v3[1] = sub_100052A78;
  return sub_1000A33DC();
}

uint64_t sub_100052A78(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100052B78, 0, 0);
}

uint64_t sub_100052B78()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (!v1)
  {
    id v2 = *(id *)(v0 + 32);
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_100053450(v3, (uint64_t)v2);

    swift_bridgeObjectRelease();
    if (v4
      || (id v5 = *(id *)(v0 + 32),
          unint64_t v6 = swift_bridgeObjectRetain(),
          uint64_t v7 = sub_100053450(v6, (uint64_t)v5),
          v5,
          swift_bridgeObjectRelease(),
          v7))
    {
      uint64_t v8 = *(void *)(v0 + 48);
      uint64_t v9 = *(void *)(v0 + 56);
      uint64_t v10 = *(char **)(v0 + 40);
      sub_1000CF538(v10);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) != 1)
      {
        uint64_t v11 = *(void *)(v0 + 32);
        (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48));
        *(unsigned char *)(v0 + 112) = *(unsigned char *)(v11 + qword_100151B30);
        sub_100073A54();
        double v13 = v12;
        id v14 = [self mainScreen];
        [v14 scale];
        double v16 = v15;

        uint64_t v21 = (uint64_t (*)(uint64_t, double))((char *)&dword_100152170 + dword_100152170);
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 88) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_100052E18;
        uint64_t v18 = *(void *)(v0 + 64);
        return v21(v18, v13 * v16);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 40), 1, 1, *(void *)(v0 + 48));
    }
    sub_100012510(*(void *)(v0 + 40), (uint64_t *)&unk_100151990);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v1);
}

uint64_t sub_100052E18(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1000530F4;
  }
  else {
    uint64_t v4 = sub_100052F2C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100052F2C()
{
  switch(*(unsigned char *)(v0 + 112))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v1 = sub_1001057F8();
      swift_bridgeObjectRelease();
      if ((v1 & 1) == 0)
      {
        if (qword_10014BEC0 != -1) {
          swift_once();
        }
        sub_1000B2A44(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 32) + qword_100151B00), *(void *)(*(void *)(v0 + 32) + qword_100151B00 + 8));
      }
      break;
  }
  uint64_t v2 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000530F4()
{
  if (qword_10014BF28 != -1) {
    swift_once();
  }
  char v1 = (void *)v0[4];
  uint64_t v2 = sub_100103DB8();
  sub_100007D30(v2, (uint64_t)qword_10014EA50);
  id v3 = v1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = sub_100103D98();
  os_log_type_t v6 = sub_100104FF8();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[4];
  if (v7)
  {
    os_log_type_t type = v6;
    uint64_t v9 = swift_slowAlloc();
    double v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    v0[2] = v8;
    uint64_t v10 = v8;
    sub_1001052C8();
    *double v15 = v8;

    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    double v12 = v5;
    sub_1001052C8();
    v15[1] = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "%@ - error generating video preview image: %@", (uint8_t *)v9, 0x16u);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    double v12 = v8;
  }

  swift_errorRelease();
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  double v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

id sub_10005338C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super dealloc];
}

uint64_t type metadata accessor for VideoThumbnailCacheOperation()
{
  uint64_t result = qword_10014EA90;
  if (!qword_10014EA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100053410()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100053448()
{
  return type metadata accessor for VideoThumbnailCacheOperation();
}

uint64_t sub_100053450(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007E0C(&qword_10014DA48);
  __chkstk_darwin(v6 - 8);
  unint64_t v78 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100103CC8();
  uint64_t v8 = *(void *)(v85 - 8);
  uint64_t v9 = __chkstk_darwin(v85);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)&v64 - v13;
  __chkstk_darwin(v12);
  uint64_t v77 = (char *)&v64 - v15;
  uint64_t v80 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v16 = __chkstk_darwin(v80);
  char v90 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v93 = (uint64_t)&v64 - v18;
  uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151990);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v76 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v84 = (char *)&v64 - v22;
  uint64_t v91 = sub_100103818();
  unint64_t v23 = *(void *)(v91 - 8);
  uint64_t v24 = __chkstk_darwin(v91);
  uint64_t v71 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v86 = (char *)&v64 - v26;
  uint64_t v27 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v87 = (id *)((char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  long long v31 = (void **)((char *)&v64 - v30);
  unint64_t v95 = a1;
  if (a1 >> 62) {
    goto LABEL_43;
  }
  uint64_t v32 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v32)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v64 = v3;
    uint64_t v88 = *(void *)(a2 + qword_100151B38);
    int v89 = *(unsigned __int8 *)(a2 + qword_100151B38 + 8);
    uint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    uint64_t v83 = (void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    double v66 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v73 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v72 = (void (**)(char *, uint64_t))(v23 + 8);
    unint64_t v23 = v95 & 0xC000000000000001;
    uint64_t v3 = 4;
    int v67 = v11;
    uint64_t v75 = v14;
    uint64_t v11 = v90;
    uint64_t v79 = v27;
    uint64_t v81 = v32;
    unint64_t v94 = v95 & 0xC000000000000001;
LABEL_6:
    uint64_t v8 = v3 - 4;
    if (v23) {
      break;
    }
    a2 = *(void *)(v95 + 8 * v3);
    swift_retain();
    id v14 = (char *)(v3 - 3);
    if (!__OFADD__(v8, 1)) {
      goto LABEL_11;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1001055E8();
    if (!v32) {
      goto LABEL_44;
    }
  }
  a2 = sub_1001054D8();
  id v14 = (char *)(v3 - 3);
  if (__OFADD__(v8, 1)) {
    goto LABEL_42;
  }
LABEL_11:
  uint64_t v34 = a2 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType;
  sub_10003A5C4(a2 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, (uint64_t)v31, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = *v31;
      swift_release();

      goto LABEL_5;
    case 2u:
      uint64_t v35 = (uint64_t)v31;
      if ((v89 & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v35 = (uint64_t)v31;
      goto LABEL_40;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v37 = v34;
      uint64_t v38 = v87;
      sub_10003A5C4(v37, (uint64_t)v87, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v40 = (uint64_t)v38;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v41 = (uint64_t)v84;
          uint64_t v42 = v91;
          (*v82)(v84, 1, 1, v91);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v40 = (uint64_t)v38 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
          goto LABEL_19;
        default:
LABEL_19:
          uint64_t v43 = v93;
          sub_10003A560(v40, v93);
          sub_10003A5C4(v43, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v41 = (uint64_t)v84;
            uint64_t v42 = v91;
            (*v83)(v84, v11, v91);
            uint64_t v44 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v45 = v76;
            sub_100058118(v76);
            uint64_t v46 = v45;
            swift_bridgeObjectRelease();
            uint64_t v42 = v91;
            if ((*v92)(v45, 1, v91) == 1)
            {
              sub_100012510(v45, (uint64_t *)&unk_100151990);
              uint64_t v44 = 1;
              uint64_t v11 = v90;
              uint64_t v41 = (uint64_t)v84;
            }
            else
            {
              uint64_t v47 = *v83;
              uint64_t v48 = v71;
              (*v83)(v71, (char *)v46, v42);
              uint64_t v49 = v84;
              v47(v84, v48, v42);
              uint64_t v41 = (uint64_t)v49;
              uint64_t v44 = 0;
              uint64_t v11 = v90;
            }
            uint64_t v27 = v79;
          }
          (*v82)((char *)v41, v44, 1, v42);
          sub_10003A504(v93);
          break;
      }
      uint64_t v35 = (uint64_t)v31 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
      if ((*v92)(v41, 1, v42) == 1)
      {
        sub_100012510(v41, (uint64_t *)&unk_100151990);
LABEL_30:
        uint64_t v32 = v81;
        goto LABEL_31;
      }
      (*v83)(v86, (char *)v41, v42);
      sub_100103738();
      uint64_t v51 = v50;
      swift_bridgeObjectRetain();
      uint64_t v52 = v75;
      sub_100103C78();
      uint64_t v53 = (uint64_t)v78;
      sub_100103C68();
      if ((*v74)(v53, 1, v85) == 1)
      {
        sub_100012510(v53, &qword_10014DA48);
        swift_bridgeObjectRelease();
        (*v72)(v86, v42);
        uint64_t v11 = v90;
        uint64_t v27 = v79;
        goto LABEL_30;
      }
      uint64_t v69 = v51;
      uint64_t v54 = v77;
      uint64_t v55 = v85;
      (*v66)(v77, v53, v85);
      sub_100103CA8();
      int v70 = sub_100103CB8();
      char v68 = *v73;
      v68(v52, v55);
      uint64_t v56 = v67;
      (*v65)(v67, v54, v55);
      if ((v70 & 1) == 0)
      {
        sub_100103C98();
        int v70 = sub_100103CB8();
        char v60 = v52;
        uint64_t v61 = v85;
        uint64_t v62 = v68;
        v68(v60, v85);
        v62(v56, v61);
        v62(v77, v61);
        swift_bridgeObjectRelease();
        (*v72)(v86, v91);
        uint64_t v11 = v90;
        uint64_t v27 = v79;
        uint64_t v32 = v81;
        if (v70) {
          goto LABEL_36;
        }
LABEL_31:
        sub_10003A504(v35);
LABEL_32:
        swift_release();
        unint64_t v23 = v94;
LABEL_5:
        ++v3;
        if (v14 == (char *)v32) {
          goto LABEL_44;
        }
        goto LABEL_6;
      }
      uint64_t v57 = v56;
      uint64_t v58 = v85;
      uint64_t v59 = v68;
      v68(v57, v85);
      v59(v77, v58);
      swift_bridgeObjectRelease();
      (*v72)(v86, v91);
      uint64_t v11 = v90;
      uint64_t v27 = v79;
      uint64_t v32 = v81;
LABEL_36:
      if ((v89 & 1) == 0)
      {
LABEL_14:
        uint64_t v36 = *(void *)(a2 + 16);
        sub_10003A504(v35);
        if (v36 == v88) {
          goto LABEL_41;
        }
        goto LABEL_32;
      }
LABEL_40:
      sub_10003A504(v35);
LABEL_41:
      swift_bridgeObjectRelease();
      return a2;
    default:
      sub_10003A504((uint64_t)v31);
      swift_release();
      goto LABEL_5;
  }
}

uint64_t sub_100053F18(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6F746F6870;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F746F6870;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      uint64_t v5 = 0x6F69647561;
      break;
    case 3:
      uint64_t v5 = 0x616964656DLL;
      break;
    case 4:
      uint64_t v5 = 0x6563616C70;
      break;
    case 5:
      uint64_t v5 = 0x61737265766E6F63;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7974697669746361;
      break;
    case 7:
      uint64_t v5 = 0x697463656C666572;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 8:
      uint64_t v5 = 0x4D664F6574617473;
      unint64_t v3 = 0xEB00000000646E69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 1701079414;
      goto LABEL_13;
    case 2:
      uint64_t v7 = 1768191329;
LABEL_13:
      if (v5 != (v7 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      if (v5 != 0x616964656DLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      if (v5 != 0x6563616C70) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 != 0x61737265766E6F63) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7974697669746361) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x697463656C666572;
      unint64_t v6 = 0xEA00000000006E6FLL;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEB00000000646E69;
      if (v5 != 0x4D664F6574617473) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_28:
      }
        char v8 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1000541B8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x636973756DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x636973756DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x74736163646F70;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x656C6369747261;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1802465122;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 30324;
      break;
    case 5:
      unint64_t v3 = 0x8000000100110300;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x74736163646F70) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x656C6369747261) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802465122) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 30324;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x8000000100110300;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10005439C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x68746C616568;
  }
  else {
    uint64_t v3 = 0x6163696669746F6ELL;
  }
  if (v2) {
    unint64_t v4 = 0xED0000736E6F6974;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x68746C616568;
  }
  else {
    uint64_t v5 = 0x6163696669746F6ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xED0000736E6F6974;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1001057F8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10005444C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656772614C78;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656772614C78;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x69576D756964656DLL;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656772616CLL;
      break;
    case 3:
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v5 = 0x657263536C6C7566;
      unint64_t v3 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006564;
      if (v5 == 0x69576D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656772616CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6C6C616D73;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006E65;
      if (v5 != 0x657263536C6C7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100054648(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD00000000000002ALL;
  unint64_t v3 = 0x80000001001104E0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000002ALL;
    }
    else {
      unint64_t v5 = 0xD000000000000031;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000100110510;
    }
    else {
      unint64_t v6 = 0x8000000100110540;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD00000000000002ALL;
    unint64_t v6 = 0x80000001001104E0;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v3 = 0x8000000100110510;
  }
  else
  {
    unint64_t v2 = 0xD000000000000031;
    unint64_t v3 = 0x8000000100110540;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1001057F8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100054740(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746E656D6F6DLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746E656D6F6DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F746F6870;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461657263;
      break;
    case 3:
      uint64_t v5 = 0x6D6F74737563;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F746F6870) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461657263) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6D6F74737563;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1000548EC()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v0];
  unint64_t v3 = (unint64_t)[v2 length];
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = ObjectType;
  unint64_t v6 = (void *)swift_allocObject();
  v6[2] = sub_100057794;
  v6[3] = v5;
  aBlock[4] = sub_1000577AC;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100056A34;
  aBlock[3] = &unk_10013AEF8;
  char v7 = _Block_copy(aBlock);
  id v2 = v2;
  swift_retain();
  swift_release();
  [v2 enumerateAttributesInRange:0 options:v4 usingBlock:0];
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_6;
  }
  id v8 = [v0 length];
  sub_100007E0C(&qword_10014ECA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100108260;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  uint64_t v11 = NSDocumentTypeDocumentAttribute;
  uint64_t v12 = NSRTFTextDocumentType;
  sub_10000AE74(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_100057D74(&qword_10014C518, type metadata accessor for DocumentAttributeKey);
  Class isa = sub_1001049A8().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v14 = [v0 dataFromRange:0 documentAttributes:v8 error:isa aBlock];

  id v15 = aBlock[0];
  if (v14)
  {
    uint64_t v16 = sub_100103848();
    swift_release();

    return v16;
  }
  uint64_t v17 = v15;
  sub_1001036C8();

  swift_willThrow();
  if (qword_10014BF30 != -1) {
    goto LABEL_13;
  }
LABEL_6:
  uint64_t v18 = sub_100103DB8();
  sub_100007D30(v18, (uint64_t)qword_10014EBD0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v19 = sub_100103D98();
  os_log_type_t v20 = sub_100104FF8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412290;
    swift_errorRetain();
    unint64_t v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
    aBlock[0] = v23;
    sub_1001052C8();
    *uint64_t v22 = v23;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "WARNING: failed to turn NSAttributedString to Data: %@", v21, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    swift_release();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  return 0;
}

uint64_t sub_100054DC4(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 1:
      id v2 = (objc_class *)[self mainBundle];
      v3._object = (void *)0xEA00000000006F74;
      v9._countAndFlagsBits = 0x8000000100111E80;
      v3._countAndFlagsBits = 0x6F6870206576696CLL;
      goto LABEL_20;
    case 2:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111E40;
      v3._countAndFlagsBits = 0x6F65646976;
      goto LABEL_22;
    case 3:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111E00;
      v3._countAndFlagsBits = 0x636973756DLL;
      goto LABEL_22;
    case 4:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111DC0;
      uint64_t v4 = 0x736163646F70;
      goto LABEL_15;
    case 5:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111D80;
      v3._countAndFlagsBits = 1802465122;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_20;
    case 6:
    case 18:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111D40;
      v3._countAndFlagsBits = 0x6572206F69647561;
      v3._object = (void *)0xEF676E6964726F63;
      goto LABEL_23;
    case 7:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111D00;
      v3._countAndFlagsBits = 0x7469736976;
      goto LABEL_22;
    case 8:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111D00;
      v3._countAndFlagsBits = 0x6563616C70;
      goto LABEL_22;
    case 9:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111D00;
      v3._countAndFlagsBits = 0x20676E696B6C6177;
      v3._object = (void *)0xEC00000061657261;
      goto LABEL_23;
    case 10:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111CC0;
      v3._countAndFlagsBits = 1802398060;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_20;
    case 11:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111C80;
      uint64_t v4 = 0x6361746E6F63;
      goto LABEL_15;
    case 12:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111C40;
      uint64_t v4 = 0x756F6B726F77;
LABEL_15:
      v3._countAndFlagsBits = v4 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      v3._object = (void *)0xE700000000000000;
      goto LABEL_20;
    case 13:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111C00;
      v3._countAndFlagsBits = 0x2074756F6B726F77;
      v3._object = (void *)0xED00006574756F72;
      goto LABEL_20;
    case 14:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111BC0;
      v3._countAndFlagsBits = 0x697463656C666572;
      v3._object = (void *)0xEA00000000006E6FLL;
      goto LABEL_20;
    case 15:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111B80;
      v3._countAndFlagsBits = 0x666F206574617473;
      v3._object = (void *)0xED0000646E696D20;
      goto LABEL_20;
    case 16:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111B40;
      v3._countAndFlagsBits = 0x61206E6F69746F6DLL;
      v3._object = (void *)0xEF79746976697463;
LABEL_20:
      v5.value._countAndFlagsBits = 0;
      v5.value._object = 0;
      v6.super.Class isa = v2;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      goto LABEL_24;
    case 17:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111B00;
      v3._countAndFlagsBits = 0x616964656DLL;
      goto LABEL_22;
    case 19:
    case 20:
      return v1;
    default:
      id v2 = (objc_class *)[self mainBundle];
      v9._countAndFlagsBits = 0x8000000100111EC0;
      v3._countAndFlagsBits = 0x6F746F6870;
LABEL_22:
      v3._object = (void *)0xE500000000000000;
LABEL_23:
      v5.value._countAndFlagsBits = 0;
      v5.value._object = 0;
      v6.super.Class isa = v2;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
LABEL_24:
      uint64_t v1 = sub_100103638(v3, v5, v6, v7, v9);

      return v1;
  }
}

uint64_t sub_1000554C8()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014EBD0);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014EBD0);
  if (qword_10014BF80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F58);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100055590(char a1)
{
  uint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746F68506576696CLL;
      break;
    case 2:
      uint64_t result = 0x6F65646976;
      break;
    case 3:
      uint64_t result = 0x636973756DLL;
      break;
    case 4:
      uint64_t result = 0x74736163646F70;
      break;
    case 5:
      uint64_t result = 1802465122;
      break;
    case 6:
      uint64_t result = 0x6F69647561;
      break;
    case 7:
      uint64_t result = 0x7469736976;
      break;
    case 8:
      uint64_t result = 0x6E695069746C756DLL;
      break;
    case 9:
      uint64_t result = 0x4D636972656E6567;
      break;
    case 10:
      uint64_t result = 1802398060;
      break;
    case 11:
      uint64_t result = 0x746361746E6F63;
      break;
    case 12:
      uint64_t result = 0x4974756F6B726F77;
      break;
    case 13:
      uint64_t result = 0x5274756F6B726F77;
      break;
    case 14:
      uint64_t result = 0x697463656C666572;
      break;
    case 15:
      uint64_t result = 0x4D664F6574617473;
      break;
    case 16:
      uint64_t result = 0x63416E6F69746F6DLL;
      break;
    case 17:
      uint64_t result = 0x7261506472696874;
      break;
    case 18:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 19:
      uint64_t result = 0x76456B6165727473;
      break;
    case 20:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100055824(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100055B14(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100055590);
}

Swift::Int sub_10005583C(uint64_t a1, uint64_t a2)
{
  return sub_100055BC4(a1, a2, (void (*)(uint64_t))sub_100055590);
}

uint64_t sub_100055854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100055C48(a1, a2, a3, (void (*)(void))sub_100055590);
}

Swift::Int sub_10005586C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100055CB8(a1, a2, a3, (void (*)(uint64_t))sub_100055590);
}

uint64_t sub_100055884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10005761C();
  *a1 = result;
  return result;
}

uint64_t sub_1000558B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100055590(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000558E0()
{
  return sub_100054DC4(*v0);
}

uint64_t sub_1000558E8()
{
  return sub_100104CF8();
}

uint64_t sub_100055948()
{
  return sub_100104CB8();
}

uint64_t sub_100055998(char a1)
{
  uint64_t result = 0x6974736567677573;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x50616964656DLL;
      goto LABEL_6;
    case 2:
      uint64_t v3 = 0x506567616D69;
      goto LABEL_6;
    case 3:
      return 0x69506172656D6163;
    case 4:
      uint64_t v3 = 0x506F69647561;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6369000000000000;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      uint64_t result = 0x6568536572616873;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100055AFC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100055B14(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100055998);
}

uint64_t sub_100055B14(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1001057F8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_100055BAC(uint64_t a1, uint64_t a2)
{
  return sub_100055BC4(a1, a2, (void (*)(uint64_t))sub_100055998);
}

Swift::Int sub_100055BC4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1001058D8();
  a3(v5);
  sub_100104BC8();
  swift_bridgeObjectRelease();
  return sub_100105928();
}

uint64_t sub_100055C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100055C48(a1, a2, a3, (void (*)(void))sub_100055998);
}

uint64_t sub_100055C48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100055CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100055CB8(a1, a2, a3, (void (*)(uint64_t))sub_100055998);
}

Swift::Int sub_100055CB8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1001058D8();
  a4(v6);
  sub_100104BC8();
  swift_bridgeObjectRelease();
  return sub_100105928();
}

uint64_t sub_100055D20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100057670(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100055D50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100055998(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100055D7C(unsigned __int8 *a1, char *a2)
{
  return sub_100054740(*a1, *a2);
}

Swift::Int sub_100055D88()
{
  return sub_100105928();
}

uint64_t sub_100055E70()
{
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100055F40()
{
  return sub_100105928();
}

uint64_t sub_100056024@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100057710(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100056054(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x746E656D6F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F746F6870;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F697461657263;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6D6F74737563;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Journaling.deinit()
{
  return v0;
}

uint64_t type metadata accessor for Journaling()
{
  return self;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100056288);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetSource()
{
  return &type metadata for Journaling.AssetSource;
}

uint64_t getEnumTagSinglePayload for Journaling.AssetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Journaling.AssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *uint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005641CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.AssetType()
{
  return &type metadata for Journaling.AssetType;
}

unsigned char *storeEnumTagSinglePayload for Journaling.EntryDateSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100056520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Journaling.EntryDateSource()
{
  return &type metadata for Journaling.EntryDateSource;
}

unint64_t sub_10005655C()
{
  unint64_t result = qword_10014EC80;
  if (!qword_10014EC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EC80);
  }
  return result;
}

unint64_t sub_1000565B4()
{
  unint64_t result = qword_10014EC88;
  if (!qword_10014EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EC88);
  }
  return result;
}

unint64_t sub_10005660C()
{
  unint64_t result = qword_10014EC90;
  if (!qword_10014EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EC90);
  }
  return result;
}

uint64_t sub_100056660()
{
  sub_100007E0C(&qword_10014ECB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10010A7C0;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = NSLinkAttributeName;
  *(void *)(inited + 48) = NSParagraphStyleAttributeName;
  *(void *)(inited + 56) = NSUnderlineStyleAttributeName;
  *(void *)(inited + 64) = NSStrikethroughStyleAttributeName;
  *(void *)(inited + 72) = NSStrikethroughColorAttributeName;
  *(void *)(inited + 80) = NSWritingDirectionAttributeName;
  *(void *)(inited + 88) = NSForegroundColorAttributeName;
  *(void *)(inited + 96) = NSAttachmentAttributeName;
  uint64_t v1 = NSFontAttributeName;
  int v2 = NSLinkAttributeName;
  int v3 = NSParagraphStyleAttributeName;
  unsigned int v4 = NSUnderlineStyleAttributeName;
  uint64_t v5 = NSStrikethroughStyleAttributeName;
  unsigned int v6 = NSStrikethroughColorAttributeName;
  BOOL v7 = NSWritingDirectionAttributeName;
  int v8 = NSForegroundColorAttributeName;
  uint64_t v9 = NSAttachmentAttributeName;
  uint64_t v10 = sub_100057854(inited);
  swift_setDeallocating();
  type metadata accessor for Key(0);
  uint64_t result = swift_arrayDestroy();
  qword_100162E48 = (uint64_t)v10;
  return result;
}

void sub_1000567A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v22 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  int64_t v11 = 0;
  uint64_t v21 = swift_bridgeObjectRetain() + 104;
  if (!v9) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v13 = v12 | (v11 << 6);
LABEL_7:
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)&v25[0] = *(void *)(*(void *)(a1 + 48) + 8 * v13);
  id v15 = *(void **)&v25[0];
  sub_1000105E4(v14 + 32 * v13, (uint64_t)v25 + 8);
  id v16 = v15;
  while (1)
  {
    sub_1000577EC((uint64_t)v25, (uint64_t)&v27);
    os_log_type_t v20 = v27;
    if (!v27)
    {
      swift_release();
      return;
    }
    if (qword_10014BF38 != -1) {
      swift_once();
    }
    if (sub_1000A84A0((uint64_t)v20, qword_100162E48))
    {
      sub_1000121EC((uint64_t)v28);

      if (v9) {
        goto LABEL_6;
      }
    }
    else
    {
      [a5 removeAttribute:v20 range:a2, a3];

      sub_1000121EC((uint64_t)v28);
      if (v9) {
        goto LABEL_6;
      }
    }
LABEL_8:
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      int64_t v19 = v11;
    }
    else
    {
      unint64_t v18 = *(void *)(v22 + 8 * v17);
      if (v18) {
        goto LABEL_11;
      }
      int64_t v19 = v11 + 1;
      if (v11 + 2 < v10)
      {
        unint64_t v18 = *(void *)(v22 + 8 * (v11 + 2));
        if (v18)
        {
          int64_t v17 = v11 + 2;
LABEL_11:
          unint64_t v9 = (v18 - 1) & v18;
          unint64_t v13 = __clz(__rbit64(v18)) + (v17 << 6);
          int64_t v11 = v17;
          goto LABEL_7;
        }
        int64_t v19 = v11 + 2;
        if (v11 + 3 < v10)
        {
          unint64_t v18 = *(void *)(v22 + 8 * (v11 + 3));
          if (v18)
          {
            int64_t v17 = v11 + 3;
            goto LABEL_11;
          }
          int64_t v17 = v11 + 4;
          int64_t v19 = v11 + 3;
          if (v11 + 4 < v10)
          {
            unint64_t v18 = *(void *)(v22 + 8 * v17);
            if (v18) {
              goto LABEL_11;
            }
            while (v10 - 5 != v11)
            {
              unint64_t v18 = *(void *)(v21 + 8 * v11++);
              if (v18)
              {
                int64_t v17 = v11 + 4;
                goto LABEL_11;
              }
            }
            int64_t v19 = v10 - 1;
          }
        }
      }
    }
    unint64_t v9 = 0;
    uint64_t v26 = 0;
    int64_t v11 = v19;
    memset(v25, 0, sizeof(v25));
  }
  __break(1u);
}

uint64_t sub_100056A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100056A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_100057D74((unint64_t *)&qword_10014C528, type metadata accessor for Key);
  uint64_t v9 = sub_1001049B8();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

id sub_100056B04(uint64_t a1, unint64_t a2)
{
  sub_100007E0C(&qword_10014ECC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100108260;
  *(void *)(inited + 32) = NSDocumentTypeDocumentOption;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  sub_10001030C(a1, a2);
  unsigned int v6 = NSDocumentTypeDocumentOption;
  uint64_t v7 = NSRTFTextDocumentType;
  unint64_t v8 = sub_10000B0B8(inited);
  id v9 = objc_allocWithZone((Class)NSAttributedString);
  id v10 = sub_100057A84(a1, a2, v8, 0);
  sub_100010378(a1, a2);
  return v10;
}

id sub_100057014()
{
  id v1 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v1 setAlignment:[v0 alignment]];
  [v0 firstLineHeadIndent];
  [v1 setFirstLineHeadIndent:];
  [v0 headIndent];
  [v1 setHeadIndent:];
  [v1 setBaseWritingDirection:[v0 baseWritingDirection]];
  Class isa = (Class)[v0 textLists];
  if (!isa)
  {
    sub_100008234(0, &qword_10014ECF0);
    sub_100104D28();
    Class isa = sub_100104D18().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 setTextLists:isa];

  return v1;
}

void *sub_100057154(uint64_t a1)
{
  uint64_t v2 = sub_100103AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unsigned int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100007E0C(&qword_10014ED00);
    uint64_t v9 = sub_100105488();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    id v15 = (void (**)(char *, uint64_t))(v11 - 8);
    long long v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100057D74(&qword_10014ED08, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_1001049E8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100057D74(&qword_10014ED10, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_100104A98();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_10005746C(uint64_t a1)
{
  return sub_100057C34(a1, &qword_10014ED20);
}

Swift::Int sub_100057478(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100007E0C(&qword_10014ECF8);
    uint64_t v3 = sub_100105488();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unsigned int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1001058D8();
      swift_bridgeObjectRetain();
      sub_100104BC8();
      Swift::Int result = sub_100105928();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_1001057F8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          unint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_1001057F8();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_10005761C()
{
  unint64_t v0 = sub_100105828();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

uint64_t sub_100057670(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100138C60;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000576BC()
{
  unint64_t result = qword_10014EC98;
  if (!qword_10014EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EC98);
  }
  return result;
}

uint64_t sub_100057710(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100138D70;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_10005775C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100057794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000567A4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_10005779C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000577AC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000577D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000577E4()
{
  return swift_release();
}

uint64_t sub_1000577EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014ECA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100057854(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100007E0C(&qword_10014ECB8);
    uint64_t v3 = sub_100105488();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      Swift::String v6 = *(void **)(v32 + 8 * v4);
      sub_100104B78();
      sub_1001058D8();
      id v7 = v6;
      sub_100104BC8();
      Swift::Int v8 = sub_100105928();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_100104B78();
        uint64_t v17 = v16;
        if (v15 == sub_100104B78() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1001057F8();
        swift_bridgeObjectRelease();
        unint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_100104B78();
          uint64_t v24 = v23;
          if (v22 == sub_100104B78() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1001057F8();
          swift_bridgeObjectRelease();
          unint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

id sub_100057A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa = sub_100103838().super.isa;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_100057D74(&qword_10014C4F8, type metadata accessor for DocumentReadingOptionKey);
  Class v7 = sub_1001049A8().super.isa;
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v8 = [v4 initWithData:isa options:v7 documentAttributes:a4 error:&v12];

  if (v8)
  {
    id v9 = v12;
  }
  else
  {
    id v10 = v12;
    sub_1001036C8();

    swift_willThrow();
  }
  return v8;
}

uint64_t sub_100057BC8(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014D818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Int sub_100057C28(uint64_t a1)
{
  return sub_100057C34(a1, &qword_10014ECE8);
}

Swift::Int sub_100057C34(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100007E0C(a2);
    uint64_t v4 = sub_100105488();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v7 = a1 + 32;
    while (1)
    {
      Swift::UInt v8 = *(unsigned __int8 *)(v7 + v5);
      sub_1001058D8();
      sub_1001058E8(v8);
      Swift::Int result = sub_100105928();
      uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v15 + v11) == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v6 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v8;
      uint64_t v17 = *(void *)(v4 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2) {
        return v4;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100057D74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100057DBC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100007E0C(&qword_10014ED18);
      uint64_t v3 = (void *)sub_100105488();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1001055E8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = sub_1001054D8();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = sub_100105208(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_100008234(0, &qword_10014D5C8);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = sub_100105218();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = sub_100105218();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = sub_100105208(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100008234(0, &qword_10014D5C8);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = sub_100105218();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = sub_100105218();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_100058118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BD078((uint64_t)v4);
  uint64_t v5 = sub_100103818();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100019F70((uint64_t)v4);
    uint64_t v7 = 1;
  }
  else
  {
    sub_100103798();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

void *sub_10005826C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100103978();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    BOOL v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100104918();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100007E0C(&qword_10014E6D8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v16 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  }
  return a1;
}

uint64_t sub_10005843C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_100104918();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_10005853C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  BOOL v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_100104918();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1000586BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100104918();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000588A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_100104918();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_100058A28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_100104918();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_100058C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100058C20);
}

uint64_t sub_100058C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_100007E0C(&qword_10014E6D8);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100058D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100058D5C);
}

uint64_t sub_100058D5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100103978();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100007E0C(&qword_10014E6D8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for StreaksWidgetTimelineEntry()
{
  uint64_t result = qword_10014ED80;
  if (!qword_10014ED80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100058EBC()
{
  sub_100103978();
  if (v0 <= 0x3F)
  {
    sub_100058FA4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100058FA4()
{
  if (!qword_10014ED90)
  {
    sub_100104918();
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10014ED90);
    }
  }
}

uint64_t sub_100058FFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100103978();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100059064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100059074(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_100059074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014E6D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000590DC(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_10014EEF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_10005A69C();
  sub_100105968();
  v8[15] = 0;
  sub_100105778();
  if (!v1)
  {
    v8[14] = 1;
    sub_100105728();
    v8[13] = 2;
    sub_100105728();
    _s9BookAssetC8BookDataVMa(0);
    v8[12] = 3;
    sub_100103978();
    sub_10005A654(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000592E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014EEE8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s9BookAssetC8BookDataVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012154(a1, a1[3]);
  sub_10005A69C();
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v29 = 0;
  *uint64_t v12 = sub_1001056C8();
  v12[1] = v16;
  char v28 = 1;
  v12[2] = sub_100105678();
  uint64_t v12[3] = v17;
  char v27 = 2;
  uint64_t v18 = sub_100105678();
  v21[1] = 0;
  v12[4] = v18;
  v12[5] = v19;
  sub_100103978();
  char v26 = 3;
  sub_10005A654(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  sub_100012290(v13, (uint64_t)v12 + *(int *)(v22 + 28));
  sub_10005A6F0((uint64_t)v12, v23);
  sub_1000121EC((uint64_t)a1);
  return sub_10005A754((uint64_t)v12);
}

uint64_t sub_100059680()
{
  uint64_t result = 0x6449616964656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x726F68747561;
      break;
    case 3:
      uint64_t result = 0x7550664F656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100059714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10005AA80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10005973C(uint64_t a1)
{
  unint64_t v2 = sub_10005A69C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100059778(uint64_t a1)
{
  unint64_t v2 = sub_10005A69C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000597B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000592E4(a1, a2);
}

uint64_t sub_1000597CC(void *a1)
{
  return sub_1000590DC(a1);
}

uint64_t sub_1000597E4()
{
  uint64_t v1 = sub_100007E0C(&qword_10014EF00);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling9BookAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000F6940((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10005A7B0((uint64_t)v3);
    return 0;
  }
  sub_10005A810((uint64_t)v3, (uint64_t)v7);
  sub_100007E0C(&qword_10014EF08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100108250;
  *(void *)(inited + 32) = *((void *)v7 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 24);
  *(void *)(inited + 56) = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10009063C(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100007E0C(&qword_10014D858);
  swift_arrayDestroy();
  sub_10005A754((uint64_t)v7);
  return v9;
}

uint64_t sub_100059A04()
{
  return swift_release();
}

id sub_100059A14()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9BookAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100059A5C()
{
  return _s9BookAssetCMa(0);
}

uint64_t _s9BookAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014EDF8);
}

uint64_t sub_100059A84()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100059AC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_100103978();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v10, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t sub_100059C64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100103978();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_100059D44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v9, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

void *sub_100059E90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_10005A068(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100103978();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_10005A184(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_10005A32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005A340);
}

uint64_t sub_10005A340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10005A3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005A408);
}

uint64_t sub_10005A408(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s9BookAssetC8BookDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014EE60);
}

void sub_10005A4D4()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10005A578()
{
  return swift_retain();
}

uint64_t sub_10005A588(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling9BookAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10005A5A0()
{
  return sub_1000597E4();
}

uint64_t sub_10005A5C4()
{
  return sub_10005A654(&qword_10014EEA0, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_10005A60C()
{
  return sub_10005A654(&qword_10014EEA8, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa);
}

uint64_t sub_10005A654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005A69C()
{
  unint64_t result = qword_10014EEF0;
  if (!qword_10014EEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EEF0);
  }
  return result;
}

uint64_t sub_10005A6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005A754(uint64_t a1)
{
  uint64_t v2 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005A7B0(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014EF00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005A810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9BookAssetC8BookDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s9BookAssetC8BookDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005A940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9BookAssetC8BookDataV10CodingKeysOMa()
{
  return &_s9BookAssetC8BookDataV10CodingKeysON;
}

unint64_t sub_10005A97C()
{
  unint64_t result = qword_10014EF10;
  if (!qword_10014EF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EF10);
  }
  return result;
}

unint64_t sub_10005A9D4()
{
  unint64_t result = qword_10014EF18;
  if (!qword_10014EF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EF18);
  }
  return result;
}

unint64_t sub_10005AA2C()
{
  unint64_t result = qword_10014EF20;
  if (!qword_10014EF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EF20);
  }
  return result;
}

uint64_t sub_10005AA80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7550664F656D6974 && a2 == 0xEE00657361686372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_100105148();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = *(void *)(sub_100007E0C(&qword_10014EF30) - 8);
  v3[9] = v5;
  v3[10] = *(void *)(v5 + 64);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_10005AD7C, 0, 0);
}

uint64_t sub_10005AD7C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)v0[4];
  uint64_t v7 = v0[5];
  sub_10005B540(v0[3], v1);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  v0[12] = v10;
  *(void *)(v10 + 16) = v7;
  sub_10005B6E4(v1, v10 + v9);
  *(void *)(v10 + ((v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  id v11 = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10005AEF4;
  uint64_t v13 = v0[8];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v13, sub_10005B74C, v10, &type metadata for Int);
}

uint64_t sub_10005AEF4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_10005B100;
  }
  else {
    uint64_t v5 = sub_10005B088;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10005B088()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10005B100()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10005B170(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v4 = sub_10005B7EC(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v5 = sub_100105158();

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1)
{
  id v1 = sub_10005B7EC(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v2 = sub_100105158();

  return v2;
}

uint64_t _sSo11NSPredicateC20JournalWidgetsSecureE17entryDateInterval8intervalAB10Foundation0fG0V_tFZ_0()
{
  uint64_t v25 = sub_100103AE8();
  uint64_t v0 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100103978();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v27 = sub_100008234(0, (unint64_t *)&qword_10014C640);
  sub_100007E0C(&qword_10014C648);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100108250;
  sub_100103448();
  sub_100103AB8();
  sub_100103A38();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v25);
  int v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v14, v3);
  Class isa = sub_1001038D8().super.isa;
  v16(v12, v3);
  uint64_t v18 = sub_100008234(0, &qword_10014EF38);
  *(void *)(v15 + 56) = v18;
  unint64_t v19 = sub_10005BB64();
  *(void *)(v15 + 64) = v19;
  *(void *)(v15 + 32) = isa;
  sub_100103438();
  uint64_t v20 = v26;
  sub_100084E80(v26);
  v16(v9, v3);
  uint64_t v21 = v20;
  Class v22 = sub_1001038D8().super.isa;
  v16((char *)v21, v3);
  *(void *)(v15 + 96) = v18;
  *(void *)(v15 + 104) = v19;
  *(void *)(v15 + 72) = v22;
  return sub_100104FB8();
}

uint64_t sub_10005B540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014EF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005B5A8()
{
  uint64_t v1 = *(void *)(sub_100007E0C(&qword_10014EF30) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_100103458();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10005B6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014EF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10005B74C(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_100007E0C(&qword_10014EF30) - 8);
  sub_10005B170(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_10005B7EC(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014EF30);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103458();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = sub_100104B38();
  id v11 = [v9 initWithEntityName:v10];

  sub_10005B540(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10005BB04((uint64_t)v4);
    if (qword_10014BE90 != -1) {
      swift_once();
    }
    [v11 setPredicate:static NSPredicate.validEntries];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_100007E0C(&qword_10014C328);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10010ACF0;
    if (qword_10014BE90 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)static NSPredicate.validEntries;
    *(void *)(v12 + 32) = static NSPredicate.validEntries;
    id v14 = v13;
    *(void *)(v12 + 40) = _sSo11NSPredicateC20JournalWidgetsSecureE17entryDateInterval8intervalAB10Foundation0fG0V_tFZ_0();
    v18[1] = v12;
    sub_100104D48();
    sub_100008234(0, (unint64_t *)&qword_10014C640);
    Class isa = sub_100104D18().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [self andPredicateWithSubpredicates:isa];

    [v11 setPredicate:v16];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t sub_10005BB04(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014EF30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10005BB64()
{
  unint64_t result = qword_10014EF40;
  if (!qword_10014EF40)
  {
    sub_100008234(255, &qword_10014EF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014EF40);
  }
  return result;
}

uint64_t sub_10005BBCC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitStackConfiguration()
{
  return self;
}

uint64_t sub_10005BC30@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v189 = a2;
  uint64_t v155 = a3;
  uint64_t v4 = sub_1001048E8();
  __chkstk_darwin(v4 - 8);
  v150 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v6 - 8);
  uint64_t v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v165 = *(void *)(v161 - 8);
  uint64_t v8 = __chkstk_darwin(v161);
  uint64_t v174 = (uint64_t)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v145 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v151 = (uint64_t)&v145 - v14;
  __chkstk_darwin(v13);
  id v16 = (char *)&v145 - v15;
  uint64_t v17 = sub_100007E0C(&qword_10014E190);
  uint64_t v18 = __chkstk_darwin(v17);
  v164 = (char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v145 - v20;
  uint64_t v181 = sub_100007E0C(&qword_10014E198);
  uint64_t v22 = __chkstk_darwin(v181);
  v177 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v163 = (char *)&v145 - v25;
  __chkstk_darwin(v24);
  uint64_t v190 = (uint64_t)&v145 - v26;
  uint64_t v27 = sub_100103978();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v157 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  v176 = (char *)&v145 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v173 = (char *)&v145 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  id v37 = (char *)&v145 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v148 = (char *)&v145 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v147 = (char *)&v145 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v145 - v43;
  __chkstk_darwin(v42);
  v180 = (char *)&v145 - v45;
  sub_100103948();
  sub_1001038C8();
  uint64_t v46 = sub_10005D0B4((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v191 = v27;
  uint64_t v169 = v46;
  if ((sub_100104A48() & 1) == 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  objc_super v146 = v16;
  v149 = v37;
  v152 = v12;
  uint64_t v47 = *(int *)(v17 + 48);
  uint64_t v48 = v17;
  uint64_t v162 = v17;
  uint64_t v49 = &v21[v47];
  uint64_t v50 = a1;
  uint64_t v51 = *(void (**)(char *))(v28 + 16);
  uint64_t v154 = v21;
  v168 = v50;
  uint64_t v52 = v191;
  v51(v21);
  id v16 = (char *)(v28 + 32);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v188 = v49;
  uint64_t v158 = v44;
  v53(v49, v44, v52);
  uint64_t v54 = v164;
  uint64_t v55 = &v164[*(int *)(v48 + 48)];
  ((void (*)(char *, char *, uint64_t))v51)(v164, v21, v52);
  v185 = v51;
  uint64_t v186 = v28 + 16;
  ((void (*)(char *, char *, uint64_t))v51)(v55, v49, v52);
  uint64_t v56 = (uint64_t)v163;
  v53(v163, v54, v52);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v28 + 8);
  v57(v55, v52);
  uint64_t v58 = &v54[*(int *)(v162 + 48)];
  uint64_t v59 = v154;
  v53(v54, v154, v52);
  v53(v58, v188, v52);
  uint64_t v60 = v56 + *(int *)(v181 + 36);
  v178 = v53;
  uint64_t v179 = v28 + 32;
  v53((char *)v60, v58, v52);
  v183 = v57;
  uint64_t v184 = v28 + 8;
  v57(v54, v52);
  sub_100048B64(v56, v190);
  uint64_t v167 = *(void *)(v189 + 16);
  if (!v167)
  {
    uint64_t v109 = _swiftEmptyArrayStorage;
    id v37 = v153;
    uint64_t v17 = v155;
    uint64_t v110 = _swiftEmptyArrayStorage[2];
    if (v110) {
      goto LABEL_41;
    }
    goto LABEL_51;
  }
  uint64_t v61 = v59;
  uint64_t v62 = 0;
  uint64_t v156 = 0;
  uint64_t v172 = 0;
  uint64_t v63 = (char **)(v189 + 40);
  v182 = _swiftEmptyArrayStorage;
  long long v159 = xmmword_100109290;
  uint64_t v160 = 2;
  uint64_t v175 = 2;
  uint64_t v64 = v180;
  double v66 = v176;
  uint64_t v65 = (uint64_t)v177;
  uint64_t v166 = v28;
  do
  {
    uint64_t v189 = *((unsigned __int8 *)v63 - 8);
    char v68 = *v63;
    v187 = v63;
    v188 = v68;
    if (v62)
    {
      uint64_t v171 = v62;
      id v37 = (char *)(v190 + *(int *)(v181 + 36));
      uint64_t v17 = (uint64_t)v158;
      sub_1001038C8();
      if ((sub_100104A48() & 1) == 0)
      {
        __break(1u);
        goto LABEL_54;
      }
      uint64_t v69 = v162;
      int v70 = &v61[*(int *)(v162 + 48)];
      uint64_t v71 = v191;
      uint64_t v72 = (void (*)(char *, char *, uint64_t))v185;
      ((void (*)(char *, char *, uint64_t))v185)(v61, v37, v191);
      sub_100012510(v190, &qword_10014E198);
      v170 = v70;
      uint64_t v73 = v178;
      v178(v70, (char *)v17, v71);
      uint64_t v74 = v61;
      uint64_t v75 = v164;
      uint64_t v76 = &v164[*(int *)(v69 + 48)];
      v72(v164, v74, v71);
      v72(v76, v70, v71);
      uint64_t v77 = (uint64_t)v163;
      v73(v163, v75, v71);
      unint64_t v78 = v183;
      v183(v76, v71);
      uint64_t v79 = &v75[*(int *)(v69 + 48)];
      v73(v75, v74, v71);
      v73(v79, v170, v71);
      v73((char *)(v77 + *(int *)(v181 + 36)), v79, v71);
      uint64_t v64 = v180;
      uint64_t v80 = v75;
      uint64_t v61 = v74;
      uint64_t v65 = (uint64_t)v177;
      v78(v80, v71);
      sub_100048B64(v77, v190);
      double v66 = v176;
      uint64_t v62 = v171;
    }
    uint64_t v81 = v190;
    char v82 = sub_1001038F8();
    uint64_t v83 = v81;
    unint64_t v84 = (unint64_t)v182;
    if (v82)
    {
LABEL_13:
      uint64_t v92 = v61;
      uint64_t v93 = v173;
      uint64_t v94 = v191;
      unint64_t v95 = (void (*)(char *, char *, uint64_t))v185;
      ((void (*)(char *, uint64_t, uint64_t))v185)(v173, v83, v191);
      uint64_t v96 = v175;
      uint64_t v98 = (uint64_t)v188;
      uint64_t v97 = v189;
      if (!v62) {
        uint64_t v96 = v189;
      }
      uint64_t v175 = v96;
      char v99 = (char *)v172;
      if (!v62) {
        char v99 = v188;
      }
      uint64_t v172 = (uint64_t)v99;
      uint64_t v100 = v157;
      v95(v157, v93, v94);
      if (!v98) {
        uint64_t v97 = 2;
      }
      uint64_t v101 = (int *)v161;
      uint64_t v102 = v174;
      uint64_t v103 = v174 + *(int *)(v161 + 28);
      uint64_t v104 = sub_100104918();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v103, 1, 1, v104);
      v178((char *)v102, v100, v94);
      uint64_t v105 = (uint64_t *)(v102 + v101[5]);
      *uint64_t v105 = v97;
      v105[1] = v98;
      *(_OWORD *)(v102 + v101[6]) = v159;
      *(unsigned char *)(v102 + v101[8]) = 1;
      *(unsigned char *)(v102 + v101[9]) = 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v84 = sub_1000B79D4(0, *(void *)(v84 + 16) + 1, 1, v84);
      }
      unint64_t v107 = *(void *)(v84 + 16);
      unint64_t v106 = *(void *)(v84 + 24);
      uint64_t v61 = v92;
      uint64_t v65 = (uint64_t)v177;
      if (v107 >= v106 >> 1) {
        unint64_t v84 = sub_1000B79D4(v106 > 1, v107 + 1, 1, v84);
      }
      uint64_t v64 = v180;
      id v16 = v168;
      *(void *)(v84 + 16) = v107 + 1;
      unint64_t v108 = (*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80);
      v182 = (void *)v84;
      sub_10005D0FC(v174, v84 + v108 + *(void *)(v165 + 72) * v107);
      int v67 = v173;
      uint64_t v160 = v189;
      uint64_t v156 = v188;
      uint64_t v28 = v166;
      double v66 = v176;
      goto LABEL_5;
    }
    uint64_t v85 = v65;
    uint64_t v86 = v190;
    uint64_t v87 = v191;
    char v88 = sub_100104A48();
    ((void (*)(char *, char *, uint64_t))v185)(v66, v64, v87);
    uint64_t v89 = v86;
    uint64_t v65 = v85;
    sub_10005CF8C(v89, v85);
    if ((v88 & 1) == 0)
    {
      sub_100012510(v85, &qword_10014E198);
      int v67 = v66;
      uint64_t v28 = v166;
      id v16 = v168;
LABEL_5:
      v183(v67, v191);
      goto LABEL_6;
    }
    uint64_t v90 = v191;
    char v91 = sub_100104A28();
    sub_100012510(v65, &qword_10014E198);
    v183(v66, v90);
    uint64_t v83 = (uint64_t)v64;
    id v16 = v168;
    if (v91) {
      goto LABEL_13;
    }
    uint64_t v28 = v166;
LABEL_6:
    ++v62;
    uint64_t v63 = v187 + 2;
  }
  while (v167 != v62);
  if (v175 == 2)
  {
    uint64_t v17 = v155;
    id v37 = v153;
    goto LABEL_38;
  }
  char v111 = sub_1001038F8();
  uint64_t v17 = v155;
  id v37 = v153;
  if (v111)
  {
    double v112 = v147;
    uint64_t v113 = v191;
    ((void (*)(char *, char *, uint64_t))v185)(v147, v64, v191);
    uint64_t v114 = v172;
    if (v172) {
      uint64_t v115 = v175;
    }
    else {
      uint64_t v115 = 2;
    }
    uint64_t v116 = (int *)v161;
    uint64_t v117 = (uint64_t)v146;
    uint64_t v118 = &v146[*(int *)(v161 + 28)];
    uint64_t v119 = sub_100104918();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v118, 1, 1, v119);
    v178((char *)v117, v112, v113);
    uint64_t v120 = (uint64_t *)(v117 + v116[5]);
    *uint64_t v120 = v115;
    v120[1] = v114;
    *(_OWORD *)(v117 + v116[6]) = v159;
    *(unsigned char *)(v117 + v116[8]) = 1;
    *(unsigned char *)(v117 + v116[9]) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v182 = (void *)sub_1000B79D4(0, v182[2] + 1, 1, (unint64_t)v182);
    }
    unint64_t v122 = v182[2];
    unint64_t v121 = v182[3];
    uint64_t v123 = v160;
    if (v122 >= v121 >> 1) {
      v182 = (void *)sub_1000B79D4(v121 > 1, v122 + 1, 1, (unint64_t)v182);
    }
    uint64_t v124 = v182;
    v182[2] = v122 + 1;
    sub_10005D0FC(v117, (uint64_t)v124+ ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80))+ *(void *)(v165 + 72) * v122);
    uint64_t v17 = v155;
  }
  else
  {
LABEL_38:
    uint64_t v123 = v160;
  }
  if (v123 != 2)
  {
    uint64_t v133 = v191;
    uint64_t v134 = v148;
    ((void (*)(char *, uint64_t, uint64_t))v185)(v148, v190 + *(int *)(v181 + 36), v191);
    uint64_t v135 = (uint64_t)v156;
    if (v156) {
      uint64_t v136 = v123;
    }
    else {
      uint64_t v136 = 2;
    }
    uint64_t v137 = (int *)v161;
    uint64_t v138 = v151;
    uint64_t v139 = v151 + *(int *)(v161 + 28);
    uint64_t v140 = sub_100104918();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v139, 1, 1, v140);
    v178((char *)v138, v134, v133);
    unint64_t v141 = (uint64_t *)(v138 + v137[5]);
    *unint64_t v141 = v136;
    v141[1] = v135;
    *(_OWORD *)(v138 + v137[6]) = v159;
    *(unsigned char *)(v138 + v137[8]) = 1;
    *(unsigned char *)(v138 + v137[9]) = 0;
    id v16 = (char *)v182;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_48:
      unint64_t v143 = *((void *)v16 + 2);
      unint64_t v142 = *((void *)v16 + 3);
      uint64_t v109 = v16;
      uint64_t v28 = v166;
      if (v143 >= v142 >> 1) {
        uint64_t v109 = (void *)sub_1000B79D4(v142 > 1, v143 + 1, 1, (unint64_t)v16);
      }
      v109[2] = v143 + 1;
      sub_10005D0FC(v151, (uint64_t)v109+ ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80))+ *(void *)(v165 + 72) * v143);
      uint64_t v110 = v109[2];
      if (v110) {
        goto LABEL_41;
      }
LABEL_51:
      sub_100012510(v190, &qword_10014E198);
      swift_bridgeObjectRelease();
      v183(v180, v191);
LABEL_52:
      uint64_t v144 = sub_100007E0C(&qword_10014D7D8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v17, 1, 1, v144);
    }
LABEL_55:
    id v16 = (char *)sub_1000B79D4(0, *((void *)v16 + 2) + 1, 1, (unint64_t)v16);
    goto LABEL_48;
  }
  uint64_t v109 = v182;
  uint64_t v110 = v182[2];
  if (!v110) {
    goto LABEL_51;
  }
LABEL_41:
  uint64_t v125 = (uint64_t)v152;
  sub_10005CFF4((uint64_t)v109+ ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80))+ *(void *)(v165 + 72) * (v110 - 1), (uint64_t)v152);
  uint64_t v126 = v191;
  ((void (*)(char *, uint64_t, uint64_t))v185)(v37, v125, v191);
  sub_10005D058(v125);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v37, 0, 1, v126);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v37, 1, v126) == 1)
  {
    sub_100012510(v190, &qword_10014E198);
    swift_bridgeObjectRelease();
    v183(v180, v191);
    sub_100012510((uint64_t)v37, (uint64_t *)&unk_100151950);
    goto LABEL_52;
  }
  uint64_t v127 = v149;
  uint64_t v128 = v37;
  uint64_t v129 = v191;
  v178(v149, v128, v191);
  sub_1001048C8();
  sub_10005D0B4(qword_10014D788, (void (*)(uint64_t))type metadata accessor for StreaksWidgetTimelineEntry);
  sub_100104978();
  uint64_t v130 = v183;
  v183(v127, v129);
  sub_100012510(v190, &qword_10014E198);
  v130(v180, v129);
  uint64_t v131 = sub_100007E0C(&qword_10014D7D8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v17, 0, 1, v131);
}

uint64_t type metadata accessor for JournalWidgetDemoMode()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JournalWidgetDemoMode.TimelineEntryAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005CEFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalWidgetDemoMode.TimelineEntryAppearance()
{
  return &type metadata for JournalWidgetDemoMode.TimelineEntryAppearance;
}

unint64_t sub_10005CF38()
{
  unint64_t result = qword_10014F0A0;
  if (!qword_10014F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F0A0);
  }
  return result;
}

uint64_t sub_10005CF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014E198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005CFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreaksWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005D058(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreaksWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005D0B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005D0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreaksWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005D160()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014F0A8);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_10014F0A8);
  if (qword_10014BF80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F58);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10005D228(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  return _swift_task_switch(sub_10005D24C, 0, 0);
}

uint64_t sub_10005D24C()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  *(CFAbsoluteTime *)(v0 + 24) = CFAbsoluteTimeGetCurrent();
  double v2 = sub_1000415A0(v1);
  double v4 = v3;
  sub_1000415A0(v1);
  double v6 = -116.0;
  if (v1 != 5) {
    double v6 = -16.0;
  }
  if (v1 == 2) {
    double v6 = -70.0;
  }
  double v7 = (v6 + v5) * 0.5;
  *(double *)(v0 + 32) = v4;
  *(double *)(v0 + 40) = v2;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10005D34C;
  return sub_10005D830(v2, v4, v7);
}

uint64_t sub_10005D34C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10005D44C, 0, 0);
}

uint64_t sub_10005D44C()
{
  sub_10005D4B8(v0[2]);
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[7];
  return v1(v2);
}

void sub_10005D4B8(uint64_t a1)
{
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_100105498(83);
  v12._object = (void *)0x8000000100112260;
  v12._countAndFlagsBits = 0xD000000000000021;
  sub_100104BE8(v12);
  type metadata accessor for CGSize(0);
  sub_100105598();
  v13._countAndFlagsBits = 0x497465737361202CLL;
  v13._object = (void *)0xEB00000000203A64;
  sub_100104BE8(v13);
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_id);
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_id + 8);
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v2;
  v14._object = v3;
  sub_100104BE8(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x73746E696F70202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  sub_100104BE8(v15);
  if (*(void *)(a1 + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1001055E8();
    swift_bridgeObjectRelease();
  }
  v16._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x6574756365786520;
  v17._object = (void *)0xED0000206E692064;
  sub_100104BE8(v17);
  CFAbsoluteTimeGetCurrent();
  sub_100104E88();
  v18._countAndFlagsBits = 0x73646E6F63657320;
  v18._object = (void *)0xE800000000000000;
  sub_100104BE8(v18);
  uint64_t v5 = v10;
  unint64_t v4 = v11;
  if (qword_10014BF40 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100103DB8();
  sub_100007D30(v6, (uint64_t)qword_10014F0A8);
  swift_bridgeObjectRetain();
  double v7 = sub_100103D98();
  os_log_type_t v8 = sub_100105018();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000456B4(v5, v4, &v10);
    sub_1001052C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10005D830(double a1, double a2, double a3)
{
  *(void *)(v4 + 168) = v3;
  *(double *)(v4 + 152) = a2;
  *(double *)(v4 + 160) = a3;
  *(double *)(v4 + 144) = a1;
  sub_100104E38();
  *(void *)(v4 + 176) = sub_100104E28();
  uint64_t v6 = sub_100104DE8();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 192) = v5;
  return _swift_task_switch(sub_10005D8D0, v6, v5);
}

uint64_t sub_10005D8D0()
{
  if (((void)v0[18] & 0x7FFFFFFFFFFFFFFFLL) != 0 && ((void)v0[19] & 0x7FFFFFFFFFFFFFFFLL) != 0 && v0[20] > 0.0)
  {
    unint64_t v1 = *(void *)(*((void *)v0 + 21) + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1001055E8();
      if (!v2) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_19;
      }
    }
    uint64_t v3 = sub_1000C3CF8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_1001054D8();
      }
      else {
        id v7 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      [v7 coordinate];
      MKMapPoint v9 = MKMapPointForCoordinate(v27);

      double v11 = _swiftEmptyArrayStorage[2];
      double v10 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v11 >= *(void *)&v10 >> 1) {
        sub_1000C3CF8(*(void *)&v10 > 1uLL, *(void *)&v11 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v11 + 1;
      *(MKMapPoint *)&_swiftEmptyArrayStorage[2 * *(void *)&v11 + 4] = v9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    *((void *)v0 + 25) = _swiftEmptyArrayStorage;
    CGFloat v15 = v0[19];
    double v14 = v0[20];
    CGFloat v16 = v0[18];
    Swift::String v17 = (double *)swift_bridgeObjectRetain();
    double v18 = sub_1000606A8(v17, v16, v15, v14);
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v25 = swift_task_alloc();
    *((void *)v0 + 26) = v25;
    *(void *)uint64_t v25 = v0;
    *(void *)(v25 + 8) = sub_10005DB90;
    *(_OWORD *)(v25 + 48) = *((_OWORD *)v0 + 9);
    *(void *)(v25 + 32) = v22;
    *(void *)(v25 + 40) = v24;
    *(double *)(v25 + 16) = v18;
    *(void *)(v25 + 24) = v20;
    uint64_t v3 = (uint64_t)sub_100060C50;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    return _swift_task_switch(v3, v4, v5);
  }
  swift_release();
  Swift::String v12 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v12(0);
}

uint64_t sub_10005DB90(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  return _swift_task_switch(sub_10005DCB8, v4, v3);
}

uint64_t sub_10005DCB8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_mapSnapshotter;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_mapSnapshotter);
  if (v3)
  {
    [v3 cancel];
    uint64_t v4 = *(void **)(v1 + v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v0[27];
  *(void *)(v1 + v2) = 0;

  id v6 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v5];
  id v7 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v6;

  uint64_t v8 = *(void **)(v1 + v2);
  v0[28] = v8;
  if (v8)
  {
    uint64_t v9 = qword_10014C030;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1001630C0;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_10005DEC0;
    uint64_t v12 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10005E414;
    v0[13] = &unk_10013B078;
    v0[14] = v12;
    [v10 startWithQueue:v11 completionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    Swift::String v13 = (void *)v0[27];
    swift_release();

    swift_bridgeObjectRelease();
    double v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
}

uint64_t sub_10005DEC0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  if (v2) {
    uint64_t v5 = sub_10005E118;
  }
  else {
    uint64_t v5 = sub_10005DFF0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005DFF0()
{
  uint64_t v1 = (void *)v0[28];
  swift_release();
  uint64_t v2 = (void *)v0[15];

  uint64_t v3 = (void *)v0[27];
  uint64_t v4 = v0[25];
  if (v2)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    id v6 = self;
    id v7 = v2;
    id v8 = [v6 polylineWithPoints:v4 + 32 count:v5];
    swift_bridgeObjectRelease();
    [v3 mapRect];
    unint64_t v13 = sub_100060F74(v8, v7, v9, v10, v11, v12);
  }
  else
  {

    swift_bridgeObjectRelease();
    unint64_t v13 = 0;
  }
  double v14 = (uint64_t (*)(unint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_10005E118()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[28];
  swift_release();
  swift_willThrow();

  if (qword_10014BF40 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = sub_100103DB8();
  sub_100007D30(v3, (uint64_t)qword_10014F0A8);
  id v4 = v2;
  swift_errorRetain();
  id v5 = v4;
  swift_errorRetain();
  id v6 = sub_100103D98();
  os_log_type_t v7 = sub_100104FF8();
  BOOL v8 = os_log_type_enabled(v6, v7);
  double v9 = (void *)v0[27];
  CGFloat v10 = (char *)v0[21];
  if (v8)
  {
    double v18 = (void *)v0[27];
    uint64_t v11 = swift_slowAlloc();
    double v12 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_id];
    unint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_id + 8];
    swift_bridgeObjectRetain();
    v0[16] = sub_1000456B4(v14, v13, &v19);
    sub_1001052C8();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v15;
    sub_1001052C8();
    *double v12 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "RouteMapGenerator [assetId: %s]: error generating snapshot: %@", (uint8_t *)v11, 0x16u);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t sub_10005E414(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100007E0C(&qword_10014E260);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

void sub_10005E4D4(void *a1, id a2, char a3, uint64_t a4, uint64_t a5, CLLocationDegrees a6, CLLocationDegrees a7, double a8, double a9, double a10, double a11, CLLocationDegrees a12, CLLocationDegrees a13)
{
  v49.latitude = a12;
  v49.longitude = a13;
  id v24 = [a2 image];
  [v24 size];
  double v26 = v25;

  id v27 = [a2 image];
  [v27 size];
  double v29 = v28;

  id v30 = [a2 image];
  [v30 drawInRect:0.0, 0.0, v26, v29];

  id v50 = sub_10006144C(0, a3);
  double v31 = 2.0;
  if ((a3 - 2) <= 3u) {
    double v31 = dbl_10010AF30[(char)(a3 - 2)];
  }
  uint64_t v32 = OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates;
  unint64_t v33 = *(void *)(a4 + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (v36 == 1) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t v37 = *(void *)(a4 + v32);
    uint64_t v38 = (objc_class *)type metadata accessor for WorkoutGradientPathRenderer();
    uint64_t v39 = (char *)objc_allocWithZone(v38);
    *(void *)&v39[OBJC_IVAR____TtC20JournalWidgetsSecure27WorkoutGradientPathRenderer_routeCoordinates] = v37;
    v51.receiver = v39;
    v51.super_class = v38;
    swift_bridgeObjectRetain();
    uint64_t v40 = (CGContext *)[v51 initWithOverlay:a5];
    uint64_t v41 = (CGContext *)[a1 CGContext];
    id v42 = a2;
    sub_100061868(v41, v40, v42, a8, a9, a10, a11, v31);

    uint64_t v43 = (CGContext *)[a1 CGContext];
    CGContextStrokePath(v43);

    id v44 = sub_10006144C(1, a3);
    MKMapPoint v45 = MKMapPointForCoordinate(v49);
    uint64_t v46 = (CGContext *)[a1 CGContext];
    sub_100061758(v44, v42, v46, v45.x, v45.y);

    v54.latitude = a6;
    v54.longitude = a7;
    MKMapPoint v47 = MKMapPointForCoordinate(v54);
    uint64_t v48 = (CGContext *)[a1 CGContext];
    sub_100061758(v50, v42, v48, v47.x, v47.y);

    return;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
    goto LABEL_9;
  }
LABEL_5:
  v53.latitude = a6;
  v53.longitude = a7;
  MKMapPoint v34 = MKMapPointForCoordinate(v53);
  uint64_t v35 = (CGContext *)[a1 CGContext];
  sub_100061758(v50, a2, v35, v34.x, v34.y);
}

void sub_10005E864(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_10005E8B0()
{
  off_10014F0C0 = &_swiftEmptyDictionarySingleton;
}

uint64_t type metadata accessor for RouteMapGenerator()
{
  return self;
}

uint64_t type metadata accessor for WorkoutStartLocationAnnotation()
{
  return self;
}

uint64_t type metadata accessor for WorkoutEndLocationAnnotation()
{
  return self;
}

void sub_10005EA0C()
{
  off_10014F0C8 = &_swiftEmptyDictionarySingleton;
}

void (*sub_10005EA20(void *a1, unsigned __int8 a2))(void *a1)
{
  id v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_100060380(v4, a2);
  return sub_10005EA80;
}

void sub_10005EA80(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

id sub_10005EACC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v5[OBJC_IVAR____TtC20JournalWidgetsSecure29WorkoutLocationAnnotationView_assetSizeType] = a4;
  if (a3)
  {
    NSString v10 = sub_100104B38();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v20.receiver = v5;
  v20.super_class = ObjectType;
  [super initWithAnnotation:a1 reuseIdentifier:v10];

  double v12 = 7.0;
  if ((a4 - 2) <= 3u) {
    double v12 = dbl_10010AF50[(char)(a4 - 2)];
  }
  id v13 = v11;
  [v13 setFrame:0.0, 0.0, v12, v12];
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = [v14 clearColor];
  [v15 setBackgroundColor:v16];

  [v15 setCanShowCallout:1];
  if (!a1) {
    goto LABEL_11;
  }
  type metadata accessor for WorkoutStartLocationAnnotation();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for WorkoutEndLocationAnnotation();
    if (swift_dynamicCastClass())
    {
      id v17 = (id)HKUIStandardMapRedColor();
      goto LABEL_12;
    }
LABEL_11:
    id v17 = [v14 whiteColor];
    goto LABEL_12;
  }
  id v17 = (id)HKUIStandardMapGreenColor();
LABEL_12:
  id v18 = v17;
  [v15 setTintColor:v18];

  swift_unknownObjectRelease();
  return v15;
}

void sub_10005ECF0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v9 = UIGraphicsGetCurrentContext();
  if (v9)
  {
    CGFloat v10 = 1.0;
    if ((v4[OBJC_IVAR____TtC20JournalWidgetsSecure29WorkoutLocationAnnotationView_assetSizeType] - 2) <= 3u) {
      CGFloat v10 = dbl_10010AF70[(char)(v4[OBJC_IVAR____TtC20JournalWidgetsSecure29WorkoutLocationAnnotationView_assetSizeType]
    }
                               - 2)];
    c = v9;
    CGContextSetLineWidth(v9, v10);
    id v11 = [v4 tintColor];
    if (v11)
    {
      double v12 = v11;
      id v13 = (CGColor *)[v11 CGColor];

      CGContextSetFillColorWithColor(c, v13);
      id v14 = [self whiteColor];
      id v15 = (CGColor *)[v14 CGColor];

      CGContextSetStrokeColorWithColor(c, v15);
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRect v19 = CGRectInset(v18, v10, v10);
      CGContextAddEllipseInRect(c, v19);
      CGContextDrawPath(c, kCGPathFillStroke);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for WorkoutLocationAnnotationView()
{
  return self;
}

void sub_10005F090(CGContext *a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, CGFloat a8)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  v22.a = 1.0;
  v22.b = 0.0;
  v22.c = 0.0;
  v22.d = 1.0;
  v22.tx = 0.0;
  v22.ty = 0.0;
  v24.x = a3;
  v24.y = a4;
  sub_100105028(v24, &v22);
  v25.x = a5;
  v25.y = a6;
  sub_100105038(v25, &v22);
  if (a2)
  {
    sub_100007E0C(&qword_10014F1F0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100108250;
    *(void *)(v16 + 32) = 0;
    *(CGFloat *)(v16 + 40) = a8 + a8;
    id v17 = (const CGPath *)sub_100105238();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v17);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    id v18 = [self grayColor];
    CGRect v19 = (CGColor *)[v18 CGColor];

    CGContextSetStrokeColorWithColor(a1, v19);
    CGPathDrawingMode v20 = kCGPathStroke;
  }
  else
  {
    id v17 = (const CGPath *)sub_100105248();
    CGContextAddPath(a1, v17);
    CGRect v19 = (CGColor *)sub_10005F27C(a7);
    CGContextSetFillColorWithColor(a1, v19);
    CGPathDrawingMode v20 = kCGPathFill;
  }

  CGContextDrawPath(a1, v20);
}

uint64_t sub_10005F27C(double a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure27WorkoutGradientPathRenderer_routeCoordinates);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1001055E8();
  if (!v4) {
    goto LABEL_34;
  }
LABEL_3:
  uint64_t result = sub_1000C3D20(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)sub_1001054D8();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      id v8 = v7;
      [v7 speed];
      double v10 = v9;

      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_1000C3D20(v11 > 1, v12 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13)
    {
LABEL_12:
      double v14 = _swiftEmptyArrayStorage[4];
      uint64_t v15 = v13 - 1;
      if (v13 != 1)
      {
        uint64_t v16 = &_swiftEmptyArrayStorage[5];
        do
        {
          double v17 = *v16++;
          double v18 = v17;
          if (v17 < v14) {
            double v14 = v18;
          }
          --v15;
        }
        while (v15);
      }
      double v19 = (double)v13;
      if ((unint64_t)v13 >= 4)
      {
        uint64_t v20 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        float64x2_t v22 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0);
        uint64_t v23 = (float64x2_t *)&_swiftEmptyArrayStorage[6];
        double v21 = 0.0;
        uint64_t v24 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v25 = vdivq_f64(v23[-1], v22);
          float64x2_t v26 = vdivq_f64(*v23, v22);
          double v21 = v21 + v25.f64[0] + v25.f64[1] + v26.f64[0] + v26.f64[1];
          v23 += 2;
          v24 -= 4;
        }
        while (v24);
        if (v13 == v20)
        {
LABEL_24:
          double v30 = _swiftEmptyArrayStorage[4];
          uint64_t v31 = v13 - 1;
          if (v31)
          {
            uint64_t v32 = &_swiftEmptyArrayStorage[5];
            do
            {
              double v33 = *v32++;
              double v34 = v33;
              if (v30 < v33) {
                double v30 = v34;
              }
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease();
          if (v21 * 0.9 >= a1)
          {
            if (a1 < 0.0 || v21 == 0.0) {
              goto LABEL_41;
            }
LABEL_39:
            double v35 = (a1 - v14) / (v30 - v14);
            if (v35 >= 0.5)
            {
              double v41 = v35 + -0.5 + v35 + -0.5;
              double v37 = round(v41 * -179.0 + 255.0);
              double v38 = round(v41 * 13.0 + 204.0);
              double v39 = v41 * 100.0 + 0.0;
            }
            else
            {
              double v36 = v35 + v35;
              double v37 = round(v36 * 0.0 + 255.0);
              double v38 = round(v36 * 145.0 + 59.0);
              double v39 = 48.0 - v36 * 48.0;
            }
            id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:v37 / 255.0 green:v38 / 255.0 blue:round(v39) / 255.0 alpha:0.85];
            goto LABEL_44;
          }
LABEL_36:
          if (a1 < 0.0 || v21 == 0.0 || v21 * 1.1 > a1) {
            goto LABEL_41;
          }
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
      }
      uint64_t v27 = v13 - v20;
      double v28 = &_swiftEmptyArrayStorage[v20 + 4];
      do
      {
        double v29 = *v28++;
        double v21 = v21 + v29 / v19;
        --v27;
      }
      while (v27);
      goto LABEL_24;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    double v21 = 0.0;
    double v14 = 0.0;
    double v30 = 0.0;
    if (a1 <= 0.0)
    {
LABEL_41:
      id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
LABEL_44:
      id v42 = v40;
      id v43 = [v40 CGColor];

      return (uint64_t)v43;
    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id sub_10005F6E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientPathRenderer();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutGradientPathRenderer()
{
  return self;
}

unint64_t sub_10005F748(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_100105398();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        double v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_100104B78();
        sub_1001058D8();
        id v11 = v10;
        sub_100104BC8();
        Swift::Int v12 = sub_100105928();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          double v18 = (_OWORD *)(v17 + 32 * v3);
          double v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            _OWORD *v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10005F93C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_100105398();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1001058D8();
        sub_100104BC8();
        swift_bridgeObjectRelease();
        uint64_t result = sub_100105928();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          id v11 = (unsigned char *)(v10 + v3);
          Swift::Int v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            unsigned char *v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x10005FBACLL);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

_OWORD *sub_10005FBC4(_OWORD *a1, void *a2, char a3)
{
  return sub_10005FC6C(a1, a2, a3, (uint64_t (*)(void *))sub_10000B72C, (void (*)(void))sub_10000EC5C, (void (*)(void))sub_10000BF5C, type metadata accessor for AttributeName);
}

_OWORD *sub_10005FC18(_OWORD *a1, void *a2, char a3)
{
  return sub_10005FC6C(a1, a2, a3, (uint64_t (*)(void *))sub_10000B72C, (void (*)(void))sub_10000EC68, (void (*)(void))sub_10000BF68, type metadata accessor for TraitKey);
}

_OWORD *sub_10005FC6C(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), void (*a6)(void), void (*a7)(void))
{
  Swift::Int v12 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = a4(a2);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a3 & 1) == 0)
  {
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    uint64_t v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      unint64_t v17 = v26;
      uint64_t v23 = *v12;
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a7(0);
    uint64_t result = (_OWORD *)sub_100105878();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v23 = *v12;
  if (v21)
  {
LABEL_8:
    BOOL v24 = (_OWORD *)(v23[7] + 32 * v17);
    sub_1000121EC((uint64_t)v24);
    return sub_1000103D0(a1, v24);
  }
LABEL_13:
  sub_100060318(v17, (uint64_t)a2, a1, v23);

  return a2;
}

void sub_10005FDEC(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10000B844(a3, a4);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_10000EC74();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = (double *)(v18[6] + 16 * v12);
    *uint64_t v22 = a3;
    v22[1] = a4;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      void v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_10000C2AC(v15, a2 & 1);
  unint64_t v20 = sub_10000B844(a3, a4);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CGSize(0);
  sub_100105878();
  __break(1u);
}

uint64_t sub_10005FF2C(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10000B5B8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10000EE1C();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_10000C5A8(result, a3 & 1);
  uint64_t result = sub_10000B5B8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_100105878();
  __break(1u);
  return result;
}

void sub_100060064(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10000B8D0(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10000EFC0();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      _OWORD v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_10000C78C(v13, a3 & 1);
  unint64_t v18 = sub_10000B8D0(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_100105878();
  __break(1u);
}

_OWORD *sub_10006019C(_OWORD *a1, void *a2, char a3)
{
  return sub_10005FC6C(a1, a2, a3, (uint64_t (*)(void *))sub_10000BB28, (void (*)(void))sub_10000F93C, (void (*)(void))sub_10000D6F0, type metadata accessor for Key);
}

unint64_t sub_1000601F0(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_100060238(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100060270(a1, a2, a3, a4, _s14descr100137F61O4YearVMa, _s14descr100137F61O4YearVMa);
}

uint64_t sub_100060254(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100060270(a1, a2, a3, a4, _s14descr100137F61O5MonthVMa, _s14descr100137F61O5MonthVMa);
}

uint64_t sub_100060270(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_100062258(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

_OWORD *sub_100060318(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1000103D0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void (*sub_100060380(void *a1, unsigned __int8 a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_10006066C(v4);
  v4[9] = sub_100060470((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_100060410;
}

void sub_100060410(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

unint64_t (*sub_100060470(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result, char a2)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10000B5B8(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_100060594;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10000EE1C();
      goto LABEL_7;
    }
    sub_10000C5A8(v13, a3 & 1);
    unint64_t v17 = sub_10000B5B8(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t, char))sub_100105878();
  __break(1u);
  return result;
}

unint64_t sub_100060594(unint64_t result, char a2)
{
  uint64_t v2 = *(void *)result;
  LOBYTE(v3) = *(unsigned char *)(result + 25);
  if (a2)
  {
    if (!v2) {
      goto LABEL_10;
    }
    unint64_t v4 = *(void *)(result + 16);
    uint64_t v5 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25))
    {
LABEL_9:
      *(void *)(v5[7] + 8 * v4) = v2;
      return result;
    }
    char v6 = *(unsigned char *)(result + 24);
    v5[(v4 >> 6) + 8] |= 1 << v4;
    *(unsigned char *)(v5[6] + v4) = v6;
    uint64_t v3 = v5[7];
    *(void *)(v3 + 8 * v4) = v2;
    uint64_t v7 = v5[2];
    BOOL v8 = __OFADD__(v7, 1);
    uint64_t v2 = v7 + 1;
    if (!v8) {
      goto LABEL_14;
    }
    __break(1u);
  }
  if (!v2)
  {
LABEL_10:
    if (v3) {
      return sub_10005F93C(*(void *)(result + 16), **(void **)(result + 8));
    }
    return result;
  }
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = **(void ***)(result + 8);
  if (v3) {
    goto LABEL_9;
  }
  char v9 = *(unsigned char *)(result + 24);
  v5[(v4 >> 6) + 8] |= 1 << v4;
  *(unsigned char *)(v5[6] + v4) = v9;
  *(void *)(v5[7] + 8 * v4) = v2;
  uint64_t v10 = v5[2];
  BOOL v8 = __OFADD__(v10, 1);
  uint64_t v2 = v10 + 1;
  if (!v8)
  {
LABEL_14:
    _OWORD v5[2] = v2;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_10006066C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_10006069C;
}

uint64_t sub_10006069C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

double sub_1000606A8(double *a1, CGFloat a2, CGFloat a3, double a4)
{
  double v7 = 0.0;
  v52.origin.CGFloat x = 0.0;
  v52.origin.y = 0.0;
  v52.size.width = a2;
  v52.size.height = a3;
  CGFloat v8 = CGRectGetWidth(v52) * 0.5;
  CGFloat v10 = v8 + 0.0 - (0.0 - v8);
  v53.origin.y = 0.0;
  v53.origin.CGFloat x = 0.0 - v8;
  CGFloat x = v53.origin.x;
  v53.size.width = v10;
  v53.size.height = a3;
  CGFloat Height = CGRectGetHeight(v53);
  char v12 = sub_100071C60(x, 0.0 - Height * 0.5, v10, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
  uint64_t v13 = *((void *)a1 + 2);
  double v14 = 0.0;
  double v15 = 0.0;
  double v16 = 0.0;
  if (v13)
  {
    double v15 = a1[4];
    double v16 = a1[5];
    uint64_t v17 = (uint64_t)&a1[2 * v13 + 4];
    double v7 = *(double *)(v17 - 16);
    double v14 = *(double *)(v17 - 8);
  }
  double v50 = v16;
  double v51 = v15;
  id v18 = [self polylineWithPoints:a1 + 4 count:v13];
  swift_bridgeObjectRelease();
  [v18 boundingMapRect];
  double v22 = v21;
  double v24 = v23;
  double v25 = v19;
  double v26 = v20;
  if (a2 >= 1.0 && a3 >= 1.0)
  {
    double v45 = sqrt(v19 * v19 + v20 * v20) * 0.5;
    double rect2 = v14;
    double v27 = 8.0;
    switch(v12)
    {
      case 2:
        double v27 = 35.0;
        goto LABEL_7;
      case 5:
        swift_bridgeObjectRelease();
        double v30 = v45 / (a4 + -20.0);
        double v33 = v30 * a4;
        double v49 = v30 * a2;
        double v44 = v33;
        double v46 = v30 * a3;
        double v32 = v30 * 58.0;
        double v34 = 24.0;
        break;
      default:
LABEL_7:
        double v43 = v27;
        char v28 = sub_1001057F8();
        swift_bridgeObjectRelease();
        double v29 = 20.0;
        if (v28)
        {
LABEL_17:
          double v30 = v45 / (a4 - v29);
          double v38 = v30 * a4;
          double v39 = v30 * a2;
          double v32 = v43 * v30;
          double v49 = v39;
          double v44 = v38;
          double v46 = v30 * a3;
          switch(v12)
          {
            case 5:
              double v34 = 24.0;
              break;
            case 4:
              double v34 = 4.0;
              break;
            case 2:
              double v34 = 12.0;
              break;
            default:
LABEL_21:
              double v34 = 7.0;
              break;
          }
        }
        else
        {
          switch(v12)
          {
            case 1:
            case 2:
            case 3:
            case 4:
              char v35 = sub_1001057F8();
              swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_17;
              }
              switch(v12)
              {
                case 2:
                  swift_bridgeObjectRelease();
                  double v30 = v45 / (a4 + -15.0);
                  double v36 = v30 * a4;
                  double v49 = v30 * a2;
                  double v44 = v36;
                  double v46 = v30 * a3;
                  double v32 = v30 * v43;
                  double v34 = 12.0;
                  break;
                default:
                  char v37 = sub_1001057F8();
                  swift_bridgeObjectRelease();
                  if (v37) {
                    double v29 = 15.0;
                  }
                  else {
                    double v29 = 10.0;
                  }
                  goto LABEL_17;
              }
              break;
            default:
              swift_bridgeObjectRelease();
              double v30 = v45 / (a4 + -20.0);
              double v31 = v30 * a4;
              double v49 = v30 * a2;
              double v44 = v31;
              double v46 = v30 * a3;
              double v32 = v30 * v43;
              goto LABEL_21;
          }
        }
        break;
    }
    double v40 = v30 * v34 * 0.5;
    v54.origin.CGFloat x = v22;
    v54.origin.y = v24;
    v54.size.width = v25;
    v54.size.height = v26;
    v58.origin.y = v50;
    v58.origin.CGFloat x = v51;
    v58.size.width = v40;
    v58.size.height = v40;
    MKMapRect v55 = MKMapRectUnion(v54, v58);
    v59.origin.CGFloat x = v7;
    v59.origin.y = rect2;
    v59.size.width = v40;
    v59.size.height = v40;
    MKMapRect v56 = MKMapRectUnion(v55, v59);
    double v26 = v46;
    double v22 = v56.origin.x + v56.size.width * 0.5 - (v32 + v44);
    double v24 = v56.origin.y + v56.size.height * 0.5 - (v32 + v44);
    double v25 = v49;
  }
  v57.origin.CGFloat x = v22;
  v57.origin.y = v24;
  v57.size.width = v25;
  v57.size.height = v26;
  *(void *)&double v41 = (unint64_t)MKCoordinateRegionForMapRect(v57);

  return v41;
}

uint64_t sub_100060C28(double a1, double a2, double a3, double a4, double a5, double a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_100060C50, 0, 0);
}

uint64_t sub_100060C50()
{
  double v2 = *(double *)(v0 + 32);
  double v1 = *(double *)(v0 + 40);
  CLLocationDegrees v4 = *(double *)(v0 + 16);
  CLLocationDegrees v3 = *(double *)(v0 + 24);
  id v5 = [objc_allocWithZone((Class)MKMapSnapshotOptions) init];
  id v6 = [self traitCollectionWithUserInterfaceStyle:2];
  [v5 setTraitCollection:v6];

  v14.latitude = v4;
  v14.longitude = v3;
  if (CLLocationCoordinate2DIsValid(v14) && v2 >= 0.0 && v1 >= 0.0) {
    [v5 setRegion:*(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40)];
  }
  double v8 = *(double *)(v0 + 48);
  double v7 = *(double *)(v0 + 56);
  [v5 setMapType:0];
  [v5 setSize:v8, v7];
  id v9 = [objc_allocWithZone((Class)MKStandardMapConfiguration) init];
  id v10 = [self filterExcludingAllCategories];
  [v9 setPointOfInterestFilter:v10];

  [v5 setPreferredConfiguration:v9];
  uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v5);
}

id sub_100060DFC(double a1, double a2)
{
  if (qword_10014BF48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_10014F0C0;
  if (*((void *)off_10014F0C0 + 2) && (unint64_t v5 = sub_10000B844(a1, a2), (v6 & 1) != 0))
  {
    id v11 = *(id *)(v4[7] + 8 * v5);
    swift_endAccess();
    return v11;
  }
  else
  {
    swift_endAccess();
    id v8 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a1, a2];
    swift_beginAccess();
    id v9 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v12 = off_10014F0C0;
    off_10014F0C0 = (_UNKNOWN *)0x8000000000000000;
    sub_10005FDEC((uint64_t)v9, isUniquelyReferenced_nonNull_native, a1, a2);
    off_10014F0C0 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v9;
  }
}

unint64_t sub_100060F74(id a1, void *a2, double a3, CGFloat a4, double a5, double a6)
{
  double v16 = (char *)OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates;
  unint64_t v17 = *(void *)(isEscapingClosureAtFileLocation
                  + OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates);
  if (v17 >> 62) {
    goto LABEL_15;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      id v19 = (id)sub_1001054D8();
    }
    else
    {
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_19;
      }
      id v19 = *(id *)(v17 + 32);
    }
    double v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t p_weak_ivar_lyt = (uint64_t)&JurassicTheme.weak_ivar_lyt;
    [v20 coordinate];
    uint64_t v8 = v21;
    double v9 = v22;

    unint64_t v17 = *(void *)&v16[isEscapingClosureAtFileLocation];
    if (!(v17 >> 62))
    {
      uint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v23) {
        goto LABEL_20;
      }
      goto LABEL_8;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1001055E8();
    if (!v23) {
      goto LABEL_20;
    }
LABEL_8:
    unint64_t result = v23 - 1;
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
LABEL_23:
      id v25 = (id)sub_1001054D8();
      goto LABEL_13;
    }
    double v50 = a5;
    double v51 = a6;
    uint64_t v48 = v8;
    CGFloat v49 = a4;
    double v47 = v9;
    if ((v17 & 0xC000000000000001) != 0) {
      goto LABEL_23;
    }
    if ((result & 0x8000000000000000) != 0) {
      break;
    }
    if (result >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_25;
    }
    id v25 = *(id *)(v17 + 8 * result + 32);
LABEL_13:
    double v26 = v25;
    swift_bridgeObjectRelease();
    [v26 *(SEL *)(p_weak_ivar_lyt + 3280)];
    uint64_t v28 = v27;
    uint64_t v30 = v29;

    id v31 = [a2 image];
    [v31 size];
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    uint64_t v8 = 0;
    v53.origin.CGFloat x = 0.0;
    v53.origin.y = 0.0;
    v53.size.width = v33;
    v53.size.height = v35;
    double v9 = 0.5;
    CGFloat v36 = CGRectGetWidth(v53) * 0.5;
    a4 = v36 + 0.0 - (0.0 - v36);
    v54.origin.y = 0.0;
    v54.origin.CGFloat x = 0.0 - v36;
    CGFloat x = v54.origin.x;
    v54.size.width = a4;
    v54.size.height = v35;
    CGFloat Height = CGRectGetHeight(v54);
    char v39 = sub_100071C60(x, 0.0 - Height * 0.5, a4, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
    id v40 = [a2 image];
    [v40 size];
    a6 = v41;
    a5 = v42;

    id v43 = sub_100060DFC(a6, a5);
    unint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(unsigned char *)(v17 + 24) = v39;
    *(void *)(v17 + 32) = isEscapingClosureAtFileLocation;
    *(void *)(v17 + 40) = v48;
    *(double *)(v17 + 48) = v47;
    *(void *)(v17 + 56) = a1;
    *(double *)(v17 + 64) = a3;
    *(CGFloat *)(v17 + 72) = v49;
    *(double *)(v17 + 80) = v50;
    *(double *)(v17 + 88) = v51;
    *(void *)(v17 + 96) = v28;
    *(void *)(v17 + 104) = v30;
    uint64_t p_weak_ivar_lyt = swift_allocObject();
    *(void *)(p_weak_ivar_lyt + 16) = sub_1000613D8;
    *(void *)(p_weak_ivar_lyt + 24) = v17;
    aBlock[4] = sub_10006140C;
    aBlock[5] = p_weak_ivar_lyt;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10005E864;
    aBlock[3] = &unk_10013B0E0;
    double v16 = (char *)_Block_copy(aBlock);
    id v44 = a2;
    id v45 = (id)isEscapingClosureAtFileLocation;
    id v46 = a1;
    swift_retain();
    swift_release();
    a1 = [v43 imageWithActions:v16];

    _Block_release(v16);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (unint64_t)a1;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    if (!sub_1001055E8()) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100061390()
{
  return _swift_deallocObject(v0, 112, 7);
}

void sub_1000613D8(void *a1)
{
  sub_10005E4D4(a1, *(id *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 56), *(CLLocationDegrees *)(v1 + 40), *(CLLocationDegrees *)(v1 + 48), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(CLLocationDegrees *)(v1 + 96), *(CLLocationDegrees *)(v1 + 104));
}

uint64_t sub_1000613FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006140C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100061434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100061444()
{
  return swift_release();
}

id sub_10006144C(char a1, char a2)
{
  int v3 = a1 & 1;
  if (qword_10014BF50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_10014F0C8;
  if (*((void *)off_10014F0C8 + 2)
    && (unint64_t v5 = sub_10000B5B8(a2), (v6 & 1) != 0)
    && (uint64_t v7 = *(void *)(v4[7] + 8 * v5), *(void *)(v7 + 16))
    && (unint64_t v8 = sub_10000B8D0(v3), (v9 & 1) != 0))
  {
    id v26 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    return v26;
  }
  else
  {
    uint64_t v11 = 0xD000000000000027;
    swift_endAccess();
    if (v3)
    {
      started = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
      uint64_t v13 = "WorkoutLocationAnnotationView.endingPin";
    }
    else
    {
      started = (objc_class *)type metadata accessor for WorkoutStartLocationAnnotation();
      uint64_t v11 = 0xD000000000000029;
      uint64_t v13 = "WorkoutLocationAnnotationView.startingPin";
    }
    unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    id v15 = [objc_allocWithZone(started) init];
    id v16 = objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView());
    id v17 = sub_10005EACC((uint64_t)v15, v11, v14, a2);
    swift_beginAccess();
    if (*((void *)off_10014F0C8 + 2) && (sub_10000B5B8(a2), (v18 & 1) != 0))
    {
      swift_endAccess();
      swift_beginAccess();
      double v20 = sub_10005EA20(v28, a2);
      if (*v19)
      {
        uint64_t v21 = v19;
        id v17 = v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = *v21;
        *uint64_t v21 = 0x8000000000000000;
        sub_100060064((uint64_t)v17, v3, isUniquelyReferenced_nonNull_native);
        *uint64_t v21 = v27;
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v20)(v28, 0);
    }
    else
    {
      swift_endAccess();
      sub_100007E0C(&qword_10014F1E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100108260;
      *(unsigned char *)(inited + 32) = v3;
      *(void *)(inited + 40) = v17;
      unint64_t v24 = sub_1000104E8(inited);
      swift_setDeallocating();
      id v17 = v17;
      sub_100007E0C(&qword_10014F1E8);
      swift_arrayDestroy();
      swift_beginAccess();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = off_10014F0C8;
      off_10014F0C8 = (_UNKNOWN *)0x8000000000000000;
      sub_10005FF2C(v24, a2, v25);
      off_10014F0C8 = v29;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    return v17;
  }
}

void sub_100061758(void *a1, void *a2, CGContext *a3, double a4, double a5)
{
  CLLocationCoordinate2D v8 = MKCoordinateForMapPoint(*(MKMapPoint *)&a4);
  [a2 pointForCoordinate:v8.latitude, v8.longitude];
  double v10 = v9;
  double v12 = v11;
  [a1 bounds];
  double v13 = v10 - CGRectGetMidX(v21);
  [a1 centerOffset];
  CGFloat v15 = v13 + v14;
  [a1 bounds];
  double v16 = v12 - CGRectGetMidY(v22);
  [a1 centerOffset];
  CGFloat v18 = v16 + v17;
  CGContextSaveGState(a3);
  CGContextTranslateCTM(a3, v15, v18);
  [a1 prepareForSnapshotting];
  id v19 = [a1 layer];
  [v19 renderInContext:a3];

  CGContextRestoreGState(a3);
}

void sub_100061868(CGContext *a1, CGContext *a2, void *a3, double a4, double a5, double a6, double a7, double a8)
{
  double v45 = a8;
  v46.origin.CGFloat x = a4;
  v46.size.width = a6;
  v46.size.height = a7;
  v46.origin.y = a5;
  uint64_t v50 = sub_100103978();
  uint64_t v11 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  double v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v44[1] = a2;
  unint64_t v14 = *(void *)((char *)a2 + OBJC_IVAR____TtC20JournalWidgetsSecure27WorkoutGradientPathRenderer_routeCoordinates);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1001055E8())
    {
LABEL_3:
      unint64_t v48 = v14 & 0xC000000000000001;
      if ((v14 & 0xC000000000000001) != 0)
      {
        id v16 = (id)sub_1001054D8();
      }
      else
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v16 = *(id *)(v14 + 32);
      }
      id v17 = v16;
      swift_bridgeObjectRelease();
      id v18 = [v17 timestamp];
      sub_100103938();

      sub_100103878();
      double v20 = v19;
      CGRect v21 = *(void (**)(char *, uint64_t))(v11 + 8);
      v21(v13, v50);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1001055E8();
        if (!v22)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v22) {
          goto LABEL_20;
        }
      }
      if (v22 >= 1)
      {
        uint64_t v23 = 0;
        double v47 = v45 * v45;
        do
        {
          double v49 = v20;
          if (v48) {
            id v26 = (id)sub_1001054D8();
          }
          else {
            id v26 = *(id *)(v14 + 8 * v23 + 32);
          }
          uint64_t v27 = v26;
          [v17 coordinate];
          MKMapPoint v28 = MKMapPointForCoordinate(v52);
          [v27 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v53);
          CLLocationCoordinate2D v30 = MKCoordinateForMapPoint(v28);
          [a3 pointForCoordinate:v30.latitude, v30.longitude];
          CGFloat v32 = v31;
          CGFloat v34 = v33;
          CLLocationCoordinate2D v35 = MKCoordinateForMapPoint(v29);
          [a3 pointForCoordinate:v35.latitude, v35.longitude];
          CGFloat v37 = v36;
          CGFloat v39 = v38;
          if (v47 <= (v36 - v32) * (v36 - v32) + (v38 - v34) * (v38 - v34))
          {
            v54.origin.CGFloat x = fmin(v28.x, v29.x);
            v54.origin.y = fmin(v28.y, v29.y);
            v54.size.width = vabdd_f64(v28.x, v29.x);
            v54.size.height = vabdd_f64(v28.y, v29.y);
            if (MKMapRectIntersectsRect(v46, v54))
            {
              id v40 = [v27 timestamp];
              sub_100103938();

              sub_100103878();
              double v42 = v41;
              v21(v13, v50);
              LOBYTE(v40) = v42 - v49 > 5.0;
              [v27 speed:v42 - v49];
              sub_10005F090(v44[0], (char)v40, v32, v34, v37, v39, v43, v45);
            }

            id v17 = v27;
          }
          ++v23;
          id v24 = [v27 timestamp];
          sub_100103938();

          sub_100103878();
          double v20 = v25;

          v21(v13, v50);
        }
        while (v22 != v23);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_100061CD4(CGContext *a1, CGContext *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v42 = a9;
  double v38 = a7;
  v39.origin.CGFloat x = a3;
  v39.size.width = a5;
  v39.size.height = a6;
  v39.origin.y = a4;
  uint64_t v43 = sub_100103978();
  uint64_t v12 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v37[1] = a2;
  unint64_t v15 = *(void *)((char *)a2 + OBJC_IVAR____TtC20JournalWidgetsSecure27WorkoutGradientPathRenderer_routeCoordinates);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1001055E8())
    {
LABEL_3:
      unint64_t v41 = v15 & 0xC000000000000001;
      if ((v15 & 0xC000000000000001) != 0)
      {
        id v17 = (id)sub_1001054D8();
      }
      else
      {
        if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v17 = *(id *)(v15 + 32);
      }
      id v18 = v17;
      swift_bridgeObjectRelease();
      id v19 = [v18 timestamp];
      sub_100103938();

      sub_100103878();
      double v21 = v20;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
      v22(v14, v43);
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1001055E8();
        if (!v23)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_20;
        }
      }
      if (v23 >= 1)
      {
        uint64_t v24 = 0;
        double v40 = v38 * v38;
        do
        {
          if (v41) {
            id v27 = (id)sub_1001054D8();
          }
          else {
            id v27 = *(id *)(v15 + 8 * v24 + 32);
          }
          MKMapPoint v28 = v27;
          [v18 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v45);
          [v28 coordinate];
          MKMapPoint v30 = MKMapPointForCoordinate(v46);
          double v31 = v29.y - v42;
          double v32 = v30.y - v42;
          if (v40 <= (v30.x - a8 - (v29.x - a8)) * (v30.x - a8 - (v29.x - a8)) + (v32 - v31) * (v32 - v31))
          {
            v47.origin.CGFloat x = fmin(v29.x, v30.x);
            v47.origin.y = fmin(v29.y, v30.y);
            v47.size.width = vabdd_f64(v29.x, v30.x);
            v47.size.height = vabdd_f64(v29.y, v30.y);
            if (MKMapRectIntersectsRect(v39, v47))
            {
              id v33 = [v28 timestamp];
              sub_100103938();

              sub_100103878();
              double v35 = v34;
              v22(v14, v43);
              [v28 speed:v35 - v21, 5.0];
              sub_10005F090(v37[0], v35 - v21 > 5.0, v29.x - a8, v31, v30.x - a8, v32, v36, v38);
            }

            id v18 = v28;
          }
          ++v24;
          id v25 = [v28 timestamp];
          sub_100103938();

          sub_100103878();
          double v21 = v26;

          v22(v14, v43);
        }
        while (v23 != v24);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

unsigned char *storeEnumTagSinglePayload for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000621C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType()
{
  return &type metadata for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType;
}

unint64_t sub_100062204()
{
  unint64_t result = qword_10014F1F8;
  if (!qword_10014F1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F1F8);
  }
  return result;
}

uint64_t sub_100062258(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000622C0(uint64_t a1)
{
  return sub_100062368(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001ALL, 0x80000001001124B0, &qword_100162E58);
}

uint64_t sub_1000622F8(uint64_t a1)
{
  return sub_100062368(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD00000000000001ELL, 0x8000000100112490, &qword_100162E60);
}

uint64_t sub_100062330(uint64_t a1)
{
  return sub_100062368(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD00000000000001BLL, 0x8000000100112470, &qword_100162E68);
}

uint64_t sub_100062368(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1001050A8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100105098();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_100104808();
  __chkstk_darwin(v12 - 8);
  sub_10000ABA8();
  a2();
  sub_100105088();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = sub_1001050E8();
  *a5 = result;
  return result;
}

uint64_t sub_100062520(char a1)
{
  uint64_t v2 = v1;
  int v51 = a1 & 1;
  uint64_t v3 = sub_1001039D8();
  uint64_t v57 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v5 - 8);
  MKMapRect v55 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = v2;
  }
  else {
    uint64_t v9 = 0;
  }
  double v10 = &unk_10010A000;
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = v2;
    if (sub_1000146A4(ObjectType, v8))
    {
      id v60 = [self defaultCenter];
      id v59 = sub_100104B38();
      sub_100007E0C(&qword_10014F200);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10010AFB0;
      id v58 = v12;
      strcpy((char *)v61, "downloadIDKey");
      HIWORD(v61[1]) = -4864;
      sub_100105448();
      uint64_t v14 = sub_100103988();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v14;
      *(void *)(inited + 80) = v15;
      v61[0] = 0xD000000000000013;
      v61[1] = 0x8000000100112450;
      sub_100105448();
      *(void *)(inited + 168) = &_s16DownloadPriorityON;
      *(unsigned char *)(inited + 144) = v51;
      v61[0] = 0x64616F6C6E776F64;
      v61[1] = 0xEF79654B65707954;
      sub_100105448();
      *(void *)(inited + 240) = &_s12DownloadTypeON;
      *(unsigned char *)(inited + 216) = 1;
      sub_10000AC18(inited);
      Class isa = sub_1001049A8().super.isa;
      swift_bridgeObjectRelease();
      id v18 = v59;
      id v17 = v60;
      [v60 postNotificationName:v59 object:0 userInfo:isa];

      double v10 = (_OWORD *)&unk_10010A000;
    }
    else
    {
    }
  }
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachmentIdsMissingFile];
  uint64_t v20 = *(void *)(v19 + 56);
  uint64_t v42 = v19 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v43 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v53 = v57 + 16;
  MKMapRect v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  uint64_t v52 = v57 + 48;
  unint64_t v48 = (uint64_t (**)(char *, uint64_t))(v57 + 8);
  double v49 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v56 = v19;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  unint64_t v47 = 0x8000000100112430;
  long long v46 = v10[251];
  id v44 = (char *)&type metadata for Any + 8;
  unint64_t v45 = 0x8000000100112450;
  if (!v23) {
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v25 << 6);
  MKMapPoint v28 = v55;
  while (1)
  {
    uint64_t v32 = v57;
    id v33 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v33(v28, *(void *)(v56 + 48) + *(void *)(v57 + 72) * v27, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v3) == 1) {
      return swift_release();
    }
    double v34 = *v49;
    id v60 = (id)v25;
    double v35 = v50;
    v34(v50, v28, v3);
    id v59 = [self defaultCenter];
    id v58 = sub_100104B38();
    sub_100007E0C(&qword_10014F200);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = v46;
    strcpy((char *)v61, "downloadIDKey");
    HIWORD(v61[1]) = -4864;
    sub_100105448();
    *(void *)(v36 + 96) = v3;
    CGFloat v37 = sub_100062CB4((uint64_t *)(v36 + 72));
    v33((char *)v37, (unint64_t)v35, v3);
    v61[0] = 0xD000000000000013;
    v61[1] = v45;
    sub_100105448();
    *(void *)(v36 + 168) = &_s16DownloadPriorityON;
    *(unsigned char *)(v36 + 144) = v51;
    v61[0] = 0x64616F6C6E776F64;
    v61[1] = 0xEF79654B65707954;
    sub_100105448();
    *(void *)(v36 + 240) = &_s12DownloadTypeON;
    *(unsigned char *)(v36 + 216) = 0;
    sub_10000AC18(v36);
    Class v38 = sub_1001049A8().super.isa;
    swift_bridgeObjectRelease();
    id v40 = v58;
    id v39 = v59;
    [v59 postNotificationName:v58 object:0 userInfo:v38];

    unint64_t v41 = v35;
    int64_t v25 = (int64_t)v60;
    uint64_t result = (*v48)(v41, v3);
    if (v23) {
      goto LABEL_14;
    }
LABEL_15:
    int64_t v29 = v25 + 1;
    MKMapPoint v28 = v55;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v29 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v29);
    ++v25;
    if (!v30)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v43) {
        goto LABEL_32;
      }
      unint64_t v30 = *(void *)(v42 + 8 * v25);
      if (!v30)
      {
        int64_t v25 = v29 + 2;
        if (v29 + 2 >= v43) {
          goto LABEL_32;
        }
        unint64_t v30 = *(void *)(v42 + 8 * v25);
        if (!v30) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v23 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v25 << 6);
  }
  int64_t v31 = v29 + 3;
  if (v31 >= v43)
  {
LABEL_32:
    (*v54)(v55, 1, 1, v3);
    return swift_release();
  }
  unint64_t v30 = *(void *)(v42 + 8 * v31);
  if (v30)
  {
    int64_t v25 = v31;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v25 >= v43) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v25);
    ++v31;
    if (v30) {
      goto LABEL_28;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t *sub_100062CB4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

ValueMetadata *_s12DownloadTypeOMa()
{
  return &_s12DownloadTypeON;
}

unsigned char *_s12DownloadTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100062DFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16DownloadPriorityOMa()
{
  return &_s16DownloadPriorityON;
}

unint64_t sub_100062E38()
{
  unint64_t result = qword_10014F208;
  if (!qword_10014F208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F208);
  }
  return result;
}

unint64_t sub_100062E90()
{
  unint64_t result = qword_10014F210;
  if (!qword_10014F210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F210);
  }
  return result;
}

uint64_t sub_100062EEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100062F14(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100062F58()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100062F88()
{
  return v0;
}

id Journaling.EntryViewModel.id.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_id);
}

uint64_t (*variable initialization expression of Journaling.EntryViewModel.didChange())()
{
  return nullsub_1;
}

uint64_t Journaling.EntryViewModel.deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  sub_1000132D4(v0 + 48);
  sub_100012510(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_uuid, &qword_10014DD70);

  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_uniqueID;
  uint64_t v3 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  uint64_t v4 = v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_date;
  uint64_t v5 = sub_100103978();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_displayDate, v5);
  sub_100012510(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bundleId, &qword_10014DD70);
  sub_100012510(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bundleDate, (uint64_t *)&unk_100151950);
  sub_100012510(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bundleEndDate, (uint64_t *)&unk_100151950);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100012510(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_originalUpdatedDate, (uint64_t *)&unk_100151950);
  return v0;
}

uint64_t Journaling.EntryViewModel.__deallocating_deinit()
{
  Journaling.EntryViewModel.deinit();

  return swift_deallocClassInstance();
}

void sub_10006325C()
{
  uint64_t v0 = sub_100103428();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v5 = Strong;
  unsigned int v6 = *(void **)(Strong + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_title);
  if (!v6)
  {
LABEL_9:
    [*(id *)(v5 + 32) setTitle:0];
    sub_1000638A4();
    swift_release();
    return;
  }
  id v7 = v6;
  id v8 = [v7 string];
  uint64_t v9 = sub_100104B78();
  uint64_t v11 = v10;

  v22[1] = v9;
  v22[2] = v11;
  sub_100103418();
  sub_100007F78();
  uint64_t v12 = sub_1001052F8();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {

    goto LABEL_9;
  }
  id v16 = *(id *)(v5 + 32);
  uint64_t v17 = sub_1000548EC();
  if (v18 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v20 = v17;
    unint64_t v21 = v18;
    Class isa = sub_100103838().super.isa;
    sub_100010364(v20, v21);
  }
  [v16 setTitle:isa];

  sub_1000638A4();
  swift_release();
}

uint64_t sub_100063488(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_text);
  id v4 = v3;
  uint64_t v5 = (void *)sub_1000F206C(0, v3, 0, 0.0);

  unsigned int v6 = (void *)sub_1000F206C(0, a1, 0, 0.0);
  id v7 = v6;
  if (!v5)
  {
    if (!v6)
    {
      char v10 = 0;
      return v10 & 1;
    }

    goto LABEL_7;
  }
  if (!v6)
  {

LABEL_7:
    char v10 = 1;
    return v10 & 1;
  }
  sub_100008234(0, (unint64_t *)&unk_100151980);
  id v8 = v5;
  char v9 = sub_100105218();

  char v10 = v9 ^ 1;
  return v10 & 1;
}

uint64_t sub_100063568()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 32);
    Class isa = *(Class *)(result + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_prompts);
    if (isa)
    {
      id v3 = v1;
      id v4 = isa;
      uint64_t v5 = sub_1000548EC();
      unint64_t v7 = v6;

      if (v7 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = sub_100103838().super.isa;
        sub_100010364(v5, v7);
      }
    }
    else
    {
      id v8 = v1;
    }
    [v1 setPrompt:isa];

    sub_1000638A4();
    return swift_release();
  }
  return result;
}

uint64_t sub_100063658()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    [*(id *)(result + 32) setFlagged:*(unsigned __int8 *)(result + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bookmarked)];
    sub_1000638A4();
    uint64_t v2 = *(void (**)(uint64_t))(v1
                                        + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_didChange);
    uint64_t v3 = swift_retain();
    v2(v3);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100063700(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bookmarked);
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bookmarked) = result;
  if (v2 != (result & 1))
  {
    uint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100064ADC;
    *(void *)(v5 + 24) = v4;
    v7[4] = sub_100064AF4;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_100062EEC;
    v7[3] = &unk_10013B488;
    unint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
    [v3 performBlockAndWait:v6];
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      v7[0] = sub_100057C28((uint64_t)&off_100138E08);
      sub_100103DE8();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1000638A4()
{
  uint64_t v1 = sub_100103978();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = &v21[-v10];
  __chkstk_darwin(v9);
  unint64_t v13 = &v21[-v12];
  unint64_t v14 = *(void **)(v0 + 32);
  [v14 setIsUploadedToCloud:0];
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    uint64_t v15 = v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_originalUpdatedDate;
    swift_beginAccess();
    sub_100010808(v15, (uint64_t)v13, (uint64_t *)&unk_100151950);
    int v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1);
    sub_100012510((uint64_t)v13, (uint64_t *)&unk_100151950);
    if (v16 == 1)
    {
      id v17 = [v14 updatedDate];
      if (v17)
      {
        unint64_t v18 = v17;
        sub_100103938();

        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 1;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, v19, 1, v1);
      sub_100012290((uint64_t)v11, (uint64_t)v8);
      swift_beginAccess();
      sub_1000486A4((uint64_t)v8, v15);
      swift_endAccess();
    }
  }
  sub_100103948();
  Class isa = sub_1001038D8().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  [v14 setUpdatedDate:isa];
}

uint64_t sub_100063B48@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Journaling.EntryViewModel();
  uint64_t result = sub_100103DD8();
  *a1 = result;
  return result;
}

id sub_100063B88@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_id);
  *a1 = v2;
  return v2;
}

uint64_t sub_100063BA0(uint64_t *a1, uint64_t *a2)
{
  return _s20JournalWidgetsSecure10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t _s20JournalWidgetsSecure10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103978();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v63 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v61 - v7;
  uint64_t v8 = sub_1001039D8();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v66 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_10014DD78);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007E0C(&qword_10014DD70);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  unint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v67 = a1;
  sub_100010808(a1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_uuid, (uint64_t)&v61 - v19, &qword_10014DD70);
  uint64_t v68 = a2;
  uint64_t v21 = a2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_uuid;
  uint64_t v22 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100010808((uint64_t)v20, (uint64_t)v14, &qword_10014DD70);
  sub_100010808(v21, v22, &qword_10014DD70);
  unint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v23((uint64_t)v14, 1, v8) != 1)
  {
    sub_100010808((uint64_t)v14, (uint64_t)v18, &qword_10014DD70);
    if (v23(v22, 1, v8) != 1)
    {
      uint64_t v24 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v66, v22, v8);
      sub_100064B1C();
      char v25 = sub_100104A98();
      unint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
      v26(v24, v8);
      sub_100012510((uint64_t)v20, &qword_10014DD70);
      v26(v18, v8);
      sub_100012510((uint64_t)v14, &qword_10014DD70);
      if ((v25 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    sub_100012510((uint64_t)v20, &qword_10014DD70);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
LABEL_6:
    sub_100012510((uint64_t)v14, &qword_10014DD78);
    goto LABEL_15;
  }
  sub_100012510((uint64_t)v20, &qword_10014DD70);
  if (v23(v22, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_100012510((uint64_t)v14, &qword_10014DD70);
LABEL_8:
  sub_100008234(0, &qword_10014C330);
  uint64_t v28 = v67;
  uint64_t v27 = v68;
  if (sub_100105218())
  {
    int64_t v29 = *(void **)(v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_title);
    unint64_t v30 = *(void **)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_title);
    if (v29)
    {
      uint64_t v32 = v64;
      uint64_t v31 = v65;
      id v33 = v63;
      if (!v30) {
        goto LABEL_15;
      }
      sub_100008234(0, (unint64_t *)&unk_100151980);
      id v34 = v30;
      id v35 = v29;
      char v36 = sub_100105218();

      if ((v36 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v32 = v64;
      uint64_t v31 = v65;
      id v33 = v63;
      if (v30) {
        goto LABEL_15;
      }
    }
    if (*(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_showTitle) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_showTitle))
    {
      id v39 = *(void **)(v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_text);
      id v40 = *(void **)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_text);
      if (v39)
      {
        if (!v40) {
          goto LABEL_15;
        }
        sub_100008234(0, (unint64_t *)&unk_100151980);
        id v41 = v40;
        id v42 = v39;
        char v43 = sub_100105218();

        if ((v43 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v40)
      {
        goto LABEL_15;
      }
      id v44 = *(void **)(v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_prompts);
      unint64_t v45 = *(void **)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_prompts);
      if (v44)
      {
        if (!v45) {
          goto LABEL_15;
        }
        sub_100008234(0, (unint64_t *)&unk_100151980);
        id v46 = v45;
        id v47 = v44;
        char v48 = sub_100105218();

        if ((v48 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v45)
      {
        goto LABEL_15;
      }
      if (*(unsigned __int8 *)(v28
                              + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_showPhotoMemoryBanner) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_showPhotoMemoryBanner))
      {
        uint64_t v49 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_assetsAll;
        unint64_t v50 = *(void *)(v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_assetsAll);
        uint64_t v51 = *(void *)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_assetsAll);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v52 = sub_10006F96C(v50, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v52)
        {
          double v66 = (char *)v49;
          uint64_t v53 = v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_date;
          swift_beginAccess();
          MKMapRect v54 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
          MKMapRect v55 = v62;
          v54(v62, v53, v31);
          uint64_t v56 = v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_date;
          swift_beginAccess();
          v54(v33, v56, v31);
          LOBYTE(v56) = sub_100103928();
          uint64_t v57 = *(void (**)(char *, uint64_t))(v32 + 8);
          v57(v33, v31);
          v57(v55, v31);
          if (v56)
          {
            v54(v55, v28 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_displayDate, v31);
            v54(v33, v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_displayDate, v31);
            char v58 = sub_100103928();
            v57(v33, v31);
            v57(v55, v31);
            if ((v58 & 1) != 0
              && *(unsigned __int8 *)(v28
                                    + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bookmarked) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bookmarked)
              && *(unsigned __int8 *)(v28
                                    + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_originalBookmarkFromEntryMO) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_originalBookmarkFromEntryMO))
            {
              unint64_t v59 = *(void *)&v66[v28];
              uint64_t v60 = *(void *)&v66[v27];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unsigned __int8 v37 = sub_10006F96C(v59, v60);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v37 & 1;
            }
          }
        }
      }
    }
  }
LABEL_15:
  unsigned __int8 v37 = 0;
  return v37 & 1;
}

void *sub_100064318()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t type metadata accessor for EntryCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_10006434C()
{
  return type metadata accessor for Journaling.EntryViewModel();
}

uint64_t type metadata accessor for Journaling.EntryViewModel()
{
  uint64_t result = qword_10014F2F0;
  if (!qword_10014F2F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000643A0()
{
  sub_1000645A8(319, (unint64_t *)&qword_10014DD38, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_1001039D8();
    if (v1 <= 0x3F)
    {
      sub_100103978();
      if (v2 <= 0x3F)
      {
        sub_1000645A8(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1000645A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100105278();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s14EntryViewModelC4ModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000646C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC4ModeOMa()
{
  return &_s14EntryViewModelC4ModeON;
}

uint64_t _s14EntryViewModelC15EntryPropertiesOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14EntryViewModelC15EntryPropertiesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006485CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC15EntryPropertiesOMa()
{
  return &_s14EntryViewModelC15EntryPropertiesON;
}

unint64_t sub_100064898()
{
  unint64_t result = qword_10014F708;
  if (!qword_10014F708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F708);
  }
  return result;
}

unint64_t sub_1000648F0()
{
  unint64_t result = qword_10014F710;
  if (!qword_10014F710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F710);
  }
  return result;
}

void sub_100064944(void *a1)
{
}

uint64_t sub_10006496C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000649A4()
{
}

uint64_t sub_1000649AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000649BC()
{
  return swift_release();
}

void sub_1000649C4(void *a1)
{
}

void sub_1000649EC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = *(void **)(v4 + *a2);
  *(void *)(v4 + *a2) = a1;
  id v8 = a1;

  uint64_t v9 = *(void **)(v4 + 24);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  v12[4] = a3;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100062F14;
  uint64_t v12[3] = a4;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  [v9 performBlock:v11];
  _Block_release(v11);
}

uint64_t sub_100064AD4()
{
  return sub_100063568();
}

uint64_t sub_100064ADC()
{
  return sub_100063658();
}

uint64_t sub_100064AE4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100064AF4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_100064B1C()
{
  unint64_t result = qword_10014DD88;
  if (!qword_10014DD88)
  {
    sub_1001039D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014DD88);
  }
  return result;
}

uint64_t BatchRecordDownloadOperation.main@Sendable ()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100064BA4, 0, 0);
}

uint64_t sub_100064BA4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + qword_10014F728);
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  uint64_t v5 = sub_100007E0C(&qword_10014F740);
  *uint64_t v4 = v0;
  v4[1] = sub_100064CB0;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10014F738, v3, v5);
}

uint64_t sub_100064CB0()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100064DE8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100064DCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100064DCC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_100064DE8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100064E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100064E70, 0, 0);
}

uint64_t sub_100064E70()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + qword_10014F748);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  void *v2 = v0;
  v2[1] = sub_100064F1C;
  return CKDatabase.records(for:desiredKeys:)(v1, 0);
}

uint64_t sub_100064F1C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    unsigned int v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return _swift_task_switch(sub_100065068, 0, 0);
  }
}

uint64_t sub_100065068()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006508C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_100017E10;
  _OWORD v7[2] = a1;
  return _swift_task_switch(sub_100064E70, 0, 0);
}

void BatchRecordDownloadOperation.init()()
{
}

void sub_100065178()
{
}

void sub_1000651A8()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + qword_10014F728);
}

id BatchRecordDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchRecordDownloadOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for BatchRecordDownloadOperation()
{
  uint64_t result = qword_10014F778;
  if (!qword_10014F778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006527C(uint64_t a1)
{
  swift_bridgeObjectRelease();

  objc_super v2 = *(void **)(a1 + qword_10014F728);
}

uint64_t sub_1000652D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100065330(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_100065350, 0, 0);
}

uint64_t sub_100065350()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_10014F728);
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = sub_100007E0C(&qword_10014F740);
  *uint64_t v4 = v0;
  v4[1] = sub_10006545C;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10014F878, v3, v5);
}

uint64_t sub_10006545C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100065598;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100065578;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100065578()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100065598()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000655FC()
{
  return type metadata accessor for BatchRecordDownloadOperation();
}

uint64_t sub_100065604(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_100017A64;
  _OWORD v7[2] = a1;
  return _swift_task_switch(sub_100064E70, 0, 0);
}

unint64_t sub_1000656C0(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000657F4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_10014F9C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_1000666D8();
  sub_100105968();
  LOBYTE(v14) = 0;
  sub_100105728();
  if (!v2)
  {
    uint64_t v9 = _s10VideoAssetC9VideoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_100103978();
    sub_100066668(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v14) = 2;
    sub_100105728();
    LOBYTE(v14) = 3;
    sub_100105748();
    LOBYTE(v14) = 4;
    sub_100105748();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_100066668(&qword_10014D9B8, type metadata accessor for CGSize);
    sub_100105768();
    LOBYTE(v14) = 6;
    sub_100105728();
    LOBYTE(v14) = 7;
    sub_100105728();
    LOBYTE(v14) = 8;
    sub_100105728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100065B60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007E0C(&qword_10014F9B0);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10VideoAssetC9VideoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_100012154(a1, a1[3]);
  sub_1000666D8();
  id v44 = v9;
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  uint64_t *v11 = sub_100105678();
  v11[1] = v17;
  sub_100103978();
  LOBYTE(v46) = 1;
  sub_100066668(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  unint64_t v18 = (int *)v45;
  sub_100012290(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_100105678();
  uint64_t v20 = (uint64_t *)((char *)v11 + v18[6]);
  *uint64_t v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_100105698();
  unint64_t v23 = (char *)v11 + v18[7];
  *(void *)unint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_100105698();
  unint64_t v26 = (char *)v11 + v18[8];
  *(void *)unint64_t v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_100066668(&qword_10014D9A8, type metadata accessor for CGSize);
  sub_1001056B8();
  char v28 = v47;
  int64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)int64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_100105678();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  *uint64_t v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_100105678();
  id v34 = (uint64_t *)((char *)v11 + v18[11]);
  *id v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  char v36 = v44;
  uint64_t v37 = sub_100105678();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  id v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *id v40 = v37;
  v40[1] = v39;
  sub_10006672C((uint64_t)v11, v15);
  sub_1000121EC(v12);
  return sub_100066790((uint64_t)v11);
}

unint64_t sub_10006616C()
{
  return sub_1000656C0(*v0);
}

uint64_t sub_100066174(uint64_t a1)
{
  unint64_t v2 = sub_1000666D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000661B0(uint64_t a1)
{
  unint64_t v2 = sub_1000666D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000661EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100065B60(a1, a2);
}

uint64_t sub_100066204(void *a1)
{
  return sub_1000657F4(a1);
}

id sub_10006621C(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for VideoThumbnailCacheOperation());
  swift_bridgeObjectRetain();
  return sub_1000A4EC0(v6, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_1000662AC()
{
  return swift_release();
}

id sub_1000662BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VideoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100066304()
{
  return _s10VideoAssetCMa(0);
}

uint64_t _s10VideoAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_10014F8A8);
}

uint64_t sub_10006632C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100066370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100066384);
}

uint64_t sub_100066384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100066444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100066458);
}

uint64_t sub_100066458(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VideoAssetC9VideoDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_10014F910);
}

void sub_100066524()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000665D8()
{
  return sub_100066668(&qword_10014F968, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa);
}

uint64_t sub_100066620()
{
  return sub_100066668(&qword_10014F970, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa);
}

uint64_t sub_100066668(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000666B0()
{
  return swift_retain();
}

uint64_t sub_1000666C0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10VideoAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_1000666D8()
{
  unint64_t result = qword_10014F9B8;
  if (!qword_10014F9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F9B8);
  }
  return result;
}

uint64_t sub_10006672C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VideoAssetC9VideoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100066790(uint64_t a1)
{
  uint64_t v2 = _s10VideoAssetC9VideoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s10VideoAssetC9VideoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000668B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VideoAssetC9VideoDataV10CodingKeysOMa()
{
  return &_s10VideoAssetC9VideoDataV10CodingKeysON;
}

unint64_t sub_1000668F4()
{
  unint64_t result = qword_10014F9C8;
  if (!qword_10014F9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F9C8);
  }
  return result;
}

unint64_t sub_10006694C()
{
  unint64_t result = qword_10014F9D0;
  if (!qword_10014F9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F9D0);
  }
  return result;
}

unint64_t sub_1000669A4()
{
  unint64_t result = qword_10014F9D8;
  if (!qword_10014F9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014F9D8);
  }
  return result;
}

uint64_t *sub_1000669F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007E0C(&qword_10014E7B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100104888();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100007E0C(&qword_10014E7C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100104868();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_100103F48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    unint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (*(uint64_t *)((char *)a2 + v17 + 24))
    {
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *((void *)v19 + 1);
      char v22 = v19[16];
      sub_100050DA8(*(void *)v19, v21, v22);
      *(void *)unint64_t v18 = v20;
      *((void *)v18 + 1) = v21;
      v18[16] = v22;
      *((void *)v18 + 3) = *((void *)v19 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
    }
  }
  return a1;
}

uint64_t sub_100066C8C(uint64_t a1, int *a2)
{
  sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100104888();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100104868();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100103F48();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    uint64_t result = swift_release();
  }
  uint64_t v10 = a1 + a2[7];
  if (*(void *)(v10 + 24))
  {
    sub_100050AE0(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100066E34(void *a1, void *a2, int *a3)
{
  sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100104888();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100104868();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100103F48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (*(void *)((char *)a2 + v15 + 24))
  {
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *((void *)v17 + 1);
    char v20 = v17[16];
    sub_100050DA8(*(void *)v17, v19, v20);
    *(void *)uint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
    v16[16] = v20;
    *((void *)v16 + 3) = *((void *)v17 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v21;
  }
  return a1;
}

void *sub_100067078(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E7B8);
    sub_100007E0C(&qword_10014E7B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100104888();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100012510((uint64_t)a1 + v7, &qword_10014E7C0);
    sub_100007E0C(&qword_10014E7C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100104868();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100012510((uint64_t)a1 + v11, &qword_10014E6D0);
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100103F48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a1 + v15 + 24);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
  if (v18)
  {
    if (v19)
    {
      uint64_t v20 = *(void *)v17;
      uint64_t v21 = *((void *)v17 + 1);
      char v22 = v17[16];
      sub_100050DA8(*(void *)v17, v21, v22);
      uint64_t v23 = *(void *)v16;
      uint64_t v24 = *(void *)(v16 + 8);
      char v25 = *(unsigned char *)(v16 + 16);
      *(void *)uint64_t v16 = v20;
      *(void *)(v16 + 8) = v21;
      *(unsigned char *)(v16 + 16) = v22;
      sub_100050AE0(v23, v24, v25);
      *(void *)(v16 + 24) = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100012510(v16, &qword_10014F9E0);
      long long v29 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v29;
    }
  }
  else if (v19)
  {
    uint64_t v26 = *(void *)v17;
    uint64_t v27 = *((void *)v17 + 1);
    char v28 = v17[16];
    sub_100050DA8(*(void *)v17, v27, v28);
    *(void *)uint64_t v16 = v26;
    *(void *)(v16 + 8) = v27;
    *(unsigned char *)(v16 + 16) = v28;
    *(void *)(v16 + 24) = *((void *)v17 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v30;
  }
  return a1;
}

char *sub_100067364(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100104888();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100104868();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_100103F48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  return a1;
}

char *sub_100067588(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E7B8);
    uint64_t v6 = sub_100007E0C(&qword_10014E7B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100104888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100012510((uint64_t)&a1[v8], &qword_10014E7C0);
    uint64_t v11 = sub_100007E0C(&qword_10014E7C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100104868();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100012510((uint64_t)&a1[v13], &qword_10014E6D0);
    uint64_t v16 = sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100103F48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = &a2[v18];
  if (!*(void *)&a1[v18 + 24]) {
    goto LABEL_15;
  }
  if (!*((void *)v20 + 3))
  {
    sub_100012510(v19, &qword_10014F9E0);
LABEL_15:
    long long v25 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v25;
    return a1;
  }
  char v21 = v20[16];
  uint64_t v22 = *(void *)v19;
  uint64_t v23 = *(void *)(v19 + 8);
  char v24 = *(unsigned char *)(v19 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = v21;
  sub_100050AE0(v22, v23, v24);
  *(void *)(v19 + 24) = *((void *)v20 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100067834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100067848);
}

uint64_t sub_100067848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014F9E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100007E0C(&qword_10014F9F0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_100007E0C(&qword_10014E6E0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7] + 24);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  int v17 = v16 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

uint64_t sub_1000679C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000679D8);
}

uint64_t sub_1000679D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014F9E8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100007E0C(&qword_10014F9F0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_100007E0C(&qword_10014E6E0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7] + 24) = a2;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for WidgetHeaderView()
{
  uint64_t result = qword_10014FA50;
  if (!qword_10014FA50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100067B90()
{
  sub_100067CF0(319, &qword_10014FA60, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_100067CF0(319, (unint64_t *)&unk_10014FA68, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_100067CF0(319, (unint64_t *)&qword_10014E750, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100067CF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100103E78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100067D44()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_100067D60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a2[3];
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  uint64_t v6 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v7 = *a2;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a1;
  sub_10006AA2C(*a1, v9, v8, v2);
  sub_10006AA2C(v7, v6, v5, v3);
  char v11 = sub_100104448();
  sub_10006AD3C(v7, v6, v5, v3);
  sub_10006AD3C(v10, v9, v8, v2);
  return v11 & 1;
}

uint64_t sub_100067E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v2 = type metadata accessor for WidgetHeaderView();
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100007E0C(&qword_10014FAA0);
  uint64_t v37 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007E0C(&qword_10014FAA8);
  __chkstk_darwin(v41);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014FAB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100007E0C(&qword_10014FAB8);
  __chkstk_darwin(v40);
  char v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100007E0C(&qword_10014FAC0);
  __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100104888();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_100096078((uint64_t)&v36 - v19);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v20, v14);
  if (v21 == enum case for WidgetFamily.systemSmall(_:) || v21 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v28 = v39;
    sub_100068B20(v39);
    uint64_t v29 = v37;
    uint64_t v30 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v9, v28, v42);
    swift_storeEnumTagMultiPayload();
    sub_10006A648();
    uint64_t v31 = sub_100007F30(&qword_10014FB20);
    uint64_t v32 = sub_100007F30(&qword_10014FB28);
    uint64_t v33 = sub_100050EC4(&qword_10014FB30, &qword_10014FB28);
    unint64_t v34 = sub_10006A830();
    unint64_t v44 = v32;
    uint64_t v45 = &type metadata for WidgetLabelStyle;
    uint64_t v46 = v33;
    unint64_t v47 = v34;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v44 = v31;
    uint64_t v45 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_1001041B8();
    sub_100010808((uint64_t)v11, (uint64_t)v6, &qword_10014FAB8);
    swift_storeEnumTagMultiPayload();
    sub_10006A884();
    sub_1001041B8();
    sub_100012510((uint64_t)v11, &qword_10014FAB8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v39, v30);
  }
  else if (v21 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_100068598((uint64_t)v13);
    sub_100010808((uint64_t)v13, (uint64_t)v9, &qword_10014FAC0);
    swift_storeEnumTagMultiPayload();
    sub_10006A648();
    uint64_t v22 = sub_100007F30(&qword_10014FB20);
    uint64_t v23 = sub_100007F30(&qword_10014FB28);
    uint64_t v24 = sub_100050EC4(&qword_10014FB30, &qword_10014FB28);
    unint64_t v25 = sub_10006A830();
    unint64_t v44 = v23;
    uint64_t v45 = &type metadata for WidgetLabelStyle;
    uint64_t v46 = v24;
    unint64_t v47 = v25;
    uint64_t v26 = swift_getOpaqueTypeConformance2();
    unint64_t v44 = v22;
    uint64_t v45 = (ValueMetadata *)v26;
    swift_getOpaqueTypeConformance2();
    sub_1001041B8();
    sub_100010808((uint64_t)v11, (uint64_t)v6, &qword_10014FAB8);
    swift_storeEnumTagMultiPayload();
    sub_10006A884();
    sub_1001041B8();
    sub_100012510((uint64_t)v11, &qword_10014FAB8);
    return sub_100012510((uint64_t)v13, &qword_10014FAC0);
  }
  else
  {
    sub_100050CE0(v1, v36);
    unint64_t v44 = 0;
    uint64_t v45 = (ValueMetadata *)0xE000000000000000;
    sub_100105498(39);
    swift_bridgeObjectRelease();
    unint64_t v44 = 0xD000000000000025;
    uint64_t v45 = (ValueMetadata *)0x80000001001127E0;
    sub_100096078((uint64_t)v18);
    sub_10006AD80(&qword_10014FAC8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v48._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t result = sub_1001055C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_100068598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_1001043C8();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100007E0C(&qword_10014FAE8);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007E0C(&qword_10014FB40);
  uint64_t v6 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100007E0C(&qword_10014FAD8);
  __chkstk_darwin(v38);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_10014FB48);
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100007E0C(&qword_10014FAC0);
  __chkstk_darwin(v36);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v1;
  sub_100007E0C(&qword_10014FB50);
  sub_100007E0C(&qword_10014FB58);
  sub_10006A9B8();
  *(void *)&long long v47 = &type metadata for Image;
  *((void *)&v47 + 1) = &protocol witness table for Image;
  swift_getOpaqueTypeConformance2();
  sub_100104698();
  if (*(void *)(v1 + *(int *)(type metadata accessor for WidgetHeaderView() + 28) + 24))
  {
    uint64_t v16 = sub_100104118();
    char v17 = 0;
    __asm { FMOV            V0.2D, #4.0 }
    *(void *)&_Q0 = v16;
  }
  else
  {
    _Q0 = 0uLL;
    char v17 = 2;
  }
  long long v47 = _Q0;
  char v48 = v17;
  sub_100050EC4(&qword_10014FAF0, &qword_10014FAE8);
  sub_10006A830();
  uint64_t v23 = v37;
  sub_100104508();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v23);
  sub_100104358();
  unint64_t v25 = v42;
  uint64_t v24 = v43;
  uint64_t v26 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for Font.Leading.tight(_:), v44);
  uint64_t v27 = sub_1001043E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v41;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v41);
  uint64_t v30 = (uint64_t *)&v10[*(int *)(v38 + 36)];
  *uint64_t v30 = KeyPath;
  v30[1] = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  sub_100104388();
  sub_10006A71C();
  sub_1001044F8();
  sub_100012510((uint64_t)v10, &qword_10014FAD8);
  LODWORD(KeyPath) = sub_100104218();
  uint64_t v32 = v39;
  uint64_t v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v15, v13, v40);
  *(_DWORD *)&v15[*(int *)(v36 + 36)] = KeyPath;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);
  return sub_100033870((uint64_t)v15, v45, &qword_10014FAC0);
}

uint64_t sub_100068B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v2 = sub_100103F08();
  uint64_t v74 = *(void *)(v2 - 8);
  uint64_t v75 = v2;
  __chkstk_darwin(v2);
  uint64_t v73 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100007E0C(&qword_10014FB28);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_10014FB20);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100007E0C(&qword_10014FAA0);
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  double v66 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100103F48();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = type metadata accessor for WidgetHeaderView();
  uint64_t v15 = __chkstk_darwin(v14);
  char v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t *)(v1 + *(int *)(v15 + 28));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = v18[2];
  uint64_t v22 = v18[3];
  unint64_t v59 = v18;
  uint64_t v77 = v22;
  uint64_t v62 = v20;
  uint64_t v63 = v19;
  uint64_t v61 = v21;
  uint64_t v60 = v1;
  if (v22)
  {
    sub_100050CE0(v1, (uint64_t)v17);
    sub_10006AA2C(v19, v20, v21, v22);
    sub_100096040((uint64_t)v13);
    sub_100103F28();
    sub_10006AD80((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v23 = sub_100105338();
    uint64_t v24 = v19;
    unint64_t v25 = *(void (**)(char *, uint64_t))(v58 + 8);
    v25(v11, v8);
    v25(v13, v8);
    sub_100050D44((uint64_t)v17);
    if (v23)
    {
      v78.i64[0] = 0xD00000000000007CLL;
      v78.i64[1] = 0x8000000100111790;
      sub_100007F78();
      uint64_t v26 = sub_100104488();
      uint64_t v27 = v26;
      uint64_t v20 = v28;
      uint64_t v22 = v29;
      uint64_t v31 = v30 & 1;
      goto LABEL_7;
    }
    uint64_t v31 = v21 & 1;
    uint64_t v27 = v24;
    uint64_t v22 = v77;
  }
  else
  {
    sub_100050CE0(v1, (uint64_t)v17);
    sub_100050D44((uint64_t)v17);
    uint64_t v31 = 0;
    uint64_t v20 = 0;
    uint64_t v27 = 0;
  }
  uint64_t v26 = sub_10006AA2C(v27, v20, v31, v22);
LABEL_7:
  uint64_t v32 = __chkstk_darwin(v26);
  uint64_t v56 = v27;
  *(&v54 - 6) = v27;
  *(&v54 - 5) = v20;
  uint64_t v58 = v20;
  uint64_t v57 = v31;
  *(&v54 - 4) = v31;
  *(&v54 - 3) = v22;
  uint64_t v55 = v22;
  *(&v54 - 2) = v60;
  __chkstk_darwin(v32);
  *(&v54 - 2) = v33;
  sub_100007E0C(&qword_10014FB68);
  sub_100007E0C(&qword_10014FB70);
  uint64_t v34 = sub_100007F30(&qword_10014FB78);
  unint64_t v35 = sub_10006AA88();
  v78.i64[0] = v34;
  v78.i64[1] = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = sub_100007F30(&qword_10014FBB8);
  uint64_t v37 = sub_100007F30(&qword_10014FBC0);
  unint64_t v38 = sub_10006AC9C();
  v78.i64[0] = v37;
  v78.i64[1] = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v78.i64[0] = v36;
  v78.i64[1] = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v40 = v64;
  sub_100104698();
  if (v59[3])
  {
    uint64_t v41 = sub_100104128();
    int64x2_t v42 = vdupq_n_s64(0x7FF0000000000000uLL);
    v42.i64[0] = v41;
    char v43 = 1;
  }
  else
  {
    int64x2_t v42 = 0uLL;
    char v43 = 2;
  }
  int64x2_t v78 = v42;
  LOBYTE(v79) = v43;
  uint64_t v44 = sub_100050EC4(&qword_10014FB30, &qword_10014FB28);
  unint64_t v45 = sub_10006A830();
  uint64_t v46 = v69;
  uint64_t v47 = v67;
  sub_100104508();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v47);
  uint64_t v49 = v73;
  uint64_t v48 = v74;
  uint64_t v50 = v75;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, enum case for DynamicTypeSize.large(_:), v75);
  v78.i64[0] = v47;
  v78.i64[1] = (uint64_t)&type metadata for WidgetLabelStyle;
  uint64_t v79 = v44;
  unint64_t v80 = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v66;
  uint64_t v52 = v72;
  sub_100104558();
  sub_10006AD3C(v56, v58, v57, v55);
  sub_10006AD3C(v63, v62, v61, v77);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v52);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v68 + 32))(v76, v51, v70);
}

uint64_t sub_100069308@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WidgetHeaderView() + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v6 & 1;
  if (v7) {
    uint64_t v9 = v4;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v7) {
    uint64_t v10 = v5;
  }
  else {
    uint64_t v10 = 0;
  }
  if (!v7) {
    uint64_t v8 = 0;
  }
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v8;
  a2[3] = v7;
  return sub_10006AA2C(v4, v5, v6, v7);
}

uint64_t sub_100069364()
{
  return swift_release();
}

uint64_t sub_1000693E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v63 = a6;
  uint64_t v48 = sub_100007E0C(&qword_10014FC40);
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100104868();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v55 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v54 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_1001043C8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100007E0C(&qword_10014FC48);
  uint64_t v15 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  char v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007E0C(&qword_10014FB90);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100007E0C(&qword_10014FB78);
  __chkstk_darwin(v62);
  char v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007E0C(&qword_10014FB68);
  uint64_t v60 = *(void *)(v24 - 8);
  uint64_t v61 = v24;
  __chkstk_darwin(v24);
  uint64_t v58 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100104408();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Font.Leading.tight(_:), v11);
  uint64_t v26 = sub_1001043E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = v50;
  uint64_t v65 = v51;
  uint64_t v66 = v52;
  uint64_t v67 = v53;
  uint64_t v68 = KeyPath;
  uint64_t v69 = v26;
  sub_100007E0C(&qword_10014FB98);
  sub_10006ABFC();
  sub_1001045A8();
  swift_release();
  swift_release();
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = v49;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v17, v49);
  char v30 = &v21[*(int *)(v19 + 44)];
  *(void *)char v30 = v28;
  *((void *)v30 + 1) = 1;
  v30[16] = 0;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v29);
  type metadata accessor for WidgetHeaderView();
  uint64_t v31 = v54;
  sub_10009636C(v54);
  uint64_t v32 = v55;
  sub_100104858();
  uint64_t v33 = v32;
  LOBYTE(v32) = sub_100104838();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v56 + 8);
  unint64_t v35 = v33;
  uint64_t v36 = v57;
  v34(v35, v57);
  v34((char *)v31, v36);
  if (v32)
  {
    LODWORD(v64) = sub_1001041F8();
  }
  else
  {
    int v37 = sub_100104218();
    uint64_t v38 = v48;
    uint64_t v39 = v47;
    uint64_t v40 = &v47[*(int *)(v48 + 36)];
    uint64_t v41 = enum case for BlendMode.plusDarker(_:);
    uint64_t v42 = sub_100104748();
    char v43 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104);
    v43(v40, v41, v42);
    v43(&v39[*(int *)(v38 + 40)], enum case for BlendMode.plusLighter(_:), v42);
    *(_DWORD *)uint64_t v39 = v37;
    sub_100050EC4(&qword_10014FC50, &qword_10014FC40);
  }
  uint64_t v44 = sub_100103EE8();
  sub_100010808((uint64_t)v21, (uint64_t)v23, &qword_10014FB90);
  *(void *)&v23[*(int *)(v62 + 36)] = v44;
  sub_100012510((uint64_t)v21, &qword_10014FB90);
  sub_10006AA88();
  unint64_t v45 = v58;
  sub_100104498();
  sub_100012510((uint64_t)v23, &qword_10014FB78);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v63, v45, v61);
}

uint64_t sub_100069A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100103528();
  uint64_t v5 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100103818();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100007E0C(&qword_10014FBD8);
  uint64_t v12 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100007E0C(&qword_10014FBC0);
  __chkstk_darwin(v32);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007E0C(&qword_10014FBB8);
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v38 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007E0C(&qword_10014FB70);
  uint64_t v34 = *(void *)(v20 - 8);
  uint64_t v35 = v20;
  __chkstk_darwin(v20);
  uint64_t v33 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103518();
  sub_100103508();
  sub_1001034E8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
    uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v4, v8);
    __chkstk_darwin(v23);
    *(&v31 - 2) = v39;
    sub_100007E0C(&qword_10014FBE0);
    sub_10006ADD0();
    sub_100104418();
    sub_100104718();
    sub_100103ED8();
    uint64_t v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v36);
    uint64_t v25 = v32;
    uint64_t v26 = &v16[*(int *)(v32 + 36)];
    long long v27 = v44;
    *(_OWORD *)uint64_t v26 = v43;
    *((_OWORD *)v26 + 1) = v27;
    *((_OWORD *)v26 + 2) = v45;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
    unint64_t v28 = sub_10006AC9C();
    sub_100104498();
    sub_100012510((uint64_t)v16, &qword_10014FBC0);
    uint64_t v41 = v25;
    unint64_t v42 = v28;
    swift_getOpaqueTypeConformance2();
    uint64_t v29 = v33;
    uint64_t v30 = v38;
    sub_100104518();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v30);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v40, v29, v35);
  }
  return result;
}

uint64_t sub_100069FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v42 = sub_100104638();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100007E0C(&qword_10014FC30);
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_100007E0C(&qword_10014FC18);
  __chkstk_darwin(v39);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_100104658();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014FC38);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100007E0C(&qword_10014FBF8);
  uint64_t v10 = __chkstk_darwin(v46);
  uint64_t v12 = (uint64_t *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v44 = (uint64_t)&v38 - v13;
  uint64_t v14 = sub_100104868();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v38 - v19;
  type metadata accessor for WidgetHeaderView();
  sub_10009636C((uint64_t)v20);
  sub_100104858();
  char v21 = sub_100104838();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  v22(v20, v14);
  if (v21)
  {
    uint64_t v23 = sub_100104648();
    uint64_t v24 = sub_100104378();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
    uint64_t v25 = sub_1001043A8();
    sub_100012510((uint64_t)v9, &qword_10014FC38);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = v43;
    unint64_t v28 = v41;
    uint64_t v29 = v45;
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v41, enum case for Image.Scale.large(_:), v45);
    uint64_t v30 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v5 + *(int *)(v39 + 28), v28, v29);
    *uint64_t v5 = v30;
    sub_100010808((uint64_t)v5, (uint64_t)v12 + *(int *)(v46 + 36), &qword_10014FC18);
    *uint64_t v12 = v23;
    v12[1] = KeyPath;
    v12[2] = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100012510((uint64_t)v5, &qword_10014FC18);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v31 = (uint64_t)v12;
    uint64_t v32 = v44;
    sub_100033870(v31, v44, &qword_10014FBF8);
    sub_100010808(v32, (uint64_t)v48, &qword_10014FBF8);
    swift_storeEnumTagMultiPayload();
    sub_100007E0C(&qword_10014FC28);
    sub_10006AE4C();
    sub_10006AF8C();
    sub_1001041B8();
    return sub_100012510(v32, &qword_10014FBF8);
  }
  else
  {
    sub_100104678();
    uint64_t v34 = v40;
    uint64_t v35 = v42;
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v2, enum case for Image.ResizingMode.stretch(_:), v42);
    uint64_t v36 = sub_100104668();
    swift_release();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v2, v35);
    uint64_t v37 = v48;
    *uint64_t v48 = v36;
    v37[1] = 0;
    *((_WORD *)v37 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_100007E0C(&qword_10014FC28);
    sub_10006AE4C();
    sub_10006AF8C();
    return sub_1001041B8();
  }
}

unint64_t sub_10006A648()
{
  unint64_t result = qword_10014FAD0;
  if (!qword_10014FAD0)
  {
    sub_100007F30(&qword_10014FAC0);
    sub_100007F30(&qword_10014FAD8);
    sub_10006A71C();
    swift_getOpaqueTypeConformance2();
    sub_100050EC4(&qword_10014FB10, &qword_10014FB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FAD0);
  }
  return result;
}

unint64_t sub_10006A71C()
{
  unint64_t result = qword_10014FAE0;
  if (!qword_10014FAE0)
  {
    sub_100007F30(&qword_10014FAD8);
    sub_100007F30(&qword_10014FAE8);
    sub_100050EC4(&qword_10014FAF0, &qword_10014FAE8);
    sub_10006A830();
    swift_getOpaqueTypeConformance2();
    sub_100050EC4(&qword_10014FB00, &qword_10014FB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FAE0);
  }
  return result;
}

unint64_t sub_10006A830()
{
  unint64_t result = qword_10014FAF8;
  if (!qword_10014FAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FAF8);
  }
  return result;
}

unint64_t sub_10006A884()
{
  unint64_t result = qword_10014FB38;
  if (!qword_10014FB38)
  {
    sub_100007F30(&qword_10014FAB8);
    sub_10006A648();
    sub_100007F30(&qword_10014FB20);
    sub_100007F30(&qword_10014FB28);
    sub_100050EC4(&qword_10014FB30, &qword_10014FB28);
    sub_10006A830();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FB38);
  }
  return result;
}

uint64_t sub_10006A9B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100069308(*(void *)(v1 + 16), a1);
}

unint64_t sub_10006A9B8()
{
  unint64_t result = qword_10014FB60;
  if (!qword_10014FB60)
  {
    sub_100007F30(&qword_10014FB50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FB60);
  }
  return result;
}

uint64_t sub_10006AA2C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100050DA8(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10006AA70@<X0>(uint64_t a1@<X8>)
{
  return sub_1000693E4(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_10006AA80@<X0>(uint64_t a1@<X8>)
{
  return sub_100069A48(*(void *)(v1 + 16), a1);
}

unint64_t sub_10006AA88()
{
  unint64_t result = qword_10014FB80;
  if (!qword_10014FB80)
  {
    sub_100007F30(&qword_10014FB78);
    sub_10006AB28();
    sub_100050EC4(&qword_10014FBA8, &qword_10014FBB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FB80);
  }
  return result;
}

unint64_t sub_10006AB28()
{
  unint64_t result = qword_10014FB88;
  if (!qword_10014FB88)
  {
    sub_100007F30(&qword_10014FB90);
    sub_100007F30(&qword_10014FB98);
    sub_10006ABFC();
    swift_getOpaqueTypeConformance2();
    sub_100050EC4(&qword_10014E800, &qword_10014E808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FB88);
  }
  return result;
}

unint64_t sub_10006ABFC()
{
  unint64_t result = qword_10014FBA0;
  if (!qword_10014FBA0)
  {
    sub_100007F30(&qword_10014FB98);
    sub_10006A9B8();
    sub_100050EC4(&qword_10014FB00, &qword_10014FB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FBA0);
  }
  return result;
}

unint64_t sub_10006AC9C()
{
  unint64_t result = qword_10014FBC8;
  if (!qword_10014FBC8)
  {
    sub_100007F30(&qword_10014FBC0);
    sub_100050EC4(&qword_10014FBD0, &qword_10014FBD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FBC8);
  }
  return result;
}

uint64_t sub_10006AD3C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100050AE0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10006AD80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006ADC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100069FA8(a1);
}

unint64_t sub_10006ADD0()
{
  unint64_t result = qword_10014FBE8;
  if (!qword_10014FBE8)
  {
    sub_100007F30(&qword_10014FBE0);
    sub_10006AE4C();
    sub_10006AF8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FBE8);
  }
  return result;
}

unint64_t sub_10006AE4C()
{
  unint64_t result = qword_10014FBF0;
  if (!qword_10014FBF0)
  {
    sub_100007F30(&qword_10014FBF8);
    sub_10006AEEC();
    sub_100050EC4(&qword_10014FC10, &qword_10014FC18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FBF0);
  }
  return result;
}

unint64_t sub_10006AEEC()
{
  unint64_t result = qword_10014FC00;
  if (!qword_10014FC00)
  {
    sub_100007F30(&qword_10014FC08);
    sub_100050EC4(&qword_10014FB00, &qword_10014FB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FC00);
  }
  return result;
}

unint64_t sub_10006AF8C()
{
  unint64_t result = qword_10014FC20;
  if (!qword_10014FC20)
  {
    sub_100007F30(&qword_10014FC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FC20);
  }
  return result;
}

uint64_t destroy for WidgetHeaderView.Appearance(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    sub_100050AE0(*(void *)result, *(void *)(result + 8), *(unsigned char *)(result + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for WidgetHeaderView.Appearance(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[3];
  if (v3 < 0xFFFFFFFF)
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    char v6 = *((unsigned char *)a2 + 16);
    sub_100050DA8(*a2, v5, v6);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for WidgetHeaderView.Appearance(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      uint64_t v11 = *(void *)a2;
      uint64_t v12 = *(void *)(a2 + 8);
      char v13 = *(unsigned char *)(a2 + 16);
      sub_100050DA8(*(void *)a2, v12, v13);
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(unsigned char *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_100050AE0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_100050DA8(*(void *)a2, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_100050AE0(v8, v9, v10);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetHeaderView.Appearance(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    sub_100050AE0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    swift_bridgeObjectRelease();
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100050AE0(v6, v7, v8);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetHeaderView.Appearance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WidgetHeaderView.Appearance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_10006B320(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10006B338(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetHeaderView.Appearance()
{
  return &type metadata for WidgetHeaderView.Appearance;
}

unint64_t sub_10006B370()
{
  unint64_t result = qword_10014FC58;
  if (!qword_10014FC58)
  {
    sub_100007F30(&qword_10014FC60);
    sub_10006A884();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014FC58);
  }
  return result;
}

uint64_t static Logger.byoLoggerWith(subsystem:category:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_100103DA8();
}

uint64_t sub_10006B468(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162F28);
}

uint64_t sub_10006B48C(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162F40);
}

uint64_t sub_10006B4B8(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162F58);
}

uint64_t sub_10006B4D4(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162F70);
}

uint64_t sub_10006B500(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162F88);
}

uint64_t sub_10006B524(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162FA0);
}

uint64_t sub_10006B540(uint64_t a1)
{
  return sub_10006B558(a1, qword_100162FB8);
}

uint64_t sub_10006B558(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100103DB8();
  sub_1000081D0(v3, a2);
  sub_100007D30(v3, (uint64_t)a2);
  return sub_100103DA8();
}

uint64_t static Logger.appLoggerWith(category:)()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (v1)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();

  return sub_100103DA8();
}

uint64_t sub_10006B698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v6 = sub_100104B38();
  id v7 = [v5 initWithSuiteName:v6];

  if (v7)
  {
    NSString v8 = sub_100104B38();
    id v9 = [v7 objectForKey:v8];

    if (v9)
    {
      sub_100105328();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    sub_10006B9EC((uint64_t)v15, (uint64_t)v16);
    if (!v17)
    {
      sub_100012510((uint64_t)v16, &qword_10014D818);
      uint64_t v10 = sub_100103978();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
LABEL_9:
      sub_100012510((uint64_t)v4, (uint64_t *)&unk_100151950);
      sub_100103978();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
    uint64_t v10 = sub_100103978();
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void *)(v10 - 8);
    char v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    v13(v4, v11 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v10) == 1) {
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v4, v10);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v13)(a1, 0, 1, v10);
  }
  else
  {
    uint64_t result = sub_1001055C8();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for JournalWidgetBridge()
{
  return self;
}

uint64_t sub_10006B9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014D818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006BA54()
{
  id v1 = v0;
  uint64_t v2 = (void *)0xE000000000000000;
  sub_100105498(19);
  id v3 = [v0 entity];
  id v4 = [v3 managedObjectClassName];

  if (v4)
  {
    uint64_t v5 = sub_100104B78();
    uint64_t v2 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  v13._countAndFlagsBits = v5;
  v13._object = v2;
  sub_100104BE8(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 23328;
  v14._object = (void *)0xE200000000000000;
  sub_100104BE8(v14);
  id v7 = [v1 objectID];
  id v8 = [v7 pl_shortURI];

  if (v8)
  {
    uint64_t v9 = sub_100104B78();
    int v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    int v11 = (void *)0xE000000000000000;
  }
  v15._countAndFlagsBits = v9;
  v15._object = v11;
  sub_100104BE8(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x7865746E6F63205DLL;
  v16._object = (void *)0xEB00000000203A74;
  sub_100104BE8(v16);
  [v1 managedObjectContext];
  sub_100007E0C(&qword_10014FD00);
  v17._countAndFlagsBits = sub_100104B98();
  sub_100104BE8(v17);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10006BC04()
{
  uint64_t v1 = sub_100103818();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self mainBundle];
  id v6 = [v5 bundleURL];

  sub_1001037A8();
  uint64_t v7 = *(void *)(v0 + 24);
  v9[0] = *(void *)(v0 + 16);
  v9[1] = v7;
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 0x646D6F6D2ELL;
  v10._object = (void *)0xE500000000000000;
  sub_100104BE8(v10);
  sub_100103798();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10006BD64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100103728();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100103818();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v15 - v11;
  if (qword_10014C0B8 != -1) {
    swift_once();
  }
  if (qword_100163180)
  {
    sub_1000BD360(qword_100163178, (void *)qword_100163180, (uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
    sub_100007F78();
    sub_1001037F8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    sub_100103778();
  }
  uint64_t v13 = *(void *)(v1 + 40);
  v15[0] = *(void *)(v1 + 32);
  v15[1] = v13;
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = 0x6574696C71732ELL;
  v16._object = (void *)0xE700000000000000;
  sub_100104BE8(v16);
  sub_100103798();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_10006BFFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStackConfiguration()
{
  return self;
}

uint64_t sub_10006C070()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_10014FDC8);
  sub_100007D30(v0, (uint64_t)qword_10014FDC8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006C16C(uint64_t a1)
{
  return sub_100103DC8();
}

uint64_t sub_10006C1AC()
{
  v1[4] = v0;
  sub_100007E0C(&qword_10014DF30);
  v1[5] = swift_task_alloc();
  id v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  void *v2 = v1;
  v2[1] = sub_10006C26C;
  return sub_1000A33DC();
}

uint64_t sub_10006C26C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10006C36C, 0, 0);
}

uint64_t sub_10006C36C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1)
  {
LABEL_13:
    swift_task_dealloc();
    char v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v21(v1);
  }
  uint64_t v2 = *(void *)(v0 + 40);
  sub_10006CB80(*(void *)(v0 + 32) + qword_100162FD0, v2);
  uint64_t v3 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = *(void *)(v0 + 40);
  if (v4 == 1)
  {
    sub_10006CB20(*(void *)(v0 + 40));
LABEL_8:
    if (qword_10014BFA8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100103DB8();
    sub_100007D30(v17, (uint64_t)qword_10014FDC8);
    uint64_t v18 = sub_100103D98();
    os_log_type_t v19 = sub_100104FF8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "generateImage no route info in metadata", v20, 2u);
      swift_slowDealloc();
    }

    goto LABEL_13;
  }
  uint64_t v6 = sub_1000417F0();
  sub_100043E30(v5);
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v7 + qword_100151B00;
  uint64_t v9 = *(void *)(v7 + qword_100151B00);
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = *(void *)(v8 + 8);
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = (objc_class *)type metadata accessor for RouteMapGenerator();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_mapSnapshotter] = 0;
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_lineWidth] = 0x4008000000000000;
  uint64_t v13 = &v12[OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_id];
  *(void *)uint64_t v13 = v9;
  *((void *)v13 + 1) = v10;
  *(void *)&v12[OBJC_IVAR____TtC20JournalWidgetsSecure17RouteMapGenerator_routeCoordinates] = v6;
  *(void *)(v0 + 16) = v12;
  *(void *)(v0 + 24) = v11;
  swift_bridgeObjectRetain();
  [super init];
  char v14 = *(unsigned char *)(v7 + qword_100151B30);
  *(unsigned char *)(v0 + 104) = v14;
  Swift::String v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v15;
  *Swift::String v15 = v0;
  v15[1] = sub_10006C64C;
  return sub_10005D228(v14);
}

uint64_t sub_10006C64C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_10006C768, 0, 0);
}

uint64_t sub_10006C768()
{
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    switch(*(unsigned char *)(v0 + 104))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v7 = sub_1001057F8();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          if (qword_10014BEC0 != -1) {
            swift_once();
          }
          sub_1000B2A44(v1, *(void *)(v0 + 64), *(void *)(v0 + 72));
        }
        break;
    }
    uint64_t v6 = *(void *)(v0 + 96);
  }
  else
  {
    if (qword_10014BFA8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_100103DB8();
    sub_100007D30(v2, (uint64_t)qword_10014FDC8);
    uint64_t v3 = sub_100103D98();
    os_log_type_t v4 = sub_100104FF8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "error generating route map image", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = 0;
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v6);
}

uint64_t sub_10006C9C4()
{
  return sub_10006CB20(v0 + qword_100162FD0);
}

uint64_t sub_10006C9D4(uint64_t a1)
{
  return sub_10006CB20(a1 + qword_100162FD0);
}

uint64_t type metadata accessor for WorkoutRouteThumbnailCacheOperation()
{
  uint64_t result = qword_10014FE08;
  if (!qword_10014FE08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006CA30()
{
  sub_10006CAC0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_10006CAC0()
{
  if (!qword_10014FE20)
  {
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(255);
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10014FE20);
    }
  }
}

uint64_t sub_10006CB18()
{
  return type metadata accessor for WorkoutRouteThumbnailCacheOperation();
}

uint64_t sub_10006CB20(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014DF30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006CB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014DF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006CBE8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10006CC38()
{
  return swift_initClassMetadata2();
}

char *sub_10006CC80()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = qword_10014FF60;
  sub_100007E0C(&qword_100150078);
  sub_10006CDFC();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [objc_allocWithZone(ObjCClassFromMetadata) init];

  v7.receiver = v4;
  v7.super_class = ObjectType;
  uint64_t v5 = (char *)[super init];
  [*(id *)&v5[qword_10014FF60] setCountLimit:500];
  return v5;
}

char *sub_10006CD40()
{
  return sub_10006CC80();
}

uint64_t sub_10006CD64(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  swift_unknownObjectRetain();
  id v5 = a1;
  sub_100105328();

  swift_unknownObjectRelease();
  return sub_1000121EC((uint64_t)&v7);
}

void sub_10006CDD4(uint64_t a1)
{
}

uint64_t type metadata accessor for MemoryCache()
{
  return sub_10000ABE8();
}

unint64_t sub_10006CDFC()
{
  unint64_t result = qword_100150080;
  if (!qword_100150080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100150080);
  }
  return result;
}

uint64_t sub_10006CE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006CE50);
}

uint64_t sub_10006CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for StreaksWidgetTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006CF60);
}

uint64_t sub_10006CF60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for StreaksWidgetTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for StreaksWidgetAccessoryCircularView()
{
  uint64_t result = qword_100150148;
  if (!qword_100150148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006D0B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006D0D0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_100007E0C(&qword_100150188);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_100104828();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v16 = (char *)&v22 - v15;
  sub_100104818();
  *(void *)uint64_t v9 = sub_100104148();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 0;
  uint64_t v17 = sub_100007E0C(&qword_100150190);
  sub_10006D2F8(a1, &v9[*(int *)(v17 + 44)]);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v18(v14, v16, v10);
  sub_100010808((uint64_t)v9, (uint64_t)v7, &qword_100150188);
  v18(a2, v14, v10);
  uint64_t v19 = sub_100007E0C(&qword_100150198);
  sub_100010808((uint64_t)v7, (uint64_t)&a2[*(int *)(v19 + 48)], &qword_100150188);
  sub_100012510((uint64_t)v9, &qword_100150188);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v16, v10);
  sub_100012510((uint64_t)v7, &qword_100150188);
  return ((uint64_t (*)(char *, uint64_t))v20)(v14, v10);
}

uint64_t sub_10006D2F8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v2 = sub_100007E0C(&qword_1001501A0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v53 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v52 = (uint64_t)&v43 - v5;
  uint64_t v43 = sub_100007E0C(&qword_10014FC18) - 8;
  __chkstk_darwin(v43);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100104658();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007E0C(&qword_10014FBF8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_100007E0C(&qword_1001501A8) - 8;
  __chkstk_darwin(v48);
  uint64_t v45 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100007E0C(&qword_1001501B0);
  __chkstk_darwin(v49);
  uint64_t v46 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007E0C(&qword_1001501B8);
  uint64_t v50 = *(void *)(v18 - 8);
  uint64_t v51 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v44 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v47 = (char *)&v43 - v21;
  uint64_t v22 = sub_100104648();
  uint64_t v23 = sub_1001043D8();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.Scale.small(_:), v8);
  uint64_t v25 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v7 + *(int *)(v43 + 36), v11, v8);
  *uint64_t v7 = v25;
  sub_100010808((uint64_t)v7, (uint64_t)v15 + *(int *)(v13 + 44), &qword_10014FC18);
  *uint64_t v15 = v22;
  v15[1] = KeyPath;
  void v15[2] = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100012510((uint64_t)v7, &qword_10014FC18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  swift_release();
  swift_release();
  sub_100104718();
  sub_100103ED8();
  uint64_t v26 = v45;
  sub_100010808((uint64_t)v15, v45, &qword_10014FBF8);
  uint64_t v27 = (_OWORD *)(v26 + *(int *)(v48 + 44));
  long long v28 = v57;
  *uint64_t v27 = v56;
  v27[1] = v28;
  v27[2] = v58;
  sub_100012510((uint64_t)v15, &qword_10014FBF8);
  LODWORD(v15) = sub_1001041F8();
  uint64_t v29 = v46;
  sub_100010808(v26, v46, &qword_1001501A8);
  *(_DWORD *)(v29 + *(int *)(v49 + 36)) = v15;
  sub_100012510(v26, &qword_1001501A8);
  sub_10006F204();
  uint64_t v30 = v44;
  sub_100104518();
  sub_100012510(v29, &qword_1001501B0);
  uint64_t v31 = v50;
  uint64_t v32 = v51;
  uint64_t v33 = v47;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v30, v51);
  uint64_t v34 = v52;
  sub_10006D8F0(v52);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v35(v30, v33, v32);
  uint64_t v36 = v34;
  uint64_t v37 = v34;
  uint64_t v38 = v53;
  sub_100010808(v36, v53, &qword_1001501A0);
  uint64_t v39 = v55;
  v35(v55, v30, v32);
  uint64_t v40 = sub_100007E0C(&qword_1001501D0);
  sub_100010808(v38, (uint64_t)&v39[*(int *)(v40 + 48)], &qword_1001501A0);
  sub_100012510(v37, &qword_1001501A0);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v31 + 8);
  v41(v33, v32);
  sub_100012510(v38, &qword_1001501A0);
  return ((uint64_t (*)(char *, uint64_t))v41)(v30, v32);
}

uint64_t sub_10006D8F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v249 = a1;
  unint64_t v250 = sub_100104888();
  uint64_t v253 = *(void *)(v250 - 8);
  __chkstk_darwin(v250);
  uint64_t v3 = (char *)&v213 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_100007E0C(&qword_1001501D8);
  __chkstk_darwin(v247);
  uint64_t v5 = (char *)&v213 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_100007E0C(&qword_1001501E0);
  __chkstk_darwin(v248);
  uint64_t v240 = (uint64_t)&v213 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014FC38);
  __chkstk_darwin(v7 - 8);
  uint64_t v230 = (uint64_t)&v213 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_100007E0C(&qword_1001501E8);
  __chkstk_darwin(v232);
  v234 = (char *)&v213 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_100007E0C(&qword_1001501F0);
  __chkstk_darwin(v233);
  uint64_t v237 = (uint64_t)&v213 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_100007E0C(&qword_1001501F8);
  uint64_t v11 = __chkstk_darwin(v236);
  uint64_t v238 = (uint64_t)&v213 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v235 = (uint64_t)&v213 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v213 - v15;
  uint64_t KeyPath = sub_100007E0C(&qword_10014E7A0);
  __chkstk_darwin(KeyPath);
  v245 = (uint64_t *)((char *)&v213 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v244 = sub_100103FE8();
  uint64_t v251 = *(void *)(v244 - 8);
  __chkstk_darwin(v244);
  v243 = (char *)&v213 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100103A08();
  __chkstk_darwin(v19 - 8);
  v226 = (void (*)(char *, char *, uint64_t))((char *)&v213 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v227 = sub_100007E0C(&qword_100150200);
  __chkstk_darwin(v227);
  uint64_t v21 = sub_100103F48();
  uint64_t v255 = *(void *)(v21 - 8);
  uint64_t v256 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v229 = (uint64_t)&v213 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v252 = (char *)&v213 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  long long v28 = (char *)&v213 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v213 - v29;
  uint64_t v228 = sub_100007E0C(&qword_100150208);
  uint64_t v31 = __chkstk_darwin(v228);
  uint64_t v231 = (uint64_t)&v213 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v213 - v34;
  __chkstk_darwin(v33);
  uint64_t v246 = (uint64_t)&v213 - v36;
  uint64_t v37 = v1;
  uint64_t v38 = v1 + *(int *)(type metadata accessor for StreaksWidgetAccessoryCircularView() + 20);
  uint64_t v39 = (unsigned __int8 *)(v38 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20));
  uint64_t v40 = *v39;
  uint64_t v254 = v37;
  if (v40 == 2)
  {
    uint64_t v41 = v253;
    uint64_t v42 = (uint64_t)v3;
    uint64_t v43 = v3;
    unint64_t v44 = v250;
    (*(void (**)(char *, void, unint64_t))(v253 + 104))(v43, enum case for WidgetFamily.accessoryCircular(_:), v250);
    sub_100096040((uint64_t)v28);
    uint64_t v45 = sub_100048BF0(v42);
    v245 = (uint64_t *)v47;
    uint64_t v246 = v46;
    uint64_t v48 = v5;
    char v50 = v49 & 1;
    uint64_t v251 = *(void *)(v255 + 8);
    v255 += 8;
    ((void (*)(char *, uint64_t))v251)(v28, v256);
    (*(void (**)(uint64_t, unint64_t))(v41 + 8))(v42, v44);
    sub_1001043F8();
    uint64_t v51 = v246;
    uint64_t v253 = sub_100104468();
    uint64_t v53 = v52;
    char v55 = v54;
    swift_release();
    LOBYTE(v42) = v55 & 1;
    sub_100050AE0(v45, v51, v50);
    swift_bridgeObjectRelease();
    sub_100104388();
    uint64_t v56 = v253;
    uint64_t v57 = sub_100104428();
    uint64_t v59 = v58;
    v245 = (uint64_t *)v60;
    char v62 = v61 & 1;
    sub_100050AE0(v56, v53, v42);
    swift_bridgeObjectRelease();
    LODWORD(v264) = sub_1001041F8();
    unint64_t v250 = sub_100104438();
    uint64_t v246 = v63;
    LODWORD(v241) = v64;
    uint64_t v253 = v65;
    sub_100050AE0(v57, v59, v62);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    LODWORD(v244) = sub_1001042E8();
    sub_100103E08();
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    uint64_t v71 = v70;
    uint64_t v73 = v72;
    LODWORD(v245) = sub_100104308();
    sub_100103E08();
    v243 = v74;
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    sub_100096040((uint64_t)v28);
    uint64_t v81 = v252;
    sub_100103F28();
    sub_100048EEC();
    uint64_t v82 = v256;
    LOBYTE(v57) = sub_100105338();
    uint64_t v83 = (void (*)(char *, uint64_t))v251;
    ((void (*)(char *, uint64_t))v251)(v81, v82);
    v83(v28, v82);
    char v279 = v241 & 1;
    if (v57) {
      double v84 = 1.0;
    }
    else {
      double v84 = 0.1;
    }
    char v278 = 0;
    char v276 = 0;
    uint64_t v241 = swift_getKeyPath();
    sub_100096040((uint64_t)v28);
    sub_100103F28();
    char v85 = sub_100105338();
    v83(v81, v82);
    v83(v28, v82);
    if (v85) {
      uint64_t v86 = 2;
    }
    else {
      uint64_t v86 = 0;
    }
    char v87 = v279;
    char v88 = v278;
    char v89 = v276;
    uint64_t v90 = swift_getKeyPath();
    BOOL v275 = (v85 & 1) == 0;
    uint64_t v91 = v246;
    *(void *)uint64_t v48 = v250;
    *((void *)v48 + 1) = v91;
    v48[16] = v87;
    *(_DWORD *)(v48 + 17) = v264;
    *((_DWORD *)v48 + 5) = *(_DWORD *)((char *)&v264 + 3);
    uint64_t v92 = KeyPath;
    *((void *)v48 + 3) = v253;
    *((void *)v48 + 4) = v92;
    v48[40] = 1;
    *(_DWORD *)(v48 + 41) = v257;
    *((_DWORD *)v48 + 11) = *(_DWORD *)((char *)&v257 + 3);
    v48[48] = v244;
    int v93 = v286;
    *((_DWORD *)v48 + 13) = *(_DWORD *)((char *)&v286 + 3);
    *(_DWORD *)(v48 + 49) = v93;
    *((void *)v48 + 7) = v67;
    *((void *)v48 + 8) = v69;
    *((void *)v48 + 9) = v71;
    *((void *)v48 + 10) = v73;
    v48[88] = v88;
    *(_DWORD *)(v48 + 89) = v280;
    *((_DWORD *)v48 + 23) = *(_DWORD *)((char *)&v280 + 3);
    v48[96] = (char)v245;
    *((_DWORD *)v48 + 25) = *(_DWORD *)((char *)v277 + 3);
    *(_DWORD *)(v48 + 97) = v277[0];
    *((void *)v48 + 13) = v243;
    *((void *)v48 + 14) = v76;
    *((void *)v48 + 15) = v78;
    *((void *)v48 + 16) = v80;
    v48[136] = v89;
    *((void *)v48 + 18) = v241;
    *((double *)v48 + 19) = v84;
    *((void *)v48 + 20) = v90;
    *((void *)v48 + 21) = v86;
    v48[176] = v275;
    swift_storeEnumTagMultiPayload();
    sub_100007E0C(&qword_100150210);
    sub_100050EC4(&qword_100150218, &qword_1001501E0);
    sub_10006F430();
    return sub_1001041B8();
  }
  else
  {
    uint64_t v95 = v256;
    uint64_t v214 = v40;
    v224 = v16;
    uint64_t v241 = *((void *)v39 + 1);
    sub_100096040((uint64_t)v30);
    sub_100103F28();
    unint64_t v250 = sub_100048EEC();
    char v96 = sub_100105338();
    uint64_t v97 = *(void (**)(char *, uint64_t))(v255 + 8);
    v239 = v28;
    uint64_t v98 = v255 + 8;
    uint64_t v253 = (uint64_t)v97;
    v97(v28, v95);
    uint64_t v99 = v95;
    v225 = v5;
    unint64_t v215 = 0x8000000100111790;
    v216 = v35;
    if (v96)
    {
      char v100 = 0;
      unint64_t v101 = 0xD00000000000007CLL;
      uint64_t v102 = 0x8000000100111790;
    }
    else
    {
      *(void *)&long long v264 = v241;
      sub_1001039E8();
      sub_10006F6E8();
      sub_100103648();
      sub_100050EC4(&qword_100150280, &qword_100150200);
      unint64_t v101 = sub_100104478();
      uint64_t v102 = v103;
      char v100 = v104 & 1;
    }
    uint64_t v255 = v98;
    ((void (*)(char *, uint64_t))v253)(v30, v99);
    sub_1001043B8();
    uint64_t v105 = sub_100104468();
    uint64_t v107 = v106;
    char v109 = v108;
    swift_release();
    sub_100050AE0(v101, v102, v100);
    swift_bridgeObjectRelease();
    uint64_t v110 = sub_100104458();
    uint64_t v112 = v111;
    char v114 = v113 & 1;
    sub_100050AE0(v105, v107, v109 & 1);
    swift_bridgeObjectRelease();
    LODWORD(v264) = sub_1001041F8();
    v226 = (void (*)(char *, char *, uint64_t))sub_100104438();
    uint64_t v227 = v115;
    uint64_t v223 = v116;
    int v222 = v117;
    sub_100050AE0(v110, v112, v114);
    swift_bridgeObjectRelease();
    uint64_t v221 = swift_getKeyPath();
    sub_100104718();
    sub_100103ED8();
    char v118 = v281;
    uint64_t v217 = v280;
    uint64_t v218 = v282;
    char v119 = v283;
    uint64_t v219 = v285;
    uint64_t v220 = v284;
    char v120 = sub_1001042E8();
    sub_100103E08();
    uint64_t v122 = v121;
    uint64_t v124 = v123;
    uint64_t v126 = v125;
    uint64_t v128 = v127;
    uint64_t v129 = (uint64_t)v239;
    sub_100096040((uint64_t)v239);
    uint64_t v130 = v252;
    sub_100103F28();
    char v131 = sub_100105338();
    uint64_t v132 = v130;
    uint64_t v133 = (void (*)(uint64_t, uint64_t))v253;
    ((void (*)(char *, uint64_t))v253)(v132, v256);
    v133(v129, v256);
    LOBYTE(v277[0]) = v222 & 1;
    if (v131) {
      double v134 = 1.0;
    }
    else {
      double v134 = 0.1;
    }
    char v279 = 0;
    char v278 = v118;
    char v276 = v119;
    BOOL v275 = 0;
    uint64_t v135 = swift_getKeyPath();
    *(void *)&long long v264 = v226;
    *((void *)&v264 + 1) = v223;
    LOBYTE(v265) = v277[0];
    *((void *)&v265 + 1) = v227;
    *(void *)&long long v266 = v221;
    *((void *)&v266 + 1) = 1;
    LOBYTE(v267) = v279;
    *((void *)&v267 + 1) = v217;
    LOBYTE(v268) = v278;
    *((void *)&v268 + 1) = v218;
    LOBYTE(v269) = v276;
    *((void *)&v269 + 1) = v220;
    *(void *)&long long v270 = v219;
    uint64_t v136 = v256;
    BYTE8(v270) = v120;
    *(void *)&long long v271 = v122;
    *((void *)&v271 + 1) = v124;
    *(void *)&long long v272 = v126;
    *((void *)&v272 + 1) = v128;
    LOBYTE(v273) = v275;
    *((void *)&v273 + 1) = v135;
    double v274 = v134;
    uint64_t v137 = v243;
    sub_100103FB8();
    uint64_t v138 = swift_getKeyPath();
    uint64_t v140 = v244;
    uint64_t v139 = v245;
    unint64_t v141 = (char *)v245 + *(int *)(KeyPath + 28);
    uint64_t v142 = v251;
    v226 = *(void (**)(char *, char *, uint64_t))(v251 + 16);
    uint64_t v227 = v251 + 16;
    v226(v141, v137, v244);
    *uint64_t v139 = v138;
    uint64_t v143 = (uint64_t)v216;
    sub_100010808((uint64_t)v139, (uint64_t)&v216[*(int *)(v228 + 36)], &qword_10014E7A0);
    long long v144 = v273;
    *(_OWORD *)(v143 + 128) = v272;
    *(_OWORD *)(v143 + 144) = v144;
    *(double *)(v143 + 160) = v274;
    long long v145 = v269;
    *(_OWORD *)(v143 + 64) = v268;
    *(_OWORD *)(v143 + 80) = v145;
    long long v146 = v271;
    *(_OWORD *)(v143 + 96) = v270;
    *(_OWORD *)(v143 + 112) = v146;
    long long v147 = v265;
    *(_OWORD *)uint64_t v143 = v264;
    *(_OWORD *)(v143 + 16) = v147;
    long long v148 = v267;
    *(_OWORD *)(v143 + 32) = v266;
    *(_OWORD *)(v143 + 48) = v148;
    sub_10006F7A0((uint64_t)&v264);
    sub_100012510((uint64_t)v139, &qword_10014E7A0);
    v149 = *(void (**)(char *, uint64_t))(v142 + 8);
    uint64_t v251 = v142 + 8;
    uint64_t v228 = (uint64_t)v149;
    v149(v137, v140);
    sub_10006F7FC((uint64_t)&v264);
    sub_100033870(v143, v246, &qword_100150208);
    uint64_t v150 = v229;
    sub_100096040(v229);
    sub_100103F28();
    char v151 = sub_100105338();
    uint64_t v152 = v136;
    ((void (*)(uint64_t, uint64_t))v253)(v129, v136);
    if (v151)
    {
      char v153 = 0;
      unint64_t v154 = 0xD00000000000007CLL;
      uint64_t v155 = v215;
    }
    else
    {
      if (v214) {
        uint64_t v156 = sub_10008A2C8();
      }
      else {
        uint64_t v156 = sub_10008A118();
      }
      *(void *)&long long v257 = v156;
      *((void *)&v257 + 1) = v157;
      sub_100007F78();
      unint64_t v154 = sub_100104488();
      uint64_t v155 = v158;
      char v153 = v159 & 1;
    }
    ((void (*)(uint64_t, uint64_t))v253)(v150, v152);
    uint64_t v160 = sub_100104378();
    uint64_t v161 = v230;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v230, 1, 1, v160);
    sub_1001043A8();
    sub_100012510(v161, &qword_10014FC38);
    uint64_t v162 = sub_100104468();
    uint64_t v164 = v163;
    char v166 = v165;
    swift_release();
    sub_100050AE0(v154, v155, v153);
    swift_bridgeObjectRelease();
    sub_100104388();
    uint64_t v167 = sub_100104428();
    uint64_t v169 = v168;
    char v171 = v170 & 1;
    sub_100050AE0(v162, v164, v166 & 1);
    swift_bridgeObjectRelease();
    LODWORD(v257) = sub_1001041F8();
    uint64_t v172 = sub_100104438();
    uint64_t v229 = v173;
    uint64_t v230 = v172;
    uint64_t v175 = v174;
    LODWORD(v241) = v176 & 1;
    sub_100050AE0(v167, v169, v171);
    swift_bridgeObjectRelease();
    sub_100104718();
    sub_100103ED8();
    uint64_t v177 = v286;
    LOBYTE(v164) = v287;
    uint64_t v178 = v288;
    LOBYTE(v169) = v289;
    uint64_t v179 = v290;
    uint64_t v180 = v291;
    char v181 = sub_1001042E8();
    sub_100103E08();
    *(void *)&long long v257 = v172;
    uint64_t v182 = v229;
    *((void *)&v257 + 1) = v229;
    LOBYTE(v258) = v241;
    *((void *)&v258 + 1) = v175;
    *(void *)&long long v259 = v177;
    BYTE8(v259) = v164;
    *(void *)&long long v260 = v178;
    BYTE8(v260) = v169;
    *(void *)&long long v261 = v179;
    *((void *)&v261 + 1) = v180;
    LOBYTE(v262) = v181;
    *((void *)&v262 + 1) = v183;
    *(void *)&v263[0] = v184;
    *((void *)&v263[0] + 1) = v185;
    *(void *)&v263[1] = v186;
    BYTE8(v263[1]) = 0;
    v187 = v243;
    sub_100103FC8();
    uint64_t v188 = swift_getKeyPath();
    uint64_t v190 = v244;
    uint64_t v189 = v245;
    v226((char *)v245 + *(int *)(KeyPath + 28), v187, v244);
    *uint64_t v189 = v188;
    uint64_t v191 = v234;
    sub_100010808((uint64_t)v189, (uint64_t)&v234[*(int *)(v232 + 36)], &qword_10014E7A0);
    long long v192 = v262;
    v191[4] = v261;
    v191[5] = v192;
    v191[6] = v263[0];
    *(_OWORD *)((char *)v191 + 105) = *(_OWORD *)((char *)v263 + 9);
    long long v193 = v258;
    *uint64_t v191 = v257;
    v191[1] = v193;
    long long v194 = v260;
    v191[2] = v259;
    v191[3] = v194;
    sub_10006F858((uint64_t)&v257);
    sub_100012510((uint64_t)v189, &qword_10014E7A0);
    ((void (*)(char *, uint64_t))v228)(v187, v190);
    sub_100050AE0(v230, v182, v241);
    swift_bridgeObjectRelease();
    uint64_t v195 = (uint64_t)v239;
    sub_100096040((uint64_t)v239);
    v196 = v252;
    sub_100103F28();
    uint64_t v197 = v256;
    LOBYTE(v188) = sub_100105338();
    v198 = (void (*)(uint64_t, uint64_t))v253;
    ((void (*)(char *, uint64_t))v253)(v196, v197);
    v198(v195, v197);
    if (v188) {
      double v199 = 1.0;
    }
    else {
      double v199 = 0.1;
    }
    uint64_t v200 = swift_getKeyPath();
    uint64_t v201 = v237;
    sub_100010808((uint64_t)v191, v237, &qword_1001501E8);
    uint64_t v202 = v201 + *(int *)(v233 + 36);
    *(void *)uint64_t v202 = v200;
    *(double *)(v202 + 8) = v199;
    sub_100012510((uint64_t)v191, &qword_1001501E8);
    sub_100096040(v195);
    sub_100103F28();
    LOBYTE(v200) = sub_100105338();
    v198((uint64_t)v196, v197);
    v198(v195, v197);
    uint64_t v203 = v200 & 1;
    uint64_t v204 = swift_getKeyPath();
    uint64_t v205 = v235;
    sub_100010808(v201, v235, &qword_1001501F0);
    uint64_t v206 = v205 + *(int *)(v236 + 36);
    *(void *)uint64_t v206 = v204;
    *(void *)(v206 + 8) = v203;
    *(unsigned char *)(v206 + 16) = 0;
    sub_100012510(v201, &qword_1001501F0);
    uint64_t v207 = (uint64_t)v224;
    sub_100033870(v205, (uint64_t)v224, &qword_1001501F8);
    uint64_t v208 = v246;
    uint64_t v209 = v231;
    sub_100010808(v246, v231, &qword_100150208);
    uint64_t v210 = v238;
    sub_100010808(v207, v238, &qword_1001501F8);
    uint64_t v211 = v240;
    sub_100010808(v209, v240, &qword_100150208);
    uint64_t v212 = sub_100007E0C(&qword_100150288);
    sub_100010808(v210, v211 + *(int *)(v212 + 48), &qword_1001501F8);
    sub_100012510(v210, &qword_1001501F8);
    sub_100012510(v209, &qword_100150208);
    sub_100010808(v211, (uint64_t)v225, &qword_1001501E0);
    swift_storeEnumTagMultiPayload();
    sub_100007E0C(&qword_100150210);
    sub_100050EC4(&qword_100150218, &qword_1001501E0);
    sub_10006F430();
    sub_1001041B8();
    sub_100012510(v211, &qword_1001501E0);
    sub_100012510(v207, &qword_1001501F8);
    return sub_100012510(v208, &qword_100150208);
  }
}

uint64_t sub_10006EE84@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_100104718();
  a1[1] = v3;
  uint64_t v4 = sub_100007E0C(&qword_100150180);
  return sub_10006D0D0(v1, (char *)a1 + *(int *)(v4 + 44));
}

uint64_t sub_10006EEC8()
{
  return sub_100104038();
}

uint64_t sub_10006EEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006F0F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_10006EF18@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100104058();
  *a1 = v3;
  return result;
}

uint64_t sub_10006EF44()
{
  return sub_100104068();
}

uint64_t sub_10006EF6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1001040D8();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10006EFA0()
{
  return sub_1001040E8();
}

uint64_t sub_10006EFD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100104098();
  *a1 = result;
  return result;
}

uint64_t sub_10006EFFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100104098();
  *a1 = result;
  return result;
}

uint64_t sub_10006F028()
{
  return sub_1001040A8();
}

uint64_t sub_10006F054()
{
  return sub_1001040A8();
}

uint64_t sub_10006F080()
{
  return sub_100103FF8();
}

uint64_t sub_10006F0A4()
{
  return sub_100103FF8();
}

uint64_t sub_10006F0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006F0F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_10006F0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_10006F1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006F0F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

unint64_t sub_10006F204()
{
  unint64_t result = qword_1001501C0;
  if (!qword_1001501C0)
  {
    sub_100007F30(&qword_1001501B0);
    sub_10006F5CC(&qword_1001501C8, &qword_1001501A8, (void (*)(void))sub_10006AE4C);
    sub_100050EC4(&qword_10014FB10, &qword_10014FB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001501C0);
  }
  return result;
}

uint64_t sub_10006F2D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100104078();
  *a1 = result;
  return result;
}

uint64_t sub_10006F2FC()
{
  return sub_100104088();
}

uint64_t sub_10006F324@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100104078();
  *a1 = result;
  return result;
}

uint64_t sub_10006F350()
{
  return sub_100104088();
}

uint64_t sub_10006F378@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100104058();
  *a1 = v3;
  return result;
}

uint64_t sub_10006F3A4()
{
  return sub_100104068();
}

uint64_t sub_10006F3CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1001040D8();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10006F400()
{
  return sub_1001040E8();
}

unint64_t sub_10006F430()
{
  unint64_t result = qword_100150220;
  if (!qword_100150220)
  {
    sub_100007F30(&qword_100150210);
    sub_10006F4D0();
    sub_100050EC4(&qword_10014E800, &qword_10014E808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150220);
  }
  return result;
}

unint64_t sub_10006F4D0()
{
  unint64_t result = qword_100150228;
  if (!qword_100150228)
  {
    sub_100007F30(&qword_100150230);
    sub_10006F5CC(&qword_100150238, &qword_100150240, (void (*)(void))sub_10006F59C);
    sub_100050EC4(&qword_10014E7F0, &qword_10014E7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150228);
  }
  return result;
}

uint64_t sub_10006F59C()
{
  return sub_10006F5CC(&qword_100150248, &qword_100150250, (void (*)(void))sub_10006F648);
}

uint64_t sub_10006F5CC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006F648()
{
  unint64_t result = qword_100150258;
  if (!qword_100150258)
  {
    sub_100007F30(&qword_100150260);
    sub_100050EC4(&qword_100150268, &qword_100150270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150258);
  }
  return result;
}

unint64_t sub_10006F6E8()
{
  unint64_t result = qword_100150278;
  if (!qword_100150278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150278);
  }
  return result;
}

uint64_t sub_10006F73C()
{
  return sub_100104038();
}

uint64_t sub_10006F760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10006F0F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_10006F7A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006F7FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006F858(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006F898()
{
  return sub_100050EC4(&qword_100150290, &qword_100150298);
}

NSString sub_10006F8D4()
{
  NSString result = sub_100104B38();
  qword_100162FD8 = (uint64_t)result;
  return result;
}

NSString sub_10006F910()
{
  NSString result = sub_100104B38();
  qword_100162FE0 = (uint64_t)result;
  return result;
}

uint64_t _s4KeysCMa()
{
  return self;
}

id sub_10006F96C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1001055E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)sub_1001054D8())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)sub_1001054D8();
LABEL_22:
    uint64_t v13 = v12;
    _s5AssetCMa();
    char v14 = sub_100105218();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)sub_1001054D8();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)sub_1001054D8();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = sub_100105218();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        long long v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_100105218();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006FC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_100071580(a1 + v12, (uint64_t)v10);
        sub_100071580(a2 + v12, (uint64_t)v7);
        char v15 = sub_1000D4B5C((uint64_t)v10, v7);
        sub_1000102B0((uint64_t)v7);
        sub_1000102B0((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_10006FDA8(uint64_t a1)
{
  sub_1000715E4(a1, (uint64_t)v20);
  uint64_t v3 = v21;
  if (v21)
  {
    uint64_t v4 = sub_100012154(v20, v21);
    uint64_t v5 = *(void *)(v3 - 8);
    __chkstk_darwin(v4);
    uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_1001057E8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_1000121EC((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = (objc_class *)_s16MultiPinMapAssetCMa();
  v19.receiver = v1;
  v19.super_class = v9;
  unsigned int v10 = [super isEqual:v8];
  swift_unknownObjectRelease();
  if (!v10) {
    goto LABEL_17;
  }
  sub_1000715E4(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_100012510((uint64_t)v20, &qword_10014D818);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    char v16 = 0;
    return v16 & 1;
  }
  uint64_t v11 = (char *)v18[1];
  if (!*(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), unint64_t v12 = (double *)sub_1000F6174(), swift_release(), v12 == (double *)1)
    || (uint64_t v13 = swift_bridgeObjectRetain(), sub_100071554(v13), !v12))
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = _swiftEmptyArrayStorage;
  }
  if (!*(void *)&v11[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), uint64_t v14 = (double *)sub_1000F6174(), swift_release(), v14 == (double *)1)
    || (uint64_t v15 = swift_bridgeObjectRetain(), sub_100071554(v15), !v14))
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  char v16 = sub_10006FC48((uint64_t)v12, (uint64_t)v14);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_1000700D4(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  v13[1] = a5;
  v13[2] = a3;
  uint64_t v8 = sub_100007E0C(&qword_1001503E0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10007143C();
  sub_100105968();
  uint64_t v17 = a2;
  char v16 = 0;
  sub_100007E0C(&qword_1001503C8);
  sub_100071490(&qword_1001503E8, &qword_1001503F0);
  sub_100105768();
  if (!v5)
  {
    char v15 = 1;
    sub_100105738();
    char v14 = 2;
    sub_100105758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000702C8()
{
  uint64_t v1 = 0x6D696C537369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F697369766572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144737469736976;
  }
}

uint64_t sub_100070324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100071064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007034C(uint64_t a1)
{
  unint64_t v2 = sub_10007143C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100070388(uint64_t a1)
{
  unint64_t v2 = sub_10007143C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000703C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000711C0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_100070400(void *a1)
{
  return sub_1000700D4(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_100070428(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata))
  {
    swift_retain();
    uint64_t v3 = sub_1000F6174();
    char v5 = v4;
    a1 = swift_release();
    if (v3 != 1)
    {
      a1 = sub_100071554(v3);
      if (v5) {
        return 1;
      }
    }
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v7 = v6;
  sub_100007E0C(&qword_1001503F8);
  sub_100105138();

  return v9 & 1;
}

uint64_t sub_100070554()
{
  uint64_t v1 = sub_100007E0C(&qword_100150400);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  uint64_t v5 = sub_1000F6174();
  swift_release();
  if (v5 == 1) {
    return 0;
  }
  if (!v5
    || !*(void *)(v5 + 16)
    || (uint64_t v7 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8),
        uint64_t v8 = (uint64_t *)(v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))),
        (uint64_t v9 = v8[1]) == 0)
    || !*(void *)(v0 + v4))
  {
LABEL_15:
    sub_100007E0C(&qword_10014EF08);
    uint64_t inited = swift_initStackObject();
    uint64_t v17 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100108250;
    if (v5)
    {
      if (*(void *)(v5 + 16))
      {
        uint64_t v18 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
        uint64_t v19 = *(void *)(v5
                        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
        uint64_t v20 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
      }
      v17[4] = v19;
      v17[5] = v20;
      uint64_t v22 = *(void *)(v5 + 16);
      uint64_t v23 = _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if (v22)
      {
        sub_100071580(v5+ ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80)), (uint64_t)v3);
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v25 = 1;
      }
      uint64_t v21 = v17 + 6;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v3, v25, 1, v23);
      sub_100071554(v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v3, 1, v23) != 1)
      {
        uint64_t v27 = *((void *)v3 + 2);
        uint64_t v26 = *((void *)v3 + 3);
        swift_bridgeObjectRetain();
        sub_1000102B0((uint64_t)v3);
        *uint64_t v21 = v27;
        goto LABEL_27;
      }
      sub_100012510((uint64_t)v3, &qword_100150400);
    }
    else
    {
      uint64_t v21 = (void *)(inited + 48);
      *(void *)(inited + 32) = 0;
      *(void *)(inited + 40) = 0;
    }
    uint64_t v26 = 0;
    *uint64_t v21 = 0;
LABEL_27:
    v17[7] = v26;
    uint64_t v6 = sub_10009063C(8236, 0xE200000000000000, (uint64_t)v17);
    swift_setDeallocating();
    sub_100007E0C(&qword_10014D858);
    swift_arrayDestroy();
    return v6;
  }
  uint64_t v29 = *v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_1000F6174();
  int v30 = v11;
  swift_release();
  if (v10 == 1
    || (uint64_t v12 = swift_bridgeObjectRetain(), sub_100071554(v12), !v10)
    || (unint64_t v13 = *(void *)(v10 + 16), swift_bridgeObjectRelease(), v13 < 2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_100071554(v5);
  if (qword_10014C120 != -1) {
    swift_once();
  }
  sub_100007E0C(&qword_10014C648);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100108250;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v15 = sub_10000A4DC();
  *(void *)(v14 + 32) = v29;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 96) = &type metadata for Int;
  *(void *)(v14 + 104) = &protocol witness table for Int;
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = v13 - 1;
  uint64_t v6 = sub_100104B48();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1000709A0(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for MultiPinMapThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  id v15 = a6;
  char v16 = (char *)v13;
  uint64_t v17 = sub_1000855D8();
  uint64_t v18 = &v16[qword_100163130];
  *(void *)uint64_t v18 = v17;
  *((void *)v18 + 1) = v19;
  *((void *)v18 + 2) = v20;
  v18[24] = v21;

  return sub_1000A4EC0(v14, a1, a2, v12, a4, a5, v15);
}

uint64_t sub_100070A64(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_1001039D8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id, v7);
  id v11 = [a3 userInterfaceStyle];
  if (*(void *)(v3 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata))
  {
    uint64_t v22 = a1;
    char v12 = a2;
    swift_retain();
    uint64_t v13 = sub_1000F6174();
    uint64_t v15 = v14;
    char v17 = v16;
    swift_release();
    if (v13 == 1)
    {
      uint64_t v15 = 0;
      char v18 = 1;
    }
    else
    {
      char v18 = v17 & 1;
      sub_100071554(v13);
    }
    a2 = v12;
    a1 = v22;
  }
  else
  {
    uint64_t v15 = 0;
    char v18 = 1;
  }
  uint64_t v19 = sub_10001F2EC((uint64_t)v10, a1, (uint64_t)v11, 0, v15, v18, a2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v19;
}

uint64_t sub_100070C34()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_100070C74()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16MultiPinMapAssetCMa();
  return [super dealloc];
}

uint64_t sub_100070CF8()
{
  return _s16MultiPinMapAssetCMa();
}

uint64_t _s16MultiPinMapAssetCMa()
{
  uint64_t result = qword_100150360;
  if (!qword_100150360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100070D4C()
{
  return swift_updateClassMetadata2();
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 _s16MultiPinMapAssetC15MultiPinMapDataVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataVMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataVN;
}

uint64_t sub_100070F68()
{
  return swift_retain();
}

uint64_t sub_100070F78(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100070F90()
{
  return sub_100070554();
}

unint64_t sub_100070FB8()
{
  unint64_t result = qword_100150370;
  if (!qword_100150370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150370);
  }
  return result;
}

unint64_t sub_100071010()
{
  unint64_t result = qword_100150378;
  if (!qword_100150378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150378);
  }
  return result;
}

uint64_t sub_100071064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144737469736976 && a2 == 0xEA00000000006174;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D696C537369 && a2 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000711C0(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_1001503B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_100012154(a1, v7);
  sub_10007143C();
  sub_100105958();
  if (v1)
  {
    sub_1000121EC((uint64_t)a1);
  }
  else
  {
    sub_100007E0C(&qword_1001503C8);
    v9[15] = 0;
    sub_100071490(&qword_1001503D0, &qword_1001503D8);
    sub_1001056B8();
    uint64_t v7 = v10;
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_100105688();
    v9[13] = 2;
    sub_1001056A8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000121EC((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_10007143C()
{
  unint64_t result = qword_1001503C0;
  if (!qword_1001503C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001503C0);
  }
  return result;
}

uint64_t sub_100071490(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_1001503C8);
    sub_100071510(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100071510(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100071554(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100071564@<X0>(unsigned char *a1@<X8>)
{
  return sub_10009FEFC(*(void *)(v1 + 16), a1);
}

uint64_t sub_100071580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000715E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014D818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100071718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysON;
}

unint64_t sub_100071754()
{
  unint64_t result = qword_100150408;
  if (!qword_100150408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150408);
  }
  return result;
}

unint64_t sub_1000717AC()
{
  unint64_t result = qword_100150410;
  if (!qword_100150410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150410);
  }
  return result;
}

unint64_t sub_100071804()
{
  unint64_t result = qword_100150418;
  if (!qword_100150418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150418);
  }
  return result;
}

id sub_100071858(double a1)
{
  BOOL v2 = v1;
  id v4 = [v1 fontDescriptor];
  id v5 = [v4 fontAttributes];

  type metadata accessor for AttributeName(0);
  sub_100071BE4();
  uint64_t v6 = sub_1001049B8();

  uint64_t v33 = v6;
  if (!*(void *)(v6 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = UIFontDescriptorTraitsAttribute;
  uint64_t v8 = sub_10000B72C();
  if ((v9 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1000105E4(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v31);

  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_8:
    sub_100057BC8((uint64_t)&v31);
    goto LABEL_9;
  }
  sub_100007E0C(&qword_100150420);
  if (!swift_dynamicCast())
  {
LABEL_9:
    unint64_t v10 = sub_10000AE60((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)&v30[0];
LABEL_10:
  type metadata accessor for Weight(0);
  *((void *)&v32 + 1) = v11;
  *(double *)&long long v31 = a1;
  sub_1000103D0(&v31, v30);
  char v12 = UIFontWeightTrait;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10005FC18(v30, v12, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  uint64_t v14 = UIFontDescriptorNameAttribute;
  sub_1000F1F10((uint64_t)v14, &v31);

  sub_100057BC8((uint64_t)&v31);
  *((void *)&v32 + 1) = sub_100007E0C(&qword_100150420);
  *(void *)&long long v31 = v10;
  sub_1000103D0(&v31, v30);
  uint64_t v15 = UIFontDescriptorTraitsAttribute;
  uint64_t v16 = v33;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_10005FBC4(v30, v15, v17);

  swift_bridgeObjectRelease();
  char v18 = UIFontDescriptorFamilyAttribute;
  id v19 = [v2 familyName];
  uint64_t v20 = sub_100104B78();
  uint64_t v22 = v21;

  *((void *)&v32 + 1) = &type metadata for String;
  *(void *)&long long v31 = v20;
  *((void *)&v31 + 1) = v22;
  sub_1000103D0(&v31, v30);
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_10005FBC4(v30, v18, v23);
  uint64_t v33 = v16;

  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone((Class)UIFontDescriptor);
  Class isa = sub_1001049A8().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithFontAttributes:isa];

  [v2 pointSize];
  id v28 = [self fontWithDescriptor:v26 size:v27];

  return v28;
}

unint64_t sub_100071BE4()
{
  unint64_t result = qword_10014C4C8;
  if (!qword_10014C4C8)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C4C8);
  }
  return result;
}

uint64_t type metadata accessor for CanvasGridManager()
{
  return self;
}

uint64_t sub_100071C60(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v8 = [self mainScreen];
  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v23.origin.CGFloat x = v10;
  v23.origin.y = v12;
  v23.size.width = v14;
  v23.size.height = v16;
  double Width = CGRectGetWidth(v23);
  if (qword_10014C118 != -1) {
    swift_once();
  }
  double v18 = Width - (*(double *)&qword_100163208 + *(double *)&qword_100163208);
  if (qword_10014C110 != -1) {
    swift_once();
  }
  double v19 = v18 - (*(double *)&qword_100163200 + *(double *)&qword_100163200);
  v24.origin.CGFloat x = a1;
  v24.origin.y = a2;
  v24.size.width = a3;
  v24.size.height = a4;
  double v20 = CGRectGetWidth(v24);
  if (v19 * 0.5 >= v20)
  {
    if (v20 >= v19 * 0.5) {
      return 4;
    }
    double v22 = v19 * 0.25;
    if (v22 >= v20)
    {
      return 4;
    }
    else
    {
      v26.origin.CGFloat x = a1;
      v26.origin.y = a2;
      v26.size.width = a3;
      v26.size.height = a4;
      if (CGRectGetHeight(v26) >= v22) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
  else
  {
    v25.origin.CGFloat x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    if (v20 == CGRectGetHeight(v25))
    {
      return 5;
    }
    else
    {
      v27.origin.CGFloat x = a1;
      v27.origin.y = a2;
      v27.size.width = a3;
      v27.size.height = a4;
      return v19 * 0.25 >= CGRectGetHeight(v27);
    }
  }
}

uint64_t *sub_100071E40(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *id v4 = *a2;
    id v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    id v8 = (char *)a1 + v7;
    double v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100103978();
    uint64_t v11 = *(void *)(v10 - 8);
    CGFloat v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    CGFloat v16 = (char *)v4 + v15;
    char v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1, v10))
    {
      uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    uint64_t v19 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
  }
  return v4;
}

uint64_t sub_100072074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100103978();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    double v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_1000721A8(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)&a2[a3[8]];
  *(void *)((char *)a1 + v17) = *(void *)&a2[v17];
  return a1;
}

char *sub_10007238C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)((char *)a2 + a3[6]);
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  *(void *)&a1[a3[8]] = *(void *)((char *)a2 + a3[8]);
  *(void *)&a1[a3[9]] = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *sub_100072634(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)&a2[a3[8]];
  *(void *)((char *)a1 + v17) = *(void *)&a2[v17];
  return a1;
}

char *sub_100072818(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)((char *)a2 + a3[6]);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)((char *)a2 + a3[8]);
  *(void *)&a1[v21] = *(void *)((char *)a2 + v21);
  return a1;
}

uint64_t sub_100072AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072ACC);
}

uint64_t sub_100072ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 20);

  return v7(v9, a2, v8);
}

uint64_t sub_100072B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072B64);
}

uint64_t sub_100072B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  uint64_t v9 = v7;
  uint64_t v10 = a1 + *(int *)(a4 + 20);

  return v8(v10, a2, a2, v9);
}

uint64_t type metadata accessor for LastReportedStreaks()
{
  uint64_t result = qword_100150518;
  if (!qword_100150518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100072C38()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100072CDC(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100072D88(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_100150560);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_1000734F8();
  sub_100105968();
  char v14 = 0;
  sub_100105798();
  if (!v1)
  {
    type metadata accessor for LastReportedStreaks();
    char v13 = 1;
    sub_100103978();
    sub_100048B20(&qword_10014DF00);
    sub_100105768();
    char v12 = 2;
    sub_100105798();
    char v11 = 3;
    sub_100105768();
    char v10 = 4;
    sub_100105798();
    char v9 = 5;
    sub_100105798();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100072FF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  CGRect v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_100007E0C(&qword_100150570);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ReportedStreaks = (int *)type metadata accessor for LastReportedStreaks();
  __chkstk_darwin(ReportedStreaks);
  char v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012154(a1, a1[3]);
  sub_1000734F8();
  char v14 = v10;
  uint64_t v15 = (uint64_t)v27;
  sub_100105958();
  if (v15) {
    return sub_1000121EC((uint64_t)a1);
  }
  CGRect v27 = a1;
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  char v33 = 0;
  int v18 = v14;
  *char v13 = sub_1001056E8();
  sub_100103978();
  char v32 = 1;
  sub_100048B20(&qword_10014CA00);
  sub_1001056B8();
  sub_100012290((uint64_t)v7, (uint64_t)v13 + ReportedStreaks[5]);
  char v31 = 2;
  *(uint64_t *)((char *)v13 + ReportedStreaks[6]) = sub_1001056E8();
  char v30 = 3;
  uint64_t v19 = (uint64_t)v24;
  sub_1001056B8();
  sub_100012290(v19, (uint64_t)v13 + ReportedStreaks[7]);
  char v29 = 4;
  *(uint64_t *)((char *)v13 + ReportedStreaks[8]) = sub_1001056E8();
  char v28 = 5;
  uint64_t v20 = sub_1001056E8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
  *(uint64_t *)((char *)v13 + ReportedStreaks[9]) = v20;
  sub_10007354C((uint64_t)v13, v23);
  sub_1000121EC((uint64_t)v27);
  return sub_1000735B0((uint64_t)v13);
}

unint64_t sub_100073414()
{
  return sub_100072CDC(*v0);
}

uint64_t sub_10007341C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100073818(a1, a2);
  *a3 = result;
  return result;
}

void sub_100073444(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_100073450(uint64_t a1)
{
  unint64_t v2 = sub_1000734F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007348C(uint64_t a1)
{
  unint64_t v2 = sub_1000734F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000734C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100072FF0(a1, a2);
}

uint64_t sub_1000734E0(void *a1)
{
  return sub_100072D88(a1);
}

unint64_t sub_1000734F8()
{
  unint64_t result = qword_100150568;
  if (!qword_100150568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150568);
  }
  return result;
}

uint64_t sub_10007354C(uint64_t a1, uint64_t a2)
{
  uint64_t ReportedStreaks = type metadata accessor for LastReportedStreaks();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ReportedStreaks - 8) + 16))(a2, a1, ReportedStreaks);
  return a2;
}

uint64_t sub_1000735B0(uint64_t a1)
{
  uint64_t ReportedStreaks = type metadata accessor for LastReportedStreaks();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ReportedStreaks - 8) + 8))(a1, ReportedStreaks);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for LastReportedStreaks.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000736D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LastReportedStreaks.CodingKeys()
{
  return &type metadata for LastReportedStreaks.CodingKeys;
}

unint64_t sub_100073714()
{
  unint64_t result = qword_100150578;
  if (!qword_100150578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150578);
  }
  return result;
}

unint64_t sub_10007376C()
{
  unint64_t result = qword_100150580;
  if (!qword_100150580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150580);
  }
  return result;
}

unint64_t sub_1000737C4()
{
  unint64_t result = qword_100150588;
  if (!qword_100150588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150588);
  }
  return result;
}

uint64_t sub_100073818(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100112A70 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100112A90 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100112AB0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100112AD0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100112AF0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100112B10)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void sub_100073A54()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v9.origin.CGFloat x = v2;
  v9.origin.y = v4;
  v9.size.width = v6;
  v9.size.height = v8;
  ceil(CGRectGetWidth(v9));
}

uint64_t sub_100073B60()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100150590);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_100150590);
  if (qword_10014BF90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F88);
  double v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

Swift::Int sub_100073C28()
{
  return sub_100105928();
}

uint64_t sub_100073CBC()
{
  return sub_1001049F8();
}

Swift::Int sub_100073D3C()
{
  return sub_100105928();
}

uint64_t sub_100073DCC()
{
  return sub_1001039A8();
}

char *sub_100073DDC(uint64_t a1, double a2)
{
  uint64_t v5 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = (int *)v5;
  __chkstk_darwin(v5);
  double v7 = (char **)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&v2[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_skipRows] = &_swiftEmptySetSingleton;
  *(void *)&v2[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_skipColumns] = &_swiftEmptySetSingleton;
  CGFloat v8 = &unk_100150000;
  CGRect v9 = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_inputClusters] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_results] = &_swiftEmptySetSingleton;
  *(double *)&v2[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold] = a2;
  char v10 = (objc_class *)_s30MOSuggestionAssetMapsClustererCMa();
  v50.receiver = v2;
  v50.super_class = v10;
  char v11 = [super init];
  uint64_t v12 = v11;
  int64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    char v49 = _swiftEmptyArrayStorage;
    uint64_t v38 = v11;
    uint64_t v37 = v11;
    sub_1000C3BFC(0, v13, 0);
    uint64_t v14 = 0;
    CGRect v9 = v49;
    uint64_t v39 = a1;
    int64_t v40 = v13;
    uint64_t v15 = a1 + 56;
    do
    {
      uint64_t v16 = *(void *)(v15 - 24);
      uint64_t v17 = *(void *)(v15 - 16);
      uint64_t v19 = *(void **)(v15 - 8);
      uint64_t v18 = *(void *)v15;
      int v20 = *(unsigned __int8 *)(v15 + 8);
      uint64_t v21 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v15 + 24);
      int v45 = *(unsigned __int8 *)(v15 + 32);
      uint64_t v23 = *(void *)(v15 + 56);
      if (v20) {
        uint64_t v18 = 1;
      }
      uint64_t v43 = v18;
      uint64_t v44 = v21;
      uint64_t v46 = v14;
      uint64_t v47 = sub_1001057C8();
      uint64_t v48 = v24;
      v51._countAndFlagsBits = 95;
      v51._object = (void *)0xE100000000000000;
      sub_100104BE8(v51);
      uint64_t v26 = v47;
      uint64_t v25 = v48;
      CGRect v27 = v9;
      char v28 = v42;
      id v29 = v19;
      swift_bridgeObjectRetain();
      sub_1001039C8();
      *double v7 = v16;
      v7[1] = v17;
      uint64_t v30 = v43;
      uint64_t v31 = v44;
      _OWORD v7[2] = 0;
      v7[3] = v30;
      v7[4] = v26;
      v7[5] = v25;
      *(void *)((char *)v7 + v28[9]) = v19;
      *(void *)((char *)v7 + v28[10]) = 0;
      char v32 = (void *)((char *)v7 + v28[11]);
      void *v32 = v31;
      v32[1] = v22;
      *((unsigned char *)v7 + v28[12]) = v45;
      uint64_t v33 = v28[13];
      CGRect v9 = v27;
      *(void *)((char *)v7 + v33) = v23;
      char v49 = v27;
      unint64_t v35 = *((void *)v27 + 2);
      unint64_t v34 = *((void *)v27 + 3);
      if (v35 >= v34 >> 1)
      {
        sub_1000C3BFC(v34 > 1, v35 + 1, 1);
        CGRect v9 = v49;
      }
      ++v14;
      *((void *)v9 + 2) = v35 + 1;
      sub_100078F10((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v35);
      v15 += 104;
    }
    while (v40 != v14);
    swift_bridgeObjectRelease();

    CGFloat v8 = (void *)&unk_100150000;
    uint64_t v12 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)&v12[v8[183]] = v9;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1000740C0()
{
  uint64_t v1 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v131 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v123 = (uint64_t)v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v122 = (uint64_t)v111 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v115 = (char *)v111 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v119 = (uint64_t)v111 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v118 = (uint64_t)v111 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v117 = (uint64_t)v111 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v116 = (uint64_t)v111 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  char v114 = (char *)v111 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v111 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t result = __chkstk_darwin(v23);
  uint64_t v124 = (uint64_t)v111 - v28;
  unint64_t v29 = *(void *)(v0
                  + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_inputClusters);
  unint64_t v139 = v29;
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30) {
    goto LABEL_90;
  }
  uint64_t v31 = v30 - 1;
  if (v30 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  uint64_t v129 = v27;
  uint64_t v126 = v26;
  uint64_t v127 = v25;
  uint64_t v112 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_separationThreshold;
  v111[1] = v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_results;
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v33 = _swiftEmptyArrayStorage;
  uint64_t v121 = v0;
  uint64_t v128 = v1;
  char v113 = v22;
  uint64_t v120 = v31;
  while (1)
  {
    if (v32 == v31)
    {
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      return result;
    }
    uint64_t v34 = *(void *)(v29 + 16);
    if (v34
      && (uint64_t v35 = sub_100104D78(),
          *(void *)(v35 + 16) = v34,
          memset_pattern16((void *)(v35 + 32), &unk_10010BE20, 8 * v34),
          (uint64_t v36 = *(void *)(v29 + 16)) != 0))
    {
      sub_100007E0C(qword_1001506B8);
      unint64_t result = sub_100104D78();
      *(void *)(result + 16) = v36;
      *(void *)(result + 32) = v35;
      if (v36 == 1) {
        goto LABEL_14;
      }
      uint64_t v33 = (double *)result;
      *(void *)(result + 40) = v35;
      uint64_t v37 = v36 - 2;
      if (v36 != 2)
      {
        uint64_t v38 = (uint64_t *)(result + 48);
        do
        {
          *v38++ = v35;
          swift_bridgeObjectRetain();
          --v37;
        }
        while (v37);
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t result = (unint64_t)v33;
LABEL_14:
    uint64_t v39 = *(void *)(v29 + 16);
    if (!v39) {
      goto LABEL_89;
    }
    uint64_t v125 = v32;
    uint64_t v40 = v39 - 1;
    unint64_t v135 = v29;
    unint64_t v41 = result;
    if (v39 != 1) {
      break;
    }
LABEL_35:
    unint64_t v138 = result;
    uint64_t v62 = v121;
    unint64_t result = sub_100074C44((uint64_t)&v138, 1);
    if (v65)
    {
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v31 = v120;
      uint64_t v84 = v125;
      uint64_t v33 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v66 = (uint64_t)v113;
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_92;
      }
      unint64_t v67 = v29;
      unint64_t v68 = *(void *)(v29 + 16);
      if (result >= v68) {
        goto LABEL_93;
      }
      unint64_t v69 = v63;
      double v70 = v64;
      unint64_t v134 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      uint64_t v71 = v67 + v134;
      uint64_t v72 = *(void *)(v131 + 72);
      unint64_t result = sub_1000170BC(v67 + v134 + v72 * result, v124);
      if (v69 >= v68) {
        goto LABEL_94;
      }
      double v73 = v70;
      uint64_t v74 = v129;
      sub_1000170BC(v71 + v72 * v69, v129);
      if (*(double *)(v62 + v112) * *(double *)(v62 + v112) <= v73)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = v124;
        uint64_t v86 = v119;
        sub_1000170BC(v124, v119);
        swift_beginAccess();
        uint64_t v87 = v118;
        sub_1000AC584(v118, v86);
        sub_100017120(v87);
        sub_1000170BC(v74, v86);
        sub_1000AC584(v87, v86);
        sub_100017120(v87);
        swift_endAccess();
        sub_100017120(v74);
        unint64_t result = sub_100017120(v85);
        uint64_t v31 = v120;
        uint64_t v84 = v125;
        uint64_t v33 = _swiftEmptyArrayStorage;
        unint64_t v29 = v135;
      }
      else
      {
        unint64_t v136 = v124 + *(int *)(v128 + 32);
        swift_bridgeObjectRetain();
        unint64_t v75 = 0;
        uint64_t v137 = v72;
        uint64_t v76 = v72 + v134;
        unint64_t v77 = 1;
        uint64_t v78 = (uint64_t)v115;
        uint64_t v79 = (uint64_t)v114;
        while (1)
        {
          char v80 = sub_1001039A8();
          sub_1000170BC(v71, v66);
          sub_1000170BC(v129, v79);
          if (v80) {
            break;
          }
          char v81 = sub_1001039A8();
          sub_100017120(v79);
          sub_100017120(v66);
          if (v81) {
            goto LABEL_48;
          }
          ++v75;
          v71 += v137;
          ++v77;
          v76 += v137;
          if (v68 == v75)
          {
            unint64_t v82 = v135;
            unint64_t result = swift_bridgeObjectRelease();
            unint64_t v75 = *(void *)(v82 + 16);
            unint64_t v83 = v139;
            goto LABEL_50;
          }
        }
        sub_100017120(v79);
        sub_100017120(v66);
LABEL_48:
        unint64_t v88 = v135;
        unint64_t result = swift_bridgeObjectRelease();
        if (__OFADD__(v75, 1)) {
          goto LABEL_101;
        }
        uint64_t v89 = *(void *)(v88 + 16);
        unint64_t v83 = v139;
        if (v75 + 1 != v89)
        {
          while (v77 < *(void *)(v83 + 16))
          {
            sub_1000170BC(v83 + v76, v78);
            char v101 = sub_1001039A8();
            uint64_t v102 = v78;
            uint64_t v103 = v78;
            uint64_t v104 = v126;
            sub_1000170BC(v102, v126);
            uint64_t v105 = v127;
            sub_1000170BC(v129, v127);
            if (v101)
            {
              sub_100017120(v104);
              sub_100017120(v105);
              unint64_t result = sub_100017120(v103);
              uint64_t v78 = v103;
            }
            else
            {
              char v106 = sub_1001039A8();
              sub_100017120(v104);
              sub_100017120(v105);
              unint64_t result = sub_100017120(v103);
              uint64_t v78 = v103;
              if ((v106 & 1) == 0)
              {
                if (v77 != v75)
                {
                  if ((v75 & 0x8000000000000000) != 0) {
                    goto LABEL_95;
                  }
                  unint64_t v107 = *(void *)(v83 + 16);
                  if (v75 >= v107) {
                    goto LABEL_96;
                  }
                  unint64_t v108 = v75 * v137;
                  unint64_t result = sub_1000170BC(v83 + v134 + v75 * v137, v122);
                  if (v77 >= v107) {
                    goto LABEL_97;
                  }
                  sub_1000170BC(v83 + v76, v123);
                  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    unint64_t result = sub_100077EA0(v83);
                    unint64_t v83 = result;
                    unint64_t v139 = result;
                  }
                  if (v75 >= *(void *)(v83 + 16)) {
                    goto LABEL_98;
                  }
                  unint64_t result = sub_100078F74(v123, v83 + v134 + v108);
                  if (v77 >= *(void *)(v139 + 16)) {
                    goto LABEL_99;
                  }
                  unint64_t result = sub_100078F74(v122, v139 + v76);
                }
                if (__OFADD__(v75++, 1)) {
                  goto LABEL_91;
                }
              }
            }
            unint64_t v110 = v77 + 1;
            if (__OFADD__(v77, 1)) {
              goto LABEL_87;
            }
            unint64_t v83 = v139;
            ++v77;
            v76 += v137;
            if (v110 == *(void *)(v139 + 16)) {
              goto LABEL_50;
            }
          }
          goto LABEL_86;
        }
LABEL_50:
        int64_t v90 = *(void *)(v83 + 16);
        if (v90 < (uint64_t)v75) {
          goto LABEL_100;
        }
        sub_100078754(v75, v90);
        swift_bridgeObjectRelease();
        uint64_t v91 = v116;
        sub_100074EAC(v124, v129, v116, v73);
        sub_1000170BC(v91, v117);
        unint64_t v92 = v139;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v120;
        uint64_t v84 = v125;
        uint64_t v33 = _swiftEmptyArrayStorage;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v92 = sub_1000B74CC(0, *(void *)(v92 + 16) + 1, 1, v92);
        }
        unint64_t v95 = *(void *)(v92 + 16);
        unint64_t v94 = *(void *)(v92 + 24);
        if (v95 >= v94 >> 1) {
          unint64_t v92 = sub_1000B74CC(v94 > 1, v95 + 1, 1, v92);
        }
        *(void *)(v92 + 16) = v95 + 1;
        sub_100078F10(v117, v92 + v134 + v95 * v137);
        unint64_t v139 = v92;
        unint64_t v96 = v92;
        uint64_t v97 = v116;
        uint64_t v98 = v119;
        sub_1000170BC(v116, v119);
        swift_beginAccess();
        uint64_t v99 = v118;
        sub_1000AC584(v118, v98);
        sub_100017120(v99);
        swift_endAccess();
        uint64_t v100 = v97;
        unint64_t v29 = v96;
        sub_100017120(v100);
        sub_100017120(v129);
        unint64_t result = sub_100017120(v124);
      }
    }
    uint64_t v32 = v84 + 1;
    if (v32 == v31) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v42 = 0;
  unint64_t v43 = result + 32;
  unint64_t v44 = result + 40;
  unint64_t v130 = v29 + 8;
  unint64_t v134 = 1;
  uint64_t v132 = v39 - 1;
  while (1)
  {
    if (v42 == v40)
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    unint64_t v45 = *(void *)(v29 + 16);
    if (v45 <= v42) {
      goto LABEL_84;
    }
    unint64_t v133 = v42 + 1;
    if (v42 + 1 != v45) {
      break;
    }
LABEL_17:
    ++v134;
    uint64_t v40 = v132;
    unint64_t v42 = v133;
    if (v133 == v132) {
      goto LABEL_35;
    }
  }
  if (v42 + 1 >= v45) {
    goto LABEL_85;
  }
  unint64_t v46 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
  uint64_t v47 = *(void *)(v131 + 72);
  uint64_t v48 = (double *)(v29 + v46 + v47 * v42);
  unint64_t v136 = v45 - 1;
  uint64_t v137 = v47;
  char v49 = (double *)(v130 + v46 + v47 * v134);
  unint64_t v50 = v42;
  while (1)
  {
    unint64_t v51 = *(void *)(v29 + 16);
    if (v42 >= v51) {
      break;
    }
    unint64_t v52 = v50 + 1;
    if (v50 + 1 >= v51) {
      goto LABEL_78;
    }
    if (v42 >= *(void *)(result + 16)) {
      goto LABEL_79;
    }
    double v53 = *(v49 - 1);
    double v54 = *v49;
    double v56 = *v48;
    double v55 = v48[1];
    uint64_t v57 = *(double **)(v43 + 8 * v42);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v43 + 8 * v42) = v57;
    if ((v58 & 1) == 0)
    {
      uint64_t v57 = sub_100077E8C((uint64_t)v57);
      *(void *)(v43 + 8 * v42) = v57;
    }
    if (v52 >= *((void *)v57 + 2)) {
      goto LABEL_80;
    }
    double v59 = (v56 - v53) * (v56 - v53) + (v55 - v54) * (v55 - v54);
    v57[v50 + 5] = v59;
    if (v52 >= *(void *)(v41 + 16)) {
      goto LABEL_81;
    }
    uint64_t v60 = *(double **)(v44 + 8 * v50);
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v44 + 8 * v50) = v60;
    if ((v61 & 1) == 0)
    {
      uint64_t v60 = sub_100077E8C((uint64_t)v60);
      *(void *)(v44 + 8 * v50) = v60;
    }
    unint64_t v29 = v135;
    if (v42 >= *((void *)v60 + 2)) {
      goto LABEL_82;
    }
    unint64_t result = v41;
    v60[v42 + 4] = v59;
    ++v50;
    char v49 = (double *)((char *)v49 + v137);
    if (v136 == v50) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100074C44(uint64_t result, char a2)
{
  if (!*(void *)(*(void *)result + 16)) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_skipRows;
  uint64_t v5 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_skipColumns;
  uint64_t v25 = *(void *)result + 32;
  double v6 = 1.79769313e308;
  uint64_t v7 = -1;
  uint64_t v8 = -1;
  uint64_t v27 = *(void *)(*(void *)result + 16);
  unint64_t v28 = v27;
  do
  {
    if (v3 >= v27)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v25 + 8 * v3);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v12 = v9 + 32;
      unint64_t v13 = v28;
      if (v3 < v28) {
        unint64_t v13 = v3;
      }
      unint64_t v26 = v13;
      do
      {
        double v14 = *(double *)(v12 + 8 * v11);
        uint64_t v15 = *(void *)(v2 + v4);
        if (*(void *)(v15 + 16))
        {
          unint64_t result = sub_1001058C8();
          uint64_t v16 = -1 << *(unsigned char *)(v15 + 32);
          unint64_t v17 = result & ~v16;
          if ((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
          {
            uint64_t v18 = *(void *)(v15 + 48);
            if (*(void *)(v18 + 8 * v17) == v3) {
              goto LABEL_11;
            }
            uint64_t v19 = ~v16;
            while (1)
            {
              unint64_t v17 = (v17 + 1) & v19;
              if (((*(void *)(v15 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                break;
              }
              if (*(void *)(v18 + 8 * v17) == v3) {
                goto LABEL_11;
              }
            }
          }
        }
        uint64_t v20 = *(void *)(v2 + v5);
        if (*(void *)(v20 + 16))
        {
          unint64_t result = sub_1001058C8();
          uint64_t v21 = -1 << *(unsigned char *)(v20 + 32);
          unint64_t v22 = result & ~v21;
          if ((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
          {
            uint64_t v23 = *(void *)(v20 + 48);
            if (*(void *)(v23 + 8 * v22) == v11) {
              goto LABEL_11;
            }
            uint64_t v24 = ~v21;
            while (1)
            {
              unint64_t v22 = (v22 + 1) & v24;
              if (((*(void *)(v20 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
                break;
              }
              if (*(void *)(v23 + 8 * v22) == v11) {
                goto LABEL_11;
              }
            }
          }
        }
        if ((a2 & 1) == 0) {
          goto LABEL_9;
        }
        if (v28 == 1)
        {
          uint64_t v27 = 1;
        }
        else
        {
          uint64_t v27 = v28;
          if (v11 < v26)
          {
LABEL_9:
            if (v14 < v6)
            {
              uint64_t v7 = v11;
              uint64_t v8 = v3;
              double v6 = v14;
            }
            goto LABEL_11;
          }
          uint64_t v27 = v28;
        }
LABEL_11:
        ++v11;
      }
      while (v11 != v10);
    }
    ++v3;
  }
  while (v3 != v28);
  if (v8 == -1 && v7 == -1) {
    return 0;
  }
  return v8;
}

int *sub_100074EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  unint64_t result = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = result;
  uint64_t v10 = result[9];
  unint64_t v11 = *(void **)(a1 + v10);
  uint64_t v12 = v11;
  if (!v11)
  {
    uint64_t v12 = *(void **)(a2 + v10);
    unint64_t result = v12;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    double v16 = (*(double *)(a1 + 8) + *(double *)(a2 + 8)) * 0.5;
    double v17 = (*(double *)a1 + *(double *)a2) * 0.5;
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void **)(a2 + 40);
    uint64_t v24 = v19;
    uint64_t v25 = v18;
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v20;
    v26._object = v21;
    sub_100104BE8(v26);
    id v22 = v11;
    unint64_t result = (int *)sub_1001039C8();
    *(double *)a3 = v17;
    *(double *)(a3 + 8) = v16;
    *(double *)(a3 + 16) = a4;
    *(void *)(a3 + 24) = v15;
    *(void *)(a3 + 32) = v24;
    *(void *)(a3 + 40) = v25;
    *(void *)(a3 + v9[9]) = v12;
    *(void *)(a3 + v9[10]) = 0;
    uint64_t v23 = (void *)(a3 + v9[11]);
    *uint64_t v23 = 0;
    v23[1] = 0xE000000000000000;
    *(unsigned char *)(a3 + v9[12]) = 0;
    *(void *)(a3 + v9[13]) = 0;
  }
  return result;
}

double *sub_100074FD4()
{
  long long v144 = (int *)_s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v146 = *((void *)v144 - 1);
  uint64_t v0 = __chkstk_darwin(v144);
  uint64_t v143 = (uint64_t)v125 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (uint64_t)v125 - v3;
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v132 = (uint64_t)v125 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v129 = (uint64_t)v125 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  int64_t v11 = (int64_t)v125 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (double *)((char *)v125 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  double v17 = (double *)((char *)v125 - v16);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v125 - v18;
  uint64_t v152 = 0;
  unint64_t v153 = 0xE000000000000000;
  if (qword_10014BFC0 != -1) {
    goto LABEL_114;
  }
  while (1)
  {
    uint64_t v20 = sub_100103DB8();
    sub_100007D30(v20, (uint64_t)qword_100150590);
    uint64_t v21 = sub_100103D98();
    os_log_type_t v22 = sub_100105018();
    BOOL v23 = os_log_type_enabled(v21, v22);
    int64_t v136 = v11;
    if (v23)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134217984;
      uint64_t v151 = 0x3FE0000000000000;
      sub_1001052C8();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[MOSuggestionAssetMapsClusterer] using POI penalty: %f", v24, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v25 = (double *)((char *)v137
                   + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_results);
    swift_beginAccess();
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = (void *)&unk_100150000;
    if (!*(void *)(*(void *)v25 + 16))
    {
      long long v145 = _swiftEmptyArrayStorage;
      double v17 = v137;
      goto LABEL_97;
    }
    long long v145 = v25;
    uint64_t v28 = v26 + 56;
    uint64_t v29 = 1 << *(unsigned char *)(v26 + 32);
    uint64_t v30 = -1;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    unint64_t v31 = v30 & *(void *)(v26 + 56);
    int64_t v11 = (unint64_t)(v29 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v32 = 0;
    for (double i = 0.0; ; double i = i + v37 * v38)
    {
      if (v31)
      {
        unint64_t v34 = __clz(__rbit64(v31));
        v31 &= v31 - 1;
        unint64_t v35 = v34 | (v32 << 6);
        goto LABEL_9;
      }
      int64_t v39 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      if (v39 >= v11) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v39);
      ++v32;
      if (!v40)
      {
        int64_t v32 = v39 + 1;
        if (v39 + 1 >= v11) {
          goto LABEL_28;
        }
        unint64_t v40 = *(void *)(v28 + 8 * v32);
        if (!v40)
        {
          int64_t v32 = v39 + 2;
          if (v39 + 2 >= v11) {
            goto LABEL_28;
          }
          unint64_t v40 = *(void *)(v28 + 8 * v32);
          if (!v40) {
            break;
          }
        }
      }
LABEL_27:
      unint64_t v31 = (v40 - 1) & v40;
      unint64_t v35 = __clz(__rbit64(v40)) + (v32 << 6);
LABEL_9:
      sub_1000170BC(*(void *)(v26 + 48) + *(void *)(v146 + 72) * v35, (uint64_t)v19);
      sub_100078F10((uint64_t)v19, (uint64_t)v17);
      uint64_t v36 = *(void *)((char *)v17 + v144[9]);
      double v37 = v17[2];
      sub_100017120((uint64_t)v17);
      if (v36) {
        double v38 = 0.5;
      }
      else {
        double v38 = 1.5;
      }
    }
    int64_t v41 = v39 + 3;
    if (v41 >= v11) {
      break;
    }
    unint64_t v40 = *(void *)(v28 + 8 * v41);
    if (v40)
    {
      int64_t v32 = v41;
      goto LABEL_27;
    }
    while (1)
    {
      int64_t v32 = v41 + 1;
      if (__OFADD__(v41, 1)) {
        break;
      }
      if (v32 >= v11) {
        goto LABEL_28;
      }
      unint64_t v40 = *(void *)(v28 + 8 * v32);
      ++v41;
      if (v40) {
        goto LABEL_27;
      }
    }
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    swift_once();
  }
LABEL_28:
  swift_release();
  uint64_t v42 = *(void *)v145;
  uint64_t v43 = *(void *)(*(void *)v145 + 16);
  swift_bridgeObjectRetain_n();
  unint64_t v44 = sub_1001009BC(v42);
  swift_bridgeObjectRelease();
  v149 = v44;
  sub_100076AD4((void **)&v149);
  swift_bridgeObjectRelease();
  unint64_t v45 = v149;
  uint64_t v46 = *((void *)v149 + 2);
  int64_t v11 = v136;
  if (v46)
  {
    unint64_t v47 = 0;
    uint64_t v139 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager30MOSuggestionAssetMapsClusterer_inputClusters;
    unint64_t v138 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    uint64_t v48 = (char *)v149 + v138;
    long long v145 = _swiftEmptyArrayStorage;
    uint64_t v127 = MKPointOfInterestCategoryReligiousSite;
    uint64_t v19 = (char *)&type metadata for String;
    double v49 = i / (double)v43;
    double v17 = v137;
    unint64_t v134 = v14;
    uint64_t v133 = v4;
    unint64_t v130 = v149;
    uint64_t v135 = v46;
    uint64_t v140 = (char *)v149 + v138;
    while (1)
    {
      if (v47 >= *((void *)v45 + 2))
      {
        __break(1u);
        goto LABEL_109;
      }
      uint64_t v50 = *(void *)(v146 + 72);
      sub_1000170BC((uint64_t)&v48[v50 * v47], (uint64_t)v14);
      double v51 = v14[2];
      sub_1000170BC((uint64_t)v14, v11);
      if (v51 >= v49)
      {
        sub_100017120(v11);
        goto LABEL_31;
      }
      uint64_t v141 = v50;
      v149 = v152;
      unint64_t v150 = v153;
      unint64_t v52 = *(void *)(v11 + 40);
      uint64_t v147 = *(void *)(v11 + 32);
      unint64_t v148 = v52;
      sub_100007F78();
      char v53 = sub_100105318();
      sub_100017120(v11);
      if (v53)
      {
        uint64_t v48 = v140;
        goto LABEL_31;
      }
      unint64_t v54 = *((void *)v14 + 5);
      v149 = (double *)*((void *)v14 + 4);
      unint64_t v150 = v54;
      uint64_t v147 = 95;
      unint64_t v148 = 0xE100000000000000;
      uint64_t v55 = sub_1001052E8();
      if (!*(void *)(v55 + 16)) {
        goto LABEL_112;
      }
      double v56 = (void *)v55;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v57 = v56[2];
        if (!v57) {
          goto LABEL_113;
        }
      }
      else
      {
        double v56 = sub_100077EB4(v56);
        uint64_t v57 = v56[2];
        if (!v57) {
          goto LABEL_113;
        }
      }
      v56[2] = v57 - 1;
      swift_bridgeObjectRelease();
      uint64_t v58 = v56[2];
      if (!v58)
      {
        uint64_t v62 = v17;
        swift_bridgeObjectRelease();
        id v63 = 0;
        uint64_t v46 = v135;
        goto LABEL_90;
      }
      uint64_t v4 = 0;
      id v142 = 0;
      int64_t v11 = 0;
      double v59 = v56 + 5;
      double v60 = 0.0;
      double v61 = 0.0;
      do
      {
        uint64_t v65 = *(v59 - 1);
        unint64_t v66 = *v59;
        if (v65) {
          BOOL v67 = 0;
        }
        else {
          BOOL v67 = v66 == 0xE000000000000000;
        }
        if (!v67 && (sub_1001057F8() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_100075DB8(v65, v66);
          if ((v69 & 1) == 0 && (v68 & 0x8000000000000000) == 0)
          {
            uint64_t v70 = *(void *)((char *)v17 + v139);
            if (v68 < *(void *)(v70 + 16))
            {
              uint64_t v71 = (double *)(v70 + v138 + v68 * v141);
              double v73 = *v71;
              double v72 = v71[1];
              uint64_t v19 = *(char **)((char *)v71 + v144[9]);
              if (v19) {
                BOOL v74 = v4 < 1;
              }
              else {
                BOOL v74 = 0;
              }
              if (!v74)
              {
LABEL_57:

                if (__OFADD__(v11++, 1)) {
                  goto LABEL_110;
                }
                if (v60 == 0.0) {
                  double v60 = v72;
                }
                else {
                  double v60 = (v60 + v72) * 0.5;
                }
                if (v61 == 0.0) {
                  double v61 = v73;
                }
                else {
                  double v61 = (v61 + v73) * 0.5;
                }
                uint64_t v76 = v19;
                goto LABEL_43;
              }
              uint64_t v131 = v4;
              unint64_t v77 = v19;
              id v78 = [v77 pointOfInterestCategory];
              if (v78)
              {
                uint64_t v79 = v78;
                uint64_t v128 = v77;
                uint64_t v80 = sub_100104B78();
                uint64_t v82 = v81;
                if (v80 == sub_100104B78() && v82 == v83)
                {

                  swift_bridgeObjectRelease_n();
                  unint64_t v77 = v128;
                  double v17 = v137;
                }
                else
                {
                  LODWORD(v126) = sub_1001057F8();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  unint64_t v77 = v128;
                  double v17 = v137;
                  if ((v126 & 1) == 0) {
                    goto LABEL_71;
                  }
                }
              }
              else
              {
LABEL_71:
                id v85 = [v77 _styleAttributes];

                if (v85)
                {
                  uint64_t v86 = *((void *)v14 + 2);
                  uint64_t v126 = *((void *)v14 + 4);
                  *(double *)uint64_t v125 = v14[5];
                  uint64_t v87 = (char *)v14 + v144[11];
                  uint64_t v89 = *(char **)v87;
                  uint64_t v88 = *((void *)v87 + 1);
                  uint64_t v128 = v89;
                  uint64_t v131 = v88;
                  uint64_t v90 = v129;
                  v125[1] = v129 + v144[8];
                  uint64_t v76 = v77;
                  uint64_t v91 = v125[0];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1001039C8();
                  *(double *)uint64_t v90 = v73;
                  *(double *)(v90 + 8) = v72;
                  *(void *)(v90 + 16) = v86;
                  *(void *)(v90 + 24) = 1;
                  *(void *)(v90 + 32) = v126;
                  *(void *)(v90 + 40) = v91;
                  unint64_t v92 = v144;
                  *(void *)(v90 + v144[9]) = v19;
                  *(void *)(v90 + v92[10]) = 0;
                  int v93 = (char **)(v90 + v92[11]);
                  uint64_t v94 = v131;
                  *int v93 = v128;
                  v93[1] = (char *)v94;
                  *(unsigned char *)(v90 + v92[12]) = 0;
                  *(void *)(v90 + v92[13]) = 0;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    long long v145 = (double *)sub_1000B74CC(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
                  }
                  unint64_t v96 = *((void *)v145 + 2);
                  unint64_t v95 = *((void *)v145 + 3);
                  if (v96 >= v95 >> 1) {
                    long long v145 = (double *)sub_1000B74CC(v95 > 1, v96 + 1, 1, (unint64_t)v145);
                  }
                  uint64_t v97 = v145;
                  *((void *)v145 + 2) = v96 + 1;
                  sub_100078F10(v129, (uint64_t)v97 + v138 + v96 * v141);

                  if (v61 != 0.0) {
                    double v61 = v61 + (v61 - v73) / 7.0;
                  }
                  double v17 = v137;
                  if (v60 != 0.0) {
                    double v60 = v60 + (v60 - v72) / 7.0;
                  }
                  uint64_t v4 = 1;
LABEL_43:
                  double v64 = v76;
                  id v142 = v19;
                  goto LABEL_44;
                }
              }

              uint64_t v4 = v131;
              goto LABEL_57;
            }
          }
        }
LABEL_44:
        v59 += 2;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      if (v11 < 1)
      {
        uint64_t v62 = v17;
        int64_t v11 = v136;
        unint64_t v45 = v130;
        uint64_t v46 = v135;
      }
      else
      {
        uint64_t v98 = *((void *)v14 + 2);
        uint64_t v99 = *((void *)v14 + 5);
        uint64_t v131 = *((void *)v14 + 4);
        uint64_t v100 = v144;
        char v101 = (char *)v14 + v144[11];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        uint64_t v104 = v132;
        id v105 = v142;
        id v106 = v142;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001039C8();
        *(double *)uint64_t v104 = v61;
        *(double *)(v104 + 8) = v60;
        *(void *)(v104 + 16) = v98;
        uint64_t v107 = v131;
        *(void *)(v104 + 24) = v11;
        *(void *)(v104 + 32) = v107;
        *(void *)(v104 + 40) = v99;
        *(void *)(v104 + v100[9]) = v105;
        *(void *)(v104 + v100[10]) = 0;
        unint64_t v108 = (void *)(v104 + v100[11]);
        void *v108 = v103;
        v108[1] = v102;
        *(unsigned char *)(v104 + v100[12]) = 0;
        *(void *)(v104 + v100[13]) = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v145 = (double *)sub_1000B74CC(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
        }
        unint64_t v110 = *((void *)v145 + 2);
        unint64_t v109 = *((void *)v145 + 3);
        uint64_t v62 = v137;
        int64_t v11 = v136;
        unint64_t v45 = v130;
        uint64_t v46 = v135;
        if (v110 >= v109 >> 1) {
          long long v145 = (double *)sub_1000B74CC(v109 > 1, v110 + 1, 1, (unint64_t)v145);
        }
        uint64_t v111 = v145;
        *((void *)v145 + 2) = v110 + 1;
        sub_100078F10(v132, (uint64_t)v111 + v138 + v110 * v141);
      }
      id v63 = v142;
LABEL_90:
      uint64_t v14 = v134;
      uint64_t v112 = *((void *)v134 + 4);
      char v113 = (void *)*((void *)v134 + 5);
      swift_bridgeObjectRetain();
      v154._countAndFlagsBits = v112;
      v154._object = v113;
      sub_100104BE8(v154);
      swift_bridgeObjectRelease();

      uint64_t v48 = v140;
      uint64_t v19 = (char *)&type metadata for String;
      double v17 = v62;
      uint64_t v4 = v133;
LABEL_31:
      ++v47;
      sub_100017120((uint64_t)v14);
      if (v47 == v46)
      {
        swift_release();
        goto LABEL_96;
      }
    }
  }
  swift_release();
  long long v145 = _swiftEmptyArrayStorage;
  double v17 = v137;
LABEL_96:
  uint64_t v27 = &unk_100150000;
LABEL_97:
  uint64_t v114 = *(void *)((char *)v17 + v27[183]);
  uint64_t v115 = *(void *)(v114 + 16);
  if (v115)
  {
    unint64_t v116 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    uint64_t v117 = v114 + v116;
    uint64_t v118 = *(void *)(v146 + 72);
    uint64_t v146 = v114;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000170BC(v117, v4);
      v149 = v152;
      unint64_t v150 = v153;
      uint64_t v121 = *(void *)(v4 + 32);
      uint64_t v120 = *(void **)(v4 + 40);
      uint64_t v147 = v121;
      unint64_t v148 = (unint64_t)v120;
      sub_100007F78();
      if ((sub_100105318() & 1) == 0)
      {
        sub_1000170BC(v4, v143);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v145 = (double *)sub_1000B74CC(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
        }
        unint64_t v123 = *((void *)v145 + 2);
        unint64_t v122 = *((void *)v145 + 3);
        if (v123 >= v122 >> 1) {
          long long v145 = (double *)sub_1000B74CC(v122 > 1, v123 + 1, 1, (unint64_t)v145);
        }
        uint64_t v119 = v145;
        *((void *)v145 + 2) = v123 + 1;
        sub_100078F10(v143, (uint64_t)v119 + v116 + v123 * v118);
        swift_bridgeObjectRetain();
        v155._countAndFlagsBits = v121;
        v155._object = v120;
        sub_100104BE8(v155);
        swift_bridgeObjectRelease();
      }
      sub_100017120(v4);
      v117 += v118;
      --v115;
    }
    while (v115);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v145;
}

uint64_t sub_100075DB8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_100105528();
      }
      uint64_t v7 = (uint64_t)sub_100077FB0(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              int64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_100077EC8(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

id sub_100076038()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s30MOSuggestionAssetMapsClustererCMa();
  return [super dealloc];
}

uint64_t _s30MOSuggestionAssetMapsClustererCMa()
{
  return self;
}

void *sub_1000760FC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a3[8];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1001039D8();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    unsigned int v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v16;
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v17);
    unsigned int v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v4 + v18) = *((unsigned char *)a2 + v18);
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    id v22 = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100076244(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000762E0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001039D8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v15;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  id v21 = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000763D8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001039D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  uint64_t v12 = *(void **)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = v12;
  id v13 = v12;

  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_100076504(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001039D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_1000765CC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);

  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *id v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t sub_1000766C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000766D8);
}

uint64_t sub_1000766D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001039D8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100076788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007679C);
}

uint64_t sub_10007679C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001039D8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s30MOSuggestionAssetMapsClustererC7ClusterVMa()
{
  uint64_t result = qword_100150650;
  if (!qword_100150650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100076890()
{
  uint64_t result = sub_1001039D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100076960()
{
  return sub_1000769A8(&qword_1001506A8, (void (*)(uint64_t))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_1000769A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1000769F0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100007E0C(&qword_10014E0C0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100076A58(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_100104C48();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_100104C18();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

Swift::Int sub_100076AD4(void **a1)
{
  uint64_t v2 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v3 = (void *)sub_100078718(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100076B7C(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100076B7C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v126 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v135 = (uint64_t)&v120 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v133 = (uint64_t)&v120 - v10;
  __chkstk_darwin(v9);
  uint64_t v132 = (uint64_t)&v120 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_1001057B8(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      return sub_100077544(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  Swift::Int v123 = result;
  if (v12 < 2)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v128 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_107:
      unint64_t v122 = v18;
      if (v21 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v114) {
            goto LABEL_149;
          }
          double v116 = v20[2 * v115 + 4];
          double v117 = v20[2 * v21 + 3];
          sub_100077798(v114 + *(void *)(v129 + 72) * *(void *)&v116, v114 + *(void *)(v129 + 72) * *(void *)&v20[2 * v21 + 2], v114 + *(void *)(v129 + 72) * *(void *)&v117, v128);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v117 < *(uint64_t *)&v116) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_100077E78((uint64_t)v20);
          }
          if (v115 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          uint64_t v118 = &v20[2 * v115 + 4];
          *uint64_t v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *((void *)v20 + 2);
          if (v21 > v119) {
            goto LABEL_140;
          }
          memmove(&v20[2 * v21 + 2], &v20[2 * v21 + 4], 16 * (v119 - v21));
          *((void *)v20 + 2) = v119 - 1;
          unint64_t v21 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v122[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v122 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_100104D78();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v129 + 80);
    unint64_t v122 = (double *)v16;
    unint64_t v128 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = _swiftEmptyArrayStorage;
  unint64_t v134 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      Swift::Int v32 = v19 + 1;
    }
    else
    {
      uint64_t v24 = *a1;
      uint64_t v25 = v19;
      uint64_t v127 = v19;
      uint64_t v26 = *(void *)(v129 + 72);
      uint64_t v27 = v132;
      sub_1000170BC(v24 + v26 * v23, v132);
      uint64_t v28 = v24 + v26 * v25;
      uint64_t v29 = v133;
      sub_1000170BC(v28, v133);
      double v30 = *(double *)(v27 + 16);
      double v31 = *(double *)(v29 + 16);
      sub_100017120(v29);
      sub_100017120(v27);
      Swift::Int v32 = v127 + 2;
      uint64_t v124 = v24;
      uint64_t v136 = v26;
      if (v127 + 2 >= v12)
      {
        uint64_t v40 = v26;
        uint64_t v22 = v127;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v125 = v2;
        Swift::Int v131 = v26 * v23;
        uint64_t v33 = v24;
        Swift::Int v34 = v127 + 2;
        uint64_t v35 = v26 * (v127 + 2);
        while (1)
        {
          Swift::Int v36 = v12;
          uint64_t v37 = v132;
          sub_1000170BC(v33 + v35, v132);
          uint64_t v38 = v133;
          sub_1000170BC(v33 + v131, v133);
          BOOL v39 = *(double *)(v38 + 16) >= *(double *)(v37 + 16);
          sub_100017120(v38);
          sub_100017120(v37);
          if (v31 < v30 == v39) {
            break;
          }
          uint64_t v40 = v136;
          v33 += v136;
          ++v34;
          Swift::Int v12 = v36;
          if (v36 == v34)
          {
            Swift::Int v32 = v36;
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v22 = v127;
            if (v31 < v30) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v134;
        Swift::Int v32 = v34;
        uint64_t v2 = v125;
        uint64_t v22 = v127;
        Swift::Int v12 = v36;
        uint64_t v40 = v136;
        if (v31 >= v30) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v32 < v22) {
        goto LABEL_143;
      }
      if (v22 < v32)
      {
        Swift::Int v131 = v12;
        uint64_t v121 = v20;
        uint64_t v41 = 0;
        uint64_t v42 = v40 * (v32 - 1);
        Swift::Int v43 = v32 * v40;
        uint64_t v44 = v22 * v40;
        do
        {
          if (v22 != v32 + v41 - 1)
          {
            uint64_t v125 = v2;
            uint64_t v45 = v124;
            if (!v124) {
              goto LABEL_148;
            }
            unint64_t v46 = v124 + v44;
            sub_100078F10(v124 + v44, v126);
            if (v44 < v42 || v46 >= v45 + v43)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v44 != v42)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_100078F10(v126, v45 + v42);
            a1 = v134;
            uint64_t v2 = v125;
            uint64_t v40 = v136;
          }
          ++v22;
          --v41;
          v42 -= v40;
          v43 -= v40;
          v44 += v40;
        }
        while (v22 < v32 + v41);
        uint64_t v20 = v121;
        uint64_t v22 = v127;
        Swift::Int v12 = v131;
      }
    }
LABEL_40:
    if (v32 < v12)
    {
      if (__OFSUB__(v32, v22)) {
        goto LABEL_141;
      }
      if (v32 - v22 < v123) {
        break;
      }
    }
LABEL_58:
    if (v32 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v136 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_100077C08(0, *((void *)v20 + 2) + 1, 1, (uint64_t)v20);
    }
    unint64_t v63 = *((void *)v20 + 2);
    unint64_t v62 = *((void *)v20 + 3);
    unint64_t v21 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v20 = sub_100077C08((double *)(v62 > 1), v63 + 1, 1, (uint64_t)v20);
    }
    *((void *)v20 + 2) = v21;
    double v64 = v20 + 4;
    uint64_t v65 = &v20[2 * v63 + 4];
    uint64_t v66 = v136;
    *(void *)uint64_t v65 = v22;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v21 - 1;
        if (v21 >= 4)
        {
          double v72 = &v64[2 * v21];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_125;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_126;
          }
          unint64_t v79 = v21 - 2;
          uint64_t v80 = &v64[2 * v21 - 4];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_128;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_131;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[2 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_135;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v96 = *((void *)v20 + 4);
            uint64_t v97 = *((void *)v20 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_89;
          }
          uint64_t v69 = *((void *)v20 + 4);
          uint64_t v68 = *((void *)v20 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_127;
        }
        unint64_t v79 = v21 - 2;
        id v85 = &v64[2 * v21 - 4];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_130;
        }
        uint64_t v91 = &v64[2 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_133;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_134;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_95:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v90) {
          goto LABEL_129;
        }
        uint64_t v98 = &v64[2 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_132;
        }
        if (v101 < v89) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        unint64_t v108 = v20;
        unint64_t v109 = &v64[2 * v106];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = &v64[2 * v67];
        double v112 = v111[1];
        sub_100077798(v107 + *(void *)(v129 + 72) * *(void *)v109, v107 + *(void *)(v129 + 72) * *(void *)v111, v107 + *(void *)(v129 + 72) * *(void *)&v112, v128);
        if (v2) {
          goto LABEL_118;
        }
        if (*(uint64_t *)&v112 < v110) {
          goto LABEL_122;
        }
        if (v67 > *((void *)v108 + 2)) {
          goto LABEL_123;
        }
        *(void *)unint64_t v109 = v110;
        v64[2 * v106 + 1] = v112;
        unint64_t v113 = *((void *)v108 + 2);
        if (v67 >= v113) {
          goto LABEL_124;
        }
        uint64_t v20 = v108;
        unint64_t v21 = v113 - 1;
        memmove(&v64[2 * v67], v111 + 2, 16 * (v113 - 1 - v67));
        *((void *)v108 + 2) = v113 - 1;
        a1 = v134;
        if (v113 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v136;
    if (v136 >= v12)
    {
      uint64_t v18 = v122;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v123)) {
    goto LABEL_144;
  }
  if (v22 + v123 >= v12) {
    Swift::Int v47 = v12;
  }
  else {
    Swift::Int v47 = v22 + v123;
  }
  if (v47 >= v22)
  {
    if (v32 != v47)
    {
      uint64_t v127 = v22;
      uint64_t v121 = v20;
      uint64_t v124 = v47;
      uint64_t v125 = v2;
      Swift::Int v48 = *(void *)(v129 + 72);
      uint64_t v136 = v48 * (v32 - 1);
      Swift::Int v131 = v48;
      Swift::Int v49 = v32 * v48;
      do
      {
        uint64_t v50 = 0;
        uint64_t v51 = v127;
        while (1)
        {
          Swift::Int v52 = v32;
          uint64_t v53 = *a1;
          uint64_t v54 = v132;
          sub_1000170BC(v49 + v50 + *a1, v132);
          uint64_t v55 = v136 + v50 + v53;
          uint64_t v56 = v133;
          sub_1000170BC(v55, v133);
          double v57 = *(double *)(v54 + 16);
          double v58 = *(double *)(v56 + 16);
          sub_100017120(v56);
          sub_100017120(v54);
          if (v58 >= v57) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v60 = v59 + v136 + v50;
          sub_100078F10(v59 + v49 + v50, v135);
          swift_arrayInitWithTakeFrontToBack();
          sub_100078F10(v135, v60);
          v50 -= v131;
          ++v51;
          Swift::Int v32 = v52;
          a1 = v134;
          if (v52 == v51) {
            goto LABEL_51;
          }
        }
        Swift::Int v32 = v52;
LABEL_51:
        ++v32;
        v136 += v131;
        v49 += v131;
      }
      while (v32 != v124);
      Swift::Int v32 = v124;
      uint64_t v2 = v125;
      uint64_t v20 = v121;
      uint64_t v22 = v127;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_1001055B8();
  __break(1u);
  return result;
}

uint64_t sub_100077544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v7 = __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (double *)((char *)&v24 - v10);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (double *)((char *)&v24 - v14);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = *a4;
      sub_1000170BC(v31 + v17 + *a4, (uint64_t)v15);
      sub_1000170BC(v32 + v17 + v19, (uint64_t)v11);
      double v20 = v15[2];
      double v21 = v11[2];
      sub_100017120((uint64_t)v11);
      uint64_t result = sub_100017120((uint64_t)v15);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_100078F10(v22 + v31 + v17, v30);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100078F10(v30, v23);
      v17 -= v28;
      if (v29 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100077798(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = __chkstk_darwin(v40);
  uint64_t v10 = (double *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  Swift::Int v12 = (double *)((char *)&v39 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v14;
        do
        {
          unint64_t v32 = a3 + v31;
          sub_1000170BC(v29 + v31, (uint64_t)v12);
          unint64_t v33 = a2 + v31;
          sub_1000170BC(a2 + v31, (uint64_t)v10);
          double v34 = v12[2];
          double v35 = v10[2];
          sub_100017120((uint64_t)v10);
          sub_100017120((uint64_t)v12);
          if (v35 >= v34)
          {
            unint64_t v36 = v41;
            v41 += v31;
            if (a3 < v36 || v32 >= v36)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v36)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v31;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v33;
          a3 += v31;
        }
        while (v33 > a1);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1000170BC(a2, (uint64_t)v12);
        sub_1000170BC(a4, (uint64_t)v10);
        double v22 = v12[2];
        double v23 = v10[2];
        sub_100017120((uint64_t)v10);
        sub_100017120((uint64_t)v12);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_100077D34(&v43, &v42, (uint64_t *)&v41, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

double *sub_100077C08(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007E0C(&qword_1001506B0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100077D04(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100077D34(a1, a2, a3, type metadata accessor for InsightsDataManager.TopAssetCategory);
}

uint64_t sub_100077D1C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100077D34(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_100077D34(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_100105628();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

double *sub_100077E78(uint64_t a1)
{
  return sub_100077C08(0, *(void *)(a1 + 16), 0, a1);
}

double *sub_100077E8C(uint64_t a1)
{
  return sub_1000B73BC(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_100077EA0(unint64_t a1)
{
  return sub_1000B74CC(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100077EB4(void *a1)
{
  return sub_1000B7500(0, a1[2], 0, a1);
}

unsigned __int8 *sub_100077EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100104C58();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10007822C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v7 = (unsigned __int8 *)sub_100105528();
  }
LABEL_7:
  int64_t v11 = sub_100077FB0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_100077FB0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (double i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10007822C()
{
  unint64_t v0 = sub_100104C68();
  uint64_t v4 = sub_1000782AC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000782AC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100078404(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1000769F0(v9, 0),
          unint64_t v12 = sub_100078504((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_100104BB8();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_100104BB8();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_100105528();
LABEL_4:

  return sub_100104BB8();
}

uint64_t sub_100078404(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100076A58(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100076A58(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_100078504(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_100076A58(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_100104C38();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_100105528();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_100076A58(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_100104C08();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100078718(void *a1)
{
  return sub_1000C3E18(0, a1[2], 0, a1);
}

uint64_t sub_10007872C(void *a1)
{
  return sub_1000C4550(0, a1[2], 0, a1);
}

uint64_t sub_100078740(void *a1)
{
  return sub_1000C47B8(0, a1[2], 0, a1);
}

uint64_t sub_100078754(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1000B74CC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      unint64_t *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

double sub_10007893C(uint64_t a1, char a2, char a3, char a4, char a5)
{
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v10 = (long long *)(a1 + 32);
    double v11 = *(double *)(a1 + 32);
    uint64_t v12 = *(void **)(a1 + 48);
    if (v5 == 1)
    {
      double v13 = *(double *)(a1 + 40);
      double v14 = *(double *)(a1 + 112);
      if ((*(unsigned char *)(a1 + 64) & 1) != 0 || *(uint64_t *)(a1 + 56) < 2)
      {
        if (v14 <= 0.0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v42 = v12;
          swift_bridgeObjectRetain();
          double v16 = 0.04;
          double v17 = 0.04;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
        else
        {
          BOOL v40 = v14 < 150.0;
          double v41 = v14 / 111000.0;
          if (v40)
          {
            double v16 = v41 + v41 + 0.003;
          }
          else
          {
            double v43 = v41 * 3.0 + 0.003;
            if (v43 <= 0.1) {
              double v16 = v43;
            }
            else {
              double v16 = 0.1;
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v44 = v12;
          swift_bridgeObjectRetain();
          double v17 = v16;
          if ((a5 & 1) == 0) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v15 = v12;
        swift_bridgeObjectRetain();
        double v16 = 0.01;
        double v17 = 0.01;
        if ((a5 & 1) == 0)
        {
LABEL_6:
          double v18 = 1.1;
LABEL_29:
          double v45 = v17 * v18;
          double v46 = v16 * v18;
          if (a2)
          {
            double v45 = v45 * 1.4;
            double v46 = v46 * 0.9;
            double v11 = v11 + v45 / -12.0;
          }
          if (a4) {
            double v45 = v45 * 1.3;
          }
          if (a3) {
            double v46 = v46 * 1.3;
          }
          if (!sub_100010230(v11, v13, fmin(v45, 180.0), fmin(v46, 180.0)))
          {
            if (qword_10014BFC0 != -1) {
              swift_once();
            }
            uint64_t v47 = sub_100103DB8();
            sub_100007D30(v47, (uint64_t)qword_100150590);
            Swift::Int v48 = sub_100103D98();
            os_log_type_t v49 = sub_100104FF8();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 134218752;
              sub_1001052C8();
              *(_WORD *)(v50 + 12) = 2048;
              sub_1001052C8();
              *(_WORD *)(v50 + 22) = 2048;
              sub_1001052C8();
              *(_WORD *)(v50 + 32) = 2048;
              sub_1001052C8();
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "[MapSnapshot] makeRegion failed with invalid region: centerLatitude = %f, centerLongitude = %f, targetLatitudeDelta = %f, targetLongitudeDelta = %f", (uint8_t *)v50, 0x2Au);
              swift_slowDealloc();
            }

            v56.origin.CGFloat x = MKMapRectWorld.origin.x;
            v56.origin.y = MKMapRectWorld.origin.y;
            v56.size.width = MKMapRectWorld.size.width;
            v56.size.height = MKMapRectWorld.size.height;
            *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v56);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          return v11;
        }
      }
    }
    else
    {
      uint64_t v53 = *(void **)(a1 + 48);
      id v23 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000C3C58(0, v5, 0);
      double v24 = _swiftEmptyArrayStorage[2];
      int64_t v25 = v5;
      do
      {
        long long v26 = *v10;
        double v27 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v24 >= *(void *)&v27 >> 1)
        {
          long long v52 = *v10;
          sub_1000C3C58(*(void *)&v27 > 1uLL, *(void *)&v24 + 1, 1);
          long long v26 = v52;
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v24 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v24 + 4] = v26;
        unint64_t v10 = (long long *)((char *)v10 + 104);
        ++*(void *)&v24;
        --v25;
      }
      while (v25);
      id v28 = [self polygonWithCoordinates:&_swiftEmptyArrayStorage[4] count:v5];
      swift_release();
      [v28 boundingMapRect];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;

      v55.origin.CGFloat x = v30;
      v55.origin.y = v32;
      v55.size.width = v34;
      v55.size.height = v36;
      *(MKCoordinateRegion *)(&v17 - 2) = MKCoordinateRegionForMapRect(v55);
      double v11 = v37;
      double v13 = v38;
      double v16 = v39;
      uint64_t v12 = v53;
      if ((a5 & 1) == 0) {
        goto LABEL_6;
      }
    }
    double v18 = 1.4;
    goto LABEL_29;
  }
  if (qword_10014BFC0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100103DB8();
  sub_100007D30(v19, (uint64_t)qword_100150590);
  char v20 = sub_100103D98();
  os_log_type_t v21 = sub_100104FF8();
  if (os_log_type_enabled(v20, v21))
  {
    BOOL v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[MapSnapshot] makeRegion failed with 0 locations", v22, 2u);
    swift_slowDealloc();
  }

  v54.origin.CGFloat x = MKMapRectNull.origin.x;
  v54.origin.y = MKMapRectNull.origin.y;
  v54.size.width = MKMapRectNull.size.width;
  v54.size.height = MKMapRectNull.size.height;
  *(void *)&double v11 = (unint64_t)MKCoordinateRegionForMapRect(v54);
  return v11;
}

uint64_t sub_100078F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100078FD8()
{
  type metadata accessor for UniformDateBins(319);
  if (v0 <= 0x3F)
  {
    sub_10007A3BC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1000790AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100007E0C(&qword_10014D3B8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_100103AD8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      double v13 = (char *)a1 + v12;
      double v14 = (char *)a2 + v12;
      uint64_t v15 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v7 + 24);
      double v17 = (char *)a1 + v16;
      double v18 = (char *)a2 + v16;
      uint64_t v19 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = type metadata accessor for UniformDateBins(0);
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(v20 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 24));
    uint64_t v21 = *(int *)(a3 + 28);
    BOOL v22 = (char *)a1 + v21;
    id v23 = (char *)a2 + v21;
    uint64_t v24 = sub_100103978();
    int64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    uint64_t v26 = sub_100007E0C(&qword_10014CE88);
    v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100079370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_100103AD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = a1 + *(int *)(v4 + 20);
    uint64_t v7 = sub_100103978();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + *(int *)(v4 + 24);
    uint64_t v9 = sub_100103AE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 28);
  uint64_t v11 = sub_100103978();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = sub_100007E0C(&qword_10014CE88);
  v12(v10 + *(int *)(v13 + 36), v11);

  return swift_bridgeObjectRelease();
}

char *sub_100079520(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v18 + 20)] = *(void *)&a2[*(int *)(v18 + 20)];
  *(void *)&a1[*(int *)(v18 + 24)] = *(void *)&a2[*(int *)(v18 + 24)];
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_100103978();
  id v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  uint64_t v24 = sub_100007E0C(&qword_10014CE88);
  v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100079794(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v29 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(a1, a2, v29);
      uint64_t v30 = *(int *)(v6 + 20);
      double v31 = &a1[v30];
      double v32 = &a2[v30];
      uint64_t v33 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
      uint64_t v34 = *(int *)(v6 + 24);
      double v35 = &a1[v34];
      double v36 = &a2[v34];
      uint64_t v37 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
      goto LABEL_7;
    }
    sub_100079B10((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v21 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v21 + 20)] = *(void *)&a2[*(int *)(v21 + 20)];
  *(void *)&a1[*(int *)(v21 + 24)] = *(void *)&a2[*(int *)(v21 + 24)];
  uint64_t v22 = *(int *)(a3 + 28);
  id v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_100103978();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  uint64_t v27 = sub_100007E0C(&qword_10014CE88);
  v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100079B10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarBinningUnit(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100079B6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v18 + 20)] = *(void *)&a2[*(int *)(v18 + 20)];
  *(void *)&a1[*(int *)(v18 + 24)] = *(void *)&a2[*(int *)(v18 + 24)];
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_100103978();
  id v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  uint64_t v24 = sub_100007E0C(&qword_10014CE88);
  v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  return a1;
}

char *sub_100079DDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v29 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(a1, a2, v29);
      uint64_t v30 = *(int *)(v6 + 20);
      double v31 = &a1[v30];
      double v32 = &a2[v30];
      uint64_t v33 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
      uint64_t v34 = *(int *)(v6 + 24);
      double v35 = &a1[v34];
      double v36 = &a2[v34];
      uint64_t v37 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
      goto LABEL_7;
    }
    sub_100079B10((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v21 = type metadata accessor for UniformDateBins(0);
  *(void *)&a1[*(int *)(v21 + 20)] = *(void *)&a2[*(int *)(v21 + 20)];
  *(void *)&a1[*(int *)(v21 + 24)] = *(void *)&a2[*(int *)(v21 + 24)];
  uint64_t v22 = *(int *)(a3 + 28);
  id v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_100103978();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  uint64_t v27 = sub_100007E0C(&qword_10014CE88);
  v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
  *(void *)&a1[*(int *)(a3 + 32)] = *(void *)&a2[*(int *)(a3 + 32)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10007A150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007A164);
}

uint64_t sub_10007A164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UniformDateBins(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100007E0C(&qword_10014CE88);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10007A27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007A290);
}

uint64_t sub_10007A290(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UniformDateBins(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100007E0C(&qword_10014CE88);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for DateBinDictionary()
{
  return sub_10000ABE8();
}

void sub_10007A3BC()
{
  if (!qword_100150740)
  {
    sub_100103978();
    sub_10007A420();
    unint64_t v0 = sub_100104A88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100150740);
    }
  }
}

unint64_t sub_10007A420()
{
  unint64_t result = qword_10014CE98;
  if (!qword_10014CE98)
  {
    sub_100103978();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CE98);
  }
  return result;
}

uint64_t sub_10007A478()
{
  return swift_getWitnessTable();
}

uint64_t sub_10007A494(uint64_t a1, uint64_t (*a2)(void, void *, void, void *))
{
  return a2(*(void *)(v2 + *(int *)(a1 + 32)), &type metadata for Int, *(void *)(a1 + 16), &protocol witness table for Int);
}

uint64_t sub_10007A4D8()
{
  return sub_1001049C8();
}

uint64_t sub_10007A518(uint64_t a1)
{
  sub_1001049D8();
  return sub_1000FE868(v3, a1);
}

uint64_t sub_10007A57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A5AC(a1, (uint64_t (*)(void, void *, void, void *))&Dictionary.startIndex.getter, a2);
}

uint64_t sub_10007A594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007A5AC(a1, (uint64_t (*)(void, void *, void, void *))&Dictionary.endIndex.getter, a2);
}

uint64_t sub_10007A5AC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void *, void, void *)@<X2>, uint64_t a3@<X8>)
{
  uint64_t result = sub_10007A494(a1, a2);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6 & 1;
  return result;
}

void (*sub_10007A5E0(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)malloc(0x40uLL);
  *a1 = v5;
  sub_100007F30(&qword_10014CE88);
  uint64_t v6 = *(void *)(a3 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[4] = TupleTypeMetadata2;
  uint64_t v8 = *(void *)(TupleTypeMetadata2 - 8);
  v5[5] = v8;
  uint64_t v9 = (char *)malloc(*(void *)(v8 + 64));
  v5[6] = (uint64_t)v9;
  uint64_t v10 = sub_10007A7A4(v5);
  uint64_t v12 = v11;
  v5[7] = (uint64_t)v10;
  sub_10001C60C(v13, (uint64_t)v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(&v9[*(int *)(TupleTypeMetadata2 + 48)], v12, v6);
  return sub_10007A72C;
}

void sub_10007A72C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);

  free((void *)v3);
}

void (*sub_10007A7A4(uint64_t *a1))(void *a1)
{
  sub_100007F30(&qword_10014CE88);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  a1[2] = (uint64_t)v4;
  sub_10007A518((uint64_t)v4);
  return sub_10007A8A8;
}

void sub_10007A8A8(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

void sub_10007A904(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -2;
}

uint64_t sub_10007A920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007AF0C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.< infix(_:_:));
}

uint64_t sub_10007A960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007AF0C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange, (uint64_t (*)(char *, char *, uint64_t, uint64_t))&dispatch thunk of static Comparable.<= infix(_:_:));
}

uint64_t sub_10007A9A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10007A4D8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_10007A9E4(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = sub_10007A4D8();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t result = sub_10001C914(v2, v3, v4);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v9 & 1;
  return result;
}

uint64_t sub_10007AA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  uint64_t v6 = sub_10007A494(a1, (uint64_t (*)(void, void *, void, void *))&Dictionary.startIndex.getter);
  uint64_t v8 = v7;
  char v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t result = sub_1001055A8();
  uint64_t v12 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v12 = v6;
  *(void *)(v12 + 8) = v8;
  *(unsigned char *)(v12 + 16) = v10 & 1;
  return result;
}

uint64_t sub_10007AB7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_10007ABD0()
{
  return 2;
}

uint64_t sub_10007ABD8(uint64_t a1)
{
  swift_getWitnessTable();
  uint64_t v3 = sub_10007AF08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_10007AC68()
{
  return sub_100104C98();
}

uint64_t sub_10007AC8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10007ACA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10007ACC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10007ACE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10007ACFC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_100104F78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  char v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_100104A48();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_100104A48();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_10007AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  id v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_100104A48();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

unint64_t sub_10007B180(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x726F68747561;
      break;
    case 3:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 4:
      unint64_t result = 0x79616C50656D6974;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007B26C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_100150888);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_10007D380();
  sub_100105968();
  v11[15] = 0;
  sub_100105778();
  if (!v2)
  {
    v11[14] = 1;
    sub_100105728();
    v11[13] = 2;
    sub_100105728();
    uint64_t v9 = _s12PodcastAssetC11PodcastDataVMa(0);
    v11[12] = 3;
    sub_100103818();
    sub_10007D338(&qword_10014DC50, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_100105768();
    v11[11] = 4;
    sub_100103978();
    sub_10007D338(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    v11[10] = 5;
    sub_100105758();
    v11[9] = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_10007D4E8();
    sub_100105768();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10007B568@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007E0C(&qword_100150870);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)_s12PodcastAssetC11PodcastDataVMa(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v37 = a1;
  sub_100012154(a1, v15);
  sub_10007D380();
  uint64_t v16 = v38;
  sub_100105958();
  if (v16) {
    return sub_1000121EC((uint64_t)v37);
  }
  double v32 = v5;
  uint64_t v33 = v8;
  double v38 = v14;
  char v46 = 0;
  uint64_t v17 = v36;
  uint64_t v18 = v11;
  uint64_t v19 = sub_1001056C8();
  char v20 = v38;
  *double v38 = v19;
  v20[1] = v21;
  char v45 = 1;
  v20[2] = sub_100105678();
  void v20[3] = v22;
  char v44 = 2;
  v20[4] = sub_100105678();
  v20[5] = v23;
  sub_100103818();
  char v43 = 3;
  sub_10007D338(&qword_10014DC40, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v24 = (uint64_t)v33;
  sub_1001056B8();
  sub_100033870(v24, (uint64_t)v20 + v12[7], (uint64_t *)&unk_100151990);
  sub_100103978();
  char v42 = 4;
  sub_10007D338(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = (uint64_t)v32;
  sub_1001056B8();
  sub_100033870(v25, (uint64_t)v20 + v12[8], (uint64_t *)&unk_100151950);
  char v41 = 5;
  uint64_t v26 = sub_1001056A8();
  uint64_t v27 = v35;
  id v28 = (char *)v20 + v12[9];
  *(void *)id v28 = v26;
  v28[8] = v29 & 1;
  char v39 = 6;
  sub_10007D3D4();
  sub_1001056B8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v17);
  *((unsigned char *)v20 + v12[10]) = v40;
  sub_10007D428((uint64_t)v20, v34);
  sub_1000121EC((uint64_t)v37);
  return sub_10007D48C((uint64_t)v20);
}

unint64_t sub_10007BAF4()
{
  return sub_10007B180(*v0);
}

uint64_t sub_10007BAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007D83C(a1, a2);
  *a3 = result;
  return result;
}

void sub_10007BB24(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10007BB30(uint64_t a1)
{
  unint64_t v2 = sub_10007D380();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007BB6C(uint64_t a1)
{
  unint64_t v2 = sub_10007D380();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007BBA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007B568(a1, a2);
}

uint64_t sub_10007BBC0(void *a1)
{
  return sub_10007B26C(a1);
}

uint64_t sub_10007BBD8()
{
  uint64_t v1 = sub_100007E0C(&qword_100150898);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling12PodcastAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000F6C74((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_100012510((uint64_t)v3, &qword_100150898);
    return 0;
  }
  sub_10007D53C((uint64_t)v3, (uint64_t)v7);
  sub_100007E0C(&qword_10014EF08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100108250;
  *(void *)(inited + 32) = *((void *)v7 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 24);
  *(void *)(inited + 56) = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10009063C(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100007E0C(&qword_10014D858);
  swift_arrayDestroy();
  sub_10007D48C((uint64_t)v7);
  return v9;
}

uint64_t sub_10007BE00()
{
  return swift_release();
}

id sub_10007BE10()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12PodcastAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10007BE58()
{
  return _s12PodcastAssetCMa(0);
}

uint64_t _s12PodcastAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100150770);
}

uint64_t sub_10007BE80()
{
  return swift_updateClassMetadata2();
}

void *sub_10007BEC4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[7];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = sub_100103818();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151990);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_100103978();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
  }
  return v4;
}

uint64_t sub_10007C188(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100103818();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_100103978();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_10007C310(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_100103818();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100103978();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  return a1;
}

void *sub_10007C584(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100103978();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_10007C8D4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103818();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_100103978();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  int v21 = (char *)a1 + v19;
  int v22 = (char *)a2 + v19;
  *(void *)int v21 = *(void *)v22;
  v21[8] = v22[8];
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

void *sub_10007CB10(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100103818();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_100103978();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  char v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(void *)char v29 = *(void *)v30;
  v29[8] = v30[8];
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  return a1;
}

uint64_t sub_10007CE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007CE40);
}

uint64_t sub_10007CE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10007CF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007CF88);
}

uint64_t sub_10007CF88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s12PodcastAssetC11PodcastDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_1001507D8);
}

void sub_10007D0DC()
{
  sub_10007D208(319, (unint64_t *)&qword_10014CE18, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10007D208(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10007D208(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100105278();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10007D25C()
{
  return swift_retain();
}

uint64_t sub_10007D26C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling12PodcastAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10007D284()
{
  return sub_10007BBD8();
}

uint64_t sub_10007D2A8()
{
  return sub_10007D338(&qword_100150828, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_10007D2F0()
{
  return sub_10007D338(&qword_100150830, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_10007D338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007D380()
{
  unint64_t result = qword_100150878;
  if (!qword_100150878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150878);
  }
  return result;
}

unint64_t sub_10007D3D4()
{
  unint64_t result = qword_100150880;
  if (!qword_100150880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150880);
  }
  return result;
}

uint64_t sub_10007D428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007D48C(uint64_t a1)
{
  uint64_t v2 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10007D4E8()
{
  unint64_t result = qword_100150890;
  if (!qword_100150890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150890);
  }
  return result;
}

uint64_t sub_10007D53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s12PodcastAssetC11PodcastDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12PodcastAssetC11PodcastDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007D6FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12PodcastAssetC11PodcastDataV10CodingKeysOMa()
{
  return &_s12PodcastAssetC11PodcastDataV10CodingKeysON;
}

unint64_t sub_10007D738()
{
  unint64_t result = qword_1001508A0;
  if (!qword_1001508A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001508A0);
  }
  return result;
}

unint64_t sub_10007D790()
{
  unint64_t result = qword_1001508A8;
  if (!qword_1001508A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001508A8);
  }
  return result;
}

unint64_t sub_10007D7E8()
{
  unint64_t result = qword_1001508B0;
  if (!qword_1001508B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001508B0);
  }
  return result;
}

uint64_t sub_10007D83C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100112CE0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_10007DB24(unsigned __int8 a1)
{
  unint64_t result = 0xD00000000000002ALL;
  if (a1 >= 2u) {
    return 0xD000000000000031;
  }
  return result;
}

unint64_t sub_10007DB80(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x7370657473;
      break;
    case 4:
      unint64_t result = 0x6D69547472617473;
      break;
    case 5:
      unint64_t result = 0x656D6954646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007DC64(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_1001509F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10007F9CC();
  sub_100105968();
  char v17 = 0;
  sub_100105778();
  if (!v2)
  {
    char v16 = *(unsigned char *)(v3 + 16);
    char v15 = 1;
    sub_10007FB34();
    sub_100105768();
    char v14 = 2;
    sub_100105728();
    char v13 = 3;
    sub_100105728();
    _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    char v12 = 4;
    sub_100103978();
    sub_10007F984(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    char v11 = 5;
    sub_100105768();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10007DEEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v22 - v7;
  uint64_t v25 = sub_100007E0C(&qword_1001509D8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v9 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v26 = a1;
  sub_100012154(a1, v12);
  sub_10007F9CC();
  char v13 = v27;
  sub_100105958();
  if (v13) {
    return sub_1000121EC((uint64_t)v26);
  }
  uint64_t v14 = (uint64_t)v8;
  uint64_t v27 = v6;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v34 = 0;
  *(void *)char v11 = sub_1001056C8();
  *((void *)v11 + 1) = v17;
  char v32 = 1;
  sub_10007FA20();
  sub_1001056B8();
  unsigned char v11[16] = v33;
  char v31 = 2;
  *((void *)v11 + 3) = sub_100105678();
  *((void *)v11 + 4) = v18;
  char v30 = 3;
  *((void *)v11 + 5) = sub_100105678();
  *((void *)v11 + 6) = v19;
  sub_100103978();
  char v29 = 4;
  uint64_t v22 = sub_10007F984(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100012290(v14, (uint64_t)&v11[*(int *)(v9 + 32)]);
  char v28 = 5;
  uint64_t v20 = (uint64_t)v27;
  sub_1001056B8();
  (*(void (**)(void, uint64_t))(v15 + 8))(0, v25);
  sub_100012290(v20, (uint64_t)&v11[*(int *)(v9 + 36)]);
  sub_10007FA74((uint64_t)v11, v16);
  sub_1000121EC((uint64_t)v26);
  return sub_10007FAD8((uint64_t)v11);
}

uint64_t sub_10007E374(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100054648(*a1, *a2);
}

Swift::Int sub_10007E380()
{
  return sub_10003DF78();
}

uint64_t sub_10007E388()
{
  return sub_10003E250();
}

Swift::Int sub_10007E390()
{
  return sub_10003E2E0();
}

uint64_t sub_10007E398@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10007FF54(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_10007E3C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10007DB24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10007E3F4()
{
  return sub_100104CF8();
}

uint64_t sub_10007E454()
{
  return sub_100104CB8();
}

unint64_t sub_10007E4A4()
{
  return sub_10007DB80(*v0);
}

uint64_t sub_10007E4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007FFA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007E4D4(uint64_t a1)
{
  unint64_t v2 = sub_10007F9CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007E510(uint64_t a1)
{
  unint64_t v2 = sub_10007F9CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007E54C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007DEEC(a1, a2);
}

uint64_t sub_10007E564(void *a1)
{
  return sub_10007DC64(a1);
}

uint64_t sub_10007E57C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100007E0C(&qword_100150A00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling19MotionActivityAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_11;
  }
  swift_retain();
  sub_1000F6FA8((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_11:
    sub_100012510((uint64_t)v7, &qword_100150A00);
    return 0;
  }
  sub_10007FB88((uint64_t)v7, (uint64_t)v11);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  if (a2 && (v12 == a1 ? (BOOL v14 = v13 == a2) : (BOOL v14 = 0), v14 || (sub_1001057F8() & 1) != 0))
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000B7A08(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v18 = *((void *)v15 + 2);
    unint64_t v17 = *((void *)v15 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v15 = sub_1000B7A08((double *)(v17 > 1), v18 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v18 + 1;
    uint64_t v19 = &v15[2 * v18];
    *((void *)v19 + 4) = v12;
    *((void *)v19 + 5) = v13;
  }
  uint64_t v21 = v11[5];
  uint64_t v20 = v11[6];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_1000B7A08(0, *((void *)v15 + 2) + 1, 1, v15);
  }
  unint64_t v23 = *((void *)v15 + 2);
  unint64_t v22 = *((void *)v15 + 3);
  if (v23 >= v22 >> 1) {
    uint64_t v15 = sub_1000B7A08((double *)(v22 > 1), v23 + 1, 1, v15);
  }
  *((void *)v15 + 2) = v23 + 1;
  uint64_t v24 = &v15[2 * v23];
  *((void *)v24 + 4) = v21;
  *((void *)v24 + 5) = v20;
  uint64_t v16 = sub_10009063C(8236, 0xE200000000000000, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_10007FAD8((uint64_t)v11);
  return v16;
}

uint64_t sub_10007E850()
{
  return swift_release();
}

id sub_10007E860()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MotionActivityAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_10007E8A8()
{
  return _s19MotionActivityAssetCMa(0);
}

uint64_t _s19MotionActivityAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_1001508E0);
}

uint64_t sub_10007E8D0()
{
  return swift_updateClassMetadata2();
}

void *sub_10007E914(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    uint64_t v10 = *(int *)(a3 + 32);
    __dst = (void *)(a1 + v10);
    char v11 = (char *)a2 + v10;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v12 = sub_100103978();
    uint64_t v13 = *(void *)(v12 - 8);
    BOOL v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    unint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_10007EB70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_100103978();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t sub_10007ECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v11 = sub_100103978();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10007EEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_10007F194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_10007F374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 36);
  int v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t sub_10007F628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007F63C);
}

uint64_t sub_10007F63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007F6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007F704);
}

uint64_t sub_10007F704(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s19MotionActivityAssetC18MotionActivityDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100150948);
}

void sub_10007F7D0()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10007F87C()
{
  return swift_retain();
}

uint64_t sub_10007F88C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling19MotionActivityAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_10007F8A4(uint64_t a1, uint64_t a2)
{
  return sub_10007E57C(a1, a2);
}

uint64_t sub_10007F8C8()
{
  return sub_10007E57C(0, 0);
}

uint64_t sub_10007F8F4()
{
  return sub_10007F984(&qword_100150990, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa);
}

uint64_t sub_10007F93C()
{
  return sub_10007F984(&qword_100150998, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa);
}

uint64_t sub_10007F984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007F9CC()
{
  unint64_t result = qword_1001509E0;
  if (!qword_1001509E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001509E0);
  }
  return result;
}

unint64_t sub_10007FA20()
{
  unint64_t result = qword_1001509E8;
  if (!qword_1001509E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001509E8);
  }
  return result;
}

uint64_t sub_10007FA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007FAD8(uint64_t a1)
{
  uint64_t v2 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10007FB34()
{
  unint64_t result = qword_1001509F8;
  if (!qword_1001509F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001509F8);
  }
  return result;
}

uint64_t sub_10007FB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007FCB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysOMa()
{
  return &_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysON;
}

unsigned char *_s19MotionActivityAssetC22MotionActivityTypeEnumOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007FDBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19MotionActivityAssetC22MotionActivityTypeEnumOMa()
{
  return &_s19MotionActivityAssetC22MotionActivityTypeEnumON;
}

unint64_t sub_10007FDF8()
{
  unint64_t result = qword_100150A08;
  if (!qword_100150A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A08);
  }
  return result;
}

unint64_t sub_10007FE50()
{
  unint64_t result = qword_100150A10;
  if (!qword_100150A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A10);
  }
  return result;
}

unint64_t sub_10007FEA8()
{
  unint64_t result = qword_100150A18;
  if (!qword_100150A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A18);
  }
  return result;
}

unint64_t sub_10007FF00()
{
  unint64_t result = qword_100150A20;
  if (!qword_100150A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A20);
  }
  return result;
}

uint64_t sub_10007FF54(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100138E30;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_10007FFA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100112D40 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100112D60 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7370657473 && a2 == 0xE500000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_100080234()
{
  unint64_t result = qword_100150A28;
  if (!qword_100150A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A28);
  }
  return result;
}

void *sub_100080288@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1000802A8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000802B4()
{
  uint64_t v0 = sub_1001033A8();
  sub_1000081D0(v0, qword_100163008);
  sub_100007D30(v0, (uint64_t)qword_100163008);
  return sub_100103398();
}

uint64_t sub_100080318()
{
  sub_100007E0C(&qword_100150AA0);
  uint64_t v0 = *(void *)(sub_100007E0C(&qword_10014C880) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10010AFB0;
  unint64_t v4 = (unsigned char *)(v3 + v2);
  *unint64_t v4 = 0;
  sub_100103348();
  v4[v1] = 1;
  sub_100103348();
  v4[2 * v1] = 2;
  sub_100103348();
  unint64_t v5 = sub_100010640(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_100163020 = v5;
  return result;
}

unint64_t sub_1000804A8()
{
  unint64_t result = qword_100150A30;
  if (!qword_100150A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A30);
  }
  return result;
}

uint64_t *sub_1000804FC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_100080518()
{
  unint64_t result = qword_100150A38;
  if (!qword_100150A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A38);
  }
  return result;
}

unint64_t sub_100080570()
{
  unint64_t result = qword_100150A40;
  if (!qword_100150A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A40);
  }
  return result;
}

unint64_t sub_1000805C8()
{
  unint64_t result = qword_100150A48;
  if (!qword_100150A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A48);
  }
  return result;
}

void *sub_10008061C()
{
  return &protocol witness table for Int;
}

unint64_t sub_10008062C()
{
  unint64_t result = qword_100150A50;
  if (!qword_100150A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A50);
  }
  return result;
}

unint64_t sub_100080684()
{
  unint64_t result = qword_100150A58;
  if (!qword_100150A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A58);
  }
  return result;
}

unint64_t sub_1000806DC()
{
  unint64_t result = qword_100150A60;
  if (!qword_100150A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A60);
  }
  return result;
}

unint64_t sub_100080734()
{
  unint64_t result = qword_100150A68;
  if (!qword_100150A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A68);
  }
  return result;
}

uint64_t sub_10008078C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10014BFC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1001033A8();
  uint64_t v3 = sub_100007D30(v2, (uint64_t)qword_100163008);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100080834()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100080884()
{
  unint64_t result = qword_100150A70;
  if (!qword_100150A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A70);
  }
  return result;
}

uint64_t sub_1000808D8(uint64_t a1)
{
  unint64_t v2 = sub_100080884();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100080928()
{
  unint64_t result = qword_100150A78;
  if (!qword_100150A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A78);
  }
  return result;
}

unint64_t sub_100080980()
{
  unint64_t result = qword_100150A80;
  if (!qword_100150A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A80);
  }
  return result;
}

unint64_t sub_1000809D8()
{
  unint64_t result = qword_100150A88;
  if (!qword_100150A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A88);
  }
  return result;
}

uint64_t sub_100080A2C()
{
  if (qword_10014BFD0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100080A88(uint64_t a1)
{
  unint64_t v2 = sub_100080734();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100080AD8()
{
  unint64_t result = qword_100150A90;
  if (!qword_100150A90)
  {
    sub_100007F30(&qword_100150A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150A90);
  }
  return result;
}

void sub_100080B34(void *a1@<X8>)
{
  *a1 = &off_100138E98;
}

unsigned char *storeEnumTagSinglePayload for StreaksWidgetVisualization(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100080C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreaksWidgetVisualization()
{
  return &type metadata for StreaksWidgetVisualization;
}

uint64_t getEnumTagSinglePayload for StreaksWidgetStreak(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StreaksWidgetStreak(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreaksWidgetStreak()
{
  return &type metadata for StreaksWidgetStreak;
}

unsigned char *storeEnumTagSinglePayload for StreaksWidgetStreakType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100080DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreaksWidgetStreakType()
{
  return &type metadata for StreaksWidgetStreakType;
}

unint64_t sub_100080DE4()
{
  unint64_t result = qword_100150AA8;
  if (!qword_100150AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150AA8);
  }
  return result;
}

uint64_t *sub_100080E38(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100104888();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100007E0C(&qword_100150AB0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    int v16 = (char *)a1 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = sub_100103978();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1000810B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104888();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_100103978();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *sub_10008121C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100104888();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_100150AB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = sub_100103978();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_100081444(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100104888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100007E0C(&qword_100150AB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_100103978();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_100081738(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100104888();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_100150AB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_100081948(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100104888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100007E0C(&qword_100150AB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_100103978();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_100081C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100081C40);
}

uint64_t sub_100081C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_100150AB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_100081D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100081D98);
}

uint64_t sub_100081D98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007E0C(&qword_100150AB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for CanvasStartingState()
{
  uint64_t result = qword_100150B10;
  if (!qword_100150B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100081F1C()
{
  sub_10008202C(319, (unint64_t *)&unk_100150B20, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_10008202C(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10008202C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100105278();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100082084(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_100103978();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100007E0C((uint64_t *)&unk_100151970);
  __chkstk_darwin(v62);
  uint64_t v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v60 - v11;
  __chkstk_darwin(v10);
  uint64_t v67 = (uint64_t)&v60 - v12;
  uint64_t v13 = sub_100104888();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007E0C(&qword_100150B58);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007E0C(&qword_100150AB0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  int v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v60 - v26;
  __chkstk_darwin(v25);
  char v29 = (char *)&v60 - v28;
  uint64_t v65 = a1;
  sub_100010808(a1, (uint64_t)&v60 - v28, &qword_100150AB0);
  sub_100010808(v69, (uint64_t)v27, &qword_100150AB0);
  uint64_t v30 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_100010808((uint64_t)v29, (uint64_t)v20, &qword_100150AB0);
  sub_100010808((uint64_t)v27, v30, &qword_100150AB0);
  char v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v31((uint64_t)v20, 1, v13) == 1)
  {
    sub_100012510((uint64_t)v27, &qword_100150AB0);
    sub_100012510((uint64_t)v29, &qword_100150AB0);
    if (v31(v30, 1, v13) == 1)
    {
      sub_100012510((uint64_t)v20, &qword_100150AB0);
      goto LABEL_11;
    }
LABEL_6:
    char v32 = &qword_100150B58;
    uint64_t v33 = (uint64_t)v20;
    goto LABEL_7;
  }
  sub_100010808((uint64_t)v20, (uint64_t)v24, &qword_100150AB0);
  if (v31(v30, 1, v13) == 1)
  {
    sub_100012510((uint64_t)v27, &qword_100150AB0);
    sub_100012510((uint64_t)v29, &qword_100150AB0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v30, v13);
  sub_100082878(&qword_100150B60, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  char v35 = sub_100104A98();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v13);
  sub_100012510((uint64_t)v27, &qword_100150AB0);
  sub_100012510((uint64_t)v29, &qword_100150AB0);
  v36(v24, v13);
  sub_100012510((uint64_t)v20, &qword_100150AB0);
  if ((v35 & 1) == 0) {
    return 0;
  }
LABEL_11:
  uint64_t v37 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v38 = v37[5];
  uint64_t v39 = v65;
  char v40 = (void *)(v65 + v38);
  uint64_t v41 = *(void *)(v65 + v38 + 8);
  uint64_t v42 = v69;
  char v43 = (void *)(v69 + v38);
  uint64_t v44 = v43[1];
  if (!v41)
  {
    uint64_t v45 = (uint64_t)v66;
    uint64_t v46 = v67;
    uint64_t v47 = v68;
    if (v44) {
      return 0;
    }
LABEL_18:
    sub_100010808(v39 + v37[6], v46, (uint64_t *)&unk_100151950);
    sub_100010808(v42 + v37[6], v47, (uint64_t *)&unk_100151950);
    uint64_t v49 = v45 + *(int *)(v62 + 48);
    sub_100010808(v46, v45, (uint64_t *)&unk_100151950);
    sub_100010808(v47, v49, (uint64_t *)&unk_100151950);
    uint64_t v50 = v63;
    uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v51(v45, 1, v63) == 1)
    {
      sub_100012510(v47, (uint64_t *)&unk_100151950);
      sub_100012510(v46, (uint64_t *)&unk_100151950);
      if (v51(v49, 1, v50) == 1)
      {
        sub_100012510(v45, (uint64_t *)&unk_100151950);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v52 = v61;
      sub_100010808(v45, v61, (uint64_t *)&unk_100151950);
      if (v51(v49, 1, v50) != 1)
      {
        uint64_t v53 = v52;
        uint64_t v54 = v64;
        MKMapRect v55 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v60, v49, v50);
        sub_100082878(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
        LODWORD(v66) = sub_100104A98();
        MKMapRect v56 = *(void (**)(char *, uint64_t))(v54 + 8);
        v56(v55, v50);
        sub_100012510(v68, (uint64_t *)&unk_100151950);
        sub_100012510(v67, (uint64_t *)&unk_100151950);
        v56((char *)v53, v50);
        sub_100012510(v45, (uint64_t *)&unk_100151950);
        if (v66)
        {
LABEL_25:
          uint64_t v57 = v37[7];
          unsigned int v58 = *(unsigned __int8 *)(v39 + v57);
          unsigned int v59 = *(unsigned __int8 *)(v42 + v57);
          if (v58 <= 0xFD)
          {
            if (v59 <= 0xFD && (sub_1000BD884(v58, v59) & 1) != 0) {
              return 1;
            }
          }
          else if (v59 > 0xFD)
          {
            return 1;
          }
        }
        return 0;
      }
      sub_100012510(v68, (uint64_t *)&unk_100151950);
      sub_100012510(v46, (uint64_t *)&unk_100151950);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v50);
    }
    char v32 = (uint64_t *)&unk_100151970;
    uint64_t v33 = v45;
LABEL_7:
    sub_100012510(v33, v32);
    return 0;
  }
  uint64_t v45 = (uint64_t)v66;
  uint64_t v46 = v67;
  uint64_t v47 = v68;
  if (!v44) {
    return 0;
  }
  if (*v40 == *v43 && v41 == v44) {
    goto LABEL_18;
  }
  char v48 = sub_1001057F8();
  uint64_t result = 0;
  if (v48) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_100082878(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType()
{
  return &type metadata for MediaViewType;
}

unint64_t sub_1000828DC()
{
  unint64_t result = qword_100150B68;
  if (!qword_100150B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150B68);
  }
  return result;
}

unint64_t sub_100082930(char a1)
{
  unint64_t result = 1735290739;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75626C41676E6F73;
      break;
    case 2:
      unint64_t result = 0x74736163646F70;
      break;
    case 3:
      unint64_t result = 0x4174736163646F70;
      break;
    case 4:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 5:
      unint64_t result = 0x7261506472696874;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100082A5C(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_100007E0C(&qword_100150C08);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_100150C10);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_100150C18);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007E0C(&qword_100150C20);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_100150C28);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  char v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007E0C(&qword_100150C30);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007E0C(&qword_100150C38);
  uint64_t v32 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007E0C(&qword_100150C40);
  uint64_t v31 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007E0C(&qword_100150C48);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10008437C();
  sub_100105968();
  switch((char)v50)
  {
    case 1:
      char v54 = 1;
      sub_1000845C8();
      uint64_t v26 = v51;
      sub_100105718();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 2:
      char v55 = 2;
      sub_100084574();
      uint64_t v26 = v51;
      sub_100105718();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
    case 3:
      char v56 = 3;
      sub_100084520();
      uint64_t v27 = v35;
      uint64_t v26 = v51;
      sub_100105718();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_10;
    case 4:
      char v57 = 4;
      sub_1000844CC();
      uint64_t v27 = v38;
      uint64_t v26 = v51;
      sub_100105718();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_10;
    case 5:
      char v58 = 5;
      sub_100084478();
      uint64_t v27 = v41;
      uint64_t v26 = v51;
      sub_100105718();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_10;
    case 6:
      char v59 = 6;
      sub_100084424();
      uint64_t v27 = v44;
      uint64_t v26 = v51;
      sub_100105718();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
      goto LABEL_10;
    case 7:
      char v60 = 7;
      sub_1000843D0();
      uint64_t v27 = v47;
      uint64_t v26 = v51;
      sub_100105718();
      uint64_t v29 = v48;
      uint64_t v28 = v49;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v53 = 0;
      sub_10008461C();
      uint64_t v26 = v51;
      sub_100105718();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v19);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v26);
}

uint64_t sub_1000831D0()
{
  return 0;
}

void sub_1000831DC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1000831E8(uint64_t a1)
{
  unint64_t v2 = sub_1000844CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100083224(uint64_t a1)
{
  unint64_t v2 = sub_1000844CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100083260()
{
  return sub_100082930(*v0);
}

uint64_t sub_100083268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000836C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100083290(uint64_t a1)
{
  unint64_t v2 = sub_10008437C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000832CC(uint64_t a1)
{
  unint64_t v2 = sub_10008437C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100083308(uint64_t a1)
{
  unint64_t v2 = sub_100084520();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100083344(uint64_t a1)
{
  unint64_t v2 = sub_100084520();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100083380(uint64_t a1)
{
  unint64_t v2 = sub_100084574();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000833BC(uint64_t a1)
{
  unint64_t v2 = sub_100084574();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000833F8(uint64_t a1)
{
  unint64_t v2 = sub_1000845C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100083434(uint64_t a1)
{
  unint64_t v2 = sub_1000845C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100083470(uint64_t a1)
{
  unint64_t v2 = sub_10008461C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000834AC(uint64_t a1)
{
  unint64_t v2 = sub_10008461C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000834E8(uint64_t a1)
{
  unint64_t v2 = sub_100084424();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100083524(uint64_t a1)
{
  unint64_t v2 = sub_100084424();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100083560(uint64_t a1)
{
  unint64_t v2 = sub_1000843D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008359C(uint64_t a1)
{
  unint64_t v2 = sub_1000843D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000835D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100083608(uint64_t a1)
{
  unint64_t v2 = sub_100084478();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100083644(uint64_t a1)
{
  unint64_t v2 = sub_100084478();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100083680@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100083A48(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000836AC(void *a1)
{
  return sub_100082A5C(a1, *v1);
}

uint64_t sub_1000836C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75626C41676E6F73 && a2 == 0xE90000000000006DLL || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736163646F70 && a2 == 0xE700000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4174736163646F70 && a2 == 0xED00007473697472 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6F626F69647561 && a2 == 0xE90000000000006BLL || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7261506472696874 && a2 == 0xEF616964654D7974 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100112E70 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100112E90)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_100083A48(void *a1)
{
  uint64_t v2 = sub_100007E0C(&qword_100150B70);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  char v59 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007E0C(&qword_100150B78);
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v62 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_100150B80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007E0C(&qword_100150B88);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  __chkstk_darwin(v8);
  char v60 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_100150B90);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  __chkstk_darwin(v11);
  char v58 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100007E0C(&qword_100150B98);
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  char v57 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007E0C(&qword_100150BA0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v47 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007E0C(&qword_100150BA8);
  uint64_t v44 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007E0C(&qword_100150BB0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v63 = a1;
  sub_100012154(a1, v25);
  sub_10008437C();
  uint64_t v26 = v64;
  sub_100105958();
  if (v26) {
    goto LABEL_16;
  }
  uint64_t v41 = v20;
  uint64_t v40 = v18;
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v62;
  uint64_t v64 = v22;
  uint64_t v30 = v24;
  uint64_t v31 = sub_100105708();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v24 = sub_1001054F8();
    swift_allocError();
    uint64_t v34 = v33;
    sub_100007E0C(&qword_100150BC0);
    *uint64_t v34 = &type metadata for MediaViewType;
    sub_100105668();
    sub_1001054E8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
LABEL_16:
    sub_1000121EC((uint64_t)v63);
    return v24;
  }
  uint64_t v24 = *(unsigned __int8 *)(v31 + 32);
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      char v66 = 1;
      sub_1000845C8();
      sub_100105658();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v47);
      break;
    case 2:
      char v67 = 2;
      sub_100084574();
      char v35 = v57;
      sub_100105658();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v45);
      break;
    case 3:
      char v68 = 3;
      sub_100084520();
      uint64_t v27 = v58;
      sub_100105658();
      uint64_t v36 = v49;
      uint64_t v37 = v50;
      goto LABEL_11;
    case 4:
      char v69 = 4;
      sub_1000844CC();
      sub_100105658();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v51);
      break;
    case 5:
      char v70 = 5;
      sub_100084478();
      sub_100105658();
      uint64_t v36 = v53;
      uint64_t v37 = v54;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v36);
      break;
    case 6:
      char v71 = 6;
      sub_100084424();
      sub_100105658();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
      break;
    case 7:
      char v72 = 7;
      sub_1000843D0();
      uint64_t v38 = v59;
      sub_100105658();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
      break;
    default:
      char v65 = 0;
      sub_10008461C();
      uint64_t v32 = v41;
      sub_100105658();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v40);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v30, v21);
  sub_1000121EC((uint64_t)v63);
  return v24;
}

unint64_t sub_10008437C()
{
  unint64_t result = qword_100150BB8;
  if (!qword_100150BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BB8);
  }
  return result;
}

unint64_t sub_1000843D0()
{
  unint64_t result = qword_100150BC8;
  if (!qword_100150BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BC8);
  }
  return result;
}

unint64_t sub_100084424()
{
  unint64_t result = qword_100150BD0;
  if (!qword_100150BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BD0);
  }
  return result;
}

unint64_t sub_100084478()
{
  unint64_t result = qword_100150BD8;
  if (!qword_100150BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BD8);
  }
  return result;
}

unint64_t sub_1000844CC()
{
  unint64_t result = qword_100150BE0;
  if (!qword_100150BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BE0);
  }
  return result;
}

unint64_t sub_100084520()
{
  unint64_t result = qword_100150BE8;
  if (!qword_100150BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BE8);
  }
  return result;
}

unint64_t sub_100084574()
{
  unint64_t result = qword_100150BF0;
  if (!qword_100150BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BF0);
  }
  return result;
}

unint64_t sub_1000845C8()
{
  unint64_t result = qword_100150BF8;
  if (!qword_100150BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150BF8);
  }
  return result;
}

unint64_t sub_10008461C()
{
  unint64_t result = qword_100150C00;
  if (!qword_100150C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C00);
  }
  return result;
}

unsigned char *_s20JournalWidgetsSecure13MediaViewTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008473CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewType.CodingKeys()
{
  return &type metadata for MediaViewType.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongCodingKeys()
{
  return &type metadata for MediaViewType.SongCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.SongAlbumCodingKeys()
{
  return &type metadata for MediaViewType.SongAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastCodingKeys()
{
  return &type metadata for MediaViewType.PodcastCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.PodcastArtistCodingKeys()
{
  return &type metadata for MediaViewType.PodcastArtistCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.AudiobookCodingKeys()
{
  return &type metadata for MediaViewType.AudiobookCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaAlbumCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaAlbumCodingKeys;
}

ValueMetadata *type metadata accessor for MediaViewType.ThirdPartyMediaArtistCodingKeys()
{
  return &type metadata for MediaViewType.ThirdPartyMediaArtistCodingKeys;
}

unint64_t sub_1000847F8()
{
  unint64_t result = qword_100150C50;
  if (!qword_100150C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C50);
  }
  return result;
}

unint64_t sub_100084850()
{
  unint64_t result = qword_100150C58;
  if (!qword_100150C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C58);
  }
  return result;
}

unint64_t sub_1000848A8()
{
  unint64_t result = qword_100150C60;
  if (!qword_100150C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C60);
  }
  return result;
}

unint64_t sub_100084900()
{
  unint64_t result = qword_100150C68;
  if (!qword_100150C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C68);
  }
  return result;
}

unint64_t sub_100084958()
{
  unint64_t result = qword_100150C70;
  if (!qword_100150C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C70);
  }
  return result;
}

unint64_t sub_1000849B0()
{
  unint64_t result = qword_100150C78;
  if (!qword_100150C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C78);
  }
  return result;
}

unint64_t sub_100084A08()
{
  unint64_t result = qword_100150C80;
  if (!qword_100150C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C80);
  }
  return result;
}

unint64_t sub_100084A60()
{
  unint64_t result = qword_100150C88;
  if (!qword_100150C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C88);
  }
  return result;
}

unint64_t sub_100084AB8()
{
  unint64_t result = qword_100150C90;
  if (!qword_100150C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C90);
  }
  return result;
}

unint64_t sub_100084B10()
{
  unint64_t result = qword_100150C98;
  if (!qword_100150C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150C98);
  }
  return result;
}

unint64_t sub_100084B68()
{
  unint64_t result = qword_100150CA0;
  if (!qword_100150CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CA0);
  }
  return result;
}

unint64_t sub_100084BC0()
{
  unint64_t result = qword_100150CA8;
  if (!qword_100150CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CA8);
  }
  return result;
}

unint64_t sub_100084C18()
{
  unint64_t result = qword_100150CB0;
  if (!qword_100150CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CB0);
  }
  return result;
}

unint64_t sub_100084C70()
{
  unint64_t result = qword_100150CB8;
  if (!qword_100150CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CB8);
  }
  return result;
}

unint64_t sub_100084CC8()
{
  unint64_t result = qword_100150CC0;
  if (!qword_100150CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CC0);
  }
  return result;
}

unint64_t sub_100084D20()
{
  unint64_t result = qword_100150CC8;
  if (!qword_100150CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CC8);
  }
  return result;
}

unint64_t sub_100084D78()
{
  unint64_t result = qword_100150CD0;
  if (!qword_100150CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CD0);
  }
  return result;
}

unint64_t sub_100084DD0()
{
  unint64_t result = qword_100150CD8;
  if (!qword_100150CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CD8);
  }
  return result;
}

unint64_t sub_100084E28()
{
  unint64_t result = qword_100150CE0;
  if (!qword_100150CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150CE0);
  }
  return result;
}

uint64_t sub_100084E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v37 = sub_100103978();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v1 = __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v32 - v3;
  uint64_t v5 = sub_100103AE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007E0C(&qword_100150CE8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007E0C(&qword_100150CF0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1001035D8();
  uint64_t v33 = *(void *)(v21 - 8);
  uint64_t v34 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, 1, 1, v5);
  uint64_t v24 = sub_100103B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
  sub_1001035C8();
  sub_100103588();
  sub_1001035B8();
  sub_100103AB8();
  sub_100103AB8();
  sub_100103A38();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v9, v5);
  sub_100103A88();
  uint64_t v26 = v35;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v28 = v37;
  v27(v4, v37);
  v25(v11, v5);
  uint64_t v29 = v23;
  uint64_t v30 = v36;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v30, v39, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v28) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v30, v28);
    return sub_10002AD68((uint64_t)v14);
  }
  else
  {
    v27(v30, v28);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v14, v28);
  }
}

uint64_t sub_1000853B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100150E48);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling17WorkoutRouteAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling17WorkoutRouteAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_100103848();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100007E0C(&qword_100150E50);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100007E0C(&qword_10014DF30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_1001085E0;
      sub_100033870((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_100150E48);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_1000F660C(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1000855D8()
{
  uint64_t v1 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata;
  if (*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO);
  if (v2)
  {
    id v3 = [v2 assetMetaData];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_100103848();
      uint64_t v7 = v6;

      sub_100007E0C(&qword_100150E40);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 64) = v5;
      *(void *)(v8 + 72) = v7;
      *(void *)(v8 + 80) = 0;
      *(_WORD *)(v8 + 88) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 0;
      *(void *)(v8 + 16) = 2;
      *(unsigned char *)(v8 + 40) = 0;
      *(_OWORD *)(v8 + 48) = xmmword_1001085E0;
      *(void *)(v0 + v1) = v8;
      swift_release();
    }
  }
  if (!*(void *)(v0 + v1)) {
    return 1;
  }
LABEL_6:
  swift_retain();
  uint64_t v9 = sub_1000F6174();
  swift_release();
  return v9;
}

uint64_t sub_1000856FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100150E30);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling15GenericMapAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling15GenericMapAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_100103848();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100007E0C(&qword_100150E38);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100007E0C(&qword_100150E28);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_1001085E0;
      sub_100033870((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_100150E30);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_1000F72DC(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_100085920@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_100007E0C(&qword_100150400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_100150E10);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_100088834();
  sub_100105958();
  if (!v2)
  {
    _s10VisitAssetC9VisitDataVMa(0);
    sub_1000887EC(&qword_1001503D8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
    sub_1001056B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_100033870((uint64_t)v6, (uint64_t)v12, &qword_100150400);
    sub_100088888((uint64_t)v12, v15);
  }
  return sub_1000121EC((uint64_t)a1);
}

uint64_t sub_100085B6C()
{
  return 0x6144737469736976;
}

uint64_t sub_100085B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6144737469736976 && a2 == 0xEA00000000006174)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1001057F8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100085C2C(uint64_t a1)
{
  unint64_t v2 = sub_100088834();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100085C68(uint64_t a1)
{
  unint64_t v2 = sub_100088834();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100085CA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100085920(a1, a2);
}

uint64_t sub_100085CBC(void *a1)
{
  uint64_t v2 = sub_100007E0C(&qword_100150E20);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_100088834();
  sub_100105968();
  _s10VisitAssetC9VisitDataVMa(0);
  sub_1000887EC(&qword_1001503F0, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
  sub_100105768();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_100085E30(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  uint64_t v13 = sub_100007E0C(&qword_100150E28);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone((Class)type metadata accessor for GenericMapThumbnailCacheOperation());
  uint64_t v17 = v6;
  swift_bridgeObjectRetain();
  id v18 = a6;
  id v19 = v16;
  sub_1000856FC((uint64_t)v15);
  sub_100033870((uint64_t)v15, (uint64_t)v19 + qword_100163138, &qword_100150E28);

  return sub_1000A4EC0(v17, a1, a2, v12, a4, a5, v18);
}

uint64_t sub_100085F50(uint64_t a1, char a2, id a3)
{
  uint64_t v6 = v3 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id;
  id v7 = [a3 userInterfaceStyle];

  return sub_10001F2EC(v6, a1, (uint64_t)v7, 0, 0, 1, a2);
}

uint64_t sub_100085FC8()
{
  uint64_t v1 = sub_100007E0C(&qword_100150400);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)&v23[-v5];
  uint64_t v7 = sub_100007E0C(&qword_100150E28);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling15GenericMapAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  swift_retain();
  sub_1000F72DC((uint64_t)v9);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_100012510((uint64_t)v9, &qword_100150E28);
    return 0;
  }
  sub_100088888((uint64_t)v9, (uint64_t)v13);
  sub_100007E0C(&qword_10014EF08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100108250;
  sub_1000888EC((uint64_t)v13, (uint64_t)v6);
  uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
  id v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  if (v16(v6, 1, v15) == 1)
  {
    sub_100012510((uint64_t)v6, &qword_100150400);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v17 = *v6;
    uint64_t v18 = v6[1];
    swift_bridgeObjectRetain();
    sub_100088954((uint64_t)v6, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  sub_1000888EC((uint64_t)v13, (uint64_t)v4);
  if (v16((uint64_t *)v4, 1, v15) == 1)
  {
    sub_100012510((uint64_t)v4, &qword_100150400);
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v20 = *((void *)v4 + 2);
    uint64_t v21 = *((void *)v4 + 3);
    swift_bridgeObjectRetain();
    sub_100088954((uint64_t)v4, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 48) = v20;
  *(void *)(inited + 56) = v21;
  uint64_t v19 = sub_10009063C(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100007E0C(&qword_10014D858);
  swift_arrayDestroy();
  sub_100088954((uint64_t)v13, _s15GenericMapAssetC14GenericMapDataVMa);
  return v19;
}

uint64_t sub_100086364()
{
  return swift_release();
}

id sub_100086374()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15GenericMapAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000863BC()
{
  return _s15GenericMapAssetCMa(0);
}

uint64_t _s15GenericMapAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100150D20);
}

uint64_t sub_1000863E4()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100086428(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100007E0C(&qword_100150400) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)_s10VisitAssetC9VisitDataVMa(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = v7[7];
      uint64_t v50 = v8;
      __dst = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_100103978();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v19 = v7[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v17((char *)a2 + v19, 1, v15))
      {
        uint64_t v22 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
      }
      uint64_t v23 = v7[9];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      if (v17((char *)a2 + v23, 1, v15))
      {
        uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v24, v25, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
      }
      uint64_t v27 = v7[10];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v7[11];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v7[12];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      unint64_t v36 = *((void *)v35 + 1);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      }
      else
      {
        uint64_t v37 = *(void *)v35;
        sub_10001030C(*(void *)v35, *((void *)v35 + 1));
        *(void *)uint64_t v34 = v37;
        *((void *)v34 + 1) = v36;
      }
      uint64_t v38 = v7[13];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_10001030C(*(void *)v40, *((void *)v40 + 1));
        *(void *)uint64_t v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      uint64_t v43 = v7[15];
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      *(void *)uint64_t v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v7[16];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v50 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1000868C0(uint64_t a1)
{
  objc_super v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[7];
    uint64_t v5 = sub_100103978();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v8 = a1 + v2[8];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = a1 + v2[9];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
    if (!result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    }
    uint64_t v10 = (uint64_t *)(a1 + v2[12]);
    unint64_t v11 = v10[1];
    if (v11 >> 60 != 15) {
      uint64_t result = sub_100010378(*v10, v11);
    }
    uint64_t v12 = (uint64_t *)(a1 + v2[13]);
    unint64_t v13 = v12[1];
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      return sub_100010378(v14, v13);
    }
  }
  return result;
}

void *sub_100086AB4(void *a1, void *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100007E0C(&qword_100150400);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = v4[7];
    uint64_t v47 = v5;
    __dst = (char *)a1 + v10;
    unint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_100103978();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = v4[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    uint64_t v20 = v4[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v14((char *)a2 + v20, 1, v12))
    {
      uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v22, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    uint64_t v24 = v4[10];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v4[11];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v4[12];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    unint64_t v33 = *((void *)v32 + 1);
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v34 = *(void *)v32;
      sub_10001030C(*(void *)v32, *((void *)v32 + 1));
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
    }
    uint64_t v35 = v4[13];
    unint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    unint64_t v38 = *((void *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v39 = *(void *)v37;
      sub_10001030C(*(void *)v37, *((void *)v37 + 1));
      *(void *)unint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
    }
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v40 = v4[15];
    unint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    *(void *)unint64_t v41 = *(void *)v42;
    v41[8] = v42[8];
    uint64_t v43 = v4[16];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = v45[8];
    (*(void (**)(void *, void, uint64_t, int *))(v47 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_100086F0C(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_100088954((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v4[7];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = sub_100103978();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
    int v22 = v21(v17, 1, v19);
    int v23 = v21(v18, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        goto LABEL_28;
      }
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_28:
        uint64_t v59 = v4[8];
        char v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        int v62 = v21(&a1[v59], 1, v19);
        int v63 = v21(v61, 1, v19);
        if (v62)
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v60, v61, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v60, 0, 1, v19);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v60, v61, v19);
LABEL_34:
            uint64_t v65 = v4[9];
            char v66 = &a1[v65];
            char v67 = &a2[v65];
            int v68 = v21(&a1[v65], 1, v19);
            int v69 = v21(v67, 1, v19);
            if (v68)
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v66, v67, v19);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v66, 0, 1, v19);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v66, v67, v19);
LABEL_40:
                uint64_t v71 = v4[10];
                char v72 = &a1[v71];
                uint64_t v73 = &a2[v71];
                uint64_t v74 = *(void *)v73;
                v72[8] = v73[8];
                *(void *)char v72 = v74;
                uint64_t v75 = v4[11];
                uint64_t v76 = &a1[v75];
                uint64_t v77 = &a2[v75];
                uint64_t v78 = *(void *)v77;
                v76[8] = v77[8];
                *(void *)uint64_t v76 = v78;
                uint64_t v79 = v4[12];
                uint64_t v80 = (uint64_t *)&a1[v79];
                uint64_t v81 = (uint64_t *)&a2[v79];
                unint64_t v82 = *(void *)&a2[v79 + 8];
                if (*(void *)&a1[v79 + 8] >> 60 == 15)
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v83 = *v81;
                    sub_10001030C(v83, v82);
                    *uint64_t v80 = v83;
                    v80[1] = v82;
                    goto LABEL_47;
                  }
                }
                else
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v84 = *v81;
                    sub_10001030C(v84, v82);
                    uint64_t v85 = *v80;
                    unint64_t v86 = v80[1];
                    *uint64_t v80 = v84;
                    v80[1] = v82;
                    sub_100010378(v85, v86);
LABEL_47:
                    uint64_t v87 = v4[13];
                    BOOL v88 = (uint64_t *)&a1[v87];
                    uint64_t v89 = (uint64_t *)&a2[v87];
                    unint64_t v90 = *(void *)&a2[v87 + 8];
                    if (*(void *)&a1[v87 + 8] >> 60 == 15)
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v91 = *v89;
                        sub_10001030C(v91, v90);
                        uint64_t *v88 = v91;
                        v88[1] = v90;
LABEL_54:
                        a1[v4[14]] = a2[v4[14]];
                        uint64_t v95 = v4[15];
                        uint64_t v96 = &a1[v95];
                        uint64_t v97 = &a2[v95];
                        uint64_t v98 = *(void *)v97;
                        v96[8] = v97[8];
                        *(void *)uint64_t v96 = v98;
                        uint64_t v99 = v4[16];
                        uint64_t v100 = &a1[v99];
                        uint64_t v101 = &a2[v99];
                        uint64_t v102 = *(void *)v101;
                        v100[8] = v101[8];
                        *(void *)uint64_t v100 = v102;
                        return a1;
                      }
                    }
                    else
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v92 = *v89;
                        sub_10001030C(v92, v90);
                        uint64_t v93 = *v88;
                        unint64_t v94 = v88[1];
                        uint64_t *v88 = v92;
                        v88[1] = v90;
                        sub_100010378(v93, v94);
                        goto LABEL_54;
                      }
                      sub_10003AB4C((uint64_t)v88);
                    }
                    *(_OWORD *)BOOL v88 = *(_OWORD *)v89;
                    goto LABEL_54;
                  }
                  sub_10003AB4C((uint64_t)v80);
                }
                *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
                goto LABEL_47;
              }
              (*(void (**)(char *, uint64_t))(v20 + 8))(v66, v19);
            }
            uint64_t v70 = sub_100007E0C((uint64_t *)&unk_100151950);
            memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
        }
        uint64_t v64 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    }
    uint64_t v58 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v17, v18, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v15 = sub_100007E0C(&qword_100150400);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  uint64_t v9 = v4[7];
  __dst = &a1[v9];
  uint64_t v10 = &a2[v9];
  uint64_t v11 = sub_100103978();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v24 = v4[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  }
  uint64_t v28 = v4[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v13(&a2[v28], 1, v11))
  {
    uint64_t v31 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  }
  uint64_t v32 = v4[10];
  unint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)unint64_t v33 = v35;
  uint64_t v36 = v4[11];
  uint64_t v37 = &a1[v36];
  unint64_t v38 = &a2[v36];
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = v4[12];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  unint64_t v43 = *((void *)v42 + 1);
  if (v43 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
  }
  else
  {
    uint64_t v44 = *(void *)v42;
    sub_10001030C(*(void *)v42, *((void *)v42 + 1));
    *(void *)unint64_t v41 = v44;
    *((void *)v41 + 1) = v43;
  }
  uint64_t v45 = v4[13];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  unint64_t v48 = *((void *)v47 + 1);
  if (v48 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  else
  {
    uint64_t v49 = *(void *)v47;
    sub_10001030C(*(void *)v47, *((void *)v47 + 1));
    *(void *)uint64_t v46 = v49;
    *((void *)v46 + 1) = v48;
  }
  a1[v4[14]] = a2[v4[14]];
  uint64_t v50 = v4[15];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)uint64_t v51 = v53;
  uint64_t v54 = v4[16];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_1000878CC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100007E0C(&qword_100150400);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = v4[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103978();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = v4[8];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v13((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = v4[9];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v13((char *)a2 + v19, 1, v11))
    {
      uint64_t v22 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    uint64_t v23 = v4[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v4[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *(_OWORD *)((char *)a1 + v4[13]) = *(_OWORD *)((char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v29 = v4[15];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = v4[16];
    unint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    v33[8] = v34[8];
    *(void *)unint64_t v33 = *(void *)v34;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_100087C88(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_100088954((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    uint64_t v18 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v4[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_100103978();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_22:
        uint64_t v50 = v4[8];
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        int v53 = v26(&a1[v50], 1, v24);
        int v54 = v26(v52, 1, v24);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v51, v52, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v51, 0, 1, v24);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v51, v52, v24);
LABEL_28:
            uint64_t v56 = v4[9];
            uint64_t v57 = &a1[v56];
            uint64_t v58 = &a2[v56];
            int v59 = v26(&a1[v56], 1, v24);
            int v60 = v26(v58, 1, v24);
            if (v59)
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v58, v24);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v57, 0, 1, v24);
                goto LABEL_34;
              }
            }
            else
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v57, v58, v24);
LABEL_34:
                uint64_t v62 = v4[10];
                int v63 = &a1[v62];
                uint64_t v64 = &a2[v62];
                *(void *)int v63 = *(void *)v64;
                v63[8] = v64[8];
                uint64_t v65 = v4[11];
                char v66 = &a1[v65];
                char v67 = &a2[v65];
                *(void *)char v66 = *(void *)v67;
                v66[8] = v67[8];
                uint64_t v68 = v4[12];
                int v69 = (uint64_t *)&a1[v68];
                uint64_t v70 = (uint64_t *)&a2[v68];
                unint64_t v71 = *(void *)&a1[v68 + 8];
                if (v71 >> 60 != 15)
                {
                  unint64_t v72 = v70[1];
                  if (v72 >> 60 != 15)
                  {
                    uint64_t v73 = *v69;
                    *int v69 = *v70;
                    v69[1] = v72;
                    sub_100010378(v73, v71);
LABEL_39:
                    uint64_t v74 = v4[13];
                    uint64_t v75 = (uint64_t *)&a1[v74];
                    uint64_t v76 = (uint64_t *)&a2[v74];
                    unint64_t v77 = *(void *)&a1[v74 + 8];
                    if (v77 >> 60 != 15)
                    {
                      unint64_t v78 = v76[1];
                      if (v78 >> 60 != 15)
                      {
                        uint64_t v79 = *v75;
                        *uint64_t v75 = *v76;
                        v75[1] = v78;
                        sub_100010378(v79, v77);
                        goto LABEL_44;
                      }
                      sub_10003AB4C((uint64_t)v75);
                    }
                    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
LABEL_44:
                    a1[v4[14]] = a2[v4[14]];
                    uint64_t v80 = v4[15];
                    uint64_t v81 = &a1[v80];
                    unint64_t v82 = &a2[v80];
                    *(void *)uint64_t v81 = *(void *)v82;
                    v81[8] = v82[8];
                    uint64_t v83 = v4[16];
                    uint64_t v84 = &a1[v83];
                    uint64_t v85 = &a2[v83];
                    *(void *)uint64_t v84 = *(void *)v85;
                    v84[8] = v85[8];
                    return a1;
                  }
                  sub_10003AB4C((uint64_t)v69);
                }
                *(_OWORD *)int v69 = *(_OWORD *)v70;
                goto LABEL_39;
              }
              (*(void (**)(char *, uint64_t))(v25 + 8))(v57, v24);
            }
            uint64_t v61 = sub_100007E0C((uint64_t *)&unk_100151950);
            memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v24);
        }
        uint64_t v55 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v49 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v22, v23, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v17 = sub_100007E0C(&qword_100150400);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v10 = v4[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_100103978();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v29 = v4[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (v15(&a2[v29], 1, v13))
  {
    uint64_t v32 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v30, v31, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  }
  uint64_t v33 = v4[9];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v15(&a2[v33], 1, v13))
  {
    uint64_t v36 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v34, v35, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v34, 0, 1, v13);
  }
  uint64_t v37 = v4[10];
  unint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  *(void *)unint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = v4[11];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  v41[8] = v42[8];
  *(void *)unint64_t v41 = *(void *)v42;
  *(_OWORD *)&a1[v4[12]] = *(_OWORD *)&a2[v4[12]];
  *(_OWORD *)&a1[v4[13]] = *(_OWORD *)&a2[v4[13]];
  a1[v4[14]] = a2[v4[14]];
  uint64_t v43 = v4[15];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  v44[8] = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  uint64_t v46 = v4[16];
  uint64_t v47 = &a1[v46];
  unint64_t v48 = &a2[v46];
  v47[8] = v48[8];
  *(void *)uint64_t v47 = *(void *)v48;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_100088500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100088514);
}

uint64_t sub_100088514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_100150400);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100088584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100088598);
}

uint64_t sub_100088598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_100150400);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s15GenericMapAssetC14GenericMapDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100150D88);
}

void sub_10008862C()
{
  sub_1000886B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000886B8()
{
  if (!qword_100150D98)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100150D98);
    }
  }
}

uint64_t sub_100088710()
{
  return swift_retain();
}

uint64_t sub_100088720(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling15GenericMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100088738()
{
  return sub_100085FC8();
}

uint64_t sub_10008875C()
{
  return sub_1000887EC(&qword_100150DC8, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_1000887A4()
{
  return sub_1000887EC(&qword_100150DD0, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_1000887EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100088834()
{
  unint64_t result = qword_100150E18;
  if (!qword_100150E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150E18);
  }
  return result;
}

uint64_t sub_100088888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000888EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_100150400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100088954(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100088A50);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOMa()
{
  return &_s15GenericMapAssetC14GenericMapDataV10CodingKeysON;
}

unint64_t sub_100088A8C()
{
  unint64_t result = qword_100150E58;
  if (!qword_100150E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150E58);
  }
  return result;
}

unint64_t sub_100088AE4()
{
  unint64_t result = qword_100150E60;
  if (!qword_100150E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150E60);
  }
  return result;
}

unint64_t sub_100088B3C()
{
  unint64_t result = qword_100150E68;
  if (!qword_100150E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100150E68);
  }
  return result;
}

char *sub_100088B90(uint64_t a1, long long *a2, void *a3, void *a4)
{
  uint64_t v8 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_basePOICircleView;
  id v9 = objc_allocWithZone((Class)UIImageView);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v10[v13] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v14 = &v10[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration];
  long long v15 = *a2;
  long long v16 = a2[1];
  *((void *)v14 + 4) = *((void *)a2 + 4);
  *(_OWORD *)uint64_t v14 = v15;
  *((_OWORD *)v14 + 1) = v16;
  sub_1000897D8((id *)a2);

  v46.receiver = v10;
  v46.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  uint64_t v17 = (char *)[v46 initWithAnnotation:a1 reuseIdentifier:0];
  uint64_t v18 = sub_10001FAA8();
  double v19 = 0.0;
  double v20 = 0.0;
  double v21 = 0.0;
  double v22 = 0.0;
  double v23 = 0.0;
  if ((v24 & 1) == 0) {
    double v20 = nullsub_1(0.0, 0.0, *(double *)&v18, *(double *)&v18);
  }
  [v17 setFrame:v20, v21, v22, v23];
  uint64_t v25 = &v17[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_basePOICircleView];
  id v26 = *(id *)&v17[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_basePOICircleView];
  double v27 = COERCE_DOUBLE(sub_10001FAA8());
  double v28 = 0.0;
  double v29 = 0.0;
  double v30 = 0.0;
  if ((v31 & 1) == 0)
  {
    if ((*((uint64_t *)a2 + 2) > 1
       || (*((unsigned char *)a2 + 24) & 1) != 0
       || (*((unsigned char *)a2 + 26) & 1) != 0 && (*((unsigned char *)a2 + 9) & 1) == 0)
      && (*((unsigned char *)a2 + 25) & 1) != 0)
    {
      double v34 = v27 * 0.45;
      double v32 = (v27 - v27 * 0.45) * 0.5;
      double v33 = v32;
    }
    else
    {
      double v32 = v27 * 0.55 * 0.5;
      double v33 = *((double *)a2 + 4);
      double v34 = v27 * 0.45;
    }
    double v19 = nullsub_1(v32, v33, v34, v34);
  }
  [v26 setFrame:v19, v28, v29, v30];

  sub_1000893BC(a3, a4);
  if (*((uint64_t *)a2 + 2) > 1)
  {
    sub_100089830();
    sub_100089140();
    [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView]];
    uint64_t v25 = &v17[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_clusterCountLabel];
    goto LABEL_20;
  }
  if (*((unsigned char *)a2 + 24))
  {
    sub_100089830();
    uint64_t v35 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView;
    goto LABEL_19;
  }
  if (*((unsigned char *)a2 + 26) & 1) == 0 || (*((unsigned char *)a2 + 9))
  {
    sub_100088F9C();
    uint64_t v35 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_downArrowView;
LABEL_19:
    [v17 addSubview:*(void *)&v17[v35]];
  }
LABEL_20:
  [v17 addSubview:*(void *)v25];
  uint64_t v36 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView;
  id v37 = [*(id *)&v17[OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView] layer];
  id v38 = [self secondarySystemBackgroundColor];
  id v39 = [v38 CGColor];

  [v37 setShadowColor:v39];
  id v40 = [*(id *)&v17[v36] layer];
  LODWORD(v41) = 0.5;
  [v40 setShadowOpacity:v41];

  id v42 = [*(id *)&v17[v36] layer];
  [v42 setShadowRadius:5.0];

  id v43 = [*(id *)&v17[v36] layer];
  [v43 setShadowPathIsBounds:1];
  sub_1000178AC(a3, a4);
  sub_100089804((id *)a2);

  swift_unknownObjectRelease();
  return v17;
}

void sub_100088F9C()
{
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration + 16) <= 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration + 24) == 0
    && (*(unsigned __int8 *)(v0
                           + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration
                           + 26) ^ 1 | *(unsigned __int8 *)(v0
                                                          + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration
                                                          + 9)) != 0)
  {
    int v3 = *(void **)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_downArrowView);
    double v4 = *(double *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration + 32);
    double v5 = COERCE_DOUBLE(sub_10001FAA8());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v6 & 1) == 0) {
      double v7 = nullsub_1(v5 * 0.4, v4 + v5 * 0.3, v5 * 0.2, v5 * 0.2);
    }
    [v3 setFrame:v7, v8, v9, v10];
    NSString v11 = sub_100104B38();
    id v12 = [self systemImageNamed:v11];

    [v3 setImage:v12];
    [v3 setContentMode:2];
  }
}

void sub_100089140()
{
  uint64_t v1 = (double *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration + 16);
  if (v2 >= 2)
  {
    int v3 = *(void **)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_clusterCountLabel);
    int v4 = *((unsigned __int8 *)v1 + 25);
    double v5 = v1[4];
    uint64_t v23 = *(void *)v1;
    LOWORD(v24) = *((_WORD *)v1 + 4);
    uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_configuration + 16);
    LOWORD(v26) = *((_WORD *)v1 + 12);
    BYTE2(v26) = *((unsigned char *)v1 + 26);
    double v6 = COERCE_DOUBLE(sub_10001FAA8());
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    double v10 = 0.0;
    if ((v11 & 1) == 0)
    {
      if (v4)
      {
        double v12 = v6 * 0.45;
        double v13 = (v6 - v6 * 0.45) * 0.5;
        double v14 = v13;
      }
      else
      {
        double v13 = v6 * 0.55 * 0.5;
        double v12 = v6 * 0.45;
        double v14 = v5;
      }
      double v7 = nullsub_1(v13, v14, v12, v12);
    }
    [v3 setFrame:v7, v8, v9, v10];
    uint64_t v22 = v2;
    sub_1001057C8();
    NSString v15 = sub_100104B38();
    swift_bridgeObjectRelease();
    [v3 setText:v15, v22, v23, v24, v25, v26, *(void *)&v5];

    [v3 setTextAlignment:1];
    id v16 = [self whiteColor];
    [v3 setTextColor:v16];

    double v17 = COERCE_DOUBLE(sub_10001FAA8());
    double v18 = 15.0;
    if ((v19 & 1) == 0) {
      double v18 = v17 / 6.0;
    }
    id v20 = [self boldSystemFontOfSize:v18];
    [v3 setFont:v20];

    [v3 setAdjustsFontSizeToFitWidth:1];
    [v3 setClipsToBounds:1];
    id v21 = [v3 layer];
    [v3 frame];
    [v21 setCornerRadius:CGRectGetWidth(v27) * 0.5];
  }
}

void sub_1000893BC(void *a1, void *a2)
{
  if (a1)
  {
    int v4 = *(void **)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_basePOICircleView);
    id v19 = a1;
    id v5 = a2;
    [v4 setImage:v5];
    [*(id *)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v19];
    [*(id *)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v19];
  }
  else
  {
    double v6 = *(void **)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_basePOICircleView);
    [v6 frame];
    double v7 = CGRectGetWidth(v21) * 0.25;
    [v6 frame];
    double v8 = CGRectGetHeight(v22) * 0.23;
    [v6 frame];
    double v9 = CGRectGetWidth(v23) * 0.5;
    [v6 frame];
    CGFloat Height = CGRectGetHeight(v24);
    double v11 = nullsub_1(v7, v8, v9, Height * 0.5);
    id v15 = [objc_allocWithZone((Class)UIImageView) initWithFrame:v11, v12, v13, v14];
    id v19 = v15;
    if (qword_10014C128 != -1)
    {
      swift_once();
      id v15 = v19;
    }
    [v15 setImage:qword_100163220];
    id v16 = [self systemWhiteColor];
    [v19 setTintColor:v16];

    if (qword_10014C0E0 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1001631D0;
    [v6 setBackgroundColor:qword_1001631D0];
    [*(id *)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_downArrowView) setTintColor:v17];
    [*(id *)(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_clusterCountLabel) setBackgroundColor:v17];
    id v18 = [v6 layer];
    [v6 frame];
    [v18 setCornerRadius:CGRectGetHeight(v25) * 0.5];

    [v6 addSubview:v19];
  }
}

id sub_100089704()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MOPOIAnnotationViewCMa();
  return [super dealloc];
}

uint64_t _s19MOPOIAnnotationViewCMa()
{
  return self;
}

id *sub_1000897D8(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_100089804(id *a1)
{
  return a1;
}

void sub_100089830()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView);
  [v1 setFrame:sub_10001FB84()];
  id v2 = [v1 layer];
  id v3 = [self whiteColor];
  id v4 = [v3 CGColor];

  [v2 setBackgroundColor:v4];
  [v1 setClipsToBounds:1];
  id v5 = [v1 layer];
  [v1 frame];
  [v5 setCornerRadius:CGRectGetWidth(v7) * 0.5];
}

void sub_100089988()
{
  uint64_t v1 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_basePOICircleView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_downArrowView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_clusterCountLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtCC20JournalWidgetsSecure10MapManager19MOPOIAnnotationView_borderBackgroundView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];

  sub_1001055C8();
  __break(1u);
}

void sub_100089A70()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100113820;
  v6._object = (void *)0x8000000100113800;
  v6._countAndFlagsBits = 0xD000000000000014;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x736B6165727453;
  v8._object = (void *)0xE700000000000000;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163030 = v2;
  *(void *)algn_100163038 = v4;
}

void sub_100089B34()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000035;
  v5._countAndFlagsBits = 0x8000000100113980;
  v6._object = (void *)0x8000000100113920;
  v8._object = (void *)0x8000000100113940;
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163040 = v2;
  *(void *)algn_100163048 = v4;
}

void sub_100089BF8()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000004ALL;
  v5._countAndFlagsBits = 0x80000001001138D0;
  v6._object = (void *)0x8000000100113850;
  v8._object = (void *)0x8000000100113880;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163050 = v2;
  *(void *)algn_100163058 = v4;
}

void sub_100089CBC()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001001134C0;
  v6._object = (void *)0x8000000100113490;
  v6._countAndFlagsBits = 0xD000000000000023;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x6B6165727453;
  v8._object = (void *)0xE600000000000000;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163060 = v2;
  *(void *)algn_100163068 = v4;
}

void sub_100089D7C()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100113550;
  v6._object = (void *)0x8000000100113530;
  v6._countAndFlagsBits = 0xD000000000000018;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x72746E452077654ELL;
  v8._object = (void *)0xE900000000000079;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163070 = v2;
  *(void *)algn_100163078 = v4;
}

void sub_100089E40()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  v5._countAndFlagsBits = 0x80000001001132C0;
  v6._object = (void *)0x8000000100113280;
  v8._object = (void *)0x80000001001132A0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000011;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163080 = v2;
  *(void *)algn_100163088 = v4;
}

void sub_100089F04()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100113220;
  v6._object = (void *)0x80000001001131F0;
  v6._countAndFlagsBits = 0xD00000000000002DLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x6165727453206F4ELL;
  v8._object = (void *)0xE90000000000006BLL;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163090 = v2;
  *(void *)algn_100163098 = v4;
}

uint64_t sub_100089FCC()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  sub_100104AA8();
  sub_1001039F8();
  uint64_t result = sub_100104B88();
  qword_1001630A0 = result;
  *(void *)algn_1001630A8 = v3;
  return result;
}

uint64_t type metadata accessor for JournalWidgetStrings()
{
  return self;
}

uint64_t sub_10008A118()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100104AE8();
  __chkstk_darwin(v2 - 8);
  sub_100104AD8();
  v4._countAndFlagsBits = 0x282073796144;
  v4._object = (void *)0xE600000000000000;
  sub_100104AC8(v4);
  sub_100104AB8();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_100104AC8(v5);
  sub_100104AF8();
  sub_1001039F8();
  return sub_100104B88();
}

uint64_t sub_10008A2C8()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100104AE8();
  __chkstk_darwin(v2 - 8);
  sub_100104AD8();
  v4._countAndFlagsBits = 0x2820736B656557;
  v4._object = (void *)0xE700000000000000;
  sub_100104AC8(v4);
  sub_100104AB8();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_100104AC8(v5);
  sub_100104AF8();
  sub_1001039F8();
  return sub_100104B88();
}

uint64_t sub_10008A47C()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100104AE8();
  __chkstk_darwin(v2 - 8);
  sub_100104AD8();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_100104AC8(v4);
  sub_100104AB8();
  v5._countAndFlagsBits = 0x7379614420;
  v5._object = (void *)0xE500000000000000;
  sub_100104AC8(v5);
  sub_100104AF8();
  sub_1001039F8();
  return sub_100104B88();
}

uint64_t sub_10008A62C()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100104AE8();
  __chkstk_darwin(v2 - 8);
  sub_100104AD8();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_100104AC8(v4);
  sub_100104AB8();
  v5._countAndFlagsBits = 0x736B65655720;
  v5._object = (void *)0xE600000000000000;
  sub_100104AC8(v5);
  sub_100104AF8();
  sub_1001039F8();
  return sub_100104B88();
}

uint64_t sub_10008A7DC()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100104AE8();
  __chkstk_darwin(v2 - 8);
  sub_100104AD8();
  v4._object = (void *)0x80000001001135F0;
  v4._countAndFlagsBits = 0xD000000000000015;
  sub_100104AC8(v4);
  sub_100104AB8();
  v5._countAndFlagsBits = 0x2E7379616420;
  v5._object = (void *)0xE600000000000000;
  sub_100104AC8(v5);
  sub_100104AF8();
  sub_1001039F8();
  return sub_100104B88();
}

uint64_t sub_10008A99C()
{
  uint64_t v0 = sub_100103A08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100104B08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100104AE8();
  __chkstk_darwin(v2 - 8);
  sub_100104AD8();
  v4._object = (void *)0x80000001001135F0;
  v4._countAndFlagsBits = 0xD000000000000015;
  sub_100104AC8(v4);
  sub_100104AB8();
  v5._countAndFlagsBits = 0x2E736B65657720;
  v5._object = (void *)0xE700000000000000;
  sub_100104AC8(v5);
  sub_100104AF8();
  sub_1001039F8();
  return sub_100104B88();
}

uint64_t sub_10008AB60()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100150F58);
  sub_100007D30(v0, (uint64_t)qword_100150F58);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10008AC5C(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v8 = (int *)type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  __chkstk_darwin(v8);
  double v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = 91;
  unint64_t v47 = 0xE100000000000000;
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    uint64_t v12 = 0;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    id v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v39 = v14;
    uint64_t v35 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    do
    {
      sub_10008F764(v13, (uint64_t)v11);
      if (v12)
      {
        v49._countAndFlagsBits = 8236;
        v49._object = (void *)0xE200000000000000;
        sub_100104BE8(v49);
      }
      sub_100010808((uint64_t)&v11[v8[5]], (uint64_t)v4, (uint64_t *)&unk_100151950);
      if ((*v38)(v4, 1, v5) == 1)
      {
        sub_100012510((uint64_t)v4, (uint64_t *)&unk_100151950);
        uint64_t v17 = (void *)0xE300000000000000;
        uint64_t v18 = 7104878;
      }
      else
      {
        id v19 = v37;
        (*v36)(v37, v4, v5);
        sub_100048B20(&qword_100151010);
        uint64_t v18 = sub_1001057C8();
        uint64_t v17 = v20;
        (*v35)(v19, v5);
      }
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      sub_100105498(46);
      swift_bridgeObjectRelease();
      v45._countAndFlagsBits = 0x6144747261747328;
      v45._object = (void *)0xEB000000003D6574;
      sub_100048B20(&qword_100151010);
      v50._countAndFlagsBits = sub_1001057C8();
      sub_100104BE8(v50);
      swift_bridgeObjectRelease();
      v51._countAndFlagsBits = 0x746144646E65202CLL;
      v51._object = (void *)0xEA00000000003D65;
      sub_100104BE8(v51);
      v52._countAndFlagsBits = v18;
      v52._object = v17;
      sub_100104BE8(v52);
      swift_bridgeObjectRelease();
      v53._countAndFlagsBits = 0x657669746361202CLL;
      v53._object = (void *)0xE90000000000003DLL;
      sub_100104BE8(v53);
      CGRect v21 = &v11[v8[6]];
      uint64_t v22 = *v21;
      if (v22 == 2)
      {
        CGRect v23 = (void *)0xE300000000000000;
        v24._countAndFlagsBits = 7104878;
      }
      else
      {
        uint64_t v25 = *((void *)v21 + 1);
        uint64_t v43 = 40;
        unint64_t v44 = 0xE100000000000000;
        if (v22)
        {
          v26._countAndFlagsBits = 0x202C736B656577;
          v26._object = (void *)0xE700000000000000;
        }
        else
        {
          v26._countAndFlagsBits = 0x202C73796164;
          v26._object = (void *)0xE600000000000000;
        }
        sub_100104BE8(v26);
        uint64_t v41 = v25;
        v42._countAndFlagsBits = sub_1001057C8();
        v42._object = v27;
        v54._countAndFlagsBits = 41;
        v54._object = (void *)0xE100000000000000;
        sub_100104BE8(v54);
        sub_100104BE8(v42);
        swift_bridgeObjectRelease();
        v24._countAndFlagsBits = v43;
        CGRect v23 = (void *)v44;
      }
      v24._object = v23;
      sub_100104BE8(v24);
      swift_bridgeObjectRelease();
      v55._countAndFlagsBits = 0x3D7473616C202CLL;
      v55._object = (void *)0xE700000000000000;
      sub_100104BE8(v55);
      double v28 = &v11[v8[7]];
      uint64_t v29 = *v28;
      if (v29 == 2)
      {
        id v15 = (void *)0xE300000000000000;
        v16._countAndFlagsBits = 7104878;
      }
      else
      {
        uint64_t v30 = *((void *)v28 + 1);
        uint64_t v43 = 40;
        unint64_t v44 = 0xE100000000000000;
        if (v29)
        {
          v31._countAndFlagsBits = 0x202C736B656577;
          v31._object = (void *)0xE700000000000000;
        }
        else
        {
          v31._countAndFlagsBits = 0x202C73796164;
          v31._object = (void *)0xE600000000000000;
        }
        sub_100104BE8(v31);
        uint64_t v41 = v30;
        v42._countAndFlagsBits = sub_1001057C8();
        v42._object = v32;
        v56._countAndFlagsBits = 41;
        v56._object = (void *)0xE100000000000000;
        sub_100104BE8(v56);
        sub_100104BE8(v42);
        swift_bridgeObjectRelease();
        v16._countAndFlagsBits = v43;
        id v15 = (void *)v44;
      }
      ++v12;
      v16._object = v15;
      sub_100104BE8(v16);
      swift_bridgeObjectRelease();
      v48._countAndFlagsBits = 41;
      v48._object = (void *)0xE100000000000000;
      sub_100104BE8(v48);
      sub_100104BE8(v45);
      swift_bridgeObjectRelease();
      sub_10008F7C8((uint64_t)v11);
      v13 += v39;
    }
    while (v40 != v12);
  }
  v57._countAndFlagsBits = 93;
  v57._object = (void *)0xE100000000000000;
  sub_100104BE8(v57);
  return v46;
}

uint64_t sub_10008B208(uint64_t a1)
{
  sub_100010808(a1, (uint64_t)&v3, &qword_10014D818);
  if (v4)
  {
    sub_1000103D0(&v3, v5);
    *(void *)&long long v3 = 0;
    *((void *)&v3 + 1) = 0xE000000000000000;
    sub_100105598();
    uint64_t v1 = v3;
    sub_1000121EC((uint64_t)v5);
  }
  else
  {
    sub_100012510((uint64_t)&v3, &qword_10014D818);
    return 7104878;
  }
  return v1;
}

uint64_t type metadata accessor for StreaksWidgetCalculator()
{
  return self;
}

uint64_t sub_10008B2D8(char a1)
{
  if (a1 == 2) {
    return 7104878;
  }
  if (a1)
  {
    v2._countAndFlagsBits = 0x202C736B656577;
    v2._object = (void *)0xE700000000000000;
  }
  else
  {
    v2._countAndFlagsBits = 0x202C73796164;
    v2._object = (void *)0xE600000000000000;
  }
  sub_100104BE8(v2);
  v4._countAndFlagsBits = sub_1001057C8();
  v4._object = v3;
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_100104BE8(v5);
  sub_100104BE8(v4);
  swift_bridgeObjectRelease();
  return 40;
}

uint64_t sub_10008B3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v57 = a7;
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v51 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v15 = (char *)&v50 - v14;
  uint64_t v16 = sub_100007E0C(&qword_100151008);
  uint64_t v17 = __chkstk_darwin(v16);
  Swift::String v50 = (uint64_t *)((char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  CGRect v21 = (uint64_t *)((char *)&v50 - v20);
  uint64_t v22 = __chkstk_darwin(v19);
  Swift::String v24 = (uint64_t *)((char *)&v50 - v23);
  uint64_t v25 = __chkstk_darwin(v22);
  CGRect v27 = (char *)&v50 + *(int *)(v25 + 48) - v26;
  uint64_t v55 = (uint64_t)&v50 - v26;
  *(uint64_t **)((char *)&v50 - v26) = (uint64_t *)a1;
  sub_100010808(a2, (uint64_t)v27, (uint64_t *)&unk_100151950);
  uint64_t v28 = (uint64_t)v24 + *(int *)(v16 + 48);
  Swift::String v56 = v24;
  uint64_t v52 = a3;
  *Swift::String v24 = a3;
  uint64_t v29 = v28;
  sub_100010808(a4, v28, (uint64_t *)&unk_100151950);
  uint64_t v61 = 0;
  unint64_t v62 = 0xE000000000000000;
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  sub_100105498(24);
  swift_bridgeObjectRelease();
  strcpy((char *)&v60, "activeDaily=(");
  HIWORD(v60._object) = -4864;
  v58._countAndFlagsBits = a1;
  v63._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v63);
  swift_bridgeObjectRelease();
  v64._countAndFlagsBits = 2629676;
  v64._object = (void *)0xE300000000000000;
  sub_100104BE8(v64);
  uint64_t v30 = (uint64_t)v21 + *(int *)(v16 + 48);
  *CGRect v21 = a1;
  sub_100010808((uint64_t)v27, v30, (uint64_t *)&unk_100151950);
  sub_100033870(v30, (uint64_t)v15, (uint64_t *)&unk_100151950);
  uint64_t v31 = sub_100103978();
  uint64_t v32 = *(void *)(v31 - 8);
  double v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v15, 1, v31) == 1)
  {
    sub_100012510((uint64_t)v15, (uint64_t *)&unk_100151950);
    Swift::String v58 = (Swift::String)0;
    long long v59 = 0u;
  }
  else
  {
    *((void *)&v59 + 1) = v31;
    uint64_t v34 = sub_100062CB4(&v58._countAndFlagsBits);
    (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(v34, v15, v31);
  }
  uint64_t v35 = sub_10008B208((uint64_t)&v58);
  id v37 = v36;
  sub_100012510((uint64_t)&v58, &qword_10014D818);
  v65._countAndFlagsBits = v35;
  v65._object = v37;
  sub_100104BE8(v65);
  swift_bridgeObjectRelease();
  v66._countAndFlagsBits = 539765033;
  v66._object = (void *)0xE400000000000000;
  sub_100104BE8(v66);
  sub_100104BE8(v60);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  sub_100105498(25);
  swift_bridgeObjectRelease();
  strcpy((char *)&v60, "activeWeekly=(");
  HIBYTE(v60._object) = -18;
  uint64_t v38 = v52;
  v58._countAndFlagsBits = v52;
  v67._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v67);
  swift_bridgeObjectRelease();
  v68._countAndFlagsBits = 2629676;
  v68._object = (void *)0xE300000000000000;
  sub_100104BE8(v68);
  uint64_t v39 = *(int *)(v16 + 48);
  uint64_t v40 = v50;
  uint64_t v41 = (char *)v50 + v39;
  *Swift::String v50 = v38;
  sub_100010808(v29, (uint64_t)v40 + v39, (uint64_t *)&unk_100151950);
  uint64_t v42 = (uint64_t)v41;
  uint64_t v43 = v51;
  sub_100033870(v42, v51, (uint64_t *)&unk_100151950);
  if (v33((char *)v43, 1, v31) == 1)
  {
    sub_100012510(v43, (uint64_t *)&unk_100151950);
    Swift::String v58 = (Swift::String)0;
    long long v59 = 0u;
  }
  else
  {
    *((void *)&v59 + 1) = v31;
    unint64_t v44 = sub_100062CB4(&v58._countAndFlagsBits);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 32))(v44, v43, v31);
  }
  uint64_t v45 = sub_10008B208((uint64_t)&v58);
  unint64_t v47 = v46;
  sub_100012510((uint64_t)&v58, &qword_10014D818);
  v69._countAndFlagsBits = v45;
  v69._object = v47;
  sub_100104BE8(v69);
  swift_bridgeObjectRelease();
  v70._countAndFlagsBits = 539765033;
  v70._object = (void *)0xE400000000000000;
  sub_100104BE8(v70);
  sub_100104BE8(v60);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  sub_100105498(19);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0x697961447473616CLL;
  v58._object = (void *)0xEF3D746E756F436CLL;
  v60._countAndFlagsBits = v53;
  v71._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v71);
  swift_bridgeObjectRelease();
  v72._countAndFlagsBits = 8236;
  v72._object = (void *)0xE200000000000000;
  sub_100104BE8(v72);
  sub_100104BE8(v58);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  sub_100105498(20);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0xD000000000000010;
  v58._object = (void *)0x8000000100113C70;
  v60._countAndFlagsBits = v54;
  v73._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v73);
  swift_bridgeObjectRelease();
  v74._countAndFlagsBits = 8236;
  v74._object = (void *)0xE200000000000000;
  sub_100104BE8(v74);
  sub_100104BE8(v58);
  swift_bridgeObjectRelease();
  v75._countAndFlagsBits = 0x7A696C6175736976;
  v75._object = (void *)0xEE003D6E6F697461;
  sub_100104BE8(v75);
  if ((_BYTE)v57)
  {
    if (v57 == 1)
    {
      v48._countAndFlagsBits = 0x73796144796C6E6FLL;
      v48._object = (void *)0xE800000000000000;
    }
    else
    {
      v48._countAndFlagsBits = 0x6B656557796C6E6FLL;
      v48._object = (void *)0xE900000000000073;
    }
  }
  else
  {
    v48._countAndFlagsBits = 0x6557724F73796164;
    v48._object = (void *)0xEB00000000736B65;
  }
  sub_100104BE8(v48);
  sub_100012510((uint64_t)v56, &qword_100151008);
  sub_100012510(v55, &qword_100151008);
  return v61;
}

uint64_t sub_10008BA74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, int a7)
{
  int v237 = a7;
  uint64_t v241 = a6;
  uint64_t v246 = a5;
  uint64_t v235 = a3;
  uint64_t v236 = a4;
  uint64_t v245 = sub_100103978();
  uint64_t v243 = *(void *)(v245 - 8);
  uint64_t v9 = __chkstk_darwin(v245);
  uint64_t v212 = (char *)&v209 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v219 = (char *)&v209 - v12;
  __chkstk_darwin(v11);
  unint64_t v215 = (char *)&v209 - v13;
  uint64_t v14 = sub_100007E0C(&qword_100151018);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v211 = (uint64_t *)((char *)&v209 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v223 = (uint64_t *)((char *)&v209 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  v216 = (char *)&v209 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v221 = (uint64_t *)((char *)&v209 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v229 = (uint64_t *)((char *)&v209 - v24);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v228 = (uint64_t *)((char *)&v209 - v26);
  __chkstk_darwin(v25);
  uint64_t v227 = (char *)&v209 - v27;
  uint64_t v28 = sub_100007E0C(&qword_100151020);
  uint64_t v239 = *(void *)(v28 - 8);
  uint64_t v240 = v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v209 = (uint64_t *)((char *)&v209 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v210 = (uint64_t *)((char *)&v209 - v32);
  uint64_t v33 = __chkstk_darwin(v31);
  v225 = (uint64_t *)((char *)&v209 - v34);
  uint64_t v35 = __chkstk_darwin(v33);
  int v222 = (char *)&v209 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v213 = (uint64_t *)((char *)&v209 - v38);
  __chkstk_darwin(v37);
  uint64_t v220 = (uint64_t *)((char *)&v209 - v39);
  uint64_t v40 = sub_100007E0C(&qword_100151008);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v214 = (uint64_t *)((char *)&v209 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = __chkstk_darwin(v41);
  v226 = (uint64_t *)((char *)&v209 - v44);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v217 = (uint64_t *)((char *)&v209 - v46);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v218 = (uint64_t *)((char *)&v209 - v48);
  uint64_t v49 = __chkstk_darwin(v47);
  v224 = (uint64_t *)((char *)&v209 - v50);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v238 = (uint64_t)&v209 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v242 = (uint64_t *)((char *)&v209 - v54);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v244 = (uint64_t *)((char *)&v209 - v56);
  uint64_t v57 = __chkstk_darwin(v55);
  v234 = (uint64_t *)((char *)&v209 - v58);
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v233 = (uint64_t **)((char *)&v209 - v60);
  uint64_t v61 = __chkstk_darwin(v59);
  Swift::String v63 = (uint64_t *)((char *)&v209 - v62);
  uint64_t v64 = __chkstk_darwin(v61);
  Swift::String v66 = (uint64_t *)((char *)&v209 - v65);
  uint64_t v67 = __chkstk_darwin(v64);
  Swift::String v69 = (uint64_t *)((char *)&v209 - v68);
  uint64_t v70 = __chkstk_darwin(v67);
  Swift::String v72 = (char *)&v209 + *(int *)(v70 + 48) - v71;
  uint64_t v231 = (uint64_t)&v209 - v71;
  *(uint64_t **)((char *)&v209 - v71) = a1;
  sub_100010808(a2, (uint64_t)v72, (uint64_t *)&unk_100151950);
  uint64_t v73 = (uint64_t)v69 + *(int *)(v40 + 48);
  uint64_t v230 = v69;
  uint64_t v75 = v235;
  uint64_t v74 = (uint64_t)v236;
  *Swift::String v69 = v235;
  sub_100010808(v74, v73, (uint64_t *)&unk_100151950);
  *(void *)&long long v247 = 0x2F77205452415453;
  *((void *)&v247 + 1) = 0xE900000000000020;
  uint64_t v76 = (uint64_t)v66 + *(int *)(v40 + 48);
  uint64_t v236 = v66;
  uint64_t v232 = a1;
  *Swift::String v66 = (uint64_t)a1;
  sub_100010808((uint64_t)v72, v76, (uint64_t *)&unk_100151950);
  uint64_t v77 = (uint64_t)v63 + *(int *)(v40 + 48);
  uint64_t *v63 = v75;
  sub_100010808(v73, v77, (uint64_t *)&unk_100151950);
  uint64_t v78 = (uint64_t)a1;
  uint64_t v79 = v75;
  uint64_t v80 = v75;
  char v81 = v237;
  uint64_t v82 = sub_10008B3AC(v78, v76, v79, v77, v246, v241, v237);
  uint64_t v84 = v83;
  uint64_t v85 = v77;
  unint64_t v86 = v244;
  sub_100012510(v85, (uint64_t *)&unk_100151950);
  sub_100012510(v76, (uint64_t *)&unk_100151950);
  v254._countAndFlagsBits = v82;
  v254._object = v84;
  sub_100104BE8(v254);
  swift_bridgeObjectRelease();
  sub_10008D348(v247, *((unint64_t *)&v247 + 1), (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
  swift_bridgeObjectRelease();
  uint64_t v87 = (uint64_t)v233;
  uint64_t v88 = (uint64_t)v233 + *(int *)(v40 + 48);
  *uint64_t v233 = v232;
  uint64_t v89 = (uint64_t)v72;
  uint64_t v90 = v40;
  sub_100010808(v89, v88, (uint64_t *)&unk_100151950);
  uint64_t v91 = (uint64_t)v234;
  uint64_t v92 = (uint64_t)v234 + *(int *)(v40 + 48);
  uint64_t *v234 = v80;
  uint64_t v93 = v73;
  unint64_t v94 = v242;
  sub_100010808(v93, v92, (uint64_t *)&unk_100151950);
  sub_100033870(v87, (uint64_t)v86, &qword_100151008);
  sub_100033870(v91, (uint64_t)v94, &qword_100151008);
  if (v81)
  {
    uint64_t v95 = *(int *)(v40 + 48);
    uint64_t v96 = v238;
    uint64_t v97 = v238 + v95;
    if (v81 == 1)
    {
      uint64_t v98 = *v86;
      *(void *)uint64_t v238 = *v86;
      sub_100010808((uint64_t)v86 + v95, v96 + v95, (uint64_t *)&unk_100151950);
      uint64_t v99 = 0;
      uint64_t v100 = v246;
    }
    else
    {
      uint64_t v98 = *v94;
      *(void *)uint64_t v238 = *v94;
      sub_100010808((uint64_t)v94 + v95, v96 + v95, (uint64_t *)&unk_100151950);
      uint64_t v99 = 1;
      uint64_t v100 = v241;
    }
    uint64_t v117 = v243;
    uint64_t v118 = v239;
    if (v98 < 1)
    {
      sub_10008D348(0xD00000000000002CLL, 0x8000000100113BE0, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
      sub_100012510(v238, &qword_100151008);
      uint64_t v124 = (uint64_t *)v227;
      uint64_t v125 = v240;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v227, 1, 1, v240);
    }
    else
    {
      uint64_t v246 = v100;
      uint64_t v119 = *(int *)(v40 + 48);
      uint64_t v120 = v40;
      uint64_t v121 = v224;
      uint64_t v122 = (uint64_t)v224 + v119;
      uint64_t *v224 = v98;
      sub_100010808(v97, (uint64_t)v121 + v119, (uint64_t *)&unk_100151950);
      uint64_t v123 = v245;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v122, 1, v245) == 1)
      {
        sub_100012510(v122, (uint64_t *)&unk_100151950);
        sub_10008D348(0xD00000000000002DLL, 0x8000000100113C40, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
        sub_100012510(v238, &qword_100151008);
        uint64_t v124 = (uint64_t *)v227;
        uint64_t v125 = v240;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v227, 1, 1, v240);
        uint64_t v100 = v246;
      }
      else
      {
        uint64_t v126 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 32);
        uint64_t v241 = v99;
        uint64_t v127 = v215;
        v126(v215, v122, v123);
        uint64_t v128 = v240;
        uint64_t v124 = (uint64_t *)v227;
        uint64_t v129 = &v227[*(int *)(v240 + 48)];
        uint64_t v130 = *(int *)(v120 + 48);
        Swift::Int v131 = v236;
        uint64_t v132 = (char *)v236 + v130;
        *uint64_t v236 = v98;
        sub_100033870(v97, (uint64_t)v131 + v130, (uint64_t *)&unk_100151950);
        uint64_t *v124 = v98;
        uint64_t v125 = v128;
        uint64_t v118 = v239;
        uint64_t v133 = v127;
        uint64_t v99 = v241;
        v126(v129, (uint64_t)v133, v123);
        unint64_t v86 = v244;
        unint64_t v94 = v242;
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v118 + 56))(v124, 0, 1, v125);
        uint64_t v134 = (uint64_t)v132;
        uint64_t v100 = v246;
        sub_100012510(v134, (uint64_t *)&unk_100151950);
      }
    }
    sub_100012510((uint64_t)v94, &qword_100151008);
    sub_100012510((uint64_t)v86, &qword_100151008);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v118 + 48))(v124, 1, v125) == 1)
    {
      sub_100012510((uint64_t)v124, &qword_100151018);
      if (v100 <= 0)
      {
        sub_10008D348(0xD00000000000002ALL, 0x8000000100113C10, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
        uint64_t v100 = 0;
        uint64_t v99 = 2;
      }
      uint64_t v250 = 0;
      unint64_t v251 = 0xE000000000000000;
      v255._countAndFlagsBits = 0x4554454C504D4F43;
      v255._object = (void *)0xEC000000202F7720;
      sub_100104BE8(v255);
      long long v247 = xmmword_100109290;
      uint64_t v248 = v99;
      uint64_t v249 = v100;
      sub_100105598();
      sub_10008D348(v250, v251, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
      swift_bridgeObjectRelease();
      uint64_t v135 = &qword_100151008;
      sub_100012510((uint64_t)v230, &qword_100151008);
      uint64_t v136 = v231;
      goto LABEL_52;
    }
    uint64_t v137 = *(int *)(v125 + 48);
    uint64_t v138 = (uint64_t)v220;
    uint64_t v139 = (char *)v220 + v137;
    uint64_t v140 = *v124;
    *uint64_t v220 = *v124;
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v139, (char *)v124 + v137, v245);
    uint64_t v250 = 0;
    unint64_t v251 = 0xE000000000000000;
    v256._countAndFlagsBits = 0x4554454C504D4F43;
    v256._object = (void *)0xEC000000202F7720;
    sub_100104BE8(v256);
    *(void *)&long long v247 = v99;
    *((void *)&v247 + 1) = v140;
    uint64_t v248 = v99;
    uint64_t v249 = v140;
    sub_100105598();
    sub_10008D348(v250, v251, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
    swift_bridgeObjectRelease();
    sub_100012510(v138, &qword_100151020);
    uint64_t v141 = &qword_100151008;
    sub_100012510((uint64_t)v230, &qword_100151008);
    id v142 = &v253;
    goto LABEL_18;
  }
  uint64_t v101 = v217;
  uint64_t v102 = v219;
  uint64_t v103 = v228;
  uint64_t v104 = *(int *)(v90 + 48);
  uint64_t v105 = (uint64_t)v218;
  uint64_t v106 = (uint64_t)v218 + v104;
  uint64_t v107 = *v86;
  *uint64_t v218 = *v86;
  sub_100010808((uint64_t)v86 + v104, v105 + v104, (uint64_t *)&unk_100151950);
  if (v107 < 1)
  {
    sub_10008D348(0xD00000000000002CLL, 0x8000000100113BE0, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
    sub_100012510(v105, &qword_100151008);
    uint64_t v115 = v239;
    double v116 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v239 + 56);
    uint64_t v113 = (uint64_t)v103;
    v116(v103, 1, 1, v240);
    uint64_t v143 = v229;
    uint64_t v110 = v243;
  }
  else
  {
    uint64_t v108 = *(int *)(v90 + 48);
    uint64_t v238 = v90;
    uint64_t v109 = (uint64_t)v101 + v108;
    *uint64_t v101 = v107;
    sub_100010808(v106, (uint64_t)v101 + v108, (uint64_t *)&unk_100151950);
    uint64_t v110 = v243;
    uint64_t v111 = v245;
    int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(v109, 1, v245);
    uint64_t v113 = (uint64_t)v103;
    uint64_t v114 = v240;
    if (v112 == 1)
    {
      sub_100012510(v109, (uint64_t *)&unk_100151950);
      sub_10008D348(0xD00000000000002DLL, 0x8000000100113C40, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
      sub_100012510(v105, &qword_100151008);
      uint64_t v115 = v239;
      double v116 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v239 + 56);
      v116(v103, 1, 1, v114);
    }
    else
    {
      long long v144 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 32);
      v144(v102, v109, v111);
      long long v145 = (char *)v103 + *(int *)(v114 + 48);
      uint64_t v146 = *(int *)(v238 + 48);
      uint64_t v147 = v236;
      unint64_t v148 = (char *)v236 + v146;
      *uint64_t v236 = v107;
      sub_100033870(v106, (uint64_t)v147 + v146, (uint64_t *)&unk_100151950);
      *uint64_t v103 = v107;
      v144(v145, (uint64_t)v102, v111);
      uint64_t v113 = (uint64_t)v103;
      uint64_t v115 = v239;
      double v116 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v239 + 56);
      v116(v103, 0, 1, v114);
      uint64_t v149 = (uint64_t)v148;
      uint64_t v110 = v243;
      sub_100012510(v149, (uint64_t *)&unk_100151950);
    }
    uint64_t v143 = v229;
    unint64_t v94 = v242;
    uint64_t v90 = v238;
  }
  uint64_t v150 = *(int *)(v90 + 48);
  uint64_t v151 = v226;
  uint64_t v152 = (uint64_t)v226 + v150;
  uint64_t v153 = *v94;
  uint64_t *v226 = *v94;
  sub_100010808((uint64_t)v94 + v150, (uint64_t)v151 + v150, (uint64_t *)&unk_100151950);
  if (v153 < 1)
  {
    sub_10008D348(0xD00000000000002CLL, 0x8000000100113BE0, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
    sub_100012510((uint64_t)v151, &qword_100151008);
    goto LABEL_26;
  }
  uint64_t v154 = *(int *)(v90 + 48);
  uint64_t v155 = v90;
  uint64_t v156 = v214;
  uint64_t v157 = (uint64_t)v214 + v154;
  *uint64_t v214 = v153;
  sub_100010808(v152, (uint64_t)v156 + v154, (uint64_t *)&unk_100151950);
  uint64_t v158 = v245;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v157, 1, v245) == 1)
  {
    sub_100012510(v157, (uint64_t *)&unk_100151950);
    sub_10008D348(0xD00000000000002DLL, 0x8000000100113C40, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
    sub_100012510((uint64_t)v226, &qword_100151008);
    uint64_t v143 = v229;
LABEL_26:
    uint64_t v159 = v240;
    v116(v143, 1, 1, v240);
    goto LABEL_28;
  }
  uint64_t v160 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 32);
  uint64_t v161 = v212;
  v160(v212, v157, v158);
  uint64_t v162 = v240;
  uint64_t v163 = (char *)v229 + *(int *)(v240 + 48);
  uint64_t v164 = *(int *)(v155 + 48);
  char v165 = v236;
  uint64_t v166 = (uint64_t)v236 + v164;
  *uint64_t v236 = v153;
  sub_100033870(v152, (uint64_t)v165 + v164, (uint64_t *)&unk_100151950);
  *uint64_t v229 = v153;
  uint64_t v159 = v162;
  uint64_t v115 = v239;
  v160(v163, (uint64_t)v161, v158);
  unint64_t v94 = v242;
  uint64_t v113 = (uint64_t)v228;
  uint64_t v143 = v229;
  v116(v229, 0, 1, v159);
  uint64_t v110 = v243;
  sub_100012510(v166, (uint64_t *)&unk_100151950);
LABEL_28:
  sub_100012510((uint64_t)v94, &qword_100151008);
  sub_100012510((uint64_t)v244, &qword_100151008);
  uint64_t v167 = v221;
  sub_100010808(v113, (uint64_t)v221, &qword_100151018);
  uint64_t v168 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v115 + 48);
  int v169 = v168(v167, 1, v159);
  char v170 = v225;
  char v171 = v223;
  uint64_t v172 = v222;
  if (v169 == 1)
  {
    sub_100012510((uint64_t)v167, &qword_100151018);
    uint64_t v173 = (uint64_t *)v216;
  }
  else
  {
    uint64_t v174 = *(int *)(v159 + 48);
    uint64_t v175 = (uint64_t)v213;
    char v176 = (char *)v213 + v174;
    uint64_t v177 = (char *)v167 + v174;
    uint64_t v178 = *v167;
    *uint64_t v213 = v178;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v176, v177, v245);
    if (v168(v143, 1, v159) == 1)
    {
      uint64_t v250 = 0;
      unint64_t v251 = 0xE000000000000000;
      v257._countAndFlagsBits = 0x4554454C504D4F43;
      v257._object = (void *)0xEC000000202F7720;
      sub_100104BE8(v257);
      *(void *)&long long v247 = 0;
      *((void *)&v247 + 1) = v178;
      uint64_t v248 = 0;
      uint64_t v249 = v178;
      sub_100105598();
      sub_10008D348(v250, v251, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
      swift_bridgeObjectRelease();
      sub_100012510(v175, &qword_100151020);
      sub_100012510((uint64_t)v230, &qword_100151008);
      sub_100012510(v231, &qword_100151008);
      sub_100012510((uint64_t)v143, &qword_100151018);
      sub_100012510((uint64_t)v228, &qword_100151018);
      return 0;
    }
    sub_100012510(v175, &qword_100151020);
    uint64_t v173 = (uint64_t *)v216;
    uint64_t v113 = (uint64_t)v228;
  }
  sub_100010808((uint64_t)v143, (uint64_t)v173, &qword_100151018);
  if (v168(v173, 1, v159) == 1)
  {
    uint64_t v179 = &qword_100151018;
    uint64_t v180 = (uint64_t)v173;
  }
  else
  {
    uint64_t v181 = *(int *)(v159 + 48);
    uint64_t v182 = (char *)v173 + v181;
    uint64_t v183 = *v173;
    *(void *)uint64_t v172 = v183;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v172[v181], v182, v245);
    if (v168((uint64_t *)v113, 1, v159) == 1)
    {
      uint64_t v250 = 0;
      unint64_t v251 = 0xE000000000000000;
      v258._countAndFlagsBits = 0x4554454C504D4F43;
      v258._object = (void *)0xEC000000202F7720;
      sub_100104BE8(v258);
      *(void *)&long long v247 = 1;
      *((void *)&v247 + 1) = v183;
      uint64_t v248 = 1;
      uint64_t v249 = v183;
      sub_100105598();
      sub_10008D348(v250, v251, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
      swift_bridgeObjectRelease();
      sub_100012510((uint64_t)v172, &qword_100151020);
      sub_100012510((uint64_t)v230, &qword_100151008);
      sub_100012510(v231, &qword_100151008);
      uint64_t v184 = (uint64_t)v143;
      uint64_t v99 = 1;
      sub_100012510(v184, &qword_100151018);
      sub_100012510(v113, &qword_100151018);
      return v99;
    }
    uint64_t v179 = &qword_100151020;
    uint64_t v180 = (uint64_t)v172;
  }
  sub_100012510(v180, v179);
  sub_100010808(v113, (uint64_t)v171, &qword_100151018);
  if (v168(v171, 1, v159) == 1)
  {
    uint64_t v185 = (uint64_t)v171;
    uint64_t v186 = v246;
LABEL_42:
    sub_100012510(v185, &qword_100151018);
    if (v186 <= 0)
    {
      sub_10008D348(0xD00000000000002ALL, 0x8000000100113C10, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
      uint64_t v186 = v241;
      if (v241 <= 0)
      {
        sub_10008D348(0xD00000000000002ALL, 0x8000000100113C10, (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateStreaksFor] %s");
        uint64_t v186 = 0;
        uint64_t v198 = 2;
      }
      else
      {
        uint64_t v198 = 1;
      }
    }
    else
    {
      uint64_t v198 = 0;
    }
    uint64_t v250 = 0;
    unint64_t v251 = 0xE000000000000000;
    v260._countAndFlagsBits = 0x4554454C504D4F43;
    v260._object = (void *)0xEC000000202F7720;
    sub_100104BE8(v260);
    long long v247 = xmmword_100109290;
    uint64_t v248 = v198;
    uint64_t v249 = v186;
    sub_100105598();
    sub_10008D348(v250, v251, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
    swift_bridgeObjectRelease();
    sub_100012510((uint64_t)v230, &qword_100151008);
    sub_100012510(v231, &qword_100151008);
    uint64_t v135 = &qword_100151018;
    sub_100012510((uint64_t)v143, &qword_100151018);
    uint64_t v136 = v113;
LABEL_52:
    sub_100012510(v136, v135);
    return 2;
  }
  uint64_t v187 = *(int *)(v159 + 48);
  uint64_t v188 = (char *)v170 + v187;
  uint64_t v189 = (char *)v171 + v187;
  uint64_t v190 = v110;
  uint64_t v191 = *v171;
  uint64_t *v170 = *v171;
  long long v192 = v143;
  uint64_t v193 = v159;
  long long v194 = *(void (**)(char *, char *, uint64_t))(v190 + 32);
  uint64_t v195 = v245;
  v194((char *)v170 + v187, v189, v245);
  uint64_t v196 = (uint64_t)v192;
  uint64_t v197 = v211;
  sub_100010808(v196, (uint64_t)v211, &qword_100151018);
  if (v168(v197, 1, v193) == 1)
  {
    sub_100012510((uint64_t)v225, &qword_100151020);
    uint64_t v185 = (uint64_t)v197;
    uint64_t v113 = (uint64_t)v228;
    uint64_t v186 = v246;
    uint64_t v143 = v229;
    goto LABEL_42;
  }
  uint64_t v199 = *(int *)(v193 + 48);
  uint64_t v200 = (uint64_t)v210;
  uint64_t v201 = (char *)v210 + v199;
  uint64_t v202 = *v197;
  *uint64_t v210 = *v197;
  v194(v201, (char *)v197 + v199, v195);
  BOOL v203 = v202 > 1;
  uint64_t v204 = (uint64_t)v209;
  uint64_t v205 = (char *)v209 + *(int *)(v193 + 48);
  *uint64_t v209 = v191;
  (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v205, v188, v195);
  sub_100012510(v204, &qword_100151020);
  BOOL v206 = v191 < 3;
  uint64_t v99 = v203 & v206;
  if (v203 && v206) {
    uint64_t v207 = v202;
  }
  else {
    uint64_t v207 = v191;
  }
  uint64_t v250 = 0;
  unint64_t v251 = 0xE000000000000000;
  v259._countAndFlagsBits = 0x4554454C504D4F43;
  v259._object = (void *)0xEC000000202F7720;
  sub_100104BE8(v259);
  *(void *)&long long v247 = v99;
  *((void *)&v247 + 1) = v207;
  uint64_t v248 = v99;
  uint64_t v249 = v207;
  sub_100105598();
  sub_10008D348(v250, v251, (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateStreaksFor] %s");
  swift_bridgeObjectRelease();
  sub_100012510(v200, &qword_100151020);
  sub_100012510((uint64_t)v225, &qword_100151020);
  sub_100012510((uint64_t)v230, &qword_100151008);
  sub_100012510(v231, &qword_100151008);
  uint64_t v141 = &qword_100151018;
  sub_100012510((uint64_t)v229, &qword_100151018);
  id v142 = &v252;
LABEL_18:
  sub_100012510(*(v142 - 32), v141);
  return v99;
}

void sub_10008D348(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), const char *a4)
{
  if (qword_10014C018 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100103DB8();
  sub_100007D30(v8, (uint64_t)qword_100150F58);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_100103D98();
  os_log_type_t v10 = a3();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000456B4(a1, a2, &v12);
    sub_1001052C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a4, v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10008D500(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v119 = a7;
  uint64_t v120 = a6;
  uint64_t v118 = a5;
  uint64_t v11 = (int *)type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  uint64_t v117 = *((void *)v11 - 1);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v108 = (uint64_t)&v96 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v106 = (uint64_t)&v96 - v18;
  __chkstk_darwin(v17);
  uint64_t v105 = (uint64_t)&v96 - v19;
  uint64_t v20 = sub_100007E0C(&qword_100150CE8);
  __chkstk_darwin(v20 - 8);
  uint64_t v114 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007E0C(&qword_100150CF0);
  __chkstk_darwin(v22 - 8);
  uint64_t v111 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1001035D8();
  int v112 = *(void (***)(char *, uint64_t))(v24 - 8);
  uint64_t v113 = v24;
  __chkstk_darwin(v24);
  uint64_t v110 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100103AE8();
  uint64_t v109 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v27 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v96 - v32;
  uint64_t v34 = sub_100103978();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v107 = (char *)&v96 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  if (a4 == 2) {
    goto LABEL_7;
  }
  uint64_t v101 = a4;
  uint64_t v102 = a2;
  uint64_t v115 = (char *)&v96 - v37;
  uint64_t v103 = v11;
  uint64_t v104 = a1;
  uint64_t v100 = a3;
  uint64_t v39 = v38;
  sub_100010808(a3, (uint64_t)v33, (uint64_t *)&unk_100151950);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v40(v33, 1, v34) == 1)
  {
    uint64_t v41 = v39;
    uint64_t v42 = v34;
    uint64_t v31 = v33;
LABEL_6:
    a1 = v104;
    sub_100012510((uint64_t)v31, (uint64_t *)&unk_100151950);
    a2 = v102;
    uint64_t v11 = v103;
    uint64_t v34 = v42;
    uint64_t v38 = v41;
    a3 = v100;
    a4 = v101;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v14, a2, v34);
    sub_100010808(a3, (uint64_t)&v14[v11[5]], (uint64_t *)&unk_100151950);
    uint64_t v49 = &v14[v11[6]];
    uint64_t v50 = v118;
    *(void *)uint64_t v49 = a4;
    *((void *)v49 + 1) = v50;
    uint64_t v51 = &v14[v11[7]];
    uint64_t v52 = v119;
    *(void *)uint64_t v51 = v120;
    *((void *)v51 + 1) = v52;
    v14[v11[8]] = 0;
    unint64_t v53 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v53 = sub_1000B7720(0, *(void *)(v53 + 16) + 1, 1, v53);
    }
    unint64_t v55 = *(void *)(v53 + 16);
    unint64_t v54 = *(void *)(v53 + 24);
    if (v55 >= v54 >> 1) {
      unint64_t v53 = sub_1000B7720(v54 > 1, v55 + 1, 1, v53);
    }
    *(void *)(v53 + 16) = v55 + 1;
    uint64_t result = sub_10008F824((uint64_t)v14, v53+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(void *)(v117 + 72) * v55);
    *a1 = v53;
    return result;
  }
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  uint64_t v98 = v39 + 32;
  uint64_t v97 = v43;
  v43(v115, v33, v34);
  sub_100103AB8();
  uint64_t v44 = v109;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v111, 1, 1, v116);
  uint64_t v45 = sub_100103B38();
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  uint64_t v99 = v40;
  v46(v114, 1, 1, v45);
  uint64_t v47 = v110;
  uint64_t v48 = v115;
  sub_1001035C8();
  sub_100103A88();
  v112[1](v47, v113);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v116);
  if (v99(v31, 1, v34) == 1)
  {
    uint64_t v41 = v39;
    uint64_t v42 = v34;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v48, v34);
    goto LABEL_6;
  }
  uint64_t v57 = v101 & 1;
  uint64_t v58 = v107;
  v97(v107, v31, v34);
  sub_100048B20((unint64_t *)&qword_10014CE98);
  uint64_t v59 = v102;
  char v60 = sub_100104A28();
  uint64_t v116 = v39;
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  uint64_t v62 = (void (***)(char *, uint64_t))(v39 + 56);
  uint64_t v64 = v103;
  Swift::String v63 = v104;
  if (v60)
  {
    uint64_t v65 = v106;
    v61(v106, v59, v34);
    uint64_t v66 = v65 + v64[5];
    v61(v66, (uint64_t)v58, v34);
    uint64_t v67 = *v62;
    uint64_t v114 = (char *)v34;
    int v112 = v67;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v67)(v66, 0, 1, v34);
    uint64_t v68 = (uint64_t *)(v65 + v64[6]);
    uint64_t v69 = v118;
    uint64_t *v68 = v57;
    v68[1] = v69;
    uint64_t v70 = (void *)(v65 + v64[7]);
    uint64_t v71 = v119;
    *uint64_t v70 = v120;
    v70[1] = v71;
    *(unsigned char *)(v65 + v64[8]) = 0;
    unint64_t v72 = *v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v72 = sub_1000B7720(0, *(void *)(v72 + 16) + 1, 1, v72);
    }
    unint64_t v74 = *(void *)(v72 + 16);
    unint64_t v73 = *(void *)(v72 + 24);
    uint64_t v113 = v57;
    if (v74 >= v73 >> 1) {
      unint64_t v72 = sub_1000B7720(v73 > 1, v74 + 1, 1, v72);
    }
    *(void *)(v72 + 16) = v74 + 1;
    uint64_t v111 = (char *)((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80));
    uint64_t v75 = *(void *)(v117 + 72);
    sub_10008F824(v106, (uint64_t)&v111[v72 + v75 * v74]);
    uint64_t v76 = v108;
    uint64_t v34 = (uint64_t)v114;
    v61(v108, (uint64_t)v58, (uint64_t)v114);
    uint64_t v77 = v103;
    uint64_t v78 = v76 + v103[5];
    v61(v78, (uint64_t)v115, v34);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v112)(v78, 0, 1, v34);
    uint64_t v79 = (uint64_t *)(v76 + v77[6]);
    uint64_t v80 = v118;
    *uint64_t v79 = v113;
    v79[1] = v80;
    char v81 = (void *)(v76 + v77[7]);
    uint64_t v82 = v119;
    void *v81 = v120;
    v81[1] = v82;
    *(unsigned char *)(v76 + v77[8]) = 1;
    unint64_t v84 = *(void *)(v72 + 16);
    unint64_t v83 = *(void *)(v72 + 24);
    if (v84 >= v83 >> 1) {
      unint64_t v72 = sub_1000B7720(v83 > 1, v84 + 1, 1, v72);
    }
    uint64_t v85 = v104;
    *(void *)(v72 + 16) = v84 + 1;
    sub_10008F824(v108, (uint64_t)&v111[v72 + v84 * v75]);
    unint64_t *v85 = v72;
  }
  else
  {
    uint64_t v86 = v105;
    v61(v105, v59, v34);
    uint64_t v87 = v86 + v64[5];
    v61(v87, (uint64_t)v115, v34);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))*v62)(v87, 0, 1, v34);
    uint64_t v88 = (uint64_t *)(v86 + v64[6]);
    uint64_t v89 = v118;
    uint64_t *v88 = v57;
    v88[1] = v89;
    uint64_t v90 = (void *)(v86 + v64[7]);
    uint64_t v91 = v119;
    void *v90 = v120;
    v90[1] = v91;
    *(unsigned char *)(v86 + v64[8]) = 1;
    unint64_t v92 = *v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v92 = sub_1000B7720(0, *(void *)(v92 + 16) + 1, 1, v92);
    }
    unint64_t v94 = *(void *)(v92 + 16);
    unint64_t v93 = *(void *)(v92 + 24);
    if (v94 >= v93 >> 1) {
      unint64_t v92 = sub_1000B7720(v93 > 1, v94 + 1, 1, v92);
    }
    *(void *)(v92 + 16) = v94 + 1;
    sub_10008F824(v105, v92+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(void *)(v117 + 72) * v94);
    unint64_t *v63 = v92;
  }
  uint64_t v95 = *(void (**)(char *, uint64_t))(v116 + 8);
  v95(v58, v34);
  return ((uint64_t (*)(char *, uint64_t))v95)(v115, v34);
}

void *sub_10008E000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(v206) = a7;
  uint64_t v203 = a5;
  uint64_t v204 = a6;
  uint64_t v194 = a4;
  uint64_t v201 = type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  uint64_t v198 = *(void *)(v201 - 8);
  uint64_t v10 = __chkstk_darwin(v201);
  uint64_t v187 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v178 = (char *)&v170 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v189 = (uint64_t)&v170 - v15;
  __chkstk_darwin(v14);
  uint64_t v188 = (uint64_t)&v170 - v16;
  uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v199 = (uint64_t)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v177 = (char *)&v170 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v183 = (uint64_t)&v170 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v182 = (uint64_t)&v170 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v175 = (char *)&v170 - v27;
  __chkstk_darwin(v26);
  uint64_t v186 = (uint64_t)&v170 - v28;
  uint64_t v207 = sub_100103978();
  uint64_t v197 = *(void *)(v207 - 8);
  uint64_t v29 = __chkstk_darwin(v207);
  uint64_t v181 = (char *)&v170 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v174 = (uint64_t)&v170 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v179 = (char *)&v170 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v184 = (char *)&v170 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v180 = (char *)&v170 - v38;
  __chkstk_darwin(v37);
  uint64_t v205 = (char *)&v170 - v39;
  uint64_t v40 = sub_100007E0C(&qword_100151008);
  uint64_t v41 = __chkstk_darwin(v40);
  char v176 = (void (**)(uint64_t, char *, uint64_t))((char *)&v170 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v193 = (uint64_t)&v170 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v202 = (uint64_t **)((char *)&v170 - v46);
  uint64_t v47 = __chkstk_darwin(v45);
  long long v192 = (void (**)(uint64_t, char *, uint64_t))((char *)&v170 - v48);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v191 = (uint64_t *)((char *)&v170 - v50);
  uint64_t v51 = __chkstk_darwin(v49);
  unint64_t v53 = (uint64_t *)((char *)&v170 - v52);
  uint64_t v54 = __chkstk_darwin(v51);
  uint64_t v56 = (uint64_t **)((char *)&v170 - v55);
  uint64_t v57 = __chkstk_darwin(v54);
  uint64_t v59 = (uint64_t *)((char *)&v170 - v58);
  uint64_t v60 = __chkstk_darwin(v57);
  uint64_t v62 = (char *)&v170 + *(int *)(v60 + 48) - v61;
  uint64_t v195 = (uint64_t)&v170 - v61;
  *(uint64_t *)((char *)&v170 - v61) = a1;
  sub_100010808(a2, (uint64_t)v62, (uint64_t *)&unk_100151950);
  uint64_t v63 = (uint64_t)v59 + *(int *)(v40 + 48);
  uint64_t v196 = v59;
  *uint64_t v59 = a3;
  sub_100010808(v194, v63, (uint64_t *)&unk_100151950);
  strcpy((char *)v210, "START w/ ");
  WORD1(v210[1]) = 0;
  HIDWORD(v210[1]) = -385875968;
  uint64_t v64 = (uint64_t)v56 + *(int *)(v40 + 48);
  uint64_t v65 = a1;
  uint64_t v190 = a1;
  *uint64_t v56 = (uint64_t *)a1;
  sub_100010808((uint64_t)v62, v64, (uint64_t *)&unk_100151950);
  uint64_t v66 = (uint64_t)v53 + *(int *)(v40 + 48);
  uint64_t v200 = (void (*)(uint64_t, char *, uint64_t))a3;
  *unint64_t v53 = a3;
  sub_100010808(v63, v66, (uint64_t *)&unk_100151950);
  uint64_t v67 = sub_10008B3AC(v65, v64, a3, v66, v203, v204, (int)v206);
  uint64_t v69 = v68;
  sub_100012510(v66, (uint64_t *)&unk_100151950);
  sub_100012510(v64, (uint64_t *)&unk_100151950);
  v211._countAndFlagsBits = v67;
  v211._object = v69;
  sub_100104BE8(v211);
  swift_bridgeObjectRelease();
  sub_10008D348(v210[0], v210[1], (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateTimelineFor] %s");
  swift_bridgeObjectRelease();
  uint64_t v209 = &_swiftEmptyArrayStorage;
  uint64_t v70 = v191;
  uint64_t v71 = (uint64_t)v191 + *(int *)(v40 + 48);
  *uint64_t v191 = v190;
  uint64_t v185 = v62;
  sub_100010808((uint64_t)v62, v71, (uint64_t *)&unk_100151950);
  unint64_t v72 = v192;
  uint64_t v73 = (uint64_t)v192 + *(int *)(v40 + 48);
  *long long v192 = v200;
  uint64_t v190 = v63;
  sub_100010808(v63, v73, (uint64_t *)&unk_100151950);
  unint64_t v74 = v202;
  sub_100033870((uint64_t)v70, (uint64_t)v202, &qword_100151008);
  uint64_t v75 = v193;
  sub_100033870((uint64_t)v72, v193, &qword_100151008);
  sub_100103948();
  uint64_t v76 = *(int *)(v40 + 48);
  uint64_t v77 = (uint64_t)v56 + v76;
  uint64_t v78 = (uint64_t)v74 + v76;
  uint64_t v79 = *v74;
  uint64_t v80 = (uint64_t *)v75;
  *uint64_t v56 = v79;
  uint64_t v172 = v78;
  sub_100010808(v78, (uint64_t)v56 + v76, (uint64_t *)&unk_100151950);
  uint64_t v194 = v40;
  uint64_t v81 = *(int *)(v40 + 48);
  uint64_t v82 = (uint64_t *)((char *)v53 + v81);
  uint64_t v83 = *v80;
  uint64_t v173 = v53;
  *unint64_t v53 = v83;
  uint64_t v171 = (uint64_t)v80 + v81;
  sub_100010808((uint64_t)v80 + v81, (uint64_t)v53 + v81, (uint64_t *)&unk_100151950);
  uint64_t v84 = sub_10008BA74(v79, v77, v83, v82, v203, v204, (int)v206);
  uint64_t v86 = v85;
  long long v192 = v87;
  uint64_t v191 = v88;
  sub_100012510((uint64_t)v82, (uint64_t *)&unk_100151950);
  uint64_t v89 = v197;
  sub_100012510(v77, (uint64_t *)&unk_100151950);
  if (v84 != 2)
  {
    uint64_t v90 = (char *)v56 + *(int *)(v194 + 48);
    if (v84) {
      uint64_t v91 = v190;
    }
    else {
      uint64_t v91 = (uint64_t)v185;
    }
    sub_100010808(v91, (uint64_t)v56 + *(int *)(v194 + 48), (uint64_t *)&unk_100151950);
    uint64_t v92 = (uint64_t)v90;
    uint64_t v93 = v186;
    sub_100033870(v92, v186, (uint64_t *)&unk_100151950);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v93, 1, v207) == 1)
    {
      sub_100012510(v93, (uint64_t *)&unk_100151950);
    }
    else
    {
      unint64_t v94 = v180;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v180, v93, v207);
      sub_100048B20((unint64_t *)&qword_10014CE98);
      uint64_t v95 = (uint64_t)v205;
      if (sub_100104A28())
      {
        uint64_t v96 = (uint64_t)v175;
        uint64_t v97 = v207;
        (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v175, v94, v207);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v96, 0, 1, v97);
        sub_10008D500((unint64_t *)&v209, v95, v96, v84, v86, (uint64_t)v192, (uint64_t)v191);
        sub_100012510(v96, (uint64_t *)&unk_100151950);
        (*(void (**)(char *, uint64_t))(v89 + 8))(v94, v97);
      }
      else
      {
        v210[0] = 0;
        v210[1] = 0xE000000000000000;
        sub_100105498(88);
        v212._countAndFlagsBits = 0xD000000000000037;
        v212._object = (void *)0x8000000100113B80;
        sub_100104BE8(v212);
        sub_100048B20(&qword_100151010);
        uint64_t v98 = v207;
        v213._countAndFlagsBits = sub_1001057C8();
        sub_100104BE8(v213);
        swift_bridgeObjectRelease();
        v214._object = (void *)0x8000000100113BC0;
        v214._countAndFlagsBits = 0xD00000000000001BLL;
        sub_100104BE8(v214);
        v215._countAndFlagsBits = sub_1001057C8();
        sub_100104BE8(v215);
        swift_bridgeObjectRelease();
        v216._countAndFlagsBits = 11817;
        v216._object = (void *)0xE200000000000000;
        sub_100104BE8(v216);
        sub_10008D348(v210[0], v210[1], (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateTimelineFor] %s");
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v94, v98);
      }
    }
  }
  uint64_t v99 = v209[2];
  if (!v99)
  {
    sub_100012510((uint64_t)v80, &qword_100151008);
    sub_100012510((uint64_t)v202, &qword_100151008);
LABEL_17:
    uint64_t v108 = v205;
    uint64_t v100 = v198;
    uint64_t v102 = (int *)v201;
    goto LABEL_21;
  }
  uint64_t v100 = v198;
  uint64_t v101 = v188;
  sub_10008F764((uint64_t)v209+ ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))+ *(void *)(v198 + 72) * (v99 - 1), v188);
  uint64_t v102 = (int *)v201;
  uint64_t v103 = *(void *)(v101 + *(int *)(v201 + 24));
  if (v103 == 2 || (v103 & 1) != 0 || v206 == 1)
  {
    sub_10008F7C8(v101);
    sub_100012510((uint64_t)v80, &qword_100151008);
    uint64_t v107 = v202;
    uint64_t v106 = &qword_100151008;
    goto LABEL_19;
  }
  uint64_t v104 = v182;
  sub_100010808(v101 + *(int *)(v201 + 20), v182, (uint64_t *)&unk_100151950);
  uint64_t v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  if (v105(v104, 1, v207) == 1)
  {
    sub_10008F7C8(v101);
    sub_100012510((uint64_t)v80, &qword_100151008);
    sub_100012510((uint64_t)v202, &qword_100151008);
    uint64_t v106 = (uint64_t *)&unk_100151950;
    uint64_t v107 = (void *)v104;
LABEL_19:
    sub_100012510((uint64_t)v107, v106);
LABEL_20:
    uint64_t v108 = v205;
    goto LABEL_21;
  }
  BOOL v206 = v56;
  uint64_t v124 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 32);
  uint64_t v125 = v207;
  v124(v184, v104, v207);
  uint64_t v126 = (uint64_t)v176 + *(int *)(v194 + 48);
  char *v176 = v200;
  sub_100010808(v190, v126, (uint64_t *)&unk_100151950);
  if (v105(v126, 1, v125) == 1)
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v184, v207);
    sub_10008F7C8(v101);
    sub_100012510((uint64_t)v80, &qword_100151008);
    sub_100012510((uint64_t)v202, &qword_100151008);
    sub_100012510(v126, (uint64_t *)&unk_100151950);
    uint64_t v102 = (int *)v201;
    goto LABEL_20;
  }
  uint64_t v141 = v126;
  uint64_t v142 = v207;
  v124(v179, v141, v207);
  uint64_t v143 = v174;
  long long v144 = v184;
  uint64_t v200 = *(void (**)(uint64_t, char *, uint64_t))(v89 + 16);
  v200(v174, v184, v142);
  uint64_t v145 = v194;
  uint64_t v146 = (uint64_t)v206 + *(int *)(v194 + 48);
  uint64_t v147 = v202;
  unint64_t v148 = *v202;
  *BOOL v206 = *v202;
  sub_100010808(v172, v146, (uint64_t *)&unk_100151950);
  uint64_t v149 = (uint64_t *)((char *)v173 + *(int *)(v145 + 48));
  uint64_t v150 = *v80;
  uint64_t *v173 = *v80;
  sub_100010808(v171, (uint64_t)v149, (uint64_t *)&unk_100151950);
  uint64_t v151 = sub_10008BA74(v148, v146, v150, v149, v203, v204, 2);
  uint64_t v153 = v152;
  uint64_t v204 = v154;
  BOOL v206 = v155;
  uint64_t v156 = (uint64_t)v149;
  uint64_t v157 = v143;
  sub_100012510(v156, (uint64_t *)&unk_100151950);
  sub_100012510(v146, (uint64_t *)&unk_100151950);
  sub_100012510((uint64_t)v80, &qword_100151008);
  sub_100012510((uint64_t)v147, &qword_100151008);
  if (sub_1001038F8())
  {
    v210[0] = 0;
    v210[1] = 0xE000000000000000;
    sub_100105498(116);
    v218._countAndFlagsBits = 0xD00000000000004ELL;
    v218._object = (void *)0x8000000100113B00;
    sub_100104BE8(v218);
    sub_100048B20(&qword_100151010);
    uint64_t v158 = v207;
    v219._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v219);
    swift_bridgeObjectRelease();
    v220._countAndFlagsBits = 0xD000000000000020;
    v220._object = (void *)0x8000000100113B50;
    sub_100104BE8(v220);
    v221._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v221);
    swift_bridgeObjectRelease();
    v222._countAndFlagsBits = 11817;
    v222._object = (void *)0xE200000000000000;
    sub_100104BE8(v222);
    sub_10008D348(v210[0], v210[1], (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateTimelineFor] %s");
    swift_bridgeObjectRelease();
    uint64_t v89 = v197;
    uint64_t v159 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    v159(v157, v158);
    v159((uint64_t)v179, v158);
    v159((uint64_t)v144, v158);
    sub_10008F7C8(v188);
    goto LABEL_17;
  }
  sub_100048B20((unint64_t *)&qword_10014CE98);
  uint64_t v160 = v179;
  char v161 = sub_100104A28();
  uint64_t v102 = (int *)v201;
  if (v161)
  {
    if (v151 == 2)
    {
      v210[0] = 0;
      v210[1] = 0xE000000000000000;
      sub_100105498(103);
      v223._countAndFlagsBits = 0xD000000000000063;
      v223._object = (void *)0x8000000100113A90;
      sub_100104BE8(v223);
      v208._countAndFlagsBits = 0;
      v208._object = (void *)0xE000000000000000;
      uint64_t v102 = (int *)v201;
      sub_100105498(18);
      swift_bridgeObjectRelease();
      v208._countAndFlagsBits = 0x3D657669746361;
      v208._object = (void *)0xE700000000000000;
      v224._countAndFlagsBits = sub_10008B2D8(v151);
      sub_100104BE8(v224);
      swift_bridgeObjectRelease();
      v225._countAndFlagsBits = 0x3D7473616C202CLL;
      v225._object = (void *)0xE700000000000000;
      sub_100104BE8(v225);
      v226._countAndFlagsBits = sub_10008B2D8(v204);
      sub_100104BE8(v226);
      swift_bridgeObjectRelease();
      sub_100104BE8(v208);
      swift_bridgeObjectRelease();
      v227._countAndFlagsBits = 11817;
      v227._object = (void *)0xE200000000000000;
      sub_100104BE8(v227);
      sub_10008D348(v210[0], v210[1], (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateTimelineFor] %s");
      swift_bridgeObjectRelease();
      uint64_t v89 = v197;
      uint64_t v162 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
      uint64_t v163 = v207;
      v162(v174, v207);
      v162((uint64_t)v160, v163);
      uint64_t v164 = v184;
      uint64_t v165 = v163;
    }
    else
    {
      uint64_t v167 = (uint64_t)v175;
      uint64_t v168 = v207;
      v200((uint64_t)v175, v160, v207);
      uint64_t v89 = v197;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v197 + 56))(v167, 0, 1, v168);
      uint64_t v169 = v174;
      sub_10008D500((unint64_t *)&v209, v174, v167, v151, v153, v204, (uint64_t)v206);
      sub_100012510(v167, (uint64_t *)&unk_100151950);
      uint64_t v162 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
      v162(v169, v168);
      v162((uint64_t)v160, v168);
      uint64_t v164 = v184;
      uint64_t v165 = v168;
    }
  }
  else
  {
    v210[0] = 0;
    v210[1] = 0xE000000000000000;
    sub_100105498(118);
    v228._countAndFlagsBits = 0xD00000000000004CLL;
    v228._object = (void *)0x8000000100113A10;
    sub_100104BE8(v228);
    sub_100048B20(&qword_100151010);
    uint64_t v166 = v207;
    v229._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v229);
    swift_bridgeObjectRelease();
    v230._countAndFlagsBits = 0xD000000000000024;
    v230._object = (void *)0x8000000100113A60;
    sub_100104BE8(v230);
    v231._countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v231);
    swift_bridgeObjectRelease();
    v232._countAndFlagsBits = 11817;
    v232._object = (void *)0xE200000000000000;
    sub_100104BE8(v232);
    sub_10008D348(v210[0], v210[1], (uint64_t (*)(void))&static os_log_type_t.error.getter, "[calculateTimelineFor] %s");
    swift_bridgeObjectRelease();
    uint64_t v89 = v197;
    uint64_t v162 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    v162(v157, v166);
    v162((uint64_t)v160, v166);
    uint64_t v164 = v184;
    uint64_t v165 = v166;
  }
  v162((uint64_t)v164, v165);
  sub_10008F7C8(v188);
  uint64_t v108 = v205;
  uint64_t v100 = v198;
LABEL_21:
  unint64_t v109 = (unint64_t)v209;
  uint64_t v110 = v209[2];
  if (!v110)
  {
LABEL_27:
    uint64_t v117 = v199;
    uint64_t v118 = v207;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v199, 1, 1, v207);
    uint64_t v119 = (uint64_t)v187;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v187, v108, v118);
    sub_100010808(v117, v119 + v102[5], (uint64_t *)&unk_100151950);
    *(_OWORD *)(v119 + v102[6]) = xmmword_100109290;
    uint64_t v120 = (void (***)(uint64_t, char *, uint64_t))(v119 + v102[7]);
    uint64_t v121 = (void (**)(uint64_t, char *, uint64_t))v191;
    *uint64_t v120 = v192;
    v120[1] = v121;
    *(unsigned char *)(v119 + v102[8]) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v109 = sub_1000B7720(0, 1, 1, v109);
    }
    unint64_t v123 = *(void *)(v109 + 16);
    unint64_t v122 = *(void *)(v109 + 24);
    if (v123 >= v122 >> 1) {
      unint64_t v109 = sub_1000B7720(v122 > 1, v123 + 1, 1, v109);
    }
    *(void *)(v109 + 16) = v123 + 1;
    sub_10008F824(v119, v109+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(void *)(v100 + 72) * v123);
    uint64_t v209 = (void *)v109;
    sub_100012510(v199, (uint64_t *)&unk_100151950);
    goto LABEL_39;
  }
  unint64_t v111 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  uint64_t v112 = *(void *)(v100 + 72);
  uint64_t v113 = v189;
  sub_10008F764((uint64_t)v209 + v111 + v112 * (v110 - 1), v189);
  uint64_t v114 = (unsigned __int8 *)(v113 + v102[6]);
  uint64_t v115 = *v114;
  if (v115 == 2)
  {
    sub_10008F7C8(v113);
    if (*(void *)(v109 + 16)) {
      goto LABEL_39;
    }
    goto LABEL_27;
  }
  BOOL v206 = (uint64_t **)*((void *)v114 + 1);
  uint64_t v116 = v183;
  sub_100010808(v113 + v102[5], v183, (uint64_t *)&unk_100151950);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v116, 1, v207) == 1)
  {
    sub_10008F7C8(v113);
    sub_100012510(v116, (uint64_t *)&unk_100151950);
    if (*(void *)(v109 + 16)) {
      goto LABEL_39;
    }
    goto LABEL_27;
  }
  uint64_t v204 = v115 & 1;
  uint64_t v127 = v181;
  uint64_t v128 = v116;
  uint64_t v129 = v207;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v181, v128, v207);
  uint64_t v130 = (uint64_t)v177;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v177, 1, 1, v129);
  uint64_t v131 = (uint64_t)v178;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v178, v127, v129);
  sub_100010808(v130, v131 + v102[5], (uint64_t *)&unk_100151950);
  *(_OWORD *)(v131 + v102[6]) = xmmword_100109290;
  uint64_t v132 = (void *)(v131 + v102[7]);
  uint64_t v133 = v206;
  void *v132 = v204;
  v132[1] = v133;
  *(unsigned char *)(v131 + v102[8]) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v109 = sub_1000B7720(0, *(void *)(v109 + 16) + 1, 1, v109);
  }
  unint64_t v135 = *(void *)(v109 + 16);
  unint64_t v134 = *(void *)(v109 + 24);
  if (v135 >= v134 >> 1) {
    unint64_t v109 = sub_1000B7720(v134 > 1, v135 + 1, 1, v109);
  }
  *(void *)(v109 + 16) = v135 + 1;
  sub_10008F824(v131, v109 + v111 + v135 * v112);
  uint64_t v209 = (void *)v109;
  sub_100012510(v130, (uint64_t *)&unk_100151950);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v181, v207);
  sub_10008F7C8(v189);
LABEL_39:
  strcpy((char *)v210, "COMPLETE w/ ");
  BYTE5(v210[1]) = 0;
  HIWORD(v210[1]) = -5120;
  uint64_t v136 = swift_bridgeObjectRetain();
  uint64_t v137 = sub_10008AC5C(v136);
  uint64_t v139 = v138;
  swift_bridgeObjectRelease();
  v217._countAndFlagsBits = v137;
  v217._object = v139;
  sub_100104BE8(v217);
  swift_bridgeObjectRelease();
  sub_10008D348(v210[0], v210[1], (uint64_t (*)(void))&static os_log_type_t.debug.getter, "[calculateTimelineFor] %s");
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v108, v207);
  sub_100012510((uint64_t)v196, &qword_100151008);
  sub_100012510(v195, &qword_100151008);
  return v209;
}

uint64_t type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry()
{
  uint64_t result = qword_100151080;
  if (!qword_100151080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008F764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008F7C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008F824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for StreaksWidgetCalculator.CalculatedStreaks(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[32]) {
    return (*(_DWORD *)a1 + 254);
  }
  if (*a1 <= 2u) {
    int v3 = 2;
  }
  else {
    int v3 = *a1;
  }
  int v4 = v3 - 3;
  if (*a1 < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StreaksWidgetCalculator.CalculatedStreaks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreaksWidgetCalculator.CalculatedStreaks()
{
  return &type metadata for StreaksWidgetCalculator.CalculatedStreaks;
}

char *sub_10008F930(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100103978();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[7];
    *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
    *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

uint64_t sub_10008FAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103978();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_10008FBF0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_10008FD60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v18 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v17 = a2;
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(a1 + v9, 1, v6);
  int v14 = v12((uint64_t)v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  *(_OWORD *)(a1 + v18[6]) = *(_OWORD *)(v17 + v18[6]);
  *(_OWORD *)(a1 + v18[7]) = *(_OWORD *)(v17 + v18[7]);
  *(unsigned char *)(a1 + v18[8]) = *(unsigned char *)(v17 + v18[8]);
  return a1;
}

char *sub_10008FF50(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_1000900C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v19 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v18 = a2;
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(a1 + v9, 1, v6);
  int v14 = v12((uint64_t)v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  uint64_t v16 = v19[7];
  *(_OWORD *)(a1 + v19[6]) = *(_OWORD *)(v18 + v19[6]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(v18 + v16);
  *(unsigned char *)(a1 + v19[8]) = *(unsigned char *)(v18 + v19[8]);
  return a1;
}

uint64_t sub_1000902AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000902C0);
}

uint64_t sub_1000902C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1000903E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000903FC);
}

uint64_t sub_1000903FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100103978();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100090510()
{
  sub_100103978();
  if (v0 <= 0x3F)
  {
    sub_100011FD8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000905EC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10009063C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (unint64_t *)(a3 + 40);
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v8 = *v5;
      if (*v5)
      {
        uint64_t v9 = *(v5 - 1);
        uint64_t v10 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
        }
        if (v10)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1000B7500(0, v6[2] + 1, 1, v6);
          }
          unint64_t v12 = v6[2];
          unint64_t v11 = v6[3];
          if (v12 >= v11 >> 1) {
            uint64_t v6 = sub_1000B7500((void *)(v11 > 1), v12 + 1, 1, v6);
          }
          uint64_t v6[2] = v12 + 1;
          uint64_t v7 = &v6[2 * v12];
          v7[4] = v9;
          v7[5] = v8;
        }
      }
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    if (v6[2]) {
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_16;
  }
LABEL_14:
  sub_100007E0C(&qword_10014DA20);
  sub_10009089C();
  uint64_t v13 = sub_100104A18();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for ThreadSafeSet()
{
  return sub_10000ABE8();
}

uint64_t sub_1000907E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100090830()
{
  return sub_100062F88();
}

uint64_t sub_10009084C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ThreadSafeArray()
{
  return sub_10000ABE8();
}

unint64_t sub_10009089C()
{
  unint64_t result = qword_1001511C8;
  if (!qword_1001511C8)
  {
    sub_100007F30(&qword_10014DA20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001511C8);
  }
  return result;
}

uint64_t sub_1000908FC(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_100151300);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_100092410();
  sub_100105968();
  char v13 = 0;
  sub_100105778();
  if (!v1)
  {
    _s12ContactAssetC11ContactDataVMa(0);
    char v12 = 1;
    sub_100103978();
    sub_1000923C8(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    char v11 = 2;
    sub_100105768();
    char v10 = 3;
    sub_100105748();
    char v9 = 4;
    sub_100105758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100090B5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_100007E0C(&qword_1001512F0);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (int *)_s12ContactAssetC11ContactDataVMa(0);
  __chkstk_darwin(v11);
  char v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012154(a1, a1[3]);
  sub_100092410();
  uint64_t v14 = v10;
  uint64_t v15 = (uint64_t)v32;
  sub_100105958();
  if (v15) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v32 = a1;
  uint64_t v16 = v30;
  char v37 = 0;
  *char v13 = sub_1001056C8();
  v13[1] = v17;
  sub_100103978();
  char v36 = 1;
  sub_1000923C8(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100012290((uint64_t)v7, (uint64_t)v13 + v11[5]);
  char v35 = 2;
  uint64_t v18 = (uint64_t)v29;
  sub_1001056B8();
  sub_100012290(v18, (uint64_t)v13 + v11[6]);
  char v34 = 3;
  uint64_t v19 = sub_100105698();
  uint64_t v20 = (char *)v13 + v11[7];
  *(void *)uint64_t v20 = v19;
  v20[8] = v21 & 1;
  char v33 = 4;
  uint64_t v22 = sub_1001056A8();
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v31);
  uint64_t v25 = (char *)v13 + v11[8];
  *(void *)uint64_t v25 = v22;
  v25[8] = v24 & 1;
  sub_100092464((uint64_t)v13, v28);
  sub_1000121EC((uint64_t)v32);
  return sub_1000924C8((uint64_t)v13);
}

unint64_t sub_100090FB0()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D69547472617473;
      break;
    case 2:
      unint64_t result = 0x656D6954646E65;
      break;
    case 3:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10009105C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100092794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100091084(uint64_t a1)
{
  unint64_t v2 = sub_100092410();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000910C0(uint64_t a1)
{
  unint64_t v2 = sub_100092410();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000910FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100090B5C(a1, a2);
}

uint64_t sub_100091114(void *a1)
{
  return sub_1000908FC(a1);
}

uint64_t sub_10009112C()
{
  uint64_t v1 = sub_100007E0C(&qword_100151308);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling12ContactAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000F7610((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_100012510((uint64_t)v3, &qword_100151308);
    return 0;
  }
  sub_100092524((uint64_t)v3, (uint64_t)v7);
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  sub_1000924C8((uint64_t)v7);
  return v8;
}

uint64_t sub_1000912CC()
{
  return swift_release();
}

id sub_1000912DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12ContactAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100091324()
{
  return _s12ContactAssetCMa(0);
}

uint64_t _s12ContactAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_1001511F8);
}

uint64_t sub_10009134C()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100091390(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103978();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v20;
    char v23 = (char *)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
  }
  return v4;
}

uint64_t sub_1000915E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100103978();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_10009170C(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = (char *)a1 + v19;
  char v23 = &a2[v19];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  return a1;
}

char *sub_100091910(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  char v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  return a1;
}

_OWORD *sub_100091BE4(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  int v19 = (char *)a1 + v17;
  uint64_t v20 = &a2[v17];
  *(void *)int v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = &a2[v18];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

char *sub_100091DE0(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = (char *)a2 + v16;
  int v19 = v12(&a1[v16], 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = (char *)a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = &a1[v23];
  uint64_t v27 = (char *)a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_1000920A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000920B4);
}

uint64_t sub_1000920B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100092168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009217C);
}

uint64_t sub_10009217C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s12ContactAssetC11ContactDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100151260);
}

void sub_100092248()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000922EC()
{
  return swift_retain();
}

uint64_t sub_1000922FC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling12ContactAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100092314()
{
  return sub_10009112C();
}

uint64_t sub_100092338()
{
  return sub_1000923C8(&qword_1001512A8, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa);
}

uint64_t sub_100092380()
{
  return sub_1000923C8(&qword_1001512B0, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa);
}

uint64_t sub_1000923C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100092410()
{
  unint64_t result = qword_1001512F8;
  if (!qword_1001512F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001512F8);
  }
  return result;
}

uint64_t sub_100092464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000924C8(uint64_t a1)
{
  uint64_t v2 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100092524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ContactAssetC11ContactDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s12ContactAssetC11ContactDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100092654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12ContactAssetC11ContactDataV10CodingKeysOMa()
{
  return &_s12ContactAssetC11ContactDataV10CodingKeysON;
}

unint64_t sub_100092690()
{
  unint64_t result = qword_100151310;
  if (!qword_100151310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151310);
  }
  return result;
}

unint64_t sub_1000926E8()
{
  unint64_t result = qword_100151318;
  if (!qword_100151318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151318);
  }
  return result;
}

unint64_t sub_100092740()
{
  unint64_t result = qword_100151320;
  if (!qword_100151320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151320);
  }
  return result;
}

uint64_t sub_100092794(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100113CD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t *sub_1000929AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007E0C(&qword_10014E7B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100104888();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100103F48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    int v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
    *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
    *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
    uint64_t v18 = v17[7];
    int v19 = &v14[v18];
    int v20 = &v15[v18];
    uint64_t v21 = sub_100104918();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100007E0C(&qword_10014E6D8);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v14[v17[8]] = v15[v17[8]];
    v14[v17[9]] = v15[v17[9]];
  }
  return a1;
}

uint64_t sub_100092CC0(uint64_t a1, uint64_t a2)
{
  sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100104888();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100103F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 28);
  uint64_t v10 = sub_100104918();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void *sub_100092EAC(void *a1, void *a2, uint64_t a3)
{
  sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100104888();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100103F48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)&v13[v15[5]];
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)&v13[v15[6]];
  uint64_t v16 = v15[7];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_100104918();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v12[v15[8]] = v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  return a1;
}

void *sub_100093170(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E7B8);
    sub_100007E0C(&qword_10014E7B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100104888();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100012510((uint64_t)a1 + v7, &qword_10014E6D0);
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100103F48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v26 = a1;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)&v13[v15[5]];
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)&v13[v15[6]];
  uint64_t v16 = v15[7];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_100104918();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    uint64_t v24 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_15:
  uint64_t result = v26;
  v12[v15[8]] = v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  return result;
}

char *sub_1000934CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100104888();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100103F48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
  *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
  uint64_t v18 = v17[7];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = sub_100104918();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v14[v17[8]] = v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  return a1;
}

char *sub_1000937A0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E7B8);
    uint64_t v6 = sub_100007E0C(&qword_10014E7B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100104888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100012510((uint64_t)&a1[v8], &qword_10014E6D0);
    uint64_t v11 = sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100103F48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v28 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
  *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
  uint64_t v18 = v17[7];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = sub_100104918();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_13;
  }
  if (v25)
  {
LABEL_13:
    uint64_t v26 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_14:
  uint64_t result = v28;
  v14[v17[8]] = v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  return result;
}

uint64_t sub_100093B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100093B20);
}

uint64_t sub_100093B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014F9E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_100093C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100093C88);
}

uint64_t sub_100093C88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014F9E8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for StreaksWidgetView()
{
  uint64_t result = qword_100151380;
  if (!qword_100151380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100093E34()
{
  sub_100093F70(319, &qword_10014FA60, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_100093F70(319, (unint64_t *)&qword_10014E750, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StreaksWidgetTimelineEntry();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100093F70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100103E78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100093FC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100093FE0(char *a1, uint64_t a2)
{
  uint64_t v30 = a1;
  uint64_t v4 = sub_100007E0C(&qword_100151430);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v28 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = sub_100103F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v27 = v2;
  int v25 = v16;
  v16(v13, v2, v9);
  v24[1] = sub_1000964C4((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  sub_100105348();
  sub_1000964C4(&qword_100151438, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v26 = a2;
  char v17 = sub_100104A98() ^ 1;
  uint64_t v29 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    v25(v18, v26, v9);
    v21(v13, v20, v9);
    sub_100105378();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  uint64_t v22 = &v28[*(int *)(v29 + 48)];
  v19(v22, v18, v9);
  v19(v30, v22, v9);
  return v17 & 1;
}

uint64_t sub_1000942D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = type metadata accessor for StreaksWidgetView();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3 - 8;
  uint64_t v36 = *(void *)(v37 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100007E0C(&qword_1001513C0);
  __chkstk_darwin(v33);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100007E0C(&qword_1001513C8);
  uint64_t v13 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007E0C(&qword_1001513D0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094730((uint64_t)v12);
  swift_storeEnumTagMultiPayload();
  sub_1000B53D8((uint64_t)v7);
  sub_100096640((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  sub_100095B0C();
  sub_1001044A8();
  sub_100012510((uint64_t)v7, (uint64_t *)&unk_100151990);
  sub_100012510((uint64_t)v12, &qword_1001513C0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v35;
  sub_1000965D8(v2, v35, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
  unint64_t v22 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v23 = swift_allocObject();
  sub_100096570(v21, v23 + v22, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
  uint64_t v24 = v34;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v15, v34);
  int v25 = (uint64_t *)&v19[*(int *)(v17 + 44)];
  uint64_t *v25 = KeyPath;
  v25[1] = (uint64_t)sub_100095FB8;
  _OWORD v25[2] = v23;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);
  uint64_t v26 = v2 + *(int *)(v38 + 32);
  LOBYTE(KeyPath) = *(unsigned char *)(v26 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 36));
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = KeyPath;
  uint64_t v29 = v39;
  sub_100010808((uint64_t)v19, v39, &qword_1001513D0);
  uint64_t v30 = (uint64_t *)(v29 + *(int *)(sub_100007E0C(&qword_100151418) + 36));
  *uint64_t v30 = v27;
  v30[1] = (uint64_t)sub_100096038;
  _OWORD v30[2] = v28;
  return sub_100012510((uint64_t)v19, &qword_1001513D0);
}

uint64_t sub_100094730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v58 = type metadata accessor for StreaksWidgetView();
  __chkstk_darwin(v58);
  uint64_t v45 = (uint64_t)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100007E0C(&qword_100151440);
  __chkstk_darwin(v52);
  uint64_t v53 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100007E0C(&qword_100151408);
  __chkstk_darwin(v59);
  uint64_t v55 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  uint64_t v5 = __chkstk_darwin(v50);
  uint64_t v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v54 = (uint64_t)&v44 - v8;
  uint64_t v57 = type metadata accessor for StreaksWidgetAccessoryRectangularView();
  uint64_t v9 = __chkstk_darwin(v57);
  uint64_t v46 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v44 - v11;
  uint64_t v61 = sub_100007E0C(&qword_100151448);
  __chkstk_darwin(v61);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100007E0C(&qword_100151450);
  __chkstk_darwin(v48);
  uint64_t v51 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100007E0C(&qword_1001513E8);
  __chkstk_darwin(v62);
  uint64_t v56 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StreaksWidgetTimelineEntry();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for StreaksWidgetAccessoryCircularView();
  uint64_t v19 = __chkstk_darwin(v49);
  uint64_t v21 = (uint64_t *)((char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = sub_100104888();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v44 - v29;
  sub_1000960B4(&qword_10014E7B8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)&v44 - v29);
  uint64_t v44 = v25;
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v30, v24);
  if (v31 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_1000965D8(v1 + *(int *)(v58 + 24), (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
    *uint64_t v7 = swift_getKeyPath();
    sub_100007E0C(&qword_10014E6D0);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = v50;
    uint64_t v33 = (uint64_t *)((char *)v7 + *(int *)(v50 + 20));
    *uint64_t v33 = swift_getKeyPath();
    sub_100007E0C(&qword_10014E7C0);
    swift_storeEnumTagMultiPayload();
    sub_100096570((uint64_t)v18, (uint64_t)v7 + *(int *)(v32 + 24), (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
    uint64_t v34 = v54;
    sub_100096570((uint64_t)v7, v54, type metadata accessor for StreaksWidgetSystemSmallView);
    sub_1000965D8(v34, v53, type metadata accessor for StreaksWidgetSystemSmallView);
    swift_storeEnumTagMultiPayload();
    sub_1000964C4(&qword_100151410, (void (*)(uint64_t))type metadata accessor for StreaksWidgetSystemSmallView);
    uint64_t v35 = (uint64_t)v55;
    sub_1001041B8();
    sub_100010808(v35, (uint64_t)v13, &qword_100151408);
    swift_storeEnumTagMultiPayload();
    sub_100095B88();
    sub_100095C64();
    sub_1001041B8();
    sub_100012510(v35, &qword_100151408);
    uint64_t v36 = type metadata accessor for StreaksWidgetSystemSmallView;
    uint64_t v37 = v34;
    return sub_100096640(v37, v36);
  }
  if (v31 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    sub_1000965D8(v1 + *(int *)(v58 + 24), (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
    *uint64_t v21 = swift_getKeyPath();
    sub_100007E0C(&qword_10014E6D0);
    swift_storeEnumTagMultiPayload();
    sub_100096570((uint64_t)v18, (uint64_t)v21 + *(int *)(v49 + 20), (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
    sub_100096570((uint64_t)v21, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StreaksWidgetAccessoryCircularView);
    sub_1000965D8((uint64_t)v23, v51, (uint64_t (*)(void))type metadata accessor for StreaksWidgetAccessoryCircularView);
    swift_storeEnumTagMultiPayload();
    sub_1000964C4(&qword_1001513F0, (void (*)(uint64_t))type metadata accessor for StreaksWidgetAccessoryCircularView);
    sub_1000964C4(&qword_1001513F8, (void (*)(uint64_t))type metadata accessor for StreaksWidgetAccessoryRectangularView);
    uint64_t v38 = (uint64_t)v56;
    sub_1001041B8();
    sub_100010808(v38, (uint64_t)v13, &qword_1001513E8);
    swift_storeEnumTagMultiPayload();
    sub_100095B88();
    sub_100095C64();
    sub_1001041B8();
    sub_100012510(v38, &qword_1001513E8);
    uint64_t v39 = type metadata accessor for StreaksWidgetAccessoryCircularView;
LABEL_7:
    uint64_t v36 = (uint64_t (*)(uint64_t))v39;
    uint64_t v37 = (uint64_t)v23;
    return sub_100096640(v37, v36);
  }
  if (v31 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_1000965D8(v1 + *(int *)(v58 + 24), (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v41 = (uint64_t)v46;
    uint64_t *v46 = KeyPath;
    sub_100007E0C(&qword_10014E6D0);
    swift_storeEnumTagMultiPayload();
    sub_100096570((uint64_t)v18, v41 + *(int *)(v57 + 20), (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
    uint64_t v23 = v47;
    sub_100096570(v41, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for StreaksWidgetAccessoryRectangularView);
    sub_1000965D8((uint64_t)v23, v51, (uint64_t (*)(void))type metadata accessor for StreaksWidgetAccessoryRectangularView);
    swift_storeEnumTagMultiPayload();
    sub_1000964C4(&qword_1001513F0, (void (*)(uint64_t))type metadata accessor for StreaksWidgetAccessoryCircularView);
    sub_1000964C4(&qword_1001513F8, (void (*)(uint64_t))type metadata accessor for StreaksWidgetAccessoryRectangularView);
    uint64_t v42 = (uint64_t)v56;
    sub_1001041B8();
    sub_100010808(v42, (uint64_t)v13, &qword_1001513E8);
    swift_storeEnumTagMultiPayload();
    sub_100095B88();
    sub_100095C64();
    sub_1001041B8();
    sub_100012510(v42, &qword_1001513E8);
    uint64_t v39 = type metadata accessor for StreaksWidgetAccessoryRectangularView;
    goto LABEL_7;
  }
  sub_1000965D8(v1, v45, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
  unint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_100105498(27);
  swift_bridgeObjectRelease();
  unint64_t v63 = 0xD000000000000019;
  unint64_t v64 = 0x8000000100113D20;
  sub_1000960B4(&qword_10014E7B8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v28);
  sub_1000964C4(&qword_10014FAC8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  v65._countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v65);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v24);
  uint64_t result = sub_1001055C8();
  __break(1u);
  return result;
}

uint64_t sub_1000952B4()
{
  return sub_100104028();
}

uint64_t sub_1000952D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000963F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100095304(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v51 = sub_100103F48();
  uint64_t v62 = *(void *)(v51 - 8);
  uint64_t v3 = __chkstk_darwin(v51);
  uint64_t v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v47 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v47 - v8;
  __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v47 - v9;
  uint64_t v10 = sub_100007E0C(&qword_100151420);
  __chkstk_darwin(v10 - 8);
  uint64_t v49 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StreaksWidgetView();
  uint64_t v13 = v12 - 8;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v57 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v55 = (uint64_t)&v47 - v16;
  uint64_t v17 = sub_100104888();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = a2 + *(int *)(v13 + 32);
  uint64_t v52 = type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v53 = v24;
  int v56 = *(unsigned __int8 *)(v24 + *(int *)(v52 + 36));
  sub_1000960B4(&qword_10014E7B8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v23);
  uint64_t v54 = *(void (**)(char *, void, uint64_t))(v18 + 104);
  v54(v21, enum case for WidgetFamily.accessoryInline(_:), v17);
  sub_1000964C4(&qword_100151428, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_100104CA8();
  sub_100104CA8();
  uint64_t v26 = v63;
  uint64_t v25 = v64;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v21, v17);
  v27(v23, v17);
  uint64_t v58 = a2;
  uint64_t v28 = a2;
  uint64_t v29 = v55;
  sub_1000965D8(v28, v55, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
  if (v25 == v26)
  {
    sub_100096640(v29, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
    uint64_t v30 = v57;
    sub_1000965D8(v58, v57, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
  }
  else
  {
    sub_1000960B4(&qword_10014E7B8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v23);
    v54(v21, enum case for WidgetFamily.accessoryCircular(_:), v17);
    sub_100104CA8();
    sub_100104CA8();
    uint64_t v32 = v63;
    uint64_t v31 = v64;
    v27(v21, v17);
    v27(v23, v17);
    sub_100096640(v29, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
    uint64_t v30 = v57;
    sub_1000965D8(v58, v57, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
    if (v31 != v32)
    {
      sub_1000960B4(&qword_10014E7B8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v23);
      v54(v21, enum case for WidgetFamily.accessoryRectangular(_:), v17);
      sub_100104CA8();
      sub_100104CA8();
      uint64_t v39 = v63;
      uint64_t v38 = v64;
      v27(v21, v17);
      v27(v23, v17);
      uint64_t result = sub_100096640(v30, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
      uint64_t v35 = v61;
      uint64_t v34 = v62;
      uint64_t v37 = v59;
      uint64_t v36 = v60;
      if (v56 != 2 || v38 != v39) {
        return result;
      }
      goto LABEL_8;
    }
  }
  uint64_t result = sub_100096640(v30, (uint64_t (*)(void))type metadata accessor for StreaksWidgetView);
  uint64_t v35 = v61;
  uint64_t v34 = v62;
  uint64_t v37 = v59;
  uint64_t v36 = v60;
  if (v56 != 2) {
    return result;
  }
LABEL_8:
  if (*(unsigned char *)(v53 + *(int *)(v52 + 32)) == 1)
  {
    sub_100103F28();
    uint64_t v40 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v50, v36, v51);
    sub_1000964C4((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_100105348();
    if (sub_100105358())
    {
      uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
      v41(v37, v40);
      uint64_t v42 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v49, 1, 1, v40);
    }
    else
    {
      sub_100105368();
      uint64_t v42 = (uint64_t)v49;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v49, v37, v40);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v42, 0, 1, v40);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
    }
    v41(v35, v40);
    return sub_100012510(v42, &qword_100151420);
  }
  else
  {
    uint64_t v43 = (uint64_t)v48;
    sub_100103F28();
    uint64_t v44 = v50;
    sub_100093FE0(v50, v43);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    uint64_t v46 = v51;
    v45(v43, v51);
    return ((uint64_t (*)(char *, uint64_t))v45)(v44, v46);
  }
}

unint64_t sub_100095B0C()
{
  unint64_t result = qword_1001513D8;
  if (!qword_1001513D8)
  {
    sub_100007F30(&qword_1001513C0);
    sub_100095B88();
    sub_100095C64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001513D8);
  }
  return result;
}

unint64_t sub_100095B88()
{
  unint64_t result = qword_1001513E0;
  if (!qword_1001513E0)
  {
    sub_100007F30(&qword_1001513E8);
    sub_1000964C4(&qword_1001513F0, (void (*)(uint64_t))type metadata accessor for StreaksWidgetAccessoryCircularView);
    sub_1000964C4(&qword_1001513F8, (void (*)(uint64_t))type metadata accessor for StreaksWidgetAccessoryRectangularView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001513E0);
  }
  return result;
}

unint64_t sub_100095C64()
{
  unint64_t result = qword_100151400;
  if (!qword_100151400)
  {
    sub_100007F30(&qword_100151408);
    sub_1000964C4(&qword_100151410, (void (*)(uint64_t))type metadata accessor for StreaksWidgetSystemSmallView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151400);
  }
  return result;
}

uint64_t sub_100095D10()
{
  return sub_100104028();
}

uint64_t sub_100095D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000963F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100095D74()
{
  uint64_t v1 = type metadata accessor for StreaksWidgetView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100007E0C(&qword_10014E7B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100104888();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + *(int *)(v1 + 20);
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100103F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + *(int *)(v1 + 24);
  uint64_t v10 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v9 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 28);
  uint64_t v12 = sub_100104918();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100095FB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StreaksWidgetView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100095304(a1, v4);
}

uint64_t sub_100096028()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100096038(uint64_t a1)
{
  return sub_1000BF694(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100096040@<X0>(uint64_t a1@<X8>)
{
  return sub_1000960B4(&qword_10014E6D0, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x8000000100113D40, a1);
}

uint64_t sub_100096078@<X0>(uint64_t a1@<X8>)
{
  return sub_1000960B4(&qword_10014E7B8, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_1000960B4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_100104108();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007E0C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010808(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_100105008();
    uint64_t v21 = sub_1001042C8();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1000456B4(v27, v25, &v29);
      sub_1001052C8();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1001040F8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10009636C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000960B4(&qword_10014E7C0, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x8000000100113D60, a1);
}

uint64_t sub_1000963A4()
{
  return sub_1001040C8();
}

uint64_t sub_1000963C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000963F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_1000963F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_1000964C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009650C()
{
  return sub_1001040C8();
}

uint64_t sub_100096530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000963F4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100096570(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000965D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100096640(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000966A4()
{
  unint64_t result = qword_100151458;
  if (!qword_100151458)
  {
    sub_100007F30(&qword_100151418);
    sub_100096720();
    sub_1000967D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151458);
  }
  return result;
}

unint64_t sub_100096720()
{
  unint64_t result = qword_100151460;
  if (!qword_100151460)
  {
    sub_100007F30(&qword_1001513D0);
    sub_100007F30(&qword_1001513C0);
    sub_100095B0C();
    swift_getOpaqueTypeConformance2();
    sub_1000967D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151460);
  }
  return result;
}

unint64_t sub_1000967D0()
{
  unint64_t result = qword_100151468;
  if (!qword_100151468)
  {
    sub_100007F30(&qword_100151470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151468);
  }
  return result;
}

uint64_t sub_10009682C()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100151478);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_100151478);
  if (qword_10014BF88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F70);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

UIImage *sub_1000968F4(void *a1)
{
  CFAbsoluteTimeGetCurrent();
  if (![a1 imageOrientation]
    || ([a1 size],
        UIGraphicsBeginImageContext(v4),
        objc_msgSend(a1, "drawAtPoint:", 0.0, 0.0),
        uint64_t v2 = UIGraphicsGetImageFromCurrentImageContext(),
        UIGraphicsEndImageContext(),
        !v2))
  {
    uint64_t v2 = a1;
  }
  sub_10009699C();
  return v2;
}

void sub_10009699C()
{
  v4[1] = 0xE000000000000000;
  sub_100105498(46);
  v5._countAndFlagsBits = sub_1001059C8();
  sub_100104BE8(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x8000000100113DD0;
  v6._countAndFlagsBits = 0xD000000000000022;
  sub_100104BE8(v6);
  CFAbsoluteTimeGetCurrent();
  sub_100104E88();
  v7._countAndFlagsBits = 0x73646E6F63657320;
  v7._object = (void *)0xE800000000000000;
  sub_100104BE8(v7);
  if (qword_10014C020 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100103DB8();
  sub_100007D30(v0, (uint64_t)qword_100151478);
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100103D98();
  os_log_type_t v2 = sub_100105018();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    v4[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000456B4(0, 0xE000000000000000, v4);
    sub_1001052C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_100096BE4(double a1)
{
  sub_100007E0C(&qword_100151498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100108260;
  *(void *)(inited + 32) = kCGImageSourceShouldCache;
  *(unsigned char *)(inited + 40) = 1;
  CFStringRef v3 = (id)kCGImageSourceShouldCache;
  sub_10000AE88(inited);
  type metadata accessor for CFString(0);
  sub_100097980();
  v4.super.Class isa = sub_1001049A8().super.isa;
  swift_bridgeObjectRelease();
  sub_100103788(v5);
  CFURLRef v7 = v6;
  uint64_t v8 = CGImageSourceCreateWithURL(v6, v4.super.isa);

  if (!v8)
  {
    if (qword_10014C020 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100103DB8();
    sub_100007D30(v19, (uint64_t)qword_100151478);
    os_log_type_t v20 = sub_100103D98();
    os_log_type_t v21 = sub_100104FF8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v23 = sub_1001059C8();
      sub_1000456B4(v23, v24, &v30);
      sub_1001052C8();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s.createImage | Failed to create CGImageSource with URL", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }

LABEL_14:
    return 0;
  }
  sub_100007E0C(&qword_1001514A0);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_10010A7D0;
  *(void *)(v9 + 32) = kCGImageSourceCreateThumbnailFromImageAlways;
  *(unsigned char *)(v9 + 40) = 1;
  *(void *)(v9 + 64) = &type metadata for Bool;
  *(void *)(v9 + 72) = kCGImageSourceCreateThumbnailWithTransform;
  *(unsigned char *)(v9 + 80) = 1;
  uint64_t v10 = (void *)kCGImageSourceSkipMetadata;
  *(void *)(v9 + 104) = &type metadata for Bool;
  *(void *)(v9 + 112) = v10;
  *(unsigned char *)(v9 + 120) = 1;
  *(void *)(v9 + 144) = &type metadata for Bool;
  *(void *)(v9 + 152) = kCGImageSourceThumbnailMaxPixelSize;
  *(void *)(v9 + 184) = &type metadata for CGFloat;
  *(double *)(v9 + 160) = a1;
  CFStringRef v11 = (id)kCGImageSourceCreateThumbnailFromImageAlways;
  CFStringRef v12 = (id)kCGImageSourceCreateThumbnailWithTransform;
  id v13 = v10;
  CFStringRef v14 = (id)kCGImageSourceThumbnailMaxPixelSize;
  sub_10000AF88(v9);
  v15.super.Class isa = sub_1001049A8().super.isa;
  swift_bridgeObjectRelease();
  ThumbnailAtIndeCGFloat x = CGImageSourceCreateThumbnailAtIndex(v8, 0, v15.super.isa);
  if (!ThumbnailAtIndex)
  {
    if (qword_10014C020 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_100103DB8();
    sub_100007D30(v25, (uint64_t)qword_100151478);
    uint64_t v26 = sub_100103D98();
    os_log_type_t v27 = sub_100104FF8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Image downsample failed.", v28, 2u);
      swift_slowDealloc();

      return 0;
    }

    goto LABEL_14;
  }
  CGImageRef v17 = ThumbnailAtIndex;
  id v18 = [objc_allocWithZone((Class)UIImage) initWithCGImage:ThumbnailAtIndex];

  return v18;
}

uint64_t sub_100097018(double a1)
{
  *(void *)(v2 + 136) = v1;
  *(double *)(v2 + 128) = a1;
  uint64_t v3 = sub_100103D08();
  *(void *)(v2 + 144) = v3;
  *(void *)(v2 + 152) = *(void *)(v3 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v4 = sub_100103DB8();
  *(void *)(v2 + 176) = v4;
  *(void *)(v2 + 184) = *(void *)(v4 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v5 = sub_100103D38();
  *(void *)(v2 + 200) = v5;
  *(void *)(v2 + 208) = *(void *)(v5 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  return _swift_task_switch(sub_1000971A4, 0, 0);
}

uint64_t sub_1000971A4()
{
  if (qword_10014C020 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = sub_100007D30(v3, (uint64_t)qword_100151478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_100103D18();
  sub_100103CF8();
  uint64_t v5 = sub_100103D28();
  os_signpost_type_t v6 = sub_100105118();
  if (sub_100105258())
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, *(void *)(v0 + 168), v8);
    CFStringRef v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CFStringRef v11 = 0;
    os_signpost_id_t v12 = sub_100103CE8();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, v6, v12, "createThumbnail", "", v11, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);

    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 152);
  CGImageRef v17 = *(void **)(v0 + 136);
  v10(*(void *)(v0 + 160), v14, v15);
  sub_100103D78();
  swift_allocObject();
  *(void *)(v0 + 224) = sub_100103D68();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  [v17 size];
  double v18 = *(double *)(v0 + 128);
  BOOL v21 = v20 < v19;
  double v22 = v20 / v19 * v18;
  double v23 = v19 / v20 * v18;
  if (v21) {
    double v24 = *(double *)(v0 + 128);
  }
  else {
    double v24 = v22;
  }
  if (v21) {
    double v25 = v23;
  }
  else {
    double v25 = *(double *)(v0 + 128);
  }
  uint64_t v26 = *(void **)(v0 + 136);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_10009749C;
  uint64_t v27 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1000A5360;
  *(void *)(v0 + 104) = &unk_10013C210;
  *(void *)(v0 + 112) = v27;
  [v26 prepareThumbnailOfSize:v0 + 80 completionHandler:v25, v24];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10009749C()
{
  return _swift_task_switch(sub_10009757C, 0, 0);
}

uint64_t sub_10009757C()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[15];
  sub_100097660(v1, "createThumbnail", 15, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_100097660(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v26 = a2;
  uint64_t v5 = sub_100103D48();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100103D08();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_signpost_id_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_100103D28();
  sub_100103D58();
  int v24 = sub_100105108();
  uint64_t result = sub_100105258();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    CGImageRef v17 = v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v26 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  CGImageRef v17 = &v27;
LABEL_10:
  swift_retain();
  sub_100103D88();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    double v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    double v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  double v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)double v20 = 0;
  os_signpost_id_t v21 = sub_100103CE8();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v17, v19, v20, 2u);
  swift_slowDealloc();

  double v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

char *sub_100097970()
{
  return &v1;
}

unint64_t sub_100097980()
{
  unint64_t result = qword_10014C478;
  if (!qword_10014C478)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C478);
  }
  return result;
}

id sub_1000979D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16PlaceholderAssetCMa();
  return [super dealloc];
}

uint64_t sub_100097A10()
{
  return _s16PlaceholderAssetCMa();
}

uint64_t _s16PlaceholderAssetCMa()
{
  uint64_t result = qword_1001514D0;
  if (!qword_1001514D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100097A64()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100097A9C()
{
  uint64_t result = sub_100103F98();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_100104868();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100097BA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v25 = sub_100103F98();
  uint64_t v5 = *(void *)(v25 - 8);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v5 + 64) + v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = sub_100104868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v8 | *(unsigned char *)(v5 + 80) | *(unsigned char *)(v12 + 80));
  if (v15 <= 7
    && ((v14 + (v9 & ~(unint64_t)v8)) & ~v13) + *(void *)(*(void *)(v11 - 8) + 64) <= 0x18
    && ((v8 | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v12 + 80)) & 0x100000) == 0)
  {
    unint64_t v19 = ~(unint64_t)v8;
    uint64_t v20 = ~v13;
    uint64_t v24 = v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v25);
    unint64_t v21 = ((unint64_t)a1 + v9) & v19;
    unint64_t v22 = ((unint64_t)a2 + v9) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v21, v22, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v21 + v14) & v20, (v22 + v14) & v20, v24);
  }
  else
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return a1;
}

uint64_t sub_100097DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103F98();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  uint64_t v10 = *(void *)(v8 + 56);
  uint64_t v11 = sub_100104868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
  uint64_t v14 = v11;
  unint64_t v15 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);

  return v13(v15, v14);
}

uint64_t sub_100097EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103F98();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 48);
  uint64_t v16 = sub_100104868();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_100097FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103F98();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 40);
  uint64_t v16 = sub_100104868();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 24))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_1000980E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103F98();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 32);
  uint64_t v16 = sub_100104868();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_1000981F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103F98();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 24);
  uint64_t v16 = sub_100104868();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 40))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_100098300(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_100103F98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = sub_100104868();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v10 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  if (*(_DWORD *)(v14 + 84) <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v14 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(void *)(v7 + 64) + v15;
  if (a2 <= v18) {
    goto LABEL_27;
  }
  uint64_t v20 = ((v16 + v17 + (v19 & ~v15)) & ~v17) + *(void *)(*(void *)(v13 - 8) + 64);
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_10;
  }
  unsigned int v23 = ((a2 - v18 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    int v22 = *(_DWORD *)((char *)a1 + v20);
    if (!v22) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v23 > 0xFF)
  {
    int v22 = *(unsigned __int16 *)((char *)a1 + v20);
    if (!*(unsigned __int16 *)((char *)a1 + v20)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v23 >= 2)
  {
LABEL_10:
    int v22 = *((unsigned __int8 *)a1 + v20);
    if (!*((unsigned char *)a1 + v20)) {
      goto LABEL_27;
    }
LABEL_17:
    int v24 = (v22 - 1) << v21;
    if (v20 > 3) {
      int v24 = 0;
    }
    if (v20)
    {
      if (v20 <= 3) {
        int v25 = v20;
      }
      else {
        int v25 = 4;
      }
      switch(v25)
      {
        case 2:
          int v26 = *a1;
          break;
        case 3:
          int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v26 = *(_DWORD *)a1;
          break;
        default:
          int v26 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v26 = 0;
    }
    return v18 + (v26 | v24) + 1;
  }
LABEL_27:
  if (!v18) {
    return 0;
  }
  if (v8 == v18)
  {
    uint64_t v27 = v34;
    uint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v29 = a1;
    uint64_t v30 = v8;
LABEL_33:
    return v28(v29, v30, v27);
  }
  uint64_t v29 = (unsigned __int16 *)(((unint64_t)a1 + v19) & ~v15);
  if (v11 == v18)
  {
    uint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v30 = v11;
    uint64_t v27 = v9;
    goto LABEL_33;
  }
  unint64_t v32 = ((unint64_t)v29 + v16 + v17) & ~v17;
  uint64_t v33 = *(uint64_t (**)(unint64_t))(v14 + 48);

  return v33(v32);
}

void sub_100098634(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_100103F98();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v36 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(v36 - 8);
  uint64_t v38 = v11;
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v10) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(void *)(sub_100104868() - 8);
  uint64_t v15 = v14;
  if (*(_DWORD *)(v14 + 84) <= v13) {
    unsigned int v16 = v13;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = *(void *)(v9 + 64) + v17;
  uint64_t v19 = *(void *)(v11 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v14 + 80);
  size_t v21 = ((v19 + v20 + (v18 & ~v17)) & ~v20) + *(void *)(v14 + 64);
  if (a3 <= v16)
  {
    int v23 = 0;
    int v22 = a1;
  }
  else
  {
    int v22 = a1;
    if (v21 <= 3)
    {
      unsigned int v27 = ((a3 - v16 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v27))
      {
        int v23 = 4;
      }
      else if (v27 >= 0x100)
      {
        int v23 = 2;
      }
      else
      {
        int v23 = v27 > 1;
      }
    }
    else
    {
      int v23 = 1;
    }
  }
  if (v16 < a2)
  {
    unsigned int v24 = ~v16 + a2;
    if (v21 < 4)
    {
      int v25 = (v24 >> (8 * v21)) + 1;
      if (v21)
      {
        int v28 = v24 & ~(-1 << (8 * v21));
        bzero(v22, v21);
        if (v21 == 3)
        {
          *(_WORD *)int v22 = v28;
          v22[2] = BYTE2(v28);
        }
        else if (v21 == 2)
        {
          *(_WORD *)int v22 = v28;
        }
        else
        {
          *int v22 = v28;
        }
      }
    }
    else
    {
      bzero(v22, v21);
      *(_DWORD *)int v22 = v24;
      int v25 = 1;
    }
    switch(v23)
    {
      case 1:
        v22[v21] = v25;
        return;
      case 2:
        *(_WORD *)&v22[v21] = v25;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&v22[v21] = v25;
        return;
      default:
        return;
    }
  }
  uint64_t v26 = ~v17;
  switch(v23)
  {
    case 1:
      v22[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&v22[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1000989E4);
    case 4:
      *(_DWORD *)&v22[v21] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v10 == v16)
      {
        uint64_t v29 = v37;
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v31 = v22;
        uint64_t v32 = a2;
        uint64_t v33 = v10;
LABEL_31:
        v30(v31, v32, v33, v29);
        return;
      }
      uint64_t v31 = (unsigned char *)((unint64_t)&v22[v18] & v26);
      if (v12 == v16)
      {
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
        uint64_t v32 = a2;
        uint64_t v33 = v12;
        uint64_t v29 = v36;
        goto LABEL_31;
      }
      unint64_t v34 = (unint64_t)&v31[v19 + v20] & ~v20;
      uint64_t v35 = *(void (**)(unint64_t, uint64_t))(v15 + 56);
      v35(v34, a2);
      return;
  }
}

uint64_t type metadata accessor for CTABackgroundModifier()
{
  return sub_10000ABE8();
}

uint64_t sub_100098A24()
{
  uint64_t result = type metadata accessor for CTABackgroundModifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100098AC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = sub_100103F98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v28 = v4;
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v29 - 8);
  int v8 = *(_DWORD *)(v5 + 80);
  uint64_t v9 = v7;
  int v10 = *(_DWORD *)(v7 + 80);
  uint64_t v11 = sub_100104868();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = (v10 | v8 | *(unsigned char *)(v12 + 80));
  uint64_t v15 = ~v14;
  uint64_t v16 = *(void *)(v5 + 64) + v10;
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v18 = v17 + v13;
  if (v14 > 7
    || ((v10 | v8 | *(_DWORD *)(v12 + 80)) & 0x100000) != 0
    || ((v14 + 1) & ~v14)
     + *(void *)(*(void *)(v11 - 8) + 64)
     + ((v17 + v13 + (v16 & ~(unint64_t)v10)) & ~v13) > 0x18)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    int v23 = (uint64_t *)(v21 + ((v14 + 16) & v15));
    swift_retain();
  }
  else
  {
    unint64_t v22 = ~(unint64_t)v10;
    uint64_t v27 = ~v13;
    int v23 = a1;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v24 = ((unint64_t)a1 + v14 + 1) & v15;
    uint64_t v25 = ((unint64_t)a2 + v14 + 1) & v15;
    uint64_t v31 = v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v24, v25, v28);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v16 + v24) & v22, (v16 + v25) & v22, v29);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v18 + ((v16 + v24) & v22)) & v27, (v18 + ((v16 + v25) & v22)) & v27, v31);
  }
  return v23;
}

uint64_t sub_100098D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103F98();
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_100104868();
  uint64_t v19 = *(void *)(v10 - 8);
  uint64_t v11 = (v9 | v6 | *(_DWORD *)(v19 + 80));
  uint64_t v12 = v9;
  uint64_t v13 = *(_DWORD *)(v19 + 80);
  uint64_t v14 = (a1 + v11 + 1) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  uint64_t v15 = (*(void *)(v5 + 64) + v12 + v14) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
  uint64_t v16 = (*(void *)(v8 + 64) + v13 + v15) & ~v13;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);

  return v17(v16, v10);
}

unsigned char *sub_100098E9C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_100103F98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_100104868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

unsigned char *sub_10009904C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_100103F98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_100104868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

unsigned char *sub_1000991FC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_100103F98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_100104868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

unsigned char *sub_1000993AC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_100103F98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_100104868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 40))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

uint64_t sub_10009955C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_100103F98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v41 = v6;
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(sub_100104868() - 8);
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v16 = v12;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v17 = *(void *)(v13 + 64);
  if (v16 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(_DWORD *)(v10 + 80);
  uint64_t v20 = v15;
  uint64_t v21 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80) | v15);
  uint64_t v22 = *(void *)(v7 + 64) + v19;
  uint64_t v23 = *(void *)(v10 + 64) + v20;
  if (a2 <= v18) {
    goto LABEL_31;
  }
  uint64_t v24 = ((v21 + 1) & ~v21) + v17 + ((v23 + (v22 & ~v19)) & ~v20);
  char v25 = 8 * v24;
  if (v24 > 3) {
    goto LABEL_13;
  }
  unsigned int v28 = ((a2 - v18 + ~(-1 << v25)) >> v25) + 1;
  if (HIWORD(v28))
  {
    int v26 = *(_DWORD *)((char *)a1 + v24);
    if (v26) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v28 <= 0xFF)
    {
      if (v28 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v26 = *((unsigned __int8 *)a1 + v24);
      if (!*((unsigned char *)a1 + v24)) {
        goto LABEL_31;
      }
LABEL_21:
      int v29 = (v26 - 1) << v25;
      if (v24 > 3) {
        int v29 = 0;
      }
      if (v24)
      {
        if (v24 <= 3) {
          int v30 = v24;
        }
        else {
          int v30 = 4;
        }
        switch(v30)
        {
          case 2:
            int v31 = *a1;
            break;
          case 3:
            int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v31 = *(_DWORD *)a1;
            break;
          default:
            int v31 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v31 = 0;
      }
      return v18 + (v31 | v29) + 1;
    }
    int v26 = *(unsigned __int16 *)((char *)a1 + v24);
    if (*(unsigned __int16 *)((char *)a1 + v24)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v16 <= 0xFE)
  {
    unsigned int v32 = *(unsigned __int8 *)a1;
    BOOL v33 = v32 >= 2;
    int v34 = (v32 + 2147483646) & 0x7FFFFFFF;
    if (v33) {
      return (v34 + 1);
    }
    else {
      return 0;
    }
  }
  uint64_t v35 = ((unint64_t)a1 + v21 + 1) & ~v21;
  if (v8 == v16)
  {
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v37 = v8;
    uint64_t v38 = v41;
    return v36(v35, v37, v38);
  }
  uint64_t v35 = (v22 + v35) & ~v19;
  if (v11 == v16)
  {
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v37 = v11;
    uint64_t v38 = v9;
    return v36(v35, v37, v38);
  }
  uint64_t v39 = (v23 + v35) & ~v20;
  uint64_t v40 = *(uint64_t (**)(uint64_t))(v14 + 48);

  return v40(v39);
}

void sub_100099918(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_100103F98();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v46 = v9;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v44 = *(void *)(a4 + 16);
  uint64_t v45 = v8;
  uint64_t v11 = *(void *)(v44 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v10) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(void *)(sub_100104868() - 8);
  uint64_t v15 = v14;
  if (*(_DWORD *)(v14 + 84) <= v13) {
    unsigned int v16 = v13;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  int v17 = *(_DWORD *)(v11 + 80);
  uint64_t v18 = *(void *)(v11 + 64);
  uint64_t v19 = *(void *)(v14 + 64);
  if (v16 <= 0xFE) {
    unsigned int v20 = 254;
  }
  else {
    unsigned int v20 = v16;
  }
  uint64_t v21 = *(_DWORD *)(v14 + 80);
  uint64_t v22 = (v17 | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v14 + 80));
  uint64_t v23 = *(void *)(v9 + 64) + *(_DWORD *)(v11 + 80);
  uint64_t v24 = v18 + v21;
  size_t v25 = ((v18 + v21 + (v23 & ~(unint64_t)*(_DWORD *)(v11 + 80))) & ~v21) + v19;
  size_t v26 = v25 + ((v22 + 1) & ~v22);
  if (a3 <= v20)
  {
    int v27 = 0;
  }
  else if (v26 <= 3)
  {
    unsigned int v31 = ((a3 - v20 + ~(-1 << (8 * v26))) >> (8 * v26)) + 1;
    if (HIWORD(v31))
    {
      int v27 = 4;
    }
    else if (v31 >= 0x100)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = v31 > 1;
    }
  }
  else
  {
    int v27 = 1;
  }
  if (v20 < a2)
  {
    unsigned int v28 = ~v20 + a2;
    if (v26 < 4)
    {
      int v29 = (v28 >> (8 * v26)) + 1;
      if (v26)
      {
        int v32 = v28 & ~(-1 << (8 * v26));
        bzero(a1, v25 + ((v22 + 1) & ~v22));
        if (v26 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v25 + ((v22 + 1) & ~v22));
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v26] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v26] = v29;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)&a1[v26] = v29;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v21;
  switch(v27)
  {
    case 1:
      a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x100099DD4);
    case 4:
      *(_DWORD *)&a1[v26] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if (v16 <= 0xFE)
      {
        *a1 = a2 + 1;
        return;
      }
      BOOL v33 = (unsigned char *)((unint64_t)&a1[v22 + 1] & ~v22);
      if (v16 < a2)
      {
        if (v25 <= 3) {
          int v34 = ~(-1 << (8 * v25));
        }
        else {
          int v34 = -1;
        }
        if (v25)
        {
          int v35 = v34 & (~v16 + a2);
          if (v25 <= 3) {
            int v36 = v25;
          }
          else {
            int v36 = 4;
          }
          bzero(v33, v25);
          switch(v36)
          {
            case 2:
              *(_WORD *)BOOL v33 = v35;
              break;
            case 3:
              *(_WORD *)BOOL v33 = v35;
              v33[2] = BYTE2(v35);
              break;
            case 4:
              *(_DWORD *)BOOL v33 = v35;
              break;
            default:
              *BOOL v33 = v35;
              break;
          }
        }
        return;
      }
      if (v10 == v16)
      {
        uint64_t v37 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
        unint64_t v38 = (unint64_t)v33;
        uint64_t v39 = a2;
        uint64_t v40 = v10;
        uint64_t v41 = v45;
LABEL_48:
        v37(v38, v39, v40, v41);
        return;
      }
      unint64_t v38 = (unint64_t)&v33[v23] & ~(unint64_t)v17;
      if (v12 == v16)
      {
        uint64_t v37 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        uint64_t v39 = a2;
        uint64_t v40 = v12;
        uint64_t v41 = v44;
        goto LABEL_48;
      }
      unint64_t v42 = (v24 + v38) & v30;
      uint64_t v43 = *(void (**)(unint64_t, uint64_t))(v15 + 56);
      v43(v42, a2);
      return;
  }
}

uint64_t type metadata accessor for WidgetCTAButtonSyle()
{
  return sub_10000ABE8();
}

uint64_t sub_100099E24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100099E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001041A8();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_1001041B8();
}

uint64_t sub_100099F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001041A8();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_1001041B8();
}

uint64_t sub_10009A058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v69 = a3;
  uint64_t v70 = a1;
  uint64_t v6 = sub_100007E0C(&qword_1001515E0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v56 = a2;
  uint64_t v53 = v9;
  uint64_t v52 = v10;
  uint64_t v11 = type metadata accessor for CTABackgroundModifier();
  uint64_t v58 = v6;
  uint64_t v54 = v11;
  uint64_t v12 = sub_100103F18();
  uint64_t v59 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v51 - v13;
  sub_100007F30(&qword_1001515E8);
  uint64_t v15 = sub_100103F18();
  uint64_t v60 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v57 = (char *)v51 - v16;
  uint64_t v17 = sub_100103F18();
  uint64_t v62 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v61 = (char *)v51 - v18;
  uint64_t v55 = v19;
  uint64_t v20 = sub_100103F18();
  uint64_t v66 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v64 = (char *)v51 - v21;
  uint64_t v67 = v22;
  uint64_t v23 = sub_100103F18();
  uint64_t v68 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v63 = (char *)v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  Swift::String v65 = (char *)v51 - v26;
  uint64_t v27 = (uint64_t)v4;
  if (*v4 == 1)
  {
    int v28 = 2;
    uint64_t v29 = sub_100104348();
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v29 = sub_100104408();
    uint64_t v31 = 0x4008000000000000;
    uint64_t v30 = sub_100104118();
    int v28 = 0;
  }
  *(void *)uint64_t v8 = sub_100104128();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  uint64_t v32 = (uint64_t)&v8[*(int *)(sub_100007E0C(&qword_1001515F0) + 44)];
  v51[1] = v29;
  sub_10009A7FC(v29, v30, v31, v28, v27, v53, v52, v32);
  uint64_t v33 = sub_100050EC4(&qword_1001515F8, &qword_1001515E0);
  sub_1001045C8();
  sub_100012510((uint64_t)v8, &qword_1001515E0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v79 = v33;
  uint64_t v80 = WitnessTable;
  uint64_t v35 = swift_getWitnessTable();
  int v36 = v57;
  sub_100104588();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
  uint64_t v37 = sub_100050EC4(&qword_100151600, &qword_1001515E8);
  uint64_t v77 = v35;
  uint64_t v78 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v61;
  sub_100104578();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v15);
  sub_1001045E8();
  sub_100104618();
  swift_release();
  uint64_t v75 = v38;
  uint64_t v76 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v40 = v55;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = v64;
  sub_1001045B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v40);
  sub_100104288();
  sub_100104798();
  uint64_t v73 = v41;
  unint64_t v74 = &protocol witness table for _ShadowEffect;
  uint64_t v43 = v67;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v63;
  sub_100104538();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v43);
  uint64_t v71 = v44;
  unint64_t v72 = &protocol witness table for _ScaleEffect;
  swift_getWitnessTable();
  uint64_t v46 = v68;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  uint64_t v48 = v65;
  v47(v65, v45, v23);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v45, v23);
  v47(v69, v48, v23);
  return ((uint64_t (*)(char *, uint64_t))v49)(v48, v23);
}

uint64_t sub_10009A7FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v98 = a7;
  uint64_t v97 = a6;
  uint64_t v99 = a5;
  int v89 = a4;
  *((void *)&v88 + 1) = a3;
  *(void *)&long long v88 = a2;
  uint64_t v87 = a1;
  uint64_t v77 = a8;
  uint64_t v76 = sub_100007E0C(&qword_100151608);
  __chkstk_darwin(v76);
  uint64_t v102 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100103F98();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  unint64_t v94 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001043C8();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100104268();
  uint64_t v14 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100007E0C(&qword_100151610);
  __chkstk_darwin(v81);
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100007E0C(&qword_100151618);
  uint64_t v86 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100007E0C(&qword_100151620);
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v80 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007E0C(&qword_100151628);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100007E0C(&qword_100151630) - 8;
  __chkstk_darwin(v82);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100007E0C(&qword_100151638);
  __chkstk_darwin(v93);
  uint64_t v90 = (uint64_t)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100007E0C(&qword_100151640);
  uint64_t v92 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v91 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100007E0C(&qword_100151648);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v101 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100007E0C(&qword_100151650);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100104278();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Font.Leading.tight(_:), v10);
  uint64_t v31 = sub_1001043E8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v78;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v78);
  uint64_t v34 = v81;
  uint64_t v35 = (uint64_t *)&v18[*(int *)(v81 + 36)];
  *uint64_t v35 = KeyPath;
  v35[1] = v31;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v33);
  uint64_t v36 = (uint64_t)v26;
  unint64_t v37 = sub_10009C124();
  uint64_t v38 = v79;
  sub_1001045A8();
  sub_100012510((uint64_t)v18, &qword_100151610);
  long long v105 = v88;
  LOBYTE(v106) = v89;
  uint64_t v103 = v34;
  unint64_t v104 = v37;
  swift_getOpaqueTypeConformance2();
  sub_10006A830();
  uint64_t v39 = v80;
  uint64_t v40 = v84;
  sub_100104508();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v38, v40);
  uint64_t v41 = sub_100104608();
  uint64_t v42 = v83;
  uint64_t v43 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v24, v39, v85);
  *(void *)&v24[*(int *)(v22 + 44)] = v41;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v43);
  LOBYTE(v41) = sub_1001042F8();
  sub_100103E08();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  sub_100010808((uint64_t)v24, v36, &qword_100151628);
  uint64_t v52 = v36 + *(int *)(v82 + 44);
  *(unsigned char *)uint64_t v52 = v41;
  *(void *)(v52 + 8) = v45;
  *(void *)(v52 + 16) = v47;
  *(void *)(v52 + 24) = v49;
  *(void *)(v52 + 32) = v51;
  *(unsigned char *)(v52 + 40) = 0;
  sub_100012510((uint64_t)v24, &qword_100151628);
  type metadata accessor for WidgetCTAButtonSyle();
  uint64_t v53 = v94;
  sub_100103F78();
  sub_100103F68();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v96);
  sub_100104718();
  sub_100103F58();
  uint64_t v54 = v90;
  sub_100010808(v36, v90, &qword_100151630);
  uint64_t v55 = v93;
  uint64_t v56 = (_OWORD *)(v54 + *(int *)(v93 + 36));
  long long v57 = v110;
  v56[4] = v109;
  v56[5] = v57;
  v56[6] = v111;
  long long v58 = v106;
  *uint64_t v56 = v105;
  v56[1] = v58;
  long long v59 = v108;
  v56[2] = v107;
  v56[3] = v59;
  sub_100012510(v36, &qword_100151630);
  uint64_t v60 = sub_10009C224(&qword_100151668, &qword_100151638, (void (*)(void))sub_10009C1F4);
  uint64_t v61 = v91;
  sub_100104518();
  sub_100012510(v54, &qword_100151638);
  uint64_t v103 = v55;
  unint64_t v104 = v60;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v63 = v101;
  uint64_t v64 = v100;
  sub_100104498();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v61, v64);
  uint64_t v65 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v66 = sub_100103F08();
  uint64_t v67 = (uint64_t)v102;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v102, v65, v66);
  sub_10009C3C4(&qword_100151690, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_100104A98();
  if (result)
  {
    uint64_t v103 = v64;
    unint64_t v104 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_100050EC4(&qword_100151698, &qword_100151608);
    uint64_t v69 = v71;
    uint64_t v70 = v75;
    sub_100104568();
    sub_100012510(v67, &qword_100151608);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v63, v70);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v72 + 32))(v77, v69, v73);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10009B4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v76 = a3;
  swift_getWitnessTable();
  uint64_t v5 = sub_1001041E8();
  sub_100007F30(&qword_1001516A0);
  uint64_t v6 = sub_100103F18();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v66 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v60 - v9;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = sub_100103F98();
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = sub_10009C3C4(&qword_1001516A8, (void (*)(uint64_t))&type metadata accessor for ButtonBorderShape);
  uint64_t v69 = v10;
  uint64_t v93 = v10;
  uint64_t v94 = v11;
  uint64_t v62 = v11;
  uint64_t v68 = v12;
  uint64_t v95 = v12;
  uint64_t v96 = v13;
  uint64_t v61 = v13;
  uint64_t v77 = sub_1001042B8();
  uint64_t v78 = v5;
  uint64_t v14 = sub_100103F18();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v63 = (char *)&v60 - v18;
  uint64_t v19 = sub_100104868();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v70 = v14;
  uint64_t v71 = v6;
  uint64_t v75 = sub_1001041C8();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v60 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v25, v3 + *(int *)(a2 + 40), v19);
  sub_100104858();
  sub_10009C3C4((unint64_t *)&qword_10014EA48, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  LOBYTE(v6) = sub_100104A98();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v23, v19);
  uint64_t v28 = ((uint64_t (*)(char *, uint64_t))v27)(v25, v19);
  if (v6)
  {
    __chkstk_darwin(v28);
    uint64_t v29 = v68;
    *(&v60 - 4) = v69;
    *(&v60 - 3) = v29;
    uint64_t v59 = v3;
    sub_100104718();
    sub_100007E0C(&qword_1001516B8);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v31 = sub_100007F30(&qword_1001516C0);
    uint64_t v32 = sub_10009C224(&qword_1001516C8, &qword_1001516C0, (void (*)(void))sub_10009C418);
    uint64_t v93 = v31;
    uint64_t v94 = v32;
    swift_getOpaqueTypeConformance2();
    uint64_t v33 = (uint64_t)v66;
    sub_1001044D8();
    uint64_t v34 = sub_100050EC4(&qword_1001516B0, &qword_1001516A0);
    uint64_t v81 = WitnessTable;
    uint64_t v82 = v34;
    uint64_t v35 = v71;
    swift_getWitnessTable();
    uint64_t v36 = v67;
    unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v38 = v65;
    v37(v65, v33, v35);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v39(v33, v35);
    v37((char *)v33, (uint64_t)v38, v35);
    uint64_t v40 = swift_getWitnessTable();
    uint64_t v79 = WitnessTable;
    uint64_t v80 = v40;
    uint64_t v41 = v70;
    swift_getWitnessTable();
    uint64_t v42 = v73;
    sub_100099F60(v33, v41, v35);
    v39(v33, v35);
    v39((uint64_t)v38, v35);
  }
  else
  {
    uint64_t v43 = swift_getWitnessTable();
    uint64_t v59 = v61;
    sub_1001044E8();
    uint64_t v44 = swift_getWitnessTable();
    uint64_t v91 = v43;
    uint64_t v92 = v44;
    uint64_t v45 = v70;
    uint64_t v72 = swift_getWitnessTable();
    uint64_t v46 = v64;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    uint64_t v48 = v63;
    v47(v63, v17, v45);
    uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
    v49(v17, v45);
    v47(v17, v48, v45);
    uint64_t v50 = sub_100050EC4(&qword_1001516B0, &qword_1001516A0);
    uint64_t v89 = v43;
    uint64_t v90 = v50;
    swift_getWitnessTable();
    uint64_t v42 = v73;
    sub_100099E68((uint64_t)v17, v45);
    v49(v17, v45);
    v49(v48, v45);
  }
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v87 = v51;
  uint64_t v88 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = sub_100050EC4(&qword_1001516B0, &qword_1001516A0);
  uint64_t v85 = v51;
  uint64_t v86 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v83 = v53;
  uint64_t v84 = v55;
  uint64_t v56 = v75;
  swift_getWitnessTable();
  uint64_t v57 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v76, v42, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v42, v56);
}

uint64_t sub_10009BE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v3 = sub_100007E0C(&qword_1001516E8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_1001516D8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100007E0C(&qword_1001516C0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001045E8();
  uint64_t v15 = sub_100103F98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v6, a1, v15);
  *(_WORD *)&v6[*(int *)(v4 + 44)] = 256;
  sub_100010808((uint64_t)v6, (uint64_t)v10 + *(int *)(v8 + 44), &qword_1001516E8);
  *uint64_t v10 = v14;
  sub_100012510((uint64_t)v6, &qword_1001516E8);
  sub_100010808((uint64_t)v10, (uint64_t)v13, &qword_1001516D8);
  *(void *)&v13[*(int *)(v11 + 36)] = 0x3FC999999999999ALL;
  sub_100012510((uint64_t)v10, &qword_1001516D8);
  sub_10009C224(&qword_1001516C8, &qword_1001516C0, (void (*)(void))sub_10009C418);
  sub_100104498();
  return sub_100012510((uint64_t)v13, &qword_1001516C0);
}

uint64_t sub_10009C0B8()
{
  return sub_100103EB8();
}

uint64_t sub_10009C0D8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10009C124()
{
  unint64_t result = qword_100151658;
  if (!qword_100151658)
  {
    sub_100007F30(&qword_100151610);
    sub_10009C3C4(&qword_100151660, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100050EC4(&qword_10014FB00, &qword_10014FB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151658);
  }
  return result;
}

uint64_t sub_10009C1F4()
{
  return sub_10009C224(&qword_100151670, &qword_100151630, (void (*)(void))sub_10009C2A0);
}

uint64_t sub_10009C224(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009C2A0()
{
  unint64_t result = qword_100151678;
  if (!qword_100151678)
  {
    sub_100007F30(&qword_100151628);
    sub_100007F30(&qword_100151618);
    sub_100007F30(&qword_100151610);
    sub_10009C124();
    swift_getOpaqueTypeConformance2();
    sub_10006A830();
    swift_getOpaqueTypeConformance2();
    sub_100050EC4(&qword_100151680, &qword_100151688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151678);
  }
  return result;
}

uint64_t sub_10009C3C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009C40C@<X0>(uint64_t a1@<X8>)
{
  return sub_10009BE78(*(void *)(v1 + 32), a1);
}

unint64_t sub_10009C418()
{
  unint64_t result = qword_1001516D0;
  if (!qword_1001516D0)
  {
    sub_100007F30(&qword_1001516D8);
    sub_100050EC4(&qword_1001516E0, &qword_1001516E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001516D0);
  }
  return result;
}

uint64_t sub_10009C4B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10009C69C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10009C880@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v3 - 8);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1001039D8();
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_100151790);
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptViewModelSegment();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_10009D8C0();
  uint64_t v13 = (uint64_t)v40;
  sub_100105958();
  if (v13) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v40 = a1;
  uint64_t v33 = v10;
  uint64_t v34 = v12;
  uint64_t v14 = v36;
  uint64_t v15 = v39;
  char v44 = 0;
  sub_10009DA34(&qword_10014D690);
  uint64_t v17 = v37;
  uint64_t v16 = (uint64_t)v38;
  sub_1001056B8();
  uint64_t v19 = v15;
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v17);
  uint64_t v21 = v9;
  if (v20 == 1)
  {
    sub_1001039C8();
    sub_10009D914(v16);
    uint64_t v22 = v6;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v23(v6, v16, v17);
    uint64_t v22 = v6;
  }
  uint64_t v24 = (uint64_t)v34;
  v23(v34, (uint64_t)v22, v17);
  char v43 = 1;
  uint64_t v25 = sub_1001056C8();
  uint64_t v26 = v33;
  uint64_t v27 = (uint64_t *)(v24 + *(int *)(v33 + 20));
  *uint64_t v27 = v25;
  v27[1] = v28;
  char v42 = 2;
  sub_1001056D8();
  *(void *)(v24 + *(int *)(v26 + 24)) = v29;
  char v41 = 3;
  sub_1001056D8();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v7);
  *(void *)(v24 + *(int *)(v26 + 28)) = v31;
  sub_10009D974(v24, v14);
  sub_1000121EC((uint64_t)v40);
  return sub_10009D9D8(v24);
}

uint64_t sub_10009CD10(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_1001517A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_10009D8C0();
  sub_100105968();
  v8[15] = 0;
  sub_1001039D8();
  sub_10009DA34(&qword_10014D6B8);
  sub_1001057A8();
  if (!v1)
  {
    type metadata accessor for TranscriptViewModelSegment();
    v8[14] = 1;
    sub_100105778();
    v8[13] = 2;
    sub_100105788();
    v8[12] = 3;
    sub_100105788();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10009CF10()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10009CF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10009DD28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10009CFB8(uint64_t a1)
{
  unint64_t v2 = sub_10009D8C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10009CFF4(uint64_t a1)
{
  unint64_t v2 = sub_10009D8C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10009D030@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10009C880(a1, a2);
}

uint64_t sub_10009D048(void *a1)
{
  return sub_10009CD10(a1);
}

BOOL static TranscriptionState.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TranscriptionState.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TranscriptionState.hashValue.getter(char a1)
{
  return sub_100105928();
}

unint64_t sub_10009D0E8()
{
  unint64_t result = qword_1001516F0;
  if (!qword_1001516F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001516F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009D208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptionState()
{
  return &type metadata for TranscriptionState;
}

uint64_t *sub_10009D240(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001039D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10009D32C(uint64_t a1)
{
  uint64_t v2 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009D3A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10009D440(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10009D4F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10009D584(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001039D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10009D624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009D638);
}

uint64_t sub_10009D638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10009D6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009D710);
}

uint64_t sub_10009D710(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001039D8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptViewModelSegment()
{
  uint64_t result = qword_100151750;
  if (!qword_100151750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009D81C()
{
  uint64_t result = sub_1001039D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10009D8C0()
{
  unint64_t result = qword_100151798;
  if (!qword_100151798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151798);
  }
  return result;
}

uint64_t sub_10009D914(uint64_t a1)
{
  uint64_t v2 = sub_100007E0C(&qword_10014DD70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009D974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009D9D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptViewModelSegment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009DA34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001039D8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_10009DA78(uint64_t a1, uint64_t a2)
{
  if ((sub_1001039A8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for TranscriptViewModelSegment();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_1001057F8(), BOOL result = 0, (v10 & 1) != 0))
  {
    if (*(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])) {
      return *(double *)(a1 + v4[7]) == *(double *)(a2 + v4[7]);
    }
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptViewModelSegment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *BOOL result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009DBE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewModelSegment.CodingKeys()
{
  return &type metadata for TranscriptViewModelSegment.CodingKeys;
}

unint64_t sub_10009DC24()
{
  unint64_t result = qword_1001517A8;
  if (!qword_1001517A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001517A8);
  }
  return result;
}

unint64_t sub_10009DC7C()
{
  unint64_t result = qword_1001517B0;
  if (!qword_1001517B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001517B0);
  }
  return result;
}

unint64_t sub_10009DCD4()
{
  unint64_t result = qword_1001517B8;
  if (!qword_1001517B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001517B8);
  }
  return result;
}

uint64_t sub_10009DD28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t type metadata accessor for SuggestionSheetConstants()
{
  return self;
}

void *sub_10009DEEC()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO);
  id v2 = v1;
  return v1;
}

uint64_t sub_10009DF1C(uint64_t a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v3 = v2;
  sub_100007E0C(&qword_1001503F8);
  sub_100105138();

  return v5 & 1;
}

uint64_t sub_10009DFD4(uint64_t a1)
{
  return sub_10009E024(a1, (uint64_t)&unk_10013C648, (uint64_t)sub_1000A1E50, (uint64_t)&unk_10013C660);
}

uint64_t sub_10009DFFC(uint64_t a1)
{
  return sub_10009E024(a1, (uint64_t)&unk_10013C5F8, (uint64_t)sub_1000A1E48, (uint64_t)&unk_10013C610);
}

uint64_t sub_10009E024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v8 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001039D8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103478();
  if (!v23)
  {
    sub_100012510((uint64_t)aBlock, &qword_10014D818);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_100012510((uint64_t)v10, &qword_10014DD70);
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v15 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_100012510((uint64_t)v10, &qword_10014DD70);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (sub_1001039A8())
  {
    uint64_t v16 = *(void **)&v4[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_context];
    if (v16)
    {
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v4;
      uint64_t v24 = a3;
      uint64_t v25 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100062F14;
      uint64_t v23 = a4;
      uint64_t v18 = _Block_copy(aBlock);
      id v19 = v16;
      id v20 = v7;
      swift_release();
      [v19 performBlock:v18];
      _Block_release(v18);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_10009E2F4(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for ThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  return sub_1000A4EC0(v14, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_10009E388(uint64_t a1, char a2)
{
  return sub_10001F2EC(v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id, a1, 0, 1, 0, 1, a2);
}

void sub_10009E3B0()
{
  uint64_t v1 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1001039D8();
  uint64_t v4 = *(void *)(v75 - 8);
  uint64_t v5 = __chkstk_darwin(v75);
  uint64_t v71 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v74 = (uint64_t)&v64 - v8;
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v64 - v9;
  uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100103818();
  uint64_t v13 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  int v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100103708();
  uint64_t v17 = __chkstk_darwin(v16);
  id v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v22 = &_swiftEmptySetSingleton;
  uint64_t v86 = &_swiftEmptySetSingleton;
  uint64_t v87 = _swiftEmptyArrayStorage;
  uint64_t v80 = v0;
  uint64_t v23 = *(void **)&v0[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO];
  if (v23)
  {
    uint64_t v68 = v18;
    uint64_t v69 = v17;
    id v67 = v23;
    id v24 = [v67 fileAttachments];
    if (!v24)
    {
      sub_100008234(0, &qword_100151948);
      id v24 = (id)sub_100105198();
    }
    sub_1001051A8();

    sub_1001036F8();
    if (v85)
    {
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v79 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
      uint64_t v72 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v4 + 16);
      uint64_t v64 = (void (**)(uint64_t, uint64_t))(v4 + 8);
      uint64_t v77 = (void (**)(char *, uint64_t))(v13 + 8);
      uint64_t v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v76 = v12;
      do
      {
        sub_1000103D0(&v84, &v83);
        type metadata accessor for JournalEntryAssetFileAttachmentMO();
        if (swift_dynamicCast())
        {
          uint64_t v26 = v15;
          uint64_t v27 = (uint64_t)v3;
          id v28 = v82;
          if (sub_1000D138C(v28))
          {
            swift_retain();
            sub_100104D08();
            if (*(void *)(((unint64_t)v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v87 & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_100104D68();
            sub_100104D98();
            sub_100104D48();
            swift_release();
          }
          id v29 = [v28 filePath:v64];
          if (v29)
          {
            uint64_t v30 = v29;
            sub_100104B78();

            type metadata accessor for Journaling();
            sub_100058118((uint64_t)v12);
            swift_bridgeObjectRelease();
            uint64_t v31 = v12;
            uint64_t v32 = (uint64_t)v12;
            uint64_t v33 = v81;
            if ((*v25)(v31, 1, v81) != 1)
            {
              (*v79)(v15, v32, v33);
              id v34 = [self defaultManager];
              sub_1001037C8();
              NSString v35 = sub_100104B38();
              swift_bridgeObjectRelease();
              unsigned __int8 v36 = [v34 fileExistsAtPath:v35];

              if (v36)
              {
                (*v77)(v26, v33);

                id v3 = (char *)v27;
                int v15 = v26;
LABEL_23:
                uint64_t v25 = v78;
                int v12 = v76;
                goto LABEL_7;
              }
              id v37 = [v28 id];
              id v3 = (char *)v27;
              if (v37)
              {
                uint64_t v38 = v37;
                uint64_t v39 = v74;
                sub_1001039B8();

                uint64_t v40 = *v72;
                uint64_t v41 = v39;
                uint64_t v42 = v75;
                (*v72)(v27, v41, v75);
                (*v73)(v27, 0, 1, v42);
                if ((*v66)(v27, 1, v42) != 1)
                {
                  char v43 = v70;
                  uint64_t v44 = v75;
                  v40((uint64_t)v70, v27, v75);
                  uint64_t v45 = v71;
                  (*v65)(v71, v43, v44);
                  uint64_t v46 = v74;
                  sub_1000AC800(v74, v45);

                  uint64_t v47 = *v64;
                  (*v64)(v46, v44);
                  v47((uint64_t)v43, v44);
                  int v15 = v26;
                  (*v77)(v26, v81);
                  goto LABEL_23;
                }
              }
              else
              {
                (*v73)(v27, 1, 1, v75);
              }

              int v15 = v26;
              (*v77)(v26, v81);
              sub_100012510(v27, &qword_10014DD70);
              goto LABEL_23;
            }

            sub_100012510(v32, (uint64_t *)&unk_100151990);
            int v12 = (char *)v32;
          }
          else
          {
          }
        }
LABEL_7:
        sub_1001036F8();
      }
      while (v85);
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v69);

    uint64_t v22 = v86;
    uint64_t v21 = v87;
  }
  uint64_t v48 = v80;
  *(void *)&v80[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachmentIdsMissingFile] = v22;
  swift_bridgeObjectRelease();
  *(void *)((char *)v48 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachments) = v21;
  uint64_t v49 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v48) + 0x2C0))(v49);
  swift_getObjectType();
  uint64_t v50 = swift_conformsToProtocol2();
  if (v50) {
    uint64_t v51 = v50;
  }
  else {
    uint64_t v51 = 0;
  }
  if (v50) {
    uint64_t v52 = v48;
  }
  else {
    uint64_t v52 = 0;
  }
  if (v52)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = v80;
    sub_1000146EC(ObjectType, v51);
  }
  uint64_t v55 = v80;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v56 = v55;
  }
  else {
    uint64_t v56 = 0;
  }
  if (v56)
  {
    uint64_t v57 = *(void **)&v56[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO];
    if (v57)
    {
      long long v58 = v80;
      id v59 = [v57 contentType];
      if (v59)
      {
        uint64_t v60 = v59;
        uint64_t v57 = (void *)sub_100104B78();
        uint64_t v62 = v61;

LABEL_43:
        v56[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling9LinkAsset_contentType] = sub_10003E70C((uint64_t)v57, v62);

        return;
      }
      uint64_t v57 = 0;
    }
    else
    {
      uint64_t v63 = v80;
    }
    uint64_t v62 = (void *)0xE000000000000000;
    goto LABEL_43;
  }
}

uint64_t sub_10009ECE4(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a6;
  NSString v35 = a4;
  uint64_t v34 = sub_1001047C8();
  uint64_t v38 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100104808();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = &v31[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v32 = a3 & 1;
  if (a3) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = a2;
  }
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, void *))((swift_isaMask & *v7) + 0x2E0))(v18, a1, a5);
  uint64_t v21 = v20;
  uint64_t v22 = (void *)((char *)v7 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_thumbnailCacheKey);
  *uint64_t v22 = v19;
  v22[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v33;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = a7;
  *(void *)(v24 + 40) = v19;
  *(void *)(v24 + 48) = v21;
  *(unsigned char *)(v24 + 56) = a1;
  *(void *)(v24 + 64) = a2;
  *(unsigned char *)(v24 + 72) = v32;
  uint64_t v26 = v35;
  *(void *)(v24 + 80) = a5;
  *(void *)(v24 + 88) = v26;
  aBlock[4] = sub_1000A1C94;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100062F14;
  void aBlock[3] = &unk_10013C4A8;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v28 = a5;
  v26;
  sub_1001047D8();
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_1000A1CEC((unint64_t *)&qword_1001519A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007E0C(&qword_10014DA28);
  sub_10003A2AC();
  uint64_t v29 = v34;
  sub_100105388();
  sub_1001050D8();
  _Block_release(v27);
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v14, v29);
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v17, v37);
  swift_release();
  return swift_release();
}

uint64_t sub_10009F084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = *(void **)(a1 + 8);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000B7B7C(0, v7[2] + 1, 1, v7);
    uint64_t v7 = (void *)result;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_1000B7B7C((void *)(v9 > 1), v10 + 1, 1, v7);
    uint64_t v7 = (void *)result;
  }
  _OWORD v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = sub_1000A1DB8;
  v11[5] = v6;
  *(void *)(a1 + 8) = v7;
  return result;
}

void sub_10009F168(void *a1, char a2, void (*a3)(id *))
{
  uint64_t v4 = a1;
  if (a2)
  {
    id v6 = a1;
    sub_100007E0C(&qword_10014E260);
    swift_willThrowTypedImpl();
    uint64_t v4 = 0;
  }
  else
  {
    id v5 = a1;
  }
  id v6 = v4;
  a3(&v6);
}

uint64_t sub_10009F1EC(uint64_t a1)
{
  return sub_10009F25C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD000000000000023, 0x8000000100114090, &qword_1001630B8);
}

uint64_t sub_10009F224(uint64_t a1)
{
  return sub_10009F25C(a1, (void (*)(void))&static DispatchQoS.userInitiated.getter, 0xD000000000000016, 0x8000000100114040, &qword_1001630C0);
}

uint64_t sub_10009F25C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1001050A8();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100105098();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_100104808();
  __chkstk_darwin(v12 - 8);
  sub_100008234(0, (unint64_t *)&qword_10014C710);
  a2();
  sub_100105088();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = sub_1001050E8();
  *a5 = result;
  return result;
}

uint64_t sub_10009F424(uint64_t a1)
{
  return sub_10009F25C(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD000000000000024, 0x8000000100114060, &qword_1001630C8);
}

uint64_t sub_10009F45C(uint64_t a1)
{
  uint64_t v3 = sub_100103978();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151970);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v53 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  sub_100010808(a1, (uint64_t)v57, &qword_10014D818);
  if (!v58)
  {
    sub_100012510((uint64_t)v57, &qword_10014D818);
    goto LABEL_29;
  }
  _s5AssetCMa();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    char v51 = 0;
    return v51 & 1;
  }
  uint64_t v55 = v4;
  uint64_t v19 = v56;
  uint64_t ObjectType = swift_getObjectType();
  if (ObjectType != swift_getObjectType() || (sub_1001039A8() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v53 = v1;
  uint64_t v54 = v19;
  char v21 = v19[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_type];
  uint64_t v22 = sub_100055590(*((unsigned char *)v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_type));
  uint64_t v24 = v23;
  if (v22 == sub_100055590(v21) && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v26 = v54;
  }
  else
  {
    char v27 = sub_1001057F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v54;
    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
  }
  char v28 = v26[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_source];
  uint64_t v29 = sub_100055998(*((unsigned char *)v53 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_source));
  uint64_t v31 = v30;
  if (v29 == sub_100055998(v28) && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_1001057F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_22;
    }
  }
  uint64_t v34 = *(void **)((char *)v53 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_title);
  NSString v35 = *(void **)&v54[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_title];
  if (!v34)
  {
    if (!v35) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (!v35
    || (sub_100008234(0, (unint64_t *)&unk_100151980),
        id v36 = v35,
        id v37 = v34,
        char v38 = sub_100105218(),
        v37,
        v36,
        (v38 & 1) == 0))
  {
LABEL_22:

    goto LABEL_29;
  }
LABEL_17:
  uint64_t v39 = (uint64_t)v53 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_100010808(v39, (uint64_t)v18, (uint64_t *)&unk_100151950);
  uint64_t v40 = &v54[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_suggestionDate];
  swift_beginAccess();
  sub_100010808((uint64_t)v40, (uint64_t)v16, (uint64_t *)&unk_100151950);
  uint64_t v41 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100010808((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_100151950);
  sub_100010808((uint64_t)v16, v41, (uint64_t *)&unk_100151950);
  uint64_t v42 = v55;
  char v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v43((uint64_t)v9, 1, v3) != 1)
  {
    sub_100010808((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_100151950);
    uint64_t v46 = v42;
    if (v43(v41, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v6, v41, v3);
      sub_1000A1CEC(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
      char v47 = sub_100104A98();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v48(v6, v3);
      sub_100012510((uint64_t)v16, (uint64_t *)&unk_100151950);
      sub_100012510((uint64_t)v18, (uint64_t *)&unk_100151950);
      v48(v13, v3);
      uint64_t v45 = sub_100012510((uint64_t)v9, (uint64_t *)&unk_100151950);
      uint64_t v19 = v54;
      if (v47) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    sub_100012510((uint64_t)v16, (uint64_t *)&unk_100151950);
    sub_100012510((uint64_t)v18, (uint64_t *)&unk_100151950);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v3);
    uint64_t v19 = v54;
    goto LABEL_25;
  }
  sub_100012510((uint64_t)v16, (uint64_t *)&unk_100151950);
  sub_100012510((uint64_t)v18, (uint64_t *)&unk_100151950);
  unsigned int v44 = v43(v41, 1, v3);
  uint64_t v19 = v54;
  if (v44 != 1)
  {
LABEL_25:
    sub_100012510((uint64_t)v9, (uint64_t *)&unk_100151970);
LABEL_28:

    goto LABEL_29;
  }
  uint64_t v45 = sub_100012510((uint64_t)v9, (uint64_t *)&unk_100151950);
LABEL_27:
  char v49 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v53) + 0x200))(v45);
  char v50 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v19) + 0x200))();

  char v51 = v49 ^ v50 ^ 1;
  return v51 & 1;
}

Swift::Int sub_10009FBD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100103978();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100105938();
  sub_1001039D8();
  sub_1000A1CEC((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_1001049F8();
  sub_100055590(*(unsigned char *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_type));
  sub_100104BC8();
  swift_bridgeObjectRelease();
  sub_100055998(*(unsigned char *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_source));
  sub_100104BC8();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_title);
  if (v9)
  {
    sub_1001058F8(1u);
    id v10 = v9;
    sub_100105228();
  }
  else
  {
    sub_1001058F8(0);
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_100010808(v11, (uint64_t)v8, (uint64_t *)&unk_100151950);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1001058F8(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1001058F8(1u);
    sub_1000A1CEC((unint64_t *)&unk_100151960, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001049F8();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  long long v21 = v16;
  long long v22 = v17;
  uint64_t v23 = v18;
  long long v19 = v14;
  long long v20 = v15;
  return sub_100105918();
}

uint64_t sub_10009FEFC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO);
  if (v3) {
    uint64_t result = (uint64_t)[v3 isSlim];
  }
  else {
    uint64_t result = 2;
  }
  *a2 = result;
  return result;
}

id sub_10009FF4C(void *a1)
{
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v3 - 8);
  uint64_t v94 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_10014DD70);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v103 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v91 - v9;
  __chkstk_darwin(v8);
  uint64_t v95 = (char *)&v91 - v10;
  uint64_t v11 = sub_1001039D8();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v93 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_sourceAttachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachmentIdsMissingFile] = &_swiftEmptySetSingleton;
  uint64_t v14 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_context;
  *(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_context] = 0;
  uint64_t v15 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO;
  *(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO] = 0;
  uint64_t v96 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_title;
  *(void *)&v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_title] = 0;
  long long v106 = *(void (**)(void))(v12 + 56);
  uint64_t v97 = &v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_suggestionId];
  v106();
  long long v16 = &v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_suggestionDate];
  uint64_t v17 = sub_100103978();
  uint64_t v18 = *(void *)(v17 - 8);
  long long v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v101 = v17;
  uint64_t v102 = (uint64_t)v16;
  uint64_t v99 = v18 + 56;
  uint64_t v100 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v16, 1, 1);
  long long v20 = &v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachmentsDirectoryPath];
  *long long v20 = 0;
  v20[1] = 0;
  long long v21 = &v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachmentsDirectoryURL];
  uint64_t v22 = sub_100103818();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = &v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_thumbnailCacheKey];
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v98 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_isHidden;
  v1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_isHidden] = 0;
  uint64_t v24 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_delegates;
  uint64_t v25 = self;
  uint64_t v26 = v1;
  *(void *)&v1[v24] = [v25 weakObjectsHashTable];
  char v27 = &v26[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_didUpdate];
  *(void *)char v27 = 0;
  *((void *)v27 + 1) = 0;
  char v28 = v26;
  uint64_t v29 = &v26[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_didUpdateMediaFile];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  id v30 = [a1 managedObjectContext];
  uint64_t v31 = *(void **)&v1[v14];
  *(void *)&v1[v14] = v30;

  uint64_t v32 = *(void **)&v1[v15];
  *(void *)&v1[v15] = a1;
  id v33 = a1;

  uint64_t v104 = v15;
  uint64_t v105 = v11;
  uint64_t v34 = *(void **)&v1[v15];
  if (!v34)
  {
    uint64_t v35 = (uint64_t)v95;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v106)(v95, 1, 1, v11);
    uint64_t v44 = v11;
    uint64_t v41 = v33;
    uint64_t v42 = v26;
    uint64_t v45 = v104;
    uint64_t v46 = v93;
LABEL_7:
    sub_1001039C8();
    sub_100012510(v35, &qword_10014DD70);
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v42[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id], v46, v44);
    goto LABEL_9;
  }
  uint64_t v35 = (uint64_t)v95;
  id v36 = [v34 id];
  if (v36)
  {
    id v37 = v36;
    char v38 = v92;
    sub_1001039B8();

    uint64_t v39 = v38;
    uint64_t v40 = 0;
    uint64_t v41 = v33;
    uint64_t v42 = v28;
    char v43 = v106;
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v41 = v33;
    uint64_t v42 = v26;
    char v43 = v106;
    uint64_t v39 = v92;
  }
  uint64_t v46 = v93;
  uint64_t v47 = (uint64_t)v39;
  uint64_t v44 = v105;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v43)(v39, v40, 1, v105);
  sub_1000A1EAC(v47, v35);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v35, 1, v44);
  uint64_t v45 = v104;
  if (v48 == 1) {
    goto LABEL_7;
  }
  char v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  v49(v46, v35, v105);
  uint64_t v44 = v105;
  v49(&v42[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id], (uint64_t)v46, v105);
LABEL_9:
  char v50 = *(void **)&v1[v45];
  if (v50)
  {
    id v51 = [v50 assetType];
    if (v51)
    {
      uint64_t v52 = v51;
      sub_100104B78();
    }
    uint64_t v53 = (uint64_t)v94;
    uint64_t v45 = v104;
  }
  else
  {
    uint64_t v53 = (uint64_t)v94;
  }
  char v54 = sub_10005761C();
  if (v54 == 21) {
    char v55 = 20;
  }
  else {
    char v55 = v54;
  }
  v42[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_type] = v55;
  uint64_t v56 = *(void **)&v1[v45];
  if (v56)
  {
    id v57 = [v56 title];
    if (v57)
    {
      uint64_t v58 = sub_100103848();
      unint64_t v60 = v59;

      id v57 = sub_100056B04(v58, v60);
      unint64_t v61 = v60;
      uint64_t v44 = v105;
      sub_100010378(v58, v61);
    }
  }
  else
  {
    id v57 = 0;
  }
  uint64_t v62 = *(void **)&v1[v96];
  *(void *)&v1[v96] = v57;

  uint64_t v63 = *(void **)&v1[v45];
  if (v63)
  {
    id v64 = [v63 source];
    uint64_t v65 = (uint64_t)v103;
    if (v64)
    {
      uint64_t v66 = v64;
      uint64_t v67 = sub_100104B78();
      uint64_t v69 = v68;
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v69 = (void *)0xE000000000000000;
    }
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v69 = (void *)0xE000000000000000;
    uint64_t v65 = (uint64_t)v103;
  }
  char v70 = sub_100057670(v67, v69);
  if (v70 == 10) {
    char v71 = 9;
  }
  else {
    char v71 = v70;
  }
  v42[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_source] = v71;
  id v72 = [v41 suggestionId];
  if (v72)
  {
    uint64_t v73 = v72;
    sub_1001039B8();

    uint64_t v74 = 0;
  }
  else
  {
    uint64_t v74 = 1;
  }
  uint64_t v75 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v106)(v65, v74, 1, v44);
  uint64_t v76 = (uint64_t)v97;
  swift_beginAccess();
  sub_10004103C(v65, v76, &qword_10014DD70);
  swift_endAccess();
  id v77 = [v41 suggestionDate];
  if (v77)
  {
    uint64_t v78 = v77;
    sub_100103938();

    uint64_t v75 = 0;
  }
  v100(v53, v75, 1, v101);
  uint64_t v79 = v102;
  swift_beginAccess();
  sub_10004103C(v53, v79, (uint64_t *)&unk_100151950);
  swift_endAccess();
  unsigned __int8 v80 = [v41 isHidden];
  v1[v98] = v80;

  uint64_t v81 = (objc_class *)_s5AssetCMa();
  v107.receiver = v42;
  v107.super_class = v81;
  id v82 = [super init];
  sub_10009E3B0();
  long long v83 = self;
  id v84 = [v83 defaultCenter];
  uint64_t v85 = qword_10014BFB0;
  id v86 = v82;
  if (v85 != -1) {
    swift_once();
  }
  [v84 addObserver:v86 selector:"assetUpdatedNotificationWithNotification:" name:qword_100162FD8 object:0];

  id v87 = [v83 defaultCenter];
  uint64_t v88 = qword_10014BFB8;
  id v89 = v86;
  if (v88 != -1) {
    swift_once();
  }
  [v87 addObserver:v89 selector:"mediaFileUpdatedNotificationWithNotification:" name:qword_100162FE0 object:0];

  return v89;
}

id sub_1000A0840()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_thumbnailCacheKey + 8];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_thumbnailCacheKey];
    swift_bridgeObjectRetain();
    _s20JournalWidgetsSecure17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(v2, v1, 0);
    swift_bridgeObjectRelease();
  }
  sub_100062520(1);
  id v3 = [self defaultCenter];
  [v3 removeObserver:v0];

  v5.receiver = v0;
  v5.super_class = (Class)_s5AssetCMa();
  return [super dealloc];
}

uint64_t sub_1000A0AA0()
{
  return _s5AssetCMa();
}

uint64_t _s5AssetCMa()
{
  uint64_t result = qword_1001518B8;
  if (!qword_1001518B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000A0AF4(uint64_t a1)
{
  sub_10009E3B0();
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_delegates), "allObjects"));
  unint64_t v3 = sub_100104D28();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_18;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = sub_1001054D8();
    }
    else
    {
      uint64_t v6 = *(void *)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    swift_getObjectType();
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    }
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_didUpdate);
  if (v11)
  {
    uint64_t v12 = swift_retain();
    v11(v12);
    sub_10003A1EC((uint64_t)v11);
  }
}

void sub_1000A0CD0(uint64_t a1)
{
  sub_10009E3B0();
  id v2 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_didUpdateMediaFile);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_10003A1EC((uint64_t)v2);
  }
}

uint64_t sub_1000A0D58(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_100103498();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103468();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1000A0E48(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v65 = a7;
  unsigned int v64 = a6;
  uint64_t v15 = sub_100104808();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  long long v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  long long v21 = &v58[-v20];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a2();
    return;
  }
  uint64_t v23 = (void *)Strong;
  uint64_t v66 = a3;
  uint64_t v67 = a2;
  if (qword_10014BEC0 != -1) {
    swift_once();
  }
  id v24 = sub_1000A310C(a4, a5);
  id v25 = [v24 imageByPreparingForDisplay];

  if (v25)
  {
    id v26 = v25;
    ((void (*)(id))v67)(v25);

    return;
  }
  int v27 = a8 & 1;
  uint64_t v63 = a10;
  char v28 = (char *)_s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailjH0CSgSS_So03OS_L6_queueCtFZ_0(a4, a5);
  if (!v28)
  {
    _s20JournalWidgetsSecure17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailjH0C_So17OS_dispatch_queueCtSgSS_tFZ_0(a4, a5);
    if (!v41)
    {
      sub_1000A14C0(v23, v64, v65, a8 & 1, a4, a5, a9, (uint64_t)v67, v66);
      sub_100062520(0);

      return;
    }
    char v43 = v41;
    int v59 = v27;
    uint64_t v60 = a9;
    id v62 = v42;
    sub_1001050B8();
    uint64_t v61 = sub_1001047E8();
    uint64_t v44 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
    v44(v21, v15);
    sub_1001050B8();
    uint64_t v45 = sub_1001047E8();
    v44(v19, v15);
    uint64_t v46 = v67;
    if (v61 >= v45)
    {
      unint64_t v47 = *(void *)&v43[qword_100151B10];
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_1001055E8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v49 = *(void *)((char *)v23 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachments);
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = v67;
        uint64_t v57 = sub_1001055E8();
        swift_bridgeObjectRelease();
        if (v48 == v57) {
          goto LABEL_20;
        }
      }
      else if (v48 == *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_20:
        uint64_t v50 = swift_allocObject();
        uint64_t v51 = v66;
        *(void *)(v50 + 16) = v46;
        *(void *)(v50 + 24) = v51;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = sub_1000A1D6C;
        *(void *)(v52 + 24) = v50;
        __chkstk_darwin(v52);
        uint64_t v54 = (uint64_t)&v53[4];
        char v55 = v53 + 10;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v55);
        sub_1000A1D9C(v54);
        os_unfair_lock_unlock(v55);
        swift_release();

        goto LABEL_13;
      }
    }
    sub_1000A14C0(v23, v64, v65, v59, a4, a5, v60, (uint64_t)v46, v66);

    return;
  }
  uint64_t v29 = v28;
  char v30 = v27;
  unint64_t v31 = *(void *)&v28[qword_100151B10];
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1001055E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v33 = v67;
  unint64_t v34 = *(void *)((char *)v23 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachments);
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    id v33 = v67;
    uint64_t v56 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (v32 == v56) {
      goto LABEL_12;
    }
  }
  else if (v32 == *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v66;
    *(void *)(v35 + 16) = v33;
    *(void *)(v35 + 24) = v36;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1000A1F14;
    *(void *)(v37 + 24) = v35;
    __chkstk_darwin(v37);
    uint64_t v39 = (uint64_t)&v38[4];
    uint64_t v40 = v38 + 10;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_1000A1F3C(v39);
    os_unfair_lock_unlock(v40);

    swift_release();
LABEL_13:
    swift_release();
    return;
  }
  sub_1000A14C0(v23, v64, v65, v30, a4, a5, a9, (uint64_t)v33, v66);
}

void sub_1000A14C0(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))((swift_isaMask & *a1)
                                                                                               + 0x2D8))(a2, a3, a4 & 1, a5, a6, a7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a8;
  *(void *)(v11 + 24) = a9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000A1F14;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = *(os_unfair_lock_s **)&v10[qword_10014E258];
  uint64_t v14 = (uint64_t)&v13[4];
  uint64_t v15 = v13 + 10;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_1000A1F3C(v14);
  os_unfair_lock_unlock(v15);
  swift_release();
  swift_release();
  sub_100008234(0, &qword_10014C330);
  if (qword_10014C028 != -1) {
    swift_once();
  }
  if (sub_100105218())
  {
    [v10 setQualityOfService:9];
  }
  else
  {
    if (qword_10014C030 != -1) {
      swift_once();
    }
    if (sub_100105218())
    {
      uint64_t v16 = v10;
      uint64_t v17 = -1;
    }
    else
    {
      uint64_t v16 = v10;
      uint64_t v17 = 25;
    }
    [v16 setQualityOfService:v17];
  }
  _s20JournalWidgetsSecure17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0G14CacheOperationC_So03OS_I6_queueCtFZ_0((uint64_t)v10);
}

void sub_1000A172C()
{
  sub_1001039D8();
  if (v0 <= 0x3F)
  {
    sub_1000A1918(319, (unint64_t *)&qword_10014DD38, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      sub_1000A1918(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        sub_1000A1918(319, (unint64_t *)&qword_10014CE18, (void (*)(uint64_t))&type metadata accessor for URL);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1000A1918(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100105278();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000A196C(void *a1, void *a2)
{
  return static UUID.< infix(_:_:)(*a1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id, *a2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_id);
}

id sub_1000A1994(uint64_t a1)
{
  uint64_t v3 = sub_100103708();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 dataAttachments];
  if (!v7)
  {
    sub_100008234(0, &qword_100151948);
    id v7 = (id)sub_100105198();
  }
  sub_1001051A8();

  sub_1001036F8();
  while (v14)
  {
    sub_1000103D0(&v13, &v12);
    type metadata accessor for JournalEntryAssetAttachmentMO();
    if (swift_dynamicCast())
    {
      id v8 = v11;
      if ((int)[v11 index] == a1) {
        goto LABEL_11;
      }
    }
    sub_1001036F8();
  }
  id v8 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_1000A1BBC()
{
  return sub_1000A1CEC(&qword_100151940, (void (*)(uint64_t))_s5AssetCMa);
}

uint64_t sub_1000A1C04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A1C3C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_1000A1C94()
{
  sub_1000A0E48(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1000A1CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A1CE4()
{
  return swift_release();
}

uint64_t sub_1000A1CEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A1D34()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A1D6C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1000A1D9C(uint64_t a1)
{
  return sub_10009F084(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000A1DB8(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

void sub_1000A1DFC(uint64_t a1)
{
  sub_10009F168(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(id *))(v1 + 16));
}

uint64_t sub_1000A1E10()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000A1E48()
{
  sub_1000A0CD0(*(void *)(v0 + 16));
}

void sub_1000A1E50()
{
  sub_1000A0AF4(*(void *)(v0 + 16));
}

uint64_t sub_1000A1E58@<X0>(unsigned char *a1@<X8>)
{
  char v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO);
  if (v3) {
    uint64_t result = (uint64_t)[v3 isSlim];
  }
  else {
    uint64_t result = 2;
  }
  *a1 = result;
  return result;
}

uint64_t sub_1000A1EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014DD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A1F3C(uint64_t a1)
{
  return sub_1000A1D9C(a1);
}

id sub_1000A1F5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12UnknownAssetCMa();
  return [super dealloc];
}

uint64_t sub_1000A1F94()
{
  return _s12UnknownAssetCMa();
}

uint64_t _s12UnknownAssetCMa()
{
  uint64_t result = qword_1001519E0;
  if (!qword_1001519E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A1FE8()
{
  return swift_deallocClassInstance();
}

uint64_t _s17MOLocationShifterCMa()
{
  return self;
}

ValueMetadata *type metadata accessor for StreaksHomeScreenWidget()
{
  return &type metadata for StreaksHomeScreenWidget;
}

ValueMetadata *type metadata accessor for StreaksLockScreenWidget()
{
  return &type metadata for StreaksLockScreenWidget;
}

uint64_t sub_1000A2064()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A2080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v34 = sub_100007E0C(&qword_10014C218);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  char v30 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100007E0C(&qword_10014C210);
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  unint64_t v31 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007E0C(&qword_10014C228);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014C220);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StreaksWidgetView();
  sub_1000A2CC8();
  sub_1000A2D80();
  sub_1001048B8();
  if (qword_10014BFE0 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_100163040;
  char v38 = *(void **)algn_100163048;
  uint64_t v10 = sub_100050EC4(&qword_10014C230, &qword_10014C228);
  unint64_t v11 = sub_100007F78();
  sub_100104168();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100007E0C(&qword_100151AB8);
  uint64_t v12 = sub_100104888();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100108250;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v16 + v15, enum case for WidgetFamily.accessoryCircular(_:), v12);
  v18(v17 + v14, enum case for WidgetFamily.accessoryRectangular(_:), v12);
  if (qword_10014BFD8 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_100163030;
  uint64_t v42 = *(void *)algn_100163038;
  uint64_t v37 = v3;
  char v38 = &type metadata for String;
  uint64_t v39 = v10;
  unint64_t v40 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v29;
  uint64_t v20 = v30;
  sub_100104198();
  uint64_t v37 = v21;
  char v38 = &type metadata for String;
  uint64_t v39 = OpaqueTypeConformance2;
  unint64_t v40 = v11;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v31;
  uint64_t v24 = v34;
  sub_100104178();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v24);
  uint64_t v37 = v24;
  char v38 = (void *)v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v35;
  sub_100104188();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v25);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v21);
}

uint64_t sub_1000A2628()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A2644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v31 = sub_100007E0C(&qword_10014C248);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v27 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100007E0C(&qword_10014C240);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v28 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007E0C(&qword_10014C258);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014C250);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StreaksWidgetView();
  sub_1000A2CC8();
  sub_1000A2D20();
  sub_1001048F8();
  if (qword_10014BFE8 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_100163050;
  uint64_t v35 = *(void **)algn_100163058;
  uint64_t v10 = sub_100050EC4(&qword_10014C260, &qword_10014C258);
  unint64_t v11 = sub_100007F78();
  sub_100104168();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100007E0C(&qword_100151AB8);
  uint64_t v12 = sub_100104888();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100108260;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, enum case for WidgetFamily.systemSmall(_:), v12);
  if (qword_10014BFD8 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_100163030;
  uint64_t v39 = *(void *)algn_100163038;
  uint64_t v34 = v3;
  uint64_t v35 = &type metadata for String;
  uint64_t v36 = v10;
  unint64_t v37 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v26;
  unint64_t v17 = v27;
  sub_100104198();
  uint64_t v34 = v18;
  uint64_t v35 = &type metadata for String;
  uint64_t v36 = OpaqueTypeConformance2;
  unint64_t v37 = v11;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v28;
  uint64_t v21 = v31;
  sub_100104178();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v21);
  uint64_t v34 = v21;
  uint64_t v35 = (void *)v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v32;
  sub_100104188();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v22);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v18);
}

uint64_t sub_1000A2BC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StreaksWidgetTimelineEntry();
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005CFF4(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E7B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for StreaksWidgetView();
  uint64_t v8 = (uint64_t *)((char *)a2 + *(int *)(v7 + 20));
  *uint64_t v8 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E6D0);
  swift_storeEnumTagMultiPayload();
  return sub_10005D0FC((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 24));
}

unint64_t sub_1000A2CC8()
{
  unint64_t result = qword_100151AA8;
  if (!qword_100151AA8)
  {
    type metadata accessor for StreaksWidgetView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151AA8);
  }
  return result;
}

unint64_t sub_1000A2D20()
{
  unint64_t result = qword_100151AB0;
  if (!qword_100151AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151AB0);
  }
  return result;
}

unint64_t sub_1000A2D80()
{
  unint64_t result = qword_100151AC0;
  if (!qword_100151AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151AC0);
  }
  return result;
}

uint64_t sub_1000A2DD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A2F24()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1000A30B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CommonTransitions();
  return [super dealloc];
}

uint64_t type metadata accessor for CommonTransitions()
{
  return self;
}

id sub_1000A310C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103728();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100103818();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v23 - v13;
  sub_1000B300C((uint64_t)v12);
  v23[0] = a1;
  v23[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_100007F78();
  sub_100103808();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  id v16 = [self defaultManager];
  sub_1001037C8();
  NSString v17 = sub_100104B38();
  swift_bridgeObjectRelease();
  unsigned int v18 = [v16 fileExistsAtPath:v17];

  if (v18)
  {
    sub_100103718();
    id v19 = objc_allocWithZone((Class)UIImage);
    NSString v20 = sub_100104B38();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithContentsOfFile:v20];

    v15(v14, v8);
  }
  else
  {
    v15(v14, v8);
    return 0;
  }
  return v21;
}

uint64_t sub_1000A33DC()
{
  v1[6] = v0;
  uint64_t v2 = sub_100103D48();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_100105148();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = sub_100103D08();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_1000A3570, 0, 0);
}

uint64_t sub_1000A3570()
{
  v0[18] = qword_100151B50;
  sub_100103CF8();
  uint64_t v1 = sub_100103D28();
  os_signpost_type_t v2 = sub_100105118();
  if (sub_100105258())
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v7 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v3, v0[17], v4);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    os_signpost_id_t v9 = sub_100103CE8();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v9, "Image attachment loading", "", v8, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v10 = v0[14];

    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v7 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[14];
  v0[19] = v6;
  v0[20] = v7;
  v6(v11, v12, v13);
  sub_100103D78();
  swift_allocObject();
  v0[21] = sub_100103D68();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[22] = v15;
  v0[23] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v12, v13);
  if (qword_10014BEC0 != -1) {
    swift_once();
  }
  id v16 = (uint64_t *)(v0[6] + qword_100151B00);
  uint64_t v17 = *v16;
  v0[24] = *v16;
  uint64_t v18 = v16[1];
  v0[25] = v18;
  id v19 = sub_1000A310C(v17, v18);
  NSString v20 = (UIImage *)[v19 imageByPreparingForDisplay];

  if (v20)
  {
    id v21 = sub_100103D98();
    os_log_type_t v22 = sub_100105018();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cache hit.", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  id v25 = sub_1000A56E0();
  uint64_t v26 = v0[6];
  if (v25)
  {
    uint64_t v27 = v25;
    sub_1000A4CE0();
    NSString v20 = sub_1000968F4(v27);
    switch(*(unsigned char *)(v26 + qword_100151B30))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v42 = sub_1001057F8();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          sub_1000B2A44(v20, v17, v18);
        }
        break;
    }
    char v43 = sub_100103D98();
    os_log_type_t v44 = sub_100105018();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Image file attachment found.", v45, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  if (sub_100055590(*(unsigned char *)(v26 + qword_100151B08)) == 0x6F746F6870 && v28 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v29 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      id v46 = (id)v0[6];
      unint64_t v47 = sub_100103D98();
      os_log_type_t v48 = sub_100104FF8();
      BOOL v49 = os_log_type_enabled(v47, v48);
      uint64_t v50 = (char *)v0[6];
      if (v49)
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 134217984;
        unint64_t v52 = *(void *)&v50[qword_100151B10];
        if (v52 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = sub_1001055E8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v54 = (void *)v0[6];
        v0[4] = v53;
        sub_1001052C8();

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "did not find image file attachment, attachments.count=%ld", v51, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      NSString v20 = 0;
      uint64_t v24 = v0[6];
      goto LABEL_45;
    }
  }
  v0[26] = qword_100151B48;
  uint64_t v30 = sub_100103D98();
  os_log_type_t v31 = sub_100105018();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Will try to get image from Core Data (legacy support)", v32, 2u);
    swift_slowDealloc();
  }
  uint64_t v33 = v0[6];

  uint64_t v34 = *(void **)(v33 + qword_100151B28);
  v0[27] = v34;
  if (!v34)
  {
    uint64_t v39 = sub_100103D98();
    os_log_type_t v40 = sub_100104FF8();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "context is nil", v41, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];
    goto LABEL_38;
  }
  uint64_t v35 = *(void **)(v0[6] + qword_100151B20);
  v0[28] = v35;
  if (!v35)
  {
    uint64_t v39 = v34;
    char v55 = sub_100103D98();
    os_log_type_t v56 = sub_100104FF8();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "assetID is nil", v57, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

LABEL_38:
    NSString v20 = 0;
LABEL_45:
    sub_1000A53BC(v24, (unint64_t)"Image attachment loading", 24, 2);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v65 = (uint64_t (*)(UIImage *))v0[1];
    return v65(v20);
  }
  id v36 = v34;
  id v37 = v35;
  if ([v36 concurrencyType] == (id)1)
  {
    id v38 = v36;
  }
  else
  {
    id v38 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
    [v38 setParentContext:v36];
  }
  v0[29] = v38;
  uint64_t v58 = (void *)v0[6];
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[10]);
  int v59 = (void *)swift_allocObject();
  v0[30] = v59;
  v59[2] = v38;
  v59[3] = v37;
  v59[4] = v58;
  id v60 = v37;
  v38;
  id v61 = v58;
  id v62 = (void *)swift_task_alloc();
  v0[31] = v62;
  uint64_t v63 = sub_100007E0C(&qword_10014CC08);
  *id v62 = v0;
  v62[1] = sub_1000A3EF0;
  uint64_t v64 = v0[12];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v64, sub_1000A62B8, v59, v63);
}

uint64_t sub_1000A3EF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1000A4064, 0, 0);
}

uint64_t sub_1000A4064()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v4 = *(void **)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 48);

    uint64_t v6 = v5;
LABEL_24:
    sub_1000A53BC(v6, (unint64_t)"Image attachment loading", 24, 2);
    uint64_t v11 = 0;
    goto LABEL_25;
  }
  id v7 = objc_allocWithZone((Class)UIImage);
  sub_10001030C(v2, v1);
  Class isa = sub_100103838().super.isa;
  id v9 = [v7 initWithData:isa];
  sub_100010364(v2, v1);

  if (!v9)
  {
    sub_10001030C(v2, v1);
    uint64_t v12 = sub_100103D98();
    uint64_t v13 = sub_100104FF8();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      uint64_t v15 = v14;
      uint64_t v16 = 0;
      switch(v1 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v2) - v2;
          if (__OFSUB__(HIDWORD(v2), v2))
          {
            __break(1u);
LABEL_29:
            __break(1u);
            JUMPOUT(0x1000A4648);
          }
          uint64_t v16 = (int)v16;
LABEL_22:
          id v37 = *(void **)(v0 + 224);
          id v36 = *(void **)(v0 + 232);
          id v38 = *(void **)(v0 + 216);
          *(void *)(v0 + 40) = v16;
          sub_1001052C8();
          sub_100010364(v2, v1);
          _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v13, "can't create image from data (size: %{bytes}ld)", v15, 0xCu);
          swift_slowDealloc();

          sub_100010364(v2, v1);
          break;
        case 2uLL:
          uint64_t v34 = *(void *)(v2 + 16);
          uint64_t v33 = *(void *)(v2 + 24);
          BOOL v35 = __OFSUB__(v33, v34);
          uint64_t v16 = v33 - v34;
          if (!v35) {
            goto LABEL_22;
          }
          goto LABEL_29;
        case 3uLL:
          goto LABEL_22;
        default:
          uint64_t v16 = BYTE6(v1);
          goto LABEL_22;
      }
    }
    else
    {
      uint64_t v17 = *(void **)(v0 + 224);
      uint64_t v18 = *(void **)(v0 + 216);

      sub_100010364(v2, v1);
      sub_100010364(v2, v1);
    }
    uint64_t v6 = *(void *)(v0 + 48);
    goto LABEL_24;
  }
  uint64_t v10 = *(void *)(v0 + 48);
  sub_1000A4CE0();
  uint64_t v11 = sub_1000968F4(v9);
  switch(*(unsigned char *)(v10 + qword_100151B30))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v19 = sub_1001057F8();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        sub_1000B2A44(v11, *(void *)(v0 + 192), *(void *)(v0 + 200));
      }
      break;
  }
  NSString v20 = (void *)(v0 + 120);
  id v21 = sub_100103D28();
  sub_100103D58();
  os_signpost_type_t v22 = sub_100105108();
  if (sub_100105258())
  {
    os_signpost_type_t v47 = v22;
    uint64_t v24 = *(void *)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v25 = *(void *)(v0 + 56);
    swift_retain();
    sub_100103D88();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v26 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
      uint64_t v26 = "";
    }
    format = (char *)v26;
    NSString v20 = (void *)(v0 + 128);
    char v43 = *(void **)(v0 + 224);
    os_log_type_t v44 = *(void **)(v0 + 232);
    uint64_t v45 = *(void **)(v0 + 216);
    id v46 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v42 = *(void *)(v0 + 104);
    (*(void (**)(void, uint64_t))(v0 + 152))(*(void *)(v0 + 128), v29);
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = sub_100103CE8();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v47, v31, "Image attachment loading", format, v30, 2u);
    swift_slowDealloc();

    sub_100010364(v2, v1);
    v46(v29, v42);
  }
  else
  {
    uint64_t v27 = *(void **)(v0 + 224);
    uint64_t v28 = *(void **)(v0 + 216);

    sub_100010364(v2, v1);
  }
  uint64_t v32 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 176))(*v20, *(void *)(v0 + 104));
  sub_1000A53BC(v32, (unint64_t)"Image attachment loading", 24, 2);
LABEL_25:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(UIImage *))(v0 + 8);
  return v39(v11);
}

uint64_t ThumbnailCacheOperation.main@Sendable ()()
{
  *(void *)(v1 + 128) = v0;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *v0) + 0xF0) + **(int **)((swift_isaMask & *v0) + 0xF0));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v2;
  void *v2 = v1;
  v2[1] = sub_1000A4778;
  return v4();
}

uint64_t sub_1000A4778(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A4878, 0, 0);
}

uint64_t sub_1000A4878()
{
  uint64_t v13 = v0;
  sub_100104E78();
  uint64_t v1 = *(os_unfair_lock_s **)(v0[16] + qword_10014E258);
  uint64_t v2 = (void *)swift_task_alloc();
  void *v2 = sub_1000A4CE0();
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_100049F90;
  *(void *)(v4 + 24) = KeyPath;
  uint64_t v5 = (unsigned __int8 *)&v1[4];
  v1 += 10;
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_1000A60B4(v5, v12);
  os_unfair_lock_unlock(v1);
  char v6 = v12[0];
  swift_release_n();
  swift_task_dealloc();
  id v7 = (void *)v0[18];
  if ((v6 & 1) != 0 || !v7)
  {
    id v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = v0[18];
    return v9(v10);
  }
  else
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1000A4AD8;
    uint64_t v8 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1000A5360;
    v0[13] = &unk_10013C6C8;
    v0[14] = v8;
    [v7 prepareForDisplayWithCompletionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_1000A4AD8()
{
  return _swift_task_switch(sub_1000A4BB8, 0, 0);
}

uint64_t sub_1000A4BB8()
{
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = *(void **)(v0 + 144);
  if (v1)
  {

    uint64_t v2 = v1;
  }
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000A4C30()
{
  sub_100007F30(&qword_10014E260);
  sub_100105948();
  swift_getFunctionTypeMetadata1();
  sub_100104DD8();

  return swift_getWitnessTable();
}

uint64_t sub_1000A4CC8()
{
  return 8;
}

void *sub_1000A4CD4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1000A4CE0()
{
  unint64_t result = qword_100151AF8;
  if (!qword_100151AF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100151AF8);
  }
  return result;
}

uint64_t sub_1000A4D20(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1000A4DB0;
  return ThumbnailCacheOperation.main@Sendable ()();
}

uint64_t sub_1000A4DB0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  char v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

id sub_1000A4EC0(unsigned char *a1, int a2, uint64_t a3, int a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  uint64_t v41 = a3;
  uint64_t v42 = a5;
  LODWORD(v43) = a4;
  int v40 = a2;
  uint64_t v12 = sub_100103D38();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  __chkstk_darwin(v12);
  uint64_t v45 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = sub_100103DB8();
  uint64_t v14 = *(void *)(v44 - 8);
  uint64_t v15 = __chkstk_darwin(v44);
  uint64_t v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  char v19 = &v39[-v18];
  v8[qword_100151B08] = a1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_type];
  *(void *)&v8[qword_100151B10] = *(void *)&a1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_attachments];
  *(void *)&v8[qword_100151B18] = *(void *)&a1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_sourceAttachments];
  NSString v20 = *(void **)&a1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO];
  id v21 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20) {
    id v22 = [v20 objectID];
  }
  else {
    id v22 = 0;
  }
  *(void *)&v8[qword_100151B20] = v22;
  uint64_t v23 = *(void **)&a1[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_context];
  *(void *)&v8[qword_100151B28] = v23;
  v8[qword_100151B30] = v40;
  uint64_t v24 = &v8[qword_100151B38];
  uint64_t v25 = v42;
  *(void *)uint64_t v24 = v41;
  v24[8] = v43 & 1;
  uint64_t v26 = (uint64_t *)&v8[qword_100151B00];
  *uint64_t v26 = v25;
  v26[1] = (uint64_t)a6;
  *(void *)&v8[qword_100151B40] = a7;
  unint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  id v27 = v23;
  swift_bridgeObjectRetain();
  id v43 = a7;
  sub_100105498(26);
  swift_bridgeObjectRelease();
  unint64_t v49 = 0xD000000000000018;
  unint64_t v50 = 0x80000001001142B0;
  v51._countAndFlagsBits = v25;
  v51._object = a6;
  sub_100104BE8(v51);
  swift_bridgeObjectRelease();
  id v28 = [self mainBundle];
  id v29 = [v28 bundleIdentifier];

  if (v29)
  {
    sub_100104B78();
  }
  sub_100103DA8();
  uint64_t v30 = &v8[qword_100151B48];
  uint64_t v31 = v44;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(&v8[qword_100151B48], v19, v44);
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v17, v30, v31);
  uint64_t v32 = v45;
  sub_100103D18();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(&v8[qword_100151B50], v32, v47);

  uint64_t v33 = (objc_class *)type metadata accessor for ThumbnailCacheOperation();
  v48.receiver = v8;
  v48.super_class = v33;
  id v34 = [super init];
  BOOL v35 = sub_100103D98();
  os_log_type_t v36 = sub_100104FE8();
  if (os_log_type_enabled(v35, v36))
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Initialized", v37, 2u);
    swift_slowDealloc();
  }

  return v34;
}

uint64_t sub_1000A5360(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_1000A6CB8((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t sub_1000A53BC(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_100103D48();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100103D08();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_100103D28();
  sub_100103D58();
  int v24 = sub_100105108();
  if ((sub_100105258() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_100097970();
LABEL_10:
  swift_retain();
  sub_100103D88();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    char v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    char v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  NSString v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)NSString v20 = 0;
  os_signpost_id_t v21 = sub_100103CE8();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  id v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

id sub_1000A56E0()
{
  uint64_t v1 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100103818();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v32 - v9;
  id v11 = v0;
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000A62D8(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  if (!v13) {
    return 0;
  }
  sub_1000CF538(v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    switch(*((unsigned char *)v11 + qword_100151B30))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v14 = sub_1001057F8();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0
          || (sub_100073A54(),
              double v16 = v15,
              id v17 = [self mainScreen],
              [v17 scale],
              double v19 = v18,
              v17,
              (id v20 = sub_1000BDD40(v16 * v19)) == 0))
        {
LABEL_9:
          sub_1001037B8(1);
          id v22 = objc_allocWithZone((Class)UIImage);
          NSString v23 = sub_100104B38();
          swift_bridgeObjectRelease();
          id v21 = [v22 initWithContentsOfFile:v23 cache:1];

          if (!v21)
          {
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
            int v24 = sub_100103D98();
            os_log_type_t v25 = sub_100104FF8();
            if (os_log_type_enabled(v24, v25))
            {
              unint64_t v26 = (uint8_t *)swift_slowAlloc();
              uint64_t v33 = swift_slowAlloc();
              uint64_t v35 = v33;
              *(_DWORD *)unint64_t v26 = 136315138;
              v32[1] = v26 + 4;
              sub_1000A6C60();
              uint64_t v27 = sub_1001057C8();
              uint64_t v34 = sub_1000456B4(v27, v28, &v35);
              sub_1001052C8();
              swift_bridgeObjectRelease();
              id v29 = *(void (**)(char *, uint64_t))(v5 + 8);
              v29(v8, v4);
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "getImageStoredInFile can't create image from %s", v26, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_release();
              v29(v10, v4);
            }
            else
            {
              swift_release();
              uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
              v30(v8, v4);

              v30(v10, v4);
            }
            return 0;
          }
        }
        else
        {
          id v21 = v20;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        swift_release();
        return v21;
    }
  }
  swift_release();
  sub_100012510((uint64_t)v3, (uint64_t *)&unk_100151990);
  return 0;
}

void sub_1000A5C28(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  type metadata accessor for JournalEntryAssetMO();
  if (!swift_dynamicCastClass())
  {

    char v14 = sub_100103D98();
    os_log_type_t v15 = sub_100104FF8();
    if (os_log_type_enabled(v14, v15))
    {
      double v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to retrieve assetMO based on NSManagedObjectID", v16, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  id v5 = sub_1000A1994(0);
  if (!v5 || (uint64_t v6 = v5, v7 = [v5 data], v6, !v7))
  {
    id v11 = sub_100103D98();
    os_log_type_t v12 = sub_100105018();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "data attachment [0] is nil", v13, 2u);
      swift_slowDealloc();
    }

LABEL_11:
    uint64_t v8 = 0;
    unint64_t v10 = 0xF000000000000000;
    goto LABEL_12;
  }
  uint64_t v8 = sub_100103848();
  unint64_t v10 = v9;

LABEL_12:
  *a3 = v8;
  a3[1] = v10;
}

void ThumbnailCacheOperation.init()()
{
}

void sub_1000A5E20()
{
}

uint64_t sub_1000A5E50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + qword_100151B48;
  uint64_t v2 = sub_100103DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_100151B50;
  uint64_t v4 = sub_100103D38();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

id ThumbnailCacheOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThumbnailCacheOperation();
  return [super dealloc];
}

uint64_t sub_1000A5F9C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = a1 + qword_100151B48;
  uint64_t v3 = sub_100103DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_100151B50;
  uint64_t v5 = sub_100103D38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1000A60B4@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for ThumbnailCacheOperation()
{
  uint64_t result = qword_100151B80;
  if (!qword_100151B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A614C()
{
  uint64_t result = sub_100103DB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100103D38();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1000A6268()
{
  return type metadata accessor for ThumbnailCacheOperation();
}

uint64_t sub_1000A6270()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000A62B8(uint64_t *a1@<X8>)
{
  sub_1000A5C28(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000A62D8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007E0C(&qword_10014DA48);
  __chkstk_darwin(v6 - 8);
  id v61 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100103CC8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v60 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v63 = &v50[-v12];
  uint64_t v64 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v13 = __chkstk_darwin(v64);
  char v71 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v73 = &v50[-v15];
  uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151990);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  int v59 = &v50[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v68 = &v50[-v19];
  uint64_t v76 = sub_100103818();
  uint64_t v20 = *(void *)(v76 - 8);
  uint64_t v21 = __chkstk_darwin(v76);
  char v55 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v67 = &v50[-v23];
  uint64_t v78 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v24 = __chkstk_darwin(v78);
  uint64_t v69 = (id *)&v50[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v27 = (id *)&v50[-v26];
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v28)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v58 = v8;
    uint64_t v54 = v3;
    unint64_t v77 = a1 & 0xC000000000000001;
    uint64_t v74 = *(void *)(a2 + qword_100151B38);
    int v75 = *(unsigned __int8 *)(a2 + qword_100151B38 + 8);
    char v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    uint64_t v65 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v66 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v53 = (void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32);
    unint64_t v52 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
    os_log_type_t v56 = (void (**)(unsigned char *, uint64_t))(v20 + 8);
    uint64_t v8 = 4;
    unint64_t v62 = a1;
    uint64_t v29 = (uint64_t)v71;
LABEL_7:
    uint64_t v20 = v28;
    a2 = v8 - 4;
    if (v77) {
      break;
    }
    uint64_t v9 = *(void *)(a1 + 8 * v8);
    swift_retain();
    uint64_t v3 = v8 - 3;
    if (!__OFADD__(a2, 1)) {
      goto LABEL_12;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1001055E8();
    if (!v28) {
      goto LABEL_41;
    }
  }
  uint64_t v9 = sub_1001054D8();
  uint64_t v3 = v8 - 3;
  if (__OFADD__(a2, 1)) {
    goto LABEL_39;
  }
LABEL_12:
  uint64_t v30 = v9 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType;
  sub_10003A5C4(v9 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, (uint64_t)v27, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (v75) {
        goto LABEL_38;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      sub_10003A504((uint64_t)v27);
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v32 = v30;
      uint64_t v33 = v69;
      sub_10003A5C4(v32, (uint64_t)v69, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t)v33;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v36 = (uint64_t)v68;
          uint64_t v37 = v76;
          (*v65)((uint64_t)v68, 1, 1, v76);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v35 = (uint64_t)v33 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
          goto LABEL_22;
        default:
LABEL_22:
          id v38 = v73;
          sub_10003A560(v35, (uint64_t)v73);
          sub_10003A5C4((uint64_t)v38, v29, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v39 = v29;
            uint64_t v36 = (uint64_t)v68;
            uint64_t v37 = v76;
            (*v66)(v68, v39, v76);
            uint64_t v40 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v41 = v59;
            sub_100058118((uint64_t)v59);
            swift_bridgeObjectRelease();
            uint64_t v37 = v76;
            if ((*v70)((uint64_t)v41, 1, v76) == 1)
            {
              sub_100012510((uint64_t)v41, (uint64_t *)&unk_100151990);
              uint64_t v40 = 1;
              a1 = v62;
              uint64_t v36 = (uint64_t)v68;
            }
            else
            {
              uint64_t v42 = *v66;
              id v43 = v55;
              (*v66)(v55, (uint64_t)v41, v76);
              uint64_t v44 = v68;
              v42(v68, (uint64_t)v43, v76);
              uint64_t v36 = (uint64_t)v44;
              uint64_t v37 = v76;
              uint64_t v40 = 0;
              a1 = v62;
            }
          }
          (*v65)(v36, v40, 1, v37);
          sub_10003A504((uint64_t)v73);
          break;
      }
      uint64_t v72 = (uint64_t)v27 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
      if ((*v70)(v36, 1, v37) == 1)
      {
        sub_100012510(v36, (uint64_t *)&unk_100151990);
LABEL_35:
        sub_10003A504(v72);
        swift_release();
        uint64_t v29 = (uint64_t)v71;
        goto LABEL_6;
      }
      (*v66)(v67, v36, v37);
      sub_100103738();
      swift_bridgeObjectRetain();
      uint64_t v45 = v60;
      sub_100103C78();
      uint64_t v46 = (uint64_t)v61;
      sub_100103C68();
      uint64_t v47 = v58;
      if ((*v57)(v46, 1, v58) == 1)
      {
        sub_100012510(v46, &qword_10014DA48);
        swift_bridgeObjectRelease();
        (*v56)(v67, v76);
        a1 = v62;
        goto LABEL_35;
      }
      (*v53)(v63, v46, v47);
      sub_100103C88();
      int v51 = sub_100103CB8();
      objc_super v48 = *v52;
      (*v52)(v45, v47);
      v48(v63, v47);
      swift_bridgeObjectRelease();
      (*v56)(v67, v76);
      a1 = v62;
      if ((v51 & 1) == 0) {
        goto LABEL_35;
      }
      uint64_t v29 = (uint64_t)v71;
      if ((v75 & 1) == 0)
      {
        uint64_t v31 = *(void *)(v9 + 16);
        sub_10003A504(v72);
LABEL_17:
        if (v31 == v74) {
          goto LABEL_38;
        }
LABEL_5:
        swift_release();
LABEL_6:
        ++v8;
        if (v3 == v28) {
          goto LABEL_41;
        }
        goto LABEL_7;
      }
      sub_10003A504(v72);
LABEL_38:
      swift_bridgeObjectRelease();
      return v9;
    default:
      sub_10003A504((uint64_t)v27);
      if (v75) {
        goto LABEL_38;
      }
LABEL_16:
      uint64_t v31 = *(void *)(v9 + 16);
      goto LABEL_17;
  }
}

unint64_t sub_1000A6C60()
{
  unint64_t result = qword_10014CE20;
  if (!qword_10014CE20)
  {
    sub_100103818();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014CE20);
  }
  return result;
}

uint64_t sub_1000A6CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_100151CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A6D20()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100151CD0);
  sub_100007D30(v0, (uint64_t)qword_100151CD0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A6E1C()
{
  *(void *)(v1 + 16) = v0;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1000A6EAC;
  return sub_1000A33DC();
}

uint64_t sub_1000A6EAC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A6FAC, 0, 0);
}

uint64_t sub_1000A6FAC()
{
  uint64_t v1 = v0[4];
  if (v1)
  {
LABEL_8:
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v1);
  }
  unint64_t v2 = *(void *)(v0[2] + qword_100163130);
  if (v2 < 2)
  {
    if (qword_10014C040 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_100103DB8();
    sub_100007D30(v3, (uint64_t)qword_100151CD0);
    uint64_t v4 = sub_100103D98();
    os_log_type_t v5 = sub_100104FF8();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "no visits data", v6, 2u);
      swift_slowDealloc();
    }

    goto LABEL_8;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[5] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1000A716C;
  uint64_t v10 = v0[2];
  v9[17] = v2;
  v9[18] = v10;
  return _swift_task_switch(sub_1000A7804, 0, 0);
}

uint64_t sub_1000A716C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A726C, 0, 0);
}

uint64_t sub_1000A726C()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(unsigned __int8 *)(*(void *)(v0 + 16) + qword_100151B30);
    *(unsigned char *)(v0 + 72) = v1;
    switch(v1)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = sub_1001057F8();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          uint64_t v2 = *(void *)(v0 + 48);
          goto LABEL_10;
        }
        sub_100073A54();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 56) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_1000A7498;
        uint64_t result = sub_100097018(v5 * v8);
        break;
    }
  }
  else
  {
    uint64_t v2 = 0;
LABEL_10:
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v2);
  }
  return result;
}

uint64_t sub_1000A7498(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000A7598, 0, 0);
}

uint64_t sub_1000A7598()
{
  uint64_t v1 = v0[8];
  if (v1)
  {
    char v5 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      if (qword_10014BEC0 != -1) {
        swift_once();
      }
      sub_1000B2A44(v1, *(void *)(v0[2] + qword_100151B00), *(void *)(v0[2] + qword_100151B00 + 8));
    }
  }
  else
  {
    if (qword_10014C040 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_100103DB8();
    sub_100007D30(v2, (uint64_t)qword_100151CD0);
    uint64_t v1 = sub_100103D98();
    os_log_type_t v3 = sub_100104FF8();
    if (os_log_type_enabled(v1, v3))
    {
      double v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v3, "error creating thumbnail from video preview image", v4, 2u);
      swift_slowDealloc();
    }
  }

  uint64_t v6 = v0[6];
  double v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_1000A77E4(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return _swift_task_switch(sub_1000A7804, 0, 0);
}

uint64_t sub_1000A7804()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = sub_10000FC80(v0[17]);
  v0[19] = v2;
  uint64_t v3 = *(void *)(v1 + qword_100151B40);
  double v7 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_10014CCC8 + dword_10014CCC8);
  char v4 = *(unsigned char *)(v1 + qword_100151B30);
  char v5 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v5;
  *char v5 = v0;
  v5[1] = sub_1000A78E8;
  return v7(v2, v4, v3);
}

uint64_t sub_1000A78E8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000A7A08, 0, 0);
}

uint64_t sub_1000A7A08()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000A7B2C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10005E414;
  v0[13] = &unk_10013C708;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000A7B2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1000A7CD0;
  }
  else {
    uint64_t v2 = sub_1000A7C3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000A7C3C()
{
  uint64_t v2 = (void *)v0[21];
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = (void *)v0[15];
  id v4 = [v3 image];

  char v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_1000A7CD0()
{
  swift_willThrow();
  if (qword_10014C040 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100103DB8();
  sub_100007D30(v1, (uint64_t)qword_100151CD0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100103D98();
  os_log_type_t v3 = sub_100104FF8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  char v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    uint64_t v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v9;
    sub_1001052C8();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_1000A7EF8()
{
  return sub_100071554(*(void *)(v0 + qword_100163130));
}

uint64_t sub_1000A7F14(uint64_t a1)
{
  return sub_100071554(*(void *)(a1 + qword_100163130));
}

uint64_t type metadata accessor for MultiPinMapThumbnailCacheOperation()
{
  uint64_t result = qword_100151D10;
  if (!qword_100151D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A7F7C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000A7FC0()
{
  return type metadata accessor for MultiPinMapThumbnailCacheOperation();
}

BOOL static SharedDeviceInfoProvider.isDeviceLocked()()
{
  return MKBGetDeviceLockState() == 1;
}

id SharedDeviceInfoProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDeviceInfoProvider();
  return [super init];
}

uint64_t type metadata accessor for SharedDeviceInfoProvider()
{
  return self;
}

id SharedDeviceInfoProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedDeviceInfoProvider();
  return [super dealloc];
}

double sub_1000A80B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10000B574(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_1000105E4(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double *sub_1000A811C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000C3D40(0, v1, 0);
  double result = (double *)sub_1000B221C(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  char v8 = v7 & 1;
  uint64_t v9 = a1 + 64;
  uint64_t v25 = v4;
  int64_t v26 = v1;
  uint64_t v27 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v5 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_32;
    }
    uint64_t v28 = v4;
    char v24 = v8;
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v14 = *v13;
    uint64_t v15 = (void *)v13[1];
    swift_bridgeObjectRetain();
    double result = (double *)sub_1000B2640(v14, v15);
    if (result == 12) {
      char v16 = 11;
    }
    else {
      char v16 = (char)result;
    }
    double v18 = _swiftEmptyArrayStorage[2];
    double v17 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v18 >= *(void *)&v17 >> 1) {
      double result = (double *)sub_1000C3D40(*(void *)&v17 > 1uLL, *(void *)&v18 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v18 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + *(void *)&v18) = v16;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v10) {
      goto LABEL_33;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v19 = *(void *)(v27 + 8 * v12);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(a1 + 36) != v28) {
      goto LABEL_35;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v10 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v26;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v26;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (!v23)
        {
          unint64_t v21 = v12 + 2;
          if (v12 + 2 >= v22) {
            goto LABEL_4;
          }
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (!v23)
          {
            unint64_t v21 = v12 + 3;
            if (v12 + 3 >= v22) {
              goto LABEL_4;
            }
            unint64_t v23 = *(void *)(v27 + 8 * v21);
            if (!v23)
            {
              while (v22 - 4 != v12)
              {
                unint64_t v23 = *(void *)(a1 + 96 + 8 * v12++);
                if (v23)
                {
                  double result = (double *)sub_10001C914(v5, v28, v24 & 1);
                  unint64_t v21 = v12 + 3;
                  goto LABEL_20;
                }
              }
              double result = (double *)sub_10001C914(v5, v28, v24 & 1);
              goto LABEL_4;
            }
          }
        }
LABEL_20:
        int64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
      }
    }
LABEL_4:
    char v8 = 0;
    ++v6;
    uint64_t v4 = v25;
    uint64_t v5 = v10;
    if (v6 == v11) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

BOOL sub_1000A83B0(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_1001058D8();
  sub_1001058E8(v3);
  Swift::Int v4 = sub_100105928();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1000A84A0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_100104B78();
    sub_1001058D8();
    sub_100104BC8();
    Swift::Int v3 = sub_100105928();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_100104B78();
      uint64_t v9 = v8;
      if (v7 == sub_100104B78() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_100104B78();
          uint64_t v17 = v16;
          if (v15 == sub_100104B78() && v17 == v18) {
            break;
          }
          char v20 = sub_1001057F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_1000A8668(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1001058D8();
    sub_1000AC068(a1);
    sub_100104BC8();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_100105928();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1954047348;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x64724F7465737361;
            unint64_t v9 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v10 = 0xD000000000000015;
            unint64_t v9 = 0x8000000100110270;
            break;
          case 3:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x656C746974;
            break;
          case 4:
            unint64_t v10 = 0x7461447972746E65;
            unint64_t v9 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v9 = 0xE800000000000000;
            unint64_t v10 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v9 = 0xEA00000000006574;
            unint64_t v10 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v10 = 0x72756F5365746164;
            unint64_t v9 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v9 = 0xE700000000000000;
            unint64_t v10 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v9 = 0x80000001001102C0;
            unint64_t v10 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v9 = 0xE500000000000000;
            unint64_t v10 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xED0000676E697265;
            if (v10 == 0x64724F7465737361) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            unint64_t v11 = 0x8000000100110270;
            if (v10 != 0xD000000000000015) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x656C746974) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            unint64_t v11 = 0xE900000000000065;
            if (v10 != 0x7461447972746E65) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            if (v10 != 0x6449656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            if (v10 != 0x6144656C646E7562) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 7:
            unint64_t v11 = 0xEA00000000006563;
            if (v10 != 0x72756F5365746164) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            if (v10 != 0x64656767616C66) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x74706D6F7270) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 10:
            unint64_t v11 = 0x80000001001102C0;
            unint64_t v12 = 0xD000000000000011;
            goto LABEL_36;
          case 11:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x726568746FLL) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v10 != v12) {
              goto LABEL_38;
            }
LABEL_37:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_38:
            char v13 = sub_1001057F8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1000A8ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1001058D8();
    sub_100104A08();
    Swift::Int v6 = sub_100105928();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1001057F8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1001057F8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000A8C14()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100151E90);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_100151E90);
  if (qword_10014BF70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F28);
  Swift::Int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1000A8CDC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100103DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v344 = (char *)&v312 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v336 = (char *)&v312 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v346 = (char *)&v312 - v10;
  uint64_t v350 = sub_100103978();
  unint64_t v11 = *(char **)(v350 - 8);
  uint64_t v12 = __chkstk_darwin(v350);
  v326 = (char *)&v312 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v339 = (char *)&v312 - v15;
  __chkstk_darwin(v14);
  v327 = (char *)&v312 - v16;
  uint64_t v371 = 0;
  uint64_t v17 = sub_1001039D8();
  uint64_t v323 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  char v20 = (char *)&v312 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  v329 = (char *)&v312 - v22;
  __chkstk_darwin(v21);
  v347 = (char *)&v312 - v23;
  uint64_t v363 = sub_100007E0C(&qword_10014DD78);
  uint64_t v24 = __chkstk_darwin(v363);
  v349 = (char *)&v312 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v362 = (uint64_t)&v312 - v26;
  uint64_t v27 = sub_100007E0C(&qword_10014DD70);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  v325 = (char *)&v312 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v312 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v312 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v352 = (uint64_t)&v312 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v341 = (char *)&v312 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v364 = (uint64_t)&v312 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v366 = (char *)&v312 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v357 = (uint64_t)&v312 - v45;
  __chkstk_darwin(v44);
  uint64_t v367 = (uint64_t)&v312 - v46;
  id result = [a1 userInfo];
  if (!result) {
    return result;
  }
  objc_super v48 = result;
  v345 = v35;
  v333 = v32;
  uint64_t v49 = sub_1001049B8();

  unint64_t v382 = 0xD000000000000027;
  unint64_t v383 = 0x8000000100114380;
  v381 = &_swiftEmptySetSingleton;
  uint64_t v389 = sub_100104B78();
  uint64_t v390 = v50;
  sub_100105448();
  uint64_t v51 = *(void *)(v49 + 16);
  uint64_t v324 = v49;
  if (v51 && (unint64_t v52 = sub_10000B574((uint64_t)&v375), (v53 & 1) != 0))
  {
    sub_1000105E4(*(void *)(v49 + 56) + 32 * v52, (uint64_t)&v378);
  }
  else
  {
    Swift::String v378 = (Swift::String)0;
    v379[0] = 0u;
  }
  sub_10001043C((uint64_t)&v375);
  uint64_t v370 = v2;
  uint64_t v331 = v5;
  uint64_t v332 = v4;
  uint64_t v365 = v17;
  v315 = v20;
  if (*((void *)&v379[0] + 1))
  {
    sub_100007E0C(&qword_100151EB8);
    if (swift_dynamicCast())
    {
      uint64_t v54 = v389;
      if ((v389 & 0xC000000000000001) != 0)
      {
        if (sub_1001053D8() > 0)
        {
          v375._id countAndFlagsBits = 40;
          v375._object = (void *)0xE100000000000000;
          uint64_t v55 = sub_1001053D8();
LABEL_14:
          v368 = v11;
          v378._id countAndFlagsBits = v55;
          v394._id countAndFlagsBits = sub_1001057C8();
          sub_100104BE8(v394);
          swift_bridgeObjectRelease();
          v395._id countAndFlagsBits = 0x73747265736E6920;
          v395._object = (void *)0xEB00000000203A29;
          sub_100104BE8(v395);
          sub_100104BE8(v375);
          swift_bridgeObjectRelease();
          if ((v54 & 0xC000000000000001) != 0)
          {
            sub_1001053C8();
            sub_100008234(0, &qword_100151EC0);
            sub_1000AC51C();
            sub_100104ED8();
            uint64_t v54 = v384;
            uint64_t v56 = v385;
            uint64_t v57 = v386;
            uint64_t v58 = v387;
            unint64_t v59 = v388;
          }
          else
          {
            uint64_t v58 = 0;
            uint64_t v235 = -1 << *(unsigned char *)(v54 + 32);
            uint64_t v56 = v54 + 56;
            uint64_t v236 = ~v235;
            uint64_t v237 = -v235;
            if (v237 < 64) {
              uint64_t v238 = ~(-1 << v237);
            }
            else {
              uint64_t v238 = -1;
            }
            unint64_t v59 = v238 & *(void *)(v54 + 56);
            uint64_t v57 = (char *)v236;
          }
          v372 = (void (**)(void, void, void, void))(v54 & 0x7FFFFFFFFFFFFFFFLL);
          v361 = v57;
          int64_t v239 = (unint64_t)(v57 + 64) >> 6;
          uint64_t p_weak_ivar_lyt = &JurassicTheme.weak_ivar_lyt;
          v369 = (char *)&type metadata for Swift.AnyObject + 8;
          if ((v54 & 0x8000000000000000) == 0) {
            goto LABEL_226;
          }
LABEL_219:
          uint64_t v241 = sub_100105408();
          if (!v241) {
            goto LABEL_305;
          }
          v378._id countAndFlagsBits = v241;
          sub_100008234(0, &qword_100151EC0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id countAndFlagsBits = (id)v375._countAndFlagsBits;
          swift_unknownObjectRelease();
          uint64_t v243 = v58;
          v374 = v59;
          if (!countAndFlagsBits) {
            goto LABEL_305;
          }
          while (1)
          {
            v373 = v243;
            v375._id countAndFlagsBits = 2107914;
            v375._object = (void *)0xE300000000000000;
            v405._id countAndFlagsBits = sub_10006BA54();
            sub_100104BE8(v405);
            swift_bridgeObjectRelease();
            sub_100104BE8(v375);
            swift_bridgeObjectRelease();
            type metadata accessor for JournalEntryAssetMO();
            uint64_t v248 = swift_dynamicCastClass();
            if (!v248) {
              goto LABEL_224;
            }
            uint64_t v249 = (void *)v248;
            id v250 = countAndFlagsBits;
            id v251 = [v249 entry];
            if (v251)
            {
              uint64_t v252 = v251;
              id v253 = [v251 p_weak_ivar_lyt[453]];
            }
            else
            {
              id v253 = 0;
            }
            id v254 = [*(id *)(v370 + 32) p_weak_ivar_lyt[453]];
            id countAndFlagsBits = v254;
            if (v253)
            {
              if (!v254)
              {

                goto LABEL_225;
              }
              sub_100008234(0, &qword_10014D5C8);
              id v255 = v253;
              char v256 = sub_100105218();

              uint64_t p_weak_ivar_lyt = (void **)(&JurassicTheme + 56);
              if ((v256 & 1) == 0)
              {

                goto LABEL_225;
              }
            }
            else if (v254)
            {

LABEL_224:
LABEL_225:
              uint64_t v58 = v373;
              unint64_t v59 = (unint64_t)v374;
              if (v54 < 0) {
                goto LABEL_219;
              }
              goto LABEL_226;
            }
            id v257 = [v249 assetType];
            if (v257)
            {
              Swift::String v258 = v257;
              uint64_t v259 = sub_100104B78();
              uint64_t v261 = v260;

              if (v259 == 0x697463656C666572 && v261 == 0xEA00000000006E6FLL)
              {
                swift_bridgeObjectRelease();
LABEL_257:
                Swift::Int v263 = 4;
                goto LABEL_259;
              }
              char v262 = sub_1001057F8();
              swift_bridgeObjectRelease();
              if (v262) {
                goto LABEL_257;
              }
            }
            Swift::Int v263 = 1;
LABEL_259:
            sub_1000AD018(&v375, v263);

            uint64_t v58 = v373;
            unint64_t v59 = (unint64_t)v374;
            uint64_t p_weak_ivar_lyt = (void **)(&JurassicTheme + 56);
            if (v54 < 0) {
              goto LABEL_219;
            }
LABEL_226:
            if (v59)
            {
              v374 = ((v59 - 1) & v59);
              unint64_t v244 = __clz(__rbit64(v59)) | ((void)v58 << 6);
              uint64_t v243 = v58;
            }
            else
            {
              int64_t v245 = (int64_t)(v58 + 1);
              if (__OFADD__(v58, 1))
              {
                __break(1u);
                goto LABEL_319;
              }
              if (v245 >= v239) {
                goto LABEL_305;
              }
              unint64_t v246 = *(void *)(v56 + 8 * v245);
              uint64_t v243 = v58 + 1;
              if (!v246)
              {
                uint64_t v243 = v58 + 2;
                if ((uint64_t)(v58 + 2) >= v239) {
                  goto LABEL_305;
                }
                unint64_t v246 = *(void *)(v56 + 8 * (void)v243);
                if (!v246)
                {
                  uint64_t v243 = v58 + 3;
                  if ((uint64_t)(v58 + 3) >= v239) {
                    goto LABEL_305;
                  }
                  unint64_t v246 = *(void *)(v56 + 8 * (void)v243);
                  if (!v246)
                  {
                    uint64_t v243 = v58 + 4;
                    if ((uint64_t)(v58 + 4) >= v239) {
                      goto LABEL_305;
                    }
                    unint64_t v246 = *(void *)(v56 + 8 * (void)v243);
                    if (!v246)
                    {
                      long long v247 = v58 + 5;
                      do
                      {
                        if ((char *)v239 == v247) {
                          goto LABEL_305;
                        }
                        unint64_t v246 = *(void *)(v56 + 8 * (void)v247++);
                      }
                      while (!v246);
                      uint64_t v243 = v247 - 1;
                    }
                  }
                }
              }
              v374 = ((v246 - 1) & v246);
              unint64_t v244 = __clz(__rbit64(v246)) + ((void)v243 << 6);
            }
            id countAndFlagsBits = *(id *)(*(void *)(v54 + 48) + 8 * v244);
            if (!countAndFlagsBits) {
              goto LABEL_305;
            }
          }
        }
      }
      else
      {
        uint64_t v55 = *(void *)(v389 + 16);
        if (v55)
        {
          v375._id countAndFlagsBits = 40;
          v375._object = (void *)0xE100000000000000;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100012510((uint64_t)&v378, &qword_10014D818);
  }
  uint64_t v60 = v324;
  while (1)
  {
    v378._id countAndFlagsBits = sub_100104B78();
    v378._object = v61;
    sub_100105448();
    sub_1000A80B8((uint64_t)&v375, v60, &v378);
    sub_10001043C((uint64_t)&v375);
    if (*((void *)&v379[0] + 1))
    {
      sub_100007E0C(&qword_100151EB8);
      if (swift_dynamicCast())
      {
        unint64_t v62 = (void *)v389;
        goto LABEL_23;
      }
    }
    else
    {
      sub_100012510((uint64_t)&v378, &qword_10014D818);
    }
    unint64_t v62 = &_swiftEmptySetSingleton;
LABEL_23:
    v378._id countAndFlagsBits = sub_100104B78();
    v378._object = v63;
    sub_100105448();
    sub_1000A80B8((uint64_t)&v375, v60, &v378);
    sub_10001043C((uint64_t)&v375);
    if (!*((void *)&v379[0] + 1))
    {
      sub_100012510((uint64_t)&v378, &qword_10014D818);
LABEL_27:
      uint64_t v64 = &_swiftEmptySetSingleton;
      goto LABEL_28;
    }
    sub_100007E0C(&qword_100151EB8);
    if (!swift_dynamicCast()) {
      goto LABEL_27;
    }
    uint64_t v64 = (void *)v389;
LABEL_28:
    sub_1000ABD38((unint64_t)v64, v62);
    uint64_t v66 = v65;
    unint64_t v67 = v65 & 0xC000000000000001;
    if ((v65 & 0xC000000000000001) != 0)
    {
      if (sub_1001053D8() < 1) {
        goto LABEL_33;
      }
    }
    else if (*(uint64_t *)(v65 + 16) < 1)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      uint64_t v69 = v344;
      goto LABEL_203;
    }
    v375._id countAndFlagsBits = 0;
    v375._object = (void *)0xE000000000000000;
    sub_100105498(22);
    swift_bridgeObjectRelease();
    v375._id countAndFlagsBits = 10;
    v375._object = (void *)0xE100000000000000;
    uint64_t v68 = v67 ? sub_1001053D8() : *(void *)(v66 + 16);
    v378._id countAndFlagsBits = v68;
    v396._id countAndFlagsBits = sub_1001057C8();
    sub_100104BE8(v396);
    swift_bridgeObjectRelease();
    v397._object = (void *)0x80000001001143D0;
    v397._id countAndFlagsBits = 0xD000000000000013;
    sub_100104BE8(v397);
    sub_100104BE8(v375);
    swift_bridgeObjectRelease();
    if (v67)
    {
      sub_1001053C8();
      sub_100008234(0, &qword_100151EC0);
      sub_1000AC51C();
      sub_100104ED8();
      uint64_t v66 = v389;
      uint64_t v343 = v390;
      uint64_t v71 = v391;
      int64_t v70 = (int64_t)v392;
      unint64_t v72 = v393;
    }
    else
    {
      int64_t v70 = 0;
      uint64_t v73 = -1 << *(unsigned char *)(v66 + 32);
      uint64_t v74 = *(void *)(v66 + 56);
      uint64_t v343 = v66 + 56;
      uint64_t v71 = ~v73;
      uint64_t v75 = -v73;
      uint64_t v76 = v75 < 64 ? ~(-1 << v75) : -1;
      unint64_t v72 = v76 & v74;
    }
    uint64_t v322 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_text;
    uint64_t v313 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_textChanged;
    uint64_t v321 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_dateSource;
    uint64_t v330 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_bookmarked;
    uint64_t v351 = v2 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14EntryViewModel_date;
    swift_beginAccess();
    uint64_t v340 = v66 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v342 = (unint64_t)(v71 + 64) >> 6;
    v374 = v379;
    uint64_t v69 = (char *)&v376;
    v372 = (void (**)(void, void, void, void))(v323 + 56);
    v359 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v323 + 48);
    v348 = (void (**)(uint64_t, uint64_t))(v323 + 8);
    v334 = (void (**)(char *, uint64_t, uint64_t))(v323 + 32);
    v335 = (void (**)(void))(v11 + 32);
    v337 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
    v328 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v316 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v317 = (void (**)(char *, uint64_t))(v11 + 8);
    v318 = (void (**)(uint64_t, char *, uint64_t))(v11 + 40);
    v314 = (void (**)(uint64_t, char *, uint64_t))(v11 + 24);
    v355 = (char *)&type metadata for Any + 8;
    v319 = "";
    v320 = "text";
    v338 = (char *)&type metadata for Swift.AnyObject + 8;
    uint64_t v356 = v71;
    uint64_t v358 = v66;
LABEL_43:
    if (v66 < 0) {
      break;
    }
    if (!v72)
    {
      int64_t v78 = v70 + 1;
      if (!__OFADD__(v70, 1))
      {
        if (v78 >= v342) {
          goto LABEL_202;
        }
        unint64_t v81 = *(void *)(v343 + 8 * v78);
        if (!v81)
        {
          int64_t v82 = v70 + 2;
          if (v70 + 2 >= v342) {
            goto LABEL_202;
          }
          unint64_t v81 = *(void *)(v343 + 8 * v82);
          if (v81) {
            goto LABEL_56;
          }
          int64_t v82 = v70 + 3;
          if (v70 + 3 >= v342) {
            goto LABEL_202;
          }
          unint64_t v81 = *(void *)(v343 + 8 * v82);
          if (v81)
          {
LABEL_56:
            int64_t v78 = v82;
          }
          else
          {
            int64_t v78 = v70 + 4;
            if (v70 + 4 >= v342) {
              goto LABEL_202;
            }
            unint64_t v81 = *(void *)(v343 + 8 * v78);
            if (!v81)
            {
              uint64_t v163 = (char *)(v70 + 5);
              do
              {
                if ((char *)v342 == v163) {
                  goto LABEL_202;
                }
                unint64_t v81 = *(void *)(v343 + 8 * (void)v163++);
              }
              while (!v81);
              int64_t v78 = (int64_t)(v163 - 1);
            }
          }
        }
        v369 = (char *)((v81 - 1) & v81);
        unint64_t v77 = __clz(__rbit64(v81)) + (v78 << 6);
        goto LABEL_58;
      }
      __break(1u);
LABEL_316:
      __break(1u);
LABEL_317:
      swift_once();
      goto LABEL_308;
    }
    v369 = (char *)((v72 - 1) & v72);
    unint64_t v77 = __clz(__rbit64(v72)) | (v70 << 6);
    int64_t v78 = v70;
LABEL_58:
    unsigned __int8 v80 = (char *)*(id *)(*(void *)(v66 + 48) + 8 * v77);
    if (!v80) {
      goto LABEL_202;
    }
LABEL_59:
    v368 = (char *)v78;
    v375._id countAndFlagsBits = 2107914;
    v375._object = (void *)0xE300000000000000;
    v398._id countAndFlagsBits = sub_10006BA54();
    sub_100104BE8(v398);
    swift_bridgeObjectRelease();
    v399._id countAndFlagsBits = 58;
    v399._object = (void *)0xE100000000000000;
    sub_100104BE8(v399);
    sub_100104BE8(v375);
    swift_bridgeObjectRelease();
    v373 = v80;
    id v83 = [v80 changedValuesForCurrentEvent];
    uint64_t v84 = sub_1001049B8();

    int64_t v85 = 0;
    uint64_t v86 = v84 + 64;
    uint64_t v87 = 1 << *(unsigned char *)(v84 + 32);
    if (v87 < 64) {
      uint64_t v88 = ~(-1 << v87);
    }
    else {
      uint64_t v88 = -1;
    }
    unint64_t v89 = v88 & *(void *)(v84 + 64);
    int64_t v90 = (unint64_t)(v87 + 63) >> 6;
    v361 = (char *)(v90 - 1);
    if (v89)
    {
LABEL_63:
      unint64_t v91 = __clz(__rbit64(v89));
      v89 &= v89 - 1;
      unint64_t v92 = v91 | (v85 << 6);
LABEL_64:
      uint64_t v93 = *(void *)(v84 + 56);
      uint64_t v94 = (uint64_t *)(*(void *)(v84 + 48) + 16 * v92);
      uint64_t v95 = (void *)v94[1];
      v378._id countAndFlagsBits = *v94;
      v378._object = v95;
      sub_1000105E4(v93 + 32 * v92, (uint64_t)v374);
      swift_bridgeObjectRetain();
      goto LABEL_74;
    }
    while (1)
    {
      int64_t v96 = v85 + 1;
      if (__OFADD__(v85, 1)) {
        break;
      }
      if (v96 < v90)
      {
        unint64_t v97 = *(void *)(v86 + 8 * v96);
        if (v97) {
          goto LABEL_68;
        }
        v85 += 2;
        if (v96 + 1 >= v90)
        {
          int64_t v85 = v96;
        }
        else
        {
          unint64_t v97 = *(void *)(v86 + 8 * v85);
          if (v97)
          {
            ++v96;
LABEL_68:
            unint64_t v89 = (v97 - 1) & v97;
            unint64_t v92 = __clz(__rbit64(v97)) + (v96 << 6);
            int64_t v85 = v96;
            goto LABEL_64;
          }
          if (v96 + 2 < v90)
          {
            unint64_t v97 = *(void *)(v86 + 8 * (v96 + 2));
            if (v97)
            {
              v96 += 2;
              goto LABEL_68;
            }
            int64_t v100 = v96 + 3;
            if (v96 + 3 >= v90)
            {
              int64_t v85 = v96 + 2;
            }
            else
            {
              unint64_t v97 = *(void *)(v86 + 8 * v100);
              if (v97)
              {
                v96 += 3;
                goto LABEL_68;
              }
              while (1)
              {
                int64_t v96 = v100 + 1;
                if (__OFADD__(v100, 1)) {
                  goto LABEL_316;
                }
                if (v96 >= v90) {
                  break;
                }
                unint64_t v97 = *(void *)(v86 + 8 * v96);
                ++v100;
                if (v97) {
                  goto LABEL_68;
                }
              }
              int64_t v85 = (int64_t)v361;
            }
          }
        }
      }
      unint64_t v89 = 0;
      memset(v379, 0, sizeof(v379));
      Swift::String v378 = (Swift::String)0;
LABEL_74:
      sub_100033870((uint64_t)&v378, (uint64_t)&v375, &qword_100151ED0);
      object = v375._object;
      if (!v375._object)
      {
        swift_release();
        uint64_t v101 = v373;
        id v102 = [v373 changedValuesForCurrentEvent];
        uint64_t v103 = sub_1001049B8();

        uint64_t v104 = v371;
        uint64_t v105 = sub_1000A811C(v103);
        uint64_t v371 = v104;
        swift_bridgeObjectRelease();
        uint64_t v106 = sub_1000B22CC((uint64_t)v105);
        swift_bridgeObjectRelease();
        type metadata accessor for JournalEntryMO();
        uint64_t v107 = swift_dynamicCastClass();
        uint64_t v108 = v370;
        uint64_t v110 = v365;
        uint64_t v109 = (uint64_t)v366;
        if (!v107) {
          goto LABEL_111;
        }
        long long v111 = (void *)v107;
        v361 = v101;
        id v353 = v111;
        id v112 = [v111 id];
        if (v112)
        {
          uint64_t v113 = v112;
          uint64_t v114 = v367;
          sub_1001039B8();

          uint64_t v115 = *v372;
          (*v372)(v114, 0, 1, v110);
        }
        else
        {
          uint64_t v115 = *v372;
          (*v372)(v367, 1, 1, v110);
        }
        id v354 = *(id *)(v108 + 32);
        id v116 = [v354 id];
        uint64_t v360 = v106;
        if (v116)
        {
          uint64_t v117 = v116;
          uint64_t v118 = v357;
          sub_1001039B8();

          uint64_t v119 = 0;
        }
        else
        {
          uint64_t v119 = 1;
          uint64_t v118 = v357;
        }
        v115(v118, v119, 1, v110);
        uint64_t v120 = v362;
        uint64_t v121 = v362 + *(int *)(v363 + 48);
        uint64_t v122 = v367;
        sub_1000B2340(v367, v362);
        sub_1000B2340(v118, v121);
        unint64_t v123 = *v359;
        if ((*v359)(v120, 1, v110) != 1)
        {
          sub_1000B2340(v120, v109);
          if (v123(v121, 1, v110) == 1)
          {
            sub_100012510(v357, &qword_10014DD70);
            sub_100012510(v367, &qword_10014DD70);
            (*v348)(v109, v110);
            uint64_t v108 = v370;
LABEL_101:
            sub_100012510(v362, &qword_10014DD78);
          }
          else
          {
            uint64_t v126 = v347;
            (*v334)(v347, v121, v110);
            sub_1000B23A8((unint64_t *)&qword_10014DD88, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v127 = sub_100104A98();
            uint64_t v128 = *v348;
            (*v348)((uint64_t)v126, v110);
            sub_100012510(v357, &qword_10014DD70);
            sub_100012510(v367, &qword_10014DD70);
            v128((uint64_t)v366, v110);
            sub_100012510(v120, &qword_10014DD70);
            uint64_t v108 = v370;
            uint64_t v125 = v360;
            if (v127) {
              goto LABEL_103;
            }
          }

          uint64_t v101 = v373;
LABEL_111:
          swift_bridgeObjectRelease();
          type metadata accessor for JournalEntryAssetMO();
          uint64_t v134 = swift_dynamicCastClass();
          if (!v134)
          {

            int64_t v70 = (int64_t)v368;
            unint64_t v72 = (unint64_t)v369;
            uint64_t v66 = v358;
            goto LABEL_43;
          }
          unint64_t v135 = (char *)v134;
          uint64_t v136 = v101;
          v361 = v135;
          id v137 = [v135 entry];
          if (v137)
          {
            uint64_t v138 = v137;
            id v139 = [v137 id];

            if (v139)
            {
              uint64_t v140 = (uint64_t)v341;
              sub_1001039B8();

              uint64_t v141 = *v372;
              (*v372)(v140, 0, 1, v110);
            }
            else
            {
              uint64_t v141 = *v372;
              uint64_t v140 = (uint64_t)v341;
              (*v372)(v341, 1, 1, v110);
            }
            sub_100033870(v140, v364, &qword_10014DD70);
          }
          else
          {
            uint64_t v141 = *v372;
            (*v372)(v364, 1, 1, v110);
          }
          id v142 = [*(id *)(v108 + 32) id];
          v373 = v136;
          if (v142)
          {
            uint64_t v143 = v142;
            uint64_t v144 = v352;
            sub_1001039B8();

            uint64_t v145 = 0;
            uint64_t v146 = (uint64_t)v349;
            uint64_t v147 = (uint64_t)v345;
          }
          else
          {
            uint64_t v145 = 1;
            uint64_t v146 = (uint64_t)v349;
            uint64_t v147 = (uint64_t)v345;
            uint64_t v144 = v352;
          }
          v141(v144, v145, 1, v110);
          uint64_t v148 = v364;
          uint64_t v149 = v146 + *(int *)(v363 + 48);
          sub_1000B2340(v364, v146);
          sub_1000B2340(v144, v149);
          uint64_t v150 = *v359;
          if ((*v359)(v146, 1, v110) == 1)
          {
            sub_100012510(v144, &qword_10014DD70);
            sub_100012510(v148, &qword_10014DD70);
            unsigned int v151 = v150(v149, 1, v110);
            uint64_t v152 = v373;
            if (v151 == 1)
            {
              sub_100012510(v146, &qword_10014DD70);
              uint64_t v66 = v358;
              goto LABEL_128;
            }
LABEL_126:
            sub_100012510(v146, &qword_10014DD78);
            uint64_t v66 = v358;
            goto LABEL_136;
          }
          sub_1000B2340(v146, v147);
          if (v150(v149, 1, v110) == 1)
          {
            sub_100012510(v352, &qword_10014DD70);
            sub_100012510(v364, &qword_10014DD70);
            (*v348)(v147, v110);
            uint64_t v152 = v373;
            goto LABEL_126;
          }
          uint64_t v153 = v347;
          (*v334)(v347, v149, v110);
          sub_1000B23A8((unint64_t *)&qword_10014DD88, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v154 = sub_100104A98();
          uint64_t v155 = *v348;
          (*v348)((uint64_t)v153, v110);
          sub_100012510(v352, &qword_10014DD70);
          sub_100012510(v364, &qword_10014DD70);
          v155(v147, v110);
          sub_100012510(v146, &qword_10014DD70);
          uint64_t v66 = v358;
          uint64_t v152 = v373;
          if ((v154 & 1) == 0)
          {
LABEL_136:

            int64_t v70 = (int64_t)v368;
            unint64_t v72 = (unint64_t)v369;
            goto LABEL_43;
          }
LABEL_128:
          id v156 = [v361 assetType];
          if (!v156) {
            goto LABEL_134;
          }
          uint64_t v157 = v156;
          uint64_t v158 = sub_100104B78();
          uint64_t v160 = v159;

          if (v158 == 0x697463656C666572 && v160 == 0xEA00000000006E6FLL)
          {
            swift_bridgeObjectRelease();
            goto LABEL_133;
          }
          char v161 = sub_1001057F8();
          swift_bridgeObjectRelease();
          if (v161) {
LABEL_133:
          }
            Swift::Int v162 = 4;
          else {
LABEL_134:
          }
            Swift::Int v162 = 1;
          sub_1000AD018(&v375, v162);
          goto LABEL_136;
        }
        sub_100012510(v118, &qword_10014DD70);
        sub_100012510(v122, &qword_10014DD70);
        unsigned int v124 = v123(v121, 1, v110);
        uint64_t v108 = v370;
        uint64_t v125 = v360;
        if (v124 != 1) {
          goto LABEL_101;
        }
        sub_100012510(v362, &qword_10014DD70);
LABEL_103:
        if (*(void *)(v125 + 16))
        {
          sub_1001058D8();
          sub_100104BC8();
          Swift::Int v129 = sub_100105928();
          uint64_t v130 = -1 << *(unsigned char *)(v125 + 32);
          unint64_t v131 = v129 & ~v130;
          if ((*(void *)(v125 + 56 + ((v131 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v131))
          {
            uint64_t v132 = ~v130;
            while (1)
            {
              switch(*(unsigned char *)(*(void *)(v125 + 48) + v131))
              {
                case 1:
                  swift_bridgeObjectRelease();
                  goto LABEL_144;
                default:
                  char v133 = sub_1001057F8();
                  swift_bridgeObjectRelease();
                  if (v133)
                  {
LABEL_144:
                    sub_1000AD018(&v375, 1);
                    goto LABEL_145;
                  }
                  unint64_t v131 = (v131 + 1) & v132;
                  if (((*(void *)(v125 + 56 + ((v131 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v131) & 1) == 0) {
                    goto LABEL_145;
                  }
                  break;
              }
            }
          }
        }
LABEL_145:
        char v164 = sub_1000A8668(0, v125);
        uint64_t v165 = (uint64_t)v346;
        uint64_t v66 = v358;
        uint64_t v166 = v351;
        id v167 = v353;
        if (v164)
        {
          id v168 = [v353 text];
          if (v168)
          {
            uint64_t v169 = sub_100103848();
            unint64_t v171 = v170;

            id v168 = sub_100056B04(v169, v171);
            sub_100010378(v169, v171);
            if (v168 && *(void *)(v108 + v322))
            {
              unsigned __int8 v172 = [v168 isEqualToAttributedString:];
              uint64_t v165 = (uint64_t)v346;
              uint64_t v166 = v351;
              if ((v172 & 1) == 0) {
                *(unsigned char *)(v108 + v313) = 1;
              }
            }
            else
            {
              uint64_t v165 = (uint64_t)v346;
              uint64_t v166 = v351;
            }
          }
          uint64_t v173 = *(void **)(v108 + v322);
          *(void *)(v108 + v322) = v168;

          sub_1000AD018(&v375, 0);
        }
        if (sub_1000A8668(3u, v125))
        {
          id v174 = [v167 title];
          if (v174)
          {
            uint64_t v175 = v174;
            uint64_t v176 = sub_100103848();
            unint64_t v178 = v177;

            id v179 = sub_100056B04(v176, v178);
            sub_100010378(v176, v178);
          }
          else
          {
            id v179 = 0;
          }
          sub_100064944(v179);

          sub_1000AD018(&v375, 2);
          uint64_t v165 = (uint64_t)v346;
          uint64_t v166 = v351;
        }
        if (sub_1000A8668(4u, v125))
        {
          id v180 = [v354 entryDate];
          if (v180)
          {
            uint64_t v181 = v180;
            uint64_t v182 = v339;
            sub_100103938();

            uint64_t v183 = *v335;
            uint64_t v184 = v182;
            uint64_t v185 = v350;
            ((void (*)(uint64_t, char *, uint64_t))*v335)(v165, v184, v350);
            (*v337)(v165, 0, 1, v185);
            uint64_t v186 = v185;
            uint64_t v166 = v351;
            if ((*v328)(v165, 1, v186) != 1)
            {
              uint64_t v187 = v327;
              ((void (*)(char *, uint64_t, uint64_t))v183)(v327, v165, v350);
              uint64_t v188 = v187;
              uint64_t v166 = v351;
              goto LABEL_164;
            }
          }
          else
          {
            (*v337)(v165, 1, 1, v350);
          }
          uint64_t v188 = v327;
          sub_100103968();
          sub_100012510(v165, (uint64_t *)&unk_100151950);
LABEL_164:
          swift_beginAccess();
          (*v318)(v166, v188, v350);
          swift_endAccess();
          sub_1000AD018(&v375, 3);
        }
        if (sub_1000A8668(7u, v125))
        {
          id v189 = [v354 dateSource];
          if (v189)
          {
            uint64_t v190 = v189;
            uint64_t v191 = sub_100104B78();
            uint64_t v193 = v192;
          }
          else
          {
            uint64_t v191 = 0;
            uint64_t v193 = (void *)0xE000000000000000;
          }
          char v194 = sub_100057710(v191, v193);
          *(unsigned char *)(v108 + v321) = v194;
          sub_1000AD018(&v375, 3);
        }
        if (sub_1000A8668(9u, v125))
        {
          id v195 = [v354 prompt];
          if (v195)
          {
            uint64_t v196 = v195;
            uint64_t v197 = sub_100103848();
            unint64_t v199 = v198;

            id v200 = sub_100056B04(v197, v199);
            sub_100010378(v197, v199);
          }
          else
          {
            id v200 = 0;
          }
          sub_1000649C4(v200);

          sub_1000AD018(&v375, 6);
        }
        if (sub_1000A8668(8u, v125)) {
          sub_1000AD018(&v375, 7);
        }
        if (sub_1000A8668(5u, v125))
        {
          swift_bridgeObjectRelease();
          goto LABEL_180;
        }
        char v201 = sub_1000A8668(6u, v125);
        swift_bridgeObjectRelease();
        if (v201) {
LABEL_180:
        }
          sub_1000AD018(&v375, 8);
        unsigned __int8 v202 = [v167 isRemovedFromCloud];
        uint64_t v203 = (uint64_t)v336;
        uint64_t v204 = v350;
        if ((v202 & 1) != 0 || [v167 isFullyRemoved]) {
          sub_1000AD018(&v375, 9);
        }
        id v205 = [v167 entryDate];
        if (!v205)
        {
          (*v337)(v203, 1, 1, v204);
LABEL_189:
          sub_100012510(v203, (uint64_t *)&unk_100151950);
          goto LABEL_190;
        }
        BOOL v206 = v205;
        uint64_t v207 = v339;
        sub_100103938();

        Swift::String v208 = *v335;
        ((void (*)(uint64_t, char *, uint64_t))*v335)(v203, v207, v204);
        (*v337)(v203, 0, 1, v204);
        if ((*v328)(v203, 1, v204) == 1) {
          goto LABEL_189;
        }
        uint64_t v209 = v326;
        v208();
        uint64_t v210 = v339;
        uint64_t v211 = v351;
        (*v316)(v339, v351, v204);
        sub_1000B23A8(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
        char v212 = sub_100104A98();
        Swift::String v213 = *v317;
        (*v317)(v210, v204);
        if (v212)
        {
          v213(v209, v204);
          uint64_t v66 = v358;
          id v167 = v353;
        }
        else
        {
          swift_beginAccess();
          (*v314)(v211, v209, v204);
          swift_endAccess();
          id v223 = [v354 dateSource];
          if (v223)
          {
            Swift::String v224 = v223;
            uint64_t v225 = sub_100104B78();
            Swift::String v227 = v226;
          }
          else
          {
            uint64_t v225 = 0;
            Swift::String v227 = (void *)0xE000000000000000;
          }
          id v167 = v353;
          char v228 = sub_100057710(v225, v227);
          *(unsigned char *)(v108 + v321) = v228;
          sub_1000AD018(&v375, 3);
          v213(v326, v204);
          uint64_t v66 = v358;
        }
LABEL_190:
        int v214 = *(unsigned __int8 *)(v108 + v330);
        if (v214 != [v167 flagged])
        {
          sub_100063700((uint64_t)[v167 flagged]);
          sub_1000AD018(&v375, 7);
        }
        id v215 = [v167 text];
        if (v215)
        {
          Swift::String v216 = v215;
          uint64_t v217 = sub_100103848();
          unint64_t v219 = v218;

          id v220 = sub_100056B04(v217, v219);
          sub_100010378(v217, v219);
        }
        else
        {
          id v220 = 0;
        }
        unint64_t v72 = (unint64_t)v369;
        char v221 = sub_100063488(v220);

        if (v221) {
          sub_1000AD018(&v375, 0);
        }
        Swift::String v222 = v361;

        int64_t v70 = (int64_t)v368;
        goto LABEL_43;
      }
      uint64_t v99 = v375._countAndFlagsBits;
      sub_1000103D0(&v376, &v378);
      v380._id countAndFlagsBits = 0;
      v380._object = (void *)0xE000000000000000;
      v400._id countAndFlagsBits = 0x20202020200ALL;
      v400._object = (void *)0xE600000000000000;
      sub_100104BE8(v400);
      v401._id countAndFlagsBits = v99;
      v401._object = object;
      sub_100104BE8(v401);
      swift_bridgeObjectRelease();
      v402._id countAndFlagsBits = 8250;
      v402._object = (void *)0xE200000000000000;
      sub_100104BE8(v402);
      sub_100105598();
      sub_100104BE8(v380);
      swift_bridgeObjectRelease();
      sub_1000121EC((uint64_t)&v378);
      if (v89) {
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_305:
    sub_10002CFC0();
    uint64_t v2 = v370;
    uint64_t v60 = v324;
    unint64_t v11 = v368;
  }
  uint64_t v79 = sub_100105408();
  if (v79)
  {
    v378._id countAndFlagsBits = v79;
    sub_100008234(0, &qword_100151EC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    unsigned __int8 v80 = (char *)v375._countAndFlagsBits;
    swift_unknownObjectRelease();
    int64_t v78 = v70;
    v369 = (char *)v72;
    if (v80) {
      goto LABEL_59;
    }
  }
LABEL_202:
  sub_10002CFC0();
  uint64_t v69 = v344;
  uint64_t v60 = v324;
LABEL_203:
  v380._id countAndFlagsBits = sub_100104B78();
  v380._object = v229;
  sub_100105448();
  sub_1000A80B8((uint64_t)&v375, v60, &v378);
  swift_bridgeObjectRelease();
  sub_10001043C((uint64_t)&v375);
  if (!*((void *)&v379[0] + 1))
  {
    sub_100012510((uint64_t)&v378, &qword_10014D818);
    goto LABEL_307;
  }
  sub_100007E0C(&qword_100151EB8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_307;
  }
  uint64_t v230 = v380._countAndFlagsBits;
  unint64_t v231 = v380._countAndFlagsBits & 0xC000000000000001;
  if ((v380._countAndFlagsBits & 0xC000000000000001) != 0)
  {
    if (sub_1001053D8() > 0)
    {
      v375._id countAndFlagsBits = 10;
      v375._object = (void *)0xE100000000000000;
      uint64_t v232 = sub_1001053D8();
      goto LABEL_211;
    }
LABEL_213:
    swift_bridgeObjectRelease();
    goto LABEL_307;
  }
  uint64_t v232 = *(void *)(v380._countAndFlagsBits + 16);
  if (!v232) {
    goto LABEL_213;
  }
  v375._id countAndFlagsBits = 10;
  v375._object = (void *)0xE100000000000000;
LABEL_211:
  v378._id countAndFlagsBits = v232;
  v403._id countAndFlagsBits = sub_1001057C8();
  sub_100104BE8(v403);
  swift_bridgeObjectRelease();
  v404._id countAndFlagsBits = 0x736574656C656420;
  v404._object = (void *)0xE90000000000003ALL;
  sub_100104BE8(v404);
  sub_100104BE8(v375);
  swift_bridgeObjectRelease();
  if (v231)
  {
    sub_1001053C8();
    sub_100008234(0, &qword_100151EC0);
    sub_1000AC51C();
    sub_100104ED8();
    uint64_t v230 = v375._countAndFlagsBits;
    v368 = (char *)v375._object;
    unint64_t v231 = *((void *)&v376 + 1);
    uint64_t v233 = v376;
    unint64_t v234 = v377;
  }
  else
  {
    uint64_t v264 = -1 << *(unsigned char *)(v230 + 32);
    uint64_t v265 = *(void *)(v230 + 56);
    v368 = (char *)(v230 + 56);
    uint64_t v266 = ~v264;
    uint64_t v267 = -v264;
    if (v267 < 64) {
      uint64_t v268 = ~(-1 << v267);
    }
    else {
      uint64_t v268 = -1;
    }
    unint64_t v234 = v268 & v265;
    uint64_t v233 = v266;
  }
  uint64_t v362 = v233;
  v366 = (char *)(v230 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v367 = (unint64_t)(v233 + 64) >> 6;
  v373 = (char *)(v323 + 32);
  v374 = (v323 + 56);
  v369 = (char *)(v323 + 48);
  uint64_t v363 = v323 + 8;
  uint64_t v364 = (uint64_t)&type metadata for Swift.AnyObject + 8;
  v372 = (void (**)(void, void, void, void))v230;
  while (2)
  {
    if (v230 < 0)
    {
      uint64_t v273 = sub_100105408();
      if (!v273) {
        goto LABEL_306;
      }
      v380._id countAndFlagsBits = v273;
      sub_100008234(0, &qword_100151EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v274 = (id)v378._countAndFlagsBits;
      swift_unknownObjectRelease();
      uint64_t v272 = v231;
      uint64_t v270 = v234;
      if (!v274) {
        goto LABEL_306;
      }
      goto LABEL_284;
    }
    if (v234)
    {
      uint64_t v270 = (v234 - 1) & v234;
      unint64_t v271 = __clz(__rbit64(v234)) | (v231 << 6);
      uint64_t v272 = v231;
LABEL_283:
      id v274 = *(id *)(*(void *)(v230 + 48) + 8 * v271);
      if (!v274) {
        goto LABEL_306;
      }
LABEL_284:
      v378._id countAndFlagsBits = 2107914;
      v378._object = (void *)0xE300000000000000;
      v406._id countAndFlagsBits = sub_10006BA54();
      sub_100104BE8(v406);
      swift_bridgeObjectRelease();
      sub_100104BE8(v378);
      swift_bridgeObjectRelease();
      type metadata accessor for JournalEntryMO();
      uint64_t v277 = swift_dynamicCastClass();
      if (!v277)
      {
        type metadata accessor for JournalEntryAssetMO();
        if (swift_dynamicCastClass())
        {
          sub_1000AD018(&v378, 4);
          sub_1000AD018(&v378, 1);
        }

        unint64_t v231 = v272;
        unint64_t v234 = v270;
        continue;
      }
      char v278 = (void *)v277;
      id v279 = v274;
      id v280 = [v278 id];
      if (!v280)
      {
        uint64_t v269 = (uint64_t)v333;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v374->isa)(v333, 1, 1, v365);
LABEL_267:

        sub_100012510(v269, &qword_10014DD70);
        unint64_t v231 = v272;
        unint64_t v234 = v270;
        uint64_t v69 = v344;
        uint64_t v230 = (uint64_t)v372;
        continue;
      }
      char v281 = v280;
      uint64_t v282 = v347;
      sub_1001039B8();

      char v283 = *(void (**)(void, void, void))v373;
      uint64_t v269 = (uint64_t)v333;
      uint64_t v284 = v365;
      (*(void (**)(char *, char *, uint64_t))v373)(v333, v282, v365);
      Class isa = (void (*)(void, void, void, void))v374->isa;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v374->isa)(v269, 0, 1, v284);
      uint64_t v286 = *(uint64_t (**)(void, void, void))v369;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v369)(v269, 1, v284) == 1) {
        goto LABEL_267;
      }
      uint64_t v287 = v365;
      v283(v329, v269, v365);
      id v288 = [v278 id];
      if (v288)
      {
        char v289 = v288;
        uint64_t v290 = v347;
        sub_1001039B8();

        uint64_t v291 = (uint64_t)v325;
        v283(v325, v290, v287);
        isa(v291, 0, 1, v287);
        int v292 = v286(v291, 1, v287);
        uint64_t v69 = v344;
        if (v292 != 1)
        {
          v293 = v315;
          v283(v315, v291, v287);
          v294 = v329;
          if (sub_1001039A8()) {
            sub_1000AD018(&v378, 9);
          }

          v295 = *(void (**)(void, void))v363;
          (*(void (**)(char *, uint64_t))v363)(v293, v287);
          v295(v294, v287);
          goto LABEL_297;
        }
      }
      else
      {
        uint64_t v291 = (uint64_t)v325;
        isa(v325, 1, 1, v287);
        uint64_t v69 = v344;
      }

      (*(void (**)(char *, uint64_t))v363)(v329, v287);
      sub_100012510(v291, &qword_10014DD70);
LABEL_297:
      unint64_t v231 = v272;
      unint64_t v234 = v270;
      uint64_t v230 = (uint64_t)v372;
      continue;
    }
    break;
  }
  uint64_t v272 = v231 + 1;
  if (__OFADD__(v231, 1))
  {
LABEL_319:
    __break(1u);
    JUMPOUT(0x1000ABD08);
  }
  if (v272 >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v272];
  if (v275)
  {
LABEL_282:
    uint64_t v270 = (v275 - 1) & v275;
    unint64_t v271 = __clz(__rbit64(v275)) + (v272 << 6);
    goto LABEL_283;
  }
  uint64_t v276 = v231 + 2;
  if ((uint64_t)(v231 + 2) >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v276];
  if (v275) {
    goto LABEL_281;
  }
  uint64_t v276 = v231 + 3;
  if ((uint64_t)(v231 + 3) >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v276];
  if (v275)
  {
LABEL_281:
    uint64_t v272 = v276;
    goto LABEL_282;
  }
  uint64_t v272 = v231 + 4;
  if ((uint64_t)(v231 + 4) >= v367) {
    goto LABEL_306;
  }
  unint64_t v275 = *(void *)&v368[8 * v272];
  if (v275) {
    goto LABEL_282;
  }
  unint64_t v296 = v231 + 5;
  while (v367 != v296)
  {
    unint64_t v275 = *(void *)&v368[8 * v296++];
    if (v275)
    {
      uint64_t v272 = v296 - 1;
      goto LABEL_282;
    }
  }
LABEL_306:
  sub_10002CFC0();
LABEL_307:
  v378._id countAndFlagsBits = 0;
  v378._object = (void *)0xE000000000000000;
  sub_100105498(22);
  swift_bridgeObjectRelease();
  v378._id countAndFlagsBits = 0xD000000000000013;
  v378._object = (void *)0x80000001001143B0;
  sub_1000AC3F0();
  swift_bridgeObjectRetain();
  v407._id countAndFlagsBits = sub_100104EB8();
  sub_100104BE8(v407);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v408._id countAndFlagsBits = 10;
  v408._object = (void *)0xE100000000000000;
  sub_100104BE8(v408);
  sub_100104BE8(v378);
  swift_bridgeObjectRelease();
  if (qword_10014C048 != -1) {
    goto LABEL_317;
  }
LABEL_308:
  uint64_t v297 = v332;
  uint64_t v298 = sub_100007D30(v332, (uint64_t)qword_100151E90);
  (*(void (**)(char *, uint64_t, uint64_t))(v331 + 16))(v69, v298, v297);
  v299 = (char *)v382;
  unint64_t v300 = v383;
  uint64_t v301 = swift_allocObject();
  v373 = v299;
  *(void *)(v301 + 16) = v299;
  *(void *)(v301 + 24) = v300;
  swift_bridgeObjectRetain();
  v302 = sub_100103D98();
  os_log_type_t v303 = sub_100104FE8();
  uint64_t v304 = swift_allocObject();
  *(unsigned char *)(v304 + 16) = 32;
  uint64_t v305 = swift_allocObject();
  *(unsigned char *)(v305 + 16) = 8;
  uint64_t v306 = swift_allocObject();
  *(void *)(v306 + 16) = sub_1000AC47C;
  *(void *)(v306 + 24) = v301;
  uint64_t v307 = swift_allocObject();
  *(void *)(v307 + 16) = sub_1000AC4D4;
  *(void *)(v307 + 24) = v306;
  sub_100007E0C(&qword_100151EB0);
  uint64_t v308 = swift_allocObject();
  *(_OWORD *)(v308 + 16) = xmmword_10010AFB0;
  *(void *)(v308 + 32) = sub_1000AC4BC;
  *(void *)(v308 + 40) = v304;
  *(void *)(v308 + 48) = sub_1000B28CC;
  *(void *)(v308 + 56) = v305;
  *(void *)(v308 + 64) = sub_1000AC514;
  *(void *)(v308 + 72) = v307;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v309 = v303;
  v374 = v302;
  if (os_log_type_enabled(v302, v303))
  {
    v310 = (uint8_t *)swift_slowAlloc();
    v378._id countAndFlagsBits = swift_slowAlloc();
    *(_WORD *)v310 = 258;
    v310[2] = 32;
    swift_release();
    v310[3] = 8;
    swift_release();
    swift_bridgeObjectRetain();
    v380._id countAndFlagsBits = sub_1000456B4((uint64_t)v373, v300, &v378._countAndFlagsBits);
    sub_1001052C8();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    v311 = v374;
    _os_log_impl((void *)&_mh_execute_header, v374, v309, "%s", v310, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v331 + 8))(v344, v332);
  if (v381[2])
  {
    v378._id countAndFlagsBits = (uint64_t)v381;
    sub_100103DE8();
  }
  return (id)swift_bridgeObjectRelease();
}