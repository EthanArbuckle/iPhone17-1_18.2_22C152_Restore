void sub_1000ABD38(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  int64_t v16;
  void *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1001053C8();
    sub_100008234(0, &qword_100151EC0);
    sub_1000AC51C();
    sub_100104ED8();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(unsigned char *)(a1 + 32);
    v17 = (void *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64) {
      v8 = ~(-1 << v7);
    }
    else {
      v8 = -1;
    }
    v5 = v8 & *(void *)(a1 + 56);
  }
  v16 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      v9 = (v5 - 1) & v5;
      v10 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      v11 = (char *)v4;
      goto LABEL_29;
    }
    v13 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v16) {
      goto LABEL_32;
    }
    v14 = v17[v13];
    v11 = (char *)v4 + 1;
    if (!v14)
    {
      v11 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v16) {
        goto LABEL_32;
      }
      v14 = v17[(void)v11];
      if (!v14)
      {
        v11 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v16) {
          goto LABEL_32;
        }
        v14 = v17[(void)v11];
        if (!v14)
        {
          v11 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v16) {
            goto LABEL_32;
          }
          v14 = v17[(void)v11];
          if (!v14)
          {
            v11 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v16) {
              goto LABEL_32;
            }
            v14 = v17[(void)v11];
            if (!v14)
            {
              v15 = (char *)v4 + 6;
              while ((char *)v16 != v15)
              {
                v14 = v17[(void)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10002CFC0();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(void *)(v2 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1000AD518(v18, v12, &qword_100151EC0, (uint64_t)NSManagedObject_ptr, &qword_100151EE8);

      v4 = v11;
      v5 = v9;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_100105408())
      {
        sub_100008234(0, &qword_100151EC0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v18[0];
        swift_unknownObjectRelease();
        v11 = (char *)v4;
        v9 = v5;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_1000AC068(char a1)
{
  unint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64724F7465737361;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x7461447972746E65;
      break;
    case 5:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 6:
      unint64_t result = 0x6144656C646E7562;
      break;
    case 7:
      unint64_t result = 0x72756F5365746164;
      break;
    case 8:
      unint64_t result = 0x64656767616C66;
      break;
    case 9:
      unint64_t result = 0x74706D6F7270;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AC1F0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000AC068(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000AC068(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1001057F8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000AC27C()
{
  char v1 = *v0;
  sub_1001058D8();
  sub_1000AC068(v1);
  sub_100104BC8();
  swift_bridgeObjectRelease();
  return sub_100105928();
}

uint64_t sub_1000AC2E0()
{
  sub_1000AC068(*v0);
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000AC334()
{
  char v1 = *v0;
  sub_1001058D8();
  sub_1000AC068(v1);
  sub_100104BC8();
  swift_bridgeObjectRelease();
  return sub_100105928();
}

uint64_t sub_1000AC394@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000B2640(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000AC3C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000AC068(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000AC3F0()
{
  unint64_t result = qword_100151EA8;
  if (!qword_100151EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151EA8);
  }
  return result;
}

uint64_t sub_1000AC444()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC47C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000AC4AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_1000AC4BC(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_100045604(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1000AC4C4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000AC4D4()
{
  return sub_100045614(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000AC4DC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC514(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_10004563C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_1000AC51C()
{
  unint64_t result = qword_100151EC8;
  if (!qword_100151EC8)
  {
    sub_100008234(255, &qword_100151EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151EC8);
  }
  return result;
}

uint64_t sub_1000AC584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1001058D8();
  sub_1001039D8();
  sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  sub_1001049F8();
  Swift::Int v10 = sub_100105928();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    v19 = v2;
    uint64_t v20 = a2;
    uint64_t v21 = a1;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v22 + 72);
    while (1)
    {
      sub_1000170BC(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8);
      char v15 = sub_1001039A8();
      sub_100017120((uint64_t)v8);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v20;
        a1 = v21;
        uint64_t v3 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_100017120(v20);
    sub_1000170BC(*(void *)(*v19 + 48) + v14 * v12, v21);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000170BC(a2, (uint64_t)v8);
    uint64_t v23 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000AF1B0((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v23;
    swift_bridgeObjectRelease();
    sub_100078F10(a2, a1);
    return 1;
  }
}

uint64_t sub_1000AC800(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  v33 = a2;
  uint64_t v11 = sub_1001049E8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1000B23A8((unint64_t *)&qword_10014DD88, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_100104A98();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000AF408((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1000ACB24(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_1001058D8();
  sub_1000AC068(a2);
  swift_bridgeObjectRetain();
  sub_100104BC8();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_100105928();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *char v2 = 0x8000000000000000;
    sub_1000AF6A8(a2, v7, isUniquelyReferenced_nonNull_native);
    *char v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_46;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE400000000000000;
    unint64_t v10 = 1954047348;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x64724F7465737361;
        unint64_t v9 = 0xED0000676E697265;
        break;
      case 2:
        unint64_t v10 = 0xD000000000000015;
        unint64_t v9 = 0x8000000100110270;
        break;
      case 3:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x656C746974;
        break;
      case 4:
        unint64_t v10 = 0x7461447972746E65;
        unint64_t v9 = 0xE900000000000065;
        break;
      case 5:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x6449656C646E7562;
        break;
      case 6:
        unint64_t v9 = 0xEA00000000006574;
        unint64_t v10 = 0x6144656C646E7562;
        break;
      case 7:
        unint64_t v10 = 0x72756F5365746164;
        unint64_t v9 = 0xEA00000000006563;
        break;
      case 8:
        unint64_t v9 = 0xE700000000000000;
        unint64_t v10 = 0x64656767616C66;
        break;
      case 9:
        unint64_t v9 = 0xE600000000000000;
        unint64_t v10 = 0x74706D6F7270;
        break;
      case 0xA:
        unint64_t v9 = 0x80000001001102C0;
        unint64_t v10 = 0xD000000000000011;
        break;
      case 0xB:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x726568746FLL;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE400000000000000;
    unint64_t v12 = 1954047348;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xED0000676E697265;
        if (v10 == 0x64724F7465737361) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        unint64_t v11 = 0x8000000100110270;
        if (v10 != 0xD000000000000015) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x656C746974) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        unint64_t v11 = 0xE900000000000065;
        if (v10 != 0x7461447972746E65) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 5:
        unint64_t v11 = 0xE800000000000000;
        if (v10 != 0x6449656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 6:
        unint64_t v11 = 0xEA00000000006574;
        if (v10 != 0x6144656C646E7562) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 7:
        unint64_t v11 = 0xEA00000000006563;
        if (v10 != 0x72756F5365746164) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 8:
        unint64_t v11 = 0xE700000000000000;
        if (v10 != 0x64656767616C66) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 9:
        unint64_t v11 = 0xE600000000000000;
        if (v10 != 0x74706D6F7270) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 10:
        unint64_t v11 = 0x80000001001102C0;
        unint64_t v12 = 0xD000000000000011;
        goto LABEL_35;
      case 11:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x726568746FLL) {
          goto LABEL_37;
        }
        goto LABEL_36;
      default:
LABEL_35:
        if (v10 != v12) {
          goto LABEL_37;
        }
LABEL_36:
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_45;
        }
LABEL_37:
        char v13 = sub_1001057F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_45:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_46:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1000AD018(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1001058D8();
  sub_1001058E8(a2);
  Swift::Int v6 = sub_100105928();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *char v2 = 0x8000000000000000;
    sub_1000AFBB4(a2, v8, isUniquelyReferenced_nonNull_native);
    *char v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000AD138(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1001058D8();
  sub_100104A08();
  Swift::Int v9 = sub_100105928();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a2 && v14[1] == a3;
    if (v15 || (sub_1001057F8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      v16 = (Swift::Int *)(*(void *)(*v4 + 48) + 16 * v11);
      Swift::Int v17 = v16[1];
      *a1 = *v16;
      a1[1] = v17;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v19 = ~v10;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v19;
      if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v13 + 16 * v11);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_1001057F8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1000AFD14(a2, a3, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1000AD2C8(void *a1, void *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v5 = v4;
  uint64_t v8 = *v4;
  sub_100104B78();
  sub_1001058D8();
  swift_bridgeObjectRetain();
  sub_100104BC8();
  Swift::Int v9 = sub_100105928();
  swift_bridgeObjectRelease();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v26 = a2;
    sub_1000AFEB0((uint64_t)v26, v11, isUniquelyReferenced_nonNull_native, a3, a4);
    *uint64_t v5 = v32;
    swift_bridgeObjectRelease();
    *a1 = v26;
    return 1;
  }
  uint64_t v12 = sub_100104B78();
  uint64_t v14 = v13;
  if (v12 == sub_100104B78() && v14 == v15)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_1001057F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      uint64_t v18 = ~v10;
      do
      {
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v19 = sub_100104B78();
        uint64_t v21 = v20;
        if (v19 == sub_100104B78() && v21 == v22) {
          goto LABEL_16;
        }
        char v24 = sub_1001057F8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v28 = *(void **)(*(void *)(*v5 + 48) + 8 * v11);
  *a1 = v28;
  id v29 = v28;
  return 0;
}

uint64_t sub_1000AD4FC(void *a1, void *a2)
{
  return sub_1000AD518(a1, a2, &qword_10014D5C8, (uint64_t)NSManagedObjectID_ptr, &qword_10014ED18);
}

uint64_t sub_1000AD518(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_1001053E8();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_100008234(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1001053D8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_1000AD7E4(v12, result + 1, a5, a3);
    v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_1000AEE90(v33, a5);
      id v29 = v38;
    }
    else
    {
      id v29 = (void *)v27;
      id v30 = v13;
    }
    sub_1000AF12C((uint64_t)v13, v29);
    *uint64_t v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = sub_100105208(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_100008234(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = sub_100105218();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = sub_100105218();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    id v32 = a2;
    sub_1000B00F4((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

Swift::Int sub_1000AD7E4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_100007E0C(a3);
    uint64_t v6 = sub_100105478();
    uint64_t v19 = v6;
    sub_1001053C8();
    if (sub_100105408())
    {
      sub_100008234(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_1000AEE90(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_100105208(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_100105408());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

uint64_t sub_1000AD9E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100007E0C(&qword_100151EF0);
  uint64_t v6 = sub_100105468();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    id v30 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    id v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_100078F10(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_1001058D8();
      sub_1001039D8();
      sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1001049F8();
      uint64_t result = sub_100105928();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_100078F10((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1000ADDB8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1001039D8();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100007E0C(&qword_100151EF8);
  uint64_t v5 = sub_100105468();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_1001049E8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1000AE1B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007E0C(&qword_100151EE0);
  uint64_t v3 = sub_100105468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1001058D8();
    sub_100104BC8();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_100105928();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1000AE5D4);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000AE604()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007E0C(&qword_10014ECE8);
  uint64_t result = sub_100105468();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_1001058D8();
      sub_1001058E8(v18);
      uint64_t result = sub_100105928();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000AE8B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007E0C(&qword_100151F18);
  uint64_t result = sub_100105468();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      sub_1001058D8();
      sub_100104A08();
      uint64_t result = sub_100105928();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
      *unint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000AEB80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100007E0C(a2);
  uint64_t v5 = sub_100105468();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    unint64_t v29 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v31 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 56);
    int64_t v30 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = v31[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v17 = v31[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v30) {
              goto LABEL_33;
            }
            unint64_t v17 = v31[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v30)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v31 = -1 << v28;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v17 = v31[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v31[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * v15);
      sub_100104B78();
      sub_1001058D8();
      sub_100104BC8();
      Swift::Int v20 = sub_100105928();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = v20 & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v6 + 48) + 8 * v13) = v19;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1000AEE90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100007E0C(a2);
  uint64_t v5 = sub_100105468();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    int64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_100105208(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_1000AF12C(uint64_t a1, void *a2)
{
  sub_100105208(a2[5]);
  unint64_t result = sub_1001053B8();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1000AF1B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  BOOL v27 = v3;
  uint64_t v28 = a1;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v13 = v8;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000AD9E8();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_1000B0C4C();
LABEL_8:
    uint64_t v14 = *v3;
    sub_1001058D8();
    sub_1001039D8();
    sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1001049F8();
    Swift::Int v15 = sub_100105928();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        sub_1000170BC(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10);
        char v19 = sub_1001039A8();
        sub_100017120((uint64_t)v10);
        if (v19) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v13 = v8;
  sub_1000B0288();
LABEL_14:
  uint64_t v20 = v28;
  uint64_t v21 = *v27;
  *(void *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_100078F10(v20, *(void *)(v21 + 48) + *(void *)(v13 + 72) * a2);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_100105868();
  __break(1u);
  return result;
}

uint64_t sub_1000AF408(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000ADDB8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1000B04C4();
      goto LABEL_12;
    }
    sub_1000B0FE0();
  }
  uint64_t v12 = *v3;
  sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = sub_1001049E8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    char v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1000B23A8((unint64_t *)&qword_10014DD88, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_100104A98();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_100105868();
  __break(1u);
  return result;
}

Swift::Int sub_1000AF6A8(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1000AE1B4();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1000B0768(&qword_100151EE0);
        goto LABEL_49;
      }
      sub_1000B1390();
    }
    uint64_t v8 = *v3;
    sub_1001058D8();
    sub_1000AC068(v5);
    sub_100104BC8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_100105928();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        unint64_t v12 = 1954047348;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x64724F7465737361;
            unint64_t v11 = 0xED0000676E697265;
            break;
          case 2:
            unint64_t v12 = 0xD000000000000015;
            unint64_t v11 = 0x8000000100110270;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x656C746974;
            break;
          case 4:
            unint64_t v12 = 0x7461447972746E65;
            unint64_t v11 = 0xE900000000000065;
            break;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x6449656C646E7562;
            break;
          case 6:
            unint64_t v11 = 0xEA00000000006574;
            unint64_t v12 = 0x6144656C646E7562;
            break;
          case 7:
            unint64_t v12 = 0x72756F5365746164;
            unint64_t v11 = 0xEA00000000006563;
            break;
          case 8:
            unint64_t v11 = 0xE700000000000000;
            unint64_t v12 = 0x64656767616C66;
            break;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x74706D6F7270;
            break;
          case 0xA:
            unint64_t v11 = 0x80000001001102C0;
            unint64_t v12 = 0xD000000000000011;
            break;
          case 0xB:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x726568746FLL;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1954047348;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xED0000676E697265;
            if (v12 != 0x64724F7465737361) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 2:
            unint64_t v13 = 0x8000000100110270;
            if (v12 != 0xD000000000000015) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x656C746974) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 4:
            unint64_t v13 = 0xE900000000000065;
            if (v12 != 0x7461447972746E65) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x6449656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 6:
            unint64_t v13 = 0xEA00000000006574;
            if (v12 != 0x6144656C646E7562) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 7:
            unint64_t v13 = 0xEA00000000006563;
            if (v12 != 0x72756F5365746164) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 8:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x64656767616C66;
            goto LABEL_42;
          case 9:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x74706D6F7270) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 10:
            unint64_t v13 = 0x80000001001102C0;
            if (v12 != 0xD000000000000011) {
              goto LABEL_44;
            }
            goto LABEL_43;
          case 11:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x726568746FLL) {
              goto LABEL_44;
            }
            goto LABEL_43;
          default:
LABEL_42:
            if (v12 != v14) {
              goto LABEL_44;
            }
LABEL_43:
            if (v11 == v13) {
              goto LABEL_52;
            }
LABEL_44:
            char v15 = sub_1001057F8();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_53;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_49:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_52:
    swift_bridgeObjectRelease_n();
LABEL_53:
    sub_100105868();
    __break(1u);
    JUMPOUT(0x1000AFB54);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

Swift::Int sub_1000AFBB4(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000AE604();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000B0768(&qword_10014ECE8);
      goto LABEL_14;
    }
    sub_1000B17AC();
  }
  uint64_t v8 = *v3;
  sub_1001058D8();
  sub_1001058E8(v5);
  uint64_t result = sub_100105928();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_100105868();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1000AFD14(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::UInt v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000AE8B0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1000B08F4();
      goto LABEL_22;
    }
    sub_1000B1A28();
  }
  uint64_t v11 = *v4;
  sub_1001058D8();
  sub_100104A08();
  uint64_t result = sub_100105928();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1001057F8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_100105868();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1001057F8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1000AFEB0(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v7 = v5;
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_1000AEB80(v12, a4);
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_1000B0AA8(a4);
LABEL_22:
      uint64_t v29 = *v7;
      *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v29 + 48) + 8 * a2) = v9;
      uint64_t v30 = *(void *)(v29 + 16);
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (!v31)
      {
        *(void *)(v29 + 16) = v32;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1000B1CC8(v12, a4);
  }
  uint64_t v13 = *v5;
  sub_100104B78();
  sub_1001058D8();
  sub_100104BC8();
  Swift::Int v14 = sub_100105928();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v16 = sub_100104B78();
  uint64_t v18 = v17;
  if (v16 == sub_100104B78() && v18 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v21 = sub_1001057F8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = ~v15;
    do
    {
      a2 = (a2 + 1) & v22;
      if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v23 = sub_100104B78();
      uint64_t v25 = v24;
      if (v23 == sub_100104B78() && v25 == v26) {
        goto LABEL_25;
      }
      char v28 = sub_1001057F8();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v28 & 1) == 0);
  }
LABEL_26:
  a5(0);
  uint64_t result = sub_100105868();
  __break(1u);
  return result;
}

void sub_1000B00F4(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_1000AEE90(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1000B0AA8(a4);
      goto LABEL_14;
    }
    sub_1000B1FA4(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = sub_100105208(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100008234(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_100105218();

    if (v16)
    {
LABEL_13:
      sub_100105868();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_100105218();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

void *sub_1000B0288()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  Swift::UInt v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100151EF0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_100105458();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_1000170BC(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t result = (void *)sub_100078F10((uint64_t)v5, *(void *)(v8 + 48) + v19);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000B04C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001039D8();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::UInt v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100151EF8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_100105458();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1000B0768(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100007E0C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100105458();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000B08F4()
{
  uint64_t v1 = v0;
  sub_100007E0C(&qword_100151F18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100105458();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1000B0AA8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100007E0C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100105458();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000B0C4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100007E0C(&qword_100151EF0);
  uint64_t v6 = sub_100105468();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_1000170BC(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    sub_1001058D8();
    sub_1001039D8();
    sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1001049F8();
    uint64_t result = sub_100105928();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_100078F10((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000B0FE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001039D8();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100007E0C(&qword_100151EF8);
  uint64_t v7 = sub_100105468();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1000B23A8((unint64_t *)&qword_10014D5B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1001049E8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000B1390()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007E0C(&qword_100151EE0);
  uint64_t v3 = sub_100105468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1001058D8();
    sub_100104BC8();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_100105928();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1000B177CLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000B17AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007E0C(&qword_10014ECE8);
  uint64_t result = sub_100105468();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1001058D8();
    sub_1001058E8(v18);
    uint64_t result = sub_100105928();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000B1A28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007E0C(&qword_100151F18);
  uint64_t result = sub_100105468();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v28)
          {
LABEL_32:
            uint64_t result = swift_release();
            uint64_t v1 = v0;
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          int64_t v5 = v17;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_23:
    Swift::UInt v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1001058D8();
    sub_100104A08();
    uint64_t result = sub_100105928();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000B1CC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100007E0C(a2);
  uint64_t v5 = sub_100105468();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  char v29 = v2;
  uint64_t v30 = v4 + 56;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void **)(*(void *)(v4 + 48) + 8 * v15);
    sub_100104B78();
    sub_1001058D8();
    id v20 = v19;
    sub_100104BC8();
    Swift::Int v21 = sub_100105928();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v6 + 48) + 8 * v13) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000B1FA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100007E0C(a2);
  uint64_t v5 = sub_100105468();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_100105208(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000B221C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1000B22CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000B268C();
  uint64_t result = sub_100104EC8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1000ACB24(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000B2340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014DD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B23A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B23F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for NLTag(0);
  sub_1000B23A8(&qword_10014C5B0, type metadata accessor for NLTag);
  uint64_t result = sub_100104EC8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1000AD2C8(&v6, v5, &qword_100151F10, type metadata accessor for NLTag);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000B24CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_100104EC8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1000AD138(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1000B2564(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for MKPointOfInterestCategory(0);
  sub_1000B23A8(&qword_10014C4E8, type metadata accessor for MKPointOfInterestCategory);
  uint64_t result = sub_100104EC8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      Swift::Int v5 = *v4++;
      sub_1000AD2C8(&v6, v5, &qword_100151F08, type metadata accessor for MKPointOfInterestCategory);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000B2640(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100138338;
  v6._object = a2;
  unint64_t v4 = sub_100105648(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xC) {
    return 12;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000B268C()
{
  unint64_t result = qword_100151ED8;
  if (!qword_100151ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151ED8);
  }
  return result;
}

uint64_t _s6FieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6FieldsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B283CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6FieldsOMa()
{
  return &_s6FieldsON;
}

unint64_t sub_1000B2878()
{
  unint64_t result = qword_100151F00;
  if (!qword_100151F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100151F00);
  }
  return result;
}

id sub_1000B28D4()
{
  id v0 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v0 setAllowedUnits:224];
  [v0 setZeroFormattingBehavior:10];
  id result = [v0 setUnitsStyle:3];
  qword_100151F20 = (uint64_t)v0;
  return result;
}

uint64_t static FormatStyle<>.mediaTimeShort(for:)(double a1)
{
  uint64_t v2 = sub_100105998();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3600.0) {
    sub_100105988();
  }
  else {
    sub_100105978();
  }
  sub_1001033D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000B2A44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001047C8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100104808();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10014BEC8 != -1) {
    swift_once();
  }
  v18[1] = qword_100162DE0;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  int64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_1000B4AA8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100062F14;
  aBlock[3] = &unk_10013C8C8;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a1;
  swift_bridgeObjectRetain();
  sub_1001047D8();
  int64_t v20 = _swiftEmptyArrayStorage;
  sub_10003A254();
  sub_100007E0C(&qword_10014DA28);
  sub_10003A2AC();
  sub_100105388();
  sub_1001050D8();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_1000B2D30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a2;
    sub_1000B2DCC(v8, a3, a4);
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000B2DCC(UIImage *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v24 = a1;
  uint64_t v5 = sub_100103728();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v23 - v14;
  sub_1000B300C((uint64_t)v13);
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_100007F78();
  sub_100103808();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  unint64_t v17 = UIImageHEICRepresentation(v24);
  if (v17)
  {
    int64_t v18 = v17;
    uint64_t v19 = sub_100103848();
    unint64_t v21 = v20;

    sub_1000B4ACC();
    sub_100010378(v19, v21);
  }
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

uint64_t sub_1000B300C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100103728();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100103818();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v17 - v12;
  if (qword_10014C0B8 != -1) {
    uint64_t v11 = swift_once();
  }
  if (qword_100163180)
  {
    sub_1000BD360(qword_100163178, (void *)qword_100163180, (uint64_t)v10);
    unsigned int v19 = enum case for URL.DirectoryHint.inferFromPath(_:);
    int64_t v18 = *(void (**)(char *))(v3 + 104);
    v18(v5);
    v17[1] = sub_100007F78();
    sub_1001037F8();
    v17[0] = a1;
    uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v5, v2);
    unint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
    v15(v10, v6);
    ((void (*)(char *, void, uint64_t))v18)(v5, v19, v2);
    sub_1001037F8();
    v14(v5, v2);
    return ((uint64_t (*)(char *, uint64_t))v15)(v13, v6);
  }
  else
  {
    return static URL.cachesDirectory.getter(v11);
  }
}

uint64_t sub_1000B32DC()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100151F28);
  sub_100007D30(v0, (uint64_t)qword_100151F28);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B33D8()
{
  v1[3] = v0;
  sub_100007E0C(&qword_100150E28);
  v1[4] = swift_task_alloc();
  sub_100007E0C(&qword_100150400);
  v1[5] = swift_task_alloc();
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000B3524;
  return sub_1000A33DC();
}

uint64_t sub_1000B3524(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000B3624, 0, 0);
}

uint64_t sub_1000B3624()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v1);
  }
  uint64_t v2 = v0[4];
  sub_100010808(v0[3] + qword_100163138, v2, &qword_100150E28);
  uint64_t v3 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  if (v4 == 1)
  {
    sub_100012510(v0[4], &qword_100150E28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
LABEL_5:
    sub_100012510(v0[5], &qword_100150400);
    if (qword_10014C058 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100103DB8();
    sub_100007D30(v9, (uint64_t)qword_100151F28);
    uint64_t v10 = sub_100103D98();
    os_log_type_t v11 = sub_100104FF8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "no visits data", v12, 2u);
      swift_slowDealloc();
    }

    goto LABEL_10;
  }
  sub_100010808(v0[4], v0[5], &qword_100150400);
  sub_1000B49C8(v8, _s15GenericMapAssetC14GenericMapDataVMa);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1) {
    goto LABEL_5;
  }
  sub_1000B4964(v0[5], v0[8]);
  unint64_t v15 = (void *)swift_task_alloc();
  v0[11] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1000B3908;
  uint64_t v16 = v0[3];
  v15[16] = v0[8];
  v15[17] = v16;
  return _swift_task_switch(sub_1000B4138, 0, 0);
}

uint64_t sub_1000B3908(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000B3A08, 0, 0);
}

uint64_t sub_1000B3A08()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(unsigned __int8 *)(*(void *)(v0 + 24) + qword_100151B30);
    *(unsigned char *)(v0 + 120) = v2;
    switch(v2)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = sub_1001057F8();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          sub_1000B49C8(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
          uint64_t v1 = *(void *)(v0 + 96);
          goto LABEL_10;
        }
        sub_100073A54();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 104) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_1000B3C88;
        uint64_t result = sub_100097018(v5 * v8);
        break;
    }
  }
  else
  {
    sub_1000B49C8(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v1);
  }
  return result;
}

uint64_t sub_1000B3C88(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000B3D88, 0, 0);
}

uint64_t sub_1000B3D88()
{
  uint64_t v1 = (void *)v0[14];
  if (v1)
  {
    char v12 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v12)
    {
      sub_1000B49C8(v0[8], _s10VisitAssetC9VisitDataVMa);

      goto LABEL_15;
    }
    if (qword_10014BEC0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[8];
    sub_1000B2A44(v1, *(void *)(v0[3] + qword_100151B00), *(void *)(v0[3] + qword_100151B00 + 8));

    uint64_t v11 = v13;
  }
  else
  {
    if (qword_10014C058 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = sub_100103DB8();
    sub_100007D30(v3, (uint64_t)qword_100151F28);
    id v4 = v2;
    double v5 = sub_100103D98();
    os_log_type_t v6 = sub_100104FF8();
    BOOL v7 = os_log_type_enabled(v5, v6);
    double v8 = v0[3];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v0[2] = v8;
      uint64_t v10 = v8;
      sub_1001052C8();
      *uint64_t v17 = v8;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%@ - error creating thumbnail from MKMap", v9, 0xCu);
      sub_100007E0C(&qword_10014DF20);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      double v5 = v8;
    }

    uint64_t v11 = v0[8];
  }
  sub_1000B49C8(v11, _s10VisitAssetC9VisitDataVMa);
LABEL_15:
  uint64_t v14 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_1000B4118(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return _swift_task_switch(sub_1000B4138, 0, 0);
}

uint64_t sub_1000B4138()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  sub_100007E0C(&qword_1001520C8);
  uint64_t v3 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100108260;
  sub_100071580(v1, v5 + v4);
  *(void *)(v0 + 144) = sub_10000FC80(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(unsigned char *)(v0 + 192) = *(unsigned char *)(v2 + qword_100151B30);
  *(void *)(v0 + 152) = *(void *)(v2 + qword_100151B40);
  sub_100104E38();
  *(void *)(v0 + 160) = sub_100104E28();
  uint64_t v7 = sub_100104DE8();
  return _swift_task_switch(sub_1000B42D8, v7, v6);
}

uint64_t sub_1000B42D8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 192);
  swift_release();
  *(void *)(v0 + 168) = sub_100015E08(v2, 0, v3, v1, 0);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000B4374, 0, 0);
}

uint64_t sub_1000B4374()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000B4498;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10005E414;
  v0[13] = &unk_10013C8F0;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000B4498()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1000B45A8;
  }
  else {
    uint64_t v2 = sub_1000A7C3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000B45A8()
{
  swift_willThrow();
  if (qword_10014C058 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100103DB8();
  sub_100007D30(v1, (uint64_t)qword_100151F28);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100103D98();
  os_log_type_t v3 = sub_100104FF8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    char v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    double v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v9;
    sub_1001052C8();
    *double v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_1000B47D0()
{
  return sub_100012510(v0 + qword_100163138, &qword_100150E28);
}

uint64_t sub_1000B47FC(uint64_t a1)
{
  return sub_100012510(a1 + qword_100163138, &qword_100150E28);
}

uint64_t type metadata accessor for GenericMapThumbnailCacheOperation()
{
  uint64_t result = qword_100151F68;
  if (!qword_100151F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000B4874()
{
  sub_1000B4904();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_1000B4904()
{
  if (!qword_100151F80)
  {
    _s15GenericMapAssetC14GenericMapDataVMa(255);
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100151F80);
    }
  }
}

uint64_t sub_1000B495C()
{
  return type metadata accessor for GenericMapThumbnailCacheOperation();
}

uint64_t sub_1000B4964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B49C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000B4A28()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B4A60()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000B4AA8()
{
  return sub_1000B2D30(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000B4AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B4AC4()
{
  return swift_release();
}

uint64_t sub_1000B4ACC()
{
  return sub_100103858();
}

uint64_t type metadata accessor for VideoUtilities()
{
  return self;
}

uint64_t sub_1000B4CF8(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_1000B4D18, 0, 0);
}

uint64_t sub_1000B4D18()
{
  id v1 = objc_allocWithZone((Class)AVURLAsset);
  sub_100103788(v2);
  uint64_t v4 = v3;
  v0[6] = [v1 initWithURL:v3 options:0];

  sub_100007E0C(&qword_100152180);
  uint64_t v5 = sub_100103BA8();
  v0[7] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000B4E24;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 2, v5);
}

uint64_t sub_1000B4E24()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000B4FAC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1000B4F40;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000B4F40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v2, v3);
}

uint64_t sub_1000B4FAC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B5018(uint64_t a1, double a2)
{
  *(double *)(v2 + 24) = a2;
  *(void *)(v2 + 16) = a1;
  return _swift_task_switch(sub_1000B503C, 0, 0);
}

uint64_t sub_1000B503C()
{
  double v1 = v0[3];
  id v2 = objc_allocWithZone((Class)AVURLAsset);
  sub_100103788(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithURL:v4 options:0];
  *((void *)v0 + 4) = v6;

  id v7 = [objc_allocWithZone((Class)AVAssetImageGenerator) initWithAsset:v6];
  *((void *)v0 + 5) = v7;
  [v7 setAppliesPreferredTrackTransform:1];
  [v7 setMaximumSize:v1, v1];
  [v7 setDynamicRangePolicy:AVAssetImageGeneratorDynamicRangePolicyForceSDR];
  unint64_t v8 = sub_1001051B8(0.0, 60);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  *((void *)v0 + 6) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1000B51AC;
  return AVAssetImageGenerator.image(at:)(v8, v10, v12);
}

uint64_t sub_1000B51AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1000B5370;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_1000B52D4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000B52D4()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = (void *)v0[4];
  id v2 = (void *)v0[5];
  id v4 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v1];

  uint64_t v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_1000B5370()
{
  uint64_t v1 = *(void **)(v0 + 32);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000B53D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v169 = a1;
  uint64_t v145 = sub_1001038B8();
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v140 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v2 - 8);
  uint64_t v153 = (uint64_t)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100103978();
  uint64_t v160 = *(void *)(v4 - 8);
  uint64_t v161 = v4;
  __chkstk_darwin(v4);
  v152 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_100150AB0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100104888();
  uint64_t v158 = *(void *)(v9 - 8);
  uint64_t v159 = v9;
  __chkstk_darwin(v9);
  v151 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = type metadata accessor for CanvasStartingState();
  __chkstk_darwin(v162);
  uint64_t v166 = (uint64_t)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_1001039D8();
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  v150 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007E0C(&qword_10014DD70);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v163 = (uint64_t)&v140 - v17;
  uint64_t v18 = sub_1001034B8();
  uint64_t v164 = *(void *)(v18 - 8);
  uint64_t v165 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  v154 = (char *)&v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v148 = (char *)&v140 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v147 = (char *)&v140 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v149 = (char *)&v140 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v142 = (char *)&v140 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v141 = (char *)&v140 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v140 - v32;
  __chkstk_darwin(v31);
  v146 = (char *)&v140 - v34;
  uint64_t v35 = sub_100103818();
  uint64_t v155 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v140 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100007E0C((uint64_t *)&unk_100151990);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  v41 = (char *)&v140 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v43 = (char *)&v140 - v42;
  uint64_t v44 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v44);
  v46 = (char *)&v140 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100103528();
  uint64_t v167 = *(void *)(v47 - 8);
  uint64_t v168 = v47;
  uint64_t v48 = __chkstk_darwin(v47);
  v171 = (char *)&v140 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v51 = (char *)&v140 - v50;
  sub_100103518();
  sub_100103508();
  v172 = v51;
  sub_1001034D8();
  sub_1000B70B8((uint64_t)v170, (uint64_t)v46);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v56 = *((void *)v46 + 1);
      v52 = v172;
      sub_1001034F8();
      uint64_t v57 = v168;
      uint64_t v58 = v167;
      if (v56)
      {
        v60 = (void (*)(char *, void))sub_1001034C8();
        if (*v59)
        {
          v61 = v59;
          sub_1001034A8();
          swift_bridgeObjectRelease();
          unint64_t v62 = *v61;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v61 = v62;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v62 = sub_1000B7754(0, *(void *)(v62 + 16) + 1, 1, v62, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v61 = v62;
          }
          unint64_t v65 = *(void *)(v62 + 16);
          unint64_t v64 = *(void *)(v62 + 24);
          if (v65 >= v64 >> 1)
          {
            unint64_t v62 = sub_1000B7754(v64 > 1, v65 + 1, 1, v62, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v61 = v62;
          }
          *(void *)(v62 + 16) = v65 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v62+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v65, v33, v165);
          v60(v174, 0);
        }
        else
        {
          swift_bridgeObjectRelease();
          v60(v174, 0);
        }
      }
      break;
    case 2u:
      uint64_t v66 = v163;
      sub_100033870((uint64_t)v46, v163, &qword_10014DD70);
      v52 = v172;
      sub_1001034F8();
      sub_100010808(v66, (uint64_t)v16, &qword_10014DD70);
      uint64_t v67 = v156;
      uint64_t v68 = v157;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v16, 1, v157) == 1)
      {
        v54 = &qword_10014DD70;
        sub_100012510(v66, &qword_10014DD70);
        uint64_t v55 = (uint64_t)v16;
        goto LABEL_13;
      }
      v89 = v150;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v150, v16, v68);
      v90 = (void (*)(char *, void))sub_1001034C8();
      uint64_t v57 = v168;
      uint64_t v58 = v167;
      if (*v91)
      {
        v92 = v91;
        v170 = v90;
        sub_100103988();
        v93 = v141;
        sub_1001034A8();
        swift_bridgeObjectRelease();
        unint64_t v94 = *v92;
        char v95 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v92 = v94;
        uint64_t v96 = v165;
        if ((v95 & 1) == 0)
        {
          unint64_t v94 = sub_1000B7754(0, *(void *)(v94 + 16) + 1, 1, v94, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
          unint64_t *v92 = v94;
        }
        unint64_t v98 = *(void *)(v94 + 16);
        unint64_t v97 = *(void *)(v94 + 24);
        if (v98 >= v97 >> 1)
        {
          unint64_t v94 = sub_1000B7754(v97 > 1, v98 + 1, 1, v94, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
          unint64_t *v92 = v94;
        }
        *(void *)(v94 + 16) = v98 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v94+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v98, v93, v96);
        v170(v174, 0);
        (*(void (**)(char *, uint64_t))(v156 + 8))(v150, v157);
      }
      else
      {
        v90(v174, 0);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v89, v68);
      }
      sub_100012510(v163, &qword_10014DD70);
      break;
    case 3u:
      uint64_t v69 = (uint64_t)v46;
      uint64_t v70 = v166;
      sub_1000B7B18(v69, v166);
      v52 = v172;
      sub_1001034F8();
      sub_100010808(v70, (uint64_t)v8, &qword_100150AB0);
      uint64_t v72 = v158;
      uint64_t v71 = v159;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v8, 1, v159) == 1)
      {
        sub_100012510((uint64_t)v8, &qword_100150AB0);
        uint64_t v57 = v168;
        uint64_t v58 = v167;
        v73 = (int *)v162;
      }
      else
      {
        v99 = v151;
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v151, v8, v71);
        v100 = (void (*)(char *, void))sub_1001034C8();
        v73 = (int *)v162;
        if (*v101)
        {
          v102 = v101;
          v170 = v100;
          uint64_t v173 = sub_100104878();
          sub_1001057C8();
          v103 = v142;
          sub_1001034A8();
          swift_bridgeObjectRelease();
          unint64_t v104 = *v102;
          char v105 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v102 = v104;
          uint64_t v58 = v167;
          if ((v105 & 1) == 0)
          {
            unint64_t v104 = sub_1000B7754(0, *(void *)(v104 + 16) + 1, 1, v104, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v102 = v104;
          }
          uint64_t v57 = v168;
          unint64_t v107 = *(void *)(v104 + 16);
          unint64_t v106 = *(void *)(v104 + 24);
          if (v107 >= v106 >> 1)
          {
            unint64_t v104 = sub_1000B7754(v106 > 1, v107 + 1, 1, v104, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v102 = v104;
          }
          *(void *)(v104 + 16) = v107 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v104+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v107, v103, v165);
          v170(v174, 0);
          (*(void (**)(char *, uint64_t))(v158 + 8))(v151, v159);
          v52 = v172;
        }
        else
        {
          v100(v174, 0);
          (*(void (**)(char *, uint64_t))(v72 + 8))(v99, v71);
          uint64_t v57 = v168;
          uint64_t v58 = v167;
        }
        uint64_t v70 = v166;
      }
      if (*(void *)(v70 + v73[5] + 8))
      {
        swift_bridgeObjectRetain();
        v112 = (void (*)(char *, void))sub_1001034C8();
        if (*v111)
        {
          v113 = v111;
          sub_1001034A8();
          swift_bridgeObjectRelease();
          unint64_t v114 = *v113;
          char v115 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v113 = v114;
          if ((v115 & 1) == 0)
          {
            unint64_t v114 = sub_1000B7754(0, *(void *)(v114 + 16) + 1, 1, v114, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v113 = v114;
          }
          v52 = v172;
          unint64_t v117 = *(void *)(v114 + 16);
          unint64_t v116 = *(void *)(v114 + 24);
          if (v117 >= v116 >> 1)
          {
            unint64_t v114 = sub_1000B7754(v116 > 1, v117 + 1, 1, v114, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v113 = v114;
          }
          *(void *)(v114 + 16) = v117 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v114+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v117, v149, v165);
          v112(v174, 0);
        }
        else
        {
          swift_bridgeObjectRelease();
          v112(v174, 0);
          v52 = v172;
        }
        uint64_t v70 = v166;
      }
      uint64_t v118 = v153;
      sub_100010808(v70 + v73[6], v153, (uint64_t *)&unk_100151950);
      uint64_t v119 = v160;
      uint64_t v120 = v161;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48))(v118, 1, v161) == 1)
      {
        sub_100012510(v118, (uint64_t *)&unk_100151950);
      }
      else
      {
        v121 = v152;
        (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v152, v118, v120);
        v123 = (void (*)(char *, void))sub_1001034C8();
        if (*v122)
        {
          v124 = v122;
          v125 = v143;
          sub_1001033C8();
          sub_1000B84A8();
          uint64_t v126 = v145;
          sub_100103958();
          (*(void (**)(char *, uint64_t))(v144 + 8))(v125, v126);
          sub_1001034A8();
          swift_bridgeObjectRelease();
          unint64_t v127 = *v124;
          char v128 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v124 = v127;
          if ((v128 & 1) == 0)
          {
            unint64_t v127 = sub_1000B7754(0, *(void *)(v127 + 16) + 1, 1, v127, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v124 = v127;
          }
          v73 = (int *)v162;
          unint64_t v130 = *(void *)(v127 + 16);
          unint64_t v129 = *(void *)(v127 + 24);
          if (v130 >= v129 >> 1)
          {
            unint64_t v127 = sub_1000B7754(v129 > 1, v130 + 1, 1, v127, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v124 = v127;
          }
          *(void *)(v127 + 16) = v130 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v127+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v130, v147, v165);
          v123(v174, 0);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v152, v161);
          uint64_t v70 = v166;
        }
        else
        {
          v123(v174, 0);
          (*(void (**)(char *, uint64_t))(v119 + 8))(v121, v120);
          uint64_t v70 = v166;
          v73 = (int *)v162;
        }
      }
      unsigned int v131 = *(unsigned __int8 *)(v70 + v73[7]);
      if (v131 < 0xFE)
      {
        char v132 = sub_1000B8414(v131);
        v134 = (void (*)(char *, void))sub_1001034C8();
        if (*v133)
        {
          v135 = v133;
          sub_1000B711C(v132);
          sub_1001034A8();
          swift_bridgeObjectRelease();
          unint64_t v136 = *v135;
          char v137 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v135 = v136;
          if ((v137 & 1) == 0)
          {
            unint64_t v136 = sub_1000B7754(0, *(void *)(v136 + 16) + 1, 1, v136, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v135 = v136;
          }
          unint64_t v139 = *(void *)(v136 + 16);
          unint64_t v138 = *(void *)(v136 + 24);
          if (v139 >= v138 >> 1)
          {
            unint64_t v136 = sub_1000B7754(v138 > 1, v139 + 1, 1, v136, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v135 = v136;
          }
          *(void *)(v136 + 16) = v139 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v136+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v139, v148, v165);
          v134(v174, 0);
        }
        else
        {
          v134(v174, 0);
        }
        sub_1000B961C(v166, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      }
      else
      {
        sub_1000B961C(v70, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      }
      break;
    case 4u:
      v52 = v172;
      sub_1001034F8();
      v75 = (void (*)(char *, void))sub_1001034C8();
      if (!*v74)
      {
        v75(v174, 0);
        goto LABEL_42;
      }
      v76 = v74;
      sub_1001034A8();
      swift_bridgeObjectRelease();
      unint64_t v77 = *v76;
      char v78 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v76 = v77;
      uint64_t v57 = v168;
      uint64_t v58 = v167;
      if ((v78 & 1) == 0)
      {
        unint64_t v77 = sub_1000B7754(0, *(void *)(v77 + 16) + 1, 1, v77, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
        unint64_t *v76 = v77;
      }
      uint64_t v79 = v165;
      unint64_t v81 = *(void *)(v77 + 16);
      unint64_t v80 = *(void *)(v77 + 24);
      if (v81 >= v80 >> 1)
      {
        unint64_t v77 = sub_1000B7754(v80 > 1, v81 + 1, 1, v77, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
        unint64_t *v76 = v77;
      }
      *(void *)(v77 + 16) = v81 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v77+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v81, v154, v79);
      v75(v174, 0);
      break;
    case 5u:
      v52 = v172;
      sub_1001034F8();
      goto LABEL_42;
    default:
      sub_100033870((uint64_t)v46, (uint64_t)v43, (uint64_t *)&unk_100151990);
      v52 = v172;
      sub_1001034F8();
      sub_100010808((uint64_t)v43, (uint64_t)v41, (uint64_t *)&unk_100151990);
      uint64_t v53 = v155;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(v41, 1, v35) == 1)
      {
        v54 = (uint64_t *)&unk_100151990;
        sub_100012510((uint64_t)v43, (uint64_t *)&unk_100151990);
        uint64_t v55 = (uint64_t)v41;
LABEL_13:
        sub_100012510(v55, v54);
LABEL_42:
        uint64_t v57 = v168;
        uint64_t v58 = v167;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v37, v41, v35);
        v83 = (void (*)(char *, void))sub_1001034C8();
        uint64_t v58 = v167;
        if (*v82)
        {
          v84 = v82;
          sub_100103748();
          sub_1001034A8();
          swift_bridgeObjectRelease();
          unint64_t v85 = *v84;
          char v86 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v84 = v85;
          uint64_t v57 = v168;
          if ((v86 & 1) == 0)
          {
            unint64_t v85 = sub_1000B7754(0, *(void *)(v85 + 16) + 1, 1, v85, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v84 = v85;
          }
          unint64_t v88 = *(void *)(v85 + 16);
          unint64_t v87 = *(void *)(v85 + 24);
          if (v88 >= v87 >> 1)
          {
            unint64_t v85 = sub_1000B7754(v87 > 1, v88 + 1, 1, v85, &qword_100152190, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            unint64_t *v84 = v85;
          }
          *(void *)(v85 + 16) = v88 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v164 + 32))(v85+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v88, v146, v165);
          v83(v174, 0);
          (*(void (**)(char *, uint64_t))(v155 + 8))(v37, v35);
          sub_100012510((uint64_t)v43, (uint64_t *)&unk_100151990);
          v52 = v172;
        }
        else
        {
          v83(v174, 0);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v35);
          sub_100012510((uint64_t)v43, (uint64_t *)&unk_100151990);
          uint64_t v57 = v168;
          v52 = v172;
        }
      }
      break;
  }
  v108 = v171;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v171, v52, v57);
  sub_1001034E8();
  v109 = *(void (**)(char *, uint64_t))(v58 + 8);
  v109(v108, v57);
  return ((uint64_t (*)(char *, uint64_t))v109)(v52, v57);
}

uint64_t sub_1000B6E2C(char *a1, char *a2)
{
  return sub_10005439C(*a1, *a2);
}

Swift::Int sub_1000B6E38()
{
  return sub_100105928();
}

uint64_t sub_1000B6EC4()
{
  sub_100104BC8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000B6F3C()
{
  return sub_100105928();
}

uint64_t sub_1000B6FC4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_100138EC0;
  v8._object = v3;
  Swift::Int v5 = sub_100105648(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1000B7024(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6163696669746F6ELL;
  if (*v1) {
    uint64_t v2 = 0x68746C616568;
  }
  unint64_t v3 = 0xED0000736E6F6974;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t type metadata accessor for AppLaunchAction()
{
  uint64_t result = qword_100152238;
  if (!qword_100152238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B70B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B711C(char a1)
{
  uint64_t result = 0x6472616F6279656BLL;
  switch(a1)
  {
    case 2:
      uint64_t result = 0x6B63695065746164;
      break;
    case 3:
      uint64_t result = 0x6974736567677573;
      break;
    case 4:
      uint64_t result = 0x736F746F6870;
      break;
    case 5:
      uint64_t result = 0x6172656D6163;
      break;
    case 6:
      uint64_t result = 0x6C64496F69647561;
      break;
    case 7:
      uint64_t result = 0x7463416F69647561;
      break;
    case 8:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 9:
      uint64_t result = 0x4D664F6574617473;
      break;
    case 10:
      uint64_t result = 0x7478655468636972;
      break;
    default:
      return result;
  }
  return result;
}

double *sub_1000B7290(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007E0C(&qword_10014CCC0);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000B7CC0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_1000B73BC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007E0C(&qword_1001521B0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1000B7DB4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B74CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000B7754(a1, a2, a3, a4, &qword_1001521A8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

void *sub_1000B7500(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007E0C(&qword_100152198);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000B7EA0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1000B7610(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007E0C(&qword_1001521A0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[64 * v8 + 32]) {
          memmove(v13, a4 + 32, v8 << 6);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000B7F94(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B7720(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000B7754(a1, a2, a3, a4, &qword_100152278, (uint64_t (*)(void))type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry, (uint64_t (*)(void))type metadata accessor for StreaksWidgetCalculator.CalculatedTimelineEntry);
}

uint64_t sub_1000B7754(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007E0C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1001055B8();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000B82B8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1000B79D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000B7754(a1, a2, a3, a4, &qword_10014D800, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
}

double *sub_1000B7A08(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007E0C(&qword_10014EF08);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1000B81AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B7B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CanvasStartingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1000B7B7C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007E0C(&qword_1001521B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000B80A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B7C8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000B7754(a1, a2, a3, a4, &qword_100152280, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1000B7CC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

char *sub_1000B7DB4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000B7EA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000B7F94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_100007E0C(&qword_10014CCD0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000B80A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100007E0C(&qword_1001521C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000B81AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100007E0C(&qword_10014D858);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000B82B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000B8414(unsigned __int8 a1)
{
  uint64_t v2 = a1 >> 5;
  uint64_t result = 10;
  switch(v2)
  {
    case 1:
      uint64_t result = a1 & 1 | 6u;
      break;
    case 2:
      if (a1 == 64) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = 3;
      }
      break;
    case 3:
      if (a1 == 96) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 5;
      }
      break;
    case 4:
      if (a1 == 128) {
        uint64_t result = 8;
      }
      else {
        uint64_t result = 9;
      }
      break;
    case 5:
      return result;
    default:
      uint64_t result = a1 & 1;
      break;
  }
  return result;
}

unint64_t sub_1000B84A8()
{
  unint64_t result = qword_100152188;
  if (!qword_100152188)
  {
    sub_1001038B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152188);
  }
  return result;
}

uint64_t *sub_1000B8500(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_100103818();
        uint64_t v8 = *(void *)(v7 - 8);
        if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
          goto LABEL_13;
        }
        uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151990);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_14;
      case 1u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v7 = sub_1001039D8();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v13 = sub_100007E0C(&qword_10014DD70);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
LABEL_13:
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v14 = sub_100104888();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          uint64_t v16 = sub_100007E0C(&qword_100150AB0);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        unint64_t v17 = (int *)type metadata accessor for CanvasStartingState();
        uint64_t v18 = v17[5];
        size_t v19 = (uint64_t *)((char *)a1 + v18);
        BOOL v20 = (uint64_t *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        void *v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v17[6];
        __dst = (char *)a1 + v22;
        unint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = sub_100103978();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        if (v26(v23, 1, v24))
        {
          uint64_t v27 = sub_100007E0C((uint64_t *)&unk_100151950);
          memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000B8A10(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_100103818();
      goto LABEL_7;
    case 1:
      return swift_bridgeObjectRelease();
    case 2:
      uint64_t v3 = sub_1001039D8();
LABEL_7:
      uint64_t v4 = v3;
      uint64_t v9 = *(void *)(v3 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v3);
      if (result) {
        return result;
      }
      goto LABEL_12;
    case 3:
      uint64_t v5 = sub_100104888();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      }
      uint64_t v7 = type metadata accessor for CanvasStartingState();
      swift_bridgeObjectRelease();
      a1 += *(int *)(v7 + 24);
      uint64_t v4 = sub_100103978();
      uint64_t v9 = *(void *)(v4 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v4);
      if (!result)
      {
LABEL_12:
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
        uint64_t result = v8(a1, v4);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1000B8C68(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_100103818();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_19;
    case 1u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 2u:
      uint64_t v10 = sub_1001039D8();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_100007E0C(&qword_10014DD70);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      goto LABEL_19;
    case 3u:
      uint64_t v13 = sub_100104888();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_100007E0C(&qword_100150AB0);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
      uint64_t v17 = v16[5];
      uint64_t v18 = (void *)((char *)a1 + v17);
      size_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v16[6];
      __dst = (char *)a1 + v21;
      uint64_t v22 = (char *)a2 + v21;
      uint64_t v23 = sub_100103978();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      *((unsigned char *)a1 + v16[7]) = *((unsigned char *)a2 + v16[7]);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1000B9128(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000B961C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_100103818();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_19;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 2u:
        uint64_t v9 = sub_1001039D8();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = sub_100007E0C(&qword_10014DD70);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        goto LABEL_19;
      case 3u:
        uint64_t v12 = sub_100104888();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = sub_100007E0C(&qword_100150AB0);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v15 = (int *)type metadata accessor for CanvasStartingState();
        uint64_t v16 = v15[5];
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (void *)((char *)a2 + v16);
        *uint64_t v17 = *v18;
        v17[1] = v18[1];
        uint64_t v19 = v15[6];
        __dst = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = sub_100103978();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        if (v23(v20, 1, v21))
        {
          uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151950);
          memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        *((unsigned char *)a1 + v15[7]) = *((unsigned char *)a2 + v15[7]);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000B961C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1000B967C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v10 = sub_100104888();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_100007E0C(&qword_100150AB0);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
      *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
      uint64_t v17 = v16[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_100103978();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_100007E0C((uint64_t *)&unk_100151950);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      a1[v16[7]] = a2[v16[7]];
      goto LABEL_20;
    case 2:
      uint64_t v13 = sub_1001039D8();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_100007E0C(&qword_10014DD70);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      goto LABEL_20;
    case 0:
      uint64_t v7 = sub_100103818();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151990);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1000B9AD0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000B961C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v10 = sub_100104888();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = sub_100007E0C(&qword_100150AB0);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
        *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
        uint64_t v17 = v16[6];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        uint64_t v20 = sub_100103978();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = sub_100007E0C((uint64_t *)&unk_100151950);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        a1[v16[7]] = a2[v16[7]];
        goto LABEL_20;
      case 2:
        uint64_t v13 = sub_1001039D8();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = sub_100007E0C(&qword_10014DD70);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        goto LABEL_20;
      case 0:
        uint64_t v7 = sub_100103818();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151990);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000B9F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1000B9F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000B9F9C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1000B9FAC()
{
  sub_1000BA0F4(319, (unint64_t *)&qword_10014CE18, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_1000BA0F4(319, (unint64_t *)&qword_10014DD38, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CanvasStartingState();
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_1000BA0F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100105278();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PermissionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BA214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PermissionType()
{
  return &type metadata for PermissionType;
}

unint64_t sub_1000BA250()
{
  unint64_t result = qword_100152270;
  if (!qword_100152270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152270);
  }
  return result;
}

unint64_t sub_1000BA2A4(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 2:
      unint64_t result = 0x614E747369747261;
      break;
    case 3:
      unint64_t result = 1735290739;
      break;
    case 4:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000BA3A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_1001523C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_1000BC664();
  sub_100105968();
  v11[15] = 0;
  sub_100105778();
  if (!v2)
  {
    uint64_t v9 = _s10MusicAssetC9MusicDataVMa(0);
    v11[14] = 1;
    sub_100103818();
    sub_1000BC61C(&qword_10014DC50, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_100105768();
    v11[13] = 2;
    sub_100105728();
    v11[12] = 3;
    sub_100105728();
    v11[11] = 4;
    sub_100105728();
    v11[10] = 5;
    sub_100105758();
    v11[9] = 6;
    sub_100103978();
    sub_1000BC61C(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    v11[8] = *(unsigned char *)(v3 + *(int *)(v9 + 44));
    v11[7] = 7;
    sub_10007D4E8();
    sub_100105768();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000BA6E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100007E0C(&qword_1001523B0);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = _s10MusicAssetC9MusicDataVMa(0);
  __chkstk_darwin(v37);
  uint64_t v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v38 = a1;
  sub_100012154(a1, v15);
  sub_1000BC664();
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)v38);
  }
  uint64_t v16 = (uint64_t)v6;
  uint64_t v17 = v10;
  char v47 = 0;
  *uint64_t v14 = sub_1001056C8();
  v14[1] = v18;
  sub_100103818();
  char v46 = 1;
  sub_1000BC61C(&qword_10014DC40, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_1001056B8();
  uint64_t v19 = (int *)v37;
  sub_100033870((uint64_t)v9, (uint64_t)v14 + *(int *)(v37 + 20), (uint64_t *)&unk_100151990);
  char v45 = 2;
  uint64_t v20 = sub_100105678();
  uint64_t v21 = (uint64_t *)((char *)v14 + v19[6]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  char v44 = 3;
  uint64_t v23 = sub_100105678();
  uint64_t v24 = (uint64_t *)((char *)v14 + v19[7]);
  uint64_t *v24 = v23;
  v24[1] = v25;
  char v43 = 4;
  uint64_t v26 = sub_100105678();
  uint64_t v27 = (uint64_t)v38;
  uint64_t v28 = (uint64_t *)((char *)v14 + v19[8]);
  uint64_t *v28 = v26;
  v28[1] = v29;
  char v42 = 5;
  uint64_t v30 = sub_1001056A8();
  uint64_t v34 = 0;
  uint64_t v31 = (char *)v14 + v19[9];
  *(void *)uint64_t v31 = v30;
  v31[8] = v32 & 1;
  sub_100103978();
  char v41 = 6;
  sub_1000BC61C(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100033870(v16, (uint64_t)v14 + v19[10], (uint64_t *)&unk_100151950);
  char v39 = 7;
  sub_10007D3D4();
  sub_1001056B8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v36);
  *((unsigned char *)v14 + v19[11]) = v40;
  sub_1000BC6B8((uint64_t)v14, v35);
  sub_1000121EC(v27);
  return sub_1000BC71C((uint64_t)v14);
}

unint64_t sub_1000BAD70()
{
  return sub_1000BA2A4(*v0);
}

uint64_t sub_1000BAD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC9E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000BADA0(uint64_t a1)
{
  unint64_t v2 = sub_1000BC664();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000BADDC(uint64_t a1)
{
  unint64_t v2 = sub_1000BC664();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BAE18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BA6E0(a1, a2);
}

uint64_t sub_1000BAE30(void *a1)
{
  return sub_1000BA3A4(a1);
}

uint64_t sub_1000BAE48()
{
  uint64_t v1 = sub_100007E0C(&qword_1001523C8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = (int *)_s10MusicAssetC9MusicDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10MusicAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000F7944((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_100012510((uint64_t)v3, &qword_1001523C8);
    return 0;
  }
  sub_1000BC778((uint64_t)v3, (uint64_t)v7);
  sub_100007E0C(&qword_10014EF08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10010AFB0;
  uint64_t v9 = &v7[v4[7]];
  uint64_t v10 = v9[1];
  *(void *)(inited + 32) = *v9;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = &v7[v4[8]];
  uint64_t v12 = v11[1];
  *(void *)(inited + 48) = *v11;
  *(void *)(inited + 56) = v12;
  uint64_t v13 = &v7[v4[6]];
  uint64_t v14 = v13[1];
  *(void *)(inited + 64) = *v13;
  *(void *)(inited + 72) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10009063C(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100007E0C(&qword_10014D858);
  swift_arrayDestroy();
  sub_1000BC71C((uint64_t)v7);
  return v15;
}

uint64_t sub_1000BB090()
{
  return swift_release();
}

id sub_1000BB0A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10MusicAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000BB0E8()
{
  return _s10MusicAssetCMa(0);
}

uint64_t _s10MusicAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_1001522B0);
}

uint64_t sub_1000BB110()
{
  return swift_updateClassMetadata2();
}

void *sub_1000BB154(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103818();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151990);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)((char *)v4 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (void *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v4 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[10];
    __dst = (char *)v4 + v31;
    char v32 = (char *)a2 + v31;
    uint64_t v33 = sub_100103978();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v32, 1, v33))
    {
      uint64_t v35 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t sub_1000BB43C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100103818();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_100103978();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_1000BB5D0(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  uint64_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (char *)a1 + v22;
  uint64_t v27 = (char *)a2 + v22;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[10];
  __dst = (char *)a1 + v28;
  uint64_t v29 = (char *)a2 + v28;
  uint64_t v30 = sub_100103978();
  uint64_t v31 = *(void *)(v30 - 8);
  char v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    uint64_t v33 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_1000BB868(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_100103978();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v29, v30, v31);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v36 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *sub_1000BBBE8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100103978();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *sub_1000BBE28(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100103818();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v31;
  int v34 = (char *)a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  int v35 = (char *)a1 + v32;
  uint64_t v36 = (char *)a2 + v32;
  uint64_t v37 = sub_100103978();
  uint64_t v38 = *(void *)(v37 - 8);
  char v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_12;
  }
  if (v41)
  {
LABEL_12:
    uint64_t v42 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_13:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1000BC164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BC178);
}

uint64_t sub_1000BC178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000BC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BC2C0);
}

uint64_t sub_1000BC2C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s10MusicAssetC9MusicDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100152318);
}

void sub_1000BC414()
{
  sub_10007D208(319, (unint64_t *)&qword_10014CE18, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10007D208(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000BC540()
{
  return swift_retain();
}

uint64_t sub_1000BC550(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10MusicAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000BC568()
{
  return sub_1000BAE48();
}

uint64_t sub_1000BC58C()
{
  return sub_1000BC61C(&qword_100152368, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_1000BC5D4()
{
  return sub_1000BC61C(&qword_100152370, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa);
}

uint64_t sub_1000BC61C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000BC664()
{
  unint64_t result = qword_1001523B8;
  if (!qword_1001523B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001523B8);
  }
  return result;
}

uint64_t sub_1000BC6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BC71C(uint64_t a1)
{
  uint64_t v2 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000BC778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s10MusicAssetC9MusicDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BC8A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10MusicAssetC9MusicDataV10CodingKeysOMa()
{
  return &_s10MusicAssetC9MusicDataV10CodingKeysON;
}

unint64_t sub_1000BC8E4()
{
  unint64_t result = qword_1001523D0;
  if (!qword_1001523D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001523D0);
  }
  return result;
}

unint64_t sub_1000BC93C()
{
  unint64_t result = qword_1001523D8;
  if (!qword_1001523D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001523D8);
  }
  return result;
}

unint64_t sub_1000BC994()
{
  unint64_t result = qword_1001523E0;
  if (!qword_1001523E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001523E0);
  }
  return result;
}

uint64_t sub_1000BC9E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100112CE0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1000BCD44()
{
  sub_100007E0C(&qword_1001523F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001092A0;
  *(void *)(inited + 32) = sub_100104B38();
  *(void *)(inited + 40) = sub_100104B38();
  *(void *)(inited + 48) = sub_100104B38();
  *(void *)(inited + 56) = sub_100104B38();
  *(void *)(inited + 64) = sub_100104B38();
  *(void *)(inited + 72) = sub_100104B38();
  uint64_t v1 = sub_1000B23F0(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  uint64_t result = swift_arrayDestroy();
  qword_1001523E8 = v1;
  return result;
}

uint64_t sub_1000BCE44()
{
  uint64_t v0 = sub_1000B24CC((uint64_t)&off_100138F10);
  uint64_t result = swift_arrayDestroy();
  qword_1001523F0 = v0;
  return result;
}

uint64_t sub_1000BCE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = sub_1001051E8();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    if (qword_10014C060 != -1) {
      swift_once();
    }
    if (sub_1000A8AD8((uint64_t)v11, qword_1001523E8))
    {
      sub_100104C68();
      a8 = v12;
      uint64_t v13 = sub_1001052A8();
      swift_bridgeObjectRelease();

      uint64_t v14 = *a6 + v13;
      if (!__OFADD__(*a6, v13)) {
        goto LABEL_14;
      }
      __break(1u);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100104C68();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if ((v15 ^ v17) >> 14)
  {
    sub_100105298();
    uint64_t v15 = sub_1001052B8();
    a8 = v18;
    swift_bridgeObjectRelease();
    if (qword_10014C068 != -1) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v14 = *a6 + 1;
    if (!__OFADD__(*a6, 1)) {
      break;
    }
    __break(1u);
LABEL_17:
    swift_once();
LABEL_12:
    char v19 = sub_1000A8ADC(v15, a8, qword_1001523F0);
    swift_bridgeObjectRelease();
    if (v19) {
      return 1;
    }
  }
LABEL_14:
  *a6 = v14;
  return 1;
}

uint64_t sub_1000BD078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v1 = sub_100103728();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103818();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  if (qword_10014C0B8 != -1) {
    swift_once();
  }
  if (qword_100163180)
  {
    sub_1000BD360(qword_100163178, (void *)qword_100163180, (uint64_t)v9);
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v13(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
    sub_100007F78();
    sub_1001037F8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    sub_100103778();
    uint64_t v12 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  }
  v13(v4, v12, v1);
  sub_100007F78();
  uint64_t v14 = v17;
  sub_1001037F8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
}

uint64_t sub_1000BD360@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100103818();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007E0C((uint64_t *)&unk_100151990);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - v14;
  if (a2)
  {
    id v16 = [self defaultManager];
    NSString v17 = sub_100104B38();
    id v18 = [v16 containerURLForSecurityApplicationGroupIdentifier:v17];

    if (v18)
    {
      sub_1001037A8();

      char v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v19(v13, v9, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1) {
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v13, v6);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    }
    sub_100019F70((uint64_t)v13);
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_100105498(109);
    v23._countAndFlagsBits = 0xD00000000000006BLL;
    v23._object = (void *)0x8000000100114630;
    sub_100104BE8(v23);
    v24._countAndFlagsBits = a1;
    v24._object = a2;
    sub_100104BE8(v24);
    goto LABEL_11;
  }
  uint64_t v21 = NSHomeDirectory();
  sub_100104B78();

  sub_1001037D8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_100019F70((uint64_t)v15);
LABEL_11:
    uint64_t result = sub_1001055C8();
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v15, v6);
}

void sub_1000BD700(uint64_t a1, unsigned __int8 a2)
{
  switch(a2 >> 5)
  {
    case 1:
      sub_1001058E8(5uLL);
      sub_1001058F8(a2 & 1);
      return;
    case 2:
      if (a2 == 64) {
        Swift::UInt v3 = 1;
      }
      else {
        Swift::UInt v3 = 2;
      }
      goto LABEL_14;
    case 3:
      if (a2 == 96) {
        Swift::UInt v3 = 3;
      }
      else {
        Swift::UInt v3 = 4;
      }
      goto LABEL_14;
    case 4:
      if (a2 == 128) {
        Swift::UInt v3 = 6;
      }
      else {
        Swift::UInt v3 = 7;
      }
      goto LABEL_14;
    case 5:
      Swift::UInt v3 = 8;
      goto LABEL_14;
    default:
      sub_1001058E8(0);
      Swift::UInt v3 = a2 & 1;
LABEL_14:
      sub_1001058E8(v3);
      return;
  }
}

Swift::Int sub_1000BD7E4()
{
  unsigned __int8 v1 = *v0;
  sub_1001058D8();
  sub_1000BD700((uint64_t)v3, v1);
  return sub_100105928();
}

void sub_1000BD82C(uint64_t a1)
{
  sub_1000BD700(a1, *v1);
}

Swift::Int sub_1000BD834()
{
  unsigned __int8 v1 = *v0;
  sub_1001058D8();
  sub_1000BD700((uint64_t)v3, v1);
  return sub_100105928();
}

uint64_t sub_1000BD878(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000BD884(*a1, *a2);
}

uint64_t sub_1000BD884(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 5)
  {
    case 1:
      if ((a2 & 0xE0) != 0x20) {
        return 0;
      }
      return (((a1 & 1) == 0) ^ a2) & 1;
    case 2:
      if (a1 == 64) {
        return a2 == 64;
      }
      return a2 == 65;
    case 3:
      if (a1 == 96)
      {
        if (a2 == 96) {
          return 1;
        }
      }
      else if (a2 == 97)
      {
        return 1;
      }
      return 0;
    case 4:
      if (a1 == 128) {
        return a2 == 128;
      }
      return a2 == 129;
    case 5:
      return a2 == 160;
    default:
      if (a2 >= 0x20u) {
        return 0;
      }
      return ((a2 ^ a1) & 1) == 0;
  }
}

uint64_t getEnumTagSinglePayload for CanvasContentInputType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7B) {
    goto LABEL_17;
  }
  if (a2 + 133 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 133) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 133;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *uint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BDAF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1000BDB1C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_1000BDB38(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1000BDB48(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *uint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType()
{
  return &type metadata for CanvasContentInputType;
}

unint64_t sub_1000BDB90()
{
  unint64_t result = qword_100152400;
  if (!qword_100152400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152400);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType.KeyboardFocus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BDCB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType.KeyboardFocus()
{
  return &type metadata for CanvasContentInputType.KeyboardFocus;
}

unint64_t sub_1000BDCEC()
{
  unint64_t result = qword_100152408;
  if (!qword_100152408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152408);
  }
  return result;
}

id sub_1000BDD40(double a1)
{
  uint64_t v2 = sub_100103728();
  uint64_t v56 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100103818();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v47 = (char *)&v45 - v9;
  uint64_t v10 = sub_100103D08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v45 - v15;
  uint64_t v17 = sub_100103DB8();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100103D38();
  uint64_t v48 = *(void *)(v21 - 8);
  uint64_t v49 = v21;
  __chkstk_darwin(v21);
  Swift::String v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10014C070 != -1) {
    swift_once();
  }
  uint64_t v54 = v6;
  uint64_t v24 = sub_100007D30(v17, (uint64_t)qword_100152410);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v24, v17);
  sub_100103D18();
  sub_100103CF8();
  char v46 = v23;
  uint64_t v25 = sub_100103D28();
  os_signpost_type_t v26 = sub_100105118();
  if (sub_100105258())
  {
    uint64_t v45 = v11;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
    v27(v14, v16, v10);
    uint64_t v29 = v2;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    os_signpost_id_t v31 = sub_100103CE8();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v26, v31, "LoadThumbnail", "", v30, 2u);
    uint64_t v2 = v29;
    swift_slowDealloc();

    uint64_t v32 = v45;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v28);
  }
  else
  {

    uint64_t v32 = v11;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v28 = v10;
  }
  v27(v14, v16, v28);
  sub_100103D78();
  swift_allocObject();
  sub_100103D68();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v28);
  uint64_t v33 = v51;
  uint64_t v57 = sub_1001037B8(1);
  uint64_t v58 = v34;
  sub_100007F78();
  sub_100105308();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = v50;
  uint64_t v38 = v47;
  uint64_t v39 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v47, v33, v54);
  if (!v36) {
    sub_1001037B8(1);
  }
  int v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v38, v39);
  sub_1000A4CE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v53, 1, 1, v39);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
  int v41 = v52;
  sub_1001037E8();
  id v42 = sub_100096BE4(a1);
  v40(v41, v39);
  uint64_t v43 = (uint64_t)v46;
  sub_1000BE484((uint64_t)v46, (unint64_t)"LoadThumbnail", 13, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v49);
  return v42;
}

uint64_t sub_1000BE3BC()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100152410);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_100152410);
  if (qword_10014BFA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162FB8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000BE484(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = sub_100103D48();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100103D08();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v23[-v13];
  uint64_t v15 = sub_100103D28();
  sub_100103D58();
  int v24 = sub_100105108();
  if ((sub_100105258() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    id v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v16 = sub_100097970();
LABEL_10:
  swift_retain();
  sub_100103D88();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v20 = 0;
  os_signpost_id_t v21 = sub_100103CE8();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v12, v8);
}

uint64_t type metadata accessor for MapAssetCRUDActor.ActorType()
{
  return self;
}

void *sub_1000BE7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v10[4] = a9;
  v10[5] = a10;
  type metadata accessor for CoreDataStackConfiguration();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(unsigned char *)(v18 + 48) = a6;
  *(void *)(v18 + 56) = a5;
  *(void *)(v18 + 64) = a9;
  *(void *)(v18 + 72) = a10;
  v10[2] = v18;
  type metadata accessor for CloudKitStackConfiguration();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a5;
  v10[3] = v19;
  swift_bridgeObjectRetain();
  id v20 = a5;
  return v10;
}

uint64_t sub_1000BE88C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataStackConfiguration()
{
  return self;
}

id sub_1000BE8F8()
{
  uint64_t v2 = v0;
  id result = [v0 tabStops];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  sub_1000BEC84();
  unint64_t v5 = sub_100104D28();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v19 = v2;
        unint64_t v20 = v5 & 0xC000000000000001;
        unint64_t v21 = v5;
        if ((v5 & 0xC000000000000001) != 0) {
          id v7 = (id)sub_1001054D8();
        }
        else {
          id v7 = *(id *)(v5 + 32);
        }
        uint64_t v1 = v7;
        sub_10000B0CC((uint64_t)_swiftEmptyArrayStorage);
        id v8 = objc_allocWithZone((Class)NSTextTab);
        type metadata accessor for OptionKey(0);
        sub_1000BECC4();
        Class isa = sub_1001049A8().super.isa;
        swift_bridgeObjectRelease();
        [v8 initWithTextAlignment:2 location:isa options:26.0];

        sub_100104D08();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_9;
        }
      }
      sub_100104D68();
LABEL_9:
      sub_100104D98();
      sub_100104D48();

      uint64_t v10 = v6 - 1;
      if (v6 != 1)
      {
        uint64_t v11 = 0;
        double v12 = 36.0;
        do
        {
          if (v20) {
            id v13 = (id)sub_1001054D8();
          }
          else {
            id v13 = *(id *)(v21 + 8 * v11 + 40);
          }
          uint64_t v14 = v13;
          id v15 = [v13 alignment];
          sub_10000B0CC((uint64_t)_swiftEmptyArrayStorage);
          id v16 = objc_allocWithZone((Class)NSTextTab);
          Class v17 = sub_1001049A8().super.isa;
          swift_bridgeObjectRelease();
          [v16 initWithTextAlignment:v15 location:v17 options:v12];

          sub_100104D08();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_100104D68();
          }
          sub_100104D98();
          sub_100104D48();

          double v12 = v12 + 10.0;
          ++v11;
        }
        while (v10 != v11);
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v19;
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  Class v18 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v2 setTabStops:v18];

  return [v2 setDefaultTabInterval:10.0];
}

unint64_t sub_1000BEC84()
{
  unint64_t result = qword_100152578;
  if (!qword_100152578)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100152578);
  }
  return result;
}

unint64_t sub_1000BECC4()
{
  unint64_t result = qword_10014C4D8;
  if (!qword_10014C4D8)
  {
    type metadata accessor for OptionKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C4D8);
  }
  return result;
}

unint64_t sub_1000BED20()
{
  unint64_t result = qword_100152580;
  if (!qword_100152580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152580);
  }
  return result;
}

unint64_t sub_1000BED78()
{
  unint64_t result = qword_100152588;
  if (!qword_100152588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152588);
  }
  return result;
}

unint64_t sub_1000BEDD0()
{
  unint64_t result = qword_100152590;
  if (!qword_100152590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152590);
  }
  return result;
}

unint64_t sub_1000BEE28()
{
  unint64_t result = qword_100152598;
  if (!qword_100152598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152598);
  }
  return result;
}

uint64_t sub_1000BEE7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BEECC()
{
  uint64_t v0 = sub_1001036E8();
  sub_1000081D0(v0, qword_100163148);
  sub_100007D30(v0, (uint64_t)qword_100163148);
  return sub_1001036D8();
}

uint64_t sub_1000BEF30@<X0>(uint64_t a1@<X8>)
{
  if (qword_10014C078 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1001036E8();
  uint64_t v3 = sub_100007D30(v2, (uint64_t)qword_100163148);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000BEFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_100032A64();
  *uint64_t v4 = v2;
  v4[1] = sub_1000BF098;
  return WidgetConfigurationIntent.perform()(a2, v5);
}

uint64_t sub_1000BF098()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_1000BF1A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BF214();
  *a1 = result;
  return result;
}

uint64_t sub_1000BF1C8(uint64_t a1)
{
  unint64_t v2 = sub_1000BED20();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for StreaksWidgetConfigurationIntent()
{
  return &type metadata for StreaksWidgetConfigurationIntent;
}

uint64_t sub_1000BF214()
{
  uint64_t v17 = sub_100103368();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007E0C(&qword_1001525A8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_100007E0C(&qword_1001525B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001036E8();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100007E0C(&qword_1001525B8);
  sub_1001036D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v18 = 0;
  uint64_t v14 = sub_100103318();
  id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_100080884();
  return sub_100103338();
}

id sub_1000BF628()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15MOMapAnnotationCMa();
  return [super dealloc];
}

uint64_t _s15MOMapAnnotationCMa()
{
  return self;
}

uint64_t sub_1000BF694(uint64_t result, char a2)
{
  if (a2 != 2 && (a2 & 1) == 0)
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_100103F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    sub_100007E0C(&qword_100152660);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100108250;
    sub_100103F28();
    sub_100103F38();
    sub_100048EEC();
    sub_100007E0C(&qword_100152668);
    sub_1000BF7A8();
    return sub_100105388();
  }
  return result;
}

unint64_t sub_1000BF7A8()
{
  unint64_t result = qword_100152670;
  if (!qword_100152670)
  {
    sub_100007F30(&qword_100152668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152670);
  }
  return result;
}

unint64_t sub_1000BF804(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      unint64_t result = 0x6D69547472617473;
      break;
    case 3:
      unint64_t result = 0x656D6954646E65;
      break;
    case 4:
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 6:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 0xD000000000000026;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000BF9C8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_1001527E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_1000C1DB0();
  sub_100105968();
  LOBYTE(v13) = 0;
  sub_100105728();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_100105748();
    uint64_t v9 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    LOBYTE(v13) = 2;
    sub_100103978();
    sub_1000C1D40(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v13) = 3;
    sub_100105768();
    LOBYTE(v13) = 4;
    sub_100105748();
    LOBYTE(v13) = 5;
    sub_100105748();
    LOBYTE(v13) = 6;
    sub_100105728();
    LOBYTE(v13) = 7;
    sub_100105728();
    LOBYTE(v13) = 8;
    sub_100105758();
    LOBYTE(v13) = 9;
    sub_100105748();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 56));
    char v12 = 10;
    sub_100007E0C(&qword_1001527D0);
    sub_1000C1EC4(&qword_1001527E8, &qword_10014DF00);
    sub_100105768();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 60));
    char v12 = 11;
    sub_100105768();
    LOBYTE(v13) = 12;
    sub_100105748();
    LOBYTE(v13) = 13;
    sub_100105748();
    LOBYTE(v13) = 14;
    sub_100105728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000BFE80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v52 - v9;
  uint64_t v54 = sub_100007E0C(&qword_1001527C0);
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  __chkstk_darwin(v57);
  uint64_t v55 = a1;
  uint64_t v56 = (void *)((char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012154(a1, a1[3]);
  sub_1000C1DB0();
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)v55);
  }
  uint64_t v53 = a2;
  uint64_t v15 = v11;
  LOBYTE(v59) = 0;
  uint64_t v16 = sub_100105678();
  uint64_t v17 = v56;
  *uint64_t v56 = v16;
  v17[1] = v18;
  LOBYTE(v59) = 1;
  uint64_t v19 = sub_100105698();
  unint64_t v20 = v57;
  void v17[2] = v19;
  *((unsigned char *)v17 + 24) = v21 & 1;
  sub_100103978();
  LOBYTE(v59) = 2;
  v52[1] = sub_1000C1D40(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100012290((uint64_t)v10, (uint64_t)v17 + v20[6]);
  LOBYTE(v59) = 3;
  sub_1001056B8();
  sub_100012290((uint64_t)v8, (uint64_t)v17 + v20[7]);
  LOBYTE(v59) = 4;
  uint64_t v22 = sub_100105698();
  Swift::String v23 = (char *)v17 + v20[8];
  *(void *)Swift::String v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v59) = 5;
  uint64_t v25 = sub_100105698();
  unint64_t v26 = (char *)v17 + v20[9];
  *(void *)unint64_t v26 = v25;
  v26[8] = v27 & 1;
  LOBYTE(v59) = 6;
  uint64_t v28 = sub_100105678();
  uint64_t v29 = (uint64_t *)((char *)v17 + v20[10]);
  *uint64_t v29 = v28;
  v29[1] = v30;
  LOBYTE(v59) = 7;
  uint64_t v31 = sub_100105678();
  uint64_t v32 = (uint64_t *)((char *)v17 + v20[11]);
  *uint64_t v32 = v31;
  v32[1] = v33;
  LOBYTE(v59) = 8;
  uint64_t v34 = sub_1001056A8();
  uint64_t v35 = (char *)v17 + v20[12];
  *(void *)uint64_t v35 = v34;
  v35[8] = v36 & 1;
  LOBYTE(v59) = 9;
  uint64_t v37 = sub_100105698();
  uint64_t v38 = (char *)v56 + v57[13];
  *(void *)uint64_t v38 = v37;
  v38[8] = v39 & 1;
  sub_100007E0C(&qword_1001527D0);
  char v58 = 10;
  sub_1000C1EC4(&qword_1001527D8, &qword_10014CA00);
  sub_1001056B8();
  *(uint64_t *)((char *)v56 + v57[14]) = v59;
  char v58 = 11;
  sub_1001056B8();
  *(uint64_t *)((char *)v56 + v57[15]) = v59;
  LOBYTE(v59) = 12;
  uint64_t v40 = sub_100105698();
  int v41 = (char *)v56 + v57[16];
  *(void *)int v41 = v40;
  v41[8] = v42 & 1;
  LOBYTE(v59) = 13;
  uint64_t v43 = sub_100105698();
  char v44 = (char *)v56 + v57[17];
  *(void *)char v44 = v43;
  v44[8] = v45 & 1;
  LOBYTE(v59) = 14;
  uint64_t v46 = sub_100105678();
  uint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v54);
  uint64_t v49 = (uint64_t)v56;
  uint64_t v50 = (uint64_t *)((char *)v56 + v57[18]);
  *uint64_t v50 = v46;
  v50[1] = v48;
  sub_1000C1E04(v49, v53);
  sub_1000121EC((uint64_t)v55);
  return sub_1000C1E68(v49);
}

unint64_t sub_1000C06A4()
{
  return sub_1000BF804(*v0);
}

uint64_t sub_1000C06AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C21F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000C06D4(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1000C06E0(uint64_t a1)
{
  unint64_t v2 = sub_1000C1DB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C071C(uint64_t a1)
{
  unint64_t v2 = sub_1000C1DB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C0758@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BFE80(a1, a2);
}

uint64_t sub_1000C0770(void *a1)
{
  return sub_1000BF9C8(a1);
}

uint64_t sub_1000C0788()
{
  return swift_release();
}

id sub_1000C0798()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16WorkoutIconAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000C07E0()
{
  return _s16WorkoutIconAssetCMa(0);
}

uint64_t _s16WorkoutIconAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_1001526A0);
}

uint64_t sub_1000C0808()
{
  return swift_updateClassMetadata2();
}

void *sub_1000C084C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103978();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = *(unsigned char *)(v23 + 8);
    char v24 = (char *)v4 + v21;
    uint64_t v25 = (uint64_t)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    uint64_t v28 = (void *)((char *)v4 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)((char *)v4 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[12];
    uint64_t v35 = a3[13];
    char v36 = (char *)v4 + v34;
    uint64_t v37 = (uint64_t)a2 + v34;
    *(void *)char v36 = *(void *)v37;
    v36[8] = *(unsigned char *)(v37 + 8);
    uint64_t v38 = (char *)v4 + v35;
    uint64_t v39 = (uint64_t)a2 + v35;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = *(unsigned char *)(v39 + 8);
    uint64_t v40 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v40) = *(uint64_t *)((char *)a2 + v40);
    uint64_t v41 = a3[16];
    uint64_t v42 = a3[17];
    uint64_t v43 = (char *)v4 + v41;
    uint64_t v44 = (uint64_t)a2 + v41;
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = *(unsigned char *)(v44 + 8);
    char v45 = (char *)v4 + v42;
    uint64_t v46 = (uint64_t)a2 + v42;
    *(void *)char v45 = *(void *)v46;
    v45[8] = *(unsigned char *)(v46 + 8);
    uint64_t v47 = a3[18];
    uint64_t v48 = (void *)((char *)v4 + v47);
    uint64_t v49 = (uint64_t *)((char *)a2 + v47);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000C0B88(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C0CDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  uint64_t v39 = a3[16];
  uint64_t v40 = a3[17];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a1 + v40;
  uint64_t v44 = a2 + v40;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a3[18];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  void *v46 = *v47;
  v46[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000C0FC8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  *(unsigned char *)(v37 + 8) = *((unsigned char *)v38 + 8);
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[16];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = a3[17];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  LOBYTE(v47) = *(unsigned char *)(v50 + 8);
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v47;
  uint64_t v51 = a3[18];
  v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  void *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C13D8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = (uint64_t *)(a2 + v25);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[16];
  uint64_t v33 = a3[17];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_1000C1680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  uint64_t v42 = a1 + v39;
  uint64_t v43 = a2 + v39;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[16];
  uint64_t v45 = a3[17];
  uint64_t v46 = a1 + v44;
  uint64_t v47 = a2 + v44;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  uint64_t v48 = a1 + v45;
  uint64_t v49 = a2 + v45;
  *(void *)uint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  void *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C1A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C1A48);
}

uint64_t sub_1000C1A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000C1B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C1B1C);
}

uint64_t sub_1000C1B1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s16WorkoutIconAssetC15WorkoutIconDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100152708);
}

void sub_1000C1BE8()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000C1CB0()
{
  return sub_1000C1D40(&qword_100152778, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_1000C1CF8()
{
  return sub_1000C1D40(&qword_100152780, (void (*)(uint64_t))_s16WorkoutIconAssetC15WorkoutIconDataVMa);
}

uint64_t sub_1000C1D40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C1D88()
{
  return swift_retain();
}

uint64_t sub_1000C1D98(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16WorkoutIconAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_1000C1DB0()
{
  unint64_t result = qword_1001527C8;
  if (!qword_1001527C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001527C8);
  }
  return result;
}

uint64_t sub_1000C1E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C1E68(uint64_t a1)
{
  uint64_t v2 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C1EC4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_1001527D0);
    sub_1000C1D40(a2, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C20B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysOMa()
{
  return &_s16WorkoutIconAssetC15WorkoutIconDataV10CodingKeysON;
}

unint64_t sub_1000C20F0()
{
  unint64_t result = qword_1001527F0;
  if (!qword_1001527F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001527F0);
  }
  return result;
}

unint64_t sub_1000C2148()
{
  unint64_t result = qword_1001527F8;
  if (!qword_1001527F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001527F8);
  }
  return result;
}

unint64_t sub_1000C21A0()
{
  unint64_t result = qword_100152800;
  if (!qword_100152800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152800);
  }
  return result;
}

uint64_t sub_1000C21F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100111430 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100114910 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000100114930 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100114950 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100114970 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000100114990 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001001149B0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001001149D0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

unint64_t sub_1000C27B4(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000C28E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_1001529F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_1000C3B4C();
  sub_100105968();
  LOBYTE(v14) = 0;
  sub_100105728();
  if (!v2)
  {
    uint64_t v9 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_100103978();
    sub_1000C3B04(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v14) = 2;
    sub_100105728();
    LOBYTE(v14) = 3;
    sub_100105748();
    LOBYTE(v14) = 4;
    sub_100105748();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_1000C3B04(&qword_10014D9B8, type metadata accessor for CGSize);
    sub_100105768();
    LOBYTE(v14) = 6;
    sub_100105728();
    LOBYTE(v14) = 7;
    sub_100105728();
    LOBYTE(v14) = 8;
    sub_100105728();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000C2C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007E0C(&qword_1001529E8);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_100012154(a1, a1[3]);
  sub_1000C3B4C();
  uint64_t v44 = v9;
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_100105678();
  v11[1] = v17;
  sub_100103978();
  LOBYTE(v46) = 1;
  sub_1000C3B04(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  uint64_t v18 = (int *)v45;
  sub_100012290(v13, (uint64_t)v11 + *(int *)(v45 + 20));
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_100105678();
  int v20 = (uint64_t *)((char *)v11 + v18[6]);
  *int v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_100105698();
  uint64_t v23 = (char *)v11 + v18[7];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_100105698();
  uint64_t v26 = (char *)v11 + v18[8];
  *(void *)uint64_t v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_1000C3B04(&qword_10014D9A8, type metadata accessor for CGSize);
  sub_1001056B8();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_100105678();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  *uint64_t v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_100105678();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = sub_100105678();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  uint64_t v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *uint64_t v40 = v37;
  v40[1] = v39;
  sub_1000C4CBC((uint64_t)v11, v15, _s14LivePhotoAssetC13LivePhotoDataVMa);
  sub_1000121EC(v12);
  return sub_1000C3BA0((uint64_t)v11);
}

unint64_t sub_1000C3284()
{
  return sub_1000C27B4(*v0);
}

uint64_t sub_1000C328C(uint64_t a1)
{
  unint64_t v2 = sub_1000C3B4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C32C8(uint64_t a1)
{
  unint64_t v2 = sub_1000C3B4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C3304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000C2C54(a1, a2);
}

uint64_t sub_1000C331C(void *a1)
{
  return sub_1000C28E8(a1);
}

uint64_t sub_1000C3334()
{
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1000C4A20(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14LivePhotoAsset_livePhotoAttachments) = v2;

  return swift_release();
}

uint64_t sub_1000C33A0()
{
  swift_release();

  return swift_release();
}

id sub_1000C33E0()
{
  if ((v0[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14LivePhotoAsset_pendingLivePhotoRequest + 4] & 1) == 0)
  {
    unint64_t v1 = (unsigned int *)&v0[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
    [self cancelLivePhotoRequestWithRequestID:*v1];
  }
  v3.receiver = v0;
  v3.super_class = (Class)_s14LivePhotoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000C3534()
{
  return _s14LivePhotoAssetCMa(0);
}

uint64_t _s14LivePhotoAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100152838);
}

uint64_t sub_1000C355C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000C35AC()
{
  uint64_t v1 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_100152A08);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14LivePhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_1000F7C78((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_100012510((uint64_t)v7, &qword_100152A08);
    return 0;
  }
  else
  {
    sub_1000C4CBC((uint64_t)v7, (uint64_t)v4, _s14LivePhotoAssetC13LivePhotoDataVMa);
    sub_100012510((uint64_t)v7, &qword_100152A08);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_1000C3BA0((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_1000C375C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s14LivePhotoAssetC20LivePhotoAttachmentsCMa()
{
  return self;
}

uint64_t sub_1000C37C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C37D4);
}

uint64_t sub_1000C37D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000C3894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C38A8);
}

uint64_t sub_1000C38A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s14LivePhotoAssetC13LivePhotoDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100152948);
}

void sub_1000C3974()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000C3A28()
{
  return swift_retain();
}

uint64_t sub_1000C3A38(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling14LivePhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000C3A50()
{
  return sub_1000C35AC();
}

uint64_t sub_1000C3A74()
{
  return sub_1000C3B04(&qword_1001529A0, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_1000C3ABC()
{
  return sub_1000C3B04(&qword_1001529A8, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa);
}

uint64_t sub_1000C3B04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C3B4C()
{
  unint64_t result = qword_1001529F0;
  if (!qword_1001529F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001529F0);
  }
  return result;
}

uint64_t sub_1000C3BA0(uint64_t a1)
{
  uint64_t v2 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C3BFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C47D8(a1, a2, a3, (void *)*v3, &qword_1001521A8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3C38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C3E38(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3C58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C3FC0(a1, a2, a3, *v3, &qword_100152A10);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3C80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C47D8(a1, a2, a3, (void *)*v3, &qword_100152A00, type metadata accessor for AssetAttachment.AssetType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3CBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C47D8(a1, a2, a3, (void *)*v3, &qword_10014D800, (uint64_t (*)(void))type metadata accessor for StreaksWidgetTimelineEntry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3CF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C3FC0(a1, a2, a3, *v3, &qword_100152A20);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3D20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C411C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000C3D40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C427C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3D60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C43CC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3D80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C47D8(a1, a2, a3, (void *)*v3, &qword_100152A50, type metadata accessor for InsightsDataManager.TopAssetCategory);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3DBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C4570(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3DDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000C47D8(a1, a2, a3, (void *)*v3, &qword_100152280, (uint64_t (*)(void))&type metadata accessor for Date);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000C3E18(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000C47D8(a1, a2, a3, a4, &qword_1001521A8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_1000C3E38(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007E0C(&qword_10014CCC0);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C3FC0(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *(void *)(a4 + 24);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v8 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_100007E0C(a5);
    size_t v11 = (double *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = (char *)(v11 + 4);
  uint64_t v15 = (char *)(a4 + 32);
  if (a1)
  {
    if (v11 != (double *)a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C411C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007E0C(&qword_1001521B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C427C(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007E0C(&qword_100152A18);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C43CC(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007E0C(&qword_100152A58);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C4550(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000C47D8(a1, a2, a3, a4, &qword_100152A50, type metadata accessor for InsightsDataManager.TopAssetCategory);
}

uint64_t sub_1000C4570(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007E0C(&qword_100152A40);
  uint64_t v10 = *(void *)(sub_100007E0C(&qword_100152A48) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (double *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  *((void *)v13 + 2) = v8;
  *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100007E0C(&qword_100152A48) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  unint64_t v19 = a4 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || (unint64_t)v18 >= v19 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = v19 + v20;
  if (v19 >= (unint64_t)v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C47B8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000C47D8(a1, a2, a3, a4, &qword_100152280, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1000C47D8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007E0C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000C4A20(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  if (a1 >> 62) {
    uint64_t v9 = sub_1001055E8();
  }
  else {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int64_t v10 = _swiftEmptyArrayStorage;
  if (!v9)
  {
LABEL_15:
    _s14LivePhotoAssetC20LivePhotoAttachmentsCMa();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
    *(void *)(result + 24) = 0;
    return result;
  }
  unint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000C3C80(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    int64_t v10 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        uint64_t v13 = sub_1001054D8();
        sub_1000C4CBC(v13 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, (uint64_t)v8, type metadata accessor for AssetAttachment.AssetType);
        swift_unknownObjectRelease();
        unint64_t v20 = v10;
        unint64_t v15 = *((void *)v10 + 2);
        unint64_t v14 = *((void *)v10 + 3);
        if (v15 >= v14 >> 1)
        {
          sub_1000C3C80(v14 > 1, v15 + 1, 1);
          int64_t v10 = v20;
        }
        *((void *)v10 + 2) = v15 + 1;
        sub_1000C4D24((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v15);
      }
    }
    else
    {
      uint64_t v16 = (void *)(a1 + 32);
      do
      {
        sub_1000C4CBC(*v16 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, (uint64_t)v6, type metadata accessor for AssetAttachment.AssetType);
        unint64_t v20 = v10;
        unint64_t v18 = *((void *)v10 + 2);
        unint64_t v17 = *((void *)v10 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_1000C3C80(v17 > 1, v18 + 1, 1);
          int64_t v10 = v20;
        }
        *((void *)v10 + 2) = v18 + 1;
        sub_1000C4D24((uint64_t)v6, (uint64_t)v10+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18);
        ++v16;
        --v9;
      }
      while (v9);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C4CBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C4D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C4E54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysOMa()
{
  return &_s14LivePhotoAssetC13LivePhotoDataV10CodingKeysON;
}

unint64_t sub_1000C4E90()
{
  unint64_t result = qword_100152A28;
  if (!qword_100152A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152A28);
  }
  return result;
}

unint64_t sub_1000C4EE8()
{
  unint64_t result = qword_100152A30;
  if (!qword_100152A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152A30);
  }
  return result;
}

unint64_t sub_1000C4F40()
{
  unint64_t result = qword_100152A38;
  if (!qword_100152A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152A38);
  }
  return result;
}

uint64_t *sub_1000C4F94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100103F48();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    int64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100007E0C(&qword_10014E7C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100104868();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *int64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    unint64_t v14 = (char *)a1 + v13;
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    unint64_t v17 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
    *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
    *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
    uint64_t v18 = v17[7];
    uint64_t v19 = &v14[v18];
    unint64_t v20 = &v15[v18];
    uint64_t v21 = sub_100104918();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100007E0C(&qword_10014E6D8);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v14[v17[8]] = v15[v17[8]];
    v14[v17[9]] = v15[v17[9]];
  }
  return a1;
}

uint64_t sub_1000C52A8(uint64_t a1, uint64_t a2)
{
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100103F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100104868();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 28);
  uint64_t v10 = sub_100104918();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void *sub_1000C5494(void *a1, void *a2, uint64_t a3)
{
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100103F48();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100104868();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  unint64_t v15 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)&v13[v15[5]];
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)&v13[v15[6]];
  uint64_t v16 = v15[7];
  unint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_100104918();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v12[v15[8]] = v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  return a1;
}

void *sub_1000C5758(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E6D0);
    sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100103F48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100012510((uint64_t)a1 + v7, &qword_10014E7C0);
    sub_100007E0C(&qword_10014E7C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100104868();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v26 = a1;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  unint64_t v15 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v12[v15[5]] = *(_OWORD *)&v13[v15[5]];
  *(_OWORD *)&v12[v15[6]] = *(_OWORD *)&v13[v15[6]];
  uint64_t v16 = v15[7];
  unint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_100104918();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    uint64_t v24 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_15:
  uint64_t result = v26;
  v12[v15[8]] = v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  return result;
}

char *sub_1000C5AB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100103F48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100104868();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  unint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  unint64_t v17 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
  *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
  uint64_t v18 = v17[7];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = sub_100104918();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v14[v17[8]] = v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  return a1;
}

char *sub_1000C5D88(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100012510((uint64_t)a1, &qword_10014E6D0);
    uint64_t v6 = sub_100007E0C(&qword_10014E6D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100103F48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100012510((uint64_t)&a1[v8], &qword_10014E7C0);
    uint64_t v11 = sub_100007E0C(&qword_10014E7C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100104868();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = *(int *)(a3 + 24);
  char v28 = a1;
  uint64_t v14 = &a1[v13];
  unint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  unint64_t v17 = (int *)type metadata accessor for StreaksWidgetTimelineEntry();
  *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
  *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
  uint64_t v18 = v17[7];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = sub_100104918();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_13;
  }
  if (v25)
  {
LABEL_13:
    uint64_t v26 = sub_100007E0C(&qword_10014E6D8);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_14:
  uint64_t result = v28;
  v14[v17[8]] = v15[v17[8]];
  v14[v17[9]] = v15[v17[9]];
  return result;
}

uint64_t sub_1000C60F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C6108);
}

uint64_t sub_1000C6108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100007E0C(&qword_10014F9F0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for StreaksWidgetTimelineEntry();
  unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000C625C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C6270);
}

uint64_t sub_1000C6270(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014E6E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100007E0C(&qword_10014F9F0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for StreaksWidgetTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for StreaksWidgetSystemSmallView(uint64_t a1)
{
  return sub_100011F00(a1, qword_100152BA0);
}

void sub_1000C63F0()
{
  sub_1000C652C(319, (unint64_t *)&qword_10014E750, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  if (v0 <= 0x3F)
  {
    sub_1000C652C(319, (unint64_t *)&unk_10014FA68, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StreaksWidgetTimelineEntry();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000C652C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100103E78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000C6580()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000C659C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v34 = sub_100103E68();
  uint64_t v30 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v31 = sub_1001042A8();
  uint64_t v6 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100007E0C(&qword_100152BE0);
  __chkstk_darwin(v29);
  uint64_t v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_100007E0C(&qword_100152BE8);
  uint64_t v11 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v10 = sub_100104718();
  v10[1] = v14;
  uint64_t v15 = sub_100007E0C(&qword_100152BF0);
  sub_1000C6A38(v1, (uint64_t)v10 + *(int *)(v15 + 44));
  sub_100104298();
  sub_1000CD964(v1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StreaksWidgetSystemSmallView);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1000CD8DC((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for StreaksWidgetSystemSmallView);
  sub_100104718();
  sub_100050EC4(&qword_100152BF8, &qword_100152BE0);
  sub_1000CC074();
  sub_100104598();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
  sub_100012510((uint64_t)v10, &qword_100152BE0);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = v30;
  uint64_t v21 = v33;
  uint64_t v20 = v34;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v33, enum case for ColorScheme.dark(_:), v34);
  uint64_t v22 = sub_100007E0C(&qword_100152C08);
  uint64_t v23 = v35;
  int v24 = (uint64_t *)(v35 + *(int *)(v22 + 36));
  uint64_t v25 = sub_100007E0C(&qword_100152C10);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))((char *)v24 + *(int *)(v25 + 28), v21, v20);
  uint64_t *v24 = KeyPath;
  uint64_t v26 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v23, v13, v32);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v26);
}

uint64_t sub_1000C6A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = sub_100007E0C(&qword_100152C20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100007E0C(&qword_100152C28);
  __chkstk_darwin(v66);
  uint64_t v68 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100007E0C(&qword_100152C30);
  uint64_t v7 = __chkstk_darwin(v67);
  uint64_t v63 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v69 = (uint64_t)&v61 - v9;
  uint64_t v10 = sub_100007E0C(&qword_100152C38);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  __chkstk_darwin(v62);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100103F48();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = sub_100007E0C(&qword_100152C40);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v65 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v64 = (uint64_t)&v61 - v25;
  sub_100096040((uint64_t)v21);
  sub_100103F28();
  sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v26 = sub_100105338();
  char v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v19, v15);
  v27(v21, v15);
  sub_1000CD964(a1, (uint64_t)v14, type metadata accessor for StreaksWidgetSystemSmallView);
  if (v26)
  {
    BOOL v28 = 0;
  }
  else
  {
    uint64_t v29 = &v14[*(int *)(v62 + 24)];
    BOOL v28 = v29[*(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20)] != 2;
  }
  sub_1000CD09C((uint64_t)v14, type metadata accessor for StreaksWidgetSystemSmallView);
  *uint64_t v12 = sub_100104708();
  v12[1] = v30;
  uint64_t v31 = sub_100007E0C(&qword_100152C48);
  sub_1000C8294(v28, (char *)v12 + *(int *)(v31 + 44));
  uint64_t v32 = v64;
  sub_100010808((uint64_t)v12, v64, &qword_100152C38);
  sub_100012510((uint64_t)v12, &qword_100152C38);
  *(void *)uint64_t v5 = sub_100104148();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v33 = sub_100007E0C(&qword_100152C50);
  sub_1000C7060(a1, (uint64_t)&v5[*(int *)(v33 + 44)]);
  char v34 = sub_100104308();
  if (qword_10014C0A8 != -1) {
    swift_once();
  }
  sub_100103E08();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = v68;
  sub_100010808((uint64_t)v5, v68, &qword_100152C20);
  uint64_t v44 = v43 + *(int *)(v66 + 36);
  *(unsigned char *)uint64_t v44 = v34;
  *(void *)(v44 + 8) = v36;
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v40;
  *(void *)(v44 + 32) = v42;
  *(unsigned char *)(v44 + 40) = 0;
  sub_100012510((uint64_t)v5, &qword_100152C20);
  char v45 = sub_100104318();
  sub_100103E08();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v54 = v63;
  sub_100010808(v43, v63, &qword_100152C28);
  uint64_t v55 = v54 + *(int *)(v67 + 36);
  *(unsigned char *)uint64_t v55 = v45;
  *(void *)(v55 + 8) = v47;
  *(void *)(v55 + 16) = v49;
  *(void *)(v55 + 24) = v51;
  *(void *)(v55 + 32) = v53;
  *(unsigned char *)(v55 + 40) = 0;
  sub_100012510(v43, &qword_100152C28);
  uint64_t v56 = v69;
  sub_100033870(v54, v69, &qword_100152C30);
  uint64_t v57 = v65;
  sub_100010808(v32, v65, &qword_100152C40);
  sub_100010808(v56, v54, &qword_100152C30);
  uint64_t v58 = v70;
  sub_100010808(v57, v70, &qword_100152C40);
  uint64_t v59 = sub_100007E0C(&qword_100152C58);
  sub_100010808(v54, v58 + *(int *)(v59 + 48), &qword_100152C30);
  sub_100012510(v56, &qword_100152C30);
  sub_100012510(v32, &qword_100152C40);
  sub_100012510(v54, &qword_100152C30);
  return sub_100012510(v57, &qword_100152C40);
}

uint64_t sub_1000C7060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v3 = sub_100007E0C(&qword_100152C60);
  __chkstk_darwin(v3 - 8);
  unint64_t v94 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100007E0C(&qword_100152C68);
  uint64_t v5 = __chkstk_darwin(v92);
  uint64_t v96 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v95 = (uint64_t)&v88 - v7;
  uint64_t v8 = sub_100007E0C(&qword_10014E838);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100007E0C(&qword_100152C70);
  __chkstk_darwin(v88);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100007E0C(&qword_100152C78);
  uint64_t v13 = __chkstk_darwin(v89);
  uint64_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v91 = (uint64_t)&v88 - v16;
  uint64_t v17 = sub_100007E0C(&qword_10014E840);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007E0C(&qword_100152C80);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007E0C(&qword_100152C88);
  uint64_t v24 = __chkstk_darwin(v23);
  char v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v90 = (uint64_t)&v88 - v27;
  uint64_t v93 = a1;
  sub_1000C7720((uint64_t)v19);
  char v28 = sub_100104328();
  if (qword_10014C0A8 != -1) {
    swift_once();
  }
  sub_100103E08();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_100010808((uint64_t)v19, (uint64_t)v22, &qword_10014E840);
  uint64_t v37 = &v22[*(int *)(v20 + 36)];
  *uint64_t v37 = v28;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100012510((uint64_t)v19, &qword_10014E840);
  char v38 = sub_100104338();
  sub_100103E08();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_100010808((uint64_t)v22, (uint64_t)v26, &qword_100152C80);
  uint64_t v47 = &v26[*(int *)(v23 + 36)];
  *uint64_t v47 = v38;
  *((void *)v47 + 1) = v40;
  *((void *)v47 + 2) = v42;
  *((void *)v47 + 3) = v44;
  *((void *)v47 + 4) = v46;
  v47[40] = 0;
  sub_100012510((uint64_t)v22, &qword_100152C80);
  uint64_t v48 = v90;
  sub_100033870((uint64_t)v26, v90, &qword_100152C88);
  sub_1000C7BF4((uint64_t)v10);
  char v49 = sub_100104328();
  sub_100103E08();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  sub_100010808((uint64_t)v10, (uint64_t)v12, &qword_10014E838);
  uint64_t v58 = &v12[*(int *)(v88 + 36)];
  *uint64_t v58 = v49;
  *((void *)v58 + 1) = v51;
  *((void *)v58 + 2) = v53;
  *((void *)v58 + 3) = v55;
  *((void *)v58 + 4) = v57;
  v58[40] = 0;
  sub_100012510((uint64_t)v10, &qword_10014E838);
  char v59 = sub_100104338();
  sub_100103E08();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  sub_100010808((uint64_t)v12, (uint64_t)v15, &qword_100152C70);
  uint64_t v68 = &v15[*(int *)(v89 + 36)];
  *uint64_t v68 = v59;
  *((void *)v68 + 1) = v61;
  *((void *)v68 + 2) = v63;
  *((void *)v68 + 3) = v65;
  *((void *)v68 + 4) = v67;
  v68[40] = 0;
  sub_100012510((uint64_t)v12, &qword_100152C70);
  uint64_t v69 = v91;
  sub_100033870((uint64_t)v15, v91, &qword_100152C78);
  char v70 = sub_1001042D8();
  uint64_t v71 = (uint64_t)v94;
  *unint64_t v94 = v70;
  uint64_t v72 = sub_100007E0C(&qword_100152C90);
  sub_1000CB4F0((char *)(v71 + *(int *)(v72 + 44)));
  char v73 = sub_1001042E8();
  sub_100103E08();
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v82 = v96;
  sub_100010808(v71, v96, &qword_100152C60);
  uint64_t v83 = v82 + *(int *)(v92 + 36);
  *(unsigned char *)uint64_t v83 = v73;
  *(void *)(v83 + 8) = v75;
  *(void *)(v83 + 16) = v77;
  *(void *)(v83 + 24) = v79;
  *(void *)(v83 + 32) = v81;
  *(unsigned char *)(v83 + 40) = 0;
  sub_100012510(v71, &qword_100152C60);
  uint64_t v84 = v95;
  sub_100033870(v82, v95, &qword_100152C68);
  sub_100010808(v48, (uint64_t)v26, &qword_100152C88);
  sub_100010808(v69, (uint64_t)v15, &qword_100152C78);
  sub_100010808(v84, v82, &qword_100152C68);
  uint64_t v85 = v97;
  sub_100010808((uint64_t)v26, v97, &qword_100152C88);
  uint64_t v86 = sub_100007E0C(&qword_100152C98);
  sub_100010808((uint64_t)v15, v85 + *(int *)(v86 + 48), &qword_100152C78);
  sub_100010808(v82, v85 + *(int *)(v86 + 64), &qword_100152C68);
  sub_100012510(v84, &qword_100152C68);
  sub_100012510(v69, &qword_100152C78);
  sub_100012510(v48, &qword_100152C88);
  sub_100012510(v82, &qword_100152C68);
  sub_100012510((uint64_t)v15, &qword_100152C78);
  return sub_100012510((uint64_t)v26, &qword_100152C88);
}

uint64_t sub_1000C7720@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v36 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  __chkstk_darwin(v36);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103F48();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = (int *)type metadata accessor for WidgetHeaderView();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v38 = (uint64_t)&v36 - v16;
  uint64_t v17 = sub_100007E0C(&qword_10014E840);
  __chkstk_darwin(v17 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100096040((uint64_t)v11);
  sub_100103F28();
  sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v19 = sub_100105338();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v9, v5);
  v20(v11, v5);
  sub_1000CD964(v2, (uint64_t)v4, type metadata accessor for StreaksWidgetSystemSmallView);
  if (v19)
  {
    sub_1000CD09C((uint64_t)v4, type metadata accessor for StreaksWidgetSystemSmallView);
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v25 = &v4[*(int *)(v36 + 24)];
    uint64_t v26 = v25[*(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20)];
    sub_1000CD09C((uint64_t)v4, type metadata accessor for StreaksWidgetSystemSmallView);
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    if (v26 != 2)
    {
      if (qword_10014BFF0 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_100163060;
      uint64_t v41 = *(void *)algn_100163068;
      sub_100007F78();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_100104488();
      uint64_t v22 = v27;
      uint64_t v24 = v28;
      uint64_t v23 = v29 & 1;
    }
  }
  *uint64_t v15 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E7B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (uint64_t *)((char *)v15 + v12[5]);
  *uint64_t v30 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E7C0);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (uint64_t *)((char *)v15 + v12[6]);
  *uint64_t v31 = swift_getKeyPath();
  sub_100007E0C(&qword_10014E6D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (uint64_t *)((char *)v15 + v12[7]);
  *uint64_t v32 = v21;
  v32[1] = v22;
  v32[2] = v23;
  v32[3] = v24;
  uint64_t v33 = v38;
  sub_1000CD8DC((uint64_t)v15, v38, (uint64_t (*)(void))type metadata accessor for WidgetHeaderView);
  sub_100104728();
  uint64_t v34 = v37;
  sub_10005031C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v37, 0.0, 1, 0.0, 1);
  sub_1000CD09C(v33, (uint64_t (*)(void))type metadata accessor for WidgetHeaderView);
  return sub_100033870(v34, v39, &qword_10014E840);
}

uint64_t sub_1000C7BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007E0C(&qword_10014E830);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_10014E838);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100103F48();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v27 - v15;
  sub_100096040((uint64_t)&v27 - v15);
  sub_100103F28();
  sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v17 = sub_100105338();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v18(v16, v10);
  if (v17)
  {
    uint64_t v19 = 0;
    LOBYTE(v20) = 2;
  }
  else
  {
    uint64_t v21 = v2 + *(int *)(type metadata accessor for StreaksWidgetSystemSmallView(0) + 24);
    uint64_t v22 = (uint64_t *)(v21 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20));
    uint64_t v20 = *v22;
    uint64_t v19 = v22[1];
  }
  if (v20 == 2) {
    unint64_t v23 = 0;
  }
  else {
    unint64_t v23 = 0xC024000000000000;
  }
  *(void *)uint64_t v6 = sub_100104148();
  *((void *)v6 + 1) = v23;
  v6[16] = 0;
  sub_100007E0C(&qword_100152CE8);
  sub_1000C8F8C(v20, v19);
  if (v20 == 2) {
    uint64_t v24 = sub_100104718();
  }
  else {
    uint64_t v24 = sub_100104708();
  }
  sub_1000504D4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v9, 0.0, 1, INFINITY, 0, v24, v25);
  sub_100012510((uint64_t)v6, &qword_10014E830);
  return sub_100033870((uint64_t)v9, a1, &qword_10014E838);
}

double sub_1000C7EE8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100103F48();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  sub_100096040((uint64_t)&v23 - v12);
  sub_100103F28();
  sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v14 = sub_100105338();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  v15(v13, v7);
  sub_1000CD964(v2, (uint64_t)v6, type metadata accessor for StreaksWidgetSystemSmallView);
  if (v14)
  {
    sub_1000CD09C((uint64_t)v6, type metadata accessor for StreaksWidgetSystemSmallView);
    goto LABEL_7;
  }
  uint64_t v16 = &v6[*(int *)(v4 + 24)];
  uint64_t v17 = *(void *)&v16[*(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20)];
  sub_1000CD09C((uint64_t)v6, type metadata accessor for StreaksWidgetSystemSmallView);
  if v17 == 2 || (v17)
  {
LABEL_7:
    if (qword_10014C080 != -1) {
      swift_once();
    }
    uint64_t v19 = &xmmword_100152A60;
    goto LABEL_13;
  }
  if (qword_10014C088 != -1) {
    swift_once();
  }
  uint64_t v19 = &xmmword_100152A88;
LABEL_13:
  long long v23 = *(long long *)((char *)v19 + 8);
  uint64_t v20 = *((void *)v19 + 3);
  uint64_t v21 = *((void *)v19 + 4);
  *(void *)a1 = swift_bridgeObjectRetain();
  double result = *(double *)&v23;
  *(_OWORD *)(a1 + 8) = v23;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v21;
  return result;
}

uint64_t sub_1000C81CC(uint64_t a1)
{
  uint64_t v2 = sub_100103E68();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100104018();
}

uint64_t sub_1000C8294@<X0>(int a1@<W1>, char *a2@<X8>)
{
  int v113 = a1;
  unint64_t v130 = a2;
  uint64_t v2 = sub_100104748();
  uint64_t v128 = *(void *)(v2 - 8);
  uint64_t v129 = v2;
  __chkstk_darwin(v2);
  unint64_t v127 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100007E0C(&qword_100152E58);
  __chkstk_darwin(v118);
  uint64_t v120 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100007E0C(&qword_100152E60);
  __chkstk_darwin(v119);
  uint64_t v123 = (uint64_t)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100007E0C(&qword_100152E68);
  __chkstk_darwin(v121);
  uint64_t v124 = (uint64_t)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100007E0C(&qword_100152E70);
  uint64_t v7 = __chkstk_darwin(v122);
  uint64_t v126 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v125 = (uint64_t)&v102 - v9;
  uint64_t v112 = sub_100103FE8();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WingsBackgroundAccentableModifier(0);
  __chkstk_darwin(v11 - 8);
  *(void *)&long long v104 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100104638();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100103C58();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = sub_100007E0C(&qword_100152E78);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100007E0C(&qword_100152E80) - 8;
  __chkstk_darwin(v105);
  uint64_t v103 = (uint64_t)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100007E0C(&qword_100152E88) - 8;
  __chkstk_darwin(v106);
  uint64_t v24 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100007E0C(&qword_100152E90);
  __chkstk_darwin(v109);
  v108 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100007E0C(&qword_100152E98);
  uint64_t v116 = *(void *)(v117 - 8);
  uint64_t v26 = __chkstk_darwin(v117);
  char v115 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v107 = (char *)&v102 - v29;
  __chkstk_darwin(v28);
  unint64_t v114 = (char *)&v102 - v30;
  type metadata accessor for StreaksWidgetSystemSmallView(0);
  type metadata accessor for StreaksWidgetTimelineEntry();
  sub_100103C48();
  sub_100104688();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Image.ResizingMode.stretch(_:), v13);
  uint64_t v31 = sub_100104668();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v32 = (uint64_t)v24;
  sub_100104798();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v104;
  sub_10009636C(v104);
  sub_1000CD964(v37, (uint64_t)&v21[*(int *)(v19 + 44)], type metadata accessor for WingsBackgroundAccentableModifier);
  *(void *)uint64_t v21 = v31;
  *((void *)v21 + 1) = 0;
  *((_WORD *)v21 + 8) = 257;
  *(int64x2_t *)(v21 + 24) = vdupq_n_s64(0x3FF3333333333333uLL);
  *((void *)v21 + 5) = v34;
  *((void *)v21 + 6) = v36;
  sub_1000CD09C(v37, type metadata accessor for WingsBackgroundAccentableModifier);
  sub_100007E0C(&qword_100152EA0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10010AFB0;
  sub_1001045F8();
  *(void *)(v38 + 32) = sub_1001046B8();
  *(void *)(v38 + 40) = v39;
  sub_1001045F8();
  *(void *)(v38 + 48) = sub_1001046B8();
  *(void *)(v38 + 56) = v40;
  sub_1001045E8();
  *(void *)(v38 + 64) = sub_1001046B8();
  *(void *)(v38 + 72) = v41;
  sub_100104778();
  sub_100104788();
  sub_1001046C8();
  sub_100103EF8();
  uint64_t v42 = v131;
  long long v104 = v132;
  uint64_t v43 = v133;
  uint64_t v44 = v134;
  uint64_t v45 = v103;
  sub_100010808((uint64_t)v21, v103, &qword_100152E78);
  uint64_t v46 = v45 + *(int *)(v105 + 44);
  *(void *)uint64_t v46 = v42;
  *(_OWORD *)(v46 + 8) = v104;
  *(void *)(v46 + 24) = v43;
  *(void *)(v46 + 32) = v44;
  sub_100012510((uint64_t)v21, &qword_100152E78);
  char v47 = v113;
  if (v113) {
    double v48 = 1.0;
  }
  else {
    double v48 = 0.0;
  }
  sub_100010808(v45, v32, &qword_100152E80);
  *(double *)(v32 + *(int *)(v106 + 44)) = v48;
  sub_100012510(v45, &qword_100152E80);
  char v49 = v110;
  if (v47) {
    sub_100103FC8();
  }
  else {
    sub_100103FD8();
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = (uint64_t)v108;
  uint64_t v52 = (uint64_t *)&v108[*(int *)(v109 + 36)];
  uint64_t v53 = sub_100007E0C(&qword_10014E7A0);
  uint64_t v54 = v111;
  uint64_t v55 = v112;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))((char *)v52 + *(int *)(v53 + 28), v49, v112);
  uint64_t *v52 = KeyPath;
  sub_100010808(v32, v51, &qword_100152E88);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v55);
  sub_100012510(v32, &qword_100152E88);
  sub_1000CD9CC();
  uint64_t v56 = v107;
  sub_100104498();
  sub_100012510(v51, &qword_100152E90);
  uint64_t v57 = v116;
  uint64_t v58 = v114;
  uint64_t v59 = v117;
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v114, v56, v117);
  char v60 = sub_1001042D8();
  uint64_t v61 = (uint64_t)v120;
  *uint64_t v120 = v60;
  uint64_t v62 = sub_100007E0C(&qword_100152C90);
  sub_1000CB4F0((char *)(v61 + *(int *)(v62 + 44)));
  uint64_t v63 = sub_100104718();
  uint64_t v65 = v64;
  uint64_t v66 = v61 + *(int *)(v118 + 36);
  uint64_t v67 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v68 = sub_100104138();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104))(v66, v67, v68);
  uint64_t v69 = (uint64_t *)(v66 + *(int *)(sub_100007E0C(&qword_100152EF0) + 36));
  *uint64_t v69 = v63;
  v69[1] = v65;
  LOBYTE(v63) = sub_1001042E8();
  sub_100103E08();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v78 = v123;
  sub_100010808(v61, v123, &qword_100152E58);
  uint64_t v79 = v78 + *(int *)(v119 + 36);
  *(unsigned char *)uint64_t v79 = v63;
  *(void *)(v79 + 8) = v71;
  *(void *)(v79 + 16) = v73;
  *(void *)(v79 + 24) = v75;
  *(void *)(v79 + 32) = v77;
  *(unsigned char *)(v79 + 40) = 0;
  sub_100012510(v61, &qword_100152E58);
  char v80 = sub_100104318();
  if (qword_10014C0A8 != -1) {
    swift_once();
  }
  sub_100103E08();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v89 = v124;
  sub_100010808(v78, v124, &qword_100152E60);
  uint64_t v90 = v89 + *(int *)(v121 + 36);
  *(unsigned char *)uint64_t v90 = v80;
  *(void *)(v90 + 8) = v82;
  *(void *)(v90 + 16) = v84;
  *(void *)(v90 + 24) = v86;
  *(void *)(v90 + 32) = v88;
  *(unsigned char *)(v90 + 40) = 0;
  sub_100012510(v78, &qword_100152E60);
  uint64_t v92 = v127;
  uint64_t v91 = v128;
  uint64_t v93 = v129;
  (*(void (**)(char *, void, uint64_t))(v128 + 104))(v127, enum case for BlendMode.destinationOut(_:), v129);
  uint64_t v94 = (uint64_t)v126;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(&v126[*(int *)(v122 + 36)], v92, v93);
  sub_100010808(v89, v94, &qword_100152E68);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
  sub_100012510(v89, &qword_100152E68);
  uint64_t v95 = v125;
  sub_100033870(v94, v125, &qword_100152E70);
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v97 = v115;
  v96(v115, v58, v59);
  sub_100010808(v95, v94, &qword_100152E70);
  unint64_t v98 = v130;
  v96(v130, v97, v59);
  uint64_t v99 = sub_100007E0C(&qword_100152EF8);
  sub_100010808(v94, (uint64_t)&v98[*(int *)(v99 + 48)], &qword_100152E70);
  sub_100012510(v95, &qword_100152E70);
  v100 = *(void (**)(char *, uint64_t))(v57 + 8);
  v100(v58, v59);
  sub_100012510(v94, &qword_100152E70);
  return ((uint64_t (*)(char *, uint64_t))v100)(v97, v59);
}

uint64_t sub_1000C8F8C(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_100152CF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007E0C(&qword_100152CF8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007E0C(&qword_100152D00);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    sub_1000CA5F4((uint64_t)v12);
    uint64_t v13 = &qword_100152D00;
    sub_100010808((uint64_t)v12, (uint64_t)v9, &qword_100152D00);
    swift_storeEnumTagMultiPayload();
    sub_100050EC4(&qword_100152D08, &qword_100152CF0);
    sub_100050EC4(&qword_100152D10, &qword_100152D00);
    sub_1001041B8();
    uint64_t v14 = (uint64_t)v12;
  }
  else
  {
    sub_1000C9214(a1 & 1, a2, v6);
    uint64_t v13 = &qword_100152CF0;
    sub_100010808((uint64_t)v6, (uint64_t)v9, &qword_100152CF0);
    swift_storeEnumTagMultiPayload();
    sub_100050EC4(&qword_100152D08, &qword_100152CF0);
    sub_100050EC4(&qword_100152D10, &qword_100152D00);
    sub_1001041B8();
    uint64_t v14 = (uint64_t)v6;
  }
  return sub_100012510(v14, v13);
}

uint64_t sub_1000C9214@<X0>(int a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v201 = a2;
  int v150 = a1;
  uint64_t v155 = a3;
  uint64_t v4 = sub_100103A08();
  __chkstk_darwin(v4 - 8);
  uint64_t v164 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_100007E0C(&qword_100150200);
  __chkstk_darwin(v166);
  uint64_t v165 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100007E0C(&qword_100151608);
  __chkstk_darwin(v154);
  v190 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_100007E0C(&qword_10014E7A0);
  __chkstk_darwin(v199);
  v186 = (uint64_t *)((char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v185 = sub_100007E0C(&qword_100152D18);
  __chkstk_darwin(v185);
  v187 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100007E0C(&qword_100152D20);
  __chkstk_darwin(v188);
  uint64_t v189 = (uint64_t)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_100152D28);
  uint64_t v152 = *(void *)(v11 - 8);
  uint64_t v153 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  v193 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v151 = (char *)&v148 - v15;
  __chkstk_darwin(v14);
  v192 = (char *)&v148 - v16;
  uint64_t v200 = sub_100103F08();
  uint64_t v182 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  v181 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_100103FE8();
  uint64_t v205 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  v197 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_1001043C8();
  uint64_t v204 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  v195 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007E0C(&qword_10014FC38);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100103F48();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v183 = (uint64_t)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v148 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v148 - v30;
  uint64_t v32 = sub_100007E0C(&qword_100152D30);
  uint64_t v170 = *(void *)(v32 - 8);
  v171 = (void (*)(void, void))v32;
  __chkstk_darwin(v32);
  uint64_t v169 = (char *)&v148 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_100007E0C(&qword_100152D38);
  __chkstk_darwin(v167);
  uint64_t v35 = (char *)&v148 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100007E0C(&qword_100152D40);
  __chkstk_darwin(v168);
  uint64_t v174 = (uint64_t)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_100007E0C(&qword_100152D48);
  __chkstk_darwin(v177);
  uint64_t v173 = (char *)&v148 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100007E0C(&qword_100152D50);
  uint64_t v178 = *(void *)(v38 - 8);
  uint64_t v179 = v38;
  __chkstk_darwin(v38);
  v176 = (char *)&v148 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_100007E0C(&qword_100152D58);
  uint64_t v194 = *(void *)(v203 - 8);
  uint64_t v40 = __chkstk_darwin(v203);
  v191 = (char *)&v148 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  v175 = (char *)&v148 - v43;
  __chkstk_darwin(v42);
  v202 = (char *)&v148 - v44;
  uint64_t v184 = v3;
  sub_100096040((uint64_t)v31);
  sub_100103F28();
  uint64_t v172 = sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v45 = sub_100105338();
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v180 = v29;
  char v47 = v29;
  uint64_t v48 = v23;
  char v49 = v46;
  v46((uint64_t)v47, v23);
  unint64_t v149 = (unint64_t)"getsSecure17StreaksWidgetUtil";
  if (v45)
  {
    int v158 = 0;
    unint64_t v160 = 0x8000000100111790;
    uint64_t v159 = _swiftEmptyArrayStorage;
    uint64_t v157 = 0xD00000000000007CLL;
  }
  else
  {
    *(void *)&long long v215 = v201;
    sub_1001039E8();
    sub_10006F6E8();
    sub_100103648();
    sub_100050EC4(&qword_100150280, &qword_100150200);
    uint64_t v157 = sub_100104478();
    uint64_t v159 = v51;
    unint64_t v160 = v50;
    int v158 = v52 & 1;
  }
  uint64_t v161 = v24 + 8;
  uint64_t v162 = v49;
  v49((uint64_t)v31, v23);
  sub_100104398();
  uint64_t v53 = sub_100104378();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v22, 1, 1, v53);
  sub_1001043A8();
  sub_100012510((uint64_t)v22, &qword_10014FC38);
  uint64_t v54 = v204;
  uint64_t v55 = *(char **)(v204 + 104);
  uint64_t v56 = v195;
  uint64_t v57 = v196;
  LODWORD(v165) = enum case for Font.Leading.tight(_:);
  uint64_t v166 = v204 + 104;
  uint64_t v164 = v55;
  ((void (*)(char *))v55)(v195);
  uint64_t v58 = sub_1001043E8();
  swift_release();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  uint64_t v204 = v54 + 8;
  uint64_t v163 = v59;
  v59(v56, v57);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = swift_getKeyPath();
  if (qword_10014C090 != -1) {
    swift_once();
  }
  uint64_t v62 = xmmword_100152AB0;
  long long v156 = *(long long *)((char *)&xmmword_100152AB0 + 8);
  uint64_t v63 = qword_100152AC8;
  uint64_t v64 = qword_100152AD0;
  uint64_t v65 = swift_getKeyPath();
  *(void *)&long long v215 = v157;
  *((void *)&v215 + 1) = v160;
  LOBYTE(v216) = v158;
  *((void *)&v216 + 1) = v159;
  *(void *)&long long v217 = v201;
  *((void *)&v217 + 1) = KeyPath;
  *(void *)&long long v218 = v58;
  *((void *)&v218 + 1) = v61;
  *(void *)&long long v219 = 0x3FB999999999999ALL;
  *((void *)&v219 + 1) = v62;
  long long v220 = v156;
  *(void *)&long long v221 = v63;
  *((void *)&v221 + 1) = v64;
  *(void *)&long long v222 = v65;
  *((void *)&v222 + 1) = 1;
  char v223 = 0;
  long long v212 = v221;
  long long v213 = v222;
  char v214 = 0;
  long long v208 = v217;
  long long v209 = v218;
  long long v210 = v219;
  long long v211 = v156;
  long long v206 = v215;
  long long v207 = v216;
  swift_bridgeObjectRetain();
  sub_100007E0C(&qword_100152D60);
  sub_1000CD1B4();
  uint64_t v66 = v169;
  sub_1001045D8();
  sub_1000CD458((uint64_t)&v215);
  uint64_t v68 = v170;
  uint64_t v67 = v171;
  (*(void (**)(char *, char *, void (*)(void, void)))(v170 + 16))(v35, v66, v171);
  *(_OWORD *)&v35[*(int *)(v167 + 36)] = xmmword_10010EAE0;
  (*(void (**)(char *, void))(v68 + 8))(v66, v67);
  sub_1001045E8();
  uint64_t v69 = sub_100104618();
  swift_release();
  uint64_t v70 = v174;
  sub_100010808((uint64_t)v35, v174, &qword_100152D38);
  uint64_t v71 = v70 + *(int *)(v168 + 36);
  *(void *)uint64_t v71 = v69;
  *(_OWORD *)(v71 + 8) = xmmword_10010EAF0;
  *(void *)(v71 + 24) = 0x4000000000000000;
  sub_100012510((uint64_t)v35, &qword_100152D38);
  uint64_t v72 = v197;
  sub_100103FB8();
  uint64_t v73 = swift_getKeyPath();
  uint64_t v74 = v177;
  uint64_t v75 = (uint64_t)v173;
  uint64_t v76 = (uint64_t *)&v173[*(int *)(v177 + 36)];
  uint64_t v77 = v198;
  uint64_t v78 = (char *)v76 + *(int *)(v199 + 28);
  uint64_t v79 = v205;
  uint64_t v169 = *(char **)(v205 + 16);
  uint64_t v170 = v205 + 16;
  ((void (*)(char *, char *, uint64_t))v169)(v78, v72, v198);
  uint64_t *v76 = v73;
  sub_100010808(v70, v75, &qword_100152D40);
  char v80 = *(void (**)(void, void))(v79 + 8);
  uint64_t v205 = v79 + 8;
  v171 = v80;
  v80(v72, v77);
  sub_100012510(v70, &qword_100152D40);
  unint64_t v81 = sub_1000CD4F0();
  uint64_t v82 = v176;
  sub_100104518();
  sub_100012510(v75, &qword_100152D48);
  uint64_t v84 = v181;
  uint64_t v83 = v182;
  uint64_t v85 = v200;
  uint64_t v173 = *(char **)(v182 + 104);
  uint64_t v174 = v182 + 104;
  ((void (*)(char *, void, uint64_t))v173)(v181, enum case for DynamicTypeSize.large(_:), v200);
  *(void *)&long long v206 = v74;
  *((void *)&v206 + 1) = v81;
  swift_getOpaqueTypeConformance2();
  uint64_t v86 = v175;
  uint64_t v87 = v179;
  sub_100104558();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
  (*(void (**)(char *, uint64_t))(v178 + 8))(v82, v87);
  (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v202, v86, v203);
  uint64_t v88 = v183;
  sub_100096040(v183);
  uint64_t v89 = v180;
  sub_100103F28();
  LOBYTE(v73) = sub_100105338();
  uint64_t v90 = v162;
  v162((uint64_t)v89, v48);
  if (v73)
  {
    char v91 = 0;
    unint64_t v92 = v149 | 0x8000000000000000;
    unint64_t v93 = 0xD00000000000007CLL;
    uint64_t v94 = v196;
  }
  else
  {
    if (v150) {
      uint64_t v95 = sub_10008A2C8();
    }
    else {
      uint64_t v95 = sub_10008A118();
    }
    uint64_t v94 = v196;
    *(void *)&long long v206 = v95;
    *((void *)&v206 + 1) = v96;
    sub_100007F78();
    unint64_t v93 = sub_100104488();
    unint64_t v92 = v97;
    char v91 = v98 & 1;
  }
  v90(v88, v48);
  sub_100104348();
  uint64_t v99 = v195;
  ((void (*)(char *, void, uint64_t))v164)(v195, v165, v94);
  sub_1001043E8();
  swift_release();
  v163(v99, v94);
  uint64_t v100 = sub_100104468();
  uint64_t v102 = v101;
  char v104 = v103;
  swift_release();
  char v105 = v104 & 1;
  sub_100050AE0(v93, v92, v91);
  swift_bridgeObjectRelease();
  uint64_t v204 = sub_100104458();
  uint64_t v196 = v106;
  uint64_t v201 = v107;
  int v109 = v108 & 1;
  sub_100050AE0(v100, v102, v105);
  swift_bridgeObjectRelease();
  uint64_t v110 = swift_getKeyPath();
  uint64_t v111 = sub_100104608();
  sub_1001045E8();
  uint64_t v112 = sub_100104618();
  swift_release();
  int v113 = v197;
  sub_100103FA8();
  uint64_t v114 = swift_getKeyPath();
  uint64_t v115 = v198;
  uint64_t v116 = v186;
  ((void (*)(char *, char *, uint64_t))v169)((char *)v186 + *(int *)(v199 + 28), v113, v198);
  *uint64_t v116 = v114;
  uint64_t v117 = (uint64_t)v187;
  sub_100010808((uint64_t)v116, (uint64_t)&v187[*(int *)(v185 + 36)], &qword_10014E7A0);
  uint64_t v118 = v204;
  uint64_t v119 = v196;
  *(void *)uint64_t v117 = v204;
  *(void *)(v117 + 8) = v119;
  LODWORD(v195) = v109;
  *(unsigned char *)(v117 + 16) = v109;
  *(void *)(v117 + 24) = v201;
  *(void *)(v117 + 32) = v110;
  *(void *)(v117 + 40) = 1;
  *(unsigned char *)(v117 + 48) = 0;
  *(void *)(v117 + 56) = v111;
  *(void *)(v117 + 64) = v112;
  *(_OWORD *)(v117 + 72) = xmmword_10010EB00;
  *(void *)(v117 + 88) = 0x3FF0000000000000;
  uint64_t v120 = v119;
  sub_100050DA8(v118, v119, v109);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100012510((uint64_t)v116, &qword_10014E7A0);
  v171(v113, v115);
  sub_100050AE0(v204, v120, (char)v195);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v116) = sub_100104318();
  sub_100103E08();
  uint64_t v122 = v121;
  uint64_t v124 = v123;
  uint64_t v126 = v125;
  uint64_t v128 = v127;
  uint64_t v129 = v189;
  sub_100010808(v117, v189, &qword_100152D18);
  uint64_t v130 = v129 + *(int *)(v188 + 36);
  *(unsigned char *)uint64_t v130 = (_BYTE)v116;
  *(void *)(v130 + 8) = v122;
  *(void *)(v130 + 16) = v124;
  *(void *)(v130 + 24) = v126;
  *(void *)(v130 + 32) = v128;
  *(unsigned char *)(v130 + 40) = 0;
  sub_100012510(v117, &qword_100152D18);
  uint64_t v131 = (uint64_t)v190;
  ((void (*)(char *, void, uint64_t))v173)(v190, enum case for DynamicTypeSize.xxLarge(_:), v200);
  sub_1000CD66C(&qword_100151690, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_100104A98();
  if (result)
  {
    sub_1000CDA98(&qword_100152DD8, &qword_100152D20, (void (*)(void))sub_1000CD6B4);
    sub_100050EC4(&qword_100151698, &qword_100151608);
    uint64_t v133 = v151;
    sub_100104568();
    sub_100012510(v131, &qword_100151608);
    sub_100012510(v129, &qword_100152D20);
    uint64_t v135 = v152;
    uint64_t v134 = v153;
    unint64_t v136 = v192;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v192, v133, v153);
    uint64_t v137 = v194;
    unint64_t v138 = *(void (**)(char *, char *, uint64_t))(v194 + 16);
    unint64_t v139 = v191;
    v138(v191, v202, v203);
    uint64_t v140 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
    v140(v193, v136, v134);
    v141 = v155;
    v142 = v139;
    uint64_t v143 = v203;
    v138(v155, v142, v203);
    uint64_t v144 = &v141[*(int *)(sub_100007E0C(&qword_100152E18) + 48)];
    uint64_t v145 = v193;
    v140(v144, v193, v134);
    v146 = *(void (**)(char *, uint64_t))(v135 + 8);
    v146(v192, v134);
    v147 = *(void (**)(char *, uint64_t))(v137 + 8);
    v147(v202, v143);
    v146(v145, v134);
    return ((uint64_t (*)(char *, uint64_t))v147)(v191, v143);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000CA5F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v157 = a1;
  uint64_t v154 = sub_100103FE8();
  uint64_t v152 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  int v150 = (char *)&v129 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100007E0C(&qword_100152E20) - 8;
  __chkstk_darwin(v148);
  uint64_t v146 = (uint64_t)&v129 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100007E0C(&qword_100152E28) - 8;
  __chkstk_darwin(v149);
  v147 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100007E0C(&qword_100152E30) - 8;
  uint64_t v4 = __chkstk_darwin(v155);
  uint64_t v156 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v151 = (uint64_t)&v129 - v7;
  __chkstk_darwin(v6);
  uint64_t v153 = (uint64_t)&v129 - v8;
  uint64_t v9 = sub_100007E0C(&qword_100152E38);
  __chkstk_darwin(v9 - 8);
  uint64_t v165 = (uint64_t)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100007E0C(&qword_10014FC40) - 8;
  __chkstk_darwin(v164);
  uint64_t v161 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1001043C8();
  uint64_t v169 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v162 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100103F48();
  uint64_t v170 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v166 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v129 - v17;
  uint64_t v19 = sub_100104888();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_100007E0C(&qword_100152E40) - 8;
  uint64_t v23 = __chkstk_darwin(v167);
  uint64_t v144 = (char *)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (uint64_t)&v129 - v25;
  uint64_t v142 = sub_100007E0C(&qword_100152E48) - 8;
  uint64_t v27 = __chkstk_darwin(v142);
  uint64_t v145 = (uint64_t)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v137 = (uint64_t)&v129 - v30;
  __chkstk_darwin(v29);
  uint64_t v168 = (uint64_t)&v129 - v31;
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v22, enum case for WidgetFamily.systemSmall(_:), v19);
  sub_100096040((uint64_t)v18);
  uint64_t v32 = v18;
  int v158 = v18;
  uint64_t v33 = sub_100048BF0(v22);
  uint64_t v35 = v34;
  uint64_t v143 = v36;
  char v38 = v37 & 1;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t v171 = v14 + 8;
  unint64_t v160 = v39;
  v39((uint64_t)v32, v13);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
  sub_100104408();
  unsigned int v141 = enum case for Font.Leading.tight(_:);
  uint64_t v40 = v169;
  uint64_t v41 = *(void (**)(void))(v169 + 104);
  uint64_t v139 = v169 + 104;
  uint64_t v140 = (void (*)(char *, void, uint64_t))v41;
  uint64_t v42 = v162;
  uint64_t v43 = v163;
  v41(v162);
  sub_1001043E8();
  swift_release();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v169 = v40 + 8;
  unint64_t v138 = v44;
  v44(v42, v43);
  uint64_t v45 = sub_100104468();
  uint64_t v47 = v46;
  LOBYTE(v22) = v48;
  swift_release();
  sub_100050AE0(v33, v35, v38);
  swift_bridgeObjectRelease();
  uint64_t v131 = sub_100104458();
  uint64_t v130 = v49;
  uint64_t v143 = v50;
  LOBYTE(v33) = v51 & 1;
  sub_100050AE0(v45, v47, v22 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v42) = sub_100104218();
  uint64_t v53 = v164;
  uint64_t v54 = v161;
  uint64_t v55 = &v161[*(int *)(v164 + 44)];
  uint64_t v56 = enum case for BlendMode.plusDarker(_:);
  unsigned int v136 = enum case for BlendMode.plusDarker(_:);
  uint64_t v57 = sub_100104748();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(void (**)(char *, void, uint64_t))(v58 + 104);
  uint64_t v133 = v59;
  uint64_t v134 = v58 + 104;
  uint64_t v132 = v57;
  ((void (*)(char *, uint64_t))v59)(v55, v56);
  char v60 = (char *)v54 + *(int *)(v53 + 48);
  unsigned int v135 = enum case for BlendMode.plusLighter(_:);
  ((void (*)(char *))v59)(v60);
  uint64_t v61 = (uint64_t)v54;
  _DWORD *v54 = v42;
  uint64_t v62 = v165;
  sub_100010808((uint64_t)v54, v165, &qword_10014FC40);
  sub_100010808(v62, v26 + *(int *)(v167 + 44), &qword_100152E38);
  uint64_t v63 = v131;
  uint64_t v64 = v130;
  *(void *)uint64_t v26 = v131;
  *(void *)(v26 + 8) = v64;
  *(unsigned char *)(v26 + 16) = v33;
  *(void *)(v26 + 24) = v143;
  *(void *)(v26 + 32) = KeyPath;
  *(unsigned char *)(v26 + 40) = 1;
  sub_100050DA8(v63, v64, v33);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100012510(v62, &qword_100152E38);
  sub_100012510(v61, &qword_10014FC40);
  sub_100050AE0(v63, v64, v33);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v66 = (uint64_t)v158;
  uint64_t v65 = v159;
  sub_100096040((uint64_t)v158);
  uint64_t v67 = v166;
  sub_100103F28();
  uint64_t v143 = sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v68 = v170;
  LOBYTE(v42) = sub_100105338();
  uint64_t v69 = v160;
  v160((uint64_t)v67, v68);
  uint64_t v70 = v66;
  v69(v66, v68);
  uint64_t v71 = swift_getKeyPath();
  uint64_t v72 = v137;
  sub_100010808(v26, v137, &qword_100152E40);
  uint64_t v73 = v72 + *(int *)(v142 + 44);
  *(void *)uint64_t v73 = v71;
  *(void *)(v73 + 8) = v42 & 1;
  *(unsigned char *)(v73 + 16) = (v42 & 1) == 0;
  sub_100012510(v26, &qword_100152E40);
  sub_100033870(v72, v168, &qword_100152E48);
  uint64_t v74 = v65 + *(int *)(type metadata accessor for StreaksWidgetSystemSmallView(0) + 24);
  uint64_t v75 = (uint64_t *)(v74 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 24));
  uint64_t v76 = *v75;
  uint64_t v77 = v75[1];
  sub_100096040(v70);
  uint64_t v78 = sub_100048F44(v76, v77);
  uint64_t v80 = v79;
  LOBYTE(v64) = v81 & 1;
  v69(v70, v170);
  sub_1001043F8();
  uint64_t v82 = v162;
  uint64_t v83 = v163;
  v140(v162, v141, v163);
  sub_1001043E8();
  swift_release();
  v138(v82, v83);
  uint64_t v84 = sub_100104468();
  uint64_t v86 = v85;
  LOBYTE(v26) = v87;
  uint64_t v169 = v88;
  swift_release();
  sub_100050AE0(v78, v80, v64);
  swift_bridgeObjectRelease();
  uint64_t v89 = swift_getKeyPath();
  LODWORD(v78) = sub_100104208();
  uint64_t v90 = v164;
  char v91 = v161;
  uint64_t v92 = v132;
  unint64_t v93 = v133;
  v133(&v161[*(int *)(v164 + 44)], v136, v132);
  v93(&v91[*(int *)(v90 + 48)], v135, v92);
  *(_DWORD *)char v91 = v78;
  uint64_t v94 = v165;
  sub_100010808((uint64_t)v91, v165, &qword_10014FC40);
  uint64_t v95 = (uint64_t)v144;
  sub_100010808(v94, (uint64_t)&v144[*(int *)(v167 + 44)], &qword_100152E38);
  *(void *)uint64_t v95 = v84;
  *(void *)(v95 + 8) = v86;
  *(unsigned char *)(v95 + 16) = v26 & 1;
  *(void *)(v95 + 24) = v169;
  *(void *)(v95 + 32) = v89;
  *(unsigned char *)(v95 + 40) = 1;
  sub_100050DA8(v84, v86, v26 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100012510(v94, &qword_100152E38);
  sub_100012510((uint64_t)v91, &qword_10014FC40);
  sub_100050AE0(v84, v86, v26 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v94) = sub_100104308();
  sub_100103E08();
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v101 = v100;
  uint64_t v103 = v102;
  uint64_t v104 = v146;
  sub_100010808(v95, v146, &qword_100152E40);
  uint64_t v105 = v104 + *(int *)(v148 + 44);
  *(unsigned char *)uint64_t v105 = v94;
  *(void *)(v105 + 8) = v97;
  *(void *)(v105 + 16) = v99;
  *(void *)(v105 + 24) = v101;
  *(void *)(v105 + 32) = v103;
  *(unsigned char *)(v105 + 40) = 0;
  sub_100012510(v95, &qword_100152E40);
  uint64_t v106 = v150;
  sub_100103FA8();
  uint64_t v107 = swift_getKeyPath();
  uint64_t v108 = (uint64_t)v147;
  int v109 = (uint64_t *)&v147[*(int *)(v149 + 44)];
  uint64_t v110 = sub_100007E0C(&qword_10014E7A0);
  uint64_t v111 = v152;
  uint64_t v112 = v154;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))((char *)v109 + *(int *)(v110 + 28), v106, v154);
  *int v109 = v107;
  sub_100010808(v104, v108, &qword_100152E20);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v106, v112);
  sub_100012510(v104, &qword_100152E20);
  uint64_t v113 = (uint64_t)v158;
  sub_100096040((uint64_t)v158);
  uint64_t v114 = v166;
  sub_100103F28();
  uint64_t v115 = v170;
  char v116 = sub_100105338();
  uint64_t v117 = v160;
  v160((uint64_t)v114, v115);
  v117(v113, v115);
  if (v116) {
    uint64_t v118 = 3;
  }
  else {
    uint64_t v118 = 0;
  }
  uint64_t v119 = swift_getKeyPath();
  uint64_t v120 = v151;
  sub_100010808(v108, v151, &qword_100152E28);
  uint64_t v121 = v120 + *(int *)(v155 + 44);
  *(void *)uint64_t v121 = v119;
  *(void *)(v121 + 8) = v118;
  *(unsigned char *)(v121 + 16) = (v116 & 1) == 0;
  sub_100012510(v108, &qword_100152E28);
  uint64_t v122 = v153;
  sub_100033870(v120, v153, &qword_100152E30);
  uint64_t v123 = v168;
  uint64_t v124 = v145;
  sub_100010808(v168, v145, &qword_100152E48);
  uint64_t v125 = v156;
  sub_100010808(v122, v156, &qword_100152E30);
  uint64_t v126 = v157;
  sub_100010808(v124, v157, &qword_100152E48);
  uint64_t v127 = sub_100007E0C(&qword_100152E50);
  sub_100010808(v125, v126 + *(int *)(v127 + 48), &qword_100152E30);
  sub_100012510(v122, &qword_100152E30);
  sub_100012510(v123, &qword_100152E48);
  sub_100012510(v125, &qword_100152E30);
  return sub_100012510(v124, &qword_100152E48);
}

uint64_t sub_1000CB4F0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_100007E0C(&qword_100152CA0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v19 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - v13;
  sub_1000CB6F8(0, (uint64_t)&v19 - v13);
  sub_1000CB6F8(1, (uint64_t)v12);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v9, v14, v2);
  v15(v6, v12, v2);
  v15(a1, v9, v2);
  uint64_t v16 = sub_100007E0C(&qword_100152CA8);
  v15(&a1[*(int *)(v16 + 48)], v6, v2);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v12, v2);
  v17(v14, v2);
  v17(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v17)(v9, v2);
}

uint64_t sub_1000CB6F8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v55 = a1;
  *(void *)&long long v56 = a2;
  uint64_t v52 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  __chkstk_darwin(v52);
  uint64_t v49 = (uint64_t)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100103F48();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v54 = sub_100007E0C(&qword_100152CB0);
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007E0C(&qword_100152CB8);
  uint64_t v50 = *(void *)(v17 - 8);
  uint64_t v51 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100104888();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
  uint64_t v21 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v22 = &v16[v21[5]];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = &v16[v21[6]];
  uint64_t v24 = sub_100103978();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v16[v21[7]] = 1;
  swift_storeEnumTagMultiPayload();
  sub_1000B53D8((uint64_t)v13);
  sub_1000CD09C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  uint64_t v25 = sub_100103818();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v13, 1, v25);
  if (result != 1)
  {
    sub_100007E0C(&qword_10014E828);
    sub_1000CD0FC();
    uint64_t v47 = v19;
    sub_100104418();
    uint64_t v27 = v48;
    sub_100096040((uint64_t)v9);
    sub_100103F28();
    sub_1000CD66C((unint64_t *)&qword_10014E238, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v28 = sub_100105338();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
    v29(v7, v3);
    v29(v9, v3);
    uint64_t v30 = v49;
    sub_1000CD964(v27, v49, type metadata accessor for StreaksWidgetSystemSmallView);
    if (v28)
    {
      sub_1000CD09C(v30, type metadata accessor for StreaksWidgetSystemSmallView);
      char v31 = v55;
      uint64_t v33 = v53;
      uint64_t v32 = v54;
      uint64_t v34 = v51;
      uint64_t v35 = v50;
    }
    else
    {
      uint64_t v36 = v30 + *(int *)(v52 + 24);
      uint64_t v37 = *(void *)(v36 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 20));
      sub_1000CD09C(v30, type metadata accessor for StreaksWidgetSystemSmallView);
      char v31 = v55;
      uint64_t v33 = v53;
      uint64_t v32 = v54;
      uint64_t v35 = v50;
      uint64_t v34 = v51;
      if (v37 != 2 && (v37 & 1) == 0)
      {
        if (qword_10014C0A0 != -1) {
          swift_once();
        }
        char v38 = &xmmword_100152B00;
        goto LABEL_12;
      }
    }
    if (qword_10014C098 != -1) {
      swift_once();
    }
    char v38 = &xmmword_100152AD8;
LABEL_12:
    uint64_t v39 = *(void *)v38;
    long long v56 = *(long long *)((char *)v38 + 8);
    uint64_t v40 = *((void *)v38 + 3);
    uint64_t v41 = *((void *)v38 + 4);
    swift_bridgeObjectRetain();
    uint64_t v42 = &v33[*(int *)(v32 + 36)];
    uint64_t v43 = sub_100007E0C(&qword_100152CD0);
    sub_10009636C((uint64_t)&v42[*(int *)(v43 + 40)]);
    sub_100103F88();
    unsigned char *v33 = v31 & 1;
    uint64_t v44 = &v42[*(int *)(v43 + 36)];
    *(void *)uint64_t v44 = v39;
    *(_OWORD *)(v44 + 8) = v56;
    *((void *)v44 + 3) = v40;
    *((void *)v44 + 4) = v41;
    sub_100050EC4(&qword_100152CD8, &qword_100152CB8);
    sub_100050EC4(&qword_100152CE0, &qword_100152CB0);
    uint64_t v45 = v47;
    sub_100104528();
    sub_100012510((uint64_t)v33, &qword_100152CB0);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v45, v34);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CBDCC()
{
  uint64_t v1 = type metadata accessor for StreaksWidgetSystemSmallView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_100007E0C(&qword_10014E6D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100103F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + *(int *)(v1 + 20);
  sub_100007E0C(&qword_10014E7C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100104868();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + *(int *)(v1 + 24);
  uint64_t v10 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v9 + *(int *)(type metadata accessor for StreaksWidgetTimelineEntry() + 28);
  uint64_t v12 = sub_100104918();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_1000CC010@<D0>(uint64_t a1@<X8>)
{
  return sub_1000C7EE8(a1);
}

unint64_t sub_1000CC074()
{
  unint64_t result = qword_100152C00;
  if (!qword_100152C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152C00);
  }
  return result;
}

uint64_t sub_1000CC0C8()
{
  return sub_100104008();
}

double sub_1000CC0F0()
{
  uint64_t v0 = sub_100103C38();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100152C18);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100108250;
  if (qword_10014C180 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100007D30(v0, (uint64_t)qword_100163270);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  *(void *)(v4 + 32) = sub_100104628();
  if (qword_10014C170 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100007D30(v0, (uint64_t)qword_100163240);
  v6(v3, v7, v0);
  *(void *)(v4 + 40) = sub_100104628();
  *(void *)&long long v10 = v4;
  sub_100104D48();
  sub_100104778();
  sub_100104788();
  sub_1001046D8();
  sub_100103EF8();
  double result = *(double *)&v10;
  xmmword_100152A60 = v10;
  unk_100152A70 = v11;
  qword_100152A80 = v12;
  return result;
}

double sub_1000CC304()
{
  uint64_t v0 = sub_100103C38();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100152C18);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100108250;
  if (qword_10014C180 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100007D30(v0, (uint64_t)qword_100163270);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  *(void *)(v4 + 32) = sub_100104628();
  if (qword_10014C178 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100007D30(v0, (uint64_t)qword_100163258);
  v6(v3, v7, v0);
  *(void *)(v4 + 40) = sub_100104628();
  *(void *)&long long v10 = v4;
  sub_100104D48();
  sub_100104778();
  sub_100104788();
  sub_1001046D8();
  sub_100103EF8();
  double result = *(double *)&v10;
  xmmword_100152A88 = v10;
  *(_OWORD *)algn_100152A98 = v11;
  qword_100152AA8 = v12;
  return result;
}

double sub_1000CC518()
{
  uint64_t v0 = sub_100103C38();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100152C18);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100108250;
  if (qword_10014C1A8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100007D30(v0, (uint64_t)qword_1001632E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  *(void *)(v4 + 32) = sub_100104628();
  *(void *)(v4 + 40) = sub_100104608();
  *(void *)&long long v8 = v4;
  sub_100104D48();
  sub_100104758();
  sub_100104768();
  sub_1001046D8();
  sub_100103EF8();
  double result = *(double *)&v8;
  xmmword_100152AB0 = v8;
  unk_100152AC0 = v9;
  qword_100152AD0 = v10;
  return result;
}

double sub_1000CC6C8()
{
  uint64_t v0 = sub_100103C38();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100152C18);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100108250;
  if (qword_10014C188 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100007D30(v0, (uint64_t)qword_100163288);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  *(void *)(v4 + 32) = sub_100104628();
  if (qword_10014C190 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100007D30(v0, (uint64_t)qword_1001632A0);
  v6(v3, v7, v0);
  *(void *)(v4 + 40) = sub_100104628();
  *(void *)&long long v10 = v4;
  sub_100104D48();
  sub_1001047A8();
  sub_1001047B8();
  sub_1001046D8();
  sub_100103EF8();
  double result = *(double *)&v10;
  xmmword_100152AD8 = v10;
  *(_OWORD *)algn_100152AE8 = v11;
  qword_100152AF8 = v12;
  return result;
}

double sub_1000CC8DC()
{
  uint64_t v0 = sub_100103C38();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100152C18);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100108250;
  if (qword_10014C198 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100007D30(v0, (uint64_t)qword_1001632B8);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  *(void *)(v4 + 32) = sub_100104628();
  if (qword_10014C1A0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100007D30(v0, (uint64_t)qword_1001632D0);
  v6(v3, v7, v0);
  *(void *)(v4 + 40) = sub_100104628();
  *(void *)&long long v10 = v4;
  sub_100104D48();
  sub_1001047A8();
  sub_1001047B8();
  sub_1001046D8();
  sub_100103EF8();
  double result = *(double *)&v10;
  xmmword_100152B00 = v10;
  unk_100152B10 = v11;
  qword_100152B20 = v12;
  return result;
}

double sub_1000CCAF0()
{
  double result = 12.0;
  xmmword_100152B28 = xmmword_10010EB10;
  *(_OWORD *)&qword_100152B38 = xmmword_10010EB20;
  return result;
}

uint64_t sub_1000CCB10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100007E0C(&qword_10014E820);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10014BFF8 != -1) {
    swift_once();
  }
  v8[0] = qword_100163070;
  v8[1] = *(void *)algn_100163078;
  sub_100007F78();
  swift_bridgeObjectRetain();
  sub_1001046A8();
  sub_100104718();
  __n128 v6 = sub_100050700(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v6);
}

uint64_t sub_1000CCCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = sub_100007E0C(&qword_100152FA0);
  __chkstk_darwin(v27);
  uint64_t v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100007E0C(&qword_100152FA8);
  __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_100152FB0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100104868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - v15, v2, v10);
  sub_100104858();
  sub_1000CD66C((unint64_t *)&qword_10014EA48, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  char v17 = sub_100104A98();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v18(v16, v10);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if (v17)
  {
    uint64_t v20 = (uint64_t)v23;
    v19(v23, v24, v6);
    sub_100010808(v20, (uint64_t)v5, &qword_100152FA0);
    swift_storeEnumTagMultiPayload();
    sub_100050EC4(&qword_100152FB8, &qword_100152FB0);
    sub_1000CE1B0();
    sub_1001041B8();
    return sub_100012510(v20, &qword_100152FA0);
  }
  else
  {
    v19(v9, v24, v6);
    v19(v5, (uint64_t)v9, v6);
    swift_storeEnumTagMultiPayload();
    sub_100050EC4(&qword_100152FB8, &qword_100152FB0);
    sub_1000CE1B0();
    sub_1001041B8();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1000CD09C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000CD0FC()
{
  unint64_t result = qword_100152CC0;
  if (!qword_100152CC0)
  {
    sub_100007F30(&qword_10014E828);
    sub_100050EC4(&qword_100152CC8, &qword_10014E820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152CC0);
  }
  return result;
}

unint64_t sub_1000CD1B4()
{
  unint64_t result = qword_100152D68;
  if (!qword_100152D68)
  {
    sub_100007F30(&qword_100152D60);
    sub_1000CD254();
    sub_100050EC4(&qword_10014E800, &qword_10014E808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152D68);
  }
  return result;
}

unint64_t sub_1000CD254()
{
  unint64_t result = qword_100152D70;
  if (!qword_100152D70)
  {
    sub_100007F30(&qword_100152D78);
    sub_1000CD2F4();
    sub_100050EC4(&qword_100152DB0, &qword_100152DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152D70);
  }
  return result;
}

unint64_t sub_1000CD2F4()
{
  unint64_t result = qword_100152D80;
  if (!qword_100152D80)
  {
    sub_100007F30(&qword_100152D88);
    sub_1000CD394();
    sub_100050EC4(&qword_10014E7F0, &qword_10014E7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152D80);
  }
  return result;
}

unint64_t sub_1000CD394()
{
  unint64_t result = qword_100152D90;
  if (!qword_100152D90)
  {
    sub_100007F30(&qword_100152D98);
    sub_100050EC4(&qword_100152DA0, &qword_100152DA8);
    sub_100050EC4(&qword_10014FB00, &qword_10014FB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152D90);
  }
  return result;
}

uint64_t sub_1000CD458(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000CD4F0()
{
  unint64_t result = qword_100152DC0;
  if (!qword_100152DC0)
  {
    sub_100007F30(&qword_100152D48);
    sub_1000CDA98(&qword_100152DC8, &qword_100152D40, (void (*)(void))sub_1000CD5BC);
    sub_100050EC4(&qword_10014E810, &qword_10014E7A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152DC0);
  }
  return result;
}

unint64_t sub_1000CD5BC()
{
  unint64_t result = qword_100152DD0;
  if (!qword_100152DD0)
  {
    sub_100007F30(&qword_100152D38);
    sub_100007F30(&qword_100152D60);
    sub_1000CD1B4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152DD0);
  }
  return result;
}

uint64_t sub_1000CD66C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000CD6B4()
{
  unint64_t result = qword_100152DE0;
  if (!qword_100152DE0)
  {
    sub_100007F30(&qword_100152D18);
    sub_1000CDA98(&qword_100152DE8, &qword_100152DF0, (void (*)(void))sub_1000CD780);
    sub_100050EC4(&qword_10014E810, &qword_10014E7A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152DE0);
  }
  return result;
}

unint64_t sub_1000CD780()
{
  unint64_t result = qword_100152DF8;
  if (!qword_100152DF8)
  {
    sub_100007F30(&qword_100152E00);
    sub_1000CD820();
    sub_100050EC4(&qword_100151680, &qword_100151688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152DF8);
  }
  return result;
}

unint64_t sub_1000CD820()
{
  unint64_t result = qword_100152E08;
  if (!qword_100152E08)
  {
    sub_100007F30(&qword_100152E10);
    sub_100050EC4(&qword_10014E800, &qword_10014E808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152E08);
  }
  return result;
}

uint64_t sub_1000CD8DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for WingsBackgroundAccentableModifier(uint64_t a1)
{
  return sub_100011F00(a1, qword_100152F58);
}

uint64_t sub_1000CD964(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000CD9CC()
{
  unint64_t result = qword_100152EA8;
  if (!qword_100152EA8)
  {
    sub_100007F30(&qword_100152E90);
    sub_1000CDA98(&qword_100152EB0, &qword_100152E88, (void (*)(void))sub_1000CDB14);
    sub_100050EC4(&qword_10014E810, &qword_10014E7A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152EA8);
  }
  return result;
}

uint64_t sub_1000CDA98(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000CDB14()
{
  unint64_t result = qword_100152EB8;
  if (!qword_100152EB8)
  {
    sub_100007F30(&qword_100152E80);
    sub_1000CDBB4();
    sub_100050EC4(&qword_100152EE0, &qword_100152EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152EB8);
  }
  return result;
}

unint64_t sub_1000CDBB4()
{
  unint64_t result = qword_100152EC0;
  if (!qword_100152EC0)
  {
    sub_100007F30(&qword_100152E78);
    sub_1000CDA98(&qword_100152EC8, &qword_100152ED0, (void (*)(void))sub_10006AF8C);
    sub_1000CD66C(&qword_100152ED8, (void (*)(uint64_t))type metadata accessor for WingsBackgroundAccentableModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152EC0);
  }
  return result;
}

uint64_t sub_1000CDC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1000CDCF8(uint64_t a1)
{
  uint64_t v2 = sub_100104868();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000CDD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000CDDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000CDE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000CDE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000CDEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000CDF00);
}

uint64_t sub_1000CDF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000CDF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000CDF80);
}

uint64_t sub_1000CDF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100104868();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000CDFF0()
{
  uint64_t result = sub_100104868();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000CE080()
{
  unint64_t result = qword_100152F90;
  if (!qword_100152F90)
  {
    sub_100007F30(&qword_100152C08);
    sub_100007F30(&qword_100152BE0);
    sub_100050EC4(&qword_100152BF8, &qword_100152BE0);
    sub_1000CC074();
    swift_getOpaqueTypeConformance2();
    sub_100050EC4(&qword_100152F98, &qword_100152C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152F90);
  }
  return result;
}

uint64_t sub_1000CE194()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000CE1B0()
{
  unint64_t result = qword_100152FC0;
  if (!qword_100152FC0)
  {
    sub_100007F30(&qword_100152FA0);
    sub_100050EC4(&qword_100152FB8, &qword_100152FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152FC0);
  }
  return result;
}

unint64_t sub_1000CE254()
{
  unint64_t result = qword_100152FC8;
  if (!qword_100152FC8)
  {
    sub_100007F30(&qword_100152FD0);
    sub_100050EC4(&qword_100152FB8, &qword_100152FB0);
    sub_1000CE1B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100152FC8);
  }
  return result;
}

uint64_t sub_1000CE2F4()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_100152FD8);
  sub_100007D30(v0, (uint64_t)qword_100152FD8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

uint64_t AttachmentDownloadOperation.main@Sendable ()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_100007E0C((uint64_t *)&unk_100151990);
  v2[6] = swift_task_alloc();
  uint64_t v3 = sub_100103818();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1000CE4F0, 0, 0);
}

uint64_t sub_1000CE4F0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + qword_100153000);
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  unint64_t v5 = sub_100045298();
  *uint64_t v4 = v0;
  v4[1] = sub_1000CE5F8;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_100153010, v3, v5);
}

uint64_t sub_1000CE5F8()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000CEBC8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000CE714;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000CE714()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[2];
  if (!sub_1001051D8()) {
    goto LABEL_7;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_7:
    if (qword_10014C0B0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100103DB8();
    sub_100007D30(v17, (uint64_t)qword_100152FD8);
    uint64_t v18 = v1;
    uint64_t v19 = sub_100103D98();
    os_log_type_t v20 = sub_100105008();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      id v22 = [v18 debugDescription];
      uint64_t v23 = sub_100104B78();
      unint64_t v25 = v24;

      v0[3] = sub_1000456B4(v23, v25, &v33);
      sub_1001052C8();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "error getting DataConfig.JournalEntryAssetFileAttachment.file: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_19;
  }
  id v3 = [v2 fileURL];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    sub_1001037A8();

    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v9(v8, v5, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
    {
      uint64_t v10 = v0[10];
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[7];
      uint64_t v13 = v0[4];
      swift_unknownObjectRelease();
      v9(v10, v11, v12);
      uint64_t v14 = sub_100007E0C(&qword_100153018);
      uint64_t v15 = *(int *)(v14 + 48);
      v9(v13, v10, v12);
      uint64_t v16 = 0;
      *(void *)(v13 + v15) = v1;
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
  }
  sub_100019F70(v0[6]);
  if (qword_10014C0B0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_100103DB8();
  sub_100007D30(v26, (uint64_t)qword_100152FD8);
  uint64_t v27 = sub_100103D98();
  os_log_type_t v28 = sub_100105008();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "ckAsset.fileURL is nil", v29, 2u);
    swift_slowDealloc();
    uint64_t v30 = v1;
  }
  else
  {
    uint64_t v30 = v27;
    uint64_t v27 = v1;
  }
  swift_unknownObjectRelease();

LABEL_19:
  uint64_t v14 = sub_100007E0C(&qword_100153018);
  uint64_t v16 = 1;
LABEL_20:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v0[4], v16, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1000CEBC8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000CEC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_1000CEC78, 0, 0);
}

uint64_t sub_1000CEC78()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_100153020);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10004503C;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10005E414;
  v0[13] = &unk_10013CD08;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000CED84(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100017A64;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_1000CEC78, 0, 0);
}

void AttachmentDownloadOperation.init()()
{
}

void sub_1000CEE74()
{
}

void sub_1000CEEA4()
{
  uint64_t v1 = *(void **)(v0 + qword_100153000);
}

id AttachmentDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttachmentDownloadOperation();
  return [super dealloc];
}

void sub_1000CEF3C(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_100153000);
}

uint64_t type metadata accessor for AttachmentDownloadOperation()
{
  uint64_t result = qword_100153058;
  if (!qword_100153058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000CEFF4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000CF040()
{
  return type metadata accessor for AttachmentDownloadOperation();
}

void *DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.unsafeMutableAddressor()
{
  return &static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY;
}

void *DataConfig.APP_GROUP.unsafeMutableAddressor()
{
  return &static DataConfig.APP_GROUP;
}

void *DataConfig.APP_BUNDLE_ID.unsafeMutableAddressor()
{
  return &static DataConfig.APP_BUNDLE_ID;
}

void *DataConfig.prioritizeDownloadNotification.unsafeMutableAddressor()
{
  return &static DataConfig.prioritizeDownloadNotification;
}

const char *DataConfig.downloadIDKey.unsafeMutableAddressor()
{
  return "downloadIDKey";
}

void *DataConfig.downloadPriorityKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadPriorityKey;
}

void *DataConfig.downloadTypeKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadTypeKey;
}

NSURLFileProtectionType sub_1000CF09C()
{
  qword_100163178 = 0xD000000000000017;
  qword_100163180 = 0x8000000100114BE0;
  qword_100163188 = (uint64_t)NSURLFileProtectionCompleteUnlessOpen;
  return NSURLFileProtectionCompleteUnlessOpen;
}

NSFileProtectionType sub_1000CF0D4()
{
  type metadata accessor for DataStackConfiguration();
  swift_allocObject();
  qword_100163190 = (uint64_t)sub_1000BE7C0(0x73746E656D6F6DLL, 0xE700000000000000, 0x73746E656D6F6DLL, 0xE700000000000000, NSFileProtectionCompleteUnlessOpen, 0, 0xD000000000000011, 0x8000000100112810, 0xD000000000000017, 0x8000000100114BE0);

  return NSFileProtectionCompleteUnlessOpen;
}

const char *DataConfig.COREDATA_MODEL_NAME.unsafeMutableAddressor()
{
  return "moments";
}

const char *DataConfig.COREDATA_FILENAME.unsafeMutableAddressor()
{
  return "moments";
}

void *DataConfig.CONTAINER_ID.unsafeMutableAddressor()
{
  return &static DataConfig.CONTAINER_ID;
}

unint64_t static DataConfig.spotlightBundleIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t static DataConfig.APP_GROUP.getter()
{
  return 0xD000000000000017;
}

uint64_t static DataConfig.COREDATA_MODEL_NAME.getter()
{
  return 0x73746E656D6F6DLL;
}

const char *DataConfig.ZONE_NAME.unsafeMutableAddressor()
{
  return "JurassicZone";
}

uint64_t static DataConfig.ZONE_NAME.getter()
{
  return 0x636973736172754ALL;
}

void *DataConfig.ZONE_SUBSCRIPTION_ID.unsafeMutableAddressor()
{
  return &static DataConfig.ZONE_SUBSCRIPTION_ID;
}

unint64_t static DataConfig.ZONE_SUBSCRIPTION_ID.getter()
{
  return 0xD000000000000025;
}

void *DataConfig.METADATA_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_KEY;
}

unint64_t static DataConfig.METADATA_KEY.getter()
{
  return 0xD000000000000015;
}

void *DataConfig.METADATA_USER_ID_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_USER_ID_KEY;
}

unint64_t static DataConfig.METADATA_USER_ID_KEY.getter()
{
  return 0xD00000000000001BLL;
}

const char *DataConfig.RECORD_TYPE_JOURNAL_ENTRY.unsafeMutableAddressor()
{
  return "JournalEntry";
}

uint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY.getter()
{
  return 0x456C616E72756F4ALL;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.getter()
{
  return 0xD000000000000011;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static DataConfig.prioritizeDownloadNotification.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static DataConfig.downloadPriorityKey.getter()
{
  return 0xD000000000000013;
}

uint64_t static DataConfig.downloadIDKey.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static DataConfig.downloadTypeKey.getter()
{
  return 0x64616F6C6E776F64;
}

const char *DataConfig.spotlightDomain.unsafeMutableAddressor()
{
  return "Journal";
}

uint64_t static DataConfig.spotlightDomain.getter()
{
  return 0x6C616E72756F4ALL;
}

void *DataConfig.spotlightBundleIdentifier.unsafeMutableAddressor()
{
  return &static DataConfig.spotlightBundleIdentifier;
}

uint64_t static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.getter()
{
  return 100;
}

uint64_t type metadata accessor for DataConfig()
{
  return self;
}

uint64_t sub_1000CF418()
{
  uint64_t v0 = sub_100103A18();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100103AE8();
  sub_1000081D0(v4, qword_100163198);
  sub_100007D30(v4, (uint64_t)qword_100163198);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Identifier.gregorian(_:), v0);
  sub_100103A28();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000CF538@<X0>(char *a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100103818();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (id *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  sub_10003A5C4(v1, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v5);
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v11 = (id *)((char *)v11 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48));
      goto LABEL_4;
    default:
LABEL_4:
      sub_1000D18EC((uint64_t)v11, (uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      sub_10003A5C4((uint64_t)v17, (uint64_t)v15, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v19 = v23;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v15, v5);
      }
      else
      {
        type metadata accessor for Journaling();
        sub_100058118((uint64_t)v4);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_100019F70((uint64_t)v4);
          uint64_t v20 = 1;
          uint64_t v19 = v23;
          goto LABEL_10;
        }
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v21(v8, v4, v5);
        uint64_t v19 = v23;
        v21(v23, v8, v5);
      }
      uint64_t v20 = 0;
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v19, v20, 1, v5);
      return sub_1000D1104((uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
  }
}

uint64_t sub_1000CF900()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_1001531E8);
  uint64_t v1 = sub_100007D30(v0, (uint64_t)qword_1001531E8);
  if (qword_10014BF80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007D30(v0, (uint64_t)qword_100162F58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000CF9C8()
{
  sub_1000D1104(v0 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000CFA54()
{
  return type metadata accessor for AssetAttachment(0);
}

uint64_t type metadata accessor for AssetAttachment(uint64_t a1)
{
  return sub_100011F00(a1, qword_100153228);
}

uint64_t sub_1000CFA7C()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AssetAttachment.AssetType(uint64_t a1)
{
  return sub_100011F00(a1, qword_100153330);
}

char *sub_1000CFB44(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = *a2;
        *(void *)a1 = *a2;
        uint64_t v14 = v13;
        goto LABEL_18;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 4u:
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v8;
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = (char **)((char *)a2 + v9);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_100103818();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        }
        else
        {
          uint64_t v15 = v11[1];
          *(void *)uint64_t v10 = *v11;
          *((void *)v10 + 1) = v15;
          swift_bridgeObjectRetain();
        }
        goto LABEL_17;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v6 = sub_100103818();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        }
        else
        {
LABEL_16:
          uint64_t v16 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v16;
          swift_bridgeObjectRetain();
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for AssetAttachment.AssetType.FilePathType(uint64_t a1)
{
  return sub_100011F00(a1, qword_1001533D8);
}

void sub_1000CFECC(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_6;
    case 1u:
      uint64_t v2 = *a1;

      break;
    case 4u:
      swift_bridgeObjectRelease();
      a1 = (void **)((char *)a1 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48));
LABEL_6:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v3 = sub_100103818();
        uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
        v4(a1, v3);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

void *sub_1000CFFF8(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = *(void **)a2;
      *a1 = *(void *)a2;
      id v5 = v4;
      goto LABEL_15;
    case 2u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_8;
    case 3u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_8;
      }
      goto LABEL_11;
    case 4u:
      uint64_t v7 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)(a2 + v8);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_100103818();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      }
      else
      {
        uint64_t v13 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v13;
        swift_bridgeObjectRetain();
      }
      goto LABEL_14;
    default:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_8:
        uint64_t v6 = sub_100103818();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      }
      else
      {
LABEL_11:
        uint64_t v12 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
      }
LABEL_14:
      swift_storeEnumTagMultiPayload();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void **sub_1000D0310(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1000D1104((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        id v10 = v9;
        goto LABEL_16;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v5 = *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
        uint64_t v6 = (void **)((char *)a1 + v5);
        uint64_t v7 = (void **)((char *)a2 + v5);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v8 = sub_100103818();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        }
        else
        {
          *uint64_t v6 = *v7;
          v6[1] = v7[1];
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v4 = sub_100103818();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        }
        else
        {
LABEL_12:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *sub_1000D0674(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 2u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 3u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_7:
        uint64_t v7 = sub_100103818();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_11:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      goto LABEL_13;
    case 4u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
      uint64_t v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = sub_100103818();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1000D09C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000D1104((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 2u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 3u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v7 = sub_100103818();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_12:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        goto LABEL_14;
      case 4u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(sub_100007E0C(&qword_10014DA50) + 48);
        uint64_t v9 = (char *)a1 + v8;
        id v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_100103818();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000D0D38()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType.FilePathType(319);
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v5 = v3;
    uint64_t v6 = v3;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1000D0DE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100103818();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000D0EE8(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100103818();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_1000D0F78(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100103818();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000D1028(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1000D1104((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_100103818();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000D1104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1000D1164(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100103818();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1000D121C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000D1104((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100103818();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000D12F8()
{
  uint64_t result = sub_100103818();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000D138C(void *a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = [a1 filePath];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_100104B78();
    uint64_t v9 = v8;

    signed int v10 = [a1 index];
    id v11 = [a1 name];
    uint64_t v43 = v2;
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_100104B78();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v41 = v10;
    id v23 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    uint64_t v42 = v7;
    NSString v24 = sub_100104B38();
    swift_bridgeObjectRelease();
    id v25 = [v23 initWithString:v24];

    id v26 = [v25 lastPathComponent];
    sub_100104B78();

    id v27 = objc_allocWithZone((Class)NSString);
    NSString v28 = sub_100104B38();
    swift_bridgeObjectRelease();
    id v29 = [v27 initWithString:v28];

    id v30 = [v29 stringByDeletingPathExtension];
    uint64_t v31 = sub_100104B78();
    uint64_t v33 = v32;

    if (v15)
    {
      if (v13 == 0x6567616D69 && v15 == 0xE500000000000000 || (sub_1001057F8() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v4 = v42;
LABEL_14:
        uint64_t v34 = v4;
LABEL_17:
        uint64_t v36 = v41;
        v34[1] = v9;
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        type metadata accessor for AssetAttachment(0);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v36;
        sub_1000D18EC((uint64_t)v4, v37 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
        char v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC20JournalWidgetsSecure15AssetAttachment_fileNameID);
        uint64_t *v38 = v31;
        v38[1] = v33;
        return v37;
      }
      uint64_t v35 = v42;
      if (v13 == 0x6F65646976 && v15 == 0xE500000000000000 || (sub_1001057F8() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v4 = v35;
        goto LABEL_14;
      }
      if (v13 == 0x6F69647561 && v15 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();

LABEL_30:
        *uint64_t v4 = v35;
        goto LABEL_14;
      }
      char v40 = sub_1001057F8();

      if (v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {

      uint64_t v35 = v42;
    }
    uint64_t v34 = (uint64_t *)((char *)v4 + *(int *)(sub_100007E0C(&qword_10014DA50) + 48));
    *uint64_t v4 = v13;
    v4[1] = v15;
    *uint64_t v34 = v35;
    goto LABEL_17;
  }
  if (qword_10014C0D0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100103DB8();
  sub_100007D30(v16, (uint64_t)qword_1001531E8);
  id v17 = a1;
  uint64_t v18 = sub_100103D98();
  os_log_type_t v19 = sub_100104FF8();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    id v44 = v17;
    id v22 = v17;
    sub_1001052C8();
    *uint64_t v21 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "AssetAttachment.init error, missing filePath. AttachmentMO: %@", v20, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1000D18EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000D1954(char a1)
{
  unint64_t result = 0x6D614E6563616C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 2037672291;
      break;
    case 2:
      unint64_t result = 0x6C50664F65707974;
      break;
    case 3:
      unint64_t result = 0x6174537469736976;
      break;
    case 4:
      unint64_t result = 0x646E457469736976;
      break;
    case 5:
      unint64_t result = 0x4464657461657263;
      break;
    case 6:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 8:
      unint64_t result = 0x746144656C797473;
      break;
    case 9:
      unint64_t result = 0x446D65744970616DLL;
      break;
    case 10:
      unint64_t result = 0x6B726F577369;
      break;
    case 11:
      unint64_t result = 0x6E656469666E6F63;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D1B14(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_100153550);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_1000D446C();
  sub_100105968();
  LOBYTE(v11) = 0;
  sub_100105728();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_100105728();
    LOBYTE(v11) = 2;
    sub_100105728();
    uint64_t v9 = _s10VisitAssetC9VisitDataVMa(0);
    LOBYTE(v11) = 3;
    sub_100103978();
    sub_1000D4424(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    LOBYTE(v11) = 4;
    sub_100105768();
    LOBYTE(v11) = 5;
    sub_100105768();
    LOBYTE(v11) = 6;
    sub_100105748();
    LOBYTE(v11) = 7;
    sub_100105748();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 48));
    char v12 = 8;
    sub_10003B10C();
    sub_100105768();
    long long v11 = *(_OWORD *)(v3 + *(int *)(v9 + 52));
    char v12 = 9;
    sub_100105768();
    LOBYTE(v11) = 10;
    sub_100105738();
    LOBYTE(v11) = 11;
    sub_100105748();
    LOBYTE(v11) = 12;
    sub_100105748();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000D1F18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  signed int v10 = (char *)&v39 - v9;
  __chkstk_darwin(v8);
  char v12 = (char *)&v39 - v11;
  uint64_t v43 = sub_100007E0C(&qword_100153540);
  uint64_t v13 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  __chkstk_darwin(v46);
  id v44 = a1;
  uint64_t v45 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012154(a1, a1[3]);
  sub_1000D446C();
  uint64_t v42 = v15;
  sub_100105958();
  if (v2) {
    return sub_1000121EC((uint64_t)v44);
  }
  uint64_t v17 = (uint64_t)v12;
  uint64_t v40 = v13;
  LOBYTE(v47) = 0;
  uint64_t v18 = sub_100105678();
  os_log_type_t v19 = v46;
  uint64_t v20 = v45;
  *uint64_t v45 = v18;
  v20[1] = v21;
  LOBYTE(v47) = 1;
  v20[2] = sub_100105678();
  v20[3] = v22;
  LOBYTE(v47) = 2;
  v20[4] = sub_100105678();
  v20[5] = v23;
  sub_100103978();
  LOBYTE(v47) = 3;
  uint64_t v39 = sub_1000D4424(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001056B8();
  sub_100012290(v17, (uint64_t)v20 + v19[7]);
  LOBYTE(v47) = 4;
  sub_1001056B8();
  sub_100012290((uint64_t)v10, (uint64_t)v20 + v19[8]);
  LOBYTE(v47) = 5;
  sub_1001056B8();
  sub_100012290((uint64_t)v7, (uint64_t)v20 + v19[9]);
  LOBYTE(v47) = 6;
  uint64_t v24 = sub_100105698();
  id v25 = (char *)v20 + v19[10];
  *(void *)id v25 = v24;
  v25[8] = v26 & 1;
  LOBYTE(v47) = 7;
  uint64_t v27 = sub_100105698();
  NSString v28 = (char *)v20 + v19[11];
  *(void *)NSString v28 = v27;
  v28[8] = v29 & 1;
  char v48 = 8;
  sub_10003B0B8();
  sub_1001056B8();
  *(_OWORD *)((char *)v20 + v19[12]) = v47;
  char v48 = 9;
  sub_1001056B8();
  *(_OWORD *)((char *)v45 + v46[13]) = v47;
  LOBYTE(v47) = 10;
  *((unsigned char *)v45 + v46[14]) = sub_100105688();
  LOBYTE(v47) = 11;
  uint64_t v30 = sub_100105698();
  uint64_t v31 = (char *)v45 + v46[15];
  *(void *)uint64_t v31 = v30;
  v31[8] = v32 & 1;
  LOBYTE(v47) = 12;
  uint64_t v33 = sub_100105698();
  char v35 = v34;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
  uint64_t v36 = (uint64_t)v45;
  uint64_t v37 = (char *)v45 + v46[16];
  *(void *)uint64_t v37 = v33;
  v37[8] = v35 & 1;
  sub_100071580(v36, v41);
  sub_1000121EC((uint64_t)v44);
  return sub_1000102B0(v36);
}

unint64_t sub_1000D26DC()
{
  return sub_1000D1954(*v0);
}

uint64_t sub_1000D26E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D5B90(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000D270C(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1000D2718(uint64_t a1)
{
  unint64_t v2 = sub_1000D446C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D2754(uint64_t a1)
{
  unint64_t v2 = sub_1000D446C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D2790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D1F18(a1, a2);
}

uint64_t sub_1000D27A8(void *a1)
{
  return sub_1000D1B14(a1);
}

uint64_t sub_1000D27C4()
{
  uint64_t v1 = sub_100007E0C(&qword_100150400);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10VisitAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000F7FAC((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_100012510((uint64_t)v3, &qword_100150400);
    return 0;
  }
  sub_1000B4964((uint64_t)v3, (uint64_t)v7);
  sub_100007E0C(&qword_10014EF08);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = *(void *)v7;
  *(_OWORD *)(inited + 16) = xmmword_100108250;
  uint64_t v9 = *((void *)v7 + 3);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v7 + 8);
  *(void *)(inited + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10009063C(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100007E0C(&qword_10014D858);
  swift_arrayDestroy();
  sub_1000102B0((uint64_t)v7);
  return v10;
}

uint64_t sub_1000D29EC()
{
  return swift_release();
}

id sub_1000D29FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VisitAssetCMa(0);
  [super dealloc];
}

uint64_t sub_1000D2A44()
{
  return _s10VisitAssetCMa(0);
}

uint64_t _s10VisitAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100153438);
}

uint64_t sub_1000D2A6C()
{
  return swift_updateClassMetadata2();
}

void *sub_1000D2AB0(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *((void *)a2 + 5);
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = &a2[v10];
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v12 = sub_100103978();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)v4 + v17;
    os_log_type_t v19 = &a2[v17];
    if (v14(&a2[v17], 1, v12))
    {
      uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = &a2[v21];
    if (v14(&a2[v21], 1, v12))
    {
      uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v22, v23, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    }
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v4 + v25;
    NSString v28 = &a2[v25];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    char v29 = (char *)v4 + v26;
    uint64_t v30 = &a2[v26];
    *(void *)char v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[12];
    char v32 = (char *)v4 + v31;
    uint64_t v33 = &a2[v31];
    unint64_t v34 = *((void *)v33 + 1);
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)char v32 = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v35 = *(void *)v33;
      sub_10001030C(*(void *)v33, *((void *)v33 + 1));
      *(void *)char v32 = v35;
      *((void *)v32 + 1) = v34;
    }
    uint64_t v36 = a3[13];
    uint64_t v37 = (char *)v4 + v36;
    char v38 = &a2[v36];
    unint64_t v39 = *((void *)v38 + 1);
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = *(void *)v38;
      sub_10001030C(*(void *)v38, *((void *)v38 + 1));
      *(void *)uint64_t v37 = v40;
      *((void *)v37 + 1) = v39;
    }
    uint64_t v41 = a3[15];
    *((unsigned char *)v4 + a3[14]) = a2[a3[14]];
    uint64_t v42 = (char *)v4 + v41;
    uint64_t v43 = &a2[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = a3[16];
    uint64_t v45 = (char *)v4 + v44;
    uint64_t v46 = &a2[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
  }
  return v4;
}

uint64_t sub_1000D2E90(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_100103978();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[8];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[12]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    uint64_t result = sub_100010378(*v11, v12);
  }
  uint64_t v13 = (uint64_t *)(a1 + a2[13]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15)
  {
    uint64_t v15 = *v13;
    return sub_100010378(v15, v14);
  }
  return result;
}

void *sub_1000D3044(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = &a2[v8];
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  os_log_type_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[12];
  char v29 = (char *)a1 + v28;
  uint64_t v30 = &a2[v28];
  unint64_t v31 = *((void *)v30 + 1);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)char v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_10001030C(*(void *)v30, *((void *)v30 + 1));
    *(void *)char v29 = v32;
    *((void *)v29 + 1) = v31;
  }
  uint64_t v33 = a3[13];
  unint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = &a2[v33];
  unint64_t v36 = *((void *)v35 + 1);
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    sub_10001030C(*(void *)v35, *((void *)v35 + 1));
    *(void *)unint64_t v34 = v37;
    *((void *)v34 + 1) = v36;
  }
  uint64_t v38 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  unint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = &a2[v38];
  *(void *)unint64_t v39 = *(void *)v40;
  v39[8] = v40[8];
  uint64_t v41 = a3[16];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = &a2[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  return a1;
}

char *sub_1000D33CC(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[10];
  uint64_t v28 = &a1[v27];
  char v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[12];
  unint64_t v36 = (uint64_t *)&a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  unint64_t v38 = *(void *)((char *)a2 + v35 + 8);
  if (*(void *)&a1[v35 + 8] >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v39 = *v37;
      sub_10001030C(v39, v38);
      *unint64_t v36 = v39;
      v36[1] = v38;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v38 >> 60 == 15)
  {
    sub_10003AB4C((uint64_t)v36);
LABEL_24:
    *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    goto LABEL_26;
  }
  uint64_t v40 = *v37;
  sub_10001030C(v40, v38);
  uint64_t v41 = *v36;
  unint64_t v42 = v36[1];
  *unint64_t v36 = v40;
  v36[1] = v38;
  sub_100010378(v41, v42);
LABEL_26:
  uint64_t v43 = a3[13];
  uint64_t v44 = (uint64_t *)&a1[v43];
  uint64_t v45 = (void *)((char *)a2 + v43);
  unint64_t v46 = *(void *)((char *)a2 + v43 + 8);
  if (*(void *)&a1[v43 + 8] >> 60 != 15)
  {
    if (v46 >> 60 != 15)
    {
      uint64_t v48 = *v45;
      sub_10001030C(v48, v46);
      uint64_t v49 = *v44;
      unint64_t v50 = v44[1];
      *uint64_t v44 = v48;
      v44[1] = v46;
      sub_100010378(v49, v50);
      goto LABEL_33;
    }
    sub_10003AB4C((uint64_t)v44);
    goto LABEL_31;
  }
  if (v46 >> 60 == 15)
  {
LABEL_31:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_33;
  }
  uint64_t v47 = *v45;
  sub_10001030C(v47, v46);
  *uint64_t v44 = v47;
  v44[1] = v46;
LABEL_33:
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v51 = a3[15];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = a3[16];
  long long v56 = &a1[v55];
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = *(void *)v57;
  v56[8] = v57[8];
  *(void *)long long v56 = v58;
  return a1;
}

_OWORD *sub_1000D3920(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  a1[2] = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_100103978();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if (v12(&a2[v18], 1, v10))
  {
    uint64_t v21 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  int v24 = (char *)a1 + v22;
  int v25 = &a2[v22];
  *(void *)int v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = (char *)a1 + v23;
  uint64_t v27 = &a2[v23];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)&a2[v28];
  uint64_t v29 = a3[15];
  *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = a3[16];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  v33[8] = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  return a1;
}

char *sub_1000D3C14(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  int v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[9];
  int v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v14(&a1[v24], 1, v12);
  int v28 = v14(v26, 1, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
LABEL_18:
    uint64_t v29 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v25, v26, v12);
LABEL_19:
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = &a1[v30];
  uint64_t v33 = (char *)a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = &a1[v31];
  uint64_t v35 = (char *)a2 + v31;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = a3[12];
  uint64_t v37 = (uint64_t)&a1[v36];
  unint64_t v38 = (char *)a2 + v36;
  unint64_t v39 = *(void *)&a1[v36 + 8];
  if (v39 >> 60 == 15)
  {
LABEL_22:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    goto LABEL_24;
  }
  unint64_t v40 = *((void *)v38 + 1);
  if (v40 >> 60 == 15)
  {
    sub_10003AB4C(v37);
    goto LABEL_22;
  }
  uint64_t v41 = *(void *)v37;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v40;
  sub_100010378(v41, v39);
LABEL_24:
  uint64_t v42 = a3[13];
  uint64_t v43 = (uint64_t *)&a1[v42];
  uint64_t v44 = (void *)((char *)a2 + v42);
  unint64_t v45 = *(void *)&a1[v42 + 8];
  if (v45 >> 60 != 15)
  {
    unint64_t v46 = v44[1];
    if (v46 >> 60 != 15)
    {
      uint64_t v47 = *v43;
      uint64_t *v43 = *v44;
      v43[1] = v46;
      sub_100010378(v47, v45);
      goto LABEL_29;
    }
    sub_10003AB4C((uint64_t)v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
LABEL_29:
  uint64_t v48 = a3[15];
  a1[a3[14]] = *((unsigned char *)a2 + a3[14]);
  uint64_t v49 = &a1[v48];
  unint64_t v50 = (char *)a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = a3[16];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = (char *)a2 + v51;
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v53[8];
  return a1;
}

uint64_t sub_1000D40D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D40E4);
}

uint64_t sub_1000D40E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000D41A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D41B8);
}

uint64_t sub_1000D41B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VisitAssetC9VisitDataVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_1001534A0);
}

void sub_1000D4284()
{
  sub_100011FD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000D4348()
{
  return swift_retain();
}

uint64_t sub_1000D4358(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling10VisitAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000D4370()
{
  return sub_1000D27C4();
}

uint64_t sub_1000D4394()
{
  return sub_1000D4424(&qword_1001503D8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_1000D43DC()
{
  return sub_1000D4424(&qword_1001503F0, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
}

uint64_t sub_1000D4424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D446C()
{
  unint64_t result = qword_100153548;
  if (!qword_100153548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153548);
  }
  return result;
}

uint64_t sub_1000D44C0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_10001030C(a2, a3);
      uint64_t v10 = (char *)sub_100103538();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_100103558();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_100103548();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1000D4724);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100010378(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_100103538();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_100103558();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_100103548();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1000D4734(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1000D44C0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1000D480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_100103538();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_100103558();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100103548();
  sub_1000D44C0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1000D48C4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1000D4B2CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_10001030C(a3, a4);
                  sub_10001030C(a1, a2);
                  char v17 = sub_1000D480C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100010378(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_10001030C(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1000D480C(v21, v22, v20, a3, a4);
                  sub_100010378(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_10001030C(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_10001030C(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1000D4734(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100010378(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1000D4B5C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100103978();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_100007E0C((uint64_t *)&unk_100151970);
  uint64_t v7 = __chkstk_darwin(v171);
  uint64_t v9 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v169 = (uint64_t)&v151 - v11;
  __chkstk_darwin(v10);
  uint64_t v170 = (uint64_t)&v151 - v12;
  uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v167 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v151 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v168 = (uint64_t)&v151 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  int v23 = (char *)&v151 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v25 = __chkstk_darwin(v24);
  char v27 = (char *)&v151 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v29 = __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  uint64_t v35 = (char *)&v151 - v34;
  uint64_t v36 = v31[1];
  uint64_t v37 = a2[1];
  if (!v36)
  {
    if (v37) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v37) {
    return 0;
  }
  if (*v31 == *a2 && v36 == v37) {
    goto LABEL_8;
  }
  uint64_t v165 = v18;
  uint64_t v166 = v30;
  uint64_t v163 = v27;
  uint64_t v164 = v23;
  unint64_t v38 = v9;
  uint64_t v39 = v4;
  uint64_t v40 = v3;
  uint64_t v41 = v31;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  char v44 = sub_1001057F8();
  uint64_t v18 = v165;
  uint64_t v30 = v166;
  uint64_t v33 = v43;
  uint64_t v32 = v42;
  uint64_t v31 = v41;
  uint64_t v3 = v40;
  uint64_t v4 = v39;
  uint64_t v9 = v38;
  char v27 = v163;
  int v23 = v164;
  char v45 = v44;
  uint64_t result = 0;
  if (v45)
  {
LABEL_8:
    uint64_t v47 = v31[3];
    uint64_t v48 = a2[3];
    if (v47)
    {
      if (!v48) {
        return 0;
      }
      if (v31[2] != a2[2] || v47 != v48)
      {
        uint64_t v165 = v18;
        uint64_t v166 = v30;
        uint64_t v163 = v27;
        uint64_t v164 = v23;
        uint64_t v49 = v9;
        uint64_t v50 = v4;
        uint64_t v51 = v3;
        uint64_t v52 = v31;
        uint64_t v53 = v32;
        uint64_t v54 = v33;
        char v55 = sub_1001057F8();
        uint64_t v18 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v54;
        uint64_t v32 = v53;
        uint64_t v31 = v52;
        uint64_t v3 = v51;
        uint64_t v4 = v50;
        uint64_t v9 = v49;
        char v27 = v163;
        int v23 = v164;
        char v56 = v55;
        uint64_t result = 0;
        if ((v56 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v48)
    {
      return 0;
    }
    uint64_t v57 = v31[5];
    uint64_t v58 = a2[5];
    if (v57)
    {
      if (!v58) {
        return 0;
      }
      if (v31[4] != a2[4] || v57 != v58)
      {
        uint64_t v165 = v18;
        uint64_t v166 = v30;
        uint64_t v163 = v27;
        uint64_t v164 = v23;
        uint64_t v59 = v9;
        uint64_t v60 = v4;
        uint64_t v61 = v3;
        uint64_t v62 = v31;
        uint64_t v63 = v32;
        uint64_t v64 = v33;
        char v65 = sub_1001057F8();
        uint64_t v18 = v165;
        uint64_t v30 = v166;
        uint64_t v33 = v64;
        uint64_t v32 = v63;
        uint64_t v31 = v62;
        uint64_t v3 = v61;
        uint64_t v4 = v60;
        uint64_t v9 = v59;
        char v27 = v163;
        int v23 = v164;
        char v66 = v65;
        uint64_t result = 0;
        if ((v66 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v58)
    {
      return 0;
    }
    uint64_t v154 = v6;
    uint64_t v155 = v33;
    uint64_t v158 = v32;
    uint64_t v153 = v9;
    uint64_t v67 = v4;
    uint64_t v68 = v3;
    uint64_t v69 = v31;
    uint64_t v70 = v30;
    uint64_t v71 = _s10VisitAssetC9VisitDataVMa(0);
    uint64_t v72 = *(int *)(v71 + 28);
    uint64_t v159 = v69;
    uint64_t v73 = (uint64_t)v69 + v72;
    uint64_t v74 = v68;
    sub_10002ACE4(v73, (uint64_t)v35);
    uint64_t v157 = (int *)v71;
    uint64_t v75 = *(int *)(v71 + 28);
    unint64_t v160 = a2;
    sub_10002ACE4((uint64_t)a2 + v75, v70);
    uint64_t v76 = v170;
    uint64_t v77 = v170 + *(int *)(v171 + 48);
    uint64_t v163 = v35;
    sub_10002ACE4((uint64_t)v35, v170);
    uint64_t v164 = (char *)v77;
    sub_10002ACE4(v70, v77);
    uint64_t v161 = v67;
    uint64_t v162 = v74;
    uint64_t v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    unsigned int v79 = v78(v76, 1, v74);
    uint64_t v156 = v67 + 48;
    uint64_t v152 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v78;
    if (v79 == 1)
    {
      uint64_t v165 = v18;
      sub_100012510(v70, (uint64_t *)&unk_100151950);
      sub_100012510((uint64_t)v163, (uint64_t *)&unk_100151950);
      if (v78((uint64_t)v164, 1, v162) == 1)
      {
        sub_100012510(v76, (uint64_t *)&unk_100151950);
        uint64_t v18 = v165;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v166 = v70;
      uint64_t v80 = v155;
      sub_10002ACE4(v76, v155);
      uint64_t v81 = v76;
      if (v78((uint64_t)v164, 1, v162) != 1)
      {
        uint64_t v84 = v161;
        uint64_t v83 = v162;
        uint64_t v85 = v154;
        (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v154, v164, v162);
        sub_1000D4424(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
        char v86 = sub_100104A98();
        char v87 = *(void (**)(char *, uint64_t))(v84 + 8);
        v87(v85, v83);
        sub_100012510(v166, (uint64_t *)&unk_100151950);
        sub_100012510((uint64_t)v163, (uint64_t *)&unk_100151950);
        v87((char *)v80, v83);
        sub_100012510(v81, (uint64_t *)&unk_100151950);
        if ((v86 & 1) == 0) {
          return 0;
        }
LABEL_29:
        uint64_t v164 = v23;
        uint64_t v88 = v157;
        sub_10002ACE4((uint64_t)v159 + v157[8], (uint64_t)v27);
        uint64_t v89 = v158;
        sub_10002ACE4((uint64_t)v160 + v88[8], v158);
        uint64_t v90 = v169;
        uint64_t v91 = v169 + *(int *)(v171 + 48);
        sub_10002ACE4((uint64_t)v27, v169);
        sub_10002ACE4(v89, v91);
        uint64_t v92 = v152;
        if (v152(v90, 1, v162) == 1)
        {
          sub_100012510(v89, (uint64_t *)&unk_100151950);
          sub_100012510((uint64_t)v27, (uint64_t *)&unk_100151950);
          int v93 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v93 == 1)
          {
            sub_100012510(v90, (uint64_t *)&unk_100151950);
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v95 = (uint64_t)v164;
          sub_10002ACE4(v90, (uint64_t)v164);
          int v96 = v92(v91, 1, v162);
          uint64_t v94 = (uint64_t)v153;
          if (v96 != 1)
          {
            uint64_t v97 = v161;
            uint64_t v98 = v162;
            uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 32);
            uint64_t v163 = v27;
            uint64_t v100 = v154;
            v99(v154, v91, v162);
            sub_1000D4424(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
            char v101 = sub_100104A98();
            uint64_t v102 = v18;
            uint64_t v103 = *(void (**)(char *, uint64_t))(v97 + 8);
            v103(v100, v98);
            sub_100012510(v158, (uint64_t *)&unk_100151950);
            sub_100012510((uint64_t)v163, (uint64_t *)&unk_100151950);
            v103((char *)v95, v98);
            uint64_t v18 = v102;
            sub_100012510(v169, (uint64_t *)&unk_100151950);
            if ((v101 & 1) == 0) {
              return 0;
            }
LABEL_36:
            uint64_t v104 = v157;
            uint64_t v105 = v168;
            sub_10002ACE4((uint64_t)v159 + v157[9], v168);
            sub_10002ACE4((uint64_t)v160 + v104[9], (uint64_t)v18);
            uint64_t v106 = v94 + *(int *)(v171 + 48);
            sub_10002ACE4(v105, v94);
            sub_10002ACE4((uint64_t)v18, v106);
            if (v92(v94, 1, v162) == 1)
            {
              sub_100012510((uint64_t)v18, (uint64_t *)&unk_100151950);
              sub_100012510(v168, (uint64_t *)&unk_100151950);
              if (v92(v106, 1, v162) == 1)
              {
                sub_100012510(v94, (uint64_t *)&unk_100151950);
LABEL_43:
                uint64_t v114 = v104[10];
                char v116 = v159;
                uint64_t v115 = v160;
                uint64_t v117 = (double *)((char *)v159 + v114);
                char v118 = *((unsigned char *)v159 + v114 + 8);
                uint64_t v119 = (double *)((char *)v160 + v114);
                int v120 = *((unsigned __int8 *)v160 + v114 + 8);
                if (v118)
                {
                  if (!v120) {
                    return 0;
                  }
                }
                else
                {
                  if (*v117 != *v119) {
                    LOBYTE(v120) = 1;
                  }
                  if (v120) {
                    return 0;
                  }
                }
                uint64_t v121 = v104[11];
                uint64_t v122 = (double *)((char *)v159 + v121);
                char v123 = *((unsigned char *)v159 + v121 + 8);
                uint64_t v124 = (double *)((char *)v160 + v121);
                int v125 = *((unsigned __int8 *)v160 + v121 + 8);
                if (v123)
                {
                  if (!v125) {
                    return 0;
                  }
                }
                else
                {
                  if (*v122 != *v124) {
                    LOBYTE(v125) = 1;
                  }
                  if (v125) {
                    return 0;
                  }
                }
                uint64_t v126 = v104;
                uint64_t v127 = v104[12];
                uint64_t v128 = *(void *)((char *)v159 + v127);
                unint64_t v129 = *(void *)((char *)v159 + v127 + 8);
                uint64_t v130 = (void *)((char *)v160 + v127);
                uint64_t v131 = *v130;
                unint64_t v132 = v130[1];
                if (v129 >> 60 == 15)
                {
                  if (v132 >> 60 != 15) {
                    goto LABEL_64;
                  }
                  goto LABEL_60;
                }
                if (v132 >> 60 == 15) {
                  goto LABEL_64;
                }
                sub_1000D58E0(v128, v129);
                sub_1000D58E0(v131, v132);
                char v133 = sub_1000D48C4(v128, v129, v131, v132);
                sub_100010364(v131, v132);
                sub_100010364(v128, v129);
                char v116 = v159;
                uint64_t v115 = v160;
                if (v133)
                {
LABEL_60:
                  uint64_t v134 = v126[13];
                  uint64_t v128 = *(void *)((char *)v116 + v134);
                  unint64_t v129 = *(void *)((char *)v116 + v134 + 8);
                  unsigned int v135 = (void *)((char *)v115 + v134);
                  uint64_t v131 = *v135;
                  unint64_t v132 = v135[1];
                  if (v129 >> 60 == 15)
                  {
                    if (v132 >> 60 == 15) {
                      goto LABEL_68;
                    }
                  }
                  else if (v132 >> 60 != 15)
                  {
                    sub_1000D58E0(v128, v129);
                    sub_1000D58E0(v131, v132);
                    char v136 = sub_1000D48C4(v128, v129, v131, v132);
                    sub_100010364(v131, v132);
                    sub_100010364(v128, v129);
                    char v116 = v159;
                    uint64_t v115 = v160;
                    if ((v136 & 1) == 0) {
                      return 0;
                    }
LABEL_68:
                    uint64_t v137 = v126[14];
                    int v138 = *((unsigned __int8 *)v116 + v137);
                    int v139 = *((unsigned __int8 *)v115 + v137);
                    if (v138 == 2)
                    {
                      if (v139 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      uint64_t result = 0;
                      BOOL v140 = (v138 & 1) == 0;
                      if (v139 == 2 || ((v140 ^ v139) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v141 = v126[15];
                    uint64_t v142 = (double *)((char *)v116 + v141);
                    char v143 = *((unsigned char *)v116 + v141 + 8);
                    uint64_t v144 = (double *)((char *)v115 + v141);
                    int v145 = *((unsigned __int8 *)v115 + v141 + 8);
                    if (v143)
                    {
                      if (!v145) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v142 != *v144) {
                        LOBYTE(v145) = 1;
                      }
                      if (v145) {
                        return 0;
                      }
                    }
                    uint64_t v146 = v157[16];
                    v147 = (double *)((char *)v159 + v146);
                    char v148 = *((unsigned char *)v159 + v146 + 8);
                    uint64_t v149 = (double *)((char *)v160 + v146);
                    char v150 = *((unsigned char *)v160 + v146 + 8);
                    if (v148)
                    {
                      if ((v150 & 1) == 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v147 != *v149) {
                        char v150 = 1;
                      }
                      if (v150) {
                        return 0;
                      }
                    }
                    return 1;
                  }
LABEL_64:
                  sub_1000D58E0(v128, v129);
                  sub_1000D58E0(v131, v132);
                  sub_100010364(v128, v129);
                  sub_100010364(v131, v132);
                }
                return 0;
              }
            }
            else
            {
              sub_10002ACE4(v94, v167);
              if (v92(v106, 1, v162) != 1)
              {
                uint64_t v107 = v161;
                uint64_t v108 = v162;
                int v109 = v154;
                (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v154, v106, v162);
                sub_1000D4424(&qword_10014CE78, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v110 = v94;
                uint64_t v111 = v167;
                char v112 = sub_100104A98();
                uint64_t v113 = *(void (**)(char *, uint64_t))(v107 + 8);
                v113(v109, v108);
                sub_100012510((uint64_t)v18, (uint64_t *)&unk_100151950);
                sub_100012510(v168, (uint64_t *)&unk_100151950);
                v113((char *)v111, v108);
                sub_100012510(v110, (uint64_t *)&unk_100151950);
                if ((v112 & 1) == 0) {
                  return 0;
                }
                goto LABEL_43;
              }
              sub_100012510((uint64_t)v18, (uint64_t *)&unk_100151950);
              sub_100012510(v168, (uint64_t *)&unk_100151950);
              (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v167, v162);
            }
            sub_100012510(v94, (uint64_t *)&unk_100151970);
            return 0;
          }
          sub_100012510(v158, (uint64_t *)&unk_100151950);
          sub_100012510((uint64_t)v27, (uint64_t *)&unk_100151950);
          (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v95, v162);
        }
        sub_100012510(v90, (uint64_t *)&unk_100151970);
        return 0;
      }
      uint64_t v82 = v161;
      sub_100012510(v166, (uint64_t *)&unk_100151950);
      sub_100012510((uint64_t)v163, (uint64_t *)&unk_100151950);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v162);
    }
    sub_100012510(v76, (uint64_t *)&unk_100151970);
    return 0;
  }
  return result;
}

uint64_t sub_1000D58E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10001030C(a1, a2);
  }
  return a1;
}

uint64_t _s10VisitAssetC9VisitDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10VisitAssetC9VisitDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D5A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VisitAssetC9VisitDataV10CodingKeysOMa()
{
  return &_s10VisitAssetC9VisitDataV10CodingKeysON;
}

unint64_t sub_1000D5A8C()
{
  unint64_t result = qword_100153558;
  if (!qword_100153558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153558);
  }
  return result;
}

unint64_t sub_1000D5AE4()
{
  unint64_t result = qword_100153560;
  if (!qword_100153560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153560);
  }
  return result;
}

unint64_t sub_1000D5B3C()
{
  unint64_t result = qword_100153568;
  if (!qword_100153568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153568);
  }
  return result;
}

uint64_t sub_1000D5B90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6563616C70 && a2 == 0xE900000000000065;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C50664F65707974 && a2 == 0xEB00000000656361 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174537469736976 && a2 == 0xEE00656D69547472 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E457469736976 && a2 == 0xEC000000656D6954 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746144656C797473 && a2 == 0xE900000000000061 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446D65744970616DLL && a2 == 0xEB00000000617461 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B726F577369 && a2 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEF6C6576654C6563 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100114D70)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

__n128 initializeBufferWithCopyOfBuffer for WidgetLabelStyle.Appearance(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLabelStyle()
{
  return &type metadata for WidgetLabelStyle;
}

uint64_t sub_1000D619C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D61B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v23[0] = a2;
  v23[1] = a1;
  uint64_t v26 = a5;
  uint64_t v27 = sub_100007E0C(&qword_100153570);
  __chkstk_darwin(v27);
  int v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100007E0C(&qword_100153578);
  __chkstk_darwin(v25);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_100153580);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007E0C(&qword_100153588);
  __chkstk_darwin(v24);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100104228();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    if (a4 == 1)
    {
      *(void *)int v8 = v23[0];
      *((void *)v8 + 1) = 0;
      v8[16] = 0;
      uint64_t v20 = sub_100007E0C(&qword_100153590);
      sub_1000D6694(0, (uint64_t)&v8[*(int *)(v20 + 44)], a3);
      sub_100010808((uint64_t)v8, (uint64_t)v10, &qword_100153570);
      swift_storeEnumTagMultiPayload();
      sub_1000D7040();
      sub_1000D70EC();
      sub_1001041B8();
      return sub_100012510((uint64_t)v8, &qword_100153570);
    }
    else
    {
      sub_100104238();
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
      swift_storeEnumTagMultiPayload();
      sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
      sub_1000D70EC();
      sub_1001041B8();
      sub_100010808((uint64_t)v15, (uint64_t)v10, &qword_100153588);
      swift_storeEnumTagMultiPayload();
      sub_1000D7040();
      sub_1001041B8();
      sub_100012510((uint64_t)v15, &qword_100153588);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  else
  {
    *(void *)int v8 = v23[0];
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v22 = sub_100007E0C(&qword_100153590);
    sub_1000D6694(1, (uint64_t)&v8[*(int *)(v22 + 44)], a3);
    sub_100010808((uint64_t)v8, (uint64_t)v13, &qword_100153570);
    swift_storeEnumTagMultiPayload();
    sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_1000D70EC();
    sub_1001041B8();
    sub_100010808((uint64_t)v15, (uint64_t)v10, &qword_100153588);
    swift_storeEnumTagMultiPayload();
    sub_1000D7040();
    sub_1001041B8();
    sub_100012510((uint64_t)v15, &qword_100153588);
    return sub_100012510((uint64_t)v8, &qword_100153570);
  }
}

uint64_t sub_1000D6694@<X0>(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v61 = a2;
  uint64_t v57 = sub_100007E0C(&qword_1001535B0);
  __chkstk_darwin(v57);
  uint64_t v58 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_1001535B8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v60 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v46 - v9;
  uint64_t v10 = sub_100104248();
  uint64_t v54 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007E0C(&qword_1001535C0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100104228();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007E0C(&qword_1001535C8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v46 - v23;
  int v56 = a1;
  unint64_t v46 = v12;
  if (a1)
  {
    sub_100104238();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v19, v16);
    swift_storeEnumTagMultiPayload();
    sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_1000D7148(&qword_1001535D0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    uint64_t v25 = (uint64_t)v24;
    sub_1001041B8();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v27 = v17;
    uint64_t v28 = v19;
    v26(v19, v16);
    uint64_t v29 = v54;
  }
  else
  {
    uint64_t v53 = v17;
    uint64_t v28 = v19;
    sub_100104258();
    uint64_t v30 = v54;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v15, v12, v10);
    swift_storeEnumTagMultiPayload();
    sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_1000D7148(&qword_1001535D0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    uint64_t v31 = v12;
    uint64_t v25 = (uint64_t)v24;
    sub_1001041B8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v10);
    uint64_t v29 = v30;
    uint64_t v27 = v53;
  }
  uint64_t v32 = v10;
  if (a3 == INFINITY)
  {
    long long v62 = xmmword_10010F160;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    char v66 = 0;
LABEL_6:
    sub_100007E0C(&qword_1001535D8);
    sub_1000D7190();
    sub_1001041B8();
    uint64_t v54 = v67;
    uint64_t v53 = v68;
    uint64_t v52 = v69;
    uint64_t v51 = v70;
    uint64_t v50 = v71;
    uint64_t v49 = v72;
    uint64_t v48 = v73;
    uint64_t v47 = v74;
    char v33 = v75;
    goto LABEL_9;
  }
  if (a3 != 0.0)
  {
    sub_100104718();
    sub_100103ED8();
    long long v62 = xmmword_10010F160;
    *(void *)&long long v63 = v76;
    *((void *)&v63 + 1) = v77;
    *(void *)&long long v64 = v78;
    *((void *)&v64 + 1) = v79;
    long long v65 = v80;
    char v66 = 1;
    goto LABEL_6;
  }
  uint64_t v54 = 0;
  uint64_t v53 = 0;
  uint64_t v52 = 0;
  uint64_t v51 = 0;
  uint64_t v50 = 0;
  uint64_t v49 = 0;
  uint64_t v48 = 0;
  uint64_t v47 = 0;
  char v33 = -1;
LABEL_9:
  if (v56)
  {
    uint64_t v34 = v46;
    sub_100104258();
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v58, v34, v10);
    swift_storeEnumTagMultiPayload();
    sub_1000D7148(&qword_1001535D0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    uint64_t v35 = (uint64_t)v59;
    sub_1001041B8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v32);
  }
  else
  {
    sub_100104238();
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v58, v28, v16);
    swift_storeEnumTagMultiPayload();
    sub_1000D7148(&qword_1001535D0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    uint64_t v35 = (uint64_t)v59;
    sub_1001041B8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v16);
  }
  uint64_t v36 = v55;
  sub_100010808(v25, v55, &qword_1001535C8);
  uint64_t v37 = v60;
  sub_100010808(v35, v60, &qword_1001535B8);
  uint64_t v38 = v61;
  sub_100010808(v36, v61, &qword_1001535C8);
  uint64_t v39 = sub_100007E0C(&qword_1001535E8);
  uint64_t v40 = v38 + *(int *)(v39 + 48);
  uint64_t v41 = v53;
  *(void *)uint64_t v40 = v54;
  *(void *)(v40 + 8) = v41;
  uint64_t v42 = v51;
  *(void *)(v40 + 16) = v52;
  *(void *)(v40 + 24) = v42;
  uint64_t v43 = v49;
  *(void *)(v40 + 32) = v50;
  *(void *)(v40 + 40) = v43;
  uint64_t v44 = v47;
  *(void *)(v40 + 48) = v48;
  *(void *)(v40 + 56) = v44;
  *(unsigned char *)(v40 + 64) = v33;
  sub_100010808(v37, v38 + *(int *)(v39 + 64), &qword_1001535B8);
  sub_100012510(v35, &qword_1001535B8);
  sub_100012510(v25, &qword_1001535C8);
  sub_100012510(v37, &qword_1001535B8);
  return sub_100012510(v36, &qword_1001535C8);
}

uint64_t sub_1000D7034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D61B8(a1, *(void *)v2, *(double *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

unint64_t sub_1000D7040()
{
  unint64_t result = qword_100153598;
  if (!qword_100153598)
  {
    sub_100007F30(&qword_100153588);
    sub_1000D7148(&qword_1001535A0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_1000D70EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153598);
  }
  return result;
}

unint64_t sub_1000D70EC()
{
  unint64_t result = qword_1001535A8;
  if (!qword_1001535A8)
  {
    sub_100007F30(&qword_100153570);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001535A8);
  }
  return result;
}

uint64_t sub_1000D7148(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D7190()
{
  unint64_t result = qword_1001535E0;
  if (!qword_1001535E0)
  {
    sub_100007F30(&qword_1001535D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001535E0);
  }
  return result;
}

uint64_t _s20JournalWidgetsSecure16WidgetLabelStyleV10AppearanceOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s20JournalWidgetsSecure16WidgetLabelStyleV10AppearanceOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000D7290(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000D72A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLabelStyle.Appearance()
{
  return &type metadata for WidgetLabelStyle.Appearance;
}

unint64_t sub_1000D72D4()
{
  unint64_t result = qword_1001535F0;
  if (!qword_1001535F0)
  {
    sub_100007F30(&qword_1001535F8);
    sub_1000D7040();
    sub_1000D70EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001535F0);
  }
  return result;
}

id sub_1000D7350(uint64_t a1)
{
  return sub_1000D7378(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_1001631C8);
}

id sub_1000D7364(uint64_t a1)
{
  return sub_1000D7378(a1, (SEL *)&selRef_systemIndigoColor, &qword_1001631D0);
}

id sub_1000D7378(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

void sub_1000D73BC()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  id v1 = sub_100071858(UIFontWeightBold);

  qword_1001631D8 = (uint64_t)v1;
}

void sub_1000D7428()
{
  qword_1001631E0 = 0x4034000000000000;
}

void sub_1000D7438()
{
  qword_1001631E8 = 0x4034000000000000;
}

void sub_1000D7448()
{
  qword_1001631F0 = 0x4020000000000000;
}

void sub_1000D7458()
{
  qword_1001631F8 = 0x4010000000000000;
}

double sub_1000D7468()
{
  if (qword_10014C108 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1001631F8 * 0.5;
  *(double *)&qword_100163200 = *(double *)&qword_1001631F8 * 0.5;
  return result;
}

void sub_1000D74C4()
{
  qword_100163208 = 0x4010000000000000;
}

void sub_1000D74D4()
{
  id v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100114F10;
  v6._object = (void *)0x8000000100114EE0;
  v6._countAndFlagsBits = 0xD00000000000002CLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_100103638(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100163210 = v2;
  *(void *)algn_100163218 = v4;
}

void sub_1000D758C()
{
  NSString v0 = sub_100104B38();
  id v1 = [self _systemImageNamed:v0];

  qword_100163220 = (uint64_t)v1;
}

uint64_t type metadata accessor for JurassicTheme()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Colors()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Fonts()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Sizes()
{
  return self;
}

uint64_t type metadata accessor for JurassicTheme.Styles()
{
  return self;
}

uint64_t sub_1000D76B4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v6 - 8);
  Swift::String v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  char v45 = (char *)&v30 - v14;
  unint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    uint64_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v18(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      uint64_t v35 = v18;
      uint64_t v19 = a3;
      uint64_t v20 = v8;
      uint64_t v21 = v45;
      uint64_t v22 = *v44;
      uint64_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000C3DDC(0, *((void *)v25 + 2) + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = *((void *)v25 + 2);
        unint64_t v27 = *((void *)v25 + 3);
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_1000C3DDC(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        *((void *)v25 + 2) = v29;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v22)((char *)v25 + v16 + v28 * v17, v37, v9);
        unint64_t v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      Swift::String v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_100012510((uint64_t)v8, (uint64_t *)&unk_100151950);
    return (uint64_t)v46;
  }
  return result;
}

double *sub_1000D7A74(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000C3D60(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v4 = (void *)*(v3 - 2);
      Swift::String v5 = (void *)*(v3 - 1);
      uint64_t v6 = *v3;
      sub_10001086C(v4);
      double v8 = _swiftEmptyArrayStorage[2];
      double v7 = _swiftEmptyArrayStorage[3];
      id v9 = v5;
      swift_bridgeObjectRetain();
      if (*(void *)&v8 >= *(void *)&v7 >> 1) {
        sub_1000C3D60(*(void *)&v7 > 1uLL, *(void *)&v8 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v8 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[5 * *(void *)&v8];
      *((void *)v10 + 4) = v4;
      v10[5] = 0.0;
      *((unsigned char *)v10 + 48) = 1;
      *((void *)v10 + 7) = v6;
      *((void *)v10 + 8) = v9;
      v3 += 3;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000D7B78(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  Swift::String v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  double v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v31 = v1;
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_1000C3D80(0, v6, 0);
  double v7 = v39;
  uint64_t result = sub_10001C674(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  int v13 = v12 & 1;
  uint64_t v14 = a1 + 64;
  uint64_t v33 = v9;
  int64_t v34 = v6;
  uint64_t v30 = a1 + 96;
  uint64_t v35 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v10 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_29;
    }
    uint64_t v38 = v9;
    int v32 = v13;
    char v18 = *(unsigned char *)(*(void *)(a1 + 48) + v10);
    uint64_t v19 = a1;
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    sub_1001039C8();
    uint64_t v21 = v37;
    v5[*(int *)(v37 + 20)] = v18;
    *(void *)&v5[*(int *)(v21 + 24)] = v20;
    uint64_t v39 = v7;
    unint64_t v23 = *((void *)v7 + 2);
    unint64_t v22 = *((void *)v7 + 3);
    if (v23 >= v22 >> 1)
    {
      sub_1000C3D80(v22 > 1, v23 + 1, 1);
      double v7 = v39;
    }
    *((void *)v7 + 2) = v23 + 1;
    uint64_t result = sub_1000F066C((uint64_t)v5, (uint64_t)v7+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v23, type metadata accessor for InsightsDataManager.TopAssetCategory);
    int64_t v15 = 1 << *(unsigned char *)(v19 + 32);
    if (v10 >= v15) {
      goto LABEL_30;
    }
    uint64_t v14 = v35;
    uint64_t v24 = *(void *)(v35 + 8 * v17);
    if ((v24 & (1 << v10)) == 0) {
      goto LABEL_31;
    }
    a1 = v19;
    if (*(_DWORD *)(v19 + 36) != v38) {
      goto LABEL_32;
    }
    unint64_t v25 = v24 & (-2 << (v10 & 0x3F));
    if (v25)
    {
      int64_t v15 = __clz(__rbit64(v25)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v34;
    }
    else
    {
      unint64_t v26 = v17 + 1;
      unint64_t v27 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v34;
      if (v17 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v35 + 8 * v26);
        if (!v28)
        {
          unint64_t v26 = v17 + 2;
          if (v17 + 2 >= v27) {
            goto LABEL_4;
          }
          unint64_t v28 = *(void *)(v35 + 8 * v26);
          if (!v28)
          {
            unint64_t v26 = v17 + 3;
            if (v17 + 3 >= v27) {
              goto LABEL_4;
            }
            unint64_t v28 = *(void *)(v35 + 8 * v26);
            if (!v28)
            {
              while (v27 - 4 != v17)
              {
                unint64_t v28 = *(void *)(v30 + 8 * v17++);
                if (v28)
                {
                  uint64_t result = sub_10001C914(v10, v38, v32 & 1);
                  uint64_t v14 = v35;
                  unint64_t v26 = v17 + 3;
                  goto LABEL_17;
                }
              }
              uint64_t result = sub_10001C914(v10, v38, v32 & 1);
              uint64_t v14 = v35;
              goto LABEL_4;
            }
          }
        }
LABEL_17:
        int64_t v15 = __clz(__rbit64(v28)) + (v26 << 6);
      }
    }
LABEL_4:
    int v13 = 0;
    ++v11;
    uint64_t v9 = v33;
    uint64_t v10 = v15;
    if (v11 == v16) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1000D7EC0(uint64_t a1)
{
  uint64_t v65 = sub_100007E0C(&qword_100153988);
  uint64_t v3 = __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v63 = (uint64_t)&v56 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v72 = (uint64_t)&v56 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v62 = (uint64_t)&v56 - v10;
  __chkstk_darwin(v9);
  uint64_t v61 = (char *)&v56 - v11;
  uint64_t v12 = sub_100007E0C(&qword_100152A48);
  uint64_t v59 = *(void *)(v12 - 8);
  uint64_t v60 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = *(int *)(sub_100007E0C(&qword_10014CE90) + 32);
  uint64_t v15 = *(void *)(a1 + v58);
  uint64_t v16 = sub_10001C674(v15);
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v21 = 1 << *(unsigned char *)(v15 + 32);
  unsigned int v22 = *(_DWORD *)(v15 + 36);
  uint64_t v71 = a1;
  uint64_t v23 = sub_10001C718(v16, v17, v19 & 1, v21, v22, 0);
  sub_10001C914(v16, v18, v20);
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (!v23) {
    return (uint64_t)v24;
  }
  uint64_t v73 = _swiftEmptyArrayStorage;
  sub_1000C3DBC(0, v23 & ~(v23 >> 63), 0);
  uint64_t result = sub_10001C674(v15);
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v56 = v1;
    if ((result & 0x8000000000000000) == 0 && result < 1 << *(unsigned char *)(v15 + 32))
    {
      uint64_t v57 = v14;
      while ((*(void *)(v15 + 8 * ((unint64_t)result >> 6) + 64) & (1 << result)) != 0)
      {
        if (v26 != *(_DWORD *)(v15 + 36)) {
          goto LABEL_22;
        }
        uint64_t v68 = 1 << result;
        unint64_t v69 = (unint64_t)result >> 6;
        uint64_t v66 = v23;
        uint64_t v67 = v26;
        uint64_t v27 = v65;
        uint64_t v28 = *(void *)(v15 + 56);
        uint64_t v29 = *(void *)(*(void *)(v15 + 48) + 8 * result);
        uint64_t v30 = (uint64_t)v61;
        uint64_t v31 = &v61[*(int *)(v65 + 48)];
        uint64_t v70 = result;
        int v32 = (uint64_t *)(v28 + 32 * result);
        uint64_t v34 = *v32;
        uint64_t v33 = v32[1];
        uint64_t v35 = v32[2];
        uint64_t v36 = v32[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000FE868(v29, v30);
        *(void *)uint64_t v31 = v34;
        *((void *)v31 + 1) = v33;
        *((void *)v31 + 2) = v35;
        *((void *)v31 + 3) = v36;
        uint64_t v37 = v62;
        sub_100010808(v30, v62, &qword_10014CE88);
        uint64_t v38 = (void *)(v37 + *(int *)(v27 + 48));
        void *v38 = v34;
        v38[1] = v33;
        v38[2] = v35;
        v38[3] = v36;
        sub_100033870(v37, v72, &qword_100153988);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v39 = v30;
        uint64_t v40 = (uint64_t)v57;
        sub_100012510(v39, &qword_100153988);
        uint64_t v41 = *(int *)(v60 + 48);
        uint64_t v42 = *(int *)(v27 + 48);
        uint64_t v43 = v63;
        uint64_t v44 = (_OWORD *)(v63 + v42);
        uint64_t v45 = v72 + v42;
        sub_100010808(v72, v63, &qword_10014CE88);
        long long v46 = *(_OWORD *)(v45 + 16);
        *uint64_t v44 = *(_OWORD *)v45;
        v44[1] = v46;
        sub_100007E0C(&qword_10014CE88);
        sub_1001038A8();
        sub_100103908();
        sub_100012510(v43, &qword_10014CE88);
        uint64_t v47 = *(int *)(v27 + 48);
        uint64_t v48 = v72;
        uint64_t v49 = v64;
        uint64_t v50 = v64 + v47;
        uint64_t result = sub_100010808(v72, v64, &qword_10014CE88);
        uint64_t v51 = *(void *)(v45 + 8);
        *(void *)uint64_t v50 = *(void *)v45;
        *(void *)(v50 + 8) = v51;
        *(_OWORD *)(v50 + 16) = *(_OWORD *)(v45 + 16);
        if (v51 < 0) {
          goto LABEL_23;
        }
        uint64_t v52 = (void *)(v40 + v41);
        void *v52 = 0;
        v52[1] = v51;
        sub_100012510(v49, &qword_10014CE88);
        sub_100012510(v48, &qword_100153988);
        uint64_t v24 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000C3DBC(0, *((void *)v24 + 2) + 1, 1);
          uint64_t v24 = v73;
        }
        uint64_t v53 = v70;
        unint64_t v55 = *((void *)v24 + 2);
        unint64_t v54 = *((void *)v24 + 3);
        if (v55 >= v54 >> 1)
        {
          sub_1000C3DBC(v54 > 1, v55 + 1, 1);
          uint64_t v24 = v73;
        }
        *((void *)v24 + 2) = v55 + 1;
        uint64_t result = sub_100033870(v40, (uint64_t)v24+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v55, &qword_100152A48);
        uint64_t v15 = *(void *)(v71 + v58);
        if (v53 >= -(-1 << *(unsigned char *)(v15 + 32))) {
          goto LABEL_24;
        }
        if ((*(void *)(v15 + 64 + 8 * v69) & v68) == 0) {
          goto LABEL_25;
        }
        if (v67 != *(_DWORD *)(v15 + 36)) {
          goto LABEL_26;
        }
        uint64_t result = sub_1001053A8();
        uint64_t v23 = v66 - 1;
        if (v66 == 1) {
          return (uint64_t)v24;
        }
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v26 = *(unsigned int *)(v15 + 36);
          if (result < 1 << *(unsigned char *)(v15 + 32)) {
            continue;
          }
        }
        goto LABEL_27;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
LABEL_27:
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1000D8404(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v6 = sub_100007E0C(&qword_100152A48);
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (!v8) {
    return result;
  }
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1000C3DBC(0, v8, 0);
  uint64_t v40 = v43;
  uint64_t result = (double *)sub_10001C674(a3);
  uint64_t v10 = (uint64_t)result;
  uint64_t v12 = v11;
  uint64_t v13 = 0;
  int v15 = v14 & 1;
  uint64_t v16 = a3 + 64;
  uint64_t v33 = v11;
  int64_t v34 = v8;
  uint64_t v31 = a3 + 96;
  uint64_t v35 = a3 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a3 + 32))
  {
    unint64_t v19 = (unint64_t)v10 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_32;
    }
    int v32 = v15;
    uint64_t v20 = *(void *)(*(void *)(a3 + 56) + 8 * v10);
    v42[0] = *(void *)(*(void *)(a3 + 48) + 8 * v10);
    v42[1] = v20;
    v37(v42);
    if (v4) {
      return (double *)swift_release();
    }
    uint64_t v39 = 0;
    uint64_t v21 = v40;
    uint64_t v43 = v40;
    unint64_t v23 = *((void *)v40 + 2);
    unint64_t v22 = *((void *)v40 + 3);
    if (v23 >= v22 >> 1)
    {
      sub_1000C3DBC(v22 > 1, v23 + 1, 1);
      uint64_t v21 = v43;
    }
    *((void *)v21 + 2) = v23 + 1;
    unint64_t v24 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v40 = v21;
    uint64_t result = (double *)sub_100033870(v41, (uint64_t)v21 + v24 + *(void *)(v36 + 72) * v23, &qword_100152A48);
    int64_t v17 = 1 << *(unsigned char *)(a3 + 32);
    if (v10 >= v17) {
      goto LABEL_33;
    }
    uint64_t v16 = v35;
    uint64_t v25 = *(void *)(v35 + 8 * v19);
    if ((v25 & (1 << v10)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_35;
    }
    unint64_t v26 = v25 & (-2 << (v10 & 0x3F));
    if (v26)
    {
      int64_t v17 = __clz(__rbit64(v26)) | v10 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v4 = v39;
      int64_t v18 = v34;
    }
    else
    {
      unint64_t v27 = v19 + 1;
      unint64_t v28 = (unint64_t)(v17 + 63) >> 6;
      uint64_t v4 = v39;
      int64_t v18 = v34;
      if (v19 + 1 < v28)
      {
        unint64_t v29 = *(void *)(v35 + 8 * v27);
        if (!v29)
        {
          unint64_t v27 = v19 + 2;
          if (v19 + 2 >= v28) {
            goto LABEL_4;
          }
          unint64_t v29 = *(void *)(v35 + 8 * v27);
          if (!v29)
          {
            unint64_t v27 = v19 + 3;
            if (v19 + 3 >= v28) {
              goto LABEL_4;
            }
            unint64_t v29 = *(void *)(v35 + 8 * v27);
            if (!v29)
            {
              while (v28 - 4 != v19)
              {
                unint64_t v29 = *(void *)(v31 + 8 * v19++);
                if (v29)
                {
                  uint64_t result = (double *)sub_10001C914(v10, v12, v32 & 1);
                  uint64_t v16 = v35;
                  unint64_t v27 = v19 + 3;
                  goto LABEL_18;
                }
              }
              uint64_t result = (double *)sub_10001C914(v10, v12, v32 & 1);
              uint64_t v16 = v35;
              goto LABEL_4;
            }
          }
        }
LABEL_18:
        int64_t v17 = __clz(__rbit64(v29)) + (v27 << 6);
      }
    }
LABEL_4:
    int v15 = 0;
    ++v13;
    uint64_t v12 = v33;
    uint64_t v10 = v17;
    if (v13 == v18) {
      return v40;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

double *sub_1000D8774(unint64_t a1, SEL *a2)
{
  int64_t v34 = a2;
  uint64_t v3 = v2;
  uint64_t v5 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100103978();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v33 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v27 = (char *)v25 - v11;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_1001055E8())
  {
    v25[1] = v3;
    uint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    unint64_t v32 = a1 & 0xC000000000000001;
    unint64_t v29 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v13 = _swiftEmptyArrayStorage;
    uint64_t v14 = 4;
    unint64_t v26 = a1;
    while (1)
    {
      id v15 = v32 ? (id)sub_1001054D8() : *(id *)(a1 + 8 * v14);
      uint64_t v16 = v15;
      uint64_t v3 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      id v17 = [v15 *v34];
      if (v17)
      {
        int64_t v18 = v17;
        sub_100103938();

        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 1;
      }
      (*v31)(v7, v19, 1, v8);

      if ((*v30)(v7, 1, v8) == 1)
      {
        sub_100012510((uint64_t)v7, (uint64_t *)&unk_100151950);
      }
      else
      {
        uint64_t v20 = *v29;
        uint64_t v21 = v27;
        (*v29)(v27, v7, v8);
        v20(v33, v21, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = (double *)sub_1000B7C8C(0, *((void *)v13 + 2) + 1, 1, (unint64_t)v13);
        }
        unint64_t v23 = *((void *)v13 + 2);
        unint64_t v22 = *((void *)v13 + 3);
        if (v23 >= v22 >> 1) {
          uint64_t v13 = (double *)sub_1000B7C8C(v22 > 1, v23 + 1, 1, (unint64_t)v13);
        }
        *((void *)v13 + 2) = v23 + 1;
        v20((char *)v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23, v33, v8);
        a1 = v26;
      }
      ++v14;
      if (v3 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000D8AF4()
{
  v1[465] = v0;
  v1[471] = type metadata accessor for InsightsDataManager.Streaks(0);
  v1[472] = swift_task_alloc();
  v1[473] = swift_task_alloc();
  v1[474] = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  v1[475] = swift_task_alloc();
  v1[476] = swift_task_alloc();
  v1[477] = swift_task_alloc();
  sub_100007E0C((uint64_t *)&unk_100151950);
  v1[478] = swift_task_alloc();
  uint64_t v2 = sub_100103978();
  v1[479] = v2;
  v1[480] = *(void *)(v2 - 8);
  v1[481] = swift_task_alloc();
  v1[482] = swift_task_alloc();
  v1[483] = swift_task_alloc();
  sub_100104E38();
  v1[484] = sub_100104E28();
  uint64_t v4 = sub_100104DE8();
  v1[485] = v4;
  v1[486] = v3;
  return _swift_task_switch(sub_1000D8CC4, v4, v3);
}

uint64_t sub_1000D8CC4()
{
  uint64_t v1 = v0[483];
  uint64_t v19 = v0[481];
  uint64_t v2 = v0[480];
  uint64_t v3 = v0[479];
  uint64_t v4 = v0[478];
  uint64_t v5 = v0[465];
  sub_100103948();
  swift_getKeyPath();
  v0[487] = OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager___observationRegistrar;
  v0[459] = v5;
  v0[488] = sub_1000F0344(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v6 = v5 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__referenceDate;
  swift_beginAccess();
  sub_100010808(v6, v4, (uint64_t *)&unk_100151950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v19, v1, v3);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3);
  uint64_t v8 = v0[482];
  uint64_t v9 = v0[480];
  uint64_t v10 = v0[479];
  uint64_t v11 = v0[478];
  if (v7 == 1)
  {
    (*(void (**)(void, void, void))(v9 + 32))(v0[482], v0[481], v0[479]);
    sub_100012510(v11, (uint64_t *)&unk_100151950);
  }
  else
  {
    (*(void (**)(void, void))(v9 + 8))(v0[481], v0[479]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v11, v10);
  }
  uint64_t v12 = v0[482];
  uint64_t v13 = v0[465];
  uint64_t v14 = swift_task_alloc();
  v0[489] = v14;
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  swift_asyncLet_begin();
  uint64_t v15 = swift_task_alloc();
  v0[490] = v15;
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  swift_asyncLet_begin();
  uint64_t v16 = swift_task_alloc();
  v0[491] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  uint64_t v17 = v0[477];
  return _swift_asyncLet_get(v0 + 162, v17, sub_1000D9000, v0 + 430);
}

uint64_t sub_1000D9000()
{
  return _swift_task_switch(sub_1000D901C, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D901C()
{
  uint64_t v1 = v0[482];
  uint64_t v2 = v0[476];
  uint64_t v3 = v0[465];
  sub_1000DE3A4(v0[477], v2, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[492] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 322, v0 + 411, sub_1000D911C, v0 + 448);
}

uint64_t sub_1000D911C()
{
  uint64_t v1 = *(void *)(v0 + 3808);
  uint64_t v2 = *(void *)(v0 + 3800);
  *(void *)(v0 + 3944) = *(void *)(v0 + 3288);
  *(_OWORD *)(v0 + 3952) = *(_OWORD *)(v0 + 3296);
  *(void *)(v0 + 3968) = *(void *)(v0 + 3312);
  sub_1000DE3A4(v1, v2, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  swift_bridgeObjectRetain();
  uint64_t v3 = *(void *)(v0 + 3784);
  return _swift_asyncLet_get(v0 + 1936, v3, sub_1000D91D0, v0 + 3536);
}

uint64_t sub_1000D91D0()
{
  sub_1000DE3A4(*(void *)(v0 + 3784), *(void *)(v0 + 3776), type metadata accessor for InsightsDataManager.Streaks);
  return _swift_asyncLet_get(v0 + 16, v0 + 3256, sub_1000D9268, v0 + 3680);
}

uint64_t sub_1000D9268()
{
  v0[497] = v0[407];
  v0[498] = v0[408];
  v0[499] = v0[409];
  v0[500] = v0[410];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return _swift_asyncLet_get(v0 + 82, v0 + 453, sub_1000D931C, v0 + 466);
}

uint64_t sub_1000D931C()
{
  return _swift_task_switch(sub_1000D9338, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D9338()
{
  uint64_t v14 = *(void *)(v0 + 3992);
  uint64_t v15 = *(void *)(v0 + 4000);
  uint64_t v12 = *(void *)(v0 + 3976);
  uint64_t v13 = *(void *)(v0 + 3984);
  uint64_t v1 = *(void *)(v0 + 3968);
  uint64_t v2 = *(void *)(v0 + 3960);
  long long v17 = *(_OWORD *)(v0 + 3944);
  uint64_t v10 = *(void *)(v0 + 3800);
  uint64_t v11 = *(void *)(v0 + 3776);
  uint64_t v3 = *(void *)(v0 + 3720);
  uint64_t v16 = *(void *)(v0 + 3624);
  swift_getKeyPath();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v17;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  *(void *)(v0 + 3576) = v3;
  swift_bridgeObjectRetain();
  sub_100103B48();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v10;
  *(void *)(v0 + 3528) = v3;
  sub_100103B48();
  swift_release();
  swift_task_dealloc();
  sub_1000DE488(v10, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v11;
  *(void *)(v0 + 3480) = v3;
  sub_100103B48();
  swift_release();
  swift_task_dealloc();
  sub_1000DE488(v11, type metadata accessor for InsightsDataManager.Streaks);
  swift_getKeyPath();
  int v7 = (void *)swift_task_alloc();
  v7[2] = v3;
  v7[3] = v12;
  v7[4] = v13;
  v7[5] = v14;
  v7[6] = v15;
  *(void *)(v0 + 3384) = v3;
  sub_100103B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v16;
  *(void *)(v0 + 3432) = v3;
  sub_100103B48();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 16, v0 + 3256, sub_1000D96C8, v0 + 3632);
}

uint64_t sub_1000D96C8()
{
  return _swift_task_switch(sub_1000D96E4, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D96E4()
{
  uint64_t v1 = *(void *)(v0 + 3808);
  swift_task_dealloc();
  sub_1000DE488(v1, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  return _swift_asyncLet_finish(v0 + 656, v0 + 3624, sub_1000D9784, v0 + 3392);
}

uint64_t sub_1000D9784()
{
  return _swift_task_switch(sub_1000D97A0, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D97A0()
{
  return _swift_asyncLet_finish(v0 + 2576, v0 + 3288, sub_1000D97C0, v0 + 3488);
}

uint64_t sub_1000D97C0()
{
  return _swift_task_switch(sub_1000D97DC, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D97DC()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 3784);
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1000D9850, v0 + 3344);
}

uint64_t sub_1000D9850()
{
  return _swift_task_switch(sub_1000D986C, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D986C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 3816);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1000D98E0, v0 + 3216);
}

uint64_t sub_1000D98E0()
{
  return _swift_task_switch(sub_1000D98FC, *(void *)(v0 + 3880), *(void *)(v0 + 3888));
}

uint64_t sub_1000D98FC()
{
  uint64_t v1 = v0[483];
  uint64_t v2 = v0[482];
  uint64_t v3 = v0[480];
  uint64_t v4 = v0[479];
  uint64_t v5 = v0[465];
  swift_release();
  swift_task_dealloc();
  sub_1000DA000(v1, v5);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v4);
  v6(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000D9A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D9A54(a1, &qword_10014CE90, a2);
}

uint64_t sub_1000D9A54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = sub_100007E0C(&qword_10014E190);
  uint64_t v6 = __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v40 - v8;
  uint64_t v9 = sub_100103978();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v49 = sub_100007E0C(&qword_10014CE88);
  uint64_t v16 = __chkstk_darwin(v49);
  uint64_t v44 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v40 - v19;
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v40 - v21;
  uint64_t v43 = sub_100007E0C(a2);
  *(void *)(a3 + *(int *)(v43 + 32)) = &_swiftEmptyDictionarySingleton;
  uint64_t v46 = a3;
  sub_1000DE3A4(a1, a3, type metadata accessor for UniformDateBins);
  sub_1000FE868(0, (uint64_t)v22);
  uint64_t v23 = v10;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v48(v15, v22, v9);
  sub_100012510((uint64_t)v22, &qword_10014CE88);
  uint64_t v24 = *(void *)(a1 + *(int *)(type metadata accessor for UniformDateBins(0) + 24));
  uint64_t result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1000FE868(result, (uint64_t)v20);
    unint64_t v26 = v13;
    v48(v13, &v20[*(int *)(v49 + 36)], v9);
    sub_100012510((uint64_t)v20, &qword_10014CE88);
    sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
    char v27 = sub_100104A48();
    uint64_t result = sub_1000DE488(a1, type metadata accessor for UniformDateBins);
    if (v27)
    {
      uint64_t v28 = v15;
      uint64_t v29 = v47;
      uint64_t v30 = v42;
      uint64_t v31 = &v42[*(int *)(v47 + 48)];
      unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v32(v42, v28, v9);
      uint64_t v33 = v31;
      uint64_t v41 = v31;
      v32(v31, v26, v9);
      int64_t v34 = v45;
      uint64_t v35 = &v45[*(int *)(v29 + 48)];
      uint64_t v36 = v48;
      v48(v45, v30, v9);
      v36(v35, v33, v9);
      uint64_t v37 = (uint64_t)v44;
      v32(v44, v34, v9);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v23 + 8);
      v38(v35, v9);
      uint64_t v39 = &v34[*(int *)(v47 + 48)];
      v32(v34, v30, v9);
      v32(v39, v41, v9);
      v32((char *)(v37 + *(int *)(v49 + 36)), v39, v9);
      v38(v34, v9);
      return sub_100033870(v37, v46 + *(int *)(v43 + 28), &qword_10014CE88);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D9F04()
{
  uint64_t v0 = sub_100103DB8();
  sub_1000081D0(v0, qword_1001538F8);
  sub_100007D30(v0, (uint64_t)qword_1001538F8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100104B78();
  }
  swift_bridgeObjectRetain();
  sub_100103DA8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DA000(uint64_t a1, uint64_t a2)
{
  uint64_t Update = type metadata accessor for InsightsDataManager.LastUpdate(0);
  uint64_t v4 = Update - 8;
  __chkstk_darwin(Update);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100103978();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100103948();
  sub_1001038A8();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v6, v10, v7);
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000EC2BC((uint64_t)&off_100138888, v13);
  *(void *)&v6[*(int *)(v4 + 28)] = v12;
  *(void *)&v6[*(int *)(v4 + 32)] = v14;
  swift_getKeyPath();
  uint64_t v21 = a2;
  unint64_t v22 = v6;
  uint64_t v23 = a2;
  sub_1000F0344(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B48();
  swift_release();
  sub_1000DE488((uint64_t)v6, type metadata accessor for InsightsDataManager.LastUpdate);
  sub_10001B7C0();
  if (qword_10014C130 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100103DB8();
  sub_100007D30(v15, (uint64_t)qword_1001538F8);
  uint64_t v16 = sub_100103D98();
  os_log_type_t v17 = sub_100105018();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    uint64_t v23 = v12;
    sub_1001052C8();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Insights update took %g seconds", v18, 0xCu);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000DA32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = type metadata accessor for UniformDateBins(0);
  v3[10] = swift_task_alloc();
  uint64_t v4 = sub_100103AE8();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_1000DA420, 0, 0);
}

uint64_t sub_1000DA420()
{
  *(void *)(v0 + 112) = sub_100104E38();
  *(void *)(v0 + 120) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DA4B8, v2, v1);
}

uint64_t sub_1000DA4B8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  *(void *)(v0 + 128) = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1000DA540, 0, 0);
}

uint64_t sub_1000DA540()
{
  char v1 = sub_1000EC974((uint64_t)&off_100138F60, v0[16]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v3 = v0[9];
    uint64_t v2 = v0[10];
    uint64_t v4 = v0[6];
    uint64_t v5 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v2, 1, 1, v5);
    *(void *)(v2 + *(int *)(v3 + 20)) = 0;
    *(void *)(v2 + *(int *)(v3 + 24)) = 1;
    sub_1000D9A54(v2, &qword_10014CE90, v4);
    uint64_t v7 = (int *)type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
    uint64_t v8 = v4 + v7[5];
    *(void *)uint64_t v8 = 0;
    *(unsigned char *)(v8 + 8) = 1;
    uint64_t v9 = v4 + v7[6];
    v6(v2, 1, 1, v5);
    *(void *)(v2 + *(int *)(v3 + 20)) = 0;
    *(void *)(v2 + *(int *)(v3 + 24)) = 1;
    sub_1000D9A54(v2, &qword_10014CE90, v9);
    uint64_t v10 = v4 + v7[7];
    v6(v2, 1, 1, v5);
    *(void *)(v2 + *(int *)(v3 + 20)) = 0;
    *(void *)(v2 + *(int *)(v3 + 24)) = 1;
    sub_1000D9A54(v2, &qword_10014CE90, v10);
    uint64_t v11 = v4 + v7[8];
    *(void *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 8) = 1;
    sub_100103898();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    v0[17] = sub_100104E28();
    uint64_t v15 = sub_100104DE8();
    return _swift_task_switch(sub_1000DA7A4, v15, v14);
  }
}

uint64_t sub_1000DA7A4()
{
  swift_release();
  *(void *)(v0 + 144) = sub_10001FF58();
  return _swift_task_switch(sub_1000DA818, 0, 0);
}

uint64_t sub_1000DA818()
{
  *(void *)(v0 + 152) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DA8A4, v2, v1);
}

uint64_t sub_1000DA8A4()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[7];
  swift_release();
  swift_getKeyPath();
  v0[5] = v4;
  sub_1000F0344(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[20] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000DAA20;
  uint64_t v7 = v0[18];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[6];
  return sub_1000DAC6C(v10, v7, v8, v9);
}

uint64_t sub_1000DAA20()
{
  uint64_t v1 = *(void **)(*v0 + 144);
  uint64_t v2 = *(void *)(*v0 + 104);
  uint64_t v3 = *(void *)(*v0 + 96);
  uint64_t v4 = *(void *)(*v0 + 88);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1000DABC0(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100017E10;
  return sub_1000DA32C(a1, v5, v4);
}

uint64_t sub_1000DAC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v4[7] = sub_100007E0C(&qword_10014CE90);
  v4[8] = swift_task_alloc();
  uint64_t v5 = sub_100105148();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_100103AE8();
  v4[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[13] = v7;
  v4[14] = *(void *)(v7 + 64);
  v4[15] = swift_task_alloc();
  v4[16] = sub_100007E0C(&qword_100153A40);
  v4[17] = swift_task_alloc();
  uint64_t v8 = sub_100103978();
  v4[18] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[19] = v9;
  v4[20] = *(void *)(v9 + 64);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = sub_100007E0C(&qword_100153A48);
  v4[24] = swift_task_alloc();
  v4[25] = sub_100007E0C(&qword_100153A50);
  v4[26] = swift_task_alloc();
  v4[27] = sub_100007E0C(&qword_100153A58);
  v4[28] = swift_task_alloc();
  v4[29] = type metadata accessor for UniformDateBins(0);
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_1000DAF3C, 0, 0);
}

uint64_t sub_1000DAF3C()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v27 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 160);
  uint64_t v35 = *(void *)(v0 + 152);
  uint64_t v29 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 104);
  uint64_t v28 = *(void *)(v0 + 96);
  uint64_t v34 = *(void *)(v0 + 88);
  uint64_t v32 = *(void *)(v0 + 80);
  uint64_t v33 = *(void *)(v0 + 72);
  uint64_t v23 = *(void *)(v0 + 48);
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v31 = *(void **)(v0 + 32);
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v2, 1, 1, v4);
  *(void *)(v2 + *(int *)(v1 + 20)) = 0;
  *(void *)(v2 + *(int *)(v1 + 24)) = 1;
  sub_1000D9A54(v2, &qword_10014CE90, v3);
  uint64_t v6 = (int *)type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  uint64_t v7 = v3 + v6[5];
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = v6[6];
  *(_DWORD *)(v0 + 288) = v8;
  uint64_t v9 = v3 + v8;
  v5(v2, 1, 1, v4);
  *(void *)(v2 + *(int *)(v1 + 20)) = 0;
  *(void *)(v2 + *(int *)(v1 + 24)) = 1;
  sub_1000D9A54(v2, &qword_10014CE90, v9);
  uint64_t v10 = v6[7];
  *(_DWORD *)(v0 + 292) = v10;
  uint64_t v11 = v3 + v10;
  v5(v2, 1, 1, v4);
  *(void *)(v2 + *(int *)(v1 + 20)) = 0;
  *(void *)(v2 + *(int *)(v1 + 24)) = 1;
  sub_1000D9A54(v2, &qword_10014CE90, v11);
  uint64_t v12 = v3 + v6[8];
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  *(_DWORD *)(v0 + 296) = v6[9];
  sub_100103898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v27, v23, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v29, v24, v28);
  unint64_t v13 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v14 = (v30 + *(unsigned __int8 *)(v26 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 248) = v15;
  *(void *)(v15 + 16) = v31;
  uint64_t v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32);
  *(void *)(v0 + 256) = v16;
  *(void *)(v0 + 264) = (v35 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v16(v15 + v13, v27, v25);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v15 + v14, v29, v28);
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v34, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v33);
  id v17 = v31;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1000DB2D4;
  uint64_t v20 = *(void *)(v0 + 128);
  uint64_t v19 = *(void *)(v0 + 136);
  uint64_t v21 = *(void *)(v0 + 88);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v19, v21, sub_1000F04E4, v15, v20);
}

uint64_t sub_1000DB2D4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[10] + 8))(v2[11], v2[9]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_1000DB7D4;
  }
  else {
    uint64_t v3 = sub_1000DB458;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000DB458()
{
  unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v30 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v31 = *(void *)(v0 + 144);
  uint64_t v6 = *(int **)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v29 = v7 + *(int *)(v0 + 296);
  uint64_t v28 = v7 + *(int *)(v0 + 292);
  uint64_t v25 = v7 + *(int *)(v0 + 288);
  uint64_t v8 = v5 + v6[12];
  uint64_t v9 = v5 + v6[16];
  uint64_t v10 = v5 + v6[20];
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v26 = *(void *)(v0 + 64);
  sub_100033870(v5, v1, &qword_100153A58);
  sub_100033870(v8, v2, &qword_100153A50);
  sub_100033870(v9, v3, &qword_100153A48);
  v22(v4, v10, v31);
  uint64_t v12 = v1 + *(int *)(v21 + 28);
  uint64_t v23 = v1;
  unint64_t v13 = sub_1000EBF7C(*(void *)(v1 + *(int *)(v21 + 32)));
  sub_100012510(v7, &qword_10014CE90);
  sub_1000DE3A4(v1, v7, type metadata accessor for UniformDateBins);
  sub_100010808(v12, v7 + *(int *)(v11 + 28), &qword_10014CE88);
  *(void *)(v7 + *(int *)(v11 + 32)) = v13;
  uint64_t v14 = v2 + *(int *)(v24 + 28);
  uint64_t v15 = sub_1000EBCA4(*(void *)(v2 + *(int *)(v24 + 32)));
  sub_100012510(v25, &qword_10014CE90);
  sub_1000DE3A4(v2, v25, type metadata accessor for UniformDateBins);
  sub_100010808(v14, v25 + *(int *)(v11 + 28), &qword_10014CE88);
  *(void *)(v25 + *(int *)(v11 + 32)) = v15;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v2;
  uint64_t v17 = v3 + *(int *)(v27 + 28);
  uint64_t v18 = sub_1000EB9C4((void (*)(_OWORD *__return_ptr, char *))sub_1000F05B8, v16, *(void *)(v3 + *(int *)(v27 + 32)));
  sub_1000DE3A4(v3, v26, type metadata accessor for UniformDateBins);
  sub_100010808(v17, v26 + *(int *)(v11 + 28), &qword_10014CE88);
  *(void *)(v26 + *(int *)(v11 + 32)) = v18;
  swift_task_dealloc();
  sub_100012510(v3, &qword_100153A48);
  sub_100012510(v23, &qword_100153A58);
  sub_100012510(v2, &qword_100153A50);
  sub_10004103C(v26, v28, &qword_10014CE90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40))(v29, v4, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1000DB7D4()
{
  if (qword_10014C130 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100103DB8();
  sub_100007D30(v1, (uint64_t)qword_1001538F8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100103D98();
  os_log_type_t v3 = sub_100104FF8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    sub_1001052C8();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to fetch entries by entry date: %@", v4, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1000DBA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_1000DBA6C, 0, 0);
}

uint64_t sub_1000DBA6C()
{
  *(void *)(v0 + 40) = sub_100104E38();
  *(void *)(v0 + 48) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DBB04, v2, v1);
}

uint64_t sub_1000DBB04()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  *(void *)(v0 + 56) = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1000DBB8C, 0, 0);
}

uint64_t sub_1000DBB8C()
{
  BOOL v1 = sub_1000A83B0(3u, v0[7]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[8] = sub_100104E28();
    uint64_t v3 = sub_100104DE8();
    return _swift_task_switch(sub_1000DBF54, v3, v2);
  }
  else
  {
    uint64_t v4 = v0[2];
    uint64_t v5 = sub_100103978();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v4, 1, 1, v5);
    uint64_t v7 = (int *)type metadata accessor for StreakSummary();
    v6(v4 + v7[5], 1, 1, v5);
    v6(v4 + v7[6], 1, 1, v5);
    *(void *)(v4 + v7[7]) = 0;
    uint64_t v8 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
    uint64_t v9 = v4 + v8[5];
    v6(v9, 1, 1, v5);
    v6(v9 + v7[5], 1, 1, v5);
    v6(v9 + v7[6], 1, 1, v5);
    *(void *)(v9 + v7[7]) = 0;
    uint64_t v10 = v4 + v8[6];
    v6(v10, 1, 1, v5);
    v6(v10 + v7[5], 1, 1, v5);
    v6(v10 + v7[6], 1, 1, v5);
    *(void *)(v10 + v7[7]) = 0;
    uint64_t v11 = v4 + v8[7];
    v6(v11, 1, 1, v5);
    v6(v11 + v7[5], 1, 1, v5);
    v6(v11 + v7[6], 1, 1, v5);
    *(void *)(v11 + v7[7]) = 0;
    uint64_t v12 = v4 + v8[8];
    v6(v12, 1, 1, v5);
    v6(v12 + v7[5], 1, 1, v5);
    v6(v12 + v7[6], 1, 1, v5);
    *(void *)(v12 + v7[7]) = 0;
    uint64_t v13 = v4 + v8[9];
    v6(v13, 1, 1, v5);
    v6(v13 + v7[5], 1, 1, v5);
    v6(v13 + v7[6], 1, 1, v5);
    *(void *)(v13 + v7[7]) = 0;
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_1000DBF54()
{
  swift_release();
  id v1 = sub_10001FF58();
  v0[9] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000DC008;
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_1000DC1CC(v4, (uint64_t)v1, v3);
}

uint64_t sub_1000DC008()
{
  id v1 = *(void **)(*v0 + 72);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1000DC118(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100017E10;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_1000DBA6C, 0, 0);
}

uint64_t sub_1000DC1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_100105148();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_100103AE8();
  v3[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[13] = v6;
  v3[14] = *(void *)(v6 + 64);
  v3[15] = swift_task_alloc();
  uint64_t v7 = sub_100103978();
  v3[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[17] = v8;
  v3[18] = *(void *)(v8 + 64);
  v3[19] = swift_task_alloc();
  sub_100007E0C(&qword_100150CE8);
  v3[20] = swift_task_alloc();
  sub_100007E0C(&qword_100150CF0);
  v3[21] = swift_task_alloc();
  uint64_t v9 = sub_1001035D8();
  v3[22] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[23] = v10;
  v3[24] = *(void *)(v10 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_1000DC444, 0, 0);
}

uint64_t sub_1000DC444()
{
  if (qword_10014C0C8 != -1) {
    swift_once();
  }
  uint64_t v40 = v0[28];
  uint64_t v25 = v0[27];
  uint64_t v44 = v0[26];
  uint64_t v45 = v0[25];
  uint64_t v32 = v0[24];
  uint64_t v29 = v0[23];
  uint64_t v1 = v0[21];
  uint64_t v39 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v43 = v0[19];
  uint64_t v30 = v0[18];
  uint64_t v28 = v0[17];
  uint64_t v41 = v0[15];
  uint64_t v42 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v31 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v36 = v0[11];
  uint64_t v37 = v3;
  uint64_t v34 = v0[10];
  uint64_t v35 = v0[9];
  uint64_t v27 = v0[8];
  uint64_t v33 = (void *)v0[7];
  uint64_t v26 = sub_100007D30(v4, (uint64_t)qword_100163198);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v38 = v4;
  v5(v1, 1, 1, v4);
  uint64_t v6 = sub_100103B38();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v2, 1, 1, v6);
  sub_1001035C8();
  v5(v1, 1, 1, v4);
  v7(v2, 1, 1, v6);
  sub_1001035C8();
  type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v24 = swift_allocBox();
  v0[29] = v24;
  v0[30] = v8;
  sub_100020C38(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v43, v27, v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v41, v26, v4);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v9(v44, v40, v39);
  v9(v45, v25, v39);
  unint64_t v10 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v11 = (v30 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (*(unsigned __int8 *)(v37 + 80) + v11 + 8) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v13 = (v31 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v15 = (v14 + v13 + 8) & ~v14;
  uint64_t v16 = (v32 + v14 + v15) & ~v14;
  uint64_t v17 = swift_allocObject();
  v0[31] = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 32))(v17 + v10, v43, v42);
  *(void *)(v17 + v11) = v33;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 32))(v17 + v12, v41, v38);
  *(void *)(v17 + v13) = v24;
  uint64_t v18 = v17 + v15;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v19(v18, v44, v39);
  v19(v17 + v16, v45, v39);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v36, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v35);
  id v20 = v33;
  swift_retain();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[32] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1000DC960;
  uint64_t v22 = v0[11];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v21, v22, sub_1000F00FC, v17, (char *)&type metadata for () + 8);
}

uint64_t sub_1000DC960()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1000DCC4C;
  }
  else {
    uint64_t v5 = sub_1000DCAF4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000DCAF4()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[23] + 8);
  v3(v0[27], v2);
  v3(v1, v2);
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[6];
  swift_beginAccess();
  sub_1000DE3A4(v4, v5, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000DCC4C()
{
  if (qword_10014C130 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100103DB8();
  sub_100007D30(v1, (uint64_t)qword_1001538F8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100103D98();
  os_log_type_t v3 = sub_100104FF8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v6;
    sub_1001052C8();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to fetch events for streaks: %@", v4, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v7 = v0[28];
  uint64_t v8 = v0[22];
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0[23] + 8);
  v9(v0[27], v8);
  v9(v7, v8);
  uint64_t v10 = v0[30];
  uint64_t v11 = v0[6];
  swift_beginAccess();
  sub_1000DE3A4(v10, v11, type metadata accessor for InsightsDataManager.Streaks);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000DCF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_100103AE8();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000DCFEC, 0, 0);
}

uint64_t sub_1000DCFEC()
{
  *(void *)(v0 + 96) = sub_100104E38();
  *(void *)(v0 + 104) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DD084, v2, v1);
}

uint64_t sub_1000DD084()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  *(void *)(v0 + 112) = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1000DD10C, 0, 0);
}

uint64_t sub_1000DD10C()
{
  BOOL v1 = sub_1000A83B0(2u, v0[14]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[15] = sub_100104E28();
    uint64_t v3 = sub_100104DE8();
    return _swift_task_switch(sub_1000DD208, v3, v2);
  }
  else
  {
    uint64_t v4 = (void *)v0[6];
    *uint64_t v4 = 0;
    v4[1] = 0;
    v4[2] = 0;
    v4[3] = _swiftEmptyArrayStorage;
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1000DD208()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  id v2 = [*(id *)(v1 + 16) newBackgroundContext];
  *(void *)(v0 + 128) = v2;
  NSString v3 = sub_100104B38();
  [v2 setName:v3];

  id v4 = [self mergeByPropertyStoreTrumpMergePolicy];
  [v2 setMergePolicy:v4];

  [v2 setAutomaticallyMergesChangesFromParent:1];
  return _swift_task_switch(sub_1000DD314, 0, 0);
}

uint64_t sub_1000DD314()
{
  *(void *)(v0 + 136) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DD3A0, v2, v1);
}

uint64_t sub_1000DD3A0()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  swift_release();
  swift_getKeyPath();
  v0[5] = v4;
  sub_1000F0344(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1001539F8 + dword_1001539F8);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[18] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000DD530;
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[8];
  return v11(v7, v8, v9);
}

uint64_t sub_1000DD530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void **)(*(void *)v4 + 128);
  uint64_t v7 = *(void *)(*(void *)v4 + 88);
  uint64_t v8 = *(void *)(*(void *)v4 + 80);
  uint64_t v9 = *(void *)(*(void *)v4 + 72);
  v5[19] = a1;
  v5[20] = a2;
  v5[21] = a3;
  v5[22] = a4;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  return _swift_task_switch(sub_1000DD6AC, 0, 0);
}

uint64_t sub_1000DD6AC()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 152);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000DD724(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100017E10;
  return sub_1000DCF28(a1, v5, v4);
}

uint64_t sub_1000DD7D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1000DD7F0, 0, 0);
}

uint64_t sub_1000DD7F0()
{
  *(void *)(v0 + 32) = sub_100104E38();
  *(void *)(v0 + 40) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DD888, v2, v1);
}

uint64_t sub_1000DD888()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  *(void *)(v0 + 48) = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1000DD910, 0, 0);
}

uint64_t sub_1000DD910()
{
  BOOL v1 = sub_1000A83B0(4u, *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  if (v1)
  {
    *(void *)(v0 + 56) = sub_100104E28();
    uint64_t v3 = sub_100104DE8();
    return _swift_task_switch(sub_1000DDA00, v3, v2);
  }
  else
  {
    **(void **)(v0 + 16) = _swiftEmptyArrayStorage;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1000DDA00()
{
  swift_release();
  id v1 = sub_10001FF58();
  *(void *)(v0 + 64) = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1001539A8 + dword_1001539A8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000DDABC;
  return v4((uint64_t)v1);
}

uint64_t sub_1000DDABC(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_1000DDBD8, 0, 0);
}

uint64_t sub_1000DDBD8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000DDBFC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_100017A64;
  return _swift_task_switch(sub_1000DD7F0, 0, 0);
}

uint64_t sub_1000DDCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = sub_100103AE8();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  return _swift_task_switch(sub_1000DDD6C, 0, 0);
}

uint64_t sub_1000DDD6C()
{
  *(void *)(v0 + 104) = sub_100104E38();
  *(void *)(v0 + 112) = sub_100104E28();
  uint64_t v2 = sub_100104DE8();
  return _swift_task_switch(sub_1000DDE04, v2, v1);
}

uint64_t sub_1000DDE04()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  *(void *)(v0 + 120) = *(void *)(v1 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager_options);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1000DDE8C, 0, 0);
}

uint64_t sub_1000DDE8C()
{
  BOOL v1 = sub_1000A83B0(1u, v0[15]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[16] = sub_100104E28();
    uint64_t v3 = sub_100104DE8();
    return _swift_task_switch(sub_1000DDF88, v3, v2);
  }
  else
  {
    uint64_t v4 = (void *)v0[6];
    *uint64_t v4 = _swiftEmptyArrayStorage;
    v4[1] = _swiftEmptyArrayStorage;
    v4[2] = 0;
    v4[3] = _swiftEmptyArrayStorage;
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1000DDF88()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  swift_release();
  swift_getKeyPath();
  v0[5] = v4;
  sub_1000F0344(&qword_10014CE70, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  sub_100103B58();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC20JournalWidgetsSecure19InsightsDataManager__calendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100153968 + dword_100153968);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000DE114;
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  return v11(v9, v7, v8);
}

uint64_t sub_1000DE114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(*(void *)v4 + 96);
  uint64_t v7 = *(void *)(*(void *)v4 + 88);
  uint64_t v8 = *(void *)(*(void *)v4 + 80);
  v5[18] = a1;
  v5[19] = a2;
  v5[20] = a3;
  v5[21] = a4;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  return _swift_task_switch(sub_1000DE278, 0, 0);
}

uint64_t sub_1000DE278()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 144);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000DE2F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100017E10;
  return sub_1000DDCA8(a1, v4, v5, v6);
}

uint64_t sub_1000DE3A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000DE414()
{
  return sub_1000DE51C(sub_100020A18);
}

uint64_t sub_1000DE448()
{
  return sub_100020C04(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000DE46C()
{
  return sub_10002127C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000DE488(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000DE4F0()
{
  return sub_1000DE51C(sub_1000215DC);
}

uint64_t sub_1000DE51C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1000DE550()
{
  return sub_1000218A4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000DE56C(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  if (__OFADD__(*v4, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v4;
  uint64_t v7 = a3;
  uint64_t v5 = a1;
  ++*v4;
  uint64_t v6 = _s14descr100137F61O4YearVMa(0);
  sub_100103B08(a2);
  uint64_t v10 = *(int *)(v6 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)((char *)v4 + v10);
  uint64_t v29 = v13;
  *(void *)((char *)v3 + v10) = 0x8000000000000000;
  unint64_t v8 = sub_10000B6E8(v7);
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = (v14 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v9 = v14;
  if (*(void *)(v13 + 24) >= v17)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    sub_10000CE48(v17, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v29;
    unint64_t v18 = sub_10000B6E8(v7);
    if ((v9 & 1) != (v19 & 1))
    {
      uint64_t result = sub_100105878();
      __break(1u);
      return result;
    }
    unint64_t v8 = v18;
  }
  while (1)
  {
    *(void *)((char *)v3 + v10) = v13;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)((char *)v3 + v10);
    if ((v9 & 1) == 0) {
      sub_1000601F0(v8, v7, 0, *(void **)((char *)v3 + v10));
    }
    uint64_t v21 = *(void *)(v20 + 56);
    uint64_t v22 = *(void *)(v21 + 8 * v8);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23) {
      break;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    sub_10000F2F4();
    uint64_t v13 = v29;
  }
  *(void *)(v21 + 8 * v8) = v24;
  uint64_t v25 = *(void *)(v5 + *(int *)(type metadata accessor for InsightsDataManager.EntrySummary(0) + 28));
  uint64_t v26 = *(int *)(v6 + 28);
  swift_bridgeObjectRetain();
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *(void *)((char *)v3 + v26);
  *(void *)((char *)v3 + v26) = 0x8000000000000000;
  sub_1000ECA78(v25, (uint64_t)sub_1000EDCE0, 0, v27, &v29);
  *(void *)((char *)v3 + v26) = v29;

  return swift_bridgeObjectRelease();
}

void sub_1000DE754(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_1000DE75C(void *a1@<X0>, void (*a2)(void, void, void)@<X1>, void (**a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  v267 = a2;
  v271 = a3;
  uint64_t v226 = a4;
  uint64_t v233 = _s14descr100137F61O4YearVMa(0);
  uint64_t v240 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  v232 = (uint64_t *)((char *)&v212 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v257 = _s14descr100137F61O5MonthVMa(0);
  uint64_t v243 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  v235 = (uint64_t *)((char *)&v212 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v260 = sub_1001035D8();
  uint64_t v224 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v259 = (char *)&v212 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007E0C(&qword_10014D3B8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v242 = (uint64_t)&v212 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v245 = (uint64_t)&v212 - v12;
  __chkstk_darwin(v11);
  uint64_t v248 = (uint64_t)&v212 - v13;
  uint64_t v261 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v223 = *(void *)(v261 - 8);
  uint64_t v14 = __chkstk_darwin(v261);
  uint64_t v234 = (uint64_t)&v212 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v246 = (char *)&v212 - v17;
  __chkstk_darwin(v16);
  uint64_t v236 = (uint64_t)&v212 - v18;
  uint64_t v19 = sub_100007E0C(&qword_100153A68);
  __chkstk_darwin(v19 - 8);
  v250 = (char *)&v212 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = type metadata accessor for InsightsDataManager.EntrySummary(0);
  uint64_t v222 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  uint64_t v264 = (uint64_t)&v212 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_100007E0C(&qword_100153A48);
  __chkstk_darwin(v241);
  uint64_t v278 = (uint64_t)&v212 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = sub_100007E0C(&qword_100153A50);
  __chkstk_darwin(v244);
  uint64_t v272 = (uint64_t)&v212 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = type metadata accessor for UniformDateBins(0);
  __chkstk_darwin(v258);
  v269 = (void (*)(uint64_t, uint64_t))((char *)&v212 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v252 = (void *)sub_100103AE8();
  uint64_t v274 = *(v252 - 1);
  uint64_t v25 = __chkstk_darwin(v252);
  v262 = (void (**)(uint64_t, uint64_t))((char *)&v212 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  v239 = (void (**)(uint64_t, uint64_t))((char *)&v212 - v27);
  uint64_t v263 = sub_100103AD8();
  uint64_t v266 = *(void *)(v263 - 8);
  uint64_t v28 = __chkstk_darwin(v263);
  v256 = (char *)&v212 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v273 = (uint64_t)&v212 - v30;
  uint64_t v247 = sub_100007E0C(&qword_100153A58);
  __chkstk_darwin(v247);
  uint64_t v265 = (uint64_t)&v212 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_100007E0C(&qword_10014E190);
  uint64_t v32 = __chkstk_darwin(v229);
  v230 = (char *)&v212 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v227 = (char *)&v212 - v34;
  uint64_t v228 = sub_100007E0C(&qword_10014CE88);
  uint64_t v35 = __chkstk_darwin(v228);
  v255 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v212 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = __chkstk_darwin(v35);
  v254 = (char *)&v212 - v38;
  __chkstk_darwin(v37);
  uint64_t v251 = (uint64_t)&v212 - v39;
  uint64_t v40 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v40 - 8);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v212 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_100103978();
  uint64_t v253 = *(void *)(v238 - 8);
  uint64_t v43 = __chkstk_darwin(v238);
  uint64_t v45 = (uint64_t)&v212 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v237 = (char *)&v212 - v46;
  id v47 = [objc_allocWithZone((Class)NSExpressionDescription) init];
  uint64_t v48 = (uint64_t)"%K = %@ AND %K != nil";
  NSString v49 = sub_100104B38();
  [v47 setName:v49];

  sub_100008234(0, &qword_100153A70);
  sub_100007E0C(&qword_10014C648);
  uint64_t v50 = swift_allocObject();
  long long v270 = xmmword_100108260;
  *(_OWORD *)(v50 + 16) = xmmword_100108260;
  *(void *)(v50 + 56) = &type metadata for String;
  *(void *)(v50 + 64) = sub_10000A4DC();
  *(void *)(v50 + 32) = 0x7461447972746E65;
  *(void *)(v50 + 40) = 0xE900000000000065;
  uint64_t v51 = (void *)sub_100104FC8();
  [v47 setExpression:v51];

  [v47 setExpressionResultType:900];
  id v52 = [objc_allocWithZone((Class)NSFetchRequest) init];
  uint64_t v231 = type metadata accessor for JournalEntryMO();
  id v53 = [(id)swift_getObjCClassFromMetadata() entity];
  [v52 setEntity:v53];

  if (qword_10014BE80 != -1) {
    swift_once();
  }
  [v52 setPredicate:static NSPredicate.allJournalEntries];
  [v52 setResultType:2];
  sub_100007E0C(&qword_1001539F0);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v270;
  *(void *)(v54 + 56) = sub_100008234(0, &qword_100153A78);
  *(void *)(v54 + 32) = v47;
  id v55 = v47;
  uint64_t v56 = (uint64_t)&type metadata for Any;
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v52 setPropertiesToFetch:isa];

  sub_100008234(0, &qword_100153A80);
  uint64_t v58 = v268;
  unint64_t v59 = sub_100105168();
  if (v58)
  {

    return;
  }
  unint64_t v60 = v59;
  id v215 = v55;
  uint64_t v221 = 0;
  id v216 = v52;
  id v219 = a1;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1001055E8();
    swift_bridgeObjectRelease();
    if (v69) {
      goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    long long v276 = 0u;
    long long v277 = 0u;
    uint64_t v64 = v238;
    uint64_t v65 = v253;
    goto LABEL_18;
  }
  if (!*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_17;
  }
LABEL_7:
  if ((v60 & 0xC000000000000001) != 0) {
    goto LABEL_92;
  }
  if (!*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_94;
  }
  for (id i = *(id *)(v60 + 32); ; id i = (id)sub_1001054D8())
  {
    uint64_t v62 = i;
    swift_bridgeObjectRelease();
    *(void *)&v275[0] = 0xD000000000000011;
    *((void *)&v275[0] + 1) = v48 | 0x8000000000000000;
    id v63 = [v62 __swift_objectForKeyedSubscript:sub_100105858()];
    swift_unknownObjectRelease();

    if (v63)
    {
      sub_100105328();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v275, 0, sizeof(v275));
    }
    uint64_t v64 = v238;
    uint64_t v65 = v253;
    sub_100033870((uint64_t)v275, (uint64_t)&v276, &qword_10014D818);
    if (*((void *)&v277 + 1))
    {
      int v66 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(isUniquelyReferenced_nonNull_native, v66 ^ 1u, 1, v64);
      int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(isUniquelyReferenced_nonNull_native, 1, v64);
      uint64_t v68 = v267;
      if (v67 != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v45, isUniquelyReferenced_nonNull_native, v64);
        goto LABEL_20;
      }
    }
    else
    {
LABEL_18:
      sub_100012510((uint64_t)&v276, &qword_10014D818);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(isUniquelyReferenced_nonNull_native, 1, 1, v64);
      uint64_t v68 = v267;
    }
    sub_100103898();
    sub_100012510(isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_100151950);
LABEL_20:
    uint64_t isUniquelyReferenced_nonNull_native = sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
    char v70 = sub_100104A28();
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
    uint64_t v48 = v65 + 16;
    uint64_t v71 = v72;
    uint64_t v73 = v237;
    if (v70)
    {
      uint64_t v74 = v237;
      uint64_t v75 = (uint64_t)v68;
    }
    else
    {
      uint64_t v74 = v237;
      uint64_t v75 = v45;
    }
    v71(v74, v75, v64);
    uint64_t v76 = v64;
    uint64_t v77 = v253 + 8;
    long long v220 = *(void (**)(uint64_t, uint64_t))(v253 + 8);
    v220(v45, v64);
    if (sub_100104A48()) {
      break;
    }
LABEL_91:
    __break(1u);
LABEL_92:
    ;
  }
  uint64_t v78 = v73;
  uint64_t v79 = v229;
  long long v80 = v227;
  uint64_t v81 = &v227[*(int *)(v229 + 48)];
  v71(v227, (uint64_t)v78, v76);
  uint64_t v268 = (uint64_t)v81;
  v71(v81, (uint64_t)v68, v76);
  uint64_t v82 = v230;
  uint64_t v83 = &v230[*(int *)(v79 + 48)];
  v71(v230, (uint64_t)v80, v76);
  v71(v83, (uint64_t)v81, v76);
  uint64_t v84 = v77;
  uint64_t v86 = v253 + 32;
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v253 + 32);
  uint64_t v87 = v76;
  v85(v254, v82, v76);
  uint64_t v88 = v76;
  uint64_t v89 = (void (*)(char *, uint64_t))v220;
  v220((uint64_t)v83, v88);
  uint64_t v90 = &v82[*(int *)(v79 + 48)];
  v85(v82, v80, v87);
  v85(v90, (char *)v268, v87);
  uint64_t v91 = (uint64_t)v254;
  uint64_t v92 = &v254[*(int *)(v228 + 36)];
  uint64_t v253 = v86;
  long long v213 = (void (*)(uint64_t, char *, uint64_t))v85;
  v85(v92, v90, v87);
  uint64_t v214 = v84;
  v89(v82, v87);
  uint64_t v93 = v91;
  uint64_t v94 = v251;
  sub_100033870(v91, v251, &qword_10014CE88);
  uint64_t v95 = *(char **)(v266 + 104);
  uint64_t v229 = v266 + 104;
  v230 = v95;
  uint64_t v96 = v273;
  uint64_t v97 = v266;
  uint64_t v98 = v263;
  ((void (*)(uint64_t, void, uint64_t))v95)(v273, enum case for Calendar.Component.day(_:), v263);
  sub_100010808(v94, v93, &qword_10014CE88);
  uint64_t v99 = v274 + 16;
  uint64_t v100 = *(void (**)(char *, void (**)(uint64_t, uint64_t), void *))(v274 + 16);
  char v101 = v239;
  uint64_t v102 = v252;
  v100((char *)v239, v271, v252);
  long long v218 = v100;
  v267 = *(void (**)(void, void, void))(v97 + 16);
  uint64_t v268 = v97 + 16;
  uint64_t v103 = (uint64_t)v256;
  v267(v256, v96, v98);
  uint64_t v104 = v255;
  sub_100010808(v93, (uint64_t)v255, &qword_10014CE88);
  uint64_t v105 = (uint64_t)v262;
  v100((char *)v262, v101, v102);
  uint64_t v217 = v99;
  uint64_t v106 = v269;
  sub_1000FEDD4(v103, (uint64_t)v104, v105, (uint64_t)v269);
  sub_1000D9A54((uint64_t)v106, &qword_100153A58, v265);
  v225 = *(void (**)(void, void *))(v274 + 8);
  v274 += 8;
  v225(v101, v102);
  sub_100012510(v93, &qword_10014CE88);
  uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v266 + 8);
  v227 = (char *)(v266 + 8);
  uint64_t v228 = (uint64_t)v107;
  uint64_t v108 = v273;
  v107(v273, v98);
  ((void (*)(uint64_t, void, uint64_t))v230)(v108, enum case for Calendar.Component.month(_:), v98);
  uint64_t v109 = v93;
  sub_100010808(v251, v93, &qword_10014CE88);
  uint64_t v110 = v218;
  v218((char *)v101, v271, v102);
  uint64_t v111 = (uint64_t)v256;
  v267(v256, v108, v98);
  char v112 = v255;
  sub_100010808(v93, (uint64_t)v255, &qword_10014CE88);
  uint64_t v113 = (uint64_t)v262;
  v110((char *)v262, v101, v102);
  uint64_t v114 = v269;
  sub_1000FEDD4(v111, (uint64_t)v112, v113, (uint64_t)v269);
  sub_1000D9A54((uint64_t)v114, &qword_100153A50, v272);
  v225(v101, v102);
  sub_100012510(v109, &qword_10014CE88);
  uint64_t v115 = v273;
  ((void (*)(uint64_t, uint64_t))v228)(v273, v98);
  ((void (*)(uint64_t, void, uint64_t))v230)(v115, enum case for Calendar.Component.year(_:), v98);
  sub_100010808(v251, v109, &qword_10014CE88);
  v110((char *)v101, v271, v102);
  uint64_t v116 = (uint64_t)v256;
  v267(v256, v115, v98);
  sub_100010808(v109, (uint64_t)v112, &qword_10014CE88);
  uint64_t v117 = (uint64_t)v262;
  v110((char *)v262, v101, v102);
  char v118 = v269;
  sub_1000FEDD4(v116, (uint64_t)v112, v117, (uint64_t)v269);
  uint64_t v119 = v278;
  sub_1000D9A54((uint64_t)v118, &qword_100153A48, v278);
  v225(v101, v102);
  sub_100012510(v109, &qword_10014CE88);
  ((void (*)(uint64_t, uint64_t))v228)(v273, v98);
  id v120 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v121 = sub_100104B38();
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)[v120 initWithEntityName:v121];

  [(id)isUniquelyReferenced_nonNull_native setPredicate:static NSPredicate.allJournalEntries];
  sub_100007E0C(&qword_10014C328);
  uint64_t v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = xmmword_100108700;
  sub_100008234(0, &qword_100153A20);
  swift_getKeyPath();
  *(void *)(v122 + 32) = sub_100105048();
  *(void *)&long long v276 = v122;
  sub_100104D48();
  Class v123 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [(id)isUniquelyReferenced_nonNull_native setSortDescriptors:v123];

  Class v124 = sub_100104D18().super.isa;
  [(id)isUniquelyReferenced_nonNull_native setRelationshipKeyPathsForPrefetching:v124];

  [(id)isUniquelyReferenced_nonNull_native setFetchBatchSize:400];
  uint64_t v125 = v221;
  unint64_t v126 = sub_100105168();
  if (v125)
  {

    sub_100012510(v119, &qword_100153A48);
    sub_100012510(v272, &qword_100153A50);
    sub_100012510(v265, &qword_100153A58);
    sub_100012510(v251, &qword_10014CE88);
    v220((uint64_t)v237, v238);
    return;
  }
  uint64_t v56 = v126;
  v230 = (char *)isUniquelyReferenced_nonNull_native;
  uint64_t v221 = 0;
  if (!(v126 >> 62))
  {
    uint64_t v127 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_28;
  }
LABEL_94:
  swift_bridgeObjectRetain();
  uint64_t v127 = sub_1001055E8();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v128 = v261;
  uint64_t v129 = v278;
  uint64_t v45 = (uint64_t)v250;
  uint64_t v130 = v249;
  uint64_t v131 = 0;
  if (!v127)
  {
LABEL_81:
    swift_bridgeObjectRelease();
    [v219 reset];

    sub_100012510(v251, &qword_10014CE88);
    long long v208 = (int *)sub_100007E0C(&qword_100153A40);
    uint64_t v209 = v226 + v208[12];
    uint64_t v210 = v226 + v208[16];
    uint64_t v211 = v226 + v208[20];
    sub_100033870(v265, v226, &qword_100153A58);
    sub_100033870(v272, v209, &qword_100153A50);
    sub_100033870(v129, v210, &qword_100153A48);
    v213(v211, v237, v238);
    sub_10003A1EC((uint64_t)v131);
    return;
  }
  v256 = (char *)(v56 & 0xC000000000000001);
  v255 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
  v271 = (void (**)(uint64_t, uint64_t))(v223 + 48);
  v239 = (void (**)(uint64_t, uint64_t))(v224 + 8);
  uint64_t v48 = 4;
  uint64_t v231 = v56;
  v254 = (char *)v127;
  while (2)
  {
    uint64_t v132 = v48 - 4;
    if (v256)
    {
      id v133 = (id)sub_1001054D8();
      uint64_t v134 = v48 - 3;
      if (__OFADD__(v132, 1)) {
        goto LABEL_82;
      }
    }
    else
    {
      id v133 = *(id *)(v56 + 8 * v48);
      uint64_t v134 = v48 - 3;
      if (__OFADD__(v132, 1))
      {
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
    }
    uint64_t isUniquelyReferenced_nonNull_native = v128;
    uint64_t v274 = v134;
    unsigned int v135 = v133;
    sub_1000E0A24(v45);
    if ((*v255)(v45, 1, v130) == 1)
    {

      sub_100012510(v45, &qword_100153A68);
      uint64_t v128 = isUniquelyReferenced_nonNull_native;
      goto LABEL_31;
    }
    v252 = v135;
    uint64_t v136 = v264;
    sub_1000F066C(v45, v264, type metadata accessor for InsightsDataManager.EntrySummary);
    v262 = (void (**)(uint64_t, uint64_t))(v136 + *(int *)(v130 + 24));
    uint64_t v137 = v265;
    uint64_t v138 = v248;
    sub_100010808(v265, v248, &qword_10014D3B8);
    uint64_t v139 = isUniquelyReferenced_nonNull_native;
    v269 = *v271;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v269)(v138, 1, isUniquelyReferenced_nonNull_native) == 1)
    {
      sub_100012510(v138, &qword_10014D3B8);
      uint64_t v45 = 0;
      goto LABEL_43;
    }
    uint64_t v140 = v236;
    sub_1000F066C(v138, v236, type metadata accessor for CalendarBinningUnit);
    sub_100007E0C(&qword_100153A30);
    unint64_t v141 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
    uint64_t v142 = swift_allocObject();
    *(_OWORD *)(v142 + 16) = v270;
    v267(v142 + v141, v140, v263);
    sub_100057154(v142);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v259;
    sub_100103A58();
    swift_bridgeObjectRelease();
    uint64_t v143 = sub_100103598();
    LOBYTE(v142) = v144;
    (*v239)(isUniquelyReferenced_nonNull_native, v260);
    if ((v142 & 1) == 0)
    {
      sub_1000DE488(v140, type metadata accessor for CalendarBinningUnit);
      uint64_t v137 = v265;
      uint64_t v145 = *(void *)(v265 + *(int *)(v258 + 20));
      uint64_t v45 = v143 - v145;
      if (__OFSUB__(v143, v145)) {
        goto LABEL_88;
      }
      uint64_t v139 = v261;
LABEL_43:
      uint64_t v146 = *(int *)(v247 + 32);
      sub_10003A1EC((uint64_t)v131);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v276 = *(void *)(v137 + v146);
      uint64_t v147 = v276;
      *(void *)(v137 + v146) = 0x8000000000000000;
      uint64_t v273 = v45;
      unint64_t v149 = sub_10000B6E8(v45);
      uint64_t v150 = *(void *)(v147 + 16);
      BOOL v151 = (v148 & 1) == 0;
      uint64_t v152 = v150 + v151;
      if (__OFADD__(v150, v151)) {
        goto LABEL_83;
      }
      char v153 = v148;
      if (*(void *)(v147 + 24) >= v152)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10000F2F4();
          uint64_t v147 = v276;
        }
      }
      else
      {
        sub_10000CE48(v152, isUniquelyReferenced_nonNull_native);
        uint64_t v147 = v276;
        unint64_t v154 = sub_10000B6E8(v273);
        if ((v153 & 1) != (v155 & 1)) {
          goto LABEL_98;
        }
        unint64_t v149 = v154;
      }
      *(void *)(v137 + v146) = v147;
      swift_bridgeObjectRelease();
      uint64_t v156 = *(void **)(v137 + v146);
      swift_bridgeObjectRetain();
      if ((v153 & 1) == 0) {
        sub_1000601F0(v149, v273, 0, v156);
      }
      uint64_t v45 = v156[7];
      swift_bridgeObjectRelease();
      uint64_t v157 = *(void *)(v45 + 8 * v149);
      BOOL v158 = __OFADD__(v157, 1);
      uint64_t v159 = v157 + 1;
      uint64_t v160 = (uint64_t)v246;
      uint64_t v161 = v267;
      uint64_t isUniquelyReferenced_nonNull_native = v268;
      if (v158) {
        goto LABEL_84;
      }
      *(void *)(v45 + 8 * v149) = v159;
      uint64_t v45 = v272;
      uint64_t v162 = v245;
      sub_100010808(v272, v245, &qword_10014D3B8);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v269)(v162, 1, v139) == 1)
      {
        sub_100012510(v162, &qword_10014D3B8);
        uint64_t v163 = 0;
      }
      else
      {
        sub_1000F066C(v162, v160, type metadata accessor for CalendarBinningUnit);
        sub_100007E0C(&qword_100153A30);
        unint64_t v164 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
        uint64_t v165 = swift_allocObject();
        *(_OWORD *)(v165 + 16) = v270;
        v161(v165 + v164, v160, v263);
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_100057154(v165);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v166 = v259;
        sub_100103A58();
        swift_bridgeObjectRelease();
        uint64_t v167 = sub_100103598();
        LOBYTE(v165) = v168;
        (*v239)((uint64_t)v166, v260);
        if (v165) {
          goto LABEL_96;
        }
        sub_1000DE488(v160, type metadata accessor for CalendarBinningUnit);
        uint64_t v45 = v272;
        uint64_t v169 = *(void *)(v272 + *(int *)(v258 + 20));
        uint64_t v163 = (void (*)(uint64_t, uint64_t))(v167 - v169);
        if (__OFSUB__(v167, v169)) {
          goto LABEL_89;
        }
      }
      uint64_t v170 = *(int *)(v244 + 32);
      int v171 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v276 = *(void *)(v45 + v170);
      uint64_t v172 = v276;
      *(void *)(v45 + v170) = 0x8000000000000000;
      uint64_t v45 = sub_10000B6E8((uint64_t)v163);
      uint64_t v174 = *(void *)(v172 + 16);
      BOOL v175 = (v173 & 1) == 0;
      uint64_t v176 = v174 + v175;
      if (__OFADD__(v174, v175)) {
        goto LABEL_85;
      }
      char v177 = v173;
      if (*(void *)(v172 + 24) >= v176)
      {
        if ((v171 & 1) == 0)
        {
          sub_10000F4CC();
          uint64_t v172 = v276;
        }
      }
      else
      {
        sub_10000D138(v176, v171);
        uint64_t v172 = v276;
        unint64_t v178 = sub_10000B6E8((uint64_t)v163);
        if ((v177 & 1) != (v179 & 1)) {
          goto LABEL_98;
        }
        uint64_t v45 = v178;
      }
      uint64_t v180 = v278;
      uint64_t v181 = v272;
      *(void *)(v272 + v170) = v172;
      swift_bridgeObjectRelease();
      uint64_t v182 = *(void **)(v181 + v170);
      if (v177)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v183 = (uint64_t)v235;
        void *v235 = 0;
        swift_bridgeObjectRetain();
        sub_100103B18();
        sub_100060254(v45, (uint64_t)v163, v183, v182);
      }
      uint64_t isUniquelyReferenced_nonNull_native = v182[7];
      swift_bridgeObjectRelease();
      uint64_t v184 = (void *)(isUniquelyReferenced_nonNull_native + *(void *)(v243 + 72) * v45);
      if (__OFADD__(*v184, 1)) {
        goto LABEL_86;
      }
      ++*v184;
      sub_100103B08(v273);
      uint64_t v185 = v242;
      sub_100010808(v180, v242, &qword_10014D3B8);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v269)(v185, 1, v139) == 1)
      {
        sub_100012510(v185, &qword_10014D3B8);
        uint64_t isUniquelyReferenced_nonNull_native = 0;
      }
      else
      {
        v269 = v163;
        uint64_t v186 = v234;
        sub_1000F066C(v185, v234, type metadata accessor for CalendarBinningUnit);
        sub_100007E0C(&qword_100153A30);
        unint64_t v187 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
        uint64_t v188 = swift_allocObject();
        *(_OWORD *)(v188 + 16) = v270;
        v267(v188 + v187, v186, v263);
        sub_100057154(v188);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v189 = v259;
        sub_100103A58();
        swift_bridgeObjectRelease();
        uint64_t v190 = sub_100103598();
        uint64_t v45 = v191;
        (*v239)((uint64_t)v189, v260);
        if (v45) {
          goto LABEL_97;
        }
        sub_1000DE488(v186, type metadata accessor for CalendarBinningUnit);
        uint64_t v192 = *(void *)(v180 + *(int *)(v258 + 20));
        uint64_t isUniquelyReferenced_nonNull_native = v190 - v192;
        if (__OFSUB__(v190, v192)) {
          goto LABEL_90;
        }
        uint64_t v163 = v269;
      }
      uint64_t v193 = *(int *)(v241 + 32);
      int v194 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v276 = *(void *)(v180 + v193);
      uint64_t v195 = v276;
      *(void *)(v180 + v193) = 0x8000000000000000;
      uint64_t v45 = sub_10000B6E8(isUniquelyReferenced_nonNull_native);
      uint64_t v197 = *(void *)(v195 + 16);
      BOOL v198 = (v196 & 1) == 0;
      uint64_t v199 = v197 + v198;
      if (__OFADD__(v197, v198)) {
        goto LABEL_87;
      }
      char v200 = v196;
      if (*(void *)(v195 + 24) >= v199)
      {
        if ((v194 & 1) == 0)
        {
          sub_10000F484();
          uint64_t v195 = v276;
        }
      }
      else
      {
        sub_10000D0F0(v199, v194);
        uint64_t v195 = v276;
        unint64_t v201 = sub_10000B6E8(isUniquelyReferenced_nonNull_native);
        if ((v200 & 1) != (v202 & 1)) {
          goto LABEL_98;
        }
        uint64_t v45 = v201;
      }
      uint64_t v203 = v278;
      *(void *)(v278 + v193) = v195;
      swift_bridgeObjectRelease();
      uint64_t v204 = *(void **)(v203 + v193);
      if (v200)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v205 = (uint64_t)v232;
        void *v232 = 0;
        uint64_t v206 = v233;
        swift_bridgeObjectRetain();
        sub_100103B18();
        *(void *)(v205 + *(int *)(v206 + 24)) = &_swiftEmptyDictionarySingleton;
        *(void *)(v205 + *(int *)(v206 + 28)) = &_swiftEmptyDictionarySingleton;
        sub_100060238(v45, isUniquelyReferenced_nonNull_native, v205, v204);
      }
      uint64_t v128 = v261;
      uint64_t isUniquelyReferenced_nonNull_native = v204[7];
      swift_bridgeObjectRelease();
      uint64_t v207 = v264;
      sub_1000DE56C(v264, v273, (uint64_t)v163);

      sub_1000DE488(v207, type metadata accessor for InsightsDataManager.EntrySummary);
      uint64_t v131 = sub_1000DE754;
      uint64_t v129 = v278;
      uint64_t v45 = (uint64_t)v250;
      uint64_t v130 = v249;
      uint64_t v56 = v231;
LABEL_31:
      ++v48;
      if ((char *)v274 == v254) {
        goto LABEL_81;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  sub_100105878();
  __break(1u);
}

uint64_t sub_1000E0A24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v84 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v74 - v7;
  uint64_t v85 = sub_100103978();
  uint64_t v9 = *(void *)(v85 - 8);
  uint64_t v10 = __chkstk_darwin(v85);
  uint64_t v82 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v74 - v13;
  __chkstk_darwin(v12);
  uint64_t v83 = (char *)&v74 - v15;
  uint64_t v16 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1001039D8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v74 - v24;
  id v25 = [v2 id];
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_42;
  }
  uint64_t v26 = v25;
  uint64_t v81 = v9;
  sub_1001039B8();

  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v27(v18, v23, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_42:
    int v66 = &qword_10014DD70;
    uint64_t v67 = (uint64_t)v18;
LABEL_43:
    sub_100012510(v67, v66);
LABEL_46:
    uint64_t v68 = type metadata accessor for InsightsDataManager.EntrySummary(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(a1, 1, 1, v68);
  }
  uint64_t v80 = a1;
  v27(v86, v18, v19);
  id v28 = [v2 createdDate];
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v8, 1, 1, v85);
    goto LABEL_45;
  }
  uint64_t v29 = v28;
  uint64_t v76 = (void (*)(uint64_t, char *, uint64_t))v27;
  uint64_t v77 = v20 + 32;
  sub_100103938();

  uint64_t v30 = v81;
  uint64_t v31 = (unsigned int (*)(char *, uint64_t, uint64_t))(v81 + 32);
  unint64_t v32 = *(void *)(v81 + 32);
  uint64_t v33 = v85;
  ((void (*)(char *, char *, uint64_t))v32)(v8, v14, v85);
  unint64_t v79 = *(void *)(v30 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v79)(v8, 0, 1, v33);
  uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v78(v8, 1, v33) == 1)
  {
LABEL_45:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v86, v19);
    sub_100012510((uint64_t)v8, (uint64_t *)&unk_100151950);
    a1 = v80;
    goto LABEL_46;
  }
  ((void (*)(char *, char *, uint64_t))v32)(v83, v8, v33);
  id v34 = [v2 entryDate];
  uint64_t v35 = v33;
  if (!v34)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v84, 1, 1, v33);
    a1 = v80;
    goto LABEL_48;
  }
  uint64_t v36 = v34;
  sub_100103938();

  uint64_t v37 = v84;
  ((void (*)(char *, char *, uint64_t))v32)(v84, v14, v35);
  ((void (*)(char *, void, uint64_t, uint64_t))v79)(v37, 0, 1, v35);
  unsigned int v38 = v78(v37, 1, v35);
  a1 = v80;
  if (v38 == 1)
  {
LABEL_48:
    (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v35);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v86, v19);
    int v66 = (uint64_t *)&unk_100151950;
    uint64_t v67 = (uint64_t)v84;
    goto LABEL_43;
  }
  uint64_t v78 = v31;
  ((void (*)(char *, char *, uint64_t))v32)(v82, v84, v35);
  unint64_t v39 = (unint64_t)sub_100012B74();
  unint64_t v79 = v39;
  if (v39 >> 62) {
    goto LABEL_55;
  }
  uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v75 = (void (*)(uint64_t, char *, uint64_t))v32;
    uint64_t v41 = 0;
    if (!v40) {
      break;
    }
    unint64_t v32 = v79;
    uint64_t v84 = (char *)(v79 & 0xC000000000000001);
    uint64_t v42 = &_swiftEmptyDictionarySingleton;
    uint64_t v43 = 4;
    uint64_t v81 = v40;
    while (1)
    {
      id v44 = v84 ? (id)sub_1001054D8() : *(id *)(v32 + 8 * v43);
      uint64_t v45 = v44;
      uint64_t v46 = v43 - 3;
      if (__OFADD__(v43 - 4, 1)) {
        break;
      }
      id v47 = [v44 assetType];
      if (v47)
      {
        uint64_t v48 = v47;
        sub_100104B78();

        char v49 = sub_10005761C();
        unsigned __int8 v50 = 1;
        unint64_t v32 = v79;
        switch(v49)
        {
          case 2:
            break;
          case 3:
          case 4:
          case 5:
          case 17:
            unsigned __int8 v50 = 3;
            break;
          case 6:
            unsigned __int8 v50 = 2;
            break;
          case 7:
          case 8:
          case 9:
            unsigned __int8 v50 = 4;
            break;
          case 10:
          case 18:
          case 19:
          case 20:
          case 21:
            goto LABEL_11;
          case 11:
            unsigned __int8 v50 = 5;
            break;
          case 12:
          case 13:
          case 16:
            unsigned __int8 v50 = 6;
            break;
          case 14:
            unsigned __int8 v50 = 7;
            break;
          case 15:
            unsigned __int8 v50 = 8;
            break;
          default:
            unsigned __int8 v50 = 0;
            break;
        }
        sub_10003A1EC((uint64_t)v41);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v87 = v42;
        unint64_t v53 = sub_10000B9AC(v50);
        uint64_t v54 = v42[2];
        BOOL v55 = (v52 & 1) == 0;
        uint64_t v56 = v54 + v55;
        if (__OFADD__(v54, v55)) {
          goto LABEL_52;
        }
        char v57 = v52;
        if (v42[3] >= v56)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10000F164();
          }
        }
        else
        {
          sub_10000CA58(v56, isUniquelyReferenced_nonNull_native);
          unint64_t v58 = sub_10000B9AC(v50);
          if ((v57 & 1) != (v59 & 1))
          {
            sub_100105878();
            __break(1u);
            JUMPOUT(0x1000E1350);
          }
          unint64_t v53 = v58;
        }
        uint64_t v42 = v87;
        swift_bridgeObjectRelease();
        if (v57)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v42[(v53 >> 6) + 8] |= 1 << v53;
          *(unsigned char *)(v42[6] + v53) = v50;
          *(void *)(v42[7] + 8 * v53) = 0;
          uint64_t v60 = v42[2];
          uint64_t v61 = v60 + 1;
          unint64_t v32 = __OFADD__(v60, 1);
          swift_bridgeObjectRetain();
          if (v32) {
            goto LABEL_54;
          }
          void v42[2] = v61;
          unint64_t v32 = v79;
        }
        uint64_t v62 = v42[7];
        swift_bridgeObjectRelease();
        uint64_t v63 = *(void *)(v62 + 8 * v53);
        BOOL v64 = __OFADD__(v63, 1);
        uint64_t v65 = v63 + 1;
        if (v64) {
          goto LABEL_53;
        }
        *(void *)(v62 + 8 * v53) = v65;
        uint64_t v41 = sub_1000DE754;
      }
LABEL_11:

      ++v43;
      if (v46 == v81) {
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1001055E8();
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = &_swiftEmptyDictionarySingleton;
LABEL_50:
  swift_bridgeObjectRelease();
  uint64_t v70 = v80;
  v76(v80, v86, v19);
  uint64_t v71 = (int *)type metadata accessor for InsightsDataManager.EntrySummary(0);
  uint64_t v72 = v85;
  uint64_t v73 = v75;
  v75(v70 + v71[5], v83, v85);
  v73(v70 + v71[6], v82, v72);
  *(void *)(v70 + v71[7]) = v42;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v71 - 1) + 56))(v70, 0, 1, v71);
  return sub_10003A1EC((uint64_t)v41);
}

uint64_t sub_1000E13A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = _s14descr100137F61O4YearVMa(0);
  uint64_t v7 = sub_100103AF8();
  uint64_t v8 = *a1;
  uint64_t v9 = *(uint64_t *)((char *)a1 + *(int *)(v6 + 24));
  v13[2] = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1000D8404((void (*)(void *))sub_1000F05E0, (uint64_t)v13, v9);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1000D7B78(*(uint64_t *)((char *)a1 + *(int *)(v6 + 28)));
  swift_bridgeObjectRetain();
  sub_1000E7D90(&v14, type metadata accessor for InsightsDataManager.TopAssetCategory, (uint64_t (*)(uint64_t))sub_10007872C, sub_1000E7E54);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = v14;
  *a3 = v7;
  a3[1] = v8;
  a3[2] = (uint64_t)v10;
  a3[3] = v12;
  return result;
}

uint64_t sub_1000E14DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007E0C(&qword_10014CE88);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = *(int *)(sub_100007E0C(&qword_100152A48) + 48);
  sub_1000FE868(v8, (uint64_t)v6);
  sub_1001038A8();
  sub_100103908();
  uint64_t result = sub_100012510((uint64_t)v6, &qword_10014CE88);
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = (void *)(a2 + v9);
    *uint64_t v11 = 0;
    v11[1] = v7;
  }
  return result;
}

void sub_1000E15E0(void (*a1)(char *, uint64_t, uint64_t, uint64_t), void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v98 = a6;
  uint64_t v97 = a5;
  uint64_t v91 = a4;
  id v110 = a3;
  uint64_t v96 = sub_100103AD8();
  uint64_t v111 = *(char **)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v95 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v104 = (char *)&v83 - v15;
  uint64_t v16 = sub_100103978();
  uint64_t v17 = *(char ***)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v89 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v107 = (char *)&v83 - v21;
  __chkstk_darwin(v20);
  uint64_t v90 = (char *)&v83 - v22;
  id v23 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v24 = sub_100104B38();
  id v25 = [v23 initWithEntityName:v24];

  if (qword_10014BE80 != -1) {
    goto LABEL_51;
  }
  while (1)
  {
    [v25 setPredicate:static NSPredicate.allJournalEntries];
    sub_100007E0C(&qword_1001539F0);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_100108260;
    *(void *)(v26 + 56) = &type metadata for String;
    *(void *)(v26 + 32) = 1954047348;
    *(void *)(v26 + 40) = 0xE400000000000000;
    Class isa = sub_100104D18().super.isa;
    swift_bridgeObjectRelease();
    [v25 setPropertiesToFetch:isa];

    [v25 setFetchBatchSize:100];
    type metadata accessor for JournalEntryMO();
    unint64_t v28 = sub_100105168();
    if (v7)
    {
      uint64_t v29 = v25;
      if (qword_10014C130 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_100103DB8();
      sub_100007D30(v30, (uint64_t)qword_1001538F8);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v31 = sub_100103D98();
      os_log_type_t v32 = sub_100104FF8();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        id v34 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138412290;
        swift_errorRetain();
        uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v112 = v35;
        sub_1001052C8();
        *id v34 = v35;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to fetch entries for word counts: %@", v33, 0xCu);
        sub_100007E0C(&qword_10014DF20);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      return;
    }
    unint64_t v36 = v28;
    uint64_t v85 = a1;
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1001055E8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unsigned int v38 = v85;
    if (!v37) {
      break;
    }
    if (v37 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v83 = 0;
    id v84 = v25;
    unint64_t v39 = v91 + 2;
    unint64_t v103 = v36 & 0xC000000000000001;
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v102 = v39;
    swift_beginAccess();
    uint64_t v7 = 0;
    uint64_t v108 = v17 + 4;
    uint64_t v109 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 7);
    uint64_t v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 6);
    unsigned int v88 = enum case for Calendar.Component.month(_:);
    uint64_t v94 = v111 + 104;
    uint64_t v93 = (void (**)(char *, uint64_t))(v111 + 8);
    uint64_t v92 = (void (**)(void *, uint64_t))(v17 + 1);
    unsigned int v87 = enum case for Calendar.Component.year(_:);
    uint64_t v17 = &selRef_entryDate;
    char v101 = (char *)v14;
    uint64_t v86 = a2;
    unint64_t v99 = v36;
    uint64_t v100 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v37;
    while (1)
    {
      uint64_t v40 = v103 ? (char *)sub_1001054D8() : (char *)*(id *)(v36 + 8 * (void)v7 + 32);
      uint64_t v41 = v40;
      id v42 = [v40 title];
      if (v42
        && (uint64_t v43 = sub_100103848(),
            unint64_t v45 = v44,
            v42,
            id v42 = sub_100056B04(v43, v45),
            sub_100010378(v43, v45),
            v42))
      {
        id v46 = [v42 string];

        id v42 = (id)sub_100104B78();
        unint64_t v48 = v47;
      }
      else
      {
        unint64_t v48 = 0xE000000000000000;
      }
      uint64_t v113 = 0;
      NSString v49 = sub_100104B38();
      uint64_t v50 = (uint64_t)v110;
      [v110 v17[29] v49];

      NSString v51 = sub_100104B38();
      [a2 v17[29] v51];

      __chkstk_darwin(v52);
      *(&v83 - 6) = (uint64_t)a2;
      *(&v83 - 5) = v50;
      *(&v83 - 4) = (uint64_t)&v113;
      *(&v83 - 3) = (uint64_t)v42;
      *(&v83 - 2) = v48;
      sub_100104FA8();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t)v113;
      id v53 = [v41 text];
      uint64_t v111 = v41;
      if (!v53) {
        goto LABEL_25;
      }
      uint64_t v54 = sub_100103848();
      unint64_t v56 = v55;

      id v53 = sub_100056B04(v54, v56);
      sub_100010378(v54, v56);
      if (v53)
      {
        id v57 = [v53 string];

        id v53 = (id)sub_100104B78();
        unint64_t v59 = v58;
      }
      else
      {
LABEL_25:
        unint64_t v59 = 0xE000000000000000;
      }
      uint64_t v113 = 0;
      NSString v60 = sub_100104B38();
      id v25 = v110;
      [v110 v17[29] v60];

      NSString v61 = sub_100104B38();
      [a2 v17[29] v61];

      a1 = (void (*)(char *, uint64_t, uint64_t, uint64_t))&v83;
      __chkstk_darwin(v62);
      *(&v83 - 6) = (uint64_t)a2;
      *(&v83 - 5) = (uint64_t)v25;
      *(&v83 - 4) = (uint64_t)&v113;
      *(&v83 - 3) = (uint64_t)v53;
      *(&v83 - 2) = v59;
      sub_100104FA8();
      swift_bridgeObjectRelease();
      uint64_t v63 = &v113[v14];
      if (__OFADD__(v14, v113)) {
        break;
      }
      if (__OFADD__(*v102, v63)) {
        goto LABEL_48;
      }
      *v102 += v63;
      id v64 = [v111 entryDate];
      if (!v64)
      {
        a1 = *v109;
        uint64_t v68 = (uint64_t)v104;
        (*v109)(v104, 1, 1, v16);
        id v25 = v101;
        goto LABEL_32;
      }
      uint64_t v65 = v64;
      uint64_t v105 = v7;
      uint64_t v7 = v17;
      int v66 = v107;
      sub_100103938();

      uint64_t v17 = v108;
      uint64_t v67 = *v108;
      uint64_t v68 = (uint64_t)v104;
      ((void (*)(char *, char *, uint64_t))*v108)(v104, v66, v16);
      a1 = *v109;
      (*v109)((char *)v68, 0, 1, v16);
      if ((*v106)(v68, 1, v16) == 1)
      {
        id v25 = v101;
        uint64_t v17 = v7;
        uint64_t v7 = v105;
LABEL_32:
        sub_100012510(v68, (uint64_t *)&unk_100151950);
        goto LABEL_38;
      }
      a2 = v90;
      ((void (*)(char *, uint64_t, uint64_t))v67)(v90, v68, v16);
      uint64_t v69 = v95;
      uint64_t v70 = v96;
      (*(void (**)(char *, void, uint64_t))v94)(v95, v88, v96);
      char v71 = sub_100103AA8();
      (*v93)(v69, v70);
      uint64_t v14 = v16;
      (*v92)(a2, v16);
      if (v71)
      {
        uint64_t v72 = v91[3];
        BOOL v73 = __OFADD__(v72, v63);
        uint64_t v74 = &v63[v72];
        id v25 = v101;
        if (v73) {
          goto LABEL_49;
        }
        uint64_t v17 = v7;
        v91[3] = v74;
        a2 = v86;
      }
      else
      {
        id v25 = v101;
        a2 = v86;
        uint64_t v17 = v7;
      }
      uint64_t v7 = v105;
LABEL_38:
      id v75 = [v111 entryDate];
      if (!v75)
      {
        a1((char *)v25, 1, 1, v16);
LABEL_13:

        sub_100012510((uint64_t)v25, (uint64_t *)&unk_100151950);
        a1 = v100;
        goto LABEL_14;
      }
      uint64_t v76 = v75;
      uint64_t v77 = v107;
      sub_100103938();

      uint64_t v78 = *v108;
      ((void (*)(id, char *, uint64_t))*v108)(v25, v77, v16);
      a1((char *)v25, 0, 1, v16);
      if ((*v106)((uint64_t)v25, 1, v16) == 1) {
        goto LABEL_13;
      }
      uint64_t v14 = (uint64_t)v89;
      ((void (*)(char *, id, uint64_t))v78)(v89, v25, v16);
      unint64_t v79 = v95;
      id v25 = (id)v96;
      (*(void (**)(char *, void, uint64_t))v94)(v95, v87, v96);
      char v80 = sub_100103AA8();

      (*v93)(v79, (uint64_t)v25);
      (*v92)((void *)v14, v16);
      a1 = v100;
      if (v80)
      {
        uint64_t v81 = v91[4];
        BOOL v73 = __OFADD__(v81, v63);
        uint64_t v82 = &v63[v81];
        if (v73) {
          goto LABEL_50;
        }
        v91[4] = v82;
      }
LABEL_14:
      uint64_t v7 = (char **)((char *)v7 + 1);
      unint64_t v36 = v99;
      if ((char *)a1 == (char *)v7)
      {
        swift_bridgeObjectRelease();
        id v25 = v84;
        unsigned int v38 = v85;
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_46:
  [v38 reset];
}

void sub_1000E2388(uint64_t a1, char *a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v224 = a6;
  uint64_t v223 = a5;
  v239 = a3;
  uint64_t v236 = a2;
  v237 = (double *)a1;
  uint64_t v240 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v240);
  uint64_t v8 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_100007E0C(&qword_100153A10);
  __chkstk_darwin(v206);
  uint64_t v205 = (uint64_t *)((char *)&v195 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v204 = sub_100007E0C(&qword_100153A18);
  uint64_t v199 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v207 = (char *)&v195 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v222 = (uint64_t)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v226 = (char *)&v195 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v231 = (char *)&v195 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v221 = (uint64_t)&v195 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v225 = (char *)&v195 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v228 = (char *)&v195 - v23;
  __chkstk_darwin(v22);
  id v25 = (char *)&v195 - v24;
  uint64_t v26 = sub_100103978();
  uint64_t v27 = *(char **)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  long long v220 = (char *)&v195 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  id v219 = (char *)&v195 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v238 = (char *)&v195 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  char v200 = (char *)&v195 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v232 = (char *)&v195 - v37;
  __chkstk_darwin(v36);
  v227 = (char *)&v195 - v38;
  uint64_t v202 = type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v229 = a4;
  uint64_t v201 = swift_projectBox();
  id v39 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v40 = sub_100104B38();
  id v234 = [v39 initWithEntityName:v40];

  v235 = (unsigned int (*)(char *, char *, uint64_t))sub_100007E0C(&qword_10014C328);
  uint64_t v41 = swift_allocObject();
  long long v213 = xmmword_100106D20;
  *(_OWORD *)(v41 + 16) = xmmword_100106D20;
  if (qword_10014BE58 != -1) {
    swift_once();
  }
  uint64_t v233 = v25;
  long long v208 = v27;
  uint64_t v242 = v26;
  uint64_t v203 = v8;
  id v42 = (void *)static NSPredicate.isNotDraftEntry;
  *(void *)(v41 + 32) = static NSPredicate.isNotDraftEntry;
  uint64_t v43 = qword_10014BE60;
  id v44 = v42;
  if (v43 != -1) {
    swift_once();
  }
  unint64_t v45 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v41 + 40) = static NSPredicate.isNotTipEntry;
  uint64_t v46 = sub_100008234(0, (unint64_t *)&qword_10014C640);
  uint64_t v217 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_100007E0C(&qword_10014C648);
  uint64_t v47 = swift_allocObject();
  long long v215 = xmmword_10010AFB0;
  *(_OWORD *)(v47 + 16) = xmmword_10010AFB0;
  *(void *)(v47 + 56) = &type metadata for String;
  unint64_t v48 = sub_10000A4DC();
  *(void *)(v47 + 64) = v48;
  *(void *)(v47 + 32) = 0x4464657461657263;
  *(void *)(v47 + 40) = 0xEB00000000657461;
  id v49 = v45;
  Class isa = sub_1001038D8().super.isa;
  *(void *)&long long v212 = sub_100008234(0, &qword_10014EF38);
  *(void *)(v47 + 96) = v212;
  uint64_t v51 = sub_1000EFA90((unint64_t *)&qword_10014EF40, &qword_10014EF38);
  *(void *)(v47 + 72) = isa;
  *(void *)(v47 + 136) = &type metadata for String;
  *(void *)(v47 + 144) = v48;
  id v216 = (objc_class *)v48;
  uint64_t v211 = v51;
  *(void *)(v47 + 104) = v51;
  *(void *)(v47 + 112) = 0x4464657461657263;
  *(void *)(v47 + 120) = 0xEB00000000657461;
  uint64_t v210 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))0x80000001001150A0;
  *(void *)(v41 + 48) = sub_100104FB8();
  uint64_t v241 = (char *)v41;
  sub_100104D48();
  long long v218 = (void (*)(char *, char *, uint64_t))v46;
  Class v52 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  id v53 = self;
  id v54 = [v53 andPredicateWithSubpredicates:v52];

  id v55 = v234;
  [v234 setPredicate:v54];

  uint64_t v56 = swift_allocObject();
  long long v209 = xmmword_100108700;
  *(_OWORD *)(v56 + 16) = xmmword_100108700;
  sub_100008234(0, &qword_100153A20);
  swift_getKeyPath();
  *(void *)(v56 + 32) = sub_100105048();
  uint64_t v241 = (char *)v56;
  sub_100104D48();
  Class v57 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v55 setSortDescriptors:v57];

  uint64_t v58 = sub_100007E0C(&qword_1001539F0);
  uint64_t v59 = swift_allocObject();
  long long v214 = xmmword_100108260;
  *(_OWORD *)(v59 + 16) = xmmword_100108260;
  *(void *)(v59 + 56) = &type metadata for String;
  *(void *)(v59 + 32) = 0x4464657461657263;
  *(void *)(v59 + 40) = 0xEB00000000657461;
  Class v60 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v55 setPropertiesToFetch:v60];

  NSString v61 = (void *)type metadata accessor for JournalEntryMO();
  uint64_t v62 = v230;
  unint64_t v63 = sub_100105168();
  if (v62) {
    goto LABEL_9;
  }
  uint64_t v195 = sub_1000D8774(v63, (SEL *)&selRef_createdDate);
  uint64_t v197 = 0;
  swift_bridgeObjectRelease();
  id v64 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v65 = sub_100104B38();
  id v198 = [v64 initWithEntityName:v65];

  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v213;
  uint64_t v67 = (void *)static NSPredicate.isNotDraftEntry;
  uint64_t v68 = (void *)static NSPredicate.isNotTipEntry;
  *(void *)(v66 + 32) = static NSPredicate.isNotDraftEntry;
  *(void *)(v66 + 40) = v68;
  uint64_t v69 = swift_allocObject();
  uint64_t v230 = v58;
  uint64_t v70 = (NSDate *)v69;
  *(_OWORD *)(v69 + 16) = v215;
  *(void *)(v69 + 56) = &type metadata for String;
  *(void *)&long long v213 = (char *)&type metadata for Any + 8;
  char v71 = v216;
  *(void *)(v69 + 64) = v216;
  *(void *)(v69 + 32) = 0x4464657461647075;
  id v196 = v61;
  *(void *)(v69 + 40) = 0xEB00000000657461;
  id v72 = v67;
  id v73 = v68;
  v74.super.Class isa = sub_1001038D8().super.isa;
  uint64_t v75 = v211;
  v70[12].super.Class isa = (Class)v212;
  v70[13].super.Class isa = (Class)v75;
  v70[9].super.Class isa = v74.super.isa;
  v70[17].super.Class isa = (Class)&type metadata for String;
  v70[18].super.Class isa = v71;
  v70[14].super.Class isa = (Class)0x4464657461647075;
  v70[15].super.Class isa = (Class)0xEB00000000657461;
  *(void *)(v66 + 48) = sub_100104FB8();
  uint64_t v241 = (char *)v66;
  sub_100104D48();
  Class v76 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  id v77 = [v53 andPredicateWithSubpredicates:v76];

  id v78 = v198;
  [v198 setPredicate:v77];

  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = v209;
  swift_getKeyPath();
  *(void *)(v79 + 32) = sub_100105048();
  uint64_t v241 = (char *)v79;
  sub_100104D48();
  Class v80 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v78 setSortDescriptors:v80];

  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = v214;
  *(void *)(v81 + 56) = &type metadata for String;
  *(void *)(v81 + 32) = 0x4464657461647075;
  *(void *)(v81 + 40) = 0xEB00000000657461;
  Class v82 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v78 setPropertiesToFetch:v82];

  uint64_t v83 = v197;
  unint64_t v84 = sub_100105168();
  if (v83)
  {

    swift_bridgeObjectRelease();
    id v55 = v78;
LABEL_9:

    return;
  }
  uint64_t v85 = sub_1000D8774(v84, (SEL *)&selRef_updatedDate);
  swift_bridgeObjectRelease();
  id v86 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v87 = sub_100104B38();
  id v88 = [v86 initWithEntityName:v87];

  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = v215;
  uint64_t v90 = v216;
  *(void *)(v89 + 56) = &type metadata for String;
  *(void *)(v89 + 64) = v90;
  *(void *)(v89 + 32) = 0x7079547465737361;
  *(void *)(v89 + 40) = 0xE900000000000065;
  *(void *)(v89 + 96) = &type metadata for String;
  *(void *)(v89 + 104) = v90;
  *(void *)(v89 + 72) = 0x76456B6165727473;
  *(void *)(v89 + 80) = 0xEB00000000746E65;
  *(void *)(v89 + 136) = &type metadata for String;
  *(void *)(v89 + 144) = v90;
  strcpy((char *)(v89 + 112), "assetMetaData");
  *(_WORD *)(v89 + 126) = -4864;
  uint64_t v91 = (void *)sub_100104FB8();
  [v88 setPredicate:v91];

  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = v214;
  *(void *)(v92 + 56) = &type metadata for String;
  strcpy((char *)(v92 + 32), "assetMetaData");
  *(_WORD *)(v92 + 46) = -4864;
  Class v93 = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v88 setPropertiesToFetch:v93];

  type metadata accessor for JournalEntryAssetMO();
  unint64_t v94 = sub_100105168();
  unint64_t v95 = v94;
  *(void *)&long long v209 = v85;
  uint64_t v197 = 0;
  if (v94 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_1001055E8();
  }
  else
  {
    uint64_t v96 = *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v97 = v242;
  uint64_t v98 = v208;
  id v196 = v88;
  if (v96)
  {
    if (v96 < 1)
    {
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v99 = 0;
    long long v218 = (void (*)(char *, char *, uint64_t))(v95 & 0xC000000000000001);
    *(void *)&long long v213 = v199 + 56;
    *(void *)&long long v214 = v208 + 16;
    uint64_t v217 = (unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 56);
    id v216 = (objc_class *)(v208 + 48);
    uint64_t v100 = _swiftEmptyArrayStorage;
    *(void *)&long long v215 = v208 + 32;
    long long v212 = xmmword_1001085E0;
    uint64_t v101 = (uint64_t)v207;
    v235 = (unsigned int (*)(char *, char *, uint64_t))v95;
    uint64_t v230 = v96;
    do
    {
      if (v218) {
        id v102 = (id)sub_1001054D8();
      }
      else {
        id v102 = *(id *)(v95 + 8 * v99 + 32);
      }
      unint64_t v103 = v102;
      uint64_t v104 = (char *)objc_allocWithZone((Class)_s16StreakEventAssetCMa(0));
      *(void *)&v104[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16StreakEventAsset_metadata] = 0;
      id v105 = v103;
      uint64_t v106 = (char *)sub_10009FF4C(v105);
      uint64_t v107 = v106;
      uint64_t v108 = OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16StreakEventAsset_metadata;
      if (*(void *)&v106[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16StreakEventAsset_metadata]) {
        goto LABEL_25;
      }
      uint64_t v109 = *(void **)&v106[OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling5Asset_assetMO];
      if (v109)
      {
        id v110 = [v109 assetMetaData];
        if (v110)
        {
          uint64_t v111 = v110;
          uint64_t v112 = sub_100103848();
          uint64_t v114 = v113;

          uint64_t v115 = v205;
          *uint64_t v205 = v112;
          v115[1] = v114;
          uint64_t v98 = v208;
          uint64_t v97 = v242;
          swift_storeEnumTagMultiPayload();
          sub_100007E0C(&qword_100153A28);
          uint64_t v116 = swift_allocObject();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v213)(v116 + *(void *)(*(void *)v116 + 104), 1, 1, v204);
          *(_OWORD *)(v116 + *(void *)(*(void *)v116 + 112)) = v212;
          uint64_t v117 = (uint64_t)v115;
          uint64_t v101 = (uint64_t)v207;
          sub_100033870(v117, v116 + *(void *)(*(void *)v116 + 120), &qword_100153A10);
          *(void *)&v107[v108] = v116;
          swift_release();
        }
      }
      if (*(void *)&v107[v108])
      {
LABEL_25:
        swift_retain();
        sub_1000F82E0(v101);

        swift_release();
      }
      else
      {
        uint64_t v126 = _s16StreakEventAssetC12MetadataTypeVMa(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v101, 1, 1, v126);
      }
      uint64_t v118 = _s16StreakEventAssetC12MetadataTypeVMa(0);
      int v119 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v101, 1, v118);
      uint64_t v120 = (uint64_t)v233;
      if (v119 == 1)
      {
        sub_100012510(v101, &qword_100153A18);
        uint64_t v121 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))v214)(v233, v101 + *(int *)(v118 + 20), v97);
        sub_1000DE488(v101, _s16StreakEventAssetC12MetadataTypeVMa);
        uint64_t v121 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v217)(v120, v121, 1, v97);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v216)(v120, 1, v97) == 1)
      {
        sub_100012510(v120, (uint64_t *)&unk_100151950);
      }
      else
      {
        uint64_t v122 = *(void (**)(uint64_t, char *, uint64_t))v215;
        Class v123 = v227;
        (*(void (**)(char *, uint64_t, uint64_t))v215)(v227, v120, v97);
        v122((uint64_t)v232, v123, v97);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v100 = (double *)sub_1000B7C8C(0, *((void *)v100 + 2) + 1, 1, (unint64_t)v100);
        }
        unint64_t v125 = *((void *)v100 + 2);
        unint64_t v124 = *((void *)v100 + 3);
        if (v125 >= v124 >> 1) {
          uint64_t v100 = (double *)sub_1000B7C8C(v124 > 1, v125 + 1, 1, (unint64_t)v100);
        }
        *((void *)v100 + 2) = v125 + 1;
        v122((uint64_t)v100+ ((v98[80] + 32) & ~(unint64_t)v98[80])+ *((void *)v98 + 9) * v125, v232, v97);
      }
      ++v99;
      unint64_t v95 = (unint64_t)v235;
    }
    while (v230 != v99);
  }
  else
  {
    uint64_t v100 = _swiftEmptyArrayStorage;
  }
  uint64_t v127 = swift_bridgeObjectRelease_n();
  __chkstk_darwin(v127);
  *(&v195 - 2) = v237;
  uint64_t v128 = v197;
  uint64_t v129 = sub_1000D76B4((uint64_t (*)(char *))sub_1000F0314, (uint64_t)(&v195 - 4), (uint64_t)v100);
  uint64_t v130 = (int *)v240;
  *(void *)&long long v212 = swift_allocBox();
  uint64_t v132 = v131;
  id v133 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v98 + 7);
  v133(v131, 1, 1, v97);
  v133(v132 + v130[5], 1, 1, v97);
  v133(v132 + v130[6], 1, 1, v97);
  uint64_t v134 = v130[7];
  v232 = (char *)v132;
  *(void *)(v132 + v134) = 0;
  uint64_t v211 = swift_allocBox();
  uint64_t v136 = v135;
  v133(v135, 1, 1, v97);
  v133(v136 + v130[5], 1, 1, v97);
  uint64_t v137 = v136 + v130[6];
  uint64_t v210 = v133;
  uint64_t v233 = v98 + 56;
  v133(v137, 1, 1, v97);
  uint64_t v138 = v130[7];
  uint64_t v230 = v136;
  *(void *)(v136 + v138) = 0;
  uint64_t v139 = v195;
  uint64_t v241 = (char *)v195;
  swift_bridgeObjectRetain();
  uint64_t v140 = v209;
  uint64_t v141 = swift_bridgeObjectRetain();
  sub_1000EC118(v141);
  uint64_t v142 = swift_bridgeObjectRetain();
  sub_1000EC118(v142);
  swift_bridgeObjectRetain();
  sub_1000E7D90((uint64_t *)&v241, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(uint64_t))sub_100078740, sub_1000E93E8);
  if (v128)
  {
LABEL_62:
    swift_release();
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v207 = v241;
  if (qword_10014C130 != -1) {
    swift_once();
  }
  uint64_t v143 = sub_100103DB8();
  sub_100007D30(v143, (uint64_t)qword_1001538F8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v144 = sub_100103D98();
  os_log_type_t v145 = sub_100104FD8();
  BOOL v146 = os_log_type_enabled(v144, v145);
  uint64_t v197 = 0;
  if (v146)
  {
    uint64_t v147 = swift_slowAlloc();
    *(_DWORD *)uint64_t v147 = 134218496;
    uint64_t v148 = *((void *)v139 + 2);
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v148;
    sub_1001052C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v147 + 12) = 2048;
    uint64_t v149 = *(void *)(v140 + 16);
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v149;
    sub_1001052C8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v147 + 22) = 2048;
    uint64_t v150 = *(void *)(v129 + 16);
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v150;
    sub_1001052C8();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v144, v145, "Creating streaks from %ld created, %ld updated, %ld event dates", (uint8_t *)v147, 0x20u);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v151 = v242;
  uint64_t v152 = v228;
  char v153 = v210;
  [v236 reset];
  uint64_t v154 = *((void *)v207 + 2);
  if (v154)
  {
    char v155 = v208;
    uint64_t v236 = &v207[(v155[80] + 32) & ~(unint64_t)v155[80]];
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v157 = (void (*)(char *, uint64_t, uint64_t))*((void *)v155 + 2);
    v155 += 16;
    uint64_t v156 = v157;
    *(void *)&long long v209 = *((void *)v155 + 7);
    BOOL v158 = (unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 32);
    id v216 = (objc_class *)(v155 + 16);
    *(void *)&long long v215 = v155 - 8;
    v227 = v155;
    uint64_t v217 = (unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 32);
    long long v218 = (void (*)(char *, char *, uint64_t))v157;
    v157(v152, (uint64_t)v236, v151);
    while (1)
    {
      v153((uint64_t)v152, 0, 1, v151);
      uint64_t v166 = *v158;
      if ((*v158)(v152, 1, v151) == 1) {
        break;
      }
      *(void *)&long long v214 = v154;
      uint64_t v167 = (uint64_t)v238;
      v235 = *(unsigned int (**)(char *, char *, uint64_t))v216;
      v235(v238, v152, v151);
      char v168 = v239;
      uint64_t v169 = v229;
      sub_1000E4644(v167, v212, v239, v229);
      sub_1000E5534(v167, v211, (uint64_t)v168, v169);
      uint64_t v170 = v221;
      sub_100010808((uint64_t)v232, v221, (uint64_t *)&unk_100151950);
      int v171 = v219;
      v156(v219, v167, v151);
      *(void *)&long long v213 = v166;
      if (v166((char *)v170, 1, v151) == 1)
      {
        uint64_t v172 = v171;
        uint64_t v173 = (uint64_t)v225;
        v235(v225, v172, v151);
        sub_100012510(v170, (uint64_t *)&unk_100151950);
      }
      else
      {
        (*(void (**)(char *, uint64_t))v215)(v171, v151);
        uint64_t v173 = (uint64_t)v225;
        v235(v225, (char *)v170, v151);
      }
      char v153 = v210;
      v210(v173, 0, 1, v151);
      uint64_t v174 = (uint64_t)v232;
      sub_10004103C(v173, (uint64_t)v232, (uint64_t *)&unk_100151950);
      uint64_t v175 = v240;
      uint64_t v176 = v174 + *(int *)(v240 + 20);
      sub_100012510(v176, (uint64_t *)&unk_100151950);
      char v177 = v238;
      unint64_t v178 = v218;
      v218((char *)v176, v238, v242);
      v153(v176, 0, 1, v242);
      uint64_t v179 = (uint64_t)v231;
      sub_100103A88();
      uint64_t v180 = *(int *)(v175 + 24);
      uint64_t v151 = v242;
      sub_10004103C(v179, v174 + v180, (uint64_t *)&unk_100151950);
      uint64_t v181 = v222;
      sub_100010808(v230, v222, (uint64_t *)&unk_100151950);
      uint64_t v182 = v220;
      v178(v220, v177, v151);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v213)(v181, 1, v151) == 1)
      {
        uint64_t v159 = v182;
        uint64_t v160 = (uint64_t)v226;
        v235(v226, v159, v151);
        sub_100012510(v181, (uint64_t *)&unk_100151950);
      }
      else
      {
        (*(void (**)(char *, uint64_t))v215)(v182, v151);
        uint64_t v160 = (uint64_t)v226;
        v235(v226, (char *)v181, v151);
      }
      v153(v160, 0, 1, v151);
      uint64_t v161 = v230;
      sub_10004103C(v160, v230, (uint64_t *)&unk_100151950);
      uint64_t v162 = v161 + *(int *)(v240 + 20);
      sub_100012510(v162, (uint64_t *)&unk_100151950);
      uint64_t v163 = v238;
      unint64_t v164 = (void (*)(char *, uint64_t, uint64_t))v218;
      v218((char *)v162, v238, v151);
      v153(v162, 0, 1, v151);
      uint64_t v165 = (uint64_t)v231;
      sub_100103A88();
      (*(void (**)(char *, uint64_t))v215)(v163, v151);
      sub_10004103C(v165, v161 + *(int *)(v240 + 24), (uint64_t *)&unk_100151950);
      uint64_t v156 = v164;
      v236 += v209;
      uint64_t v154 = v214 - 1;
      uint64_t v152 = v228;
      BOOL v158 = v217;
      if ((void)v214 == 1) {
        goto LABEL_54;
      }
      v156(v228, (uint64_t)v236, v151);
    }
  }
  else
  {
LABEL_54:
    v153((uint64_t)v152, 1, 1, v151);
  }
  swift_release();
  uint64_t v183 = (uint64_t)v200;
  sub_100103898();
  uint64_t v184 = v239;
  uint64_t v185 = v229;
  sub_1000E4644(v183, v212, v239, v229);
  uint64_t v186 = (void (*)(uint64_t, uint64_t))*((void *)v208 + 1);
  v186(v183, v151);
  sub_100103898();
  sub_1000E5534(v183, v211, (uint64_t)v184, v185);
  v186(v183, v151);
  uint64_t v187 = v201;
  swift_beginAccess();
  uint64_t v188 = (uint64_t)v203;
  sub_1000DE3A4(v187, (uint64_t)v203, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v189 = (uint64_t)v237;
  LOBYTE(v186) = sub_1000476A0((uint64_t)v237);
  sub_1000DE488(v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v190 = (int *)v202;
  if ((v186 & 1) == 0)
  {
    swift_beginAccess();
    sub_1000DE3A4(v187, v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_10001EB1C(v188, v187 + v190[6]);
    sub_1000DE488(v187, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    v153(v187, 1, 1, v151);
    uint64_t v191 = v240;
    v153(v187 + *(int *)(v240 + 20), 1, 1, v151);
    v153(v187 + *(int *)(v191 + 24), 1, 1, v151);
    *(void *)(v187 + *(int *)(v191 + 28)) = 0;
  }
  swift_beginAccess();
  sub_1000DE3A4(v187 + v190[5], v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  char v192 = sub_1000476A0(v189);

  sub_1000DE488(v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  if ((v192 & 1) == 0)
  {
    swift_beginAccess();
    sub_1000DE3A4(v187 + v190[5], v188, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_10001EB1C(v188, v187 + v190[7]);
    uint64_t v193 = v187 + v190[5];
    sub_1000DE488(v193, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    v153(v193, 1, 1, v151);
    uint64_t v194 = v240;
    v153(v193 + *(int *)(v240 + 20), 1, 1, v151);
    v153(v193 + *(int *)(v194 + 24), 1, 1, v151);
    *(void *)(v193 + *(int *)(v194 + 28)) = 0;
  }
  swift_release();
  swift_release();
}

void sub_1000E444C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010808(a1, (uint64_t)v10, (uint64_t *)&unk_100151950);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    Class isa = sub_1001038D8().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  [v11 *a5];
}

uint64_t sub_1000E4580@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_100103938();

    uint64_t v6 = sub_100103978();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_100103978();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t sub_1000E4644(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v120 = a1;
  uint64_t v121 = a4;
  uint64_t v114 = a3;
  uint64_t v4 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001038B8();
  uint64_t v105 = *(void *)(v7 - 8);
  uint64_t v106 = v7;
  __chkstk_darwin(v7);
  uint64_t v104 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001035D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v112 = v9;
  uint64_t v113 = v10;
  __chkstk_darwin(v9);
  uint64_t v115 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v117 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v96 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v96 - v18;
  uint64_t v20 = sub_100103978();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  id v110 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v111 = (char *)&v96 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v107 = (char *)&v96 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v116 = (char *)&v96 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v118 = (char *)&v96 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v96 - v32;
  uint64_t v34 = swift_projectBox();
  uint64_t v109 = type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v108 = swift_projectBox();
  swift_beginAccess();
  int v119 = (int *)v4;
  uint64_t v35 = *(int *)(v4 + 24);
  uint64_t v121 = v34;
  sub_100010808(v34 + v35, (uint64_t)v19, (uint64_t *)&unk_100151950);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1) {
    return sub_100012510((uint64_t)v19, (uint64_t *)&unk_100151950);
  }
  unint64_t v103 = v6;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v38(v33, v19, v20);
  uint64_t v39 = v20;
  if ((sub_1001038F8() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v33, v20);
  }
  uint64_t v120 = v21;
  uint64_t v40 = v121;
  swift_beginAccess();
  sub_100010808(v40, (uint64_t)v17, (uint64_t *)&unk_100151950);
  unsigned int v41 = v36(v17, 1, v39);
  id v102 = v33;
  if (v41 == 1)
  {
    sub_100012510((uint64_t)v17, (uint64_t *)&unk_100151950);
    uint64_t v42 = (uint64_t)v103;
    uint64_t v43 = v119;
    uint64_t v44 = v120;
LABEL_21:
    uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    v92(v42, 1, 1, v39);
    v92(v42 + v43[5], 1, 1, v39);
    v92(v42 + v43[6], 1, 1, v39);
    *(void *)(v42 + v43[7]) = 0;
    swift_beginAccess();
    sub_10001EB1C(v42, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v102, v39);
  }
  unint64_t v45 = v118;
  v38(v118, v17, v39);
  swift_beginAccess();
  uint64_t v43 = v119;
  uint64_t v46 = v117;
  sub_100010808(v40 + v119[5], v117, (uint64_t *)&unk_100151950);
  if (v36((char *)v46, 1, v39) == 1)
  {
    uint64_t v44 = v120;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v45, v39);
    sub_100012510(v46, (uint64_t *)&unk_100151950);
    uint64_t v42 = (uint64_t)v103;
    goto LABEL_21;
  }
  uint64_t v47 = v116;
  v38(v116, (char *)v46, v39);
  sub_100007E0C(&qword_100153A30);
  uint64_t v48 = sub_100103AD8();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = v45;
  uint64_t v51 = *(void *)(v49 + 72);
  uint64_t v52 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v117 = v39;
  uint64_t v53 = (v52 + 32) & ~v52;
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_100108250;
  uint64_t v55 = v54 + v53;
  uint64_t v56 = *(void (**)(uint64_t, void, uint64_t))(v49 + 104);
  v56(v55, enum case for Calendar.Component.day(_:), v48);
  v56(v55 + v51, enum case for Calendar.Component.second(_:), v48);
  Class v57 = (char *)sub_100057154(v54);
  swift_setDeallocating();
  uint64_t v58 = v47;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v59 = v115;
  sub_100103A58();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_100103578();
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v112);
    uint64_t v44 = v120;
    uint64_t v89 = *(void (**)(char *, uint64_t))(v120 + 8);
    uint64_t v39 = v117;
    v89(v47, v117);
    v89(v50, v39);
    uint64_t v42 = (uint64_t)v103;
LABEL_20:
    uint64_t v40 = v121;
    goto LABEL_21;
  }
  uint64_t v62 = v60;
  uint64_t v63 = v117;
  uint64_t v64 = sub_1001035A8();
  uint64_t v42 = (uint64_t)v103;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v112);
    uint64_t v44 = v120;
    uint64_t v90 = *(void (**)(char *, uint64_t))(v120 + 8);
    uint64_t v91 = v58;
    uint64_t v39 = v63;
    v90(v91, v63);
LABEL_19:
    v90(v118, v63);
    goto LABEL_20;
  }
  BOOL v66 = v64 != 0;
  BOOL v67 = __OFADD__(v62, v66);
  uint64_t v68 = v62 + v66;
  if (v67)
  {
    __break(1u);
    goto LABEL_27;
  }
  Class v57 = v111;
  if (v68 < 2)
  {
    uint64_t v39 = v63;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v112);
    uint64_t v44 = v120;
    uint64_t v90 = *(void (**)(char *, uint64_t))(v120 + 8);
    v90(v116, v63);
    goto LABEL_19;
  }
  uint64_t v101 = v68;
  if (qword_10014C130 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v69 = sub_100103DB8();
  sub_100007D30(v69, (uint64_t)qword_1001538F8);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
  char v71 = v107;
  uint64_t v72 = v63;
  v70(v107, v118, v63);
  v70(v57, v116, v63);
  id v73 = v110;
  v70(v110, v102, v72);
  NSDate v74 = sub_100103D98();
  os_log_type_t v75 = sub_100105018();
  int v76 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v77 = swift_slowAlloc();
    int v98 = v76;
    uint64_t v78 = v77;
    uint64_t v99 = swift_slowAlloc();
    v122[0] = v99;
    *(_DWORD *)uint64_t v78 = 134218754;
    uint64_t v123 = v101;
    sub_1001052C8();
    *(_WORD *)(v78 + 12) = 2080;
    uint64_t v114 = (void (*)(char *, uint64_t))(v78 + 14);
    uint64_t v79 = v104;
    sub_1001033C8();
    uint64_t v100 = sub_1000F0344((unint64_t *)&qword_100152188, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
    uint64_t v80 = v106;
    os_log_t v97 = v74;
    sub_100103958();
    uint64_t v105 = *(void *)(v105 + 8);
    ((void (*)(char *, uint64_t))v105)(v79, v80);
    uint64_t v123 = sub_1000456B4(v123, v124, v122);
    sub_1001052C8();
    swift_bridgeObjectRelease();
    uint64_t v114 = *(void (**)(char *, uint64_t))(v120 + 8);
    v114(v71, v72);
    *(_WORD *)(v78 + 22) = 2080;
    uint64_t v107 = (char *)(v78 + 24);
    sub_1001033C8();
    uint64_t v81 = v111;
    sub_100103958();
    ((void (*)(char *, uint64_t))v105)(v79, v80);
    uint64_t v123 = sub_1000456B4(v123, v124, v122);
    sub_1001052C8();
    swift_bridgeObjectRelease();
    v114(v81, v72);
    *(_WORD *)(v78 + 32) = 2080;
    uint64_t v111 = (char *)(v78 + 34);
    sub_1001033C8();
    Class v82 = v110;
    sub_100103958();
    ((void (*)(char *, uint64_t))v105)(v79, v80);
    uint64_t v123 = sub_1000456B4(v123, v124, v122);
    sub_1001052C8();
    uint64_t v83 = v101;
    swift_bridgeObjectRelease();
    unint64_t v84 = v114;
    v114(v82, v72);
    os_log_t v85 = v97;
    _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v98, "Ending %ld day streak from %s to %s after %s", (uint8_t *)v78, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v112);
    v84(v116, v72);
    v84(v118, v72);
    uint64_t v43 = v119;
    uint64_t v86 = v121;
    uint64_t v88 = v108;
    uint64_t v87 = v109;
  }
  else
  {

    Class v93 = *(void (**)(char *, uint64_t))(v120 + 8);
    v93(v73, v72);
    v93(v57, v72);
    v93(v71, v72);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v112);
    v93(v116, v72);
    uint64_t v114 = v93;
    v93(v118, v72);
    uint64_t v86 = v121;
    uint64_t v88 = v108;
    uint64_t v87 = v109;
    uint64_t v83 = v101;
  }
  swift_beginAccess();
  *(void *)(v86 + v43[7]) = v83;
  swift_beginAccess();
  sub_1000DE3A4(v88, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_10001EB1C(v42, v88 + *(int *)(v87 + 24));
  swift_beginAccess();
  sub_1000DE3A4(v86, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_10001EB1C(v42, v88);
  swift_beginAccess();
  uint64_t v94 = *(void *)(v86 + v43[7]);
  swift_beginAccess();
  if (v94 >= *(void *)(v88 + *(int *)(v87 + 32) + v43[7]))
  {
    swift_beginAccess();
    sub_1000DE3A4(v86, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_10001EB1C(v42, v88 + *(int *)(v87 + 32));
  }
  unint64_t v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 56);
  v95(v42, 1, 1, v72);
  v95(v42 + v43[5], 1, 1, v72);
  v95(v42 + v43[6], 1, 1, v72);
  *(void *)(v42 + v43[7]) = 0;
  swift_beginAccess();
  sub_10001EB1C(v42, v86);
  return ((uint64_t (*)(char *, uint64_t))v114)(v102, v72);
}

uint64_t sub_1000E5534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = a1;
  uint64_t v123 = a4;
  uint64_t v116 = a3;
  uint64_t v4 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001038B8();
  uint64_t v107 = *(void *)(v7 - 8);
  uint64_t v108 = v7;
  __chkstk_darwin(v7);
  uint64_t v106 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001035D8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  uint64_t v115 = v10;
  __chkstk_darwin(v9);
  uint64_t v117 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v119 = (uint64_t)v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v99 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v99 - v18;
  uint64_t v20 = sub_100103978();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v113 = (char *)v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v112 = (char *)v99 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v111 = (char *)v99 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v118 = (char *)v99 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v120 = (char *)v99 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)v99 - v32;
  uint64_t v34 = swift_projectBox();
  uint64_t v110 = type metadata accessor for InsightsDataManager.Streaks(0);
  uint64_t v109 = swift_projectBox();
  swift_beginAccess();
  uint64_t v121 = (int *)v4;
  uint64_t v35 = *(int *)(v4 + 24);
  uint64_t v123 = v34;
  sub_100010808(v34 + v35, (uint64_t)v19, (uint64_t *)&unk_100151950);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1) {
    return sub_100012510((uint64_t)v19, (uint64_t *)&unk_100151950);
  }
  uint64_t v105 = v6;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v38(v33, v19, v20);
  uint64_t v39 = v20;
  if ((sub_1001038F8() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v33, v20);
  }
  uint64_t v122 = v21;
  uint64_t v40 = v123;
  swift_beginAccess();
  sub_100010808(v40, (uint64_t)v17, (uint64_t *)&unk_100151950);
  unsigned int v41 = v36(v17, 1, v39);
  uint64_t v104 = v33;
  if (v41 == 1)
  {
    sub_100012510((uint64_t)v17, (uint64_t *)&unk_100151950);
    uint64_t v42 = (uint64_t)v105;
    uint64_t v44 = v121;
    uint64_t v43 = v122;
LABEL_19:
    Class v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    v93(v42, 1, 1, v39);
    v93(v42 + v44[5], 1, 1, v39);
    v93(v42 + v44[6], 1, 1, v39);
    *(void *)(v42 + v44[7]) = 0;
    swift_beginAccess();
    sub_10001EB1C(v42, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v104, v39);
  }
  unint64_t v45 = v120;
  v38(v120, v17, v39);
  swift_beginAccess();
  uint64_t v44 = v121;
  uint64_t v46 = v119;
  sub_100010808(v40 + v121[5], v119, (uint64_t *)&unk_100151950);
  if (v36((char *)v46, 1, v39) == 1)
  {
    uint64_t v43 = v122;
    (*(void (**)(char *, uint64_t))(v122 + 8))(v45, v39);
    sub_100012510(v46, (uint64_t *)&unk_100151950);
    uint64_t v42 = (uint64_t)v105;
    goto LABEL_19;
  }
  uint64_t v47 = v118;
  v38(v118, (char *)v46, v39);
  sub_100007E0C(&qword_100153A30);
  uint64_t v48 = sub_100103AD8();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(void *)(v49 + 72);
  unint64_t v51 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_100108250;
  unint64_t v53 = v52 + v51;
  uint64_t v54 = v39;
  uint64_t v55 = *(void (**)(unint64_t, void, uint64_t))(v49 + 104);
  v55(v53, enum case for Calendar.Component.weekOfYear(_:), v48);
  unint64_t v56 = v53 + v50;
  Class v57 = v120;
  v55(v56, enum case for Calendar.Component.second(_:), v48);
  uint64_t v58 = (char *)sub_100057154(v52);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v59 = v117;
  sub_100103A58();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_100103568();
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v114);
    uint64_t v43 = v122;
    uint64_t v90 = *(void (**)(char *, uint64_t))(v122 + 8);
    v90(v47, v54);
    v90(v57, v54);
    uint64_t v39 = v54;
    uint64_t v42 = (uint64_t)v105;
    uint64_t v40 = v123;
    goto LABEL_19;
  }
  uint64_t v62 = v60;
  uint64_t v103 = v54;
  uint64_t v63 = sub_1001035A8();
  uint64_t v42 = (uint64_t)v105;
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v114);
    uint64_t v43 = v122;
    uint64_t v91 = *(void (**)(char *, uint64_t))(v122 + 8);
    uint64_t v39 = v103;
    v91(v47, v103);
    v91(v120, v39);
    uint64_t v40 = v123;
    goto LABEL_19;
  }
  BOOL v65 = v63 != 0;
  BOOL v66 = __OFADD__(v62, v65);
  uint64_t v67 = v62 + v65;
  uint64_t v39 = v103;
  uint64_t v40 = v123;
  if (v66)
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v58 = v112;
  Class v57 = v113;
  if (v67 < 2)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v114);
    uint64_t v43 = v122;
    uint64_t v92 = *(void (**)(char *, uint64_t))(v122 + 8);
    v92(v118, v39);
    v92(v120, v39);
    goto LABEL_19;
  }
  uint64_t v119 = v67;
  if (qword_10014C130 != -1) {
    goto LABEL_25;
  }
LABEL_14:
  uint64_t v68 = sub_100103DB8();
  sub_100007D30(v68, (uint64_t)qword_1001538F8);
  uint64_t v69 = v122;
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
  v70(v111, v120, v39);
  v70(v58, v118, v39);
  v70(v57, v104, v39);
  char v71 = sub_100103D98();
  os_log_type_t v72 = sub_100105018();
  int v73 = v72;
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v74 = swift_slowAlloc();
    int v101 = v73;
    uint64_t v75 = v74;
    uint64_t v102 = swift_slowAlloc();
    v124[0] = v102;
    *(_DWORD *)uint64_t v75 = 134218754;
    uint64_t v125 = v119;
    sub_1001052C8();
    *(_WORD *)(v75 + 12) = 2080;
    v99[1] = v75 + 14;
    int v76 = v106;
    sub_1001033C8();
    uint64_t v116 = sub_1000F0344((unint64_t *)&qword_100152188, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
    uint64_t v77 = v108;
    os_log_t v100 = v71;
    uint64_t v78 = v111;
    sub_100103958();
    uint64_t v107 = *(void *)(v107 + 8);
    ((void (*)(char *, uint64_t))v107)(v76, v77);
    uint64_t v125 = sub_1000456B4(v125, v126, v124);
    sub_1001052C8();
    swift_bridgeObjectRelease();
    uint64_t v79 = *(void (**)(char *, uint64_t))(v69 + 8);
    v79(v78, v39);
    *(_WORD *)(v75 + 22) = 2080;
    uint64_t v111 = (char *)(v75 + 24);
    sub_1001033C8();
    uint64_t v80 = v112;
    sub_100103958();
    ((void (*)(char *, uint64_t))v107)(v76, v77);
    uint64_t v125 = sub_1000456B4(v125, v126, v124);
    sub_1001052C8();
    swift_bridgeObjectRelease();
    v79(v80, v103);
    *(_WORD *)(v75 + 32) = 2080;
    uint64_t v112 = (char *)(v75 + 34);
    sub_1001033C8();
    uint64_t v81 = v113;
    sub_100103958();
    ((void (*)(char *, uint64_t))v107)(v76, v77);
    uint64_t v125 = sub_1000456B4(v125, v126, v124);
    sub_1001052C8();
    uint64_t v82 = v119;
    swift_bridgeObjectRelease();
    uint64_t v83 = v81;
    uint64_t v84 = v103;
    v79(v83, v103);
    os_log_t v85 = v100;
    _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v101, "Ending %ld week streak from %s to %s after %s", (uint8_t *)v75, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v114);
    v79(v118, v84);
    uint64_t v86 = v84;
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v79;
    v79(v120, v86);
    uint64_t v44 = v121;
    uint64_t v89 = v109;
    uint64_t v88 = (int *)v110;
  }
  else
  {

    uint64_t v94 = *(void (**)(char *, uint64_t))(v69 + 8);
    v94(v57, v39);
    v94(v58, v39);
    v94(v111, v39);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v114);
    v94(v118, v39);
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v94;
    v94(v120, v39);
    uint64_t v89 = v109;
    uint64_t v88 = (int *)v110;
    uint64_t v82 = v119;
  }
  uint64_t v95 = v123;
  swift_beginAccess();
  *(void *)(v95 + v44[7]) = v82;
  swift_beginAccess();
  sub_1000DE3A4(v89 + v88[5], v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_10001EB1C(v42, v89 + v88[7]);
  swift_beginAccess();
  sub_1000DE3A4(v95, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  swift_beginAccess();
  sub_10001EB1C(v42, v89 + v88[5]);
  swift_beginAccess();
  uint64_t v96 = *(void *)(v95 + v44[7]);
  swift_beginAccess();
  if (v96 >= *(void *)(v89 + v88[9] + v44[7]))
  {
    swift_beginAccess();
    sub_1000DE3A4(v95, v42, (uint64_t (*)(void))type metadata accessor for StreakSummary);
    swift_beginAccess();
    sub_10001EB1C(v42, v89 + v88[9]);
  }
  os_log_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
  uint64_t v98 = v103;
  v97(v42, 1, 1, v103);
  v97(v42 + v44[5], 1, 1, v98);
  v97(v42 + v44[6], 1, 1, v98);
  *(void *)(v42 + v44[7]) = 0;
  swift_beginAccess();
  sub_10001EB1C(v42, v95);
  return v87(v104, v98);
}

uint64_t sub_1000E6440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007E0C(&qword_100153988);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v5 + 56));
  sub_100010808(a1, (uint64_t)&v19 - v9, &qword_10014CE88);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = v11[2];
  uint64_t v15 = v11[3];
  uint64_t v16 = &v8[*(int *)(v5 + 56)];
  sub_100033870((uint64_t)v10, (uint64_t)v8, &qword_10014CE88);
  *(void *)uint64_t v16 = v12;
  *((void *)v16 + 1) = v13;
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = v15;
  uint64_t v17 = sub_100103978();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a2, v8, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100012510((uint64_t)v8, &qword_100153988);
}

void sub_1000E6598(uint64_t a1, void *a2)
{
  uint64_t v181 = a1;
  id v180 = a2;
  uint64_t v2 = sub_100007E0C(&qword_100150400);
  __chkstk_darwin(v2 - 8);
  uint64_t v172 = (char *)v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v159 = *(void *)(v171 - 8);
  uint64_t v4 = __chkstk_darwin(v171);
  uint64_t v173 = (uint64_t)v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v150 - v6;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = sub_100104B38();
  id v10 = [v8 initWithEntityName:v9];

  sub_100008234(0, (unint64_t *)&qword_10014C640);
  sub_100007E0C(&qword_10014C648);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10010A7D0;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10000A4DC();
  *(void *)(v11 + 32) = 0xD000000000000012;
  *(void *)(v11 + 40) = 0x8000000100115060;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = 0xD000000000000018;
  *(void *)(v11 + 80) = 0x8000000100115080;
  *(void *)(v11 + 136) = &type metadata for String;
  *(void *)(v11 + 144) = v12;
  *(void *)(v11 + 112) = 0x7079547465737361;
  *(void *)(v11 + 120) = 0xE900000000000065;
  *(void *)(v11 + 176) = sub_100007E0C(&qword_10014DA20);
  *(void *)(v11 + 184) = sub_100050EC4(&qword_1001539E8, &qword_10014DA20);
  *(void *)(v11 + 152) = &off_100138FB8;
  uint64_t v13 = (void *)sub_100104FB8();
  [v10 setPredicate:v13];

  [v10 setFetchBatchSize:200];
  sub_100007E0C(&qword_1001539F0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100108250;
  *(void *)(v14 + 32) = 0x7079547465737361;
  *(void *)(v14 + 40) = 0xE900000000000065;
  *(void *)(v14 + 88) = &type metadata for String;
  *(void *)(v14 + 56) = &type metadata for String;
  strcpy((char *)(v14 + 64), "assetMetaData");
  *(_WORD *)(v14 + 78) = -4864;
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  [v10 setPropertiesToFetch:isa];

  type metadata accessor for JournalEntryAssetMO();
  uint64_t v16 = v182;
  unint64_t v17 = sub_100105168();
  uint64_t v19 = (uint64_t)v16;
  if (v16)
  {

    return;
  }
  unint64_t isUniquelyReferenced_nonNull_native = (unint64_t)v180;
  id v151 = v10;
  uint64_t v157 = v7;
  unint64_t v165 = v17;
  if (v17 >> 62) {
    goto LABEL_136;
  }
  uint64_t v21 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  uint64_t v23 = v171;
  uint64_t v22 = (uint64_t)v172;
  uint64_t v24 = v173;
  if (!v21)
  {

    swift_bridgeObjectRelease();
    uint64_t v149 = 0;
    uint64_t v147 = 0;
    uint64_t v148 = 0;
    uint64_t v146 = 0;
    goto LABEL_131;
  }
  unint64_t v25 = isUniquelyReferenced_nonNull_native;
  uint64_t v154 = 0;
  uint64_t v153 = 0;
  uint64_t v156 = 0;
  uint64_t v155 = 0;
  uint64_t v174 = 0;
  uint64_t v175 = 0;
  uint64_t v176 = 0;
  char v177 = 0;
  unint64_t isUniquelyReferenced_nonNull_native = 0;
  unint64_t v178 = (unint64_t *)(v25 + 16);
  unint64_t v167 = v165 & 0xC000000000000001;
  uint64_t v162 = v165 & 0xFFFFFFFFFFFFFF8;
  unint64_t v161 = v165 + 32;
  BOOL v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48);
  uint64_t v152 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
  *(void *)&long long v18 = 136315394;
  long long v160 = v18;
  v150[1] = (char *)&type metadata for Any + 8;
  uint64_t v166 = v21;
  while (1)
  {
    if (v167)
    {
      id v26 = (id)sub_1001054D8();
    }
    else
    {
      if (isUniquelyReferenced_nonNull_native >= *(void *)(v162 + 16)) {
        goto LABEL_135;
      }
      id v26 = *(id *)(v161 + 8 * isUniquelyReferenced_nonNull_native);
    }
    id v27 = v26;
    BOOL v28 = __OFADD__(isUniquelyReferenced_nonNull_native++, 1);
    if (v28)
    {
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1001055E8();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    id v29 = [v26 assetType];
    if (v29)
    {
      uint64_t v30 = v29;
      sub_100104B78();
    }
    int v31 = sub_10005761C();
    if (v31 == 21) {
      goto LABEL_8;
    }
    unint64_t v179 = isUniquelyReferenced_nonNull_native;
    id v180 = v27;
    if (v31 == 8)
    {
      id v56 = [v27 assetMetaData];
      if (v56)
      {
        Class v57 = v56;
        uint64_t v58 = sub_100103848();
        unint64_t v60 = v59;

        char v61 = (double *)sub_1000F8948();
        sub_100010378(v58, v60);
        if (v61 != (double *)1)
        {
          if (!v61) {
            char v61 = _swiftEmptyArrayStorage;
          }
          uint64_t v170 = (char *)*((void *)v61 + 2);
          if (!v170)
          {
LABEL_121:

            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
          uint64_t v62 = 0;
          unint64_t v63 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
          v150[2] = v61;
          uint64_t v169 = (char *)v61 + v63;
          uint64_t v168 = *(void *)(v159 + 72);
          while (2)
          {
            uint64_t v182 = v62;
            sub_1000DE3A4((uint64_t)&v169[v168 * (void)v62], v24, _s10VisitAssetC9VisitDataVMa);
            uint64_t v64 = *(void *)(v24 + 32);
            uint64_t v65 = *(void *)(v24 + 40);
            BOOL v66 = (uint64_t *)(v24 + *(int *)(v23 + 52));
            unint64_t v67 = v66[1];
            if (v67 >> 60 == 15)
            {
              swift_bridgeObjectRetain();
              uint64_t v68 = 0;
            }
            else
            {
              uint64_t v181 = *(void *)(v24 + 32);
              uint64_t v69 = *v66;
              sub_100008234(0, &qword_10014C7C8);
              sub_100008234(0, &qword_10014C7D0);
              swift_bridgeObjectRetain();
              sub_1000D58E0(v69, v67);
              uint64_t v70 = sub_100105058();
              if (v19)
              {
                if (qword_10014BF18 != -1) {
                  swift_once();
                }
                uint64_t v71 = sub_100103DB8();
                sub_100007D30(v71, (uint64_t)qword_10014E240);
                swift_errorRetain();
                swift_errorRetain();
                os_log_type_t v72 = sub_100103D98();
                os_log_type_t v73 = sub_100104FF8();
                if (os_log_type_enabled(v72, v73))
                {
                  uint64_t v74 = swift_slowAlloc();
                  uint64_t v75 = (void *)swift_slowAlloc();
                  uint64_t v76 = swift_slowAlloc();
                  uint64_t v164 = v65;
                  uint64_t v183 = v76;
                  *(_DWORD *)uint64_t v74 = v160;
                  uint64_t v77 = sub_1001059C8();
                  *(void *)(v74 + 4) = sub_1000456B4(v77, v78, &v183);
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v74 + 12) = 2112;
                  swift_errorRetain();
                  uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
                  *(void *)(v74 + 14) = v79;
                  *uint64_t v75 = v79;
                  swift_errorRelease();
                  swift_errorRelease();
                  _os_log_impl((void *)&_mh_execute_header, v72, v73, "Error converting Data to %s: %@", (uint8_t *)v74, 0x16u);
                  sub_100007E0C(&qword_10014DF20);
                  swift_arrayDestroy();
                  uint64_t v23 = v171;
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  uint64_t v65 = v164;
                  swift_slowDealloc();
                  uint64_t v24 = v173;
                  swift_slowDealloc();

                  swift_errorRelease();
                }
                else
                {
                  swift_errorRelease();
                  swift_errorRelease();
                  swift_errorRelease();
                }
                sub_100010364(v69, v67);
                uint64_t v68 = 0;
                uint64_t v19 = 0;
                unint64_t isUniquelyReferenced_nonNull_native = v179;
              }
              else
              {
                uint64_t v68 = (void *)v70;
                sub_100010364(v69, v67);
              }
              id v27 = v180;
              uint64_t v64 = v181;
            }
            uint64_t v80 = (uint64_t)[v68 pointOfInterestCategory];

            if (v65)
            {
              uint64_t v181 = v19;
              if (v64 == 1701670728 && v65 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
              {
                if (qword_10014C148 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_100153E20;

                swift_bridgeObjectRelease();
                uint64_t v80 = 0;
                goto LABEL_53;
              }
              if (v64 == 1802661719 && v65 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
              {
                if (qword_10014C150 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_100153E28;

                swift_bridgeObjectRelease();
                uint64_t v80 = 1;
                goto LABEL_53;
              }
              if (v64 == 0x6C6F6F686353 && v65 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
              {
                if (qword_10014C158 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_100153E30;

                swift_bridgeObjectRelease();
                uint64_t v80 = 2;
                goto LABEL_53;
              }
              if (v64 == 7174471 && v65 == 0xE300000000000000 || (sub_1001057F8() & 1) != 0)
              {
                if (qword_10014C160 != -1) {
                  swift_once();
                }
                id v81 = (id)qword_100153E38;

                swift_bridgeObjectRelease();
                uint64_t v80 = 3;
LABEL_53:
                uint64_t v82 = (uint64_t)v177;
                uint64_t v83 = (uint64_t)v175;
LABEL_54:
                uint64_t v84 = swift_allocObject();
                *(void *)(v84 + 16) = v81;
                sub_10001086C((id)v80);
                id v85 = v81;
                sub_10003A1EC(v83);
                id v86 = [v27 objectID];
                uint64_t v19 = (uint64_t)v178;
                swift_beginAccess();
                uint64_t v87 = swift_allocObject();
                *(void *)(v87 + 16) = sub_1000F124C;
                *(void *)(v87 + 24) = v84;
                sub_10003A1EC(v82);
                unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v184 = *(void **)v19;
                uint64_t v88 = v184;
                *(void *)uint64_t v19 = 0x8000000000000000;
                unint64_t v90 = sub_10000BA18((void *)v80);
                uint64_t v91 = v88[2];
                BOOL v92 = (v89 & 1) == 0;
                uint64_t v93 = v91 + v92;
                if (__OFADD__(v91, v92)) {
                  goto LABEL_133;
                }
                uint64_t v19 = v89;
                if (v88[3] >= v93)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_10000F770();
                    uint64_t v88 = v184;
                  }
                }
                else
                {
                  sub_10000D4E8(v93, isUniquelyReferenced_nonNull_native);
                  uint64_t v88 = v184;
                  unint64_t v94 = sub_10000BA18((void *)v80);
                  if ((v19 & 1) != (v95 & 1)) {
                    goto LABEL_139;
                  }
                  unint64_t v90 = v94;
                }
                uint64_t v96 = v178;
                *unint64_t v178 = (unint64_t)v88;
                swift_bridgeObjectRelease();
                unint64_t isUniquelyReferenced_nonNull_native = *v96;
                uint64_t v97 = swift_bridgeObjectRetain();
                if ((v19 & 1) == 0)
                {
                  uint64_t v98 = (*(uint64_t (**)(uint64_t))(v87 + 16))(v97);
                  *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v90 >> 6) + 64) |= 1 << v90;
                  *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 8 * v90) = v80;
                  uint64_t v99 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 16 * v90);
                  uint64_t *v99 = v98;
                  v99[1] = v100;
                  uint64_t v101 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
                  BOOL v28 = __OFADD__(v101, 1);
                  uint64_t v102 = v101 + 1;
                  if (v28) {
                    goto LABEL_134;
                  }
                  *(void *)(isUniquelyReferenced_nonNull_native + 16) = v102;
                  sub_10001086C((id)v80);
                }
                swift_bridgeObjectRelease();
                sub_1000AD4FC(&v184, v86);
                swift_endAccess();

                sub_10001087C((id)v80);
                sub_10001087C((id)v80);

                uint64_t v24 = v173;
                sub_1000DE488(v173, _s10VisitAssetC9VisitDataVMa);
                uint64_t v176 = v87;
                char v177 = sub_1000EFBD8;
                uint64_t v174 = v84;
                uint64_t v175 = sub_1000F124C;
                uint64_t v23 = v171;
                uint64_t v22 = (uint64_t)v172;
                id v27 = v180;
                uint64_t v19 = v181;
                unint64_t isUniquelyReferenced_nonNull_native = v179;
LABEL_34:
                uint64_t v62 = v182 + 1;
                if (v182 + 1 == v170) {
                  goto LABEL_121;
                }
                continue;
              }
            }
            break;
          }
          if (v80)
          {
            uint64_t v181 = v19;
            uint64_t v103 = qword_10014C140;
            id v104 = (id)v80;
            if (v103 != -1) {
              swift_once();
            }
            uint64_t v105 = off_100153E18;
            if (*((void *)off_100153E18 + 2))
            {
              id v163 = v104;
              sub_100104B78();
              sub_1001058D8();
              sub_100104BC8();
              Swift::Int v106 = sub_100105928();
              swift_bridgeObjectRelease();
              uint64_t v107 = -1 << v105[32];
              unint64_t v108 = v106 & ~v107;
              if (((*(void *)&v105[((v108 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v108) & 1) == 0) {
                goto LABEL_102;
              }
              uint64_t v109 = sub_100104B78();
              uint64_t v111 = v110;
              if (v109 == sub_100104B78() && v111 == v112)
              {
LABEL_103:
                uint64_t v23 = v171;
                uint64_t v24 = v173;
                swift_bridgeObjectRelease_n();
LABEL_104:
                uint64_t v19 = v181;
                unint64_t isUniquelyReferenced_nonNull_native = v179;
                uint64_t v123 = (uint64_t *)(v24 + *(int *)(v23 + 48));
                unint64_t v124 = v123[1];
                if (v124 >> 60 == 15)
                {
                  id v125 = v163;

                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v164 = v65;
                  uint64_t v126 = *v123;
                  sub_100008234(0, (unint64_t *)&qword_10014C8A0);
                  sub_100008234(0, &qword_10014C7D0);
                  sub_1000D58E0(v126, v124);
                  uint64_t v127 = sub_100105058();
                  if (v19)
                  {
                    uint64_t v181 = v126;
                    if (qword_10014BF18 != -1) {
                      swift_once();
                    }
                    uint64_t v128 = sub_100103DB8();
                    sub_100007D30(v128, (uint64_t)qword_10014E240);
                    swift_errorRetain();
                    swift_errorRetain();
                    uint64_t v129 = sub_100103D98();
                    os_log_type_t v130 = sub_100104FF8();
                    if (os_log_type_enabled(v129, v130))
                    {
                      uint64_t v131 = swift_slowAlloc();
                      uint64_t v132 = (void *)swift_slowAlloc();
                      uint64_t v183 = swift_slowAlloc();
                      *(_DWORD *)uint64_t v131 = v160;
                      uint64_t v133 = sub_1001059C8();
                      *(void *)(v131 + 4) = sub_1000456B4(v133, v134, &v183);
                      uint64_t v23 = v171;
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v131 + 12) = 2112;
                      swift_errorRetain();
                      uint64_t v135 = _swift_stdlib_bridgeErrorToNSError();
                      *(void *)(v131 + 14) = v135;
                      *uint64_t v132 = v135;
                      swift_errorRelease();
                      swift_errorRelease();
                      _os_log_impl((void *)&_mh_execute_header, v129, v130, "Error converting Data to %s: %@", (uint8_t *)v131, 0x16u);
                      sub_100007E0C(&qword_10014DF20);
                      swift_arrayDestroy();
                      uint64_t v24 = v173;
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();

                      swift_errorRelease();
                    }
                    else
                    {
                      swift_errorRelease();
                      swift_errorRelease();
                      swift_errorRelease();
                    }
                    sub_100010364(v181, v124);
                    id v136 = v163;

                    swift_bridgeObjectRelease();
                    uint64_t v22 = (uint64_t)v172;
                    unint64_t isUniquelyReferenced_nonNull_native = v179;
                    id v27 = v180;

                    uint64_t v19 = 0;
                    goto LABEL_108;
                  }
                  id v81 = (id)v127;
                  sub_100010364(v126, v124);
                  id v137 = v163;

                  swift_bridgeObjectRelease();
                  if (v81)
                  {
                    uint64_t v181 = 0;
                    uint64_t v82 = (uint64_t)v177;
                    uint64_t v83 = (uint64_t)v175;
                    id v27 = v180;
                    goto LABEL_54;
                  }
                }
                uint64_t v22 = (uint64_t)v172;
                goto LABEL_107;
              }
              char v114 = sub_1001057F8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v114)
              {
LABEL_91:
                uint64_t v23 = v171;
                uint64_t v24 = v173;
                goto LABEL_104;
              }
              uint64_t v115 = ~v107;
              while (1)
              {
                unint64_t v108 = (v108 + 1) & v115;
                if (((*(void *)&v105[((v108 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v108) & 1) == 0) {
                  break;
                }
                uint64_t v116 = sub_100104B78();
                uint64_t v118 = v117;
                if (v116 == sub_100104B78() && v118 == v119) {
                  goto LABEL_103;
                }
                char v121 = sub_1001057F8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v121) {
                  goto LABEL_91;
                }
              }
LABEL_102:
              id v122 = v163;

              swift_bridgeObjectRelease();
              uint64_t v23 = v171;
              uint64_t v22 = (uint64_t)v172;
              uint64_t v24 = v173;
              uint64_t v19 = v181;
              unint64_t isUniquelyReferenced_nonNull_native = v179;
LABEL_107:
              id v27 = v180;
            }
            else
            {

              swift_bridgeObjectRelease();
              uint64_t v22 = (uint64_t)v172;
              uint64_t v24 = v173;
              uint64_t v19 = v181;
              unint64_t isUniquelyReferenced_nonNull_native = v179;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v22 = (uint64_t)v172;
          }
LABEL_108:
          sub_1000DE488(v24, _s10VisitAssetC9VisitDataVMa);
          goto LABEL_34;
        }
      }
      goto LABEL_8;
    }
    if (v31 == 7) {
      break;
    }
LABEL_8:

LABEL_9:
    if (isUniquelyReferenced_nonNull_native == v166)
    {

      swift_bridgeObjectRelease();
      uint64_t v146 = (uint64_t)v177;
      uint64_t v147 = v156;
      uint64_t v148 = (uint64_t)v175;
      uint64_t v149 = v154;
LABEL_131:
      sub_10003A1EC((uint64_t)v149);
      sub_10003A1EC((uint64_t)v147);
      sub_10003A1EC(v148);
      sub_10003A1EC(v146);
      return;
    }
  }
  id v32 = [v27 assetMetaData];
  if (!v32)
  {
    (*v152)(v22, 1, 1, v23);
LABEL_120:

    sub_100012510(v22, &qword_100150400);
    goto LABEL_9;
  }
  uint64_t v33 = v32;
  uint64_t v34 = sub_100103848();
  unint64_t v36 = v35;

  sub_1000F8B98(v22);
  sub_100010378(v34, v36);
  if ((*v158)(v22, 1, v23) == 1) {
    goto LABEL_120;
  }
  uint64_t v37 = (uint64_t)v157;
  sub_1000F066C(v22, (uint64_t)v157, _s10VisitAssetC9VisitDataVMa);
  uint64_t v38 = sub_1000F571C(v37);
  if (!v39)
  {
    sub_1000DE488(v37, _s10VisitAssetC9VisitDataVMa);
    goto LABEL_8;
  }
  uint64_t v40 = (void *)v38;
  unsigned int v41 = v39;
  uint64_t v181 = v19;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v41;
  sub_10001086C(v40);
  uint64_t v182 = v41;
  sub_10003A1EC((uint64_t)v154);
  id v43 = [v27 objectID];
  uint64_t v44 = (id *)v178;
  swift_beginAccess();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_1000EFBDC;
  *(void *)(v45 + 24) = v42;
  sub_10003A1EC((uint64_t)v156);
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v184 = *v44;
  uint64_t v47 = v184;
  *uint64_t v44 = (id)0x8000000000000000;
  unint64_t v49 = sub_10000BA18(v40);
  uint64_t v50 = v47[2];
  BOOL v51 = (v48 & 1) == 0;
  uint64_t v52 = v50 + v51;
  if (!__OFADD__(v50, v51))
  {
    char v53 = v48;
    if (v47[3] >= v52)
    {
      if ((v46 & 1) == 0)
      {
        sub_10000F770();
        uint64_t v47 = v184;
      }
    }
    else
    {
      sub_10000D4E8(v52, v46);
      uint64_t v47 = v184;
      unint64_t v54 = sub_10000BA18(v40);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_139;
      }
      unint64_t v49 = v54;
    }
    uint64_t v138 = v178;
    *unint64_t v178 = (unint64_t)v47;
    swift_bridgeObjectRelease();
    uint64_t v139 = (void *)*v138;
    uint64_t v140 = swift_bridgeObjectRetain();
    if ((v53 & 1) == 0)
    {
      uint64_t v141 = (*(uint64_t (**)(uint64_t))(v45 + 16))(v140);
      v139[(v49 >> 6) + 8] |= 1 << v49;
      *(void *)(v139[6] + 8 * v49) = v40;
      uint64_t v142 = (uint64_t *)(v139[7] + 16 * v49);
      uint64_t *v142 = v141;
      v142[1] = v143;
      uint64_t v144 = v139[2];
      BOOL v28 = __OFADD__(v144, 1);
      uint64_t v145 = v144 + 1;
      if (v28) {
        goto LABEL_138;
      }
      v139[2] = v145;
      sub_10001086C(v40);
    }
    swift_bridgeObjectRelease();
    sub_1000AD4FC(&v184, v43);
    swift_endAccess();

    sub_10001087C(v40);
    sub_10001087C(v40);

    sub_1000DE488((uint64_t)v157, _s10VisitAssetC9VisitDataVMa);
    uint64_t v156 = sub_1000EFBD8;
    uint64_t v154 = sub_1000EFBDC;
    uint64_t v153 = v42;
    uint64_t v155 = v45;
    uint64_t v23 = v171;
    uint64_t v22 = (uint64_t)v172;
    uint64_t v19 = v181;
    unint64_t isUniquelyReferenced_nonNull_native = v179;
    goto LABEL_9;
  }
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  sub_100105878();
  __break(1u);
}

id sub_1000E7D28(void *a1)
{
  id v1 = a1;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1001055E8()) {
    sub_100057DBC((unint64_t)_swiftEmptyArrayStorage);
  }
  return v1;
}

uint64_t sub_1000E7D90(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

Swift::Int sub_1000E7E54(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v135 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v4 = *(void *)(v135 - 8);
  uint64_t v5 = __chkstk_darwin(v135);
  uint64_t v125 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v136 = (uint64_t)&v120 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v132 = (uint64_t)&v120 - v10;
  __chkstk_darwin(v9);
  uint64_t v133 = (uint64_t)&v120 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_1001057B8(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_138;
    }
    if (v12) {
      return sub_1000E9FA8(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_146;
  }
  Swift::Int v121 = result;
  uint64_t v129 = v4;
  if (v12 < 2)
  {
    long long v18 = _swiftEmptyArrayStorage;
    unint64_t v127 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v120 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      uint64_t v113 = v18;
      if (v20 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_133;
          }
          if (!v114) {
            goto LABEL_145;
          }
          double v116 = v113[2 * v115 + 4];
          double v117 = v113[2 * v20 + 3];
          sub_1000EA878(v114 + *(void *)(v129 + 72) * *(void *)&v116, v114 + *(void *)(v129 + 72) * *(void *)&v113[2 * v20 + 2], v114 + *(void *)(v129 + 72) * *(void *)&v117, v127);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v117 < *(uint64_t *)&v116) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_100077E78((uint64_t)v113);
          }
          if (v115 >= *((void *)v113 + 2)) {
            goto LABEL_135;
          }
          uint64_t v118 = &v113[2 * v115 + 4];
          *uint64_t v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *((void *)v113 + 2);
          if (v20 > v119) {
            goto LABEL_136;
          }
          memmove(&v113[2 * v20 + 2], &v113[2 * v20 + 4], 16 * (v119 - v20));
          *((void *)v113 + 2) = v119 - 1;
          unint64_t v20 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v120[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_100104D78();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v120 = (double *)v16;
    unint64_t v127 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  long long v18 = _swiftEmptyArrayStorage;
  uint64_t v128 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v126 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v30 = v19 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v24 = *(void *)(v129 + 72);
      uint64_t v25 = *a1 + v24 * v22;
      uint64_t v138 = v24;
      sub_1000DE3A4(v25, v133, type metadata accessor for InsightsDataManager.TopAssetCategory);
      Swift::Int v137 = v12;
      uint64_t v26 = v132;
      sub_1000DE3A4(v23 + v24 * v21, v132, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v27 = *(int *)(v135 + 24);
      uint64_t v28 = v133;
      Swift::Int v134 = *(void *)(v133 + v27);
      Swift::Int v131 = *(void *)(v26 + v27);
      uint64_t v29 = v26;
      Swift::Int v12 = v137;
      sub_1000DE488(v29, type metadata accessor for InsightsDataManager.TopAssetCategory);
      sub_1000DE488(v28, type metadata accessor for InsightsDataManager.TopAssetCategory);
      Swift::Int v30 = v21 + 2;
      uint64_t v130 = v23;
      if (v21 + 2 < v12)
      {
        id v122 = v18;
        uint64_t v123 = v2;
        uint64_t v31 = v138 * v22;
        uint64_t v32 = v23;
        Swift::Int v33 = v138 * v30;
        while (1)
        {
          Swift::Int v34 = v30;
          uint64_t v35 = v133;
          int v36 = v131 < v134;
          sub_1000DE3A4(v32 + v33, v133, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v37 = v132;
          sub_1000DE3A4(v32 + v31, v132, type metadata accessor for InsightsDataManager.TopAssetCategory);
          int v38 = *(void *)(v37 + *(int *)(v135 + 24)) >= *(void *)(v35 + *(int *)(v135 + 24));
          sub_1000DE488(v37, type metadata accessor for InsightsDataManager.TopAssetCategory);
          sub_1000DE488(v35, type metadata accessor for InsightsDataManager.TopAssetCategory);
          if (v36 == v38) {
            break;
          }
          ++v30;
          v32 += v138;
          if (v137 == v34 + 1)
          {
            Swift::Int v12 = v137;
            Swift::Int v30 = v137;
            a1 = v128;
            long long v18 = v122;
            uint64_t v2 = v123;
            goto LABEL_23;
          }
        }
        a1 = v128;
        long long v18 = v122;
        uint64_t v2 = v123;
        Swift::Int v12 = v137;
LABEL_23:
        uint64_t v23 = v130;
      }
      Swift::Int v21 = v126;
      if (v131 < v134)
      {
        if (v30 < v126) {
          goto LABEL_139;
        }
        if (v126 < v30)
        {
          id v122 = v18;
          uint64_t v123 = v2;
          uint64_t v39 = 0;
          uint64_t v40 = v138;
          uint64_t v41 = v138 * (v30 - 1);
          Swift::Int v42 = v30 * v138;
          Swift::Int v43 = v126;
          uint64_t v44 = v126 * v138;
          do
          {
            if (v43 != v30 + v39 - 1)
            {
              if (!v23) {
                goto LABEL_144;
              }
              sub_1000F066C(v23 + v44, v125, type metadata accessor for InsightsDataManager.TopAssetCategory);
              if (v44 < v41 || v23 + v44 >= (unint64_t)(v23 + v42))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v44 != v41)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1000F066C(v125, v23 + v41, type metadata accessor for InsightsDataManager.TopAssetCategory);
              uint64_t v23 = v130;
              uint64_t v40 = v138;
            }
            ++v43;
            --v39;
            v41 -= v40;
            v42 -= v40;
            v44 += v40;
          }
          while (v43 < v30 + v39);
          long long v18 = v122;
          uint64_t v2 = v123;
          a1 = v128;
          Swift::Int v21 = v126;
          Swift::Int v12 = v137;
        }
      }
    }
    if (v30 < v12)
    {
      if (__OFSUB__(v30, v21)) {
        goto LABEL_137;
      }
      if (v30 - v21 < v121) {
        break;
      }
    }
LABEL_56:
    if (v30 < v21) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v134 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v18 = sub_100077C08(0, *((void *)v18 + 2) + 1, 1, (uint64_t)v18);
    }
    unint64_t v63 = *((void *)v18 + 2);
    unint64_t v62 = *((void *)v18 + 3);
    unint64_t v20 = v63 + 1;
    if (v63 >= v62 >> 1) {
      long long v18 = sub_100077C08((double *)(v62 > 1), v63 + 1, 1, (uint64_t)v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v64 = v18 + 4;
    uint64_t v65 = &v18[2 * v63 + 4];
    Swift::Int v66 = v134;
    *(void *)uint64_t v65 = v21;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v20 - 1;
        if (v20 >= 4)
        {
          os_log_type_t v72 = &v64[2 * v20];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_121;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_122;
          }
          unint64_t v79 = v20 - 2;
          uint64_t v80 = &v64[2 * v20 - 4];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_124;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_127;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[2 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_131;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v96 = *((void *)v18 + 4);
            uint64_t v97 = *((void *)v18 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_87;
          }
          uint64_t v69 = *((void *)v18 + 4);
          uint64_t v68 = *((void *)v18 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_123;
        }
        unint64_t v79 = v20 - 2;
        id v85 = &v64[2 * v20 - 4];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_126;
        }
        uint64_t v91 = &v64[2 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_129;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_130;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_93:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v90) {
          goto LABEL_125;
        }
        uint64_t v98 = &v64[2 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_128;
        }
        if (v101 < v89) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v128) {
          goto LABEL_143;
        }
        uint64_t v107 = v18;
        unint64_t v108 = &v64[2 * v106];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = &v64[2 * v67];
        double v111 = v110[1];
        sub_1000EA878(*v128 + *(void *)(v129 + 72) * *(void *)v108, *v128 + *(void *)(v129 + 72) * *(void *)v110, *v128 + *(void *)(v129 + 72) * *(void *)&v111, v127);
        if (v2) {
          goto LABEL_115;
        }
        if (*(uint64_t *)&v111 < v109) {
          goto LABEL_118;
        }
        if (v67 > *((void *)v107 + 2)) {
          goto LABEL_119;
        }
        *(void *)unint64_t v108 = v109;
        v64[2 * v106 + 1] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v67 >= v112) {
          goto LABEL_120;
        }
        long long v18 = v107;
        unint64_t v20 = v112 - 1;
        memmove(&v64[2 * v67], v110 + 2, 16 * (v112 - 1 - v67));
        *((void *)v107 + 2) = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    a1 = v128;
    Swift::Int v12 = v128[1];
    Swift::Int v19 = v134;
    if (v134 >= v12) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v21, v121)) {
    goto LABEL_140;
  }
  if (v21 + v121 >= v12) {
    Swift::Int v45 = v12;
  }
  else {
    Swift::Int v45 = v21 + v121;
  }
  if (v45 >= v21)
  {
    if (v30 != v45)
    {
      id v122 = v18;
      uint64_t v123 = v2;
      uint64_t v46 = *(void *)(v129 + 72);
      uint64_t v47 = v46 * (v30 - 1);
      uint64_t v130 = v46;
      Swift::Int v48 = v30 * v46;
      Swift::Int v124 = v45;
      do
      {
        uint64_t v50 = 0;
        Swift::Int v134 = v30;
        Swift::Int v131 = v48;
        while (1)
        {
          Swift::Int v137 = v21;
          uint64_t v51 = *a1;
          uint64_t v52 = v48 + v50 + *a1;
          uint64_t v53 = v133;
          sub_1000DE3A4(v52, v133, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v54 = v47;
          uint64_t v55 = v47 + v50 + v51;
          uint64_t v56 = v132;
          sub_1000DE3A4(v55, v132, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v57 = *(int *)(v135 + 24);
          uint64_t v138 = *(void *)(v53 + v57);
          uint64_t v58 = *(void *)(v56 + v57);
          sub_1000DE488(v56, type metadata accessor for InsightsDataManager.TopAssetCategory);
          sub_1000DE488(v53, type metadata accessor for InsightsDataManager.TopAssetCategory);
          if (v58 >= v138) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          Swift::Int v48 = v131;
          uint64_t v47 = v54;
          uint64_t v60 = v59 + v54 + v50;
          sub_1000F066C(v59 + v131 + v50, v136, type metadata accessor for InsightsDataManager.TopAssetCategory);
          swift_arrayInitWithTakeFrontToBack();
          sub_1000F066C(v136, v60, type metadata accessor for InsightsDataManager.TopAssetCategory);
          v50 -= v130;
          Swift::Int v21 = v137 + 1;
          Swift::Int v49 = v134;
          if (v134 == v137 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v49 = v134;
        uint64_t v47 = v54;
        Swift::Int v48 = v131;
LABEL_49:
        Swift::Int v30 = v49 + 1;
        v47 += v130;
        v48 += v130;
        Swift::Int v21 = v126;
      }
      while (v30 != v124);
      Swift::Int v30 = v124;
      long long v18 = v122;
      uint64_t v2 = v123;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1001055B8();
  __break(1u);
  return result;
}

Swift::Int sub_1000E8904(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100103978();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::Int v134 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v149 = (char *)&v129 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v144 = (char *)&v129 - v11;
  __chkstk_darwin(v10);
  uint64_t v145 = (char *)&v129 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_1001057B8(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_138;
    }
    if (v13) {
      return sub_1000EA26C(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_146;
  }
  uint64_t v147 = v4;
  Swift::Int v130 = result;
  Swift::Int v137 = (void *)v5;
  if (v13 < 2)
  {
    Swift::Int v19 = _swiftEmptyArrayStorage;
    unint64_t v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v129 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      if (v21 >= 2)
      {
        uint64_t v123 = *a1;
        do
        {
          unint64_t v124 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_133;
          }
          if (!v123) {
            goto LABEL_145;
          }
          double v125 = v19[2 * v124 + 4];
          double v126 = v19[2 * v21 + 3];
          sub_1000EADDC(v123 + v137[9] * *(void *)&v125, v123 + v137[9] * *(void *)&v19[2 * v21 + 2], v123 + v137[9] * *(void *)&v126, v136);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v126 < *(uint64_t *)&v125) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v19 = sub_100077E78((uint64_t)v19);
          }
          if (v124 >= *((void *)v19 + 2)) {
            goto LABEL_135;
          }
          unint64_t v127 = &v19[2 * v124 + 4];
          *unint64_t v127 = v125;
          v127[1] = v126;
          unint64_t v128 = *((void *)v19 + 2);
          if (v21 > v128) {
            goto LABEL_136;
          }
          memmove(&v19[2 * v21 + 2], &v19[2 * v21 + 4], 16 * (v128 - v21));
          *((void *)v19 + 2) = v128 - 1;
          unint64_t v21 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v129[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_100104D78();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v129 = (double *)v17;
    unint64_t v136 = v17 + v18;
  }
  unint64_t v20 = 0;
  uint64_t v142 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v143 = v5 + 16;
  uint64_t v152 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  Swift::Int v19 = _swiftEmptyArrayStorage;
  uint64_t v148 = a1;
  while (1)
  {
    Swift::Int v22 = v20 + 1;
    uint64_t v135 = v20;
    if ((uint64_t)(v20 + 1) >= v13)
    {
      Swift::Int v33 = (void (*)(void, void, void))v20;
      Swift::Int v35 = (Swift::Int)(v20 + 1);
      a1 = v148;
    }
    else
    {
      uint64_t v23 = v147;
      Swift::Int v24 = *v148;
      uint64_t v25 = v137[9];
      uint64_t v26 = *v148 + v25 * (void)v22;
      uint64_t v151 = v25;
      Swift::Int v140 = v24;
      uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      v27(v145, v26, v147);
      Swift::Int v150 = v13;
      uint64_t v28 = v144;
      v27(v144, v24 + v25 * (void)v135, v23);
      uint64_t v29 = v145;
      LODWORD(v146) = sub_1001038E8();
      Swift::Int v30 = (void (*)(char *, uint64_t))v137[1];
      uint64_t v31 = v28;
      Swift::Int v13 = v150;
      v30(v31, v23);
      uint64_t v32 = v23;
      Swift::Int v33 = (void (*)(void, void, void))v135;
      v30(v29, v32);
      uint64_t v34 = v151;
      Swift::Int v35 = (Swift::Int)v33 + 2;
      if ((uint64_t)v33 + 2 < v13)
      {
        Swift::Int v131 = v19;
        uint64_t v132 = v2;
        uint64_t v141 = v151 * (void)v22;
        Swift::Int v36 = v140;
        Swift::Int v37 = v151 * v35;
        while (1)
        {
          Swift::Int v38 = v35;
          uint64_t v39 = v145;
          uint64_t v40 = v147;
          v27(v145, v36 + v37, v147);
          uint64_t v41 = v144;
          v27(v144, v36 + v141, v40);
          int v42 = sub_1001038E8();
          v30(v41, v40);
          v30(v39, v40);
          if ((v146 ^ v42)) {
            break;
          }
          Swift::Int v35 = v38 + 1;
          uint64_t v34 = v151;
          v36 += v151;
          if (v150 == v38 + 1)
          {
            Swift::Int v13 = v150;
            Swift::Int v35 = v150;
            Swift::Int v19 = v131;
            uint64_t v2 = v132;
            Swift::Int v33 = (void (*)(void, void, void))v135;
            goto LABEL_23;
          }
        }
        Swift::Int v19 = v131;
        uint64_t v2 = v132;
        Swift::Int v35 = v38;
        Swift::Int v33 = (void (*)(void, void, void))v135;
        Swift::Int v13 = v150;
        uint64_t v34 = v151;
      }
LABEL_23:
      a1 = v148;
      if (v146)
      {
        if (v35 < (uint64_t)v33) {
          goto LABEL_139;
        }
        if ((uint64_t)v33 < v35)
        {
          Swift::Int v131 = v19;
          uint64_t v132 = v2;
          uint64_t v43 = 0;
          uint64_t v44 = v34 * (v35 - 1);
          Swift::Int v45 = (Swift::Int)v33;
          Swift::Int v46 = v35 * v34;
          Swift::Int v47 = v45;
          uint64_t v48 = v45 * v34;
          Swift::Int v49 = v140;
          do
          {
            if (v47 != v35 + v43 - 1)
            {
              if (!v49) {
                goto LABEL_144;
              }
              Swift::Int v51 = v49 + v44;
              uint64_t v146 = (char *)*v152;
              ((void (*)(char *, Swift::Int, uint64_t))v146)(v134, v49 + v48, v147);
              if (v48 < v44 || v49 + v48 >= (unint64_t)(v49 + v46))
              {
                uint64_t v50 = v147;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v50 = v147;
                if (v48 != v44) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(Swift::Int, char *, uint64_t))v146)(v51, v134, v50);
              a1 = v148;
              Swift::Int v49 = v140;
              uint64_t v34 = v151;
            }
            ++v47;
            --v43;
            v44 -= v34;
            v46 -= v34;
            v48 += v34;
          }
          while (v47 < v35 + v43);
          Swift::Int v19 = v131;
          uint64_t v2 = v132;
          Swift::Int v33 = (void (*)(void, void, void))v135;
          Swift::Int v13 = v150;
        }
      }
    }
    if (v35 < v13)
    {
      if (__OFSUB__(v35, v33)) {
        goto LABEL_137;
      }
      if (v35 - (uint64_t)v33 < v130) {
        break;
      }
    }
LABEL_55:
    if (v35 < (uint64_t)v33) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v146 = (char *)v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      Swift::Int v19 = sub_100077C08(0, *((void *)v19 + 2) + 1, 1, (uint64_t)v19);
    }
    unint64_t v72 = *((void *)v19 + 2);
    unint64_t v71 = *((void *)v19 + 3);
    unint64_t v21 = v72 + 1;
    if (v72 >= v71 >> 1) {
      Swift::Int v19 = sub_100077C08((double *)(v71 > 1), v72 + 1, 1, (uint64_t)v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v73 = v19 + 4;
    uint64_t v74 = &v19[2 * v72 + 4];
    uint64_t v75 = v146;
    *(void *)uint64_t v74 = v33;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v81 = &v73[2 * v21];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_121;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_122;
          }
          unint64_t v88 = v21 - 2;
          uint64_t v89 = &v73[2 * v21 - 4];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_124;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_127;
          }
          if (v93 >= v84)
          {
            double v111 = &v73[2 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_131;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_92;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v105 = *((void *)v19 + 4);
            uint64_t v106 = *((void *)v19 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_86;
          }
          uint64_t v78 = *((void *)v19 + 4);
          uint64_t v77 = *((void *)v19 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_123;
        }
        unint64_t v88 = v21 - 2;
        uint64_t v94 = &v73[2 * v21 - 4];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_126;
        }
        uint64_t v100 = &v73[2 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_129;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_130;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_92:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v99) {
          goto LABEL_125;
        }
        uint64_t v107 = &v73[2 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_128;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        double v117 = v19;
        uint64_t v118 = &v73[2 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = &v73[2 * v76];
        double v121 = v120[1];
        sub_1000EADDC(v116 + v137[9] * *(void *)v118, v116 + v137[9] * *(void *)v120, v116 + v137[9] * *(void *)&v121, v136);
        if (v2) {
          goto LABEL_115;
        }
        if (*(uint64_t *)&v121 < v119) {
          goto LABEL_118;
        }
        if (v76 > *((void *)v117 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v118 = v119;
        v73[2 * v115 + 1] = v121;
        unint64_t v122 = *((void *)v117 + 2);
        if (v76 >= v122) {
          goto LABEL_120;
        }
        Swift::Int v19 = v117;
        unint64_t v21 = v122 - 1;
        memmove(&v73[2 * v76], v120 + 2, 16 * (v122 - 1 - v76));
        *((void *)v117 + 2) = v122 - 1;
        a1 = v148;
        if (v122 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = a1[1];
    unint64_t v20 = v146;
    if ((uint64_t)v146 >= v13) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v33, v130)) {
    goto LABEL_140;
  }
  if ((uint64_t)v33 + v130 >= v13) {
    Swift::Int v52 = v13;
  }
  else {
    Swift::Int v52 = (Swift::Int)v33 + v130;
  }
  if (v52 >= (uint64_t)v33)
  {
    if (v35 != v52)
    {
      Swift::Int v131 = v19;
      uint64_t v132 = v2;
      uint64_t v53 = v137[9];
      uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      uint64_t v139 = v53;
      uint64_t v54 = v53 * (v35 - 1);
      Swift::Int v55 = v35 * v53;
      uint64_t v56 = v147;
      Swift::Int v133 = v52;
      do
      {
        uint64_t v58 = 0;
        uint64_t v146 = (char *)v35;
        Swift::Int v140 = v55;
        uint64_t v141 = v54;
        while (1)
        {
          uint64_t v59 = *a1;
          Swift::Int v150 = v55 + v58;
          uint64_t v151 = (uint64_t)v33;
          Swift::Int v60 = v55 + v58 + v59;
          char v61 = v145;
          unint64_t v62 = v138;
          v138(v145, v60, v56);
          uint64_t v63 = v54 + v58 + v59;
          uint64_t v64 = a1;
          uint64_t v65 = v144;
          v62(v144, v63, v56);
          LOBYTE(v62) = sub_1001038E8();
          Swift::Int v66 = *v142;
          (*v142)(v65, v56);
          v66(v61, v56);
          if ((v62 & 1) == 0) {
            break;
          }
          uint64_t v67 = *v64;
          if (!*v64) {
            goto LABEL_142;
          }
          Swift::Int v55 = v140;
          uint64_t v54 = v141;
          uint64_t v68 = (char *)(v67 + v141 + v58);
          uint64_t v69 = *v152;
          uint64_t v56 = v147;
          (*v152)(v149, v67 + v140 + v58, v147);
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (uint64_t)v149, v56);
          v58 -= v139;
          Swift::Int v33 = (void (*)(void, void, void))(v151 + 1);
          uint64_t v57 = v146;
          a1 = v148;
          if (v146 == (char *)(v151 + 1)) {
            goto LABEL_48;
          }
        }
        uint64_t v57 = v146;
        uint64_t v56 = v147;
        a1 = v64;
        Swift::Int v55 = v140;
        uint64_t v54 = v141;
LABEL_48:
        Swift::Int v35 = (Swift::Int)(v57 + 1);
        v54 += v139;
        v55 += v139;
        Swift::Int v33 = (void (*)(void, void, void))v135;
      }
      while (v35 != v133);
      Swift::Int v35 = v133;
      Swift::Int v19 = v131;
      uint64_t v2 = v132;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1001055B8();
  __break(1u);
  return result;
}

Swift::Int sub_1000E93E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100103978();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v151 = (char *)&v131 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v146 = (char *)&v131 - v11;
  __chkstk_darwin(v10);
  uint64_t v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_1001057B8(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_1000EA558(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  Swift::Int v150 = a1;
  Swift::Int v133 = result;
  if (v13 < 2)
  {
    Swift::Int v19 = _swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          double v127 = v19[2 * v126 + 4];
          double v128 = v19[2 * v21 + 3];
          sub_1000EB390(v125 + v5[9] * *(void *)&v127, v125 + v5[9] * *(void *)&v19[2 * v21 + 2], v125 + v5[9] * *(void *)&v128, v138);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v128 < *(uint64_t *)&v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v19 = sub_100077E78((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[2 * v126 + 4];
          *uint64_t v129 = v127;
          v129[1] = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[2 * v21 + 2], &v19[2 * v21 + 4], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_100104D78();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = (double *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  Swift::Int v19 = _swiftEmptyArrayStorage;
  uint64_t v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = sub_100104A28();
    Swift::Int v32 = v13;
    Swift::Int v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      Swift::Int v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_100104A28();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          Swift::Int v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      Swift::Int v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      Swift::Int v47 = v150;
      goto LABEL_38;
    }
    Swift::Int v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    Swift::Int v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        Swift::Int v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        Swift::Int v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    Swift::Int v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      Swift::Int v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      Swift::Int v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          unint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          Swift::Int v66 = v146;
          v64(v146, v65, v53);
          sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v60) = sub_100104A28();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          Swift::Int v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        Swift::Int v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      Swift::Int v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      Swift::Int v19 = sub_100077C08(0, *((void *)v19 + 2) + 1, 1, (uint64_t)v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      Swift::Int v19 = sub_100077C08((double *)(v73 > 1), v74 + 1, 1, (uint64_t)v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v75 = v19 + 4;
    unint64_t v76 = &v19[2 * v74 + 4];
    Swift::Int v77 = v148;
    *(void *)unint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[2 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[2 * v21 - 4];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            uint64_t v113 = &v75[2 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[2 * v21 - 4];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        uint64_t v102 = &v75[2 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[2 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[2 * v117];
        uint64_t v120 = *(void *)v119;
        double v121 = &v75[2 * v78];
        double v122 = v121[1];
        sub_1000EB390(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * *(void *)&v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (*(uint64_t *)&v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        v75[2 * v117 + 1] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        Swift::Int v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[2 * v78], v121 + 2, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1001055B8();
  __break(1u);
  return result;
}

uint64_t sub_1000E9FA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a1;
  uint64_t v41 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v7 = __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v37 = (uint64_t)&v32 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v36 = (uint64_t)&v32 - v13;
  uint64_t v40 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v40 - 1);
    uint64_t v38 = v14;
    uint64_t v16 = v14 * v40;
    Swift::Int v35 = a4;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v34;
    uint64_t v39 = v16;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v16 + v17 + *a4;
      uint64_t v21 = v36;
      sub_1000DE3A4(v20, v36, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v22 = v15 + v17 + v19;
      uint64_t v23 = v15;
      uint64_t v24 = v37;
      sub_1000DE3A4(v22, v37, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v25 = *(int *)(v41 + 24);
      uint64_t v43 = *(void *)(v21 + v25);
      uint64_t v26 = *(void *)(v24 + v25);
      uint64_t v27 = v24;
      uint64_t v15 = v23;
      sub_1000DE488(v27, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v28 = v21;
      uint64_t v16 = v39;
      uint64_t result = sub_1000DE488(v28, type metadata accessor for InsightsDataManager.TopAssetCategory);
      BOOL v29 = v26 < v43;
      a4 = v35;
      if (!v29)
      {
LABEL_4:
        uint64_t v15 = v23 + v38;
        v16 += v38;
        if (++v40 == v33) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v30 = *v35;
      if (!*v35) {
        break;
      }
      uint64_t v31 = v30 + v23 + v17;
      sub_1000F066C(v30 + v16 + v17, v42, type metadata accessor for InsightsDataManager.TopAssetCategory);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1000F066C(v42, v31, type metadata accessor for InsightsDataManager.TopAssetCategory);
      v17 -= v38;
      if (v40 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EA26C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = sub_100103978();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v31 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v31 - v14;
  uint64_t v41 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    Swift::Int v35 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v36 = a4;
    uint64_t v37 = v15;
    uint64_t v42 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v17 * (v41 - 1);
    uint64_t v40 = v17;
    uint64_t v45 = v17 * v41;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v44 = v33;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v45 + v18 + *a4;
      uint64_t v21 = v38;
      uint64_t v22 = v35;
      v35(v38, v20, v7);
      uint64_t v23 = v7;
      uint64_t v24 = v39;
      v22(v39, v46 + v18 + v19, v23);
      LOBYTE(v19) = sub_1001038E8();
      uint64_t v25 = *v34;
      uint64_t v26 = v24;
      uint64_t v7 = v23;
      (*v34)(v26, v23);
      uint64_t v27 = v21;
      a4 = v36;
      uint64_t result = v25(v27, v23);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v46 += v40;
        v45 += v40;
        if (++v41 == v32) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      BOOL v29 = (char *)(v28 + v46 + v18);
      uint64_t v30 = *v42;
      (*v42)(v43, v28 + v45 + v18, v23);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v30(v29, (uint64_t)v43, v23);
      v18 -= v40;
      if (v41 == ++v44) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EA558(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_100103978();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      uint64_t v21 = v36;
      uint64_t v22 = v33;
      v33(v36, v20, v7);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
      LOBYTE(v22) = sub_100104A28();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EA878(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v51 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v44 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v18;
      unint64_t v52 = a4 + v18;
      unint64_t v54 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v13;
        unint64_t v48 = a4;
        unint64_t v45 = a1;
        uint64_t v46 = v8;
        uint64_t v34 = (uint64_t)v50;
        do
        {
          unint64_t v49 = a3 + v33;
          sub_1000DE3A4(v31 + v33, v34, type metadata accessor for InsightsDataManager.TopAssetCategory);
          unint64_t v35 = a2 + v33;
          uint64_t v36 = v51;
          sub_1000DE3A4(a2 + v33, v51, type metadata accessor for InsightsDataManager.TopAssetCategory);
          uint64_t v37 = *(int *)(v8 + 24);
          uint64_t v38 = *(void *)(v34 + v37);
          uint64_t v39 = *(void *)(v36 + v37);
          sub_1000DE488(v36, type metadata accessor for InsightsDataManager.TopAssetCategory);
          sub_1000DE488(v34, type metadata accessor for InsightsDataManager.TopAssetCategory);
          if (v39 >= v38)
          {
            unint64_t v42 = v52;
            v52 += v33;
            unint64_t v40 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v35 = a2;
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v35 = a2;
            }
          }
          else
          {
            unint64_t v40 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              uint64_t v8 = v46;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v48;
            }
            else
            {
              uint64_t v8 = v46;
              unint64_t v41 = v48;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v54 += v33;
          }
          unint64_t v31 = v52;
          if (v52 <= v41) {
            break;
          }
          a2 = v35;
          a3 = v40;
        }
        while (v35 > v45);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v47 = a3;
      uint64_t v20 = (uint64_t)v50;
      do
      {
        sub_1000DE3A4(a2, v20, type metadata accessor for InsightsDataManager.TopAssetCategory);
        uint64_t v21 = v51;
        sub_1000DE3A4(a4, v51, type metadata accessor for InsightsDataManager.TopAssetCategory);
        uint64_t v22 = *(int *)(v8 + 24);
        uint64_t v23 = *(void *)(v20 + v22);
        uint64_t v24 = *(void *)(v21 + v22);
        sub_1000DE488(v21, type metadata accessor for InsightsDataManager.TopAssetCategory);
        sub_1000DE488(v20, type metadata accessor for InsightsDataManager.TopAssetCategory);
        unint64_t v25 = v54;
        if (v24 >= v23)
        {
          unint64_t v29 = v53 + v13;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 != v53) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v53 = v29;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v13;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v28 = v47;
          }
          else
          {
            unint64_t v28 = v47;
            if (v54 == a2) {
              unint64_t v25 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v54 = v25 + v13;
        a4 = v53;
        if (v53 >= v49) {
          break;
        }
        a2 = v26;
      }
      while (v26 < v28);
    }
LABEL_66:
    sub_100077D04(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000EADDC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v61 = sub_100103978();
  uint64_t v8 = *(void *)(v61 - 8);
  uint64_t v9 = __chkstk_darwin(v61);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v51 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v64 = a1;
  unint64_t v63 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v18;
      unint64_t v62 = a4 + v18;
      unint64_t v64 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v58 = v8 + 16;
        unint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v55 = v36;
        uint64_t v37 = -v13;
        unint64_t v52 = a4;
        uint64_t v53 = -v13;
        uint64_t v56 = (void (*)(void, void, void))a1;
        uint64_t v38 = v61;
        do
        {
          unint64_t v57 = a3 + v37;
          unint64_t v39 = a3;
          unint64_t v40 = v59;
          unint64_t v41 = v55;
          v55(v59, v34 + v37, v38);
          unint64_t v42 = a2 + v37;
          uint64_t v43 = v60;
          v41(v60, v42, v38);
          LOBYTE(v41) = sub_1001038E8();
          uint64_t v44 = *v54;
          (*v54)(v43, v38);
          v44(v40, v38);
          if (v41)
          {
            uint64_t v37 = v53;
            a3 = v57;
            if (v39 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
              unint64_t v47 = v56;
            }
            else
            {
              BOOL v45 = v39 == a2;
              unint64_t v46 = v52;
              unint64_t v47 = v56;
              if (!v45) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v64 += v37;
          }
          else
          {
            unint64_t v48 = v62;
            v62 += v53;
            a3 = v57;
            BOOL v49 = v39 < v48 || v57 >= v48;
            uint64_t v37 = v53;
            if (v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v46 = v52;
              unint64_t v47 = v56;
            }
            else
            {
              unint64_t v47 = v56;
              if (v39 != v48) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v46 = v52;
            }
          }
          unint64_t v34 = v62;
          if (v62 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > (unint64_t)v47);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v57 = a4 + v17;
    unint64_t v62 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(void, void, void))(v8 + 16);
      uint64_t v58 = v8 + 16;
      uint64_t v55 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v56 = v20;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v59;
        unint64_t v24 = a4;
        uint64_t v25 = v61;
        unint64_t v26 = (void (*)(char *, unint64_t, uint64_t))v56;
        v56(v59, a2, v61);
        uint64_t v27 = v60;
        v26(v60, v24, v25);
        LOBYTE(v24) = sub_1001038E8();
        unint64_t v28 = *(void (**)(char *, uint64_t))v55;
        (*(void (**)(char *, uint64_t))v55)(v27, v25);
        v28(v23, v25);
        unint64_t v29 = v64;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v30 = a2 + v21;
          if (v64 < a2 || v64 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v32 = v63 + v21;
          if (v64 < v63 || v64 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 != v63) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v63 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v64 = v29 + v13;
        a4 = v63;
        if (v63 >= v57) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_100077D1C(&v64, &v63, (uint64_t *)&v62);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000EB390(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_100103978();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        unint64_t v39 = v55;
        unint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          unint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v41) = sub_100104A28();
          BOOL v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      unint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        unint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        unint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_1000F0344((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
        char v27 = sub_100104A28();
        unint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_100077D1C(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

uint64_t sub_1000EB9C4(void (*a1)(_OWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v32)(_OWORD *__return_ptr, char *);
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;

  unint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v5 = _s14descr100137F61O4YearVMa(0);
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E0C(&qword_100153A60);
  uint64_t result = sub_1001055F8();
  uint64_t v9 = (void *)result;
  int64_t v10 = 0;
  unint64_t v35 = a3;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v12 = a3 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v29 = v12;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v17 = result + 64;
  if ((v15 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    uint64_t v23 = *(void *)(*(void *)(v35 + 48) + 8 * i);
    sub_1000DE3A4(*(void *)(v35 + 56) + *(void *)(v31 + 72) * i, (uint64_t)v7, _s14descr100137F61O4YearVMa);
    v32(v34, v7);
    if (v3)
    {
      swift_release();
      sub_1000DE488((uint64_t)v7, _s14descr100137F61O4YearVMa);
      return (uint64_t)v9;
    }
    uint64_t result = sub_1000DE488((uint64_t)v7, _s14descr100137F61O4YearVMa);
    *(void *)(v17 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v9[6] + 8 * i) = v23;
    unint64_t v24 = (_OWORD *)(v9[7] + 32 * i);
    long long v25 = v34[1];
    _OWORD *v24 = v34[0];
    v24[1] = v25;
    uint64_t v26 = v9[2];
    BOOL v20 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v20)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v27;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v20 = __OFADD__(v10++, 1);
    if (v20) {
      goto LABEL_27;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_15:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 2;
  if (v10 + 2 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v10 + 3;
  if (v10 + 3 >= v30) {
    return (uint64_t)v9;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v10 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v30) {
      return (uint64_t)v9;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1000EBCA4(uint64_t a1)
{
  uint64_t v2 = _s14descr100137F61O5MonthVMa(0);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E0C(&qword_100153A60);
  uint64_t result = sub_1001055F8();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v31 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  int64x2_t v28 = vdupq_n_s64((unint64_t)_swiftEmptyArrayStorage);
  uint64_t v27 = result + 64;
  if ((v10 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v31 + 48) + 8 * i);
    sub_1000DE3A4(*(void *)(v31 + 56) + *(void *)(v29 + 72) * i, (uint64_t)v4, _s14descr100137F61O5MonthVMa);
    uint64_t v18 = sub_100103AF8();
    uint64_t v19 = *v4;
    uint64_t result = sub_1000DE488((uint64_t)v4, _s14descr100137F61O5MonthVMa);
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v17;
    uint64_t v20 = v6[7] + 32 * i;
    *(void *)uint64_t v20 = v18;
    *(void *)(v20 + 8) = v19;
    *(int64x2_t *)(v20 + 16) = v28;
    uint64_t v21 = v6[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v23;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v26) {
        return (uint64_t)v6;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v26) {
          return (uint64_t)v6;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v7);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v7 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1000EBF7C(uint64_t a1)
{
  sub_100007E0C(&qword_100153A60);
  uint64_t result = (void *)sub_1001055F8();
  int64_t v3 = 0;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  int64x2_t v9 = vdupq_n_s64((unint64_t)_swiftEmptyArrayStorage);
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v3 << 6))
  {
    uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    *(void *)((char *)result + ((i >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << i;
    *(void *)(result[6] + 8 * i) = v15;
    uint64_t v17 = result[7] + 32 * i;
    *(void *)uint64_t v17 = 1;
    *(void *)(v17 + 8) = v16;
    *(int64x2_t *)(v17 + 16) = v9;
    uint64_t v18 = result[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v20;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        return result;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          return result;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8) {
    return result;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      return result;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1000EC118(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1000B7C8C(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_100103978() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_100105628();
  __break(1u);
  return result;
}

void *sub_1000EC2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v21[0] = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a2 + 56;
    do
    {
      Swift::UInt v7 = *(unsigned __int8 *)(a1 + 32 + v5++);
      sub_1001058D8();
      sub_1001058E8(v7);
      Swift::Int v8 = sub_100105928();
      uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v10 = v8 & ~v9;
      if ((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
      {
        uint64_t v11 = *(void *)(v2 + 48);
        if (*(unsigned __int8 *)(v11 + v10) == v7)
        {
LABEL_9:
          v21[1] = v5;
          unint64_t v12 = (unint64_t)(63 - v9) >> 6;
          size_t v13 = 8 * v12;
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v12 < 0x81
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            unint64_t v16 = &v20[-v15];
            memcpy(&v20[-v15], (const void *)(v2 + 56), v13);
            Swift::Int v17 = sub_1000EC550((Swift::Int)v16, v12, v2, v10, v21);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v18 = (void *)swift_slowAlloc();
            memcpy(v18, (const void *)(v2 + 56), v13);
            Swift::Int v17 = sub_1000EC550((Swift::Int)v18, v12, v2, v10, v21);
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return (void *)v17;
        }
        while (1)
        {
          unint64_t v10 = (v10 + 1) & ~v9;
          if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v11 + v10) == v7) {
            goto LABEL_9;
          }
        }
      }
    }
    while (v5 != v4);
  }
  return (void *)v2;
}

Swift::Int sub_1000EC550(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v10 = *a5;
  unint64_t v9 = a5[1];
  unint64_t v11 = *(void *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_2:
    swift_retain();
    return sub_1000EC700(v6, a2, v8, a3);
  }
  else
  {
    uint64_t v13 = a3 + 56;
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (v9 >= v11) {
        goto LABEL_20;
      }
      Swift::UInt v14 = *(unsigned __int8 *)(v10 + v9 + 32);
      a5[1] = v9 + 1;
      sub_1001058D8();
      sub_1001058E8(v14);
      uint64_t result = sub_100105928();
      uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v16 = result & ~v15;
      uint64_t v17 = v16 >> 6;
      uint64_t v18 = 1 << v16;
      if (((1 << v16) & *(void *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        uint64_t v19 = *(void *)(a3 + 48);
        if (*(unsigned __int8 *)(v19 + v16) == v14)
        {
LABEL_15:
          uint64_t v22 = v17;
          unint64_t v23 = v6[v17];
          v6[v22] = v23 & ~v18;
          if ((v18 & v23) != 0)
          {
            if (__OFSUB__(v8--, 1)) {
              goto LABEL_21;
            }
            if (!v8) {
              return (Swift::Int)&_swiftEmptySetSingleton;
            }
          }
        }
        else
        {
          for (unint64_t i = v16 + 1; ; unint64_t i = v21 + 1)
          {
            unint64_t v21 = i & ~v15;
            if (((*(void *)(v13 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v19 + v21) == v14)
            {
              uint64_t v17 = v21 >> 6;
              uint64_t v18 = 1 << v21;
              goto LABEL_15;
            }
          }
        }
      }
      uint64_t v10 = *a5;
      unint64_t v9 = a5[1];
      unint64_t v11 = *(void *)(*a5 + 16);
      if (v9 == v11) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EC700(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100007E0C(&qword_10014ED20);
  uint64_t result = sub_100105488();
  unint64_t v9 = (unsigned char *)result;
  int64x2_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v14);
    sub_1001058D8();
    sub_1001058E8(v18);
    uint64_t result = sub_100105928();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*((void *)v9 + 6) + v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000EC974(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t v4 = 0;
      uint64_t v5 = a1 + 32;
      uint64_t v6 = a2 + 56;
      do
      {
        if (*(void *)(a2 + 16))
        {
          Swift::UInt v7 = *(unsigned __int8 *)(v5 + v4);
          sub_1001058D8();
          sub_1001058E8(v7);
          Swift::Int v8 = sub_100105928();
          uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v10 = v8 & ~v9;
          if ((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
          {
            uint64_t v11 = *(void *)(a2 + 48);
            if (*(unsigned __int8 *)(v11 + v10) == v7) {
              return 0;
            }
            uint64_t v12 = ~v9;
            while (1)
            {
              unint64_t v10 = (v10 + 1) & v12;
              if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v11 + v10) == v7) {
                return 0;
              }
            }
          }
        }
        ++v4;
      }
      while (v4 != v2);
    }
  }
  return 1;
}

unint64_t sub_1000ECA78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  unsigned __int8 v7 = sub_1000EDB78();
  if (v7 == 9) {
    goto LABEL_14;
  }
  unsigned __int8 v9 = v7;
  uint64_t v10 = v8;
  uint64_t v11 = (void *)*a5;
  unint64_t result = sub_10000B9AC(v7);
  uint64_t v14 = v11[2];
  BOOL v15 = (v13 & 1) == 0;
  BOOL v16 = __OFADD__(v14, v15);
  uint64_t v17 = v14 + v15;
  if (v16) {
    goto LABEL_25;
  }
  char v18 = v13;
  if (v11[3] < v17)
  {
    sub_10000CA58(v17, a4 & 1);
    unint64_t result = sub_10000B9AC(v9);
    if ((v18 & 1) == (v19 & 1)) {
      goto LABEL_7;
    }
LABEL_5:
    unint64_t result = sub_100105878();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    unint64_t v23 = result;
    sub_10000F164();
    unint64_t result = v23;
    unint64_t v20 = (void *)*a5;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
LABEL_7:
  unint64_t v20 = (void *)*a5;
  if (v18)
  {
LABEL_8:
    unint64_t v21 = (void *)(v20[7] + 8 * result);
    uint64_t v22 = *v21 + v10;
    if (!__OFADD__(*v21, v10)) {
      goto LABEL_13;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_12:
  v20[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(v20[6] + result) = v9;
  *(void *)(v20[7] + 8 * result) = v10;
  uint64_t v24 = v20[2];
  unint64_t v21 = v20 + 2;
  uint64_t v22 = v24 + 1;
  if (!__OFADD__(v24, 1))
  {
LABEL_13:
    *unint64_t v21 = v22;
    unsigned __int8 v25 = sub_1000EDB78();
    if (v25 == 9)
    {
LABEL_14:
      swift_release();
      swift_bridgeObjectRelease();
      sub_10002CFC0();
      return swift_release();
    }
    unsigned __int8 v9 = v25;
    uint64_t v10 = v26;
    char v18 = 1;
    while (1)
    {
      uint64_t v31 = (void *)*a5;
      unint64_t result = sub_10000B9AC(v9);
      uint64_t v33 = v31[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v16 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v16) {
        goto LABEL_25;
      }
      a4 = v32;
      if (v31[3] < v35)
      {
        sub_10000CA58(v35, 1);
        unint64_t result = sub_10000B9AC(v9);
        if ((a4 & 1) != (v36 & 1)) {
          goto LABEL_5;
        }
      }
      uint64_t v37 = (void *)*a5;
      if (a4)
      {
        uint64_t v27 = (void *)(v37[7] + 8 * result);
        uint64_t v29 = *v27 + v10;
        if (__OFADD__(*v27, v10)) {
          goto LABEL_24;
        }
      }
      else
      {
        v37[(result >> 6) + 8] |= 1 << result;
        *(unsigned char *)(v37[6] + result) = v9;
        *(void *)(v37[7] + 8 * result) = v10;
        uint64_t v28 = v37[2];
        uint64_t v27 = v37 + 2;
        uint64_t v29 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          break;
        }
      }
      *uint64_t v27 = v29;
      unsigned __int8 v9 = sub_1000EDB78();
      uint64_t v10 = v30;
      if (v9 == 9) {
        goto LABEL_14;
      }
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000ECD3C(uint64_t a1)
{
  uint64_t v156 = sub_100007E0C(&qword_100153988);
  uint64_t v136 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v162 = (uint64_t)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007E0C(&qword_100153998);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v152 = (uint64_t)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v134 - v7);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v139 = (char *)&v134 - v10;
  __chkstk_darwin(v9);
  Swift::Int v153 = (char *)&v134 - v11;
  uint64_t v12 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v138 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v145 = (char *)&v134 - v15;
  uint64_t v159 = sub_100103978();
  uint64_t v16 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  BOOL v158 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007E0C(&qword_100153990);
  __chkstk_darwin(v18);
  uint64_t v157 = (uint64_t *)((char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_100007E0C(&qword_10014CE90);
  __chkstk_darwin(v20);
  uint64_t v146 = (uint64_t)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100007E0C(&qword_100153978);
  __chkstk_darwin(v154);
  unint64_t v23 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100007E0C(&qword_1001539A0);
  __chkstk_darwin(v151);
  uint64_t v161 = (uint64_t)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = v20;
  uint64_t v25 = *(void *)(a1 + *(int *)(v20 + 32));
  uint64_t v26 = sub_10001C674(v25);
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  uint64_t v31 = sub_10001C718(v26, v27, v29 & 1, 1 << *(unsigned char *)(v25 + 32), *(_DWORD *)(v25 + 36), 0);
  sub_10001C914(v26, v28, v30);
  uint64_t v155 = v16;
  uint64_t v137 = v18;
  if (v31 <= 0)
  {
    uint64_t v39 = *(unsigned __int8 *)(v16 + 80);
    long long v160 = _swiftEmptyArrayStorage;
    unint64_t v37 = *(void *)&_swiftEmptyArrayStorage[3];
    uint64_t v135 = v39;
    uint64_t v140 = (v39 + 32) & ~v39;
  }
  else
  {
    sub_100007E0C(&qword_100152280);
    uint64_t v32 = *(void *)(v16 + 72);
    uint64_t v33 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v34 = (v33 + 32) & ~v33;
    long long v160 = (double *)swift_allocObject();
    uint64_t result = j__malloc_size(v160);
    if (!v32) {
      goto LABEL_91;
    }
    if (result - v34 == 0x8000000000000000 && v32 == -1) {
      goto LABEL_93;
    }
    uint64_t v135 = v33;
    uint64_t v140 = (v33 + 32) & ~v33;
    unint64_t v37 = 2 * ((result - v34) / v32);
    uint64_t v38 = v160;
    *((void *)v160 + 2) = v31;
    *((void *)v38 + 3) = v37;
  }
  sub_100010808(a1, (uint64_t)v23, &qword_100153978);
  uint64_t v40 = v146;
  sub_100033870((uint64_t)v23, v146, &qword_10014CE90);
  unint64_t v41 = v157;
  sub_100010808(v40, (uint64_t)v157, &qword_10014CE90);
  uint64_t v42 = sub_10001C674(*(void *)(v40 + *(int *)(v147 + 32)));
  uint64_t v44 = v43;
  char v46 = v45;
  sub_100012510(v40, &qword_10014CE90);
  unint64_t v47 = (char *)v41 + *(int *)(v137 + 36);
  *(void *)unint64_t v47 = v42;
  *((void *)v47 + 1) = v44;
  v47[16] = v46 & 1;
  uint64_t v48 = v161;
  uint64_t result = sub_100033870((uint64_t)v41, v161, &qword_100153990);
  long long v49 = *(_OWORD *)&v23[*(int *)(v154 + 44)];
  uint64_t v154 = v48 + *(int *)(v151 + 44);
  *(_OWORD *)uint64_t v154 = v49;
  uint64_t v50 = v156;
  uint64_t v51 = (uint64_t)v145;
  if ((v31 & 0x8000000000000000) == 0)
  {
    unint64_t v52 = (void *)v31;
    unint64_t v53 = (char *)v160 + v140;
    uint64_t v54 = (char *)(v37 >> 1);
    uint64_t v55 = v155;
    if (v31)
    {
      uint64_t v56 = v161 + *(int *)(v137 + 36);
      Swift::Int v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56);
      uint64_t v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
      uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))*(int *)(v147 + 32);
      Swift::Int v148 = (char *)(v136 + 56);
      uint64_t v149 = v57;
      Swift::Int v142 = (uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
      uint64_t v141 = v155 + 32;
      v54 -= v31;
      Swift::Int v150 = v8;
      unint64_t v58 = v138;
      uint64_t v151 = v56;
      do
      {
        if (!v52) {
          goto LABEL_75;
        }
        if (*(unsigned char *)(v56 + 16)) {
          goto LABEL_94;
        }
        uint64_t v59 = *(uint64_t *)((char *)v149 + v161);
        if (*(_DWORD *)(v59 + 36) != *(_DWORD *)(v56 + 8)) {
          goto LABEL_76;
        }
        uint64_t v60 = *(void *)v56;
        uint64_t v61 = 1 << *(unsigned char *)(v59 + 32);
        uint64_t v157 = v52;
        if (v60 == v61)
        {
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))v148)(v8, 1, 1, v50);
        }
        else
        {
          if (v60 < 0 || v60 >= v61) {
            goto LABEL_84;
          }
          if (((*(void *)(v59 + 8 * ((unint64_t)v60 >> 6) + 64) >> v60) & 1) == 0)
          {
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          uint64_t v62 = *(void *)(*(void *)(v59 + 48) + 8 * v60);
          unint64_t v63 = (void *)(v162 + *(int *)(v50 + 48));
          unint64_t v64 = (uint64_t *)(*(void *)(v59 + 56) + 32 * v60);
          uint64_t v65 = *v64;
          uint64_t v66 = v64[1];
          uint64_t v67 = v50;
          uint64_t v68 = v64[2];
          uint64_t v69 = v64[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v70 = v62;
          uint64_t v71 = v161;
          sub_1000FE868(v70, v162);
          *unint64_t v63 = v65;
          v63[1] = v66;
          v63[2] = v68;
          v63[3] = v69;
          sub_100010808(v162, (uint64_t)v8, &qword_10014CE88);
          unint64_t v72 = (char *)v8 + *(int *)(v67 + 48);
          *(void *)unint64_t v72 = v65;
          *((void *)v72 + 1) = v66;
          *((void *)v72 + 2) = v68;
          *((void *)v72 + 3) = v69;
          swift_bridgeObjectRetain();
          uint64_t v73 = v151;
          swift_bridgeObjectRetain();
          sub_100012510(v162, &qword_100153988);
          uint64_t v74 = v146;
          sub_100010808(v71, v146, &qword_10014CE90);
          uint64_t result = *(void *)v73;
          if ((*(void *)v73 & 0x8000000000000000) != 0) {
            goto LABEL_86;
          }
          uint64_t v75 = *(void *)(v74 + *(int *)(v147 + 32));
          if (result >= -(-1 << *(unsigned char *)(v75 + 32))) {
            goto LABEL_86;
          }
          if (((*(void *)(v75 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            goto LABEL_87;
          }
          if (*(_DWORD *)(v75 + 36) != *(_DWORD *)(v73 + 8)) {
            goto LABEL_88;
          }
          uint64_t v76 = sub_1001053A8();
          uint64_t v77 = *(unsigned int *)(v75 + 36);
          *(void *)uint64_t v73 = v76;
          *(void *)(v73 + 8) = v77;
          *(unsigned char *)(v73 + 16) = 0;
          sub_100012510(v74, &qword_10014CE90);
          uint64_t v8 = v150;
          uint64_t v50 = v156;
          (*(void (**)(void, void, uint64_t, uint64_t))v148)(v150, 0, 1, v156);
          uint64_t v51 = (uint64_t)v145;
          uint64_t v55 = v155;
          unint64_t v58 = v138;
        }
        unint64_t v78 = *(void (**)(uint64_t))v154;
        uint64_t v79 = v152;
        sub_100033870((uint64_t)v8, v152, &qword_100153998);
        uint64_t v80 = 1;
        uint64_t v81 = v79;
        uint64_t v82 = v50;
        if ((*v144)(v81, 1, v50) != 1)
        {
          uint64_t v83 = v162;
          sub_100033870(v152, v162, &qword_100153988);
          v78(v83);
          sub_100012510(v83, &qword_100153988);
          uint64_t v80 = 0;
        }
        uint64_t v84 = v159;
        (*v143)(v58, v80, 1, v159);
        uint64_t result = (*v142)(v58, 1, v84);
        if (result == 1) {
          goto LABEL_95;
        }
        uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 32))(v53, v58, v84);
        v53 += *(void *)(v55 + 72);
        unint64_t v52 = (void *)((char *)v157 - 1);
        uint64_t v50 = v82;
        uint64_t v8 = v150;
        uint64_t v56 = v151;
      }
      while (v157 != (void *)1);
    }
    uint64_t v85 = v161 + *(int *)(v137 + 36);
    uint64_t v86 = (uint64_t)v139;
    uint64_t v87 = (uint64_t)v153;
    if ((*(unsigned char *)(v85 + 16) & 1) == 0)
    {
      uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56);
      uint64_t v89 = *(int *)(v147 + 32);
      uint64_t v151 = v136 + 48;
      uint64_t v152 = v89;
      uint64_t v149 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
      Swift::Int v150 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56);
      uint64_t v157 = (void *)(v155 + 32);
      Swift::Int v143 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 | 7);
      uint64_t v144 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 56);
      while (1)
      {
        uint64_t v90 = *(void *)(v161 + v152);
        if (*(_DWORD *)(v90 + 36) != *(_DWORD *)(v85 + 8))
        {
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        uint64_t v91 = *(void *)v85;
        uint64_t v92 = 1 << *(unsigned char *)(v90 + 32);
        if (*(void *)v85 == v92)
        {
          (*v88)(v87, 1, 1, v50);
        }
        else
        {
          if (v91 < 0 || v91 >= v92) {
            goto LABEL_77;
          }
          if (((*(void *)(v90 + 8 * ((unint64_t)v91 >> 6) + 64) >> v91) & 1) == 0) {
            goto LABEL_78;
          }
          Swift::Int v148 = v54;
          uint64_t v93 = *(void *)(*(void *)(v90 + 48) + 8 * v91);
          uint64_t v94 = (void *)(v162 + *(int *)(v50 + 48));
          uint64_t v95 = (uint64_t *)(*(void *)(v90 + 56) + 32 * v91);
          uint64_t v96 = v85;
          uint64_t v98 = *v95;
          uint64_t v97 = v95[1];
          uint64_t v99 = v50;
          uint64_t v100 = v87;
          uint64_t v101 = v95[2];
          uint64_t v102 = v95[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v103 = v93;
          uint64_t v104 = v161;
          sub_1000FE868(v103, v162);
          *uint64_t v94 = v98;
          v94[1] = v97;
          v94[2] = v101;
          v94[3] = v102;
          sub_100010808(v162, v100, &qword_10014CE88);
          uint64_t v105 = (void *)(v100 + *(int *)(v99 + 48));
          *uint64_t v105 = v98;
          v105[1] = v97;
          uint64_t v85 = v96;
          v105[2] = v101;
          v105[3] = v102;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100012510(v162, &qword_100153988);
          uint64_t v106 = v146;
          sub_100010808(v104, v146, &qword_10014CE90);
          uint64_t result = *(void *)v96;
          if ((*(void *)v96 & 0x8000000000000000) != 0) {
            goto LABEL_79;
          }
          uint64_t v107 = *(void *)(v106 + *(int *)(v147 + 32));
          if (result >= -(-1 << *(unsigned char *)(v107 + 32))) {
            goto LABEL_79;
          }
          if (((*(void *)(v107 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
            goto LABEL_80;
          }
          if (*(_DWORD *)(v107 + 36) != *(_DWORD *)(v96 + 8)) {
            goto LABEL_81;
          }
          uint64_t v108 = sub_1001053A8();
          uint64_t v109 = *(unsigned int *)(v107 + 36);
          *(void *)uint64_t v96 = v108;
          *(void *)(v96 + 8) = v109;
          *(unsigned char *)(v96 + 16) = 0;
          sub_100012510(v106, &qword_10014CE90);
          uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v144;
          uint64_t v87 = (uint64_t)v153;
          uint64_t v50 = v156;
          ((void (*)(char *, void, uint64_t, uint64_t))*v144)(v153, 0, 1, v156);
          uint64_t v86 = (uint64_t)v139;
          uint64_t v51 = (uint64_t)v145;
          uint64_t v54 = v148;
        }
        uint64_t v110 = *(void (**)(uint64_t))v154;
        sub_100033870(v87, v86, &qword_100153998);
        uint64_t v111 = 1;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v151)(v86, 1, v50) != 1)
        {
          uint64_t v112 = v162;
          sub_100033870(v86, v162, &qword_100153988);
          v110(v112);
          sub_100012510(v112, &qword_100153988);
          uint64_t v111 = 0;
        }
        uint64_t v113 = v159;
        (*v150)(v51, v111, 1, v159);
        if ((*v149)(v51, 1, v113) == 1) {
          goto LABEL_69;
        }
        uint64_t v114 = (uint64_t (*)(char *, char *, uint64_t))*v157;
        uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))*v157)(v158, v51, v113);
        if (v54)
        {
          uint64_t v115 = v160;
          uint64_t v87 = (uint64_t)v153;
          BOOL v116 = __OFSUB__(v54--, 1);
          if (v116) {
            goto LABEL_74;
          }
          goto LABEL_67;
        }
        unint64_t v117 = *((void *)v160 + 3);
        if ((uint64_t)((v117 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_82;
        }
        int64_t v118 = v117 & 0xFFFFFFFFFFFFFFFELL;
        if (v118 <= 1) {
          uint64_t v119 = 1;
        }
        else {
          uint64_t v119 = v118;
        }
        sub_100007E0C(&qword_100152280);
        uint64_t v120 = *(void *)(v155 + 72);
        uint64_t v121 = v140;
        uint64_t v115 = (double *)swift_allocObject();
        uint64_t result = j__malloc_size(v115);
        if (!v120) {
          goto LABEL_83;
        }
        uint64_t v122 = result - v121;
        if (result - v121 == 0x8000000000000000 && v120 == -1) {
          goto LABEL_89;
        }
        uint64_t v124 = v122 / v120;
        *((void *)v115 + 2) = v119;
        *((void *)v115 + 3) = 2 * (v122 / v120);
        uint64_t v125 = (char *)v115 + v121;
        unint64_t v126 = v160;
        uint64_t v127 = *((void *)v160 + 3) >> 1;
        uint64_t v128 = v127 * v120;
        if (*((void *)v160 + 2)) {
          break;
        }
LABEL_66:
        unint64_t v53 = &v125[v128];
        uint64_t v129 = (v124 & 0x7FFFFFFFFFFFFFFFLL) - v127;
        uint64_t result = swift_release();
        uint64_t v87 = (uint64_t)v153;
        uint64_t v113 = v159;
        BOOL v116 = __OFSUB__(v129, 1);
        uint64_t v54 = (char *)(v129 - 1);
        if (v116) {
          goto LABEL_74;
        }
LABEL_67:
        uint64_t result = v114(v53, v158, v113);
        uint64_t v50 = v156;
        v53 += *(void *)(v155 + 72);
        char v130 = *(unsigned char *)(v85 + 16);
        long long v160 = v115;
        if (v130) {
          goto LABEL_68;
        }
      }
      if (v115 < v160 || v125 >= (char *)v160 + v140 + v128)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v115 == v160)
        {
LABEL_65:
          v126[2] = 0.0;
          goto LABEL_66;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v126 = v160;
      goto LABEL_65;
    }
LABEL_68:
    __break(1u);
LABEL_69:
    sub_100012510(v161, &qword_1001539A0);
    sub_100012510(v51, (uint64_t *)&unk_100151950);
    uint64_t result = (uint64_t)v160;
    unint64_t v131 = *((void *)v160 + 3);
    if (v131 < 2) {
      return result;
    }
    unint64_t v132 = v131 >> 1;
    BOOL v116 = __OFSUB__(v132, v54);
    unint64_t v133 = v132 - (void)v54;
    if (!v116)
    {
      *((void *)v160 + 2) = v133;
      return result;
    }
    goto LABEL_92;
  }
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_1000EDB78()
{
  void (*v9)(uint64_t *__return_ptr, char *);
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18[8];
  uint64_t v19;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    uint64_t v8 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v18[0] = v7;
    uint64_t v19 = v8;
    v9(&v17, v18);
    return v17;
  }
  uint64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      uint64_t v13 = v0[1];
      uint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        uint64_t v5 = (v14 - 1) & v14;
        unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
        int64_t v4 = v11;
        goto LABEL_3;
      }
      uint64_t v15 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        uint64_t v14 = *(void *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          uint64_t v11 = v15;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          uint64_t v14 = *(void *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            uint64_t v11 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v15 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            uint64_t v14 = *(void *)(v13 + 8 * v15);
            if (v14) {
              goto LABEL_10;
            }
            uint64_t v11 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              uint64_t v14 = *(void *)(v13 + 8 * v11);
              if (v14) {
                goto LABEL_7;
              }
              int64_t v4 = v12 - 1;
              uint64_t v16 = v3 + 6;
              while (v12 != v16)
              {
                uint64_t v14 = *(void *)(v13 + 8 * v16++);
                if (v14)
                {
                  uint64_t v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 9;
  }
  return result;
}

uint64_t sub_1000EDCE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 8);
  *(unsigned char *)a2 = *(unsigned char *)result;
  *(void *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1000EDCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_100105148();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = sub_100103978();
  v3[11] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[12] = v6;
  v3[13] = *(void *)(v6 + 64);
  v3[14] = swift_task_alloc();
  uint64_t v7 = sub_100103AE8();
  v3[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[16] = v8;
  v3[17] = *(void *)(v8 + 64);
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_1000EDE80, 0, 0);
}

uint64_t sub_1000EDE80()
{
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v25 = v0[17];
  uint64_t v4 = v0[11];
  uint64_t v23 = v0[12];
  uint64_t v24 = v0[14];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[8];
  uint64_t v29 = v0[10];
  uint64_t v21 = v0[6];
  uint64_t v22 = v0[7];
  uint64_t v26 = (void *)v0[5];
  uint64_t v19 = (void *)swift_allocObject();
  v0[19] = v19;
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = 0;
  v19[5] = _swiftEmptyArrayStorage;
  id v20 = [objc_allocWithZone((Class)NLTokenizer) initWithUnit:0];
  v0[20] = v20;
  sub_100007E0C(&qword_100153A00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100108260;
  *(void *)(v5 + 32) = NLTagSchemeScript;
  id v6 = objc_allocWithZone((Class)NLTagger);
  type metadata accessor for NLTagScheme(0);
  uint64_t v7 = NLTagSchemeScript;
  Class isa = sub_100104D18().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v6 initWithTagSchemes:isa];
  v0[21] = v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v21, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v22, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v11 = (v25 + *(unsigned __int8 *)(v23 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  v0[22] = v12;
  *((void *)v12 + 2) = v26;
  *((void *)v12 + 3) = v20;
  *((void *)v12 + 4) = v9;
  *((void *)v12 + 5) = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v12[v10], v1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v12[v11], v24, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v29, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v28);
  id v13 = v26;
  id v14 = v20;
  id v15 = v9;
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[23] = v16;
  void *v16 = v0;
  v16[1] = sub_1000EE1AC;
  uint64_t v17 = v0[10];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v16, v17, sub_1000EFDE0, v12, (char *)&type metadata for () + 8);
}

uint64_t sub_1000EE1AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  uint64_t v3 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1000EE320, 0, 0);
}

uint64_t sub_1000EE320()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 152);

  swift_beginAccess();
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[5];
  swift_bridgeObjectRetain();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v7(v3, v4, v5, v6);
}

uint64_t sub_1000EE400(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = sub_100104B28();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  uint64_t v3 = sub_100105148();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_1000EE52C, 0, 0);
}

uint64_t sub_1000EE52C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = (void *)v0[9];
  uint64_t v5 = swift_allocObject();
  v0[17] = v5;
  *(void *)(v5 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v6 = swift_allocObject();
  v0[18] = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  id v7 = v4;
  swift_retain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[19] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000EE680;
  uint64_t v9 = v0[16];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v8, v9, sub_1000EFA30, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1000EE680()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[15] + 8))(v2[16], v2[14]);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_1000EEB04;
  }
  else {
    uint64_t v3 = sub_1000EE804;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000EE804()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v10 = v0[12];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  swift_beginAccess();
  v0[5] = *(void *)(v1 + 16);
  sub_100007E0C(&qword_1001539B0);
  sub_100007E0C(&qword_1001539B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100108250;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_100103628();
  swift_getKeyPath();
  sub_100104B18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v10, v2, v4);
  sub_100103618();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v0[6] = v5;
  sub_100007E0C(&qword_1001539C0);
  sub_100007E0C(&qword_1001539C8);
  sub_100050EC4(&qword_1001539D0, &qword_1001539C0);
  sub_100050EC4(&qword_1001539D8, &qword_1001539C8);
  sub_100050EC4(&qword_1001539E0, &qword_1001539B8);
  uint64_t v6 = sub_100104C78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = sub_1000D7A74(v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(double *))v0[1];
  return v8(v7);
}

uint64_t sub_1000EEB04()
{
  if (qword_10014C130 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100103DB8();
  sub_100007D30(v1, (uint64_t)qword_1001538F8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100103D98();
  os_log_type_t v3 = sub_100104FF8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v6;
    sub_1001052C8();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to fetch events for streaks: %@", v4, 0xCu);
    sub_100007E0C(&qword_10014DF20);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[13];
  uint64_t v16 = v0[12];
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[11];
  swift_beginAccess();
  v0[5] = *(void *)(v7 + 16);
  sub_100007E0C(&qword_1001539B0);
  sub_100007E0C(&qword_1001539B8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100108250;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_100103628();
  swift_getKeyPath();
  sub_100104B18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v16, v8, v9);
  sub_100103618();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v0[6] = v11;
  sub_100007E0C(&qword_1001539C0);
  sub_100007E0C(&qword_1001539C8);
  sub_100050EC4(&qword_1001539D0, &qword_1001539C0);
  sub_100050EC4(&qword_1001539D8, &qword_1001539C8);
  sub_100050EC4(&qword_1001539E0, &qword_1001539B8);
  uint64_t v12 = sub_100104C78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = sub_1000D7A74(v12);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(double *))v0[1];
  return v14(v13);
}

uint64_t sub_1000EEF8C(uint64_t a1)
{
  v1[4] = a1;
  sub_100007E0C(&qword_100153970);
  v1[5] = swift_task_alloc();
  v1[6] = sub_100007E0C(&qword_100153978);
  v1[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  sub_100007E0C(&qword_100153980);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_100007E0C(&qword_100153988);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = sub_100007E0C(&qword_10014CE90);
  v1[17] = swift_task_alloc();
  v1[18] = sub_100007E0C(&qword_100153990);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_1000EF1AC, 0, 0);
}

uint64_t sub_1000EF1AC()
{
  uint64_t v86 = v0;
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[4];
  uint64_t v66 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  uint64_t v67 = v6 + *(int *)(v66 + 28);
  sub_100010808(v67, v3, &qword_10014CE90);
  sub_100010808(v3, v1, &qword_10014CE90);
  uint64_t v71 = v5;
  uint64_t v7 = sub_10001C674(*(void *)(v3 + *(int *)(v5 + 32)));
  uint64_t v9 = v8;
  char v11 = v10;
  sub_100012510(v3, &qword_10014CE90);
  uint64_t v12 = v1 + *(int *)(v4 + 36);
  *(void *)uint64_t v12 = v7;
  *(void *)(v12 + 8) = v9;
  *(unsigned char *)(v12 + 16) = v11 & 1;
  uint64_t result = sub_100033870(v1, v2, &qword_100153990);
  uint64_t v69 = v2;
  uint64_t v14 = v2 + *(int *)(v4 + 36);
  if (*(unsigned char *)(v14 + 16)) {
    goto LABEL_34;
  }
  uint64_t v15 = 0;
  uint64_t v16 = *(int *)(v71 + 32);
  uint64_t v17 = v0[9];
  uint64_t v80 = v0[8];
  uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v18 = (uint64_t *)&_swiftEmptyDictionarySingleton;
  uint64_t v77 = v17;
  uint64_t v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v75 = v14;
  uint64_t v76 = v0[13];
  uint64_t v68 = v16;
  while (1)
  {
    uint64_t v19 = *(void *)(v69 + v16);
    if (*(_DWORD *)(v19 + 36) != *(_DWORD *)(v14 + 8))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      return result;
    }
    uint64_t v20 = *(void *)v14;
    uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
    uint64_t v70 = v15;
    if (*(void *)v14 == v21) {
      break;
    }
    if (v20 < 0 || v20 >= v21) {
      goto LABEL_47;
    }
    if (((*(void *)(v19 + 8 * ((unint64_t)v20 >> 6) + 64) >> v20) & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v22 = v0[14];
    uint64_t v23 = (void *)(v22 + *(int *)(v76 + 48));
    uint64_t v78 = v0[20];
    uint64_t v72 = *(void *)(*(void *)(v19 + 48) + 8 * v20);
    uint64_t v73 = v0[15];
    uint64_t v24 = v0[17];
    uint64_t v25 = (uint64_t *)(*(void *)(v19 + 56) + 32 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v29 = v25[2];
    uint64_t v28 = v25[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000FE868(v72, v22);
    *uint64_t v23 = v27;
    v23[1] = v26;
    void v23[2] = v29;
    v23[3] = v28;
    sub_100010808(v22, v73, &qword_10014CE88);
    uint64_t v30 = (void *)(v73 + *(int *)(v76 + 48));
    *uint64_t v30 = v27;
    v30[1] = v26;
    v30[2] = v29;
    v30[3] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100012510(v22, &qword_100153988);
    sub_100010808(v78, v24, &qword_10014CE90);
    uint64_t result = *(void *)v75;
    if ((*(void *)v75 & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
    uint64_t v31 = *(void *)(v24 + *(int *)(v71 + 32));
    if (result >= -(-1 << *(unsigned char *)(v31 + 32))) {
      goto LABEL_49;
    }
    if (((*(void *)(v31 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
      goto LABEL_50;
    }
    if (*(_DWORD *)(v31 + 36) != *(_DWORD *)(v75 + 8)) {
      goto LABEL_51;
    }
    uint64_t v32 = v0[17];
    uint64_t v33 = sub_1001053A8();
    uint64_t v34 = *(unsigned int *)(v31 + 36);
    *(void *)uint64_t v75 = v33;
    *(void *)(v75 + 8) = v34;
    *(unsigned char *)(v75 + 16) = 0;
    sub_100012510(v32, &qword_10014CE90);
    uint64_t v35 = (uint64_t *)v30[3];
    uint64_t v74 = v30[1];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v85[0] = (uint64_t)v18;
    unint64_t v37 = v35[2];
    uint64_t v79 = v35;
    swift_bridgeObjectRetain();
    unint64_t v38 = 0;
    while (1)
    {
      if (v38 == v37)
      {
        uint64_t v43 = 1;
        unint64_t v38 = v37;
      }
      else
      {
        if (v38 >= v37) {
          goto LABEL_40;
        }
        sub_1000DE3A4((uint64_t)v79+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v38, v0[12], type metadata accessor for InsightsDataManager.TopAssetCategory);
        uint64_t v43 = 0;
        ++v38;
      }
      uint64_t v44 = v0[11];
      uint64_t v45 = v0[12];
      uint64_t v46 = v0[8];
      (*v83)(v45, v43, 1, v46);
      sub_100033870(v45, v44, &qword_100153980);
      if ((*v81)(v44, 1, v46) == 1) {
        break;
      }
      uint64_t v47 = v0[10];
      sub_1000F066C(v0[11], v47, type metadata accessor for InsightsDataManager.TopAssetCategory);
      unsigned __int8 v48 = *(unsigned char *)(v47 + *(int *)(v80 + 20));
      uint64_t v49 = *(void *)(v47 + *(int *)(v80 + 24));
      sub_1000DE488(v47, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v35 = v18;
      unint64_t v51 = sub_10000B9AC(v48);
      uint64_t v52 = v18[2];
      BOOL v53 = (v50 & 1) == 0;
      uint64_t v54 = v52 + v53;
      if (__OFADD__(v52, v53))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      char v55 = v50;
      if (v18[3] >= v54)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v50 & 1) == 0) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v35 = v85;
          sub_10000F164();
          uint64_t v18 = (uint64_t *)v85[0];
          if ((v55 & 1) == 0) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        sub_10000CA58(v54, isUniquelyReferenced_nonNull_native & 1);
        uint64_t v18 = (uint64_t *)v85[0];
        uint64_t v35 = (uint64_t *)v85[0];
        unint64_t v56 = sub_10000B9AC(v48);
        if ((v55 & 1) != (v57 & 1)) {
          goto LABEL_35;
        }
        unint64_t v51 = v56;
        if ((v55 & 1) == 0)
        {
LABEL_13:
          v18[(v51 >> 6) + 8] |= 1 << v51;
          *(unsigned char *)(v18[6] + v51) = v48;
          *(void *)(v18[7] + 8 * v51) = v49;
          uint64_t v39 = v18 + 2;
          uint64_t v40 = v18[2];
          BOOL v41 = __OFADD__(v40, 1);
          uint64_t v42 = v40 + 1;
          if (v41) {
            goto LABEL_41;
          }
          goto LABEL_14;
        }
      }
      uint64_t v39 = (uint64_t *)(v18[7] + 8 * v51);
      uint64_t v42 = *v39 + v49;
      if (__OFADD__(*v39, v49)) {
        goto LABEL_42;
      }
LABEL_14:
      *uint64_t v39 = v42;
      char isUniquelyReferenced_nonNull_native = 1;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = v70 + v74;
    if (__OFADD__(v70, v74)) {
      goto LABEL_52;
    }
    uint64_t result = sub_100012510(v0[15], &qword_10014CE88);
    uint64_t v14 = v75;
    uint64_t v16 = v68;
    if (*(unsigned char *)(v75 + 16))
    {
LABEL_34:
      __break(1u);
LABEL_35:
      return sub_100105878();
    }
  }
  sub_100012510(v0[20], &qword_100153990);
  uint64_t v58 = swift_bridgeObjectRetain();
  v85[0] = sub_1000D7B78(v58);
  swift_bridgeObjectRetain();
  sub_1000E7D90(v85, type metadata accessor for InsightsDataManager.TopAssetCategory, (uint64_t (*)(uint64_t))sub_10007872C, sub_1000E7E54);
  uint64_t v60 = v0[6];
  uint64_t v59 = v0[7];
  uint64_t v61 = v0[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t *)v85[0];
  sub_100010808(v67, v61, &qword_10014CE90);
  sub_100010808(v61, v59, &qword_10014CE90);
  uint64_t v62 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v59 + *(int *)(v60 + 44));
  *uint64_t v62 = sub_1000E6440;
  v62[1] = 0;
  sub_100012510(v61, &qword_100153970);
  v85[0] = sub_1000ECD3C(v59);
  sub_1000E7D90(v85, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(uint64_t))sub_100078740, sub_1000E8904);
LABEL_43:
  uint64_t v84 = v35;
  uint64_t v63 = v0[4];
  uint64_t v82 = v85[0];
  sub_100012510(v0[7], &qword_100153978);
  uint64_t v64 = sub_1000D7EC0(v63 + *(int *)(v66 + 24));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v65 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v0[1];
  return v65(v84, v82, v70, v64);
}

uint64_t sub_1000EF9B8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000EF9F0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000EFA30()
{
  sub_1000E6598(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000EFA4C()
{
  return sub_1000EFA90((unint64_t *)&qword_10014D5D0, &qword_10014D5C8);
}

uint64_t sub_1000EFA90(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008234(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EFAD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if ((*(void *)a1 & 0xC000000000000001) != 0) {
    uint64_t result = sub_1001053D8();
  }
  else {
    uint64_t result = *(void *)(*(void *)a1 + 16);
  }
  *a2 = result;
  return result;
}

const char *sub_1000EFB1C()
{
  return "poiCategory";
}

id sub_1000EFB28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 poiCategory];
  *a2 = result;
  return result;
}

uint64_t sub_1000EFB64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100104B78();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000EFB90()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000EFBC8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000EFBDC()
{
  return sub_1000E7D28(*(void **)(v0 + 16));
}

uint64_t sub_1000EFBF8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000EFC08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000EFC38()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000EFC70()
{
  uint64_t v1 = sub_100103AE8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_100103978();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;

  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))((char *)v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_1000EFDE0()
{
  uint64_t v1 = *(void *)(sub_100103AE8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100103978() - 8);
  sub_1000E15E0(*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), v0 + v2, v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_1000EFEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000BCE90(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_1000EFECC()
{
  uint64_t v20 = sub_100103978();
  uint64_t v1 = *(void *)(v20 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v17 = (v2 + 16) & ~v2;
  unint64_t v16 = (*(void *)(v1 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = sub_100103AE8();
  uint64_t v3 = *(void *)(v19 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v16 + v4 + 8) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = sub_1001035D8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v9 + 8) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v18 = v2 | v4 | v9 | 7;
  uint64_t v12 = (v11 + v9 + v10) & ~v9;
  uint64_t v13 = v12 + v11;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v17, v20);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v19);
  swift_release();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v14(v0 + v10, v7);
  v14(v0 + v12, v7);

  return _swift_deallocObject(v0, v13, v18);
}

void sub_1000F00FC()
{
  uint64_t v1 = *(void *)(sub_100103978() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_100103AE8() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_1001035D8() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  sub_1000E2388(v0 + v2, *(char **)(v0 + v3), (void (*)(char *, uint64_t))(v0 + v5), *(void *)(v0 + v6), v0 + ((v6 + v8 + 8) & ~v8), v0 + ((*(void *)(v7 + 64) + v8 + ((v6 + v8 + 8) & ~v8)) & ~v8));
}

const char *sub_1000F027C()
{
  return "createdDate";
}

uint64_t sub_1000F0288@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000E4580(a1, (SEL *)&selRef_createdDate, a2);
}

void sub_1000F02A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

const char *sub_1000F02C8()
{
  return "updatedDate";
}

uint64_t sub_1000F02D4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000E4580(a1, (SEL *)&selRef_updatedDate, a2);
}

void sub_1000F02F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1000F0314()
{
  return sub_1001038F8() & 1;
}

uint64_t sub_1000F0344(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F038C()
{
  uint64_t v1 = sub_100103978();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_100103AE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_1000F04E4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_100103978() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_100103AE8() - 8);
  sub_1000DE75C(*(void **)(v1 + 16), (void (*)(void, void, void))(v1 + v4), (void (**)(uint64_t, uint64_t))(v1+ ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))), a1);
}

uint64_t sub_1000F05B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000E13A8(a1, *(void *)(v2 + 16), a2);
}

uint64_t _s14descr100137F61O4YearVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100153AE0);
}

uint64_t sub_1000F05E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000E14DC(a1, a2);
}

uint64_t _s14descr100137F61O5MonthVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100153B78);
}

const char *sub_1000F0620()
{
  return "entryDate";
}

uint64_t sub_1000F062C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000E4580(a1, (SEL *)&selRef_entryDate, a2);
}

void sub_1000F064C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1000F066C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1000F06D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100103B28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000F07D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_100103B28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1000F0860(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000F090C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1000F09D0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_1000F0A70(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000F0B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F0B38);
}

uint64_t sub_1000F0B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103B28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000F0BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F0C10);
}

uint64_t sub_1000F0C10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100103B28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000F0CD0()
{
  uint64_t result = sub_100103B28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000F0D7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_100103B28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1000F0E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_100103B28();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_1000F0EB0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1000F0F2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1000F0FA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1000F1024(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100103B28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000F10A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F10B4);
}

uint64_t sub_1000F10B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_100103B28();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_1000F1124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1138);
}

uint64_t sub_1000F1138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_100103B28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1000F11AC()
{
  uint64_t result = sub_100103B28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1000F1250(void *a1, void *a2)
{
  if (!a2)
  {
    id v8 = [self systemFontOfSize:0.0];
    goto LABEL_9;
  }
  uint64_t v4 = self;
  id v5 = a2;
  id v6 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
  id v7 = [v6 fontDescriptorWithSymbolicTraits:0x8000];

  if (!v7)
  {

LABEL_7:
    id v8 = [self preferredFontForTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
    goto LABEL_8;
  }
  id v8 = [self fontWithDescriptor:v7 size:0.0];

  if (!v8) {
    goto LABEL_7;
  }
LABEL_8:

LABEL_9:
  id v9 = [v8 fontDescriptor];
  unsigned int v10 = [v9 symbolicTraits];

  id v11 = [a1 fontDescriptor];
  unsigned int v12 = [v11 symbolicTraits];

  uint64_t v13 = v12 | v10;
  id v14 = [v8 fontDescriptor];
  id v15 = [v14 fontDescriptorWithSymbolicTraits:v13];

  if (v15)
  {
    id v16 = [self fontWithDescriptor:v15 size:0.0];

    id v8 = v15;
  }
  else
  {
    id v16 = a1;
  }

  return v16;
}

uint64_t sub_1000F1470(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  double v12 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v89 = a1 + 64;
  double v94 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v91 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v24 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v25 = v24 | (v17 << 6);
LABEL_8:
      uint64_t v26 = *(void *)(a1 + 56);
      *(void *)&v98[0] = *(void *)(*(void *)(a1 + 48) + 8 * v25);
      uint64_t v27 = *(void **)&v98[0];
      sub_1000105E4(v26 + 32 * v25, (uint64_t)v98 + 8);
      id v28 = v27;
      goto LABEL_27;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
    }
    if (v29 < v91)
    {
      unint64_t v30 = *(void *)(v89 + 8 * v29);
      if (v30) {
        goto LABEL_12;
      }
      int64_t v31 = v17 + 2;
      ++v17;
      if (v29 + 1 < v91)
      {
        unint64_t v30 = *(void *)(v89 + 8 * v31);
        if (v30) {
          goto LABEL_15;
        }
        int64_t v17 = v29 + 1;
        if (v29 + 2 < v91)
        {
          unint64_t v30 = *(void *)(v89 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          int64_t v31 = v29 + 3;
          int64_t v17 = v29 + 2;
          if (v29 + 3 < v91)
          {
            unint64_t v30 = *(void *)(v89 + 8 * v31);
            if (v30)
            {
LABEL_15:
              int64_t v29 = v31;
LABEL_12:
              unint64_t v16 = (v30 - 1) & v30;
              unint64_t v25 = __clz(__rbit64(v30)) + (v29 << 6);
              int64_t v17 = v29;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v29 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                goto LABEL_76;
              }
              if (v29 >= v91) {
                break;
              }
              unint64_t v30 = *(void *)(v89 + 8 * v29);
              ++v31;
              if (v30) {
                goto LABEL_12;
              }
            }
            int64_t v17 = v91 - 1;
          }
        }
      }
    }
    unint64_t v16 = 0;
    uint64_t v99 = 0;
    memset(v98, 0, sizeof(v98));
LABEL_27:
    sub_1000577EC((uint64_t)v98, (uint64_t)&v100);
    uint64_t v32 = (void *)v100;
    if (!(void)v100) {
      break;
    }
    sub_1000103D0((long long *)((char *)&v100 + 8), v98);
    uint64_t v33 = sub_100104B78();
    uint64_t v35 = v34;
    if (v33 == sub_100104B78() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_33;
      }
    }
    sub_1000105E4((uint64_t)v98, (uint64_t)&v96);
    uint64_t v38 = sub_100008234(0, &qword_100153BB8);
    if (swift_dynamicCast())
    {
      id v18 = v95[0];
      id v19 = sub_1000F1250(v95[0], a6);
      uint64_t v97 = v38;
      *(void *)&long long v96 = v19;
      sub_1000103D0(&v96, v95);
      id v20 = v32;
      id v21 = v19;
      double v22 = v94;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v93 = v22;
      sub_10006019C(v95, v20, isUniquelyReferenced_nonNull_native);
      double v12 = v93;
      double v94 = v93;

      goto LABEL_5;
    }
LABEL_33:
    uint64_t v39 = sub_100104B78();
    uint64_t v41 = v40;
    if (v39 == sub_100104B78() && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v43 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0) {
        goto LABEL_45;
      }
    }
    sub_1000105E4((uint64_t)v98, (uint64_t)&v96);
    uint64_t v44 = sub_100008234(0, &qword_100153BB0);
    if (swift_dynamicCast())
    {
      id v45 = v95[0];
      *(void *)&long long v96 = 0;
      v95[0] = 0;
      uint64_t v92 = 0;
      double v93 = 0.0;
      [v45 getRed:&v96 green:v95 blue:&v93 alpha:&v92];
      double v46 = *(double *)&v96;
      if (*(double *)&v96 <= 0.001 && (double v46 = *(double *)v95, *(double *)v95 <= 0.001) && (double v46 = v93, v93 <= 0.001)
        || (*(void *)&long long v96 = 0,
            v95[0] = 0,
            uint64_t v92 = 0,
            double v93 = 0.0,
            objc_msgSend(v45, "getRed:green:blue:alpha:", &v96, v95, &v93, &v92, v46),
            *(double *)&v96 >= 0.99)
        && *(double *)v95 >= 0.99
        && v93 >= 0.99)
      {
        uint64_t v97 = v44;
        *(void *)&long long v96 = a7;
        sub_1000103D0(&v96, v95);
        BOOL v53 = NSForegroundColorAttributeName;
        id v60 = a7;
        double v61 = v94;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        double v93 = v61;
        sub_10006019C(v95, v53, v62);
        double v12 = v93;
        double v94 = v93;

        goto LABEL_53;
      }
    }
LABEL_45:
    uint64_t v47 = sub_100104B78();
    uint64_t v49 = v48;
    if (v47 == sub_100104B78() && v49 == v50)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v51 = sub_1001057F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0) {
        goto LABEL_51;
      }
    }
    sub_1000105E4((uint64_t)v98, (uint64_t)&v96);
    sub_100008234(0, &qword_100153BC0);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_51:
      sub_1000105E4((uint64_t)v98, (uint64_t)&v96);
      id v57 = v32;
      double v58 = v94;
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      v95[0] = *(id *)&v58;
      sub_10006019C(&v96, v57, v59);
      double v12 = *(double *)v95;
      double v94 = *(double *)v95;

      goto LABEL_5;
    }
    id v45 = v95[0];
    id v52 = sub_100057014();
    [v52 setParagraphSpacingBefore:a4];
    sub_1000BE8F8();
    uint64_t v97 = sub_100008234(0, &qword_100153BC8);
    *(void *)&long long v96 = v52;
    sub_1000103D0(&v96, v95);
    BOOL v53 = NSParagraphStyleAttributeName;
    id v54 = v52;
    double v55 = v94;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    double v93 = v55;
    sub_10006019C(v95, v53, v56);
    double v12 = v93;
    double v94 = v93;

LABEL_53:
LABEL_5:
    swift_bridgeObjectRelease();
    sub_1000121EC((uint64_t)v98);
  }
  swift_release();
  if (!*(void *)(*(void *)&v12 + 16))
  {
    long long v100 = 0u;
    long long v101 = 0u;
    uint64_t v65 = a8;
LABEL_62:
    sub_100057BC8((uint64_t)&v100);
    *((void *)&v101 + 1) = sub_100008234(0, &qword_100153BB0);
    *(void *)&long long v100 = a7;
    sub_1000103D0(&v100, v98);
    id v68 = a7;
    uint64_t v69 = NSForegroundColorAttributeName;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v12;
    sub_10006019C(v98, v69, v70);
    double v67 = *(double *)&v96;
    double v94 = *(double *)&v96;

    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)&v67 + 16)) {
      goto LABEL_63;
    }
LABEL_61:
    long long v100 = 0u;
    long long v101 = 0u;
    goto LABEL_68;
  }
  uint64_t v63 = NSForegroundColorAttributeName;
  unint64_t v64 = sub_10000BB28((uint64_t)v63);
  uint64_t v65 = a8;
  if (v66)
  {
    sub_1000105E4(*(void *)(*(void *)&v12 + 56) + 32 * v64, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (!*((void *)&v101 + 1)) {
    goto LABEL_62;
  }
  sub_100057BC8((uint64_t)&v100);
  double v67 = v94;
  if (!*(void *)(*(void *)&v94 + 16)) {
    goto LABEL_61;
  }
LABEL_63:
  uint64_t v71 = NSFontAttributeName;
  unint64_t v72 = sub_10000BB28((uint64_t)v71);
  if (v73)
  {
    sub_1000105E4(*(void *)(*(void *)&v67 + 56) + 32 * v72, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (*((void *)&v101 + 1))
  {
LABEL_67:
    sub_100057BC8((uint64_t)&v100);
    goto LABEL_73;
  }
LABEL_68:
  sub_100057BC8((uint64_t)&v100);
  if (v65)
  {
    *((void *)&v101 + 1) = sub_100008234(0, &qword_100153BB8);
    *(void *)&long long v100 = v65;
    sub_1000103D0(&v100, v98);
    id v74 = v65;
    uint64_t v75 = NSFontAttributeName;
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_10006019C(v98, v75, v76);
    double v94 = *(double *)&v96;
  }
  else
  {
    if (!a9)
    {
      uint64_t v83 = NSFontAttributeName;
      sub_1000F1F50((uint64_t)v83, (uint64_t (*)(uint64_t))sub_10000BB28, (void (*)(uint64_t, uint64_t))sub_10005F748, (void (*)(void))sub_10000F93C, &v100);

      goto LABEL_67;
    }
    *((void *)&v101 + 1) = sub_100008234(0, &qword_100153BB8);
    *(void *)&long long v100 = a9;
    sub_1000103D0(&v100, v98);
    uint64_t v77 = NSFontAttributeName;
    id v78 = a9;
    char v79 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_10006019C(v98, v77, v79);
    double v94 = *(double *)&v96;
  }
  swift_bridgeObjectRelease();
LABEL_73:
  id v80 = NSAdaptiveImageGlyphAttributeName;
  sub_1000F1F50((uint64_t)v80, (uint64_t (*)(uint64_t))sub_10000BB28, (void (*)(uint64_t, uint64_t))sub_10005F748, (void (*)(void))sub_10000F93C, &v100);

  sub_100057BC8((uint64_t)&v100);
  type metadata accessor for Key(0);
  sub_1000F2430();
  swift_bridgeObjectRetain();
  Class isa = sub_1001049A8().super.isa;
  swift_bridgeObjectRelease();
  [a10 setAttributes:isa range:a2, a3];

  return swift_bridgeObjectRelease();
}

double sub_1000F1F10@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000F1F50(a1, (uint64_t (*)(uint64_t))sub_10000B72C, (void (*)(uint64_t, uint64_t))sub_10005F748, (void (*)(void))sub_10000EC5C, a2);
}

double sub_1000F1F50@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  id v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v9;
    uint64_t v17 = *v9;
    *id v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v17;
    }

    sub_1000103D0((_OWORD *)(*(void *)(v15 + 56) + 32 * v12), a5);
    a3(v12, v15);
    *id v9 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

uint64_t sub_1000F206C(void *a1, void *a2, void *a3, double a4)
{
  if (!a2) {
    return 0;
  }
  id v7 = a2;
  id v8 = [v7 string];
  sub_100104B78();

  id v9 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v10 = sub_100104B38();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  id v12 = [self labelColor];
  id v13 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v14 = [v13 fontDescriptorWithSymbolicTraits:0x8000];

  if (v14)
  {
    id v15 = [self fontWithDescriptor:v14 size:0.0];
  }
  else
  {
    id v15 = 0;
  }
  uint64_t result = (uint64_t)[v7 length];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = result;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = v12;
    *(double *)(v18 + 32) = a4;
    *(void *)(v18 + 40) = a3;
    *(void *)(v18 + 48) = v15;
    *(void *)(v18 + 56) = v11;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1000F23CC;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_1000F2410;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100056A34;
    aBlock[3] = &unk_10013D160;
    id v20 = _Block_copy(aBlock);
    id v21 = v15;
    id v16 = v11;
    swift_retain();
    id v22 = a1;
    id v23 = v12;
    id v24 = a3;
    swift_release();
    [v7 enumerateAttributesInRange:0 options:v26 usingBlock:v20];

    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F2374()
{
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000F23CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000F1470(a1, a2, a3, *(double *)(v4 + 32), a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 40), *(void **)(v4 + 48), *(void **)(v4 + 56));
}

uint64_t sub_1000F2400()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F2410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100056A0C(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1000F2418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F2428()
{
  return swift_release();
}

unint64_t sub_1000F2430()
{
  unint64_t result = qword_10014C528;
  if (!qword_10014C528)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014C528);
  }
  return result;
}

BOOL static CLLocationCoordinate2D.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

void CLLocationCoordinate2D.hash(into:)(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_100105908(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_100105908(v4);
}

Swift::Int CLLocationCoordinate2D.hashValue.getter(double a1, double a2)
{
  sub_1001058D8();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_100105908(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_100105908(v5);
  return sub_100105928();
}

Swift::Int sub_1000F2558()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_1001058D8();
  CLLocationCoordinate2D.hash(into:)(v1, v2);
  return sub_100105928();
}

void sub_1000F25AC()
{
  CLLocationCoordinate2D.hash(into:)(*v0, v0[1]);
}

Swift::Int sub_1000F25B4()
{
  double v1 = *v0;
  double v2 = v0[1];
  sub_1001058D8();
  CLLocationCoordinate2D.hash(into:)(v1, v2);
  return sub_100105928();
}

BOOL sub_1000F2604(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t static FloatingPoint.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v6 = *(void *)(a3 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedConformanceWitness();
  sub_100105848();
  sub_1001057D8();
  sub_100104EE8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a3);
}

unint64_t sub_1000F27E8()
{
  unint64_t result = qword_100153BD0;
  if (!qword_100153BD0)
  {
    type metadata accessor for CLLocationCoordinate2D(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153BD0);
  }
  return result;
}

uint64_t sub_1000F2840(void *a1)
{
  uint64_t v3 = sub_100007E0C(&qword_100153CF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100012154(a1, a1[3]);
  sub_1000F3D08();
  sub_100105968();
  v8[15] = 0;
  sub_1001039D8();
  sub_1000F3C98(&qword_10014D6B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_100105768();
  if (!v1)
  {
    _s16StreakEventAssetC12MetadataTypeVMa(0);
    v8[14] = 1;
    sub_100103978();
    sub_1000F3C98(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001057A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000F2A40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_100103978();
  uint64_t v24 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_10014DD70);
  __chkstk_darwin(v5 - 8);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007E0C(&qword_100153CE8);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001039D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100012154(a1, a1[3]);
  sub_1000F3D08();
  uint64_t v13 = v28;
  sub_100105958();
  if (v13)
  {
    sub_1000121EC((uint64_t)a1);
    return sub_10009D914((uint64_t)v11);
  }
  else
  {
    uint64_t v28 = v9;
    uint64_t v14 = v25;
    char v30 = 0;
    sub_1000F3C98(&qword_10014D690, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = (uint64_t)v26;
    sub_1001056B8();
    sub_1000F3D5C(v15, (uint64_t)v11);
    char v29 = 1;
    sub_1000F3C98(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
    id v16 = v4;
    uint64_t v17 = v22;
    uint64_t v18 = v27;
    sub_1001056F8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v18);
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v11[*(int *)(v28 + 20)], v16, v17);
    sub_1000F3DC4((uint64_t)v11, v19);
    sub_1000121EC((uint64_t)a1);
    return sub_1000F3E28((uint64_t)v11);
  }
}

uint64_t sub_1000F2E20()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x44497972746E65;
  }
}

uint64_t sub_1000F2E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000F4090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000F2E7C(uint64_t a1)
{
  unint64_t v2 = sub_1000F3D08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F2EB8(uint64_t a1)
{
  unint64_t v2 = sub_1000F3D08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000F2EF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F2A40(a1, a2);
}

uint64_t sub_1000F2F0C(void *a1)
{
  return sub_1000F2840(a1);
}

uint64_t sub_1000F2F24()
{
  return swift_release();
}

id sub_1000F2F34()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StreakEventAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000F2F7C()
{
  return _s16StreakEventAssetCMa(0);
}

uint64_t _s16StreakEventAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100153C00);
}

uint64_t sub_1000F2FA4()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_1000F2FE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001039D8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100007E0C(&qword_10014DD70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1000F319C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001039D8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_100103978();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *sub_1000F329C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_10014DD70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_1000F3400(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100007E0C(&qword_10014DD70);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_1000F35C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_10014DD70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_1000F372C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001039D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100007E0C(&qword_10014DD70);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1000F38F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F3908);
}

uint64_t sub_1000F3908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007E0C(&qword_10014DD70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100103978();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000F3A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F3A18);
}

uint64_t sub_1000F3A18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007E0C(&qword_10014DD70);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100103978();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s16StreakEventAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100153C68);
}

void sub_1000F3B40()
{
  sub_100040D48();
  if (v0 <= 0x3F)
  {
    sub_100103978();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000F3C08()
{
  return sub_1000F3C98(&qword_100153CA0, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_1000F3C50()
{
  return sub_1000F3C98(&qword_100153CA8, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_1000F3C98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F3CE0()
{
  return swift_retain();
}

uint64_t sub_1000F3CF0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling16StreakEventAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_1000F3D08()
{
  unint64_t result = qword_100153CF0;
  if (!qword_100153CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153CF0);
  }
  return result;
}

uint64_t sub_1000F3D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014DD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F3DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F3E28(uint64_t a1)
{
  uint64_t v2 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F3F50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s16StreakEventAssetC12MetadataTypeV10CodingKeysON;
}

unint64_t sub_1000F3F8C()
{
  unint64_t result = qword_100153D00;
  if (!qword_100153D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153D00);
  }
  return result;
}

unint64_t sub_1000F3FE4()
{
  unint64_t result = qword_100153D08;
  if (!qword_100153D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153D08);
  }
  return result;
}

unint64_t sub_1000F403C()
{
  unint64_t result = qword_100153D10;
  if (!qword_100153D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153D10);
  }
  return result;
}

uint64_t sub_1000F4090(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_1000F4174()
{
  if (qword_10014C0D8 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1001631C8;
  qword_100163230 = qword_1001631C8;

  return v0;
}

char *sub_1000F41D8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC20JournalWidgetsSecure23CanvasFallbackAssetView_symbolImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v33.receiver = v11;
  v33.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  [v12 setContentMode:2];
  uint64_t v13 = qword_10014C138;
  uint64_t v14 = (char *)v12;
  if (v13 != -1) {
    swift_once();
  }
  [v14 setBackgroundColor:qword_100163230];

  uint64_t v15 = OBJC_IVAR____TtC20JournalWidgetsSecure23CanvasFallbackAssetView_symbolImageView;
  id v16 = *(void **)&v14[OBJC_IVAR____TtC20JournalWidgetsSecure23CanvasFallbackAssetView_symbolImageView];
  [v16 setContentMode:2];
  [v16 setTintColor:qword_100163230];
  [v14 addSubview:v16];
  id v17 = v16;
  id v18 = [v17 superview];
  p_weak_ivar_lyt = &JurassicTheme.weak_ivar_lyt;
  if (v18)
  {
    id v20 = v18;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v17 centerYAnchor];
    id v22 = [v20 centerYAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:0.0];
    if (v23)
    {
      id v23 = v23;
      [v23 setActive:1];

      id v17 = v23;
    }

    p_weak_ivar_lyt = (void **)(&JurassicTheme + 56);
  }
  else
  {
    id v23 = 0;
    id v20 = v17;
  }

  id v24 = *(id *)&v14[v15];
  id v25 = [v24 superview];
  if (v25)
  {
    uint64_t v26 = v25;
    [v24 p_weak_ivar_lyt[350]];
    id v27 = [v24 centerXAnchor];
    id v28 = [v26 centerXAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    if (v29)
    {
      id v30 = v29;
      [v30 setActive:1];

      id v24 = v14;
      int64_t v31 = v30;
    }
    else
    {
      int64_t v31 = 0;
      id v30 = v14;
    }

    id v24 = v30;
  }
  else
  {
    int64_t v31 = 0;
    uint64_t v26 = v14;
  }

  return v14;
}

uint64_t sub_1000F45F4()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

id sub_1000F4634()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasFallbackAssetView()
{
  return self;
}

uint64_t type metadata accessor for CanvasFallbackAssetView.SymbolImageCache()
{
  return self;
}

unint64_t sub_1000F46C4()
{
  unint64_t result = qword_100153E40;
  if (!qword_100153E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153E40);
  }
  return result;
}

Swift::Int sub_1000F4718(void *a1)
{
  sub_1001058D8();
  switch((unint64_t)a1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      sub_1001058E8(v2);
      break;
    default:
      sub_1001058E8(4uLL);
      sub_100104B78();
      id v3 = a1;
      sub_100104BC8();
      swift_bridgeObjectRelease();
      sub_10001087C(a1);
      break;
  }
  return sub_100105928();
}

Swift::Int sub_1000F480C()
{
  return sub_1000F4718(*v0);
}

void sub_1000F4814()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_9;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_9;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_9;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_9:
      sub_1001058E8(v2);
      break;
    default:
      sub_1001058E8(4uLL);
      sub_100104B78();
      id v3 = v1;
      sub_100104BC8();
      swift_bridgeObjectRelease();
      sub_10001087C(v1);
      break;
  }
}

Swift::Int sub_1000F48FC()
{
  uint64_t v1 = *v0;
  sub_1001058D8();
  switch((unint64_t)v1)
  {
    case 0uLL:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3uLL:
      Swift::UInt v2 = 3;
LABEL_7:
      sub_1001058E8(v2);
      break;
    default:
      sub_1001058E8(4uLL);
      sub_100104B78();
      id v3 = v1;
      sub_100104BC8();
      swift_bridgeObjectRelease();
      sub_10001087C(v1);
      break;
  }
  return sub_100105928();
}

uint64_t sub_1000F49EC(void **a1, void **a2)
{
  return sub_1000F5378(*a1, *a2);
}

uint64_t sub_1000F49F8()
{
  sub_100007E0C(&qword_100153E50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10010F790;
  uint64_t v1 = (void *)MKPointOfInterestCategoryAnimalService;
  *(void *)(inited + 32) = MKPointOfInterestCategoryAnimalService;
  *(void *)(inited + 40) = MKPointOfInterestCategoryAirport;
  *(void *)(inited + 48) = MKPointOfInterestCategoryAmusementPark;
  *(void *)(inited + 56) = MKPointOfInterestCategoryAquarium;
  *(void *)(inited + 64) = MKPointOfInterestCategoryATM;
  Swift::UInt v2 = (void *)MKPointOfInterestCategoryAutomotiveRepair;
  *(void *)(inited + 72) = MKPointOfInterestCategoryAutomotiveRepair;
  *(void *)(inited + 80) = MKPointOfInterestCategoryBakery;
  id v3 = (void *)MKPointOfInterestCategoryBaseball;
  *(void *)(inited + 88) = MKPointOfInterestCategoryBank;
  *(void *)(inited + 96) = v3;
  unsigned int v4 = (void *)MKPointOfInterestCategoryBasketball;
  *(void *)(inited + 104) = MKPointOfInterestCategoryBasketball;
  *(void *)(inited + 112) = MKPointOfInterestCategoryBeach;
  uint64_t v90 = (void *)MKPointOfInterestCategoryBeauty;
  uint64_t v5 = MKPointOfInterestCategoryBowling;
  int64_t v91 = (void *)MKPointOfInterestCategoryBowling;
  *(void *)(inited + 120) = MKPointOfInterestCategoryBeauty;
  *(void *)(inited + 128) = v5;
  *(void *)(inited + 136) = MKPointOfInterestCategoryBrewery;
  *(void *)(inited + 144) = MKPointOfInterestCategoryCafe;
  *(void *)(inited + 152) = MKPointOfInterestCategoryCampground;
  *(void *)(inited + 160) = MKPointOfInterestCategoryCarRental;
  uint64_t v92 = (void *)MKPointOfInterestCategoryCastle;
  uint64_t v6 = MKPointOfInterestCategoryConventionCenter;
  double v94 = (void *)MKPointOfInterestCategoryConventionCenter;
  *(void *)(inited + 168) = MKPointOfInterestCategoryCastle;
  *(void *)(inited + 176) = v6;
  double v93 = (void *)MKPointOfInterestCategoryDistillery;
  *(void *)(inited + 184) = MKPointOfInterestCategoryDistillery;
  *(void *)(inited + 192) = MKPointOfInterestCategoryEVCharger;
  uint64_t v95 = (void *)MKPointOfInterestCategoryFairground;
  *(void *)(inited + 200) = MKPointOfInterestCategoryFairground;
  *(void *)(inited + 208) = MKPointOfInterestCategoryFireStation;
  long long v96 = (void *)MKPointOfInterestCategoryFishing;
  *(void *)(inited + 216) = MKPointOfInterestCategoryFishing;
  *(void *)(inited + 224) = MKPointOfInterestCategoryFitnessCenter;
  uint64_t v7 = MKPointOfInterestCategoryFortress;
  uint64_t v97 = (void *)MKPointOfInterestCategoryFortress;
  *(void *)(inited + 232) = MKPointOfInterestCategoryFoodMarket;
  *(void *)(inited + 240) = v7;
  uint64_t v8 = MKPointOfInterestCategoryGolf;
  uint64_t v99 = (void *)MKPointOfInterestCategoryGolf;
  *(void *)(inited + 248) = MKPointOfInterestCategoryGasStation;
  *(void *)(inited + 256) = v8;
  uint64_t v98 = (void *)MKPointOfInterestCategoryGoKart;
  uint64_t v9 = MKPointOfInterestCategoryHiking;
  long long v100 = (void *)MKPointOfInterestCategoryHiking;
  *(void *)(inited + 264) = MKPointOfInterestCategoryGoKart;
  *(void *)(inited + 272) = v9;
  *(void *)(inited + 280) = MKPointOfInterestCategoryHospital;
  *(void *)(inited + 288) = MKPointOfInterestCategoryHotel;
  long long v101 = (void *)MKPointOfInterestCategoryKayaking;
  uint64_t v10 = MKPointOfInterestCategoryLandmark;
  uint64_t v102 = (void *)MKPointOfInterestCategoryLandmark;
  *(void *)(inited + 296) = MKPointOfInterestCategoryKayaking;
  *(void *)(inited + 304) = v10;
  *(void *)(inited + 312) = MKPointOfInterestCategoryLaundry;
  *(void *)(inited + 320) = MKPointOfInterestCategoryLibrary;
  uint64_t v103 = (void *)MKPointOfInterestCategoryMailbox;
  *(void *)(inited + 328) = MKPointOfInterestCategoryMailbox;
  *(void *)(inited + 336) = MKPointOfInterestCategoryMarina;
  uint64_t v104 = (void *)MKPointOfInterestCategoryMiniGolf;
  *(void *)(inited + 344) = MKPointOfInterestCategoryMiniGolf;
  *(void *)(inited + 352) = MKPointOfInterestCategoryMovieTheater;
  uint64_t v11 = MKPointOfInterestCategoryMusicVenue;
  uint64_t v106 = (void *)MKPointOfInterestCategoryMusicVenue;
  *(void *)(inited + 360) = MKPointOfInterestCategoryMuseum;
  *(void *)(inited + 368) = v11;
  uint64_t v105 = (void *)MKPointOfInterestCategoryNationalMonument;
  *(void *)(inited + 376) = MKPointOfInterestCategoryNationalMonument;
  *(void *)(inited + 384) = MKPointOfInterestCategoryNationalPark;
  *(void *)(inited + 392) = MKPointOfInterestCategoryNightlife;
  *(void *)(inited + 400) = MKPointOfInterestCategoryPark;
  *(void *)(inited + 408) = MKPointOfInterestCategoryParking;
  *(void *)(inited + 416) = MKPointOfInterestCategoryPharmacy;
  uint64_t v107 = (void *)MKPointOfInterestCategoryPlanetarium;
  *(void *)(inited + 424) = MKPointOfInterestCategoryPlanetarium;
  *(void *)(inited + 432) = MKPointOfInterestCategoryPolice;
  *(void *)(inited + 440) = MKPointOfInterestCategoryPostOffice;
  *(void *)(inited + 448) = MKPointOfInterestCategoryPublicTransport;
  *(void *)(inited + 456) = MKPointOfInterestCategoryRestaurant;
  *(void *)(inited + 464) = MKPointOfInterestCategoryRestroom;
  uint64_t v108 = (void *)MKPointOfInterestCategoryRockClimbing;
  uint64_t v12 = MKPointOfInterestCategoryRVPark;
  uint64_t v109 = (void *)MKPointOfInterestCategoryRVPark;
  *(void *)(inited + 472) = MKPointOfInterestCategoryRockClimbing;
  *(void *)(inited + 480) = v12;
  uint64_t v13 = MKPointOfInterestCategorySkatePark;
  uint64_t v111 = (void *)MKPointOfInterestCategorySkatePark;
  *(void *)(inited + 488) = MKPointOfInterestCategorySchool;
  *(void *)(inited + 496) = v13;
  uint64_t v110 = (void *)MKPointOfInterestCategorySkating;
  uint64_t v14 = MKPointOfInterestCategorySkiing;
  uint64_t v112 = (void *)MKPointOfInterestCategorySkiing;
  *(void *)(inited + 504) = MKPointOfInterestCategorySkating;
  *(void *)(inited + 512) = v14;
  uint64_t v113 = (void *)MKPointOfInterestCategorySoccer;
  *(void *)(inited + 520) = MKPointOfInterestCategorySoccer;
  uint64_t v114 = (void *)MKPointOfInterestCategorySpa;
  *(void *)(inited + 528) = MKPointOfInterestCategorySpa;
  *(void *)(inited + 536) = MKPointOfInterestCategoryStadium;
  *(void *)(inited + 544) = MKPointOfInterestCategoryStore;
  uint64_t v115 = (void *)MKPointOfInterestCategorySurfing;
  *(void *)(inited + 552) = MKPointOfInterestCategorySurfing;
  BOOL v116 = (void *)MKPointOfInterestCategorySwimming;
  *(void *)(inited + 560) = MKPointOfInterestCategorySwimming;
  unint64_t v117 = (void *)MKPointOfInterestCategoryTennis;
  *(void *)(inited + 568) = MKPointOfInterestCategoryTennis;
  *(void *)(inited + 576) = MKPointOfInterestCategoryTheater;
  *(void *)(inited + 584) = MKPointOfInterestCategoryUniversity;
  int64_t v118 = (void *)MKPointOfInterestCategoryVolleyball;
  *(void *)(inited + 592) = MKPointOfInterestCategoryVolleyball;
  *(void *)(inited + 600) = MKPointOfInterestCategoryWinery;
  *(void *)(inited + 608) = MKPointOfInterestCategoryZoo;
  id v15 = v1;
  id v16 = MKPointOfInterestCategoryAirport;
  id v17 = MKPointOfInterestCategoryAmusementPark;
  id v18 = MKPointOfInterestCategoryAquarium;
  uint64_t v19 = MKPointOfInterestCategoryATM;
  id v20 = v2;
  id v21 = MKPointOfInterestCategoryBakery;
  id v22 = MKPointOfInterestCategoryBank;
  id v23 = v3;
  id v24 = v4;
  id v25 = MKPointOfInterestCategoryBeach;
  id v26 = v90;
  id v27 = v91;
  id v28 = MKPointOfInterestCategoryBrewery;
  id v29 = MKPointOfInterestCategoryCafe;
  id v30 = MKPointOfInterestCategoryCampground;
  int64_t v31 = MKPointOfInterestCategoryCarRental;
  id v32 = v92;
  id v33 = v94;
  id v34 = v93;
  uint64_t v35 = MKPointOfInterestCategoryEVCharger;
  id v36 = v95;
  char v37 = MKPointOfInterestCategoryFireStation;
  id v38 = v96;
  uint64_t v39 = MKPointOfInterestCategoryFitnessCenter;
  uint64_t v40 = MKPointOfInterestCategoryFoodMarket;
  id v41 = v97;
  uint64_t v42 = MKPointOfInterestCategoryGasStation;
  id v43 = v99;
  id v44 = v98;
  id v45 = v100;
  double v46 = MKPointOfInterestCategoryHospital;
  uint64_t v47 = MKPointOfInterestCategoryHotel;
  id v48 = v101;
  id v49 = v102;
  uint64_t v50 = MKPointOfInterestCategoryLaundry;
  char v51 = MKPointOfInterestCategoryLibrary;
  id v52 = v103;
  BOOL v53 = MKPointOfInterestCategoryMarina;
  id v54 = v104;
  double v55 = MKPointOfInterestCategoryMovieTheater;
  char v56 = MKPointOfInterestCategoryMuseum;
  id v57 = v106;
  id v58 = v105;
  char v59 = MKPointOfInterestCategoryNationalPark;
  id v60 = MKPointOfInterestCategoryNightlife;
  double v61 = MKPointOfInterestCategoryPark;
  char v62 = MKPointOfInterestCategoryParking;
  uint64_t v63 = MKPointOfInterestCategoryPharmacy;
  id v64 = v107;
  uint64_t v65 = MKPointOfInterestCategoryPolice;
  char v66 = MKPointOfInterestCategoryPostOffice;
  double v67 = MKPointOfInterestCategoryPublicTransport;
  id v68 = MKPointOfInterestCategoryRestaurant;
  uint64_t v69 = MKPointOfInterestCategoryRestroom;
  id v70 = v108;
  id v71 = v109;
  unint64_t v72 = MKPointOfInterestCategorySchool;
  id v73 = v111;
  id v74 = v110;
  id v75 = v112;
  id v76 = v113;
  id v77 = v114;
  id v78 = MKPointOfInterestCategoryStadium;
  char v79 = MKPointOfInterestCategoryStore;
  id v80 = v115;
  id v81 = v116;
  id v82 = v117;
  uint64_t v83 = MKPointOfInterestCategoryTheater;
  uint64_t v84 = MKPointOfInterestCategoryUniversity;
  id v85 = v118;
  uint64_t v86 = MKPointOfInterestCategoryWinery;
  uint64_t v87 = MKPointOfInterestCategoryZoo;
  uint64_t v88 = (void *)sub_1000B2564(inited);
  swift_setDeallocating();
  type metadata accessor for MKPointOfInterestCategory(0);
  uint64_t result = swift_arrayDestroy();
  off_100153E18 = v88;
  return result;
}

id sub_1000F51D0()
{
  sub_1000F56DC();
  id result = sub_1000F5208(346);
  qword_100153E20 = (uint64_t)result;
  return result;
}

id sub_1000F5208(int a1)
{
  id result = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  if (result)
  {
    id v3 = result;
    sub_100007E0C(&qword_100153E48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001092A0;
    *(void *)(inited + 32) = 0x300000005;
    uint64_t v5 = inited + 32;
    *(_DWORD *)(inited + 40) = 6;
    *(_DWORD *)(inited + 44) = a1;
    *(void *)(inited + 48) = 0x100010024;
    id v6 = v3;
    [v6 replaceAttributes:v5 count:6];

    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000F52D0()
{
  sub_1000F56DC();
  id result = sub_1000F5208(347);
  qword_100153E28 = (uint64_t)result;
  return result;
}

id sub_1000F5308()
{
  sub_1000F56DC();
  id result = sub_1000F5208(169);
  qword_100153E30 = (uint64_t)result;
  return result;
}

id sub_1000F5340()
{
  sub_1000F56DC();
  id result = sub_1000F5208(145);
  qword_100153E38 = (uint64_t)result;
  return result;
}

uint64_t sub_1000F5378(void *a1, void *a2)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 1uLL:
      if (a2 == (void *)1) {
        goto LABEL_9;
      }
      goto LABEL_13;
    case 2uLL:
      if (a2 != (void *)2) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 3uLL:
      if (a2 != (void *)3) {
        goto LABEL_13;
      }
LABEL_9:
      char v8 = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_13:
        char v8 = 0;
      }
      else
      {
        uint64_t v4 = sub_100104B78();
        uint64_t v6 = v5;
        if (v4 == sub_100104B78() && v6 == v7) {
          char v8 = 1;
        }
        else {
          char v8 = sub_1001057F8();
        }
        sub_10001086C(a1);
        sub_10001086C(a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001087C(a2);
        sub_10001087C(a1);
      }
      break;
  }
  return v8 & 1;
}

void *initializeBufferWithCopyOfBuffer for PlaceCategory(void *a1, void **a2)
{
  id v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for PlaceCategory(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for PlaceCategory(void **a1, void **a2)
{
  id v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void *initializeWithTake for PlaceCategory(void *result, void *a2)
{
  *id result = *a2;
  return result;
}

void **assignWithTake for PlaceCategory(void **a1, unint64_t *a2)
{
  id v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceCategory(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaceCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)id result = 0;
    *(_DWORD *)id result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)id result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1000F5694(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000F56AC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *id result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaceCategory()
{
  return &type metadata for PlaceCategory;
}

unint64_t sub_1000F56DC()
{
  unint64_t result = qword_10014C8A0;
  if (!qword_10014C8A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10014C8A0);
  }
  return result;
}

uint64_t sub_1000F571C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  unsigned int v5 = (uint64_t *)(a1 + *(int *)(v4 + 52));
  unint64_t v6 = v5[1];
  if (v6 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    sub_1000D58E0(v8, v6);
    uint64_t v7 = (void *)sub_10000B23C(v8, v6);
    sub_100010364(v8, v6);
  }
  id v9 = [v7 pointOfInterestCategory];

  if (!v2) {
    goto LABEL_29;
  }
  if (v3 == 1701670728 && v2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    if (qword_10014C148 != -1) {
      swift_once();
    }
    (id)qword_100153E20;

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 == 1802661719 && v2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    if (qword_10014C150 != -1) {
      swift_once();
    }
    (id)qword_100153E28;

    swift_bridgeObjectRelease();
    return 1;
  }
  if (v3 == 0x6C6F6F686353 && v2 == 0xE600000000000000 || (sub_1001057F8() & 1) != 0)
  {
    if (qword_10014C158 != -1) {
      swift_once();
    }
    (id)qword_100153E30;

    swift_bridgeObjectRelease();
    return 2;
  }
  if (v3 == 7174471 && v2 == 0xE300000000000000 || (sub_1001057F8() & 1) != 0)
  {
    if (qword_10014C160 != -1) {
      swift_once();
    }
    (id)qword_100153E38;

    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
LABEL_29:
    if (v9)
    {
      uint64_t v10 = qword_10014C140;
      id v11 = v9;
      if (v10 != -1) {
        swift_once();
      }
      if ((sub_1000A8AD8((uint64_t)v11, (uint64_t)off_100153E18) & 1) != 0
        && (uint64_t v12 = a1 + *(int *)(v4 + 48), v13 = *(void *)(v12 + 8), v13 >> 60 != 15))
      {
        uint64_t v15 = *(void *)v12;
        sub_10001030C(*(void *)v12, *(void *)(v12 + 8));
        uint64_t v16 = sub_10000B250(v15, v13);
        sub_100010364(v15, v13);

        swift_bridgeObjectRelease();
        if (!v16)
        {

          return 0;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)v9;
}

uint64_t sub_1000F5B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154078);
  __chkstk_darwin(v3);
  unsigned int v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154080);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154080);
  uint64_t v13 = sub_100007E0C(&qword_10014CA48);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_10014CA48);
  }
  sub_100012510((uint64_t)v11, &qword_100154080);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s10AudioAssetC9AudioDataVMa);
    uint64_t v15 = _s10AudioAssetC9AudioDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s10AudioAssetC9AudioDataVMa, &qword_10014C990, (void (*)(uint64_t))_s10AudioAssetC9AudioDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_10014CA48);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154080);
  return swift_endAccess();
}

uint64_t sub_1000F5E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154068);
  __chkstk_darwin(v3);
  unsigned int v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154070);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154070);
  uint64_t v13 = sub_100007E0C(&qword_10014D9C0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_10014D9C0);
  }
  sub_100012510((uint64_t)v11, &qword_100154070);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154068);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s10PhotoAssetC9PhotoDataVMa);
    uint64_t v15 = _s10PhotoAssetC9PhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s10PhotoAssetC9PhotoDataVMa, &qword_10014D950, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_10014D9C0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154070);
  return swift_endAccess();
}

uint64_t sub_1000F6174()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1;
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    unint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    if (*(unsigned char *)(v0 + 89))
    {
      char v5 = *(unsigned char *)(v0 + 88) & 1;
      uint64_t v6 = *(void *)(v0 + 72);
      swift_bridgeObjectRetain();
      uint64_t v14 = 2;
    }
    else
    {
      unsigned int v15 = *(unsigned __int8 *)(v0 + 88);
      sub_10001030C(*(void *)(v0 + 64), *(void *)(v0 + 72));
      uint64_t v7 = sub_1000F8948();
      uint64_t v12 = v8;
      uint64_t v13 = v7;
      uint64_t v6 = v9;
      char v5 = v10;
      sub_1000FBC1C(v2, v3, v4, v15, 0);
      uint64_t v14 = *(void *)(v0 + 16);
      uint64_t v4 = v12;
      uint64_t v2 = v13;
    }
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 24) = v6;
    *(void *)(v0 + 32) = v4;
    *(unsigned char *)(v0 + 40) = v5;
    sub_1000FBBEC(v2);
    sub_1000FBBFC(v14);
  }
  sub_1000FBC0C(v1);
  return v2;
}

uint64_t sub_1000F62D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154060);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_10014DC58);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_10014DC58);
  uint64_t v13 = sub_100007E0C(&qword_10014DC60);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_10014DC60);
  }
  sub_100012510((uint64_t)v11, &qword_10014DC58);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s9LinkAssetC8LinkDataVMa);
    uint64_t v15 = _s9LinkAssetC8LinkDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s9LinkAssetC8LinkDataVMa, &qword_10014DBE8, (void (*)(uint64_t))_s9LinkAssetC8LinkDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_10014DC60);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_10014DC58);
  return swift_endAccess();
}

uint64_t sub_1000F660C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100150E48);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154058);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154058);
  uint64_t v13 = sub_100007E0C(&qword_10014DF30);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_10014DF30);
  }
  sub_100012510((uint64_t)v11, &qword_100154058);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100150E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
    uint64_t v15 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, &qword_10014DE88, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_10014DF30);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154058);
  return swift_endAccess();
}

uint64_t sub_1000F6940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154048);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154050);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154050);
  uint64_t v13 = sub_100007E0C(&qword_10014EF00);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_10014EF00);
  }
  sub_100012510((uint64_t)v11, &qword_100154050);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154048);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s9BookAssetC8BookDataVMa);
    uint64_t v15 = _s9BookAssetC8BookDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s9BookAssetC8BookDataVMa, &qword_10014EEA0, (void (*)(uint64_t))_s9BookAssetC8BookDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_10014EF00);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154050);
  return swift_endAccess();
}

uint64_t sub_1000F6C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154038);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154040);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154040);
  uint64_t v13 = sub_100007E0C(&qword_100150898);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100150898);
  }
  sub_100012510((uint64_t)v11, &qword_100154040);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154038);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s12PodcastAssetC11PodcastDataVMa);
    uint64_t v15 = _s12PodcastAssetC11PodcastDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s12PodcastAssetC11PodcastDataVMa, &qword_100150828, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100150898);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154040);
  return swift_endAccess();
}

uint64_t sub_1000F6FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154028);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154030);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154030);
  uint64_t v13 = sub_100007E0C(&qword_100150A00);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100150A00);
  }
  sub_100012510((uint64_t)v11, &qword_100154030);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s19MotionActivityAssetC18MotionActivityDataVMa);
    uint64_t v15 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s19MotionActivityAssetC18MotionActivityDataVMa, &qword_100150990, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100150A00);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154030);
  return swift_endAccess();
}

uint64_t sub_1000F72DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100150E30);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154020);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154020);
  uint64_t v13 = sub_100007E0C(&qword_100150E28);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100150E28);
  }
  sub_100012510((uint64_t)v11, &qword_100154020);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100150E30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s15GenericMapAssetC14GenericMapDataVMa);
    uint64_t v15 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s15GenericMapAssetC14GenericMapDataVMa, &qword_100150DC8, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100150E28);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154020);
  return swift_endAccess();
}

uint64_t sub_1000F7610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154010);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154018);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154018);
  uint64_t v13 = sub_100007E0C(&qword_100151308);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100151308);
  }
  sub_100012510((uint64_t)v11, &qword_100154018);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154010);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s12ContactAssetC11ContactDataVMa);
    uint64_t v15 = _s12ContactAssetC11ContactDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s12ContactAssetC11ContactDataVMa, &qword_1001512A8, (void (*)(uint64_t))_s12ContactAssetC11ContactDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100151308);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154018);
  return swift_endAccess();
}

uint64_t sub_1000F7944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100154000);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154008);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154008);
  uint64_t v13 = sub_100007E0C(&qword_1001523C8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_1001523C8);
  }
  sub_100012510((uint64_t)v11, &qword_100154008);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100154000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s10MusicAssetC9MusicDataVMa);
    uint64_t v15 = _s10MusicAssetC9MusicDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s10MusicAssetC9MusicDataVMa, &qword_100152368, (void (*)(uint64_t))_s10MusicAssetC9MusicDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_1001523C8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154008);
  return swift_endAccess();
}

uint64_t sub_1000F7C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100153FF0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100153FF8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100153FF8);
  uint64_t v13 = sub_100007E0C(&qword_100152A08);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100152A08);
  }
  sub_100012510((uint64_t)v11, &qword_100153FF8);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100153FF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t v15 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s14LivePhotoAssetC13LivePhotoDataVMa, &qword_1001529A0, (void (*)(uint64_t))_s14LivePhotoAssetC13LivePhotoDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100152A08);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100153FF8);
  return swift_endAccess();
}

uint64_t sub_1000F7FAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100153FE0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100153FE8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100153FE8);
  uint64_t v13 = sub_100007E0C(&qword_100150400);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100150400);
  }
  sub_100012510((uint64_t)v11, &qword_100153FE8);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100153FE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s10VisitAssetC9VisitDataVMa);
    uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s10VisitAssetC9VisitDataVMa, &qword_1001503D8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100150400);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100153FE8);
  return swift_endAccess();
}

uint64_t sub_1000F82E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100153A10);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100154150);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100154150);
  uint64_t v13 = sub_100007E0C(&qword_100153A18);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100153A18);
  }
  sub_100012510((uint64_t)v11, &qword_100154150);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100153A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s16StreakEventAssetC12MetadataTypeVMa);
    uint64_t v15 = _s16StreakEventAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s16StreakEventAssetC12MetadataTypeVMa, &qword_100153CA0, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100153A18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100154150);
  return swift_endAccess();
}

uint64_t sub_1000F8614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007E0C(&qword_100153FD0);
  __chkstk_darwin(v3);
  char v5 = (uint64_t *)&v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007E0C(&qword_100153FD8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v11 = &v19[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  sub_100010808(v12, (uint64_t)v11, &qword_100153FD8);
  uint64_t v13 = sub_100007E0C(&qword_100153FC8);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100033870((uint64_t)v11, a1, &qword_100153FC8);
  }
  sub_100012510((uint64_t)v11, &qword_100153FD8);
  sub_100010808(v1 + *(void *)(*(void *)v1 + 120), (uint64_t)v5, &qword_100153FD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000FBB84((uint64_t)v5, a1, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
    uint64_t v15 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = *v5;
    unint64_t v18 = v5[1];
    sub_1000F8BE0(_s20ThirdPartyMediaAssetC12MetadataTypeVMa, &qword_100153F40, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa, a1);
    sub_100010378(v17, v18);
  }
  sub_100010808(a1, (uint64_t)v9, &qword_100153FC8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10004103C((uint64_t)v9, v12, &qword_100153FD8);
  return swift_endAccess();
}

uint64_t sub_1000F8948()
{
  sub_100103408();
  swift_allocObject();
  sub_1001033F8();
  sub_100070FB8();
  sub_1001033E8();
  swift_release();
  return v1;
}

uint64_t sub_1000F8B98@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F8BE0(_s10VisitAssetC9VisitDataVMa, &qword_1001503D8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa, a1);
}

uint64_t sub_1000F8BE0@<X0>(uint64_t (*a1)(void)@<X2>, unint64_t *a2@<X3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  sub_100103408();
  swift_allocObject();
  sub_1001033F8();
  uint64_t v8 = a1(0);
  sub_1000FB938(a2, a3);
  sub_1001033E8();
  swift_release();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a4, 0, 1, v8);
}

unint64_t sub_1000F8ECC(char a1)
{
  unint64_t result = 0x707954616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 1735290739;
      break;
    case 2:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 3:
      unint64_t result = 0x614E747369747261;
      break;
    case 4:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 5:
      unint64_t result = 0x656D614E707061;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x726156726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F8FF0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007E0C(&qword_100153FB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_1000FB980();
  sub_100105968();
  LOBYTE(v14[0]) = *v3;
  char v16 = 0;
  sub_10007D4E8();
  sub_1001057A8();
  if (!v2)
  {
    LOBYTE(v14[0]) = 1;
    sub_100105728();
    LOBYTE(v14[0]) = 2;
    sub_100105728();
    LOBYTE(v14[0]) = 3;
    sub_100105728();
    uint64_t v9 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    LOBYTE(v14[0]) = 4;
    sub_100103818();
    sub_1000FB938(&qword_10014DC50, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_100105768();
    LOBYTE(v14[0]) = 5;
    sub_100105728();
    LOBYTE(v14[0]) = 6;
    sub_100103978();
    sub_1000FB938(&qword_10014DF00, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100105768();
    uint64_t v10 = &v3[*(int *)(v9 + 44)];
    char v11 = v10[32];
    long long v12 = *((_OWORD *)v10 + 1);
    v14[0] = *(_OWORD *)v10;
    v14[1] = v12;
    char v15 = v11;
    char v16 = 7;
    sub_100007E0C(&qword_100153F98);
    sub_1000FBAE8(&qword_100153FB8);
    sub_100105768();
    LOBYTE(v14[0]) = v3[*(int *)(v9 + 48)];
    char v16 = 8;
    sub_1000FBB30();
    sub_100105768();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000F93A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C((uint64_t *)&unk_100151990);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007E0C(&qword_100153F88);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = &v14[*(int *)(v12 + 44)];
  *(_OWORD *)char v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v15[32] = 1;
  id v45 = (int *)v12;
  double v46 = a1;
  uint64_t v16 = *(int *)(v12 + 48);
  uint64_t v17 = v14;
  v14[v16] = 3;
  sub_100012154(a1, a1[3]);
  sub_1000FB980();
  unint64_t v18 = v47;
  sub_100105958();
  if (v18) {
    return sub_1000121EC((uint64_t)v46);
  }
  uint64_t v19 = (uint64_t)v7;
  uint64_t v47 = v15;
  uint64_t v40 = v16;
  uint64_t v20 = v43;
  char v51 = 0;
  sub_10007D3D4();
  uint64_t v21 = v44;
  sub_1001056F8();
  uint64_t v22 = (uint64_t)v17;
  *uint64_t v17 = v48;
  LOBYTE(v48) = 1;
  uint64_t v23 = v20;
  *((void *)v17 + 1) = sub_100105678();
  *((void *)v17 + 2) = v24;
  LOBYTE(v48) = 2;
  uint64_t v25 = sub_100105678();
  uint64_t v26 = (uint64_t)v46;
  *((void *)v17 + 3) = v25;
  *((void *)v17 + 4) = v27;
  LOBYTE(v48) = 3;
  uint64_t v28 = sub_100105678();
  id v29 = v45;
  *((void *)v17 + 5) = v28;
  *((void *)v17 + 6) = v30;
  sub_100103818();
  LOBYTE(v48) = 4;
  sub_1000FB938(&qword_10014DC40, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_1001056B8();
  sub_100033870(v19, (uint64_t)&v17[v29[8]], (uint64_t *)&unk_100151990);
  LOBYTE(v48) = 5;
  uint64_t v31 = sub_100105678();
  id v32 = (uint64_t *)&v17[v29[9]];
  *id v32 = v31;
  v32[1] = v33;
  sub_100103978();
  LOBYTE(v48) = 6;
  sub_1000FB938(&qword_10014CA00, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v34 = (uint64_t)v42;
  sub_1001056B8();
  sub_100033870(v34, v22 + v29[10], (uint64_t *)&unk_100151950);
  sub_100007E0C(&qword_100153F98);
  char v51 = 7;
  sub_1000FBAE8(&qword_100153FA0);
  sub_1001056B8();
  char v35 = v50;
  long long v36 = v49;
  char v37 = v47;
  *(_OWORD *)uint64_t v47 = v48;
  *((_OWORD *)v37 + 1) = v36;
  v37[32] = v35;
  char v51 = 8;
  sub_1000FB9D4();
  sub_1001056B8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v21);
  uint64_t v38 = v41;
  *(unsigned char *)(v22 + v40) = v48;
  sub_1000FBA28(v22, v38);
  sub_1000121EC(v26);
  return sub_1000FBA8C(v22);
}

uint64_t sub_1000F9ACC(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = sub_100007E0C(&qword_1001540E8);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007E0C(&qword_1001540F0);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007E0C(&qword_1001540F8);
  uint64_t v18 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007E0C(&qword_100154100);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012154(a1, a1[3]);
  sub_1000FC92C();
  sub_100105968();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_1000FC9D4();
      sub_100105718();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_1000FC980();
      char v15 = v21;
      sub_100105718();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_1000FCA28();
    sub_100105718();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1000F9E38()
{
  return sub_1000F8ECC(*v0);
}

uint64_t sub_1000F9E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000FBEA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000F9E68(uint64_t a1)
{
  unint64_t v2 = sub_1000FB980();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F9EA4(uint64_t a1)
{
  unint64_t v2 = sub_1000FB980();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000F9EE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F93A0(a1, a2);
}

uint64_t sub_1000F9EF8(void *a1)
{
  return sub_1000F8FF0(a1);
}

uint64_t sub_1000F9F10()
{
  uint64_t v1 = 1802658148;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B72614479726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746867696CLL;
  }
}

uint64_t sub_1000F9F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000FC27C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000F9F88(uint64_t a1)
{
  unint64_t v2 = sub_1000FC92C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F9FC4(uint64_t a1)
{
  unint64_t v2 = sub_1000FC92C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FA000(uint64_t a1)
{
  unint64_t v2 = sub_1000FC9D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FA03C(uint64_t a1)
{
  unint64_t v2 = sub_1000FC9D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FA078(uint64_t a1)
{
  unint64_t v2 = sub_1000FCA28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FA0B4(uint64_t a1)
{
  unint64_t v2 = sub_1000FCA28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FA0F0(uint64_t a1)
{
  unint64_t v2 = sub_1000FC980();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FA12C(uint64_t a1)
{
  unint64_t v2 = sub_1000FC980();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1000FA168@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FC3BC(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1000FA194(void *a1)
{
  return sub_1000F9ACC(a1, *v1);
}

uint64_t sub_1000FA1B0()
{
  uint64_t v1 = sub_100007E0C(&qword_100153FC8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling20ThirdPartyMediaAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_1000F8614((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_100012510((uint64_t)v3, &qword_100153FC8);
    return 0;
  }
  sub_1000FBB84((uint64_t)v3, (uint64_t)v7, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
  sub_100007E0C(&qword_10014EF08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10010AFB0;
  *(void *)(inited + 32) = *((void *)v7 + 1);
  *(_OWORD *)(inited + 40) = *((_OWORD *)v7 + 1);
  uint64_t v9 = *((void *)v7 + 6);
  *(_OWORD *)(inited + 56) = *((_OWORD *)v7 + 2);
  *(void *)(inited + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10009063C(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100007E0C(&qword_10014D858);
  swift_arrayDestroy();
  sub_1000FBA8C((uint64_t)v7);
  return v10;
}

uint64_t sub_1000FA400()
{
  return swift_release();
}

id sub_1000FA410()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s20ThirdPartyMediaAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000FA458()
{
  return _s20ThirdPartyMediaAssetCMa(0);
}

uint64_t _s20ThirdPartyMediaAssetCMa(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_100153E80);
}

uint64_t sub_1000FA480()
{
  return swift_updateClassMetadata2();
}

void *sub_1000FA4C4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = a2[6];
    uint64_t v9 = a3[8];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[5] = a2[5];
    a1[6] = v8;
    uint64_t v11 = sub_100103818();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151990);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = sub_100103978();
    uint64_t v24 = *(void *)(v23 - 8);
    char v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v27 = a3[11];
    uint64_t v28 = a3[12];
    id v29 = (char *)v4 + v27;
    uint64_t v30 = (char *)a2 + v27;
    long long v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)id v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    v29[32] = v30[32];
    *((unsigned char *)v4 + v28) = *((unsigned char *)a2 + v28);
  }
  return v4;
}

uint64_t sub_1000FA794(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_100103818();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_100103978();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_1000FA918(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = a3[8];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v10 = sub_100103818();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (const void *)(a2 + v15);
  uint64_t v21 = sub_100103978();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(unsigned char *)(v27 + 32) = *(unsigned char *)(v28 + 32);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  return a1;
}

uint64_t sub_1000FAB98(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_100103978();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  long long v29 = (long long *)(a2 + v27);
  long long v30 = *v29;
  long long v31 = v29[1];
  *(unsigned char *)(v28 + 32) = *((unsigned char *)v29 + 32);
  *(_OWORD *)uint64_t v28 = v30;
  *(_OWORD *)(v28 + 16) = v31;
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1000FAF08(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100103818();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100103978();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t sub_1000FB148(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_100103818();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100007E0C((uint64_t *)&unk_100151990);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  void *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  int v24 = (void *)(a1 + v23);
  int v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_100103978();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_100007E0C((uint64_t *)&unk_100151950);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(unsigned char *)(v34 + 32) = *(unsigned char *)(v35 + 32);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  return a1;
}

uint64_t sub_1000FB474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB488);
}

uint64_t sub_1000FB488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151990);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 32);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_100007E0C((uint64_t *)&unk_100151950);
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 40);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_1000FB5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB5DC);
}

uint64_t sub_1000FB5DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v8 = sub_100007E0C((uint64_t *)&unk_100151990);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007E0C((uint64_t *)&unk_100151950);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s20ThirdPartyMediaAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_100011F00(a1, qword_100153EE8);
}

void sub_1000FB730()
{
  sub_10007D208(319, (unint64_t *)&qword_10014CE18, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10007D208(319, (unint64_t *)&qword_1001518D0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000FB85C()
{
  return swift_retain();
}

uint64_t sub_1000FB86C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC20JournalWidgetsSecure10Journaling20ThirdPartyMediaAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000FB884()
{
  return sub_1000FA1B0();
}

uint64_t sub_1000FB8A8()
{
  return sub_1000FB938(&qword_100153F40, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa);
}

uint64_t sub_1000FB8F0()
{
  return sub_1000FB938(&qword_100153F48, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa);
}

uint64_t sub_1000FB938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FB980()
{
  unint64_t result = qword_100153F90;
  if (!qword_100153F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153F90);
  }
  return result;
}

unint64_t sub_1000FB9D4()
{
  unint64_t result = qword_100153FA8;
  if (!qword_100153FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153FA8);
  }
  return result;
}

uint64_t sub_1000FBA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FBA8C(uint64_t a1)
{
  uint64_t v2 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000FBAE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007F30(&qword_100153F98);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FBB30()
{
  unint64_t result = qword_100153FC0;
  if (!qword_100153FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100153FC0);
  }
  return result;
}

uint64_t sub_1000FBB84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FBBEC(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000FBBFC(uint64_t result)
{
  if (result != 2) {
    return sub_100071554(result);
  }
  return result;
}

uint64_t sub_1000FBC0C(uint64_t result)
{
  if (result != 2) {
    return sub_1000FBBEC(result);
  }
  return result;
}

uint64_t sub_1000FBC1C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_100010378(a1, a2);
  }
}

unsigned char *_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FBCF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantON;
}

unint64_t sub_1000FBD48()
{
  unint64_t result = qword_100154088;
  if (!qword_100154088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154088);
  }
  return result;
}

unint64_t sub_1000FBDA0()
{
  unint64_t result = qword_100154090;
  if (!qword_100154090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154090);
  }
  return result;
}

unint64_t sub_1000FBDF8()
{
  unint64_t result = qword_100154098;
  if (!qword_100154098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154098);
  }
  return result;
}

unint64_t sub_1000FBE50()
{
  unint64_t result = qword_1001540A0;
  if (!qword_1001540A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001540A0);
  }
  return result;
}

uint64_t sub_1000FBEA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001001152C0 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726156726F6C6F63 && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1000FC27C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000 || (sub_1001057F8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B72614479726576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001057F8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1000FC3BC(void *a1)
{
  uint64_t v2 = sub_100007E0C(&qword_1001540A8);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  int v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007E0C(&qword_1001540B0);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_1001540B8);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007E0C(&qword_1001540C0);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100012154(a1, a1[3]);
  sub_1000FC92C();
  uint64_t v12 = (uint64_t)v30;
  sub_100105958();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  uint64_t v13 = v29;
  int v30 = a1;
  uint64_t v14 = v11;
  uint64_t v15 = sub_100105708();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_1001054F8();
    swift_allocError();
    uint64_t v11 = v18;
    sub_100007E0C(&qword_100150BC0);
    *uint64_t v11 = &_s20ThirdPartyMediaAssetC12ColorVariantON;
    sub_100105668();
    sub_1001054E8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    sub_1000121EC((uint64_t)a1);
    return v11;
  }
  uint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_1000FC9D4();
      sub_100105658();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_1000FC980();
      sub_100105658();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_1000FCA28();
    sub_100105658();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  sub_1000121EC((uint64_t)v30);
  return v11;
}

unint64_t sub_1000FC92C()
{
  unint64_t result = qword_1001540C8;
  if (!qword_1001540C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001540C8);
  }
  return result;
}

unint64_t sub_1000FC980()
{
  unint64_t result = qword_1001540D0;
  if (!qword_1001540D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001540D0);
  }
  return result;
}

unint64_t sub_1000FC9D4()
{
  unint64_t result = qword_1001540D8;
  if (!qword_1001540D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001540D8);
  }
  return result;
}

unint64_t sub_1000FCA28()
{
  unint64_t result = qword_1001540E0;
  if (!qword_1001540E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001540E0);
  }
  return result;
}

unsigned char *_s20ThirdPartyMediaAssetC12ColorVariantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FCB48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO10CodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO10CodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO15LightCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO15LightCodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO14DarkCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO14DarkCodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO18VeryDarkCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO18VeryDarkCodingKeysON;
}

unint64_t sub_1000FCBB4()
{
  unint64_t result = qword_100154108;
  if (!qword_100154108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154108);
  }
  return result;
}

unint64_t sub_1000FCC0C()
{
  unint64_t result = qword_100154110;
  if (!qword_100154110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154110);
  }
  return result;
}

unint64_t sub_1000FCC64()
{
  unint64_t result = qword_100154118;
  if (!qword_100154118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154118);
  }
  return result;
}

unint64_t sub_1000FCCBC()
{
  unint64_t result = qword_100154120;
  if (!qword_100154120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154120);
  }
  return result;
}

unint64_t sub_1000FCD14()
{
  unint64_t result = qword_100154128;
  if (!qword_100154128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154128);
  }
  return result;
}

unint64_t sub_1000FCD6C()
{
  unint64_t result = qword_100154130;
  if (!qword_100154130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154130);
  }
  return result;
}

unint64_t sub_1000FCDC4()
{
  unint64_t result = qword_100154138;
  if (!qword_100154138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154138);
  }
  return result;
}

unint64_t sub_1000FCE1C()
{
  unint64_t result = qword_100154140;
  if (!qword_100154140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154140);
  }
  return result;
}

unint64_t sub_1000FCE74()
{
  unint64_t result = qword_100154148;
  if (!qword_100154148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154148);
  }
  return result;
}

uint64_t *sub_1000FCEC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100007E0C(&qword_10014D3B8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_100103AD8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = *(int *)(v7 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v20 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  }
  return a1;
}

uint64_t type metadata accessor for CalendarBinningUnit(uint64_t a1)
{
  return sub_100011F00(a1, qword_100154250);
}

uint64_t sub_1000FD11C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_100103AD8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 20);
    uint64_t v6 = sub_100103978();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v2 + 24);
    uint64_t v8 = sub_100103AE8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  return result;
}

char *sub_1000FD25C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  return a1;
}

char *sub_1000FD440(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v22 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(a1, a2, v22);
      uint64_t v23 = *(int *)(v6 + 20);
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
      uint64_t v27 = *(int *)(v6 + 24);
      uint64_t v28 = &a1[v27];
      int v29 = &a2[v27];
      uint64_t v30 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_100101768((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_1000FD738(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_100103AD8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  return a1;
}

char *sub_1000FD91C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v23 = sub_100103AD8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(a1, a2, v23);
      uint64_t v24 = *(int *)(v6 + 20);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_100103978();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
      uint64_t v28 = *(int *)(v6 + 24);
      int v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = sub_100103AE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
      goto LABEL_7;
    }
    sub_100101768((uint64_t)a1, type metadata accessor for CalendarBinningUnit);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v20 = sub_100007E0C(&qword_10014D3B8);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_100103AD8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100103978();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(int *)(v6 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_100103AE8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

uint64_t sub_1000FDC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FDC24);
}

uint64_t sub_1000FDC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014D3B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000FDC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FDCA8);
}

uint64_t sub_1000FDCA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007E0C(&qword_10014D3B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UniformDateBins(uint64_t a1)
{
  return sub_100011F00(a1, (uint64_t *)&unk_1001541B0);
}

void sub_1000FDD3C()
{
  sub_1000FDDD8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000FDDD8()
{
  if (!qword_1001541C0)
  {
    type metadata accessor for CalendarBinningUnit(255);
    unint64_t v0 = sub_100105278();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001541C0);
    }
  }
}

uint64_t *sub_1000FDE30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100103AD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100103978();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_100103AE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1000FDF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100103AD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_100103AE8();
  int v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_1000FE078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100103AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1000FE180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100103AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1000FE288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100103AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1000FE390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103AD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100103978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100103AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1000FE498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FE4AC);
}

uint64_t sub_1000FE4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100103AD8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100103978();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_100103AE8();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000FE5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FE60C);
}

uint64_t sub_1000FE60C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100103AD8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100103978();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_100103AE8();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t sub_1000FE764()
{
  uint64_t result = sub_100103AD8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100103978();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_100103AE8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000FE868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v39 = a1;
  uint64_t v44 = a2;
  uint64_t v45 = sub_100007E0C(&qword_10014E190);
  uint64_t v4 = __chkstk_darwin(v45);
  uint64_t v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v38 - v6;
  uint64_t v7 = sub_100007E0C(&qword_10014CE88);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100103978();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = sub_100007E0C(&qword_10014D3B8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007E0C(&qword_1001542C8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010808(v3, (uint64_t)v18, &qword_10014D3B8);
  uint64_t v22 = type metadata accessor for CalendarBinningUnit(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v18, 1, v22) == 1)
  {
    sub_100012510((uint64_t)v18, &qword_10014D3B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, 1, 1, v7);
LABEL_5:
    sub_100103868();
    sub_100103868();
    sub_10010074C((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v25 = v10;
    uint64_t result = sub_100104A48();
    if (result)
    {
      uint64_t v38 = v7;
      uint64_t v39 = (uint64_t)v21;
      uint64_t v26 = v45;
      uint64_t v28 = v40;
      uint64_t v27 = v41;
      int v29 = &v41[*(int *)(v45 + 48)];
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
      v30(v41, v15, v25);
      v30(v29, v13, v25);
      uint64_t v31 = *(int *)(v26 + 48);
      char v32 = v42;
      char v33 = &v42[v31];
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
      v34(v42, v27, v25);
      v34(v33, v29, v25);
      uint64_t v35 = (uint64_t)v43;
      v30(v43, v32, v25);
      long long v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v33, v25);
      char v37 = &v32[*(int *)(v45 + 48)];
      v30(v32, v27, v25);
      v30(v37, v29, v25);
      v30((char *)(v35 + *(int *)(v38 + 36)), v37, v25);
      v36(v32, v25);
      sub_100033870(v35, v44, &qword_10014CE88);
      return sub_100012510(v39, &qword_1001542C8);
    }
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v23 = *(void *)(v3 + *(int *)(type metadata accessor for UniformDateBins(0) + 20));
  uint64_t result = v23 + v39;
  if (!__OFADD__(v23, v39))
  {
    sub_1000FFD90(result, v21);
    sub_100101768((uint64_t)v18, type metadata accessor for CalendarBinningUnit);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7) != 1) {
      return sub_100033870((uint64_t)v21, v44, &qword_10014CE88);
    }
    goto LABEL_5;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000FEDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v7 = sub_1001035D8();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  __chkstk_darwin(v7);
  char v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v65 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007E0C(&qword_10014CE88);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007E0C(&qword_10014EF30);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007E0C((uint64_t *)&unk_100151950);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100103978();
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v69 = v21;
  __chkstk_darwin(v21);
  id v70 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);
  uint64_t v67 = v9;
  id v58 = v23;
  uint64_t v59 = v10 + 56;
  v23(a4, 1, 1, v9);
  uint64_t v24 = type metadata accessor for UniformDateBins(0);
  uint64_t v57 = *(int *)(v24 + 20);
  *(void *)(a4 + v57) = 0;
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v60 = a4;
  uint64_t v56 = v25;
  *(void *)(a4 + v25) = 1;
  uint64_t v26 = a1;
  sub_100103A48();
  uint64_t v27 = sub_100103458();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v27) == 1)
  {
    sub_100012510((uint64_t)v17, &qword_10014EF30);
    uint64_t v29 = 1;
  }
  else
  {
    sub_100103448();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v27);
    uint64_t v29 = 0;
  }
  uint64_t v30 = v68;
  uint64_t v31 = v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v20, v29, 1, v69);
  sub_100010808(a2, (uint64_t)v14, &qword_10014CE88);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v20, 1, v31);
  char v33 = v70;
  uint64_t v66 = a2;
  if (v32 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v70, v14, v31);
    sub_100012510((uint64_t)v14, &qword_10014CE88);
    sub_100012510((uint64_t)v20, (uint64_t *)&unk_100151950);
  }
  else
  {
    sub_100012510((uint64_t)v14, &qword_10014CE88);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v33, v20, v31);
  }
  uint64_t v34 = v30;
  uint64_t v35 = sub_100103AD8();
  uint64_t v36 = *(void *)(v35 - 8);
  double v61 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  uint64_t v37 = (uint64_t)v65;
  v61(v65, v26, v35);
  uint64_t v38 = v67;
  uint64_t v39 = *(int *)(v67 + 20);
  uint64_t v54 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v37 + v39, v70, v31);
  uint64_t v40 = v37 + *(int *)(v38 + 24);
  uint64_t v41 = sub_100103AE8();
  uint64_t v42 = *(void *)(v41 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v40, v71, v41);
  sub_100007E0C(&qword_100153A30);
  uint64_t v55 = v36;
  unint64_t v43 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_100108260;
  v61((char *)(v44 + v43), v37, v35);
  sub_100057154(v44);
  swift_setDeallocating();
  uint64_t v45 = v35;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  double v46 = v62;
  uint64_t v47 = v66;
  sub_100103A58();
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_100103598();
  char v50 = v49;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v46, v64);
  if (v50)
  {
    __break(1u);
  }
  else
  {
    uint64_t v52 = sub_1000FF980(v47);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v71, v41);
    sub_100012510(v47, &qword_10014CE88);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v45);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v69);
    uint64_t v53 = v60;
    sub_100012510(v60, &qword_10014D3B8);
    sub_100101F24(v37, v53, type metadata accessor for CalendarBinningUnit);
    uint64_t result = v58(v53, 0, 1, v67);
    *(void *)(v53 + v57) = v48;
    *(void *)(v53 + v56) = v52;
  }
  return result;
}

uint64_t sub_1000FF52C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001035D8();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_10014D3B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010808(v1, (uint64_t)v8, &qword_10014D3B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100012510((uint64_t)v8, &qword_10014D3B8);
    return 0;
  }
  uint64_t v23 = v1;
  sub_100101F24((uint64_t)v8, (uint64_t)v12, type metadata accessor for CalendarBinningUnit);
  sub_100007E0C(&qword_100153A30);
  uint64_t v14 = sub_100103AD8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = v2;
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100108260;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v18 + v17, v12, v14);
  sub_100057154(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100103A58();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_100103598();
  char v21 = v20;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  if (v21) {
    goto LABEL_7;
  }
  sub_100101768((uint64_t)v12, type metadata accessor for CalendarBinningUnit);
  uint64_t v22 = *(void *)(v23 + *(int *)(type metadata accessor for UniformDateBins(0) + 20));
  uint64_t result = v19 - v22;
  if (__OFSUB__(v19, v22))
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000FF8A4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      v9.i64[0] = 0;
      v9.i64[1] = result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip1q_s64(v9, v8), vzip2q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    uint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1000FF980(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v40 = sub_100007E0C(&qword_10014CE88);
  uint64_t v3 = __chkstk_darwin(v40);
  int v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v30 - v5;
  uint64_t v43 = sub_1001035D8();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  int64x2_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v42 = v2 + *(int *)(v9 + 24);
  uint64_t v10 = sub_100007E0C(&qword_100153A30);
  uint64_t v11 = sub_100103AD8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v37 = v14 + *(void *)(v12 + 72);
  uint64_t v38 = v10;
  uint64_t v36 = v13 | 7;
  uint64_t v15 = swift_allocObject();
  long long v34 = xmmword_100108260;
  *(_OWORD *)(v15 + 16) = xmmword_100108260;
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v35(v15 + v14, v2, v11);
  sub_100057154(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v33 = v2 + *(int *)(v9 + 20);
  sub_100103A58();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_100103598();
  LOBYTE(v9) = v17;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v39 = v6 + 8;
  uint64_t result = v18(v8, v43);
  if (v9) {
    goto LABEL_14;
  }
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v34;
  v35(v20 + v14, v2, v11);
  sub_100057154(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100103A58();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_100103598();
  char v23 = v22;
  uint64_t result = v18(v8, v43);
  if ((v23 & 1) == 0)
  {
    uint64_t v24 = v31;
    sub_1000FFD90(v16, v31);
    uint64_t v25 = v32;
    uint64_t result = sub_1000FFD90(v21, v32);
    uint64_t v26 = v21 - v16;
    if (__OFSUB__(v21, v16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v27 = v26 + 1;
      if (!__OFADD__(v26, 1))
      {
        uint64_t result = sub_100103928();
        if ((result & 1) == 0 || (BOOL v28 = __OFSUB__(v27, 1), --v27, !v28))
        {
          char v29 = sub_100103928();
          sub_100012510((uint64_t)v25, &qword_10014CE88);
          uint64_t result = sub_100012510((uint64_t)v24, &qword_10014CE88);
          if ((v29 & 1) == 0) {
            return v27;
          }
          BOOL v28 = __OFSUB__(v27--, 1);
          if (!v28) {
            return v27;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1000FFD90@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v44 = sub_100007E0C(&qword_10014E190);
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v37 - v6;
  uint64_t v7 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v42 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_100103978();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v41 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v17 = (char *)&v37 - v16;
  type metadata accessor for CalendarBinningUnit(0);
  uint64_t v43 = v2;
  uint64_t v18 = a1;
  sub_100103A98();
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t result = v19(v11, 1, v12);
  if (result == 1) {
    goto LABEL_8;
  }
  uint64_t v37 = v13;
  uint64_t v21 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t result = v21(v17, v11, v12);
  if (__OFADD__(v18, 1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  char v22 = v42;
  sub_100103A98();
  uint64_t result = v19(v22, 1, v12);
  if (result != 1)
  {
    char v23 = v41;
    v21(v41, v22, v12);
    sub_10010074C((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_100104A48();
    if (result)
    {
      uint64_t v24 = v44;
      uint64_t v25 = v38;
      uint64_t v26 = &v38[*(int *)(v44 + 48)];
      v21(v38, v17, v12);
      uint64_t v27 = (void (*)(char *, char *, uint64_t))v21;
      BOOL v28 = v26;
      v27(v26, v23, v12);
      char v29 = v39;
      uint64_t v30 = &v39[*(int *)(v24 + 48)];
      uint64_t v31 = v37;
      int v32 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v32(v39, v25, v12);
      v32(v30, v28, v12);
      uint64_t v33 = v40;
      v27(v40, v29, v12);
      long long v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      v34(v30, v12);
      uint64_t v35 = &v29[*(int *)(v44 + 48)];
      v27(v29, v25, v12);
      v27(v35, v28, v12);
      uint64_t v36 = sub_100007E0C(&qword_10014CE88);
      v27(&v33[*(int *)(v36 + 36)], v35, v12);
      return ((uint64_t (*)(char *, uint64_t))v34)(v29, v12);
    }
    goto LABEL_7;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1001001D4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 24));
  return result;
}

void (*sub_1001001E4(void *a1, uint64_t *a2))(uint64_t *a1)
{
  uint64_t v4 = sub_100007E0C(&qword_10014CE88);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  *a1 = v5;
  sub_1000FE868(*a2, (uint64_t)v5);
  return sub_100100264;
}

void sub_100100264(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_100012510(*a1, &qword_10014CE88);

  free(v1);
}

uint64_t *sub_1001002A8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + *(int *)(a2 + 24));
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = *result;
  if (*result < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = result[1];
  if (v5 >= v7)
  {
    uint64_t v8 = sub_100007E0C(&qword_1001542C0);
    uint64_t result = (uint64_t *)sub_100101F8C(v3, (uint64_t)a3 + *(int *)(v8 + 40), type metadata accessor for UniformDateBins);
    *a3 = v6;
    a3[1] = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100100330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100101F8C(v2, a2, type metadata accessor for UniformDateBins);
  uint64_t result = sub_100007E0C(&qword_1001542B0);
  *(void *)(a2 + *(int *)(result + 36)) = 0;
  *(void *)(a2 + *(int *)(result + 40)) = *(void *)(v2 + *(int *)(a1 + 24));
  return result;
}

BOOL sub_1001003A0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 24)) == 0;
}

void sub_1001003B8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1001003C8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100100400@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1000FF8A4(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_100100438(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_100100490(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_1001004AC(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_1001004C8(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_1001004E4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_1001004FC(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_100100514@<X0>(uint64_t a1@<X8>)
{
  sub_100101F24(v1, a1, type metadata accessor for UniformDateBins);
  uint64_t result = sub_100007E0C(&qword_100154298);
  *(void *)(a1 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_100100568(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + *(int *)(a1 + 24));
  if (result < 0) {
    __break(1u);
  }
  return result;
}

double *sub_10010057C()
{
  uint64_t v1 = sub_100100794(v0);
  sub_100101768(v0, type metadata accessor for UniformDateBins);
  return v1;
}

uint64_t sub_1001005C8()
{
  if ((sub_100103AC8() & 1) == 0 || (sub_100103928() & 1) == 0) {
    return 0;
  }

  return sub_100103A78();
}

uint64_t sub_100100644()
{
  return sub_100050EC4(&qword_100154290, &qword_100154298);
}

uint64_t sub_100100680()
{
  return sub_10010074C(&qword_1001542A0, (void (*)(uint64_t))type metadata accessor for UniformDateBins);
}

void *sub_1001006C8()
{
  return &protocol witness table for Int;
}

uint64_t sub_1001006D4()
{
  return sub_100050EC4(&qword_1001542A8, &qword_1001542B0);
}

uint64_t sub_100100710()
{
  return sub_100050EC4(&qword_1001542B8, &qword_1001542C0);
}

uint64_t sub_10010074C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double *sub_100100794(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UniformDateBins(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007E0C(&qword_100154298);
  uint64_t result = (double *)__chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + *(int *)(v3 + 32));
  if (v10 < 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v10) {
    return _swiftEmptyArrayStorage;
  }
  sub_100007E0C(&qword_1001542D0);
  uint64_t v11 = *(void *)(sub_100007E0C(&qword_10014CE88) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v14);
  if (!v12) {
    goto LABEL_13;
  }
  if ((double *)((char *)result - v13) != (double *)0x8000000000000000 || v12 != -1)
  {
    _OWORD v14[2] = v10;
    v14[3] = 2 * ((uint64_t)((uint64_t)result - v13) / v12);
    uint64_t v16 = *(void *)(sub_100007E0C(&qword_10014CE88) - 8);
    uint64_t v17 = (uint64_t)v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    sub_100101F8C(a1, (uint64_t)v5, type metadata accessor for UniformDateBins);
    uint64_t v18 = sub_100100B10((uint64_t)v9, v17, v10);
    sub_100012510((uint64_t)v9, &qword_100154298);
    if (v18 == v10) {
      return (double *)v14;
    }
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
LABEL_14:
  __break(1u);
  return result;
}

double *sub_1001009BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100007E0C(&qword_1001521A8);
  uint64_t v3 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v6);
  if (v4)
  {
    if ((double *)((char *)result - v5) != (double *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_1001017C8(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_10002CFC0();
      if (v9 == v1) {
        return (double *)v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100100B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v118 = sub_100007E0C(&qword_10014E190);
  uint64_t v6 = __chkstk_darwin(v118);
  uint64_t v112 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v111 = (char *)&v89 - v8;
  uint64_t v9 = sub_100007E0C((uint64_t *)&unk_100151950);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v89 - v13;
  uint64_t v15 = sub_100103978();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v115 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v89 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v104 = (char *)&v89 - v23;
  __chkstk_darwin(v22);
  BOOL v116 = (char *)&v89 - v24;
  uint64_t v25 = sub_100007E0C(&qword_10014D3B8);
  __chkstk_darwin(v25 - 8);
  uint64_t v119 = (uint64_t)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007E0C(&qword_1001542C8);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v113 = (uint64_t)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v105 = (uint64_t)&v89 - v30;
  uint64_t v123 = sub_100007E0C(&qword_10014CE88);
  uint64_t v106 = *(void *)(v123 - 8);
  uint64_t v31 = __chkstk_darwin(v123);
  uint64_t v110 = (char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v103 = (uint64_t)&v89 - v33;
  uint64_t v34 = sub_100007E0C(&qword_100154298);
  uint64_t v35 = v34 - 8;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v89 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_100101F24(v122, (uint64_t)v37, type metadata accessor for UniformDateBins);
  uint64_t v39 = *(int *)(v35 + 44);
  *(void *)&v37[v39] = 0;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_29;
  }
  if (!a3)
  {
LABEL_29:
    sub_100033870((uint64_t)v37, a1, &qword_100154298);
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_35;
  }
  uint64_t v99 = v39;
  uint64_t v91 = a1;
  uint64_t v121 = v37;
  uint64_t v40 = type metadata accessor for UniformDateBins(0);
  uint64_t v41 = (uint64_t)v121;
  uint64_t v95 = v40;
  uint64_t v42 = *(int *)(v40 + 24);
  uint64_t v120 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
  uint64_t v98 = v42;
  if (!*(void *)&v121[v42])
  {
    uint64_t v122 = 0;
LABEL_25:
    uint64_t v82 = v105;
    (*v120)(v105, 1, 1, v123);
LABEL_26:
    a1 = v91;
    sub_100012510(v82, &qword_1001542C8);
    a3 = v122;
LABEL_28:
    uint64_t v37 = v121;
    goto LABEL_29;
  }
  double v93 = v14;
  uint64_t v92 = v12;
  uint64_t v122 = 0;
  uint64_t v43 = 0;
  double v94 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v114 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  long long v101 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  long long v100 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v109 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
  uint64_t v90 = a3;
  uint64_t v97 = a3 - 1;
  uint64_t v102 = v21;
  uint64_t v44 = v116;
  uint64_t v45 = v119;
  uint64_t v46 = v113;
  uint64_t v96 = v15;
  while (1)
  {
    uint64_t v117 = a2;
    uint64_t v47 = v41;
    sub_100010808(v41, v45, &qword_10014D3B8);
    uint64_t v48 = type metadata accessor for CalendarBinningUnit(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v45, 1, v48);
    if (result == 1)
    {
      sub_100012510(v45, &qword_10014D3B8);
      char v49 = *v120;
      (*v120)(v46, 1, 1, v123);
    }
    else
    {
      uint64_t v50 = *(void *)(v47 + *(int *)(v95 + 20));
      uint64_t v51 = v50 + v43;
      uint64_t v52 = v94;
      if (__OFADD__(v50, v43)) {
        goto LABEL_32;
      }
      uint64_t v53 = v93;
      sub_100103A98();
      uint64_t v54 = *v52;
      uint64_t result = (*v52)(v53, 1, v15);
      if (result == 1) {
        goto LABEL_36;
      }
      uint64_t v55 = *v114;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))*v114)(v44, v53, v15);
      if (__OFADD__(v51, 1)) {
        goto LABEL_33;
      }
      uint64_t v56 = v92;
      sub_100103A98();
      uint64_t result = v54(v56, 1, v15);
      if (result == 1) {
        goto LABEL_37;
      }
      uint64_t v57 = v104;
      v55(v104, v56, v15);
      sub_10010074C((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t result = sub_100104A48();
      if ((result & 1) == 0) {
        goto LABEL_34;
      }
      uint64_t v58 = v118;
      uint64_t v59 = v111;
      uint64_t v60 = &v111[*(int *)(v118 + 48)];
      double v61 = *v101;
      (*v101)(v111, v44, v15);
      uint64_t v108 = v60;
      v61(v60, v57, v15);
      char v62 = v112;
      uint64_t v63 = &v112[*(int *)(v58 + 48)];
      v61(v112, v59, v15);
      v61(v63, v60, v15);
      uint64_t v64 = (uint64_t)v110;
      v55(v110, v62, v15);
      uint64_t v65 = *v100;
      (*v100)(v63, v15);
      uint64_t v66 = &v62[*(int *)(v118 + 48)];
      v55(v62, v59, v15);
      v55(v66, v108, v15);
      uint64_t v67 = v123;
      v55((char *)(v64 + *(int *)(v123 + 36)), v66, v15);
      uint64_t v68 = v116;
      v65(v62, v15);
      uint64_t v46 = v113;
      sub_100033870(v64, v113, &qword_10014CE88);
      v65(v104, v15);
      v65(v68, v15);
      uint64_t v45 = v119;
      sub_100101768(v119, type metadata accessor for CalendarBinningUnit);
      char v49 = *v120;
      (*v120)(v46, 0, 1, v67);
      if ((*v109)(v46, 1, v67) != 1)
      {
        uint64_t v82 = v105;
        uint64_t result = sub_100033870(v46, v105, &qword_10014CE88);
        uint64_t v21 = v102;
        goto LABEL_18;
      }
      uint64_t v21 = v102;
    }
    sub_100103868();
    uint64_t v69 = v115;
    sub_100103868();
    sub_10010074C((unint64_t *)&qword_10014CE98, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_100104A48();
    if ((result & 1) == 0) {
      goto LABEL_31;
    }
    uint64_t v70 = v118;
    uint64_t v71 = v111;
    unint64_t v72 = &v111[*(int *)(v118 + 48)];
    id v73 = *v101;
    (*v101)(v111, v21, v15);
    id v74 = v72;
    uint64_t v107 = v72;
    v73(v72, v69, v15);
    id v75 = v112;
    id v76 = &v112[*(int *)(v70 + 48)];
    v73(v112, v71, v15);
    v73(v76, v74, v15);
    id v77 = *v114;
    uint64_t v78 = (uint64_t)v110;
    (*v114)(v110, v75, v15);
    uint64_t v108 = (char *)v49;
    char v79 = *v100;
    (*v100)(v76, v15);
    id v80 = &v75[*(int *)(v70 + 48)];
    v77(v75, v71, v15);
    v77(v80, v107, v15);
    v77((char *)(v78 + *(int *)(v123 + 36)), v80, v15);
    id v81 = v75;
    uint64_t v46 = v113;
    v79(v81, v15);
    uint64_t v82 = v105;
    sub_100033870(v78, v105, &qword_10014CE88);
    uint64_t v21 = v102;
    v79(v115, v15);
    v79(v21, v15);
    char v49 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v108;
    uint64_t result = sub_100012510(v46, &qword_1001542C8);
    uint64_t v45 = v119;
LABEL_18:
    uint64_t v83 = *(void *)&v121[v99];
    uint64_t v43 = v83 + 1;
    if (__OFADD__(v83, 1)) {
      break;
    }
    *(void *)&v121[v99] = v43;
    uint64_t v84 = v123;
    v49(v82, 0, 1, v123);
    if ((*v109)(v82, 1, v84) == 1) {
      goto LABEL_26;
    }
    uint64_t v85 = v82;
    uint64_t v86 = v103;
    sub_100033870(v85, v103, &qword_10014CE88);
    uint64_t v87 = v117;
    sub_100033870(v86, v117, &qword_10014CE88);
    if (v97 == v122)
    {
      a1 = v91;
      a3 = v90;
      goto LABEL_28;
    }
    a2 = v87 + *(void *)(v106 + 72);
    uint64_t v41 = (uint64_t)v121;
    uint64_t v88 = *(void *)&v121[v98];
    ++v122;
    uint64_t v15 = v96;
    uint64_t v44 = v116;
    if (v43 == v88) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100101768(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001017C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_100101F8C(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    sub_100101F24((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    uint64_t result = sub_100101F24((uint64_t)v15, a2, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

BOOL sub_100101AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarBinningUnit(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007E0C(&qword_1001542D8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007E0C(&qword_10014D3B8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - v16;
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v28 - v18;
  uint64_t v29 = a1;
  sub_100010808(a1, (uint64_t)&v28 - v18, &qword_10014D3B8);
  uint64_t v30 = a2;
  sub_100010808(a2, (uint64_t)v17, &qword_10014D3B8);
  uint64_t v20 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_100010808((uint64_t)v19, (uint64_t)v11, &qword_10014D3B8);
  sub_100010808((uint64_t)v17, v20, &qword_10014D3B8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v11, 1, v4) != 1)
  {
    uint64_t v24 = v31;
    sub_100010808((uint64_t)v11, v31, &qword_10014D3B8);
    if (v21(v20, 1, v4) != 1)
    {
      sub_100101F24(v20, (uint64_t)v7, type metadata accessor for CalendarBinningUnit);
      if (sub_100103AC8() & 1) != 0 && (sub_100103928())
      {
        char v27 = sub_100103A78();
        sub_100101768((uint64_t)v7, type metadata accessor for CalendarBinningUnit);
        sub_100012510((uint64_t)v17, &qword_10014D3B8);
        sub_100012510((uint64_t)v19, &qword_10014D3B8);
        sub_100101768(v24, type metadata accessor for CalendarBinningUnit);
        sub_100012510((uint64_t)v11, &qword_10014D3B8);
        if ((v27 & 1) == 0) {
          return 0;
        }
        goto LABEL_4;
      }
      sub_100101768((uint64_t)v7, type metadata accessor for CalendarBinningUnit);
      sub_100012510((uint64_t)v17, &qword_10014D3B8);
      sub_100012510((uint64_t)v19, &qword_10014D3B8);
      sub_100101768(v24, type metadata accessor for CalendarBinningUnit);
      uint64_t v26 = (uint64_t)v11;
      unint64_t v25 = &qword_10014D3B8;
LABEL_14:
      sub_100012510(v26, v25);
      return 0;
    }
    sub_100012510((uint64_t)v17, &qword_10014D3B8);
    sub_100012510((uint64_t)v19, &qword_10014D3B8);
    sub_100101768(v24, type metadata accessor for CalendarBinningUnit);
LABEL_8:
    unint64_t v25 = &qword_1001542D8;
    uint64_t v26 = (uint64_t)v11;
    goto LABEL_14;
  }
  sub_100012510((uint64_t)v17, &qword_10014D3B8);
  sub_100012510((uint64_t)v19, &qword_10014D3B8);
  if (v21(v20, 1, v4) != 1) {
    goto LABEL_8;
  }
  sub_100012510((uint64_t)v11, &qword_10014D3B8);
LABEL_4:
  uint64_t v22 = type metadata accessor for UniformDateBins(0);
  if (*(void *)(v29 + *(int *)(v22 + 20)) == *(void *)(v30 + *(int *)(v22 + 20))) {
    return *(void *)(v29 + *(int *)(v22 + 24)) == *(void *)(v30 + *(int *)(v22 + 24));
  }
  return 0;
}

uint64_t sub_100101F24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100101F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id SyncDataMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id JournalEntryAssetAttachmentMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetAttachmentMO();
  [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetAttachmentMO()
{
  return self;
}

id JournalEntryAssetAttachmentMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetAttachmentMO();
  return [super dealloc];
}

id static JournalEntryAssetAttachmentMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100104B38();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void *sub_1001021D0()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_1001021DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for JournalEntryAssetAttachmentMO();
  uint64_t result = sub_1001054B8();
  *a1 = result;
  return result;
}

id JournalEntryAssetFileAttachmentMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetFileAttachmentMO()
{
  return self;
}

id JournalEntryAssetFileAttachmentMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetFileAttachmentMO();
  [super dealloc];
}

id static JournalEntryAssetFileAttachmentMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100104B38();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

unint64_t sub_1001023A4()
{
  unint64_t result = qword_100154330;
  if (!qword_100154330)
  {
    sub_100007F30(&qword_10014DD70);
    sub_100102418();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100154330);
  }
  return result;
}

unint64_t sub_100102418()
{
  unint64_t result = qword_10014D5B0;
  if (!qword_10014D5B0)
  {
    sub_1001039D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10014D5B0);
  }
  return result;
}

uint64_t sub_100102470@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 id];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1001039B8();

    uint64_t v5 = sub_1001039D8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1001039D8();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

id JournalEntryAssetMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetMO()
{
  return self;
}

id JournalEntryAssetMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetMO();
  return [super dealloc];
}

id static JournalEntryAssetMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100104B38();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id JournalEntryMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryMO();
  [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryMO()
{
  return self;
}

id JournalEntryMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryMO();
  return [super dealloc];
}

id static JournalEntryMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100104B38();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id JournalMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalMO()
{
  return self;
}

id JournalMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalMO();
  return [super dealloc];
}

id static JournalMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100104B38();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id SyncDataMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SyncDataMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for SyncDataMO()
{
  return self;
}

id SyncDataMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncDataMO();
  return [super dealloc];
}

id static SyncDataMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100104B38();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100102B40@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SyncDataMO();
  uint64_t result = sub_1001054B8();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

id sub_100102BA8()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  qword_1001543D8 = (uint64_t)result;
  return result;
}

uint64_t sub_100102C00(uint64_t a1)
{
  return sub_100102D20(a1, qword_100163240);
}

uint64_t sub_100102C24(uint64_t a1)
{
  return sub_100102D20(a1, qword_100163258);
}

uint64_t sub_100102C48(uint64_t a1)
{
  return sub_100102D20(a1, qword_100163270);
}

uint64_t sub_100102C6C(uint64_t a1)
{
  return sub_100102D20(a1, qword_100163288);
}

uint64_t sub_100102C90(uint64_t a1)
{
  return sub_100102D20(a1, qword_1001632A0);
}

uint64_t sub_100102CB4(uint64_t a1)
{
  return sub_100102D20(a1, qword_1001632B8);
}

uint64_t sub_100102CD8(uint64_t a1)
{
  return sub_100102D20(a1, qword_1001632D0);
}

uint64_t sub_100102CFC(uint64_t a1)
{
  return sub_100102D20(a1, qword_1001632E8);
}

uint64_t sub_100102D20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100103C38();
  sub_1000081D0(v3, a2);
  sub_100007D30(v3, (uint64_t)a2);
  if (qword_10014C168 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1001543D8;
  return sub_100103C28();
}

uint64_t sub_100102DC4()
{
  return sub_100102F70(1);
}

uint64_t sub_100102DCC(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_100162D38 == -1)
  {
    if (qword_100162D40) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_100162D38, 0, (dispatch_function_t)sub_100102F68);
    if (qword_100162D40) {
      return _availability_version_check();
    }
  }
  if (qword_100162D30 == -1)
  {
    BOOL v8 = dword_100162D20 < a2;
    if (dword_100162D20 > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_100162D30, 0, (dispatch_function_t)sub_100102DC4);
    BOOL v8 = dword_100162D20 < a2;
    if (dword_100162D20 > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_100162D24 > a3) {
    return 1;
  }
  return dword_100162D24 >= a3 && dword_100162D28 >= a4;
}

uint64_t sub_100102F68()
{
  return sub_100102F70(0);
}

uint64_t sub_100102F70(uint64_t result)
{
  NSString v1 = (uint64_t (**)(void))qword_100162D40;
  if (qword_100162D40) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (&__availability_version_check)
    {
      NSString v1 = &__availability_version_check;
      qword_100162D40 = (uint64_t)&__availability_version_check;
    }
    if (!v1 || result != 0)
    {
      id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        id v4 = *(unsigned __int8 **)result;
        id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          id v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            objc_super v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    uint64_t v11 = (uint64_t (*)(void))result;
                    id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    uint64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        id result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          uint64_t v13 = (FILE *)result;
                          char v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            uint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            uint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              uint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  unint64_t v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &dword_100162D20, &dword_100162D24, &dword_100162D28);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    unint64_t v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  unint64_t v19 = v13;
                                }
                                uint64_t v16 = v26;
                              }
                              else
                              {
                                uint64_t v16 = v26;
                                unint64_t v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          unint64_t v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1001032B8()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_1001032C8()
{
  return static AppIntent.description.getter();
}

uint64_t sub_1001032D8()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t sub_1001032E8()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_1001032F8()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_100103318()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_100103328()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100103338()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_100103348()
{
  return DisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_100103358()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_100103368()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_100103388()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_100103398()
{
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_1001033A8()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_1001033C8()
{
  return static FormatStyle<>.iso8601.getter();
}

uint64_t sub_1001033D8()
{
  return static FormatStyle<>.time(pattern:)();
}

uint64_t sub_1001033E8()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1001033F8()
{
  return JSONDecoder.init()();
}

uint64_t sub_100103408()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_100103418()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_100103428()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_100103438()
{
  return DateInterval.end.getter();
}

uint64_t sub_100103448()
{
  return DateInterval.start.getter();
}

uint64_t sub_100103458()
{
  return type metadata accessor for DateInterval();
}

uint64_t sub_100103468()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100103478()
{
  return Notification.object.getter();
}

uint64_t sub_100103488()
{
  return Notification.userInfo.getter();
}

uint64_t sub_100103498()
{
  return type metadata accessor for Notification();
}

uint64_t sub_1001034A8()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_1001034B8()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_1001034C8()
{
  return URLComponents.queryItems.modify();
}

uint64_t sub_1001034D8()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_1001034E8()
{
  return URLComponents.url.getter();
}

uint64_t sub_1001034F8()
{
  return URLComponents.host.setter();
}

uint64_t sub_100103508()
{
  return URLComponents.scheme.setter();
}

uint64_t sub_100103518()
{
  return URLComponents.init()();
}

uint64_t sub_100103528()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_100103538()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_100103548()
{
  return __DataStorage._length.getter();
}

uint64_t sub_100103558()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_100103568()
{
  return DateComponents.weekOfYear.getter();
}

uint64_t sub_100103578()
{
  return DateComponents.day.getter();
}

uint64_t sub_100103588()
{
  return DateComponents.day.setter();
}

uint64_t sub_100103598()
{
  return DateComponents.value(for:)();
}

uint64_t sub_1001035A8()
{
  return DateComponents.second.getter();
}

uint64_t sub_1001035B8()
{
  return DateComponents.second.setter();
}

uint64_t sub_1001035C8()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_1001035D8()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1001035E8()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_1001035F8()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_100103608()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_100103618()
{
  return SortDescriptor.init(_:comparator:)();
}

uint64_t sub_100103628()
{
  return SortDescriptor.init<A>(_:order:)();
}

uint64_t sub_100103638(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_100103648()
{
  return IntegerFormatStyle.init(locale:)();
}

uint64_t sub_100103658()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t sub_100103668()
{
  return PropertyListDecoder.init()();
}

uint64_t sub_100103678()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t sub_100103688()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_100103698()
{
  return PropertyListEncoder.init()();
}

uint64_t sub_1001036A8()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t sub_1001036B8()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1001036C8()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1001036D8()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001036E8()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_1001036F8()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t sub_100103708()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t sub_100103718()
{
  return URL.relativePath.getter();
}

uint64_t sub_100103728()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_100103738()
{
  return URL.pathExtension.getter();
}

uint64_t sub_100103748()
{
  return URL.absoluteString.getter();
}

uint64_t sub_100103768()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t sub_100103778()
{
  return static URL.libraryDirectory.getter();
}

void sub_100103788(NSURL *retstr@<X8>)
{
}

uint64_t sub_100103798()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_1001037A8()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001037B8(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_1001037C8()
{
  return URL.path.getter();
}

uint64_t sub_1001037D8()
{
  return URL.init(string:)();
}

uint64_t sub_1001037E8()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t sub_1001037F8()
{
  return URL.appending<A>(components:directoryHint:)();
}

uint64_t sub_100103808()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_100103818()
{
  return type metadata accessor for URL();
}

uint64_t sub_100103828()
{
  return Data.init(contentsOf:options:)();
}

NSData sub_100103838()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_100103848()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100103858()
{
  return Data.write(to:options:)();
}

uint64_t sub_100103868()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_100103878()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_100103888()
{
  return static Date.distantPast.getter();
}

uint64_t sub_100103898()
{
  return static Date.distantFuture.getter();
}

uint64_t sub_1001038A8()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_1001038B8()
{
  return type metadata accessor for Date.ISO8601FormatStyle();
}

uint64_t sub_1001038C8()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_1001038D8()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1001038E8()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1001038F8()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_100103908()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_100103918()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_100103928()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_100103938()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100103948()
{
  return static Date.now.getter();
}

uint64_t sub_100103958()
{
  return Date.formatted<A>(_:)();
}

uint64_t sub_100103968()
{
  return Date.init()();
}

uint64_t sub_100103978()
{
  return type metadata accessor for Date();
}

uint64_t sub_100103988()
{
  return UUID.uuidString.getter();
}

uint64_t sub_1001039A8()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_1001039B8()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001039C8()
{
  return UUID.init()();
}

uint64_t sub_1001039D8()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1001039E8()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_1001039F8()
{
  return static Locale.current.getter();
}

uint64_t sub_100103A08()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100103A18()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_100103A28()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_100103A38()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_100103A48()
{
  return Calendar.dateInterval(of:for:)();
}

uint64_t sub_100103A58()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t sub_100103A68()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_100103A78()
{
  return static Calendar.== infix(_:_:)();
}

uint64_t sub_100103A88()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t sub_100103A98()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_100103AA8()
{
  return Calendar.isDate(_:equalTo:toGranularity:)();
}

uint64_t sub_100103AB8()
{
  return static Calendar.current.getter();
}

uint64_t sub_100103AC8()
{
  return static Calendar.Component.== infix(_:_:)();
}

uint64_t sub_100103AD8()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_100103AE8()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_100103AF8()
{
  return IndexSet.count.getter();
}

uint64_t sub_100103B08(Swift::Int a1)
{
  return *(_OWORD *)&IndexSet.insert(_:)(a1);
}

uint64_t sub_100103B18()
{
  return IndexSet.init()();
}

uint64_t sub_100103B28()
{
  return type metadata accessor for IndexSet();
}

uint64_t sub_100103B38()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_100103B48()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_100103B58()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_100103B68()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t sub_100103B78()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t sub_100103B88()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_100103B98()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t sub_100103BA8()
{
  return static AVPartialAsyncProperty<A>.duration.getter();
}

uint64_t sub_100103BC8()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100103BD8()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100103BE8()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100103BF8()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_100103C08()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_100103C18()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_100103C28()
{
  return ColorResource.init(name:bundle:)();
}

uint64_t sub_100103C38()
{
  return type metadata accessor for ColorResource();
}

uint64_t sub_100103C48()
{
  return static ImageResource.wingsBackground(value:)();
}

uint64_t sub_100103C58()
{
  return type metadata accessor for ImageResource();
}

uint64_t sub_100103C68()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

uint64_t sub_100103C78()
{
  return static UTType.data.getter();
}

uint64_t sub_100103C88()
{
  return static UTType.image.getter();
}

uint64_t sub_100103C98()
{
  return static UTType.movie.getter();
}

uint64_t sub_100103CA8()
{
  return static UTType.video.getter();
}

uint64_t sub_100103CB8()
{
  return UTType.conforms(to:)();
}

uint64_t sub_100103CC8()
{
  return type metadata accessor for UTType();
}

uint64_t sub_100103CD8()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100103CE8()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_100103CF8()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t sub_100103D08()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_100103D18()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_100103D28()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_100103D38()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_100103D48()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_100103D58()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_100103D68()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_100103D78()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_100103D88()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_100103D98()
{
  return Logger.logObject.getter();
}

uint64_t sub_100103DA8()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100103DB8()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100103DC8()
{
  return UIMutableTraits.userInterfaceStyle.setter();
}

uint64_t sub_100103DD8()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_100103DE8()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_100103DF8()
{
  return PassthroughSubject.init()();
}

uint64_t sub_100103E08()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_100103E18()
{
  return ShapeStyle._apply(to:)();
}

uint64_t sub_100103E28()
{
  return static ShapeStyle._apply(to:)();
}

uint64_t sub_100103E48()
{
  return ShapeStyle.blendMode(_:)();
}

uint64_t sub_100103E58()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_100103E68()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_100103E78()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_100103E98()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_100103EA8()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_100103EB8()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_100103EC8()
{
  return static WidgetBundle.main()();
}

uint64_t sub_100103ED8()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_100103EE8()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t sub_100103EF8()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_100103F08()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_100103F18()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_100103F28()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_100103F38()
{
  return static RedactionReasons.privacy.getter();
}

uint64_t sub_100103F48()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_100103F58()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_100103F68()
{
  return static ButtonBorderShape.== infix(_:_:)();
}

uint64_t sub_100103F78()
{
  return static ButtonBorderShape.circle.getter();
}

uint64_t sub_100103F88()
{
  return static ButtonBorderShape.capsule.getter();
}

uint64_t sub_100103F98()
{
  return type metadata accessor for ButtonBorderShape();
}

uint64_t sub_100103FA8()
{
  return static ContentTransition.interpolate.getter();
}

uint64_t sub_100103FB8()
{
  return static ContentTransition.numericText(value:)();
}

uint64_t sub_100103FC8()
{
  return static ContentTransition.opacity.getter();
}

uint64_t sub_100103FD8()
{
  return static ContentTransition.identity.getter();
}

uint64_t sub_100103FE8()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_100103FF8()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100104008()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100104018()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100104028()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_100104038()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100104048()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t sub_100104058()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_100104068()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_100104078()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_100104088()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100104098()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_1001040A8()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1001040B8()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_1001040C8()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_1001040D8()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_1001040E8()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1001040F8()
{
  return EnvironmentValues.init()();
}

uint64_t sub_100104108()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100104118()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_100104128()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_100104138()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_100104148()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_100104158()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_100104168()
{
  return WidgetConfiguration.description<A>(_:)();
}

uint64_t sub_100104178()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_100104188()
{
  return WidgetConfiguration._contentMarginsDisabled()();
}

uint64_t sub_100104198()
{
  return WidgetConfiguration.configurationDisplayName<A>(_:)();
}

uint64_t sub_1001041A8()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_1001041B8()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1001041C8()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_1001041D8()
{
  return type metadata accessor for _BlendModeShapeStyle();
}

uint64_t sub_1001041E8()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t sub_1001041F8()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_100104208()
{
  return static HierarchicalShapeStyle.tertiary.getter();
}

uint64_t sub_100104218()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_100104228()
{
  return type metadata accessor for LabelStyleConfiguration.Icon();
}

uint64_t sub_100104238()
{
  return LabelStyleConfiguration.icon.getter();
}

uint64_t sub_100104248()
{
  return type metadata accessor for LabelStyleConfiguration.Title();
}

uint64_t sub_100104258()
{
  return LabelStyleConfiguration.title.getter();
}

uint64_t sub_100104268()
{
  return type metadata accessor for ButtonStyleConfiguration.Label();
}

uint64_t sub_100104278()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t sub_100104288()
{
  return ButtonStyleConfiguration.isPressed.getter();
}

uint64_t sub_100104298()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_1001042A8()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_1001042B8()
{
  return type metadata accessor for _InsettableBackgroundShapeModifier();
}

uint64_t sub_1001042C8()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_1001042D8()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t sub_1001042E8()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_1001042F8()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_100104308()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_100104318()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_100104328()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_100104338()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_100104348()
{
  return static Font.subheadline.getter();
}

uint64_t sub_100104358()
{
  return static Font.body.getter();
}

uint64_t sub_100104368()
{
  return static Font.title.getter();
}

uint64_t sub_100104378()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_100104388()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_100104398()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_1001043A8()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_1001043B8()
{
  return static Font.title3.getter();
}

uint64_t sub_1001043C8()
{
  return type metadata accessor for Font.Leading();
}

uint64_t sub_1001043D8()
{
  return static Font.caption.getter();
}

uint64_t sub_1001043E8()
{
  return Font.leading(_:)();
}

uint64_t sub_1001043F8()
{
  return static Font.caption2.getter();
}

uint64_t sub_100104408()
{
  return static Font.footnote.getter();
}

uint64_t sub_100104418()
{
  return Link.init(destination:label:)();
}

uint64_t sub_100104428()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_100104438()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_100104448()
{
  return static Text.== infix(_:_:)();
}

uint64_t sub_100104458()
{
  return Text.bold()();
}

uint64_t sub_100104468()
{
  return Text.font(_:)();
}

uint64_t sub_100104478()
{
  return Text.init<A>(_:format:)();
}

uint64_t sub_100104488()
{
  return Text.init<A>(_:)();
}

uint64_t sub_100104498()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_1001044A8()
{
  return View.widgetURL(_:)();
}

uint64_t sub_1001044B8()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_1001044C8()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_1001044D8()
{
  return View.background<A>(alignment:content:)();
}

uint64_t sub_1001044E8()
{
  return View.background<A, B>(_:in:fillStyle:)();
}

uint64_t sub_1001044F8()
{
  return View.fontWeight(_:)();
}

uint64_t sub_100104508()
{
  return View.labelStyle<A>(_:)();
}

uint64_t sub_100104518()
{
  return View.unredacted()();
}

uint64_t sub_100104528()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_100104538()
{
  return View.scaleEffect(_:anchor:)();
}

uint64_t sub_100104548()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100104558()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t sub_100104568()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t sub_100104578()
{
  return View.compositingGroup()();
}

uint64_t sub_100104588()
{
  return View.buttonBorderShape(_:)();
}

uint64_t sub_100104598()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_1001045A8()
{
  return View.bold(_:)();
}

uint64_t sub_1001045B8()
{
  return View.shadow(color:radius:x:y:)();
}

uint64_t sub_1001045C8()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_1001045D8()
{
  return View.tracking(_:)();
}

uint64_t sub_1001045E8()
{
  return static Color.black.getter();
}

uint64_t sub_1001045F8()
{
  return static Color.clear.getter();
}

uint64_t sub_100104608()
{
  return static Color.white.getter();
}

uint64_t sub_100104618()
{
  return Color.opacity(_:)();
}

uint64_t sub_100104628()
{
  return Color.init(_:)();
}

uint64_t sub_100104638()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_100104648()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_100104658()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_100104668()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_100104678()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_100104688()
{
  return Image.init(_:)();
}

uint64_t sub_100104698()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1001046A8()
{
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_1001046B8()
{
  return Gradient.Stop.init(color:location:)();
}

uint64_t sub_1001046C8()
{
  return Gradient.init(stops:)();
}

uint64_t sub_1001046D8()
{
  return Gradient.init(colors:)();
}

uint64_t sub_1001046E8()
{
  return type metadata accessor for Material();
}

uint64_t sub_1001046F8()
{
  return static Alignment.topLeading.getter();
}

uint64_t sub_100104708()
{
  return static Alignment.bottom.getter();
}

uint64_t sub_100104718()
{
  return static Alignment.center.getter();
}

uint64_t sub_100104728()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_100104738()
{
  return static Animation.easeIn(duration:)();
}

uint64_t sub_100104748()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_100104758()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t sub_100104768()
{
  return static UnitPoint.bottomTrailing.getter();
}

uint64_t sub_100104778()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_100104788()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_100104798()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_1001047A8()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_1001047B8()
{
  return static UnitPoint.trailing.getter();
}

uint64_t sub_1001047C8()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1001047D8()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1001047E8()
{
  return DispatchQoS.relativePriority.getter();
}

uint64_t sub_1001047F8()
{
  return static DispatchQoS.default.getter();
}

uint64_t sub_100104808()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100104818()
{
  return AccessoryWidgetBackground.init()();
}

uint64_t sub_100104828()
{
  return type metadata accessor for AccessoryWidgetBackground();
}

uint64_t sub_100104838()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_100104848()
{
  return static WidgetRenderingMode.vibrant.getter();
}

uint64_t sub_100104858()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_100104868()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_100104878()
{
  return WidgetFamily.rawValue.getter();
}

uint64_t sub_100104888()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_1001048B8()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_1001048C8()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_1001048D8()
{
  return static TimelineReloadPolicy.never.getter();
}

uint64_t sub_1001048E8()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_1001048F8()
{
  return AppIntentConfiguration.init<A>(kind:intent:provider:content:)();
}

uint64_t sub_100104908()
{
  return TimelineEntryRelevance.init(score:duration:)();
}

uint64_t sub_100104918()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_100104928()
{
  return TimelineProviderContext.isPreview.getter();
}

uint64_t sub_100104938()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_100104958()
{
  return AppIntentTimelineProvider.recommendations()();
}

uint64_t sub_100104978()
{
  return Timeline.init(entries:policy:)();
}

uint64_t sub_100104988()
{
  return Array.init()();
}

uint64_t sub_100104998()
{
  return CancellationError.init()();
}

NSDictionary sub_1001049A8()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1001049B8()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001049C8()
{
  return Dictionary.index(after:)();
}

uint64_t sub_1001049D8()
{
  return Dictionary.subscript.getter();
}

uint64_t sub_1001049E8()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1001049F8()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100104A08()
{
  return Character.hash(into:)();
}

uint64_t sub_100104A18()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_100104A28()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_100104A38()
{
  return dispatch thunk of static Comparable.>= infix(_:_:)();
}

uint64_t sub_100104A48()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_100104A58()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t sub_100104A68()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_100104A78()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t sub_100104A88()
{
  return type metadata accessor for ClosedRange();
}

uint64_t sub_100104A98()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_100104AA8()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100104AB8()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_100104AC8(Swift::String a1)
{
}

uint64_t sub_100104AD8()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100104AE8()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_100104AF8()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t sub_100104B08()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_100104B18()
{
  return static String.StandardComparator.localizedStandard.getter();
}

uint64_t sub_100104B28()
{
  return type metadata accessor for String.StandardComparator();
}

NSString sub_100104B38()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100104B48()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_100104B58()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100104B68()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100104B78()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100104B88()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t sub_100104B98()
{
  return String.init<A>(describing:)();
}

uint64_t sub_100104BA8()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_100104BB8()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100104BC8()
{
  return String.hash(into:)();
}

uint64_t sub_100104BD8()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_100104BE8(Swift::String a1)
{
}

Swift::Int sub_100104BF8()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_100104C08()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_100104C18()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_100104C38()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_100104C48()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_100104C58()
{
  return String.init<A>(_:)();
}

uint64_t sub_100104C68()
{
  return String.subscript.getter();
}

uint64_t sub_100104C78()
{
  return Sequence.sorted<A, B>(using:)();
}

uint64_t sub_100104C88()
{
  return Sequence._copyContents(initializing:)();
}

uint64_t sub_100104C98()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_100104CA8()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_100104CB8()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100104CF8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100104D08()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_100104D18()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100104D28()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100104D38()
{
  return Array.description.getter();
}

uint64_t sub_100104D48()
{
  return specialized Array._endMutation()();
}

uint64_t sub_100104D58()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_100104D68()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100104D78()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_100104D88()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_100104D98()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100104DA8()
{
  return Array.append(_:)();
}

uint64_t sub_100104DB8()
{
  return Array.endIndex.getter();
}

void sub_100104DC8(Swift::Bool keepingCapacity)
{
}

uint64_t sub_100104DD8()
{
  return type metadata accessor for Array();
}

uint64_t sub_100104DE8()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_100104DF8()
{
  return type metadata accessor for CancellationError();
}

uint64_t sub_100104E08()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t sub_100104E28()
{
  return static MainActor.shared.getter();
}

uint64_t sub_100104E38()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_100104E48()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_100104E58()
{
  return type metadata accessor for TaskPriority();
}

void sub_100104E68()
{
}

uint64_t sub_100104E78()
{
  return static Task<>.checkCancellation()();
}

uint64_t sub_100104E88()
{
  return Double.write<A>(to:)();
}

NSSet sub_100104EA8()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_100104EB8()
{
  return Set.description.getter();
}

uint64_t sub_100104EC8()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_100104ED8()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_100104EE8()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

uint64_t sub_100104F08()
{
  return Collection.count.getter();
}

uint64_t sub_100104F18()
{
  return Collection.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_100104F28()
{
  return Collection.index(_:offsetBy:)();
}

uint64_t sub_100104F38()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_100104F48()
{
  return Collection.distance(from:to:)();
}

uint64_t sub_100104F58()
{
  return Collection<>.indices.getter();
}

uint64_t sub_100104F68()
{
  return Collection<>.subscript.getter();
}

uint64_t sub_100104F78()
{
  return type metadata accessor for Range();
}

uint64_t sub_100104FA8()
{
  return NLTokenizer.enumerateTokens(in:using:)();
}

uint64_t sub_100104FB8()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_100104FC8()
{
  return NSExpression.init(format:_:)();
}

uint64_t sub_100104FD8()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_100104FE8()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_100104FF8()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_100105008()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_100105018()
{
  return static os_log_type_t.default.getter();
}

void sub_100105028(CGPoint to, CGAffineTransform *transform)
{
}

void sub_100105038(CGPoint to, CGAffineTransform *transform)
{
}

uint64_t sub_100105048()
{
  return NSSortDescriptor.init<A, B>(keyPath:ascending:)();
}

uint64_t sub_100105058()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_100105068()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t sub_100105078()
{
  return static NSKeyedUnarchiver.unarchivedArrayOfObjects<A>(ofClass:from:)();
}

uint64_t sub_100105088()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t sub_100105098()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1001050A8()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1001050B8()
{
  return OS_dispatch_queue.qos.getter();
}

uint64_t sub_1001050C8()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_1001050D8()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1001050E8()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1001050F8()
{
  return UITraitCollection.modifyingTraits(_:)();
}

uint64_t sub_100105108()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_100105118()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_100105138()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t sub_100105148()
{
  return type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
}

uint64_t sub_100105158()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t sub_100105168()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_100105198()
{
  return NSSet.init(arrayLiteral:)();
}

uint64_t sub_1001051A8()
{
  return NSSet.makeIterator()();
}

unint64_t sub_1001051B8(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  return (unint64_t)CMTime.init(seconds:preferredTimescale:)(seconds, preferredTimescale);
}

uint64_t sub_1001051C8()
{
  return static UIView.animate(_:changes:completion:)();
}

uint64_t sub_1001051D8()
{
  return CKRecord.subscript.getter();
}

uint64_t sub_1001051E8()
{
  return NLTagger.tag(at:unit:scheme:)();
}

NSNumber sub_1001051F8(Swift::Bool BOOLeanLiteral)
{
  return NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

Swift::Int sub_100105208(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_100105218()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_100105228()
{
  return NSObject.hash(into:)();
}

uint64_t sub_100105238()
{
  return CGPathRef.copy(dashingWithPhase:lengths:transform:)();
}

uint64_t sub_100105248()
{
  return CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
}

uint64_t sub_100105258()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_100105268()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_100105278()
{
  return type metadata accessor for Optional();
}

uint64_t sub_100105288()
{
  return Optional<A>.hashValue.getter();
}

uint64_t sub_100105298()
{
  return Substring.index(before:)();
}

uint64_t sub_1001052A8()
{
  return Substring.distance(from:to:)();
}

uint64_t sub_1001052B8()
{
  return Substring.subscript.getter();
}

uint64_t sub_1001052C8()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001052D8()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1001052E8()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_1001052F8()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_100105308()
{
  return StringProtocol.removingPercentEncoding.getter();
}

uint64_t sub_100105318()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_100105328()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_100105338()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_100105348()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t sub_100105358()
{
  return dispatch thunk of SetAlgebra.isEmpty.getter();
}

uint64_t sub_100105368()
{
  return dispatch thunk of SetAlgebra.subtract(_:)();
}

uint64_t sub_100105378()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t sub_100105388()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_100105398()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1001053A8()
{
  return _HashTable.occupiedBucket(after:)();
}

uint64_t sub_1001053B8()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1001053C8()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_1001053D8()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_1001053E8()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_100105408()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_100105418()
{
  return __CocoaSet.contains(_:)();
}

Swift::Int sub_100105428(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_100105438()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_100105448()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100105458()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_100105468()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_100105478()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_100105488()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_100105498(Swift::Int a1)
{
}

uint64_t sub_1001054A8()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1001054B8()
{
  return Identifiable<>.id.getter();
}

uint64_t sub_1001054C8()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1001054D8()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1001054E8()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1001054F8()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_100105508()
{
  return static ManagedBuffer.create(minimumCapacity:makingHeaderWith:)();
}

uint64_t sub_100105518()
{
  return type metadata accessor for ManagedBuffer();
}

uint64_t sub_100105528()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_100105548()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_100105558()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_100105568()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_100105578()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_100105588()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100105598()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_1001055A8()
{
  return type metadata accessor for IndexingIterator();
}

uint64_t sub_1001055B8()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001055C8()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001055D8()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_1001055E8()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1001055F8()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_100105608()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_100105618()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_100105628()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100105638()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_100105648(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_100105658()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100105668()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_100105678()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100105688()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100105698()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001056A8()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001056B8()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001056C8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001056D8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001056E8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001056F8()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100105708()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_100105718()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100105728()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100105738()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100105748()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100105758()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100105768()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100105778()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100105788()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100105798()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001057A8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_1001057B8(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_1001057C8()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1001057D8()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_1001057E8()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_1001057F8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100105808()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_100105818()
{
  return == infix<A>(_:_:)();
}

uint64_t sub_100105828()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_100105838()
{
  return _copyCollectionToContiguousArray<A>(_:)();
}

uint64_t sub_100105848()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_100105858()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_100105868()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100105878()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100105888()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_100105898()
{
  return Error._code.getter();
}

uint64_t sub_1001058A8()
{
  return Error._domain.getter();
}

uint64_t sub_1001058B8()
{
  return Error._userInfo.getter();
}

uint64_t sub_1001058C8()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_1001058D8()
{
  return Hasher.init(_seed:)();
}

void sub_1001058E8(Swift::UInt a1)
{
}

void sub_1001058F8(Swift::UInt8 a1)
{
}

void sub_100105908(Swift::UInt64 a1)
{
}

Swift::Int sub_100105918()
{
  return Hasher.finalize()();
}

Swift::Int sub_100105928()
{
  return Hasher._finalize()();
}

uint64_t sub_100105938()
{
  return Hasher.init()();
}

uint64_t sub_100105948()
{
  return type metadata accessor for Result();
}

uint64_t sub_100105958()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_100105968()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_100105978()
{
  return static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
}

uint64_t sub_100105988()
{
  return static Duration.TimeFormatStyle.Pattern.hourMinuteSecond.getter();
}

uint64_t sub_100105998()
{
  return type metadata accessor for Duration.TimeFormatStyle.Pattern();
}

uint64_t sub_1001059C8()
{
  return _typeName(_:qualified:)();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateThumbnailAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return _CLLocationCoordinate2DIsValid(coord);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t HKUIStandardMapGreenColor()
{
  return _HKUIStandardMapGreenColor();
}

uint64_t HKUIStandardMapRedColor()
{
  return _HKUIStandardMapRedColor();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  CLLocationCoordinate2D v3 = _MKCoordinateForMapPoint(mapPoint);
  double longitude = v3.longitude;
  double latitude = v3.latitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

MKCoordinateRegion MKCoordinateRegionForMapRect(MKMapRect rect)
{
  return _MKCoordinateRegionForMapRect(rect);
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MKMapPoint v3 = _MKMapPointForCoordinate(coordinate);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersectsRect(rect1, rect2);
}

MKMapRect MKMapRectUnion(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectUnion(rect1, rect2);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  return _MKRoadWidthAtZoomScale(zoomScale);
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImageHEICRepresentation(UIImage *image)
{
  return _UIImageHEICRepresentation(image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _availability_version_check()
{
  return __availability_version_check();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return _fseek(a1, a2, a3);
}

uint64_t ftell(FILE *a1)
{
  return _ftell(a1);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

void rewind(FILE *a1)
{
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return _swift_getFunctionTypeMetadata1();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}