uint64_t sub_100004DC4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  ValueMetadata *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  ValueMetadata *v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a2;
  v4 = sub_1000059D8(&qword_100088BA8);
  v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000059D8(&qword_100088BB0);
  v28 = *(void *)(v7 - 8);
  v29 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1000059D8(&qword_100088BB8);
  v30 = *(void *)(v10 - 8);
  v31 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v2;
  sub_1000059D8(&qword_100088BC0);
  v14 = sub_100005AF8();
  v33 = &type metadata for PickerWidgetView;
  v34 = (void *)v14;
  swift_getOpaqueTypeConformance2();
  sub_100005B4C();
  sub_10006A210();
  v33 = (ValueMetadata *)sub_100005BA0(a1);
  v34 = v15;
  v16 = sub_100005D98((unint64_t *)&qword_100088BD8, &qword_100088BA8);
  v17 = sub_100005A64();
  sub_100069B40();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  v37 = sub_100005DE8(a1);
  v38 = v18;
  v33 = (ValueMetadata *)v4;
  v34 = &type metadata for String;
  v35 = v16;
  v36 = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = (ValueMetadata *)v29;
  sub_100069AF0();
  (*(void (**)(char *, ValueMetadata *))(v28 + 8))(v9, v20);
  sub_1000059D8(&qword_100088BE0);
  v21 = sub_10006A1C0();
  v22 = *(void *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10006AB80;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, enum case for WidgetFamily.accessoryCircular(_:), v21);
  v33 = v20;
  v34 = &type metadata for String;
  v35 = OpaqueTypeConformance2;
  v36 = v17;
  swift_getOpaqueTypeConformance2();
  v25 = v31;
  sub_100069B10();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v25);
}

uint64_t sub_1000052E4(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1000059D8(&qword_100088BE8);
  __chkstk_darwin(v3 - 8);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7[15] = a2;
  sub_10000539C(a2, (uint64_t)v5);
  sub_100005AF8();
  sub_100069E80();
  return sub_100005FE0((uint64_t)v5);
}

uint64_t sub_10000539C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      uint64_t v8 = sub_10006A1C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
      v9 = (int *)type metadata accessor for CanvasStartingState();
      v10 = &v6[v9[6]];
      uint64_t v11 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
      v12 = &v6[v9[5]];
      *(void *)v12 = 0;
      *((void *)v12 + 1) = 0;
      v6[v9[7]] = 96;
      break;
    case 2:
      uint64_t v13 = sub_10006A1C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
      v14 = (int *)type metadata accessor for CanvasStartingState();
      v15 = &v6[v14[6]];
      uint64_t v16 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      v17 = &v6[v14[5]];
      *(void *)v17 = 0;
      *((void *)v17 + 1) = 0;
      v6[v14[7]] = 97;
      break;
    case 3:
      uint64_t v18 = sub_10006A1C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
      v19 = (int *)type metadata accessor for CanvasStartingState();
      v20 = &v6[v19[6]];
      uint64_t v21 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
      v22 = &v6[v19[5]];
      *(void *)v22 = 0;
      *((void *)v22 + 1) = 0;
      v6[v19[7]] = 33;
      break;
    case 4:
      uint64_t v23 = sub_10006A1C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
      v24 = (int *)type metadata accessor for CanvasStartingState();
      v25 = &v6[v24[6]];
      uint64_t v26 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
      v27 = &v6[v24[5]];
      *(void *)v27 = 0;
      *((void *)v27 + 1) = 0;
      v6[v24[7]] = 0x80;
      break;
    case 5:
      uint64_t v28 = sub_10006A1C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 1, 1, v28);
      v29 = (int *)type metadata accessor for CanvasStartingState();
      v30 = &v6[v29[6]];
      uint64_t v31 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
      v32 = &v6[v29[5]];
      *(void *)v32 = 0;
      *((void *)v32 + 1) = 0;
      v6[v29[7]] = -127;
      break;
    case 6:
      uint64_t v33 = sub_10006A1C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v6, 1, 1, v33);
      v34 = (int *)type metadata accessor for CanvasStartingState();
      v35 = &v6[v34[5]];
      *(void *)v35 = 0;
      *((void *)v35 + 1) = 0;
      v36 = &v6[v34[6]];
      uint64_t v37 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
      v6[v34[7]] = 1;
      break;
    default:
      uint64_t v7 = sub_100069620();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  sub_10001BDB8(a2);
  return sub_100006040((uint64_t)v6);
}

uint64_t sub_1000058E8()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1000058F8(long long *a1)
{
  long long v2 = *a1;
  if (sub_1000688D4(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_10000596C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_1000688D4(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

uint64_t sub_1000059D8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100005A1C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100005A64()
{
  unint64_t result = qword_100088B08;
  if (!qword_100088B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088B08);
  }
  return result;
}

uint64_t type metadata accessor for PickerWidgetUtil()
{
  return self;
}

uint64_t sub_100005ADC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100005AEC(uint64_t a1)
{
  return sub_1000052E4(a1, *(unsigned char *)(v1 + 16));
}

unint64_t sub_100005AF8()
{
  unint64_t result = qword_100088BC8;
  if (!qword_100088BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088BC8);
  }
  return result;
}

unint64_t sub_100005B4C()
{
  unint64_t result = qword_100088BD0;
  if (!qword_100088BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088BD0);
  }
  return result;
}

uint64_t sub_100005BA0(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_100088908 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092AC8;
      break;
    case 2:
      if (qword_100088918 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092AE8;
      break;
    case 3:
      if (qword_100088928 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092B08;
      break;
    case 4:
      if (qword_100088938 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092B28;
      break;
    case 5:
      if (qword_100088948 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092B48;
      break;
    case 6:
      if (qword_100088488 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_1000921C8;
      break;
    default:
      if (qword_1000888F8 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092AA8;
      break;
  }
  return *v1;
}

uint64_t sub_100005D98(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005A1C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100005DE8(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_100088910 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092AD8;
      break;
    case 2:
      if (qword_100088920 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092AF8;
      break;
    case 3:
      if (qword_100088930 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092B18;
      break;
    case 4:
      if (qword_100088940 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092B38;
      break;
    case 5:
      if (qword_100088950 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092B58;
      break;
    case 6:
      if (qword_100088490 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_1000921D8;
      break;
    default:
      if (qword_100088900 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_100092AB8;
      break;
  }
  return *v1;
}

uint64_t sub_100005FE0(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_100088BE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100006040(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PickerWidgetTimelineProvider()
{
  return &type metadata for PickerWidgetTimelineProvider;
}

unint64_t sub_1000060B0()
{
  unint64_t result = qword_100088BF0[0];
  if (!qword_100088BF0[0])
  {
    type metadata accessor for PickerWidgetTimelineEntry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100088BF0);
  }
  return result;
}

uint64_t sub_10000610C(uint64_t a1, void (*a2)(char *))
{
  type metadata accessor for PickerWidgetTimelineEntry();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000695E0();
  a2(v4);
  return sub_1000065DC((uint64_t)v4);
}

uint64_t sub_10000619C(uint64_t a1, void (*a2)(char *))
{
  sub_10006A240();
  __chkstk_darwin();
  uint64_t v3 = sub_1000059D8(&qword_100088C08);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000059D8(&qword_100088C10);
  type metadata accessor for PickerWidgetTimelineEntry();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10006AB80;
  sub_1000695E0();
  sub_10006A230();
  sub_1000060B0();
  sub_10006A270();
  a2(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100006380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100006434;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100006434()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100006528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100006638;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_1000065DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PickerWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PickerCameraWidget()
{
  return &type metadata for PickerCameraWidget;
}

uint64_t sub_10000664C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000666C@<X0>(uint64_t a1@<X8>)
{
  return sub_100004DC4(2, a1);
}

uint64_t sub_1000066A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100006794()
{
  unint64_t result = qword_100088BD8;
  if (!qword_100088BD8)
  {
    sub_100005A1C(&qword_100088BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088BD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidget()
{
  return &type metadata for StartWritingWidget;
}

uint64_t sub_100006800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000681C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088AF8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000059D8(&qword_100088AF0);
  uint64_t v19 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000059D8(&qword_100088AE8);
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000059D8(&qword_100088AE0);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  v20 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100088470 != -1) {
    swift_once();
  }
  type metadata accessor for StartWritingWidgetView();
  sub_100006DEC();
  sub_100006E44();
  swift_bridgeObjectRetain();
  sub_10006A210();
  if (qword_100088488 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1000921C8;
  uint64_t v28 = (void *)unk_1000921D0;
  unint64_t v10 = sub_100006E98();
  unint64_t v11 = sub_100005A64();
  sub_100069B40();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v12 = v21;
  if (qword_100088490 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_1000921D8;
  uint64_t v32 = unk_1000921E0;
  uint64_t v27 = v1;
  uint64_t v28 = &type metadata for String;
  unint64_t v29 = v10;
  unint64_t v30 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100069AF0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v12);
  if (qword_1000889B0 != -1) {
    swift_once();
  }
  uint64_t v27 = v12;
  uint64_t v28 = &type metadata for String;
  unint64_t v29 = OpaqueTypeConformance2;
  unint64_t v30 = v11;
  uint64_t v14 = swift_getOpaqueTypeConformance2();
  v15 = v20;
  uint64_t v16 = v24;
  sub_100069B10();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v16);
  uint64_t v27 = v16;
  uint64_t v28 = (void *)v14;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v25;
  sub_100069B20();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v17);
}

uint64_t sub_100006D24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  __chkstk_darwin(started - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006EF4(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_1000059D8(&qword_100088C28);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for StartWritingWidgetView();
  return sub_100006F5C((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

unint64_t sub_100006DEC()
{
  unint64_t result = qword_100088C18;
  if (!qword_100088C18)
  {
    type metadata accessor for StartWritingWidgetView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088C18);
  }
  return result;
}

unint64_t sub_100006E44()
{
  unint64_t result = qword_100088C20;
  if (!qword_100088C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088C20);
  }
  return result;
}

unint64_t sub_100006E98()
{
  unint64_t result = qword_100088B00;
  if (!qword_100088B00)
  {
    sub_100005A1C(&qword_100088AF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088B00);
  }
  return result;
}

uint64_t sub_100006EF4(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_100006F5C(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_100006FC0()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *initializeBufferWithCopyOfBuffer for CanvasPickerType(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CanvasPickerType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PickerWidgetView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100007258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PickerWidgetView()
{
  return &type metadata for PickerWidgetView;
}

uint64_t sub_100007290()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000072AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = sub_100069AA0();
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v22 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100069C50();
  uint64_t v2 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unsigned int v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000059D8(&qword_100088C30);
  __chkstk_darwin(v5);
  BOOL v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000059D8(&qword_100088C38);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000059D8(&qword_100088C40);
  __chkstk_darwin(v21);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *BOOL v7 = sub_10006A0E0();
  v7[1] = v14;
  uint64_t v15 = sub_1000059D8(&qword_100088C48);
  sub_100007644((char *)v7 + *(int *)(v15 + 44));
  sub_100069C40();
  unint64_t v16 = sub_100007CB0();
  sub_100069FA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
  sub_100007D0C((uint64_t)v7, &qword_100088C30);
  uint64_t v28 = sub_10000798C();
  uint64_t v29 = v17;
  uint64_t v26 = v5;
  unint64_t v27 = v16;
  swift_getOpaqueTypeConformance2();
  sub_100005A64();
  sub_100069F80();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = v22;
  sub_100069A90();
  sub_100069860();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v25);
  return sub_100007D0C((uint64_t)v13, &qword_100088C40);
}

uint64_t sub_100007644@<X0>(char *a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088C58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10006A160();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  sub_10006A150();
  uint64_t v22 = sub_10006A040();
  uint64_t v11 = sub_100069D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v12 = sub_100069DC0();
  sub_100007D0C((uint64_t)v3, &qword_100088C58);
  uint64_t KeyPath = swift_getKeyPath();
  int v14 = sub_100069BB0();
  uint64_t v15 = v5;
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v8, v10, v4);
  uint64_t v17 = v8;
  uint64_t v18 = v23;
  v16(v23, v17, v4);
  uint64_t v19 = &v18[*(int *)(sub_1000059D8(&qword_100088C60) + 48)];
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = KeyPath;
  *((void *)v19 + 2) = v12;
  *((_DWORD *)v19 + 6) = v14;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v15 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v20(v10, v4);
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v4);
}

uint64_t sub_10000798C()
{
  uint64_t v0 = sub_100069660();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006A2C0();
  __chkstk_darwin(v1 - 8);
  sub_10006A2B0();
  sub_100069650();
  return sub_10006A2F0();
}

uint64_t sub_100007C8C()
{
  return sub_100069F20();
}

uint64_t sub_100007CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000072AC(a1);
}

unint64_t sub_100007CB0()
{
  unint64_t result = qword_100088C50;
  if (!qword_100088C50)
  {
    sub_100005A1C(&qword_100088C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088C50);
  }
  return result;
}

uint64_t sub_100007D0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000059D8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100007D74()
{
  unint64_t result = qword_100088C68;
  if (!qword_100088C68)
  {
    sub_100005A1C(&qword_100088C40);
    sub_100005A1C(&qword_100088C30);
    sub_100007CB0();
    swift_getOpaqueTypeConformance2();
    sub_100007E24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088C68);
  }
  return result;
}

unint64_t sub_100007E24()
{
  unint64_t result = qword_100088C70;
  if (!qword_100088C70)
  {
    sub_100069C80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for PickerSuggestionsWidget()
{
  return &type metadata for PickerSuggestionsWidget;
}

uint64_t sub_100007E8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100007EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100004DC4(0, a1);
}

ValueMetadata *type metadata accessor for PickerPlacesWidget()
{
  return &type metadata for PickerPlacesWidget;
}

uint64_t sub_100007EF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100007F0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100004DC4(4, a1);
}

ValueMetadata *type metadata accessor for PickerAudioRecordingWidget()
{
  return &type metadata for PickerAudioRecordingWidget;
}

uint64_t sub_100007F54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100007F70@<X0>(uint64_t a1@<X8>)
{
  return sub_100004DC4(3, a1);
}

ValueMetadata *type metadata accessor for PickerPhotosWidget()
{
  return &type metadata for PickerPhotosWidget;
}

uint64_t sub_100007FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100007FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_100004DC4(1, a1);
}

unint64_t sub_100008010()
{
  unint64_t result = qword_100088C88;
  if (!qword_100088C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088C88);
  }
  return result;
}

uint64_t sub_100008064()
{
  return sub_10000CE3C(&qword_100088C90, &qword_100088C98);
}

uint64_t sub_1000080A0()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_100069460();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000692B0();
  sub_10000CD24(v10, qword_100092128);
  sub_10000CCEC(v10, (uint64_t)qword_100092128);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000692A0();
}

uint64_t sub_100008378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E20);
  __chkstk_darwin(v1 - 8);
  unint64_t v27 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v22 = sub_100069470();
  uint64_t v11 = *(void *)(v22 - 8);
  uint64_t v12 = __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v23 = (char *)&v21 - v14;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v16(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  uint64_t v17 = v26;
  sub_100069480();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v22);
  uint64_t v18 = v27;
  sub_100069160();
  uint64_t v19 = sub_100069170();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_1000059D8(&qword_100088E28);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10006AB80;
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  sub_100069480();
  return sub_100069180();
}

uint64_t sub_1000088C0(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092140);
}

uint64_t sub_1000088E4()
{
  uint64_t v0 = sub_1000059D8(&qword_100088E90);
  sub_10000CD24(v0, qword_100092158);
  uint64_t v1 = sub_10000CCEC(v0, (uint64_t)qword_100092158);
  sub_1000690E0();
  uint64_t v2 = sub_1000690F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10000899C()
{
  uint64_t result = swift_getKeyPath();
  qword_100092170 = result;
  return result;
}

uint64_t sub_1000089C8()
{
  sub_100068F00();
  return v1;
}

uint64_t sub_1000089FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_1000059D8(&qword_100088E60);
  v3[9] = swift_task_alloc();
  sub_1000059D8(&qword_100088E68);
  v3[10] = swift_task_alloc();
  sub_1000059D8(&qword_100088E70);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_100068EB0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_1000059D8(&qword_100088E78);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100008BC0, 0, 0);
}

uint64_t sub_100008BC0()
{
  sub_100068F00();
  unsigned __int8 v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_10000A050();
  *unsigned __int8 v1 = v0;
  v1[1] = sub_100008C94;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_100009350, 0, &type metadata for AlwaysUseMomentDateEntity, v2);
}

uint64_t sub_100008C94()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100008D90, 0, 0);
}

uint64_t sub_100008D90()
{
  sub_100068F00();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_100068F00();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_100088458 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100092170;
  *(void *)(v0 + 168) = qword_100092170;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_10000CE3C(&qword_100088E48, &qword_100088E50);
  *uint64_t v3 = v0;
  v3[1] = sub_100008EE8;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_100008EE8()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000928C;
  }
  else {
    uint64_t v2 = sub_10000903C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000903C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_100068F00();
  uint64_t v7 = sub_100069290();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000692C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_100008010();
  sub_10000A364();
  sub_100068E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_100068EA0();
  sub_100068EC0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10000928C()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100009354()
{
  uint64_t v0 = sub_1000059D8(&qword_100088E80);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100088458 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100069150();
  swift_release();
  sub_10000A364();
  sub_10000CE3C(&qword_100088E88, &qword_100088E80);
  sub_100069140();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000094BC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100068F00();
  *a1 = v3;
  return result;
}

uint64_t sub_1000094F8()
{
  return swift_release();
}

uint64_t (*sub_100009540(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100068EF0();
  return sub_10000959C;
}

uint64_t sub_1000095A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100068F00();
  *a1 = v3;
  return result;
}

uint64_t sub_1000095DC()
{
  return sub_100068F10();
}

uint64_t (*sub_100009614(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100068EF0();
  return sub_10000959C;
}

uint64_t sub_100009670()
{
  if (qword_100088458 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1000096D0()
{
  return 0xD000000000000015;
}

unint64_t sub_1000096F4()
{
  unint64_t result = qword_100088CA0;
  if (!qword_100088CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CA0);
  }
  return result;
}

unint64_t sub_10000974C()
{
  unint64_t result = qword_100088CA8;
  if (!qword_100088CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CA8);
  }
  return result;
}

uint64_t sub_1000097A0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000097D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000B148(a1, a2, a3, (void (*)(void))sub_100008010);
}

uint64_t sub_1000097EC@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088448, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092140, a1);
}

uint64_t sub_100009834@<X0>(uint64_t a1@<X8>)
{
  if (qword_100088450 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000059D8(&qword_100088E90);
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092158);

  return sub_10000CDA8(v3, a1);
}

uint64_t sub_1000098B0(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100006638;
  return sub_1000089FC(a1, v5, v4);
}

uint64_t sub_10000995C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000C078();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100009984()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_1000099A4()
{
  unint64_t result = qword_100088CB8;
  if (!qword_100088CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CB8);
  }
  return result;
}

unint64_t sub_1000099FC()
{
  unint64_t result = qword_100088CC0;
  if (!qword_100088CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CC0);
  }
  return result;
}

uint64_t sub_100009A50(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100009A70, 0, 0);
}

uint64_t sub_100009A70()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  uint64_t v4 = *(unsigned __int8 **)(v0 + 16);
  NSString v5 = sub_10006A2D0();
  unsigned __int8 v6 = [v3 BOOLForKey:v5];

  *uint64_t v4 = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100009B90(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100009BB4, 0, 0);
}

uint64_t sub_100009BB4()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  Class isa = sub_10006A370().super.super.isa;
  NSString v5 = sub_10006A2D0();
  [v3 setValue:isa forKey:v5];

  unsigned __int8 v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100009CDC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100088E30 + dword_100088E30);
  NSString v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *NSString v2 = v1;
  v2[1] = sub_10000CFAC;
  return v4();
}

unint64_t sub_100009D84()
{
  unint64_t result = qword_100088CD0;
  if (!qword_100088CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CD0);
  }
  return result;
}

uint64_t sub_100009DD8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10000A6B8();
  *uint64_t v4 = v2;
  v4[1] = sub_100009E88;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_100009E88(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  unsigned __int8 v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100009FA0()
{
  unint64_t result = qword_100088CE0;
  if (!qword_100088CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CE0);
  }
  return result;
}

unint64_t sub_100009FF8()
{
  unint64_t result = qword_100088CE8;
  if (!qword_100088CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088CE8);
  }
  return result;
}

unint64_t sub_10000A050()
{
  unint64_t result = qword_100088CF0[0];
  if (!qword_100088CF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100088CF0);
  }
  return result;
}

uint64_t sub_10000A0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10000A6B8();
  void *v5 = v2;
  v5[1] = sub_10000A158;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10000A158(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10000A258(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10000A6B8();
  *uint64_t v4 = v2;
  v4[1] = sub_10000CFAC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10000A30C()
{
  unint64_t result = qword_100088D08;
  if (!qword_100088D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D08);
  }
  return result;
}

unint64_t sub_10000A364()
{
  unint64_t result = qword_100088D10;
  if (!qword_100088D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D10);
  }
  return result;
}

unint64_t sub_10000A3BC()
{
  unint64_t result = qword_100088D18;
  if (!qword_100088D18)
  {
    sub_100005A1C(qword_100088D20);
    sub_10000A364();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D18);
  }
  return result;
}

uint64_t sub_10000A430(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100009D84();
  void *v5 = v2;
  v5[1] = sub_100006434;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10000A4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100006434;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

unint64_t sub_10000A5A4()
{
  unint64_t result = qword_100088D38;
  if (!qword_100088D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D38);
  }
  return result;
}

unint64_t sub_10000A5FC()
{
  unint64_t result = qword_100088D40;
  if (!qword_100088D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D40);
  }
  return result;
}

unint64_t sub_10000A654()
{
  unint64_t result = qword_100088D48;
  if (!qword_100088D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D48);
  }
  return result;
}

void *sub_10000A6A8()
{
  return &protocol witness table for String;
}

unint64_t sub_10000A6B8()
{
  unint64_t result = qword_100088D50;
  if (!qword_100088D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D50);
  }
  return result;
}

unint64_t sub_10000A710()
{
  unint64_t result = qword_100088D58;
  if (!qword_100088D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D58);
  }
  return result;
}

uint64_t sub_10000A764(uint64_t a1)
{
  unint64_t v2 = sub_10000A050();

  return _EntityURLRepresentation.init(_:)(0xD000000000000050, 0x800000010006FE10, a1, v2);
}

unint64_t sub_10000A7C4()
{
  unint64_t result = qword_100088D60;
  if (!qword_100088D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D60);
  }
  return result;
}

unint64_t sub_10000A81C()
{
  unint64_t result = qword_100088D68;
  if (!qword_100088D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D68);
  }
  return result;
}

unint64_t sub_10000A874()
{
  unint64_t result = qword_100088D70;
  if (!qword_100088D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D70);
  }
  return result;
}

void *sub_10000A8C8()
{
  return &protocol witness table for String;
}

uint64_t sub_10000A8D4@<X0>(uint64_t *a1@<X8>)
{
  sub_1000099FC();
  uint64_t result = sub_100068EE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000A914()
{
  sub_10000CC98();
  uint64_t v2 = sub_100069210();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000CD88(v3, v0, v2, v1);
}

uint64_t sub_10000A9A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088440, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100092128, a1);
}

uint64_t sub_10000A9E0()
{
  return sub_10000CE3C(&qword_100088D80, &qword_100088D88);
}

uint64_t sub_10000AA1C(uint64_t a1)
{
  unint64_t v2 = sub_10000A050();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10000AA6C()
{
  unint64_t result = qword_100088D90;
  if (!qword_100088D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D90);
  }
  return result;
}

uint64_t sub_10000AAC4(uint64_t a1)
{
  unint64_t v2 = sub_10000A874();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10000AB14()
{
  unint64_t result = qword_100088D98;
  if (!qword_100088D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088D98);
  }
  return result;
}

uint64_t sub_10000AB68(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092178);
}

uint64_t sub_10000AB8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100069470();
  sub_10000CD24(v3, a2);
  sub_10000CCEC(v3, (uint64_t)a2);
  return sub_100069450();
}

uint64_t sub_10000ABEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100069470();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_100069100();
  uint64_t v13 = sub_1000690F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

void sub_10000AEE4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_10000AF34()
{
  unint64_t result = qword_100088DA0;
  if (!qword_100088DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088DA0);
  }
  return result;
}

unint64_t sub_10000AF8C()
{
  unint64_t result = qword_100088DA8;
  if (!qword_100088DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088DA8);
  }
  return result;
}

uint64_t sub_10000AFE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10000CBF0();
  unint64_t v5 = sub_10000CC98();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10000B048()
{
  uint64_t v0 = qword_100088C78;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10000B084()
{
  unint64_t result = qword_100088DB0;
  if (!qword_100088DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088DB0);
  }
  return result;
}

unint64_t sub_10000B0DC()
{
  unint64_t result = qword_100088DB8;
  if (!qword_100088DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088DB8);
  }
  return result;
}

uint64_t sub_10000B130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000B148(a1, a2, a3, (void (*)(void))sub_10000AF34);
}

uint64_t sub_10000B148(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000B19C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088460, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092178, a1);
}

uint64_t sub_10000B1D4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10000CCEC(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10000B278()
{
  return 0;
}

uint64_t sub_10000B280()
{
  return 1;
}

uint64_t sub_10000B28C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10000CBF0();
  unint64_t v7 = sub_10000CC44();
  unint64_t v8 = sub_10000CC98();
  void *v5 = v2;
  v5[1] = sub_10000B360;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10000B360()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_10000B468@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000C7A8();
  *a1 = result;
  return result;
}

uint64_t sub_10000B490(uint64_t a1)
{
  unint64_t v2 = sub_10000AF34();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for AlwaysUseMomentDateIntent()
{
  return &type metadata for AlwaysUseMomentDateIntent;
}

ValueMetadata *type metadata accessor for AlwaysUseMomentDateEntity.AlwaysUseMomentDateQuery()
{
  return &type metadata for AlwaysUseMomentDateEntity.AlwaysUseMomentDateQuery;
}

ValueMetadata *type metadata accessor for AlwaysUseMomentDateEntity()
{
  return &type metadata for AlwaysUseMomentDateEntity;
}

uint64_t destroy for AlwaysUseMomentDateEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s14JournalWidgets25AlwaysUseMomentDateEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AlwaysUseMomentDateEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AlwaysUseMomentDateEntity.UpdateIntent_value(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for AlwaysUseMomentDateEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AlwaysUseMomentDateEntity.UpdateIntent_value(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlwaysUseMomentDateEntity.UpdateIntent_value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlwaysUseMomentDateEntity.UpdateIntent_value()
{
  return &type metadata for AlwaysUseMomentDateEntity.UpdateIntent_value;
}

uint64_t sub_10000B6B4()
{
  return sub_10000CE3C(&qword_100088DC8, &qword_100088DD0);
}

uint64_t sub_10000B6F0()
{
  return sub_10000CE3C(&qword_100088DD8, &qword_100088DD0);
}

uint64_t sub_10000B72C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E98);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000059D8(&qword_100088EA0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_100088EA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000059D8(&qword_100088EB0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1000099FC();
  sub_10006A1D0();
  sub_100069A80();
  uint64_t v16 = sub_10000CE3C(&qword_100088EB8, &qword_100088E98);
  sub_100069B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_100069A80();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_100069AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_100069B50();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_100069B00();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_10000BBEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_10000BE00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_10000C078()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100069200();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000059D8(&qword_100088DE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_100069470();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000059D8(&qword_100088DF8);
  sub_100069450();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_100068EB0();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v23 = v10;
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10000A050();
  uint64_t v19 = v22;
  uint64_t v24 = sub_100068F30();
  sub_1000059D8(&qword_100088E00);
  sub_100069450();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_10006A360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v23, 1, 1, v16);
  v26(v4, v27, v31);
  sub_100068F40();
  return v24;
}

uint64_t sub_10000C4CC()
{
  uint64_t v1 = sub_100069460();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_100069660();
  v0[5] = swift_task_alloc();
  sub_10006A2C0();
  v0[6] = swift_task_alloc();
  sub_100069470();
  v0[7] = swift_task_alloc();
  return _swift_task_switch(sub_10000C60C, 0, 0);
}

uint64_t sub_10000C60C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  sub_1000059D8(&qword_100088C98);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  sub_10000CE3C(&qword_100088E48, &qword_100088E50);
  uint64_t v4 = sub_1000692E0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_10000C7A8()
{
  uint64_t v0 = sub_100069200();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000059D8(&qword_100088DE8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100069460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100069660();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_10006A2C0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_100069470();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_1000059D8(&qword_100088DF8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_100068EB0();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10000A050();
  return sub_100068F30();
}

unint64_t sub_10000CBF0()
{
  unint64_t result = qword_100088E08;
  if (!qword_100088E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088E08);
  }
  return result;
}

unint64_t sub_10000CC44()
{
  unint64_t result = qword_100088E10;
  if (!qword_100088E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088E10);
  }
  return result;
}

unint64_t sub_10000CC98()
{
  unint64_t result = qword_100088E18;
  if (!qword_100088E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088E18);
  }
  return result;
}

uint64_t sub_10000CCEC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_10000CD24(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10000CD88(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_10000CD9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10000CDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AlwaysUseMomentDateEntityToggleControl()
{
  return &type metadata for AlwaysUseMomentDateEntityToggleControl;
}

uint64_t sub_10000CE20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000CE3C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005A1C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000CE80()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StartWritingWidgetTimelineProvider()
{
  return &type metadata for StartWritingWidgetTimelineProvider;
}

unint64_t sub_10000CFC4()
{
  unint64_t result = qword_100088EC0[0];
  if (!qword_100088EC0[0])
  {
    type metadata accessor for StartWritingWidgetTimelineEntry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100088EC0);
  }
  return result;
}

uint64_t sub_10000D01C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000471FC(a1);
}

uint64_t sub_10000D038(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_100088F08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000F630(a1, (uint64_t)v4);
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(started - 8) + 56))(v4, 0, 1, started);
  sub_10004755C((uint64_t)v4);
  return sub_100007D0C((uint64_t)v4, &qword_100088F08);
}

uint64_t sub_10000D128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v41 = a2;
  uint64_t v39 = sub_10006A1C0();
  uint64_t v34 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000696C0();
  uint64_t v4 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v6 = (uint8_t *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100069660();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  __chkstk_darwin(started);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100069600();
  uint64_t v37 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000695E0();
  type metadata accessor for StartWritingWidgetPromptProvider();
  if (qword_1000889D8 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_100092CB0;
  swift_bridgeObjectRetain();
  sub_100069650();
  sub_1000696A0();
  sub_10003CD9C(v15, (uint64_t)v10, v6, (uint64_t)v14, (void (*)(uint64_t))sub_10000D01C, (void (*)(uint64_t))sub_10000D038, 0, (uint64_t)v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint8_t *, uint64_t))(v4 + 8))(v6, v35);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_10006A260();
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v3, v39);
  uint64_t v17 = 7;
  uint64_t v18 = v14;
  if (v16 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_9;
  }
  if (v16 == enum case for WidgetFamily.systemMedium(_:)) {
    goto LABEL_9;
  }
  uint64_t v17 = 6;
  if (v16 == enum case for WidgetFamily.accessoryCircular(_:)
    || v16 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    goto LABEL_9;
  }
  if (v16 == enum case for WidgetFamily.accessoryInline(_:))
  {
    uint64_t v17 = 5;
LABEL_9:
    uint64_t v19 = &v12[*(int *)(started + 4 * v17)];
    uint64_t v20 = *((void *)v19 + 5);
    uint64_t v38 = *((void *)v19 + 4);
    uint64_t v39 = (uint64_t)v12;
    uint64_t v21 = *((void *)v19 + 3);
    uint64_t started = *((void *)v19 + 2);
    LODWORD(v35) = v19[11];
    LODWORD(v34) = *(unsigned __int16 *)(v19 + 9);
    char v22 = v19[8];
    uint64_t v23 = *(void *)v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = v37;
    uint64_t v26 = v40;
    uint64_t v25 = v41;
    unsigned int v27 = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v41, v18, v40);
    uint64_t v28 = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
    uint64_t v29 = v25 + v28[6];
    uint64_t v30 = sub_10006A250();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
    uint64_t v31 = v25 + v28[5];
    *(void *)uint64_t v31 = v23;
    *(unsigned char *)(v31 + 8) = v22;
    *(_WORD *)(v31 + 9) = v34;
    *(unsigned char *)(v31 + 11) = v35;
    *(void *)(v31 + 16) = started;
    *(void *)(v31 + 24) = v21;
    uint64_t v32 = v39;
    *(void *)(v31 + 32) = v38;
    *(void *)(v31 + 40) = v20;
    *(unsigned char *)(v25 + v28[7]) = 2;
    sub_10000F694(v32, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetPersistedPrompts);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, v26);
  }
  uint64_t result = sub_10006A4A0();
  __break(1u);
  return result;
}

uint64_t sub_10000D6A4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v80 = a3;
  v81 = a2;
  uint64_t v79 = a1;
  uint64_t v3 = sub_10006A240();
  __chkstk_darwin(v3 - 8);
  v77 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000696C0();
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  __chkstk_darwin(v5);
  v71 = (uint8_t *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100069660();
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  v68 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  __chkstk_darwin(started);
  uint64_t v83 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10006A1C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  v69 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = sub_1000059D8(&qword_100088ED8);
  __chkstk_darwin(v15 - 8);
  uint64_t v78 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000059D8(&qword_100088EE0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  v76 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v67 = (char *)&v61 - v21;
  uint64_t v22 = sub_1000059D8(&qword_100088EE8);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100069600();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  v82 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v61 - v29;
  type metadata accessor for JournalWidgetBridge();
  sub_1000119B8((uint64_t)v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    uint64_t v62 = v10;
    uint64_t v63 = v9;
    uint64_t v64 = v26;
    uint64_t v65 = v25;
    uint64_t v66 = v18;
    v67 = (char *)v17;
    uint64_t v31 = &qword_100088EE8;
    uint64_t v32 = (uint64_t)v24;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v30, v24, v25);
    sub_10006A260();
    uint64_t v33 = sub_10000E66C((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    uint64_t v34 = v78;
    sub_10005463C((uint64_t)v30, (uint64_t)v33, v78);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v34, 1, v17) != 1)
    {
      v59 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v67, v78, v17);
      v81(v59);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v17);
      v58 = v30;
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v58, v25);
    }
    uint64_t v62 = v10;
    uint64_t v63 = v9;
    uint64_t v64 = v26;
    uint64_t v66 = v18;
    v67 = (char *)v17;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v26 + 8);
    uint64_t v65 = v25;
    v35(v30, v25);
    uint64_t v31 = &qword_100088ED8;
    uint64_t v32 = v78;
  }
  sub_100007D0C(v32, v31);
  uint64_t v36 = (uint64_t)v82;
  sub_1000695E0();
  type metadata accessor for StartWritingWidgetPromptProvider();
  if (qword_1000889D8 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_100092CB0;
  swift_bridgeObjectRetain();
  uint64_t v38 = (uint64_t)v68;
  sub_100069650();
  uint64_t v39 = v71;
  sub_1000696A0();
  sub_10003CD9C(v37, v38, v39, v36, (void (*)(uint64_t))sub_10000D01C, (void (*)(uint64_t))sub_10000D038, 0, v83);
  swift_bridgeObjectRelease();
  (*(void (**)(uint8_t *, uint64_t))(v73 + 8))(v39, v74);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v38, v72);
  sub_1000059D8(&qword_100088EF0);
  uint64_t v40 = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  unint64_t v41 = (*(unsigned __int8 *)(*((void *)v40 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v40 - 1) + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_10006AB80;
  v43 = v69;
  sub_10006A260();
  int v44 = (*(uint64_t (**)(char *, uint64_t))(v62 + 88))(v43, v63);
  uint64_t v45 = 7;
  if (v44 == enum case for WidgetFamily.systemSmall(_:)
    || v44 == enum case for WidgetFamily.systemMedium(_:)
    || (uint64_t v45 = 6, v44 == enum case for WidgetFamily.accessoryCircular(_:))
    || v44 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
LABEL_13:
    unint64_t v46 = v42 + v41;
    uint64_t v47 = v83;
    v48 = (uint64_t *)(v83 + *(int *)(started + 4 * v45));
    uint64_t v49 = v48[5];
    uint64_t v78 = v48[4];
    uint64_t v79 = v42;
    uint64_t v50 = v48[3];
    uint64_t started = v48[2];
    LODWORD(v74) = *((unsigned __int8 *)v48 + 11);
    LODWORD(v73) = *(unsigned __int16 *)((char *)v48 + 9);
    char v51 = *((unsigned char *)v48 + 8);
    uint64_t v52 = *v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = v64;
    uint64_t v53 = v36;
    uint64_t v25 = v65;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v64 + 16))(v46, v53, v65);
    unint64_t v54 = v46 + v40[6];
    uint64_t v55 = sub_10006A250();
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
    unint64_t v56 = v46 + v40[5];
    *(void *)unint64_t v56 = v52;
    *(unsigned char *)(v56 + 8) = v51;
    *(_WORD *)(v56 + 9) = v73;
    *(unsigned char *)(v56 + 11) = v74;
    *(void *)(v56 + 16) = started;
    *(void *)(v56 + 24) = v50;
    *(void *)(v56 + 32) = v78;
    *(void *)(v56 + 40) = v49;
    *(unsigned char *)(v46 + v40[7]) = 2;
    sub_1000059D8(&qword_100088EF8);
    sub_10006A220();
    sub_10000CFC4();
    v57 = v76;
    sub_10006A270();
    v81(v57);
    (*(void (**)(char *, char *))(v66 + 8))(v57, v67);
    sub_10000F694(v47, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetPersistedPrompts);
    v58 = v82;
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v58, v25);
  }
  if (v44 == enum case for WidgetFamily.accessoryInline(_:))
  {
    uint64_t v45 = 5;
    goto LABEL_13;
  }
  uint64_t result = sub_10006A4A0();
  __break(1u);
  return result;
}

uint64_t sub_10000E090(char *a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  int v44 = a1;
  uint64_t v3 = sub_10006A1C0();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000696C0();
  uint64_t v6 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v8 = (uint8_t *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100069660();
  uint64_t v9 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  __chkstk_darwin(started);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for StartWritingWidgetTimelineEntry();
  __chkstk_darwin(v45);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100069600();
  uint64_t v46 = *(void *)(v16 - 8);
  uint64_t v47 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000695E0();
  type metadata accessor for StartWritingWidgetPromptProvider();
  if (qword_1000889D8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_100092CB0;
  swift_bridgeObjectRetain();
  sub_100069650();
  sub_1000696A0();
  sub_10003CD9C(v19, (uint64_t)v11, v8, (uint64_t)v18, (void (*)(uint64_t))sub_10000D01C, (void (*)(uint64_t))sub_10000D038, 0, (uint64_t)v13);
  swift_bridgeObjectRelease();
  (*(void (**)(uint8_t *, uint64_t))(v6 + 8))(v8, v40);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v39);
  sub_10006A260();
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v5, v43);
  uint64_t v21 = 7;
  uint64_t v22 = v18;
  if (v20 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_9;
  }
  if (v20 == enum case for WidgetFamily.systemMedium(_:)) {
    goto LABEL_9;
  }
  uint64_t v21 = 6;
  if (v20 == enum case for WidgetFamily.accessoryCircular(_:)
    || v20 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    goto LABEL_9;
  }
  if (v20 == enum case for WidgetFamily.accessoryInline(_:))
  {
    uint64_t v21 = 5;
LABEL_9:
    uint64_t v23 = &v13[*(int *)(started + 4 * v21)];
    uint64_t v24 = *((void *)v23 + 4);
    uint64_t v25 = *((void *)v23 + 5);
    uint64_t v26 = *((void *)v23 + 3);
    uint64_t v42 = *((void *)v23 + 2);
    uint64_t v43 = v24;
    LODWORD(started) = v23[11];
    int v44 = v13;
    LODWORD(v40) = *(unsigned __int16 *)(v23 + 9);
    char v27 = v23[8];
    uint64_t v28 = *(void *)v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v30 = v46;
    uint64_t v29 = v47;
    uint64_t v31 = v22;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v15, v22, v47);
    uint64_t v32 = v45;
    uint64_t v33 = &v15[*(int *)(v45 + 24)];
    uint64_t v34 = sub_10006A250();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
    uint64_t v35 = &v15[*(int *)(v32 + 20)];
    *(void *)uint64_t v35 = v28;
    v35[8] = v27;
    *(_WORD *)(v35 + 9) = v40;
    v35[11] = started;
    *((void *)v35 + 2) = v42;
    *((void *)v35 + 3) = v26;
    uint64_t v36 = (uint64_t)v44;
    *((void *)v35 + 4) = v43;
    *((void *)v35 + 5) = v25;
    v15[*(int *)(v32 + 28)] = 2;
    sub_10000F694(v36, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetPersistedPrompts);
    v49(v15);
    sub_10000F694((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v29);
  }
  uint64_t result = sub_10006A4A0();
  __break(1u);
  return result;
}

void *sub_10000E66C(uint64_t a1)
{
  uint64_t v2 = sub_100069660();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10006A1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_1000059D8(&qword_100088F00);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10006B7C0;
    if (qword_1000884E8 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_100092288;
    uint64_t v13 = unk_100092290;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v14 = sub_100069630();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v5, v2);
    char v18 = v148;
    *(void *)(v11 + 32) = 0;
    *(unsigned char *)(v11 + 40) = v18;
    *(_WORD *)(v11 + 41) = 2;
    *(unsigned char *)(v11 + 43) = 0;
    *(void *)(v11 + 48) = v12;
    *(void *)(v11 + 56) = v13;
    *(void *)(v11 + 64) = v14;
    *(void *)(v11 + 72) = v16;
    if (qword_1000884F0 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_100092298;
    uint64_t v20 = unk_1000922A0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v21 = sub_100069630();
    uint64_t v23 = v22;
    v17(v5, v2);
    char v24 = v148;
    *(void *)(v11 + 80) = 0;
    *(unsigned char *)(v11 + 88) = v24;
    *(_WORD *)(v11 + 89) = 2;
    *(unsigned char *)(v11 + 91) = 0;
    *(void *)(v11 + 96) = v19;
    *(void *)(v11 + 104) = v20;
    *(void *)(v11 + 112) = v21;
    *(void *)(v11 + 120) = v23;
    if (qword_100088620 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_1000924F8;
    uint64_t v26 = unk_100092500;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v27 = sub_100069630();
    uint64_t v29 = v28;
    v17(v5, v2);
    char v30 = v148;
    *(void *)(v11 + 128) = 0;
    *(unsigned char *)(v11 + 136) = v30;
    *(_WORD *)(v11 + 137) = 2;
    *(unsigned char *)(v11 + 139) = 1;
    *(void *)(v11 + 144) = v25;
    *(void *)(v11 + 152) = v26;
    *(void *)(v11 + 160) = v27;
    *(void *)(v11 + 168) = v29;
    if (qword_100088628 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_100092508;
    uint64_t v32 = unk_100092510;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v33 = sub_100069630();
    uint64_t v35 = v34;
    v17(v5, v2);
    char v36 = v148;
    *(void *)(v11 + 176) = 0;
    *(unsigned char *)(v11 + 184) = v36;
    *(_WORD *)(v11 + 185) = 2;
    *(unsigned char *)(v11 + 187) = 1;
    *(void *)(v11 + 192) = v31;
    *(void *)(v11 + 200) = v32;
    *(void *)(v11 + 208) = v33;
    *(void *)(v11 + 216) = v35;
    if (qword_1000887D8 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_100092868;
    uint64_t v38 = unk_100092870;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v39 = sub_100069630();
    uint64_t v41 = v40;
    v17(v5, v2);
    char v42 = v148;
    *(void *)(v11 + 224) = 0;
    *(unsigned char *)(v11 + 232) = v42;
    *(_WORD *)(v11 + 233) = 2;
    *(unsigned char *)(v11 + 235) = 2;
    *(void *)(v11 + 240) = v37;
    *(void *)(v11 + 248) = v38;
    *(void *)(v11 + 256) = v39;
    *(void *)(v11 + 264) = v41;
    if (qword_1000887E0 != -1) {
      swift_once();
    }
    uint64_t v43 = &qword_100092878;
LABEL_29:
    uint64_t v74 = *v43;
    uint64_t v75 = v43[1];
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v76 = sub_100069630();
    uint64_t v78 = v77;
    v17(v5, v2);
    char v79 = v148;
    *(void *)(v11 + 272) = 0;
    *(unsigned char *)(v11 + 280) = v79;
    *(_WORD *)(v11 + 281) = 2;
    *(unsigned char *)(v11 + 283) = 2;
    goto LABEL_59;
  }
  if (v10 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_1000059D8(&qword_100088F00);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10006B7C0;
    if (qword_1000884F8 != -1) {
      swift_once();
    }
    uint64_t v44 = qword_1000922A8;
    uint64_t v45 = unk_1000922B0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v46 = sub_100069630();
    uint64_t v48 = v47;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v5, v2);
    char v49 = v148;
    *(void *)(v11 + 32) = 0;
    *(unsigned char *)(v11 + 40) = v49;
    *(_WORD *)(v11 + 41) = 2;
    *(unsigned char *)(v11 + 43) = 0;
    *(void *)(v11 + 48) = v44;
    *(void *)(v11 + 56) = v45;
    *(void *)(v11 + 64) = v46;
    *(void *)(v11 + 72) = v48;
    if (qword_100088500 != -1) {
      swift_once();
    }
    uint64_t v50 = qword_1000922B8;
    uint64_t v51 = unk_1000922C0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v52 = sub_100069630();
    uint64_t v54 = v53;
    v17(v5, v2);
    char v55 = v148;
    *(void *)(v11 + 80) = 0;
    *(unsigned char *)(v11 + 88) = v55;
    *(_WORD *)(v11 + 89) = 2;
    *(unsigned char *)(v11 + 91) = 0;
    *(void *)(v11 + 96) = v50;
    *(void *)(v11 + 104) = v51;
    *(void *)(v11 + 112) = v52;
    *(void *)(v11 + 120) = v54;
    if (qword_100088630 != -1) {
      swift_once();
    }
    uint64_t v56 = qword_100092518;
    uint64_t v57 = unk_100092520;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v58 = sub_100069630();
    uint64_t v60 = v59;
    v17(v5, v2);
    char v61 = v148;
    *(void *)(v11 + 128) = 0;
    *(unsigned char *)(v11 + 136) = v61;
    *(_WORD *)(v11 + 137) = 2;
    *(unsigned char *)(v11 + 139) = 1;
    *(void *)(v11 + 144) = v56;
    *(void *)(v11 + 152) = v57;
    *(void *)(v11 + 160) = v58;
    *(void *)(v11 + 168) = v60;
    if (qword_100088638 != -1) {
      swift_once();
    }
    uint64_t v62 = qword_100092528;
    uint64_t v63 = unk_100092530;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v64 = sub_100069630();
    uint64_t v66 = v65;
    v17(v5, v2);
    char v67 = v148;
    *(void *)(v11 + 176) = 0;
    *(unsigned char *)(v11 + 184) = v67;
    *(_WORD *)(v11 + 185) = 2;
    *(unsigned char *)(v11 + 187) = 1;
    *(void *)(v11 + 192) = v62;
    *(void *)(v11 + 200) = v63;
    *(void *)(v11 + 208) = v64;
    *(void *)(v11 + 216) = v66;
    if (qword_1000887E8 != -1) {
      swift_once();
    }
    uint64_t v68 = qword_100092888;
    uint64_t v69 = unk_100092890;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v70 = sub_100069630();
    uint64_t v72 = v71;
    v17(v5, v2);
    char v73 = v148;
    *(void *)(v11 + 224) = 0;
    *(unsigned char *)(v11 + 232) = v73;
    *(_WORD *)(v11 + 233) = 2;
    *(unsigned char *)(v11 + 235) = 2;
    *(void *)(v11 + 240) = v68;
    *(void *)(v11 + 248) = v69;
    *(void *)(v11 + 256) = v70;
    *(void *)(v11 + 264) = v72;
    if (qword_1000887F0 != -1) {
      swift_once();
    }
    uint64_t v43 = &qword_100092898;
    goto LABEL_29;
  }
  if (v10 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_1000059D8(&qword_100088F00);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10006B7C0;
    if (qword_100088570 != -1) {
      swift_once();
    }
    uint64_t v80 = qword_100092398;
    uint64_t v81 = unk_1000923A0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v82 = sub_100069630();
    uint64_t v84 = v83;
    v85 = *(void (**)(char *, uint64_t))(v3 + 8);
    v85(v5, v2);
    char v86 = v148;
    *(void *)(v11 + 32) = 0;
    *(unsigned char *)(v11 + 40) = v86;
    *(_WORD *)(v11 + 41) = 1;
    *(unsigned char *)(v11 + 43) = 0;
    *(void *)(v11 + 48) = v80;
    *(void *)(v11 + 56) = v81;
    *(void *)(v11 + 64) = v82;
    *(void *)(v11 + 72) = v84;
    if (qword_100088578 != -1) {
      swift_once();
    }
    uint64_t v87 = qword_1000923A8;
    uint64_t v88 = unk_1000923B0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v89 = sub_100069630();
    uint64_t v91 = v90;
    v85(v5, v2);
    char v92 = v148;
    *(void *)(v11 + 80) = 0;
    *(unsigned char *)(v11 + 88) = v92;
    *(_WORD *)(v11 + 89) = 1;
    *(unsigned char *)(v11 + 91) = 0;
    *(void *)(v11 + 96) = v87;
    *(void *)(v11 + 104) = v88;
    *(void *)(v11 + 112) = v89;
    *(void *)(v11 + 120) = v91;
    if (qword_1000886F8 != -1) {
      swift_once();
    }
    uint64_t v93 = qword_1000926A8;
    uint64_t v94 = unk_1000926B0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v95 = sub_100069630();
    uint64_t v97 = v96;
    v85(v5, v2);
    char v98 = v148;
    *(void *)(v11 + 128) = 0;
    *(unsigned char *)(v11 + 136) = v98;
    *(_WORD *)(v11 + 137) = 1;
    *(unsigned char *)(v11 + 139) = 1;
    *(void *)(v11 + 144) = v93;
    *(void *)(v11 + 152) = v94;
    *(void *)(v11 + 160) = v95;
    *(void *)(v11 + 168) = v97;
    if (qword_100088700 != -1) {
      swift_once();
    }
    uint64_t v99 = qword_1000926B8;
    uint64_t v100 = unk_1000926C0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v101 = sub_100069630();
    uint64_t v103 = v102;
    v85(v5, v2);
    char v104 = v148;
    *(void *)(v11 + 176) = 0;
    *(unsigned char *)(v11 + 184) = v104;
    *(_WORD *)(v11 + 185) = 1;
    *(unsigned char *)(v11 + 187) = 1;
    *(void *)(v11 + 192) = v99;
    *(void *)(v11 + 200) = v100;
    *(void *)(v11 + 208) = v101;
    *(void *)(v11 + 216) = v103;
    if (qword_100088870 != -1) {
      swift_once();
    }
    uint64_t v105 = qword_100092998;
    uint64_t v106 = unk_1000929A0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v107 = sub_100069630();
    uint64_t v109 = v108;
    v85(v5, v2);
    char v110 = v148;
    *(void *)(v11 + 224) = 0;
    *(unsigned char *)(v11 + 232) = v110;
    *(_WORD *)(v11 + 233) = 1;
    *(unsigned char *)(v11 + 235) = 2;
    *(void *)(v11 + 240) = v105;
    *(void *)(v11 + 248) = v106;
    *(void *)(v11 + 256) = v107;
    *(void *)(v11 + 264) = v109;
    if (qword_100088878 != -1) {
      swift_once();
    }
    uint64_t v74 = qword_1000929A8;
    uint64_t v75 = unk_1000929B0;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v76 = sub_100069630();
    uint64_t v78 = v111;
    v85(v5, v2);
    char v112 = v148;
    *(void *)(v11 + 272) = 0;
    *(unsigned char *)(v11 + 280) = v112;
    *(_WORD *)(v11 + 281) = 1;
  }
  else
  {
    if (v10 != enum case for WidgetFamily.accessoryInline(_:))
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return &_swiftEmptyArrayStorage;
    }
    sub_1000059D8(&qword_100088F00);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10006B7C0;
    if (qword_1000885C0 != -1) {
      swift_once();
    }
    uint64_t v113 = qword_100092438;
    uint64_t v114 = unk_100092440;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v115 = sub_100069630();
    uint64_t v117 = v116;
    v118 = *(void (**)(char *, uint64_t))(v3 + 8);
    v118(v5, v2);
    char v119 = v148;
    *(void *)(v11 + 32) = 0;
    *(unsigned char *)(v11 + 40) = v119;
    *(_WORD *)(v11 + 41) = 0;
    *(unsigned char *)(v11 + 43) = 0;
    *(void *)(v11 + 48) = v113;
    *(void *)(v11 + 56) = v114;
    *(void *)(v11 + 64) = v115;
    *(void *)(v11 + 72) = v117;
    if (qword_1000885C8 != -1) {
      swift_once();
    }
    uint64_t v120 = qword_100092448;
    uint64_t v121 = unk_100092450;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v122 = sub_100069630();
    uint64_t v124 = v123;
    v118(v5, v2);
    char v125 = v148;
    *(void *)(v11 + 80) = 0;
    *(unsigned char *)(v11 + 88) = v125;
    *(_WORD *)(v11 + 89) = 0;
    *(unsigned char *)(v11 + 91) = 0;
    *(void *)(v11 + 96) = v120;
    *(void *)(v11 + 104) = v121;
    *(void *)(v11 + 112) = v122;
    *(void *)(v11 + 120) = v124;
    if (qword_100088740 != -1) {
      swift_once();
    }
    uint64_t v126 = qword_100092738;
    uint64_t v127 = unk_100092740;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v128 = sub_100069630();
    uint64_t v130 = v129;
    v118(v5, v2);
    char v131 = v148;
    *(void *)(v11 + 128) = 0;
    *(unsigned char *)(v11 + 136) = v131;
    *(_WORD *)(v11 + 137) = 0;
    *(unsigned char *)(v11 + 139) = 1;
    *(void *)(v11 + 144) = v126;
    *(void *)(v11 + 152) = v127;
    *(void *)(v11 + 160) = v128;
    *(void *)(v11 + 168) = v130;
    if (qword_100088748 != -1) {
      swift_once();
    }
    uint64_t v132 = qword_100092748;
    uint64_t v133 = unk_100092750;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v134 = sub_100069630();
    uint64_t v136 = v135;
    v118(v5, v2);
    char v137 = v148;
    *(void *)(v11 + 176) = 0;
    *(unsigned char *)(v11 + 184) = v137;
    *(_WORD *)(v11 + 185) = 0;
    *(unsigned char *)(v11 + 187) = 1;
    *(void *)(v11 + 192) = v132;
    *(void *)(v11 + 200) = v133;
    *(void *)(v11 + 208) = v134;
    *(void *)(v11 + 216) = v136;
    if (qword_1000888C8 != -1) {
      swift_once();
    }
    uint64_t v138 = qword_100092A48;
    uint64_t v139 = unk_100092A50;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v140 = sub_100069630();
    uint64_t v142 = v141;
    v118(v5, v2);
    char v143 = v148;
    *(void *)(v11 + 224) = 0;
    *(unsigned char *)(v11 + 232) = v143;
    *(_WORD *)(v11 + 233) = 0;
    *(unsigned char *)(v11 + 235) = 2;
    *(void *)(v11 + 240) = v138;
    *(void *)(v11 + 248) = v139;
    *(void *)(v11 + 256) = v140;
    *(void *)(v11 + 264) = v142;
    if (qword_1000888D0 != -1) {
      swift_once();
    }
    uint64_t v74 = qword_100092A58;
    uint64_t v75 = unk_100092A60;
    swift_bridgeObjectRetain();
    sub_100069650();
    char v148 = 1;
    uint64_t v76 = sub_100069630();
    uint64_t v78 = v144;
    v118(v5, v2);
    char v145 = v148;
    *(void *)(v11 + 272) = 0;
    *(unsigned char *)(v11 + 280) = v145;
    *(_WORD *)(v11 + 281) = 0;
  }
  *(unsigned char *)(v11 + 283) = 2;
LABEL_59:
  *(void *)(v11 + 288) = v74;
  *(void *)(v11 + 296) = v75;
  *(void *)(v11 + 304) = v76;
  *(void *)(v11 + 312) = v78;
  return (void *)v11;
}

uint64_t sub_10000F630(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_10000F694(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10000F6F4(void *a1, void *a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  int v5 = *(_DWORD *)(*(void *)(started - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)started;
    uint64_t v7 = sub_100069600();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
    *(void *)uint64_t v9 = *(void *)v10;
    uint64_t v11 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v11;
    uint64_t v12 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v12;
    uint64_t v13 = v6[6];
    __dst = (char *)a1 + v13;
    uint64_t v14 = (char *)a2 + v13;
    uint64_t v15 = sub_10006A250();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_1000059D8(&qword_100088F10);
      memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
  }
  return a1;
}

uint64_t sub_10000F904(uint64_t a1)
{
  uint64_t v2 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(started + 24);
  uint64_t v5 = sub_10006A250();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_10000FA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v6 = started[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = v9;
  uint64_t v10 = *(void *)(v8 + 40);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = v10;
  uint64_t v11 = started[6];
  __dst = (void *)(a1 + v11);
  uint64_t v12 = (const void *)(a2 + v11);
  uint64_t v13 = sub_10006A250();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_1000059D8(&qword_100088F10);
    memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  *(unsigned char *)(a1 + started[7]) = *(unsigned char *)(a2 + started[7]);
  return a1;
}

uint64_t sub_10000FBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v6 = started[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  LOBYTE(v6) = *(unsigned char *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v6;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  *(unsigned char *)(v7 + 10) = *(unsigned char *)(v8 + 10);
  *(unsigned char *)(v7 + 11) = *(unsigned char *)(v8 + 11);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = started[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_10006A250();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000059D8(&qword_100088F10);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(unsigned char *)(a1 + started[7]) = *(unsigned char *)(a2 + started[7]);
  return a1;
}

uint64_t sub_10000FE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v6 = started[5];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  long long v9 = v8[1];
  *uint64_t v7 = *v8;
  v7[1] = v9;
  v7[2] = v8[2];
  uint64_t v10 = started[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_10006A250();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1000059D8(&qword_100088F10);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(unsigned char *)(a1 + started[7]) = *(unsigned char *)(a2 + started[7]);
  return a1;
}

uint64_t sub_10000FFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v6 = started[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  uint64_t v9 = *(void *)(a2 + v6 + 24);
  *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
  *(void *)(v7 + 24) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v8 + 40);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = started[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_10006A250();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1000059D8(&qword_100088F10);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(unsigned char *)(a1 + started[7]) = *(unsigned char *)(a2 + started[7]);
  return a1;
}

uint64_t sub_1000101C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000101DC);
}

uint64_t sub_1000101DC(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 48);

  return v5(a1, a2, started);
}

uint64_t sub_100010248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001025C);
}

uint64_t sub_10001025C(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56);

  return v5(a1, a2, a2, started);
}

uint64_t type metadata accessor for StartWritingWidgetAccessoryInlineView()
{
  uint64_t result = qword_100088F70;
  if (!qword_100088F70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100010318()
{
  uint64_t result = type metadata accessor for StartWritingWidgetTimelineEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000103A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000103C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000059D8(&qword_100088FA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v6 = sub_100069CB0();
  unsigned __int8 v7 = sub_100069CD0();
  char v8 = sub_100069CC0();
  sub_100069CC0();
  if (sub_100069CC0() != v6) {
    char v8 = sub_100069CC0();
  }
  sub_100069CC0();
  if (sub_100069CC0() != v7) {
    char v8 = sub_100069CC0();
  }
  unsigned char *v5 = v8;
  uint64_t v9 = sub_1000059D8(&qword_100088FB0);
  sub_1000104D8(v1, &v5[*(int *)(v9 + 44)]);
  return sub_100010A78((uint64_t)v5, a1, &qword_100088FA8);
}

uint64_t sub_1000104D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1000059D8(&qword_100088FB8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned __int8 v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_100088FC0);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v8 = v41;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v45 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v44 = (char *)v40 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v40 - v14;
  __chkstk_darwin(v13);
  uint64_t v43 = (char *)v40 - v16;
  int v17 = (uint64_t *)(a1 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20));
  uint64_t v18 = *v17;
  uint64_t v19 = *((unsigned __int8 *)v17 + 8);
  uint64_t v20 = *((unsigned __int8 *)v17 + 9);
  uint64_t v21 = *((unsigned __int8 *)v17 + 10);
  uint64_t v22 = *((unsigned __int8 *)v17 + 11);
  long long v23 = *((_OWORD *)v17 + 1);
  uint64_t v25 = v17[4];
  uint64_t v24 = v17[5];
  v50[0] = v18;
  v50[1] = v19 | (v20 << 8) | (v21 << 16) | (v22 << 24);
  long long v51 = v23;
  uint64_t v52 = v25;
  uint64_t v53 = v24;
  uint64_t v48 = v50;
  char v42 = sub_100010A2C;
  sub_10006A080();
  sub_10000CE3C(&qword_100088FC8, &qword_100088FB8);
  uint64_t v26 = v15;
  uint64_t v27 = v3;
  sub_100069EF0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v4 + 8);
  v40[1] = v4 + 8;
  v28(v6, v27);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  char v30 = v43;
  v29(v43, v15, v7);
  memset(v49, 0, sizeof(v49));
  uint64_t v47 = v49;
  sub_10006A080();
  uint64_t v31 = v44;
  sub_100069EF0();
  v28(v6, v27);
  v29(v26, v31, v7);
  uint64_t v32 = v41;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v34 = v31;
  v33(v31, v30, v7);
  uint64_t v35 = v45;
  v33(v45, v26, v7);
  char v36 = v46;
  v33(v46, v34, v7);
  uint64_t v37 = sub_1000059D8(&qword_100088FD0);
  v33(&v36[*(int *)(v37 + 48)], v35, v7);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v32 + 8);
  v38(v26, v7);
  v38(v30, v7);
  v38(v35, v7);
  return ((uint64_t (*)(char *, uint64_t))v38)(v34, v7);
}

uint64_t sub_100010978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100010A78(a1, (uint64_t)v7, &qword_100088FD8);
  if (!v8 && qword_100088488 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100005A64();
  uint64_t result = sub_100069E60();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_100010A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006A040();
  *a1 = result;
  return result;
}

uint64_t sub_100010A70@<X0>(uint64_t a1@<X8>)
{
  return sub_100010978(*(void *)(v1 + 16), a1);
}

uint64_t sub_100010A78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000059D8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100010ADC()
{
  return sub_10000CE3C(&qword_100088FE0, &qword_100088FA8);
}

uint64_t sub_100010B1C()
{
  uint64_t v0 = sub_1000059D8(&qword_100088FF0);

  return TupleWidget.init(_:)(v0, v0);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_100010B9C()
{
  unint64_t result = qword_100088FE8;
  if (!qword_100088FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088FE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalWidgetBundle()
{
  return &type metadata for JournalWidgetBundle;
}

uint64_t sub_100010C00()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100010C20()
{
  unint64_t result = qword_100088FF8;
  if (!qword_100088FF8)
  {
    sub_100005A1C(&qword_100089000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100088FF8);
  }
  return result;
}

unint64_t sub_100010C80()
{
  unint64_t result = qword_100089018;
  if (!qword_100089018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089018);
  }
  return result;
}

unint64_t sub_100010CD8()
{
  unint64_t result = qword_100089020;
  if (!qword_100089020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089020);
  }
  return result;
}

uint64_t sub_100010D2C()
{
  uint64_t v0 = sub_100069470();
  sub_10000CD24(v0, qword_100092190);
  sub_10000CCEC(v0, (uint64_t)qword_100092190);
  return sub_100069450();
}

uint64_t sub_100010D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100069470();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_100069100();
  uint64_t v13 = sub_1000690F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t sub_100011088()
{
  sub_100068F00();
  return v1;
}

uint64_t sub_1000110BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100068F00();
  *a1 = v3;
  return result;
}

uint64_t sub_1000110F8()
{
  return sub_100068F10();
}

void (*sub_100011130(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100068EF0();
  return sub_10000AEE4;
}

unint64_t sub_100011190()
{
  unint64_t result = qword_100089028;
  if (!qword_100089028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089028);
  }
  return result;
}

uint64_t sub_1000111E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000118BC();
  unint64_t v5 = sub_100011964();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10001124C()
{
  uint64_t v0 = qword_100089008;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100011288()
{
  unint64_t result = qword_100089030;
  if (!qword_100089030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089030);
  }
  return result;
}

unint64_t sub_1000112E0()
{
  unint64_t result = qword_100089038;
  if (!qword_100089038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089038);
  }
  return result;
}

uint64_t sub_100011334()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100011384@<X0>(uint64_t a1@<X8>)
{
  if (qword_100088468 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100069470();
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092190);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100011430(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000118BC();
  unint64_t v7 = sub_100011910();
  unint64_t v8 = sub_100011964();
  void *v5 = v2;
  v5[1] = sub_10000B360;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100011504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100011578();
  *a1 = result;
  return result;
}

uint64_t sub_10001152C(uint64_t a1)
{
  unint64_t v2 = sub_100011190();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenJournalSettingsDeeplinks()
{
  return &type metadata for OpenJournalSettingsDeeplinks;
}

uint64_t sub_100011578()
{
  uint64_t v17 = sub_100069200();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000059D8(&qword_100088DE8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100069470();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000059D8(&qword_100089048);
  sub_100069450();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v18 = 10;
  uint64_t v14 = sub_100068EB0();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_100011868();
  return sub_100068F20();
}

unint64_t sub_100011868()
{
  unint64_t result = qword_100089050;
  if (!qword_100089050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089050);
  }
  return result;
}

unint64_t sub_1000118BC()
{
  unint64_t result = qword_100089058;
  if (!qword_100089058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089058);
  }
  return result;
}

unint64_t sub_100011910()
{
  unint64_t result = qword_100089060;
  if (!qword_100089060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089060);
  }
  return result;
}

unint64_t sub_100011964()
{
  unint64_t result = qword_100089068;
  if (!qword_100089068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089068);
  }
  return result;
}

uint64_t sub_1000119B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088EE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v6 = sub_10006A2D0();
  id v7 = [v5 initWithSuiteName:v6];

  if (v7)
  {
    NSString v8 = sub_10006A2D0();
    id v9 = [v7 objectForKey:v8];

    if (v9)
    {
      sub_10006A3F0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v15, 0, sizeof(v15));
    }
    sub_100011D38((uint64_t)v15, (uint64_t)v16);
    if (!v17)
    {
      sub_100007D0C((uint64_t)v16, &qword_100089108);
      uint64_t v10 = sub_100069600();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
LABEL_9:
      sub_100007D0C((uint64_t)v4, &qword_100088EE8);
      sub_100069600();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
    uint64_t v10 = sub_100069600();
    int v11 = swift_dynamicCast();
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    v13(v4, v11 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v10) == 1) {
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v4, v10);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v13)(a1, 0, 1, v10);
  }
  else
  {
    uint64_t result = sub_10006A4A0();
    __break(1u);
  }
  return result;
}

void sub_100011CE8()
{
  unk_1000921B5 = 0;
  unk_1000921B6 = -5120;
}

uint64_t type metadata accessor for JournalWidgetBridge()
{
  return self;
}

uint64_t sub_100011D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100089108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100011DA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000698A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    int v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10006A1A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *int v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1000059D8(&qword_100089120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100069AB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    char v36 = a1;
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100069600();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
    uint64_t v23 = started[5];
    uint64_t v24 = &v19[v23];
    uint64_t v25 = &v20[v23];
    *((_DWORD *)v24 + 2) = *((_DWORD *)v25 + 2);
    *(void *)uint64_t v24 = *(void *)v25;
    uint64_t v26 = *((void *)v25 + 3);
    *((void *)v24 + 2) = *((void *)v25 + 2);
    *((void *)v24 + 3) = v26;
    uint64_t v27 = *((void *)v25 + 5);
    *((void *)v24 + 4) = *((void *)v25 + 4);
    *((void *)v24 + 5) = v27;
    uint64_t v28 = started[6];
    __dst = &v19[v28];
    uint64_t v29 = &v20[v28];
    uint64_t v30 = sub_10006A250();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v29, 1, v30))
    {
      uint64_t v33 = sub_1000059D8(&qword_100088F10);
      memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    v19[started[7]] = v20[started[7]];
    return v36;
  }
  return (uint64_t *)v9;
}

uint64_t sub_100012184(uint64_t a1, int *a2)
{
  sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000698A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006A1A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_1000059D8(&qword_100089120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_100069AB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v9 + *(int *)(started + 24);
  uint64_t v13 = sub_10006A250();
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v12, v13);
  }
  return result;
}

void *sub_1000123F8(void *a1, void *a2, int *a3)
{
  sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000698A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10006A1A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_1000059D8(&qword_100089120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_100069AB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    void *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v33 = a1;
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v20 = started[5];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  *((_DWORD *)v21 + 2) = *((_DWORD *)v22 + 2);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 3);
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = v23;
  uint64_t v24 = *((void *)v22 + 5);
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *((void *)v21 + 5) = v24;
  uint64_t v25 = started[6];
  __dst = &v16[v25];
  uint64_t v26 = &v17[v25];
  uint64_t v27 = sub_10006A250();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    uint64_t v30 = sub_1000059D8(&qword_100088F10);
    memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  v16[started[7]] = v17[started[7]];
  return v33;
}

void *sub_100012788(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100089110);
    sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000698A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100007D0C((uint64_t)a1 + v7, &qword_100089118);
    sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10006A1A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100007D0C((uint64_t)a1 + v11, &qword_100089120);
    sub_1000059D8(&qword_100089120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_100069AB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      void *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v33 = a1;
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v20 = started[5];
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  LOBYTE(v20) = v17[v20 + 8];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v20;
  v21[9] = v22[9];
  v21[10] = v22[10];
  v21[11] = v22[11];
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *((void *)v21 + 5) = *((void *)v22 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = started[6];
  uint64_t v24 = &v16[v23];
  uint64_t v25 = &v17[v23];
  uint64_t v26 = sub_10006A250();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_17;
  }
  if (v30)
  {
LABEL_17:
    uint64_t v31 = sub_1000059D8(&qword_100088F10);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_18:
  uint64_t result = v33;
  v16[started[7]] = v17[started[7]];
  return result;
}

char *sub_100012BDC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000698A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10006A1A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1000059D8(&qword_100089120);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_100069AB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v23 = started[5];
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  long long v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  uint64_t v27 = started[6];
  uint64_t v28 = &v19[v27];
  int v29 = &v20[v27];
  uint64_t v30 = sub_10006A250();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_1000059D8(&qword_100088F10);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v19[started[7]] = v20[started[7]];
  return a1;
}

char *sub_100012F48(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100089110);
    uint64_t v6 = sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000698A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100007D0C((uint64_t)&a1[v8], &qword_100089118);
    uint64_t v11 = sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10006A1A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100007D0C((uint64_t)&a1[v13], &qword_100089120);
    uint64_t v16 = sub_1000059D8(&qword_100089120);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_100069AB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v38 = a1;
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v23 = started[5];
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  *((_DWORD *)v24 + 2) = *(_DWORD *)&v20[v23 + 8];
  *(void *)uint64_t v24 = *(void *)&v20[v23];
  uint64_t v26 = *(void *)&v20[v23 + 24];
  *((void *)v24 + 2) = *(void *)&v20[v23 + 16];
  *((void *)v24 + 3) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v25 + 5);
  *((void *)v24 + 4) = *((void *)v25 + 4);
  *((void *)v24 + 5) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = started[6];
  int v29 = &v19[v28];
  uint64_t v30 = &v20[v28];
  uint64_t v31 = sub_10006A250();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_16;
  }
  if (v35)
  {
LABEL_16:
    uint64_t v36 = sub_1000059D8(&qword_100088F10);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_17:
  uint64_t result = v38;
  v19[started[7]] = v20[started[7]];
  return result;
}

uint64_t sub_10001337C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013390);
}

uint64_t sub_100013390(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100089128);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000059D8(&qword_100089130);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_1000059D8(&qword_100089138);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 48);
  uint64_t v18 = started;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t sub_100013534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013548);
}

uint64_t sub_100013548(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000059D8(&qword_100089128);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1000059D8(&qword_100089130);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_1000059D8(&qword_100089138);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56);
  uint64_t v20 = started;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t type metadata accessor for StartWritingWidgetSystemMediumView()
{
  uint64_t result = qword_100089198;
  if (!qword_100089198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100013744()
{
  sub_1000138D8(319, &qword_1000891A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  if (v0 <= 0x3F)
  {
    sub_1000138D8(319, &qword_1000891B0, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_1000138D8(319, (unint64_t *)&unk_1000891B8, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      if (v2 <= 0x3F)
      {
        type metadata accessor for StartWritingWidgetTimelineEntry();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1000138D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000697C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10001392C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100013948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v27 = sub_1000697B0();
  uint64_t v2 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100069C70();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_1000891F0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000059D8(&qword_1000891F8);
  uint64_t v10 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_100069AC0();
  *((void *)v9 + 1) = 0x4018000000000000;
  v9[16] = 0;
  uint64_t v13 = sub_1000059D8(&qword_100089200);
  sub_100013D0C(v1, (uint64_t)&v9[*(int *)(v13 + 44)]);
  sub_100069C60();
  sub_10006A0E0();
  sub_10000CE3C(&qword_100089208, &qword_1000891F0);
  sub_100017014();
  sub_100069F90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  sub_100007D0C((uint64_t)v9, &qword_1000891F0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = v26;
  uint64_t v15 = v27;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v26, enum case for ColorScheme.dark(_:), v27);
  uint64_t v17 = sub_1000059D8(&qword_100089218);
  uint64_t v18 = v28;
  uint64_t v19 = (uint64_t *)(v28 + *(int *)(v17 + 36));
  uint64_t v20 = sub_1000059D8(&qword_100089220);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v19 + *(int *)(v20 + 28), v16, v15);
  uint64_t *v19 = KeyPath;
  uint64_t v21 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v18, v12, v25);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v16, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

uint64_t sub_100013D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000059D8(&qword_100089228);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_1000059D8(&qword_100089230);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = sub_1000059D8(&qword_100089238);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v25 - v20;
  sub_100013F9C((uint64_t)&v25 - v20);
  sub_100014E1C((uint64_t)v15);
  unsigned char *v9 = sub_100069CB0();
  uint64_t v22 = sub_1000059D8(&qword_100089240);
  sub_100016BC0(a1, (uint64_t)&v9[*(int *)(v22 + 44)]);
  sub_1000185F8((uint64_t)v21, (uint64_t)v19, &qword_100089238);
  sub_1000185F8((uint64_t)v15, (uint64_t)v13, &qword_100089230);
  sub_1000185F8((uint64_t)v9, (uint64_t)v7, &qword_100089228);
  sub_1000185F8((uint64_t)v19, a2, &qword_100089238);
  uint64_t v23 = sub_1000059D8(&qword_100089248);
  sub_1000185F8((uint64_t)v13, a2 + *(int *)(v23 + 48), &qword_100089230);
  sub_1000185F8((uint64_t)v7, a2 + *(int *)(v23 + 64), &qword_100089228);
  sub_100007D0C((uint64_t)v9, &qword_100089228);
  sub_100007D0C((uint64_t)v15, &qword_100089230);
  sub_100007D0C((uint64_t)v21, &qword_100089238);
  sub_100007D0C((uint64_t)v7, &qword_100089228);
  sub_100007D0C((uint64_t)v13, &qword_100089230);
  return sub_100007D0C((uint64_t)v19, &qword_100089238);
}

uint64_t sub_100013F9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v142 = a1;
  uint64_t v140 = sub_1000059D8(&qword_1000893E0);
  __chkstk_darwin(v140);
  uint64_t v141 = (uint64_t *)((char *)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_100069540();
  uint64_t v137 = *(void *)(v3 - 8);
  uint64_t v138 = v3;
  __chkstk_darwin(v3);
  uint64_t v136 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100069560();
  uint64_t v134 = *(void *)(v5 - 8);
  uint64_t v135 = v5;
  __chkstk_darwin(v5);
  uint64_t v132 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100069580();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v126 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000696E0();
  __chkstk_darwin(v8 - 8);
  uint64_t v121 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000696C0();
  __chkstk_darwin(v10 - 8);
  char v119 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100069660();
  __chkstk_darwin(v12 - 8);
  uint64_t v116 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000694A0();
  __chkstk_darwin(v14 - 8);
  uint64_t v115 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000059D8(&qword_1000893E8);
  __chkstk_darwin(v16 - 8);
  uint64_t v111 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000059D8(&qword_1000893F0);
  __chkstk_darwin(v18 - 8);
  uint64_t v109 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000695A0();
  uint64_t v118 = *(void *)(v120 - 8);
  uint64_t v20 = __chkstk_darwin(v120);
  char v110 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  char v112 = (char *)&v108 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v113 = (char *)&v108 - v25;
  __chkstk_darwin(v24);
  uint64_t v117 = (char *)&v108 - v26;
  uint64_t v108 = sub_100069600();
  uint64_t v27 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v114 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for WidgetHeaderView();
  uint64_t v29 = __chkstk_darwin(v122);
  uint64_t v31 = (uint64_t *)((char *)&v108 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  uint64_t v125 = (uint64_t)&v108 - v32;
  uint64_t v123 = sub_1000059D8(&qword_1000893F8);
  __chkstk_darwin(v123);
  uint64_t v128 = (uint64_t)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000059D8(&qword_100089400);
  __chkstk_darwin(v124);
  uint64_t v131 = (uint64_t)&v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1000059D8(&qword_100089408);
  uint64_t v35 = __chkstk_darwin(v139);
  uint64_t v127 = (uint64_t)&v108 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v133 = (uint64_t)&v108 - v37;
  uint64_t v38 = sub_100069AB0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = __chkstk_darwin(v38);
  char v42 = (char *)&v108 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v108 - v43;
  uint64_t started = type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v46 = v1;
  sub_1000360CC((uint64_t)v44);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v42, enum case for ContentSizeCategory.accessibilityMedium(_:), v38);
  BOOL v47 = sub_100017E08((uint64_t)v44, (uint64_t)v42);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v39 + 8);
  v48(v42, v38);
  v48(v44, v38);
  if (v47)
  {
    sub_10006A0E0();
    sub_100069820();
    uint64_t v49 = v143;
    char v50 = v144;
    uint64_t v51 = v145;
    char v52 = v146;
    uint64_t v53 = v141;
    *uint64_t v141 = 0;
    *((unsigned char *)v53 + 8) = 1;
    v53[2] = v49;
    *((unsigned char *)v53 + 24) = v50;
    v53[4] = v51;
    *((unsigned char *)v53 + 40) = v52;
    *((_OWORD *)v53 + 3) = v147;
    swift_storeEnumTagMultiPayload();
    sub_1000059D8(&qword_100089420);
    sub_10001865C(&qword_100089428, &qword_100089408, (void (*)(void))sub_1000186DC);
    sub_1000187F8();
    return sub_100069B70();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v114, v46 + *(int *)(started + 28), v108);
    uint64_t v55 = sub_1000694F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v109, 1, 1, v55);
    uint64_t v56 = sub_1000694E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v111, 1, 1, v56);
    sub_100069490();
    sub_100069640();
    sub_100069680();
    sub_1000696D0();
    uint64_t v57 = v110;
    sub_100069510();
    uint64_t v58 = v126;
    sub_100069570();
    uint64_t v59 = v112;
    sub_100069590();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v58, v130);
    uint64_t v60 = *(void (**)(char *, uint64_t))(v118 + 8);
    uint64_t v61 = v120;
    v60(v57, v120);
    uint64_t v62 = v132;
    sub_100069550();
    uint64_t v63 = v113;
    sub_100069520();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v62, v135);
    v60(v59, v61);
    uint64_t v64 = v136;
    sub_100069530();
    sub_100069500();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v64, v138);
    v60(v63, v61);
    sub_1000187B0(&qword_100089410, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    sub_1000187B0(&qword_100089418, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v65 = sub_100069E40();
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    uint64_t v71 = v70 & 1;
    *uint64_t v31 = swift_getKeyPath();
    sub_1000059D8(&qword_100088C28);
    swift_storeEnumTagMultiPayload();
    uint64_t v72 = v122;
    char v73 = (uint64_t *)((char *)v31 + *(int *)(v122 + 20));
    *char v73 = swift_getKeyPath();
    sub_1000059D8(&qword_100089118);
    swift_storeEnumTagMultiPayload();
    uint64_t v74 = (uint64_t *)((char *)v31 + *(int *)(v72 + 24));
    *uint64_t v74 = swift_getKeyPath();
    sub_1000059D8(&qword_100089110);
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = (uint64_t *)((char *)v31 + *(int *)(v72 + 28));
    *uint64_t v75 = v65;
    v75[1] = v67;
    v75[2] = v71;
    v75[3] = v69;
    uint64_t v76 = v125;
    sub_100018494((uint64_t)v31, v125);
    LOBYTE(v65) = sub_100069D20();
    sub_100069750();
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v85 = v128;
    sub_100018534(v76, v128);
    uint64_t v86 = v85 + *(int *)(v123 + 36);
    *(unsigned char *)uint64_t v86 = v65;
    *(void *)(v86 + 8) = v78;
    *(void *)(v86 + 16) = v80;
    *(void *)(v86 + 24) = v82;
    *(void *)(v86 + 32) = v84;
    *(unsigned char *)(v86 + 40) = 0;
    sub_100018598(v76, (uint64_t (*)(void))type metadata accessor for WidgetHeaderView);
    LOBYTE(v65) = sub_100069D00();
    sub_100069750();
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v95 = v131;
    sub_1000185F8(v85, v131, &qword_1000893F8);
    uint64_t v96 = v95 + *(int *)(v124 + 36);
    *(unsigned char *)uint64_t v96 = v65;
    *(void *)(v96 + 8) = v88;
    *(void *)(v96 + 16) = v90;
    *(void *)(v96 + 24) = v92;
    *(void *)(v96 + 32) = v94;
    *(unsigned char *)(v96 + 40) = 0;
    sub_100007D0C(v85, &qword_1000893F8);
    LOBYTE(v65) = sub_100069D40();
    sub_100069750();
    uint64_t v98 = v97;
    uint64_t v100 = v99;
    uint64_t v102 = v101;
    uint64_t v104 = v103;
    uint64_t v105 = v127;
    sub_1000185F8(v95, v127, &qword_100089400);
    uint64_t v106 = v105 + *(int *)(v139 + 36);
    *(unsigned char *)uint64_t v106 = v65;
    *(void *)(v106 + 8) = v98;
    *(void *)(v106 + 16) = v100;
    *(void *)(v106 + 24) = v102;
    *(void *)(v106 + 32) = v104;
    *(unsigned char *)(v106 + 40) = 0;
    sub_100007D0C(v95, &qword_100089400);
    uint64_t v107 = v133;
    sub_100010A78(v105, v133, &qword_100089408);
    sub_1000185F8(v107, (uint64_t)v141, &qword_100089408);
    swift_storeEnumTagMultiPayload();
    sub_1000059D8(&qword_100089420);
    sub_10001865C(&qword_100089428, &qword_100089408, (void (*)(void))sub_1000186DC);
    sub_1000187F8();
    sub_100069B70();
    return sub_100007D0C(v107, &qword_100089408);
  }
}

uint64_t sub_100014E1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v59 = sub_100069AB0();
  uint64_t v2 = *(void *)(v59 - 8);
  uint64_t v3 = __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v57 = (uint64_t)&v53 - v5;
  uint64_t v6 = sub_1000059D8(&qword_1000892D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000059D8(&qword_1000892E0);
  __chkstk_darwin(v54);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000059D8(&qword_100089230);
  __chkstk_darwin(v56);
  uint64_t v55 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000698A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = v1;
  sub_100036104((uint64_t)&v53 - v17);
  sub_100069880();
  sub_1000187B0((unint64_t *)&qword_1000892E8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v20 = sub_10006A400();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v12);
  v21(v18, v12);
  if (v20)
  {
    uint64_t v22 = 0x8000000100070370;
    uint64_t v23 = 0xD00000000000007CLL;
  }
  else
  {
    uint64_t v24 = v19 + *(int *)(type metadata accessor for StartWritingWidgetSystemMediumView() + 28);
    uint64_t v25 = v24 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20);
    uint64_t v23 = *(void *)(v25 + 16);
    uint64_t v22 = *(void *)(v25 + 24);
    swift_bridgeObjectRetain();
  }
  *(void *)uint64_t v8 = sub_100069A60();
  *((void *)v8 + 1) = 0x4020000000000000;
  v8[16] = 0;
  uint64_t v26 = sub_1000059D8(&qword_1000892F0);
  sub_10001539C(v19, v23, v22, (uint64_t)&v8[*(int *)(v26 + 44)]);
  swift_bridgeObjectRelease();
  char v27 = sub_100069D20();
  sub_100069750();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_1000185F8((uint64_t)v8, (uint64_t)v10, &qword_1000892D8);
  uint64_t v36 = &v10[*(int *)(v54 + 36)];
  char *v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100007D0C((uint64_t)v8, &qword_1000892D8);
  char v37 = sub_100069D40();
  type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v38 = v57;
  sub_1000360CC(v57);
  uint64_t v40 = (uint64_t)v58;
  uint64_t v39 = v59;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v58, enum case for ContentSizeCategory.accessibilityMedium(_:), v59);
  sub_100017E08(v38, v40);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v41(v40, v39);
  v41(v38, v39);
  sub_100069750();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v55;
  sub_1000185F8((uint64_t)v10, v55, &qword_1000892E0);
  uint64_t v51 = v50 + *(int *)(v56 + 36);
  *(unsigned char *)uint64_t v51 = v37;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  sub_100007D0C((uint64_t)v10, &qword_1000892E0);
  return sub_100010A78(v50, v60, &qword_100089230);
}

uint64_t sub_10001531C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000889B8 != -1) {
    swift_once();
  }
  *(void *)a1 = xmmword_100092C40;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&xmmword_100092C40 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&algn_100092C50[8];

  return swift_bridgeObjectRetain();
}

uint64_t sub_10001539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v110 = a2;
  v96[1] = a1;
  uint64_t v127 = a4;
  uint64_t v124 = type metadata accessor for WidgetHeaderView();
  uint64_t v126 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  v96[0] = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100069AB0();
  uint64_t v122 = *(void *)(v7 - 8);
  uint64_t v123 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v121 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v120 = (uint64_t)v96 - v10;
  uint64_t v11 = sub_1000059D8(&qword_1000892F8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v125 = (uint64_t)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v112 = (char *)v96 - v14;
  uint64_t v15 = sub_1000698A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v117 = v15;
  uint64_t v118 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v116 = (char *)v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v115 = (uint64_t)v96 - v19;
  uint64_t v20 = sub_100069910();
  uint64_t v113 = *(void *)(v20 - 8);
  uint64_t v114 = v20;
  __chkstk_darwin(v20);
  uint64_t v111 = (char *)v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100069DE0();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000059D8(&qword_100089300);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (void *)((char *)v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_1000059D8(&qword_100089308);
  __chkstk_darwin(v100);
  uint64_t v30 = (char *)v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000059D8(&qword_100089310);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v97 = (char *)v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000059D8(&qword_100089318) - 8;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1000059D8(&qword_100089320);
  __chkstk_darwin(v103);
  uint64_t v36 = (char *)v96 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000059D8(&qword_100089328);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v98 = (char *)v96 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000059D8(&qword_100089330) - 8;
  __chkstk_darwin(v102);
  uint64_t v99 = (char *)v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000059D8(&qword_100089338) - 8;
  uint64_t v39 = __chkstk_darwin(v109);
  uint64_t v119 = (uint64_t)v96 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v108 = (uint64_t)v96 - v42;
  __chkstk_darwin(v41);
  uint64_t v101 = (uint64_t)v96 - v43;
  *uint64_t v28 = sub_10006A0E0();
  v28[1] = v44;
  uint64_t v45 = sub_1000059D8(&qword_100089340);
  sub_10001605C(a1, v110, a3, (uint64_t)v28 + *(int *)(v45 + 44));
  sub_100069D70();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, enum case for Font.Leading.tight(_:), v22);
  uint64_t v46 = sub_100069DF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000185F8((uint64_t)v28, (uint64_t)v30, &qword_100089300);
  uint64_t v48 = (uint64_t *)&v30[*(int *)(v100 + 36)];
  uint64_t *v48 = KeyPath;
  v48[1] = v46;
  sub_100007D0C((uint64_t)v28, &qword_100089300);
  sub_100069DB0();
  sub_100018228();
  uint64_t v49 = v97;
  sub_100069ED0();
  sub_100007D0C((uint64_t)v30, &qword_100089308);
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = v104;
  uint64_t v52 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v34, v49, v105);
  uint64_t v53 = (uint64_t *)&v34[*(int *)(v32 + 44)];
  *uint64_t v53 = v50;
  v53[1] = 0x3FB999999999999ALL;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
  uint64_t v54 = swift_getKeyPath();
  sub_1000185F8((uint64_t)v34, (uint64_t)v36, &qword_100089318);
  uint64_t v55 = &v36[*(int *)(v103 + 36)];
  *(void *)uint64_t v55 = v54;
  v55[8] = 0;
  uint64_t v56 = (uint64_t)v34;
  uint64_t v57 = (uint64_t)v112;
  sub_100007D0C(v56, &qword_100089318);
  sub_1000182FC();
  uint64_t v58 = v98;
  sub_100069F70();
  sub_100007D0C((uint64_t)v36, &qword_100089320);
  uint64_t v59 = v111;
  sub_100069900();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v61 = (uint64_t)v99;
  uint64_t v62 = (uint64_t *)&v99[*(int *)(v102 + 44)];
  uint64_t v63 = sub_1000059D8(&qword_100089398);
  uint64_t v65 = v113;
  uint64_t v64 = v114;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))((char *)v62 + *(int *)(v63 + 28), v59, v114);
  *uint64_t v62 = v60;
  uint64_t v66 = v106;
  uint64_t v67 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v61, v58, v107);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v67);
  uint64_t v68 = v115;
  sub_100036104(v115);
  uint64_t v69 = v116;
  sub_100069880();
  sub_1000187B0((unint64_t *)&qword_1000892E8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v70 = v117;
  char v71 = sub_10006A400();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v118 + 8);
  v72(v69, v70);
  v72((char *)v68, v70);
  if (v71) {
    uint64_t v73 = 2;
  }
  else {
    uint64_t v73 = 0;
  }
  uint64_t v74 = swift_getKeyPath();
  uint64_t v75 = v108;
  sub_1000185F8(v61, v108, &qword_100089330);
  uint64_t v76 = v75 + *(int *)(v109 + 44);
  *(void *)uint64_t v76 = v74;
  *(void *)(v76 + 8) = v73;
  uint64_t v77 = 1;
  *(unsigned char *)(v76 + 16) = (v71 & 1) == 0;
  sub_100007D0C(v61, &qword_100089330);
  uint64_t v78 = v101;
  sub_100010A78(v75, v101, &qword_100089338);
  type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v79 = v120;
  sub_1000360CC(v120);
  uint64_t v81 = (uint64_t)v121;
  uint64_t v80 = v122;
  uint64_t v82 = v123;
  (*(void (**)(char *, void, uint64_t))(v122 + 104))(v121, enum case for ContentSizeCategory.accessibilityMedium(_:), v123);
  BOOL v83 = sub_100017E08(v79, v81);
  uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
  v84(v81, v82);
  v84(v79, v82);
  uint64_t v85 = (int *)v124;
  if (v83)
  {
    uint64_t v86 = swift_getKeyPath();
    uint64_t v87 = v96[0];
    *(void *)v96[0] = v86;
    sub_1000059D8(&qword_100088C28);
    swift_storeEnumTagMultiPayload();
    uint64_t v88 = (uint64_t *)(v87 + v85[5]);
    *uint64_t v88 = swift_getKeyPath();
    sub_1000059D8(&qword_100089118);
    swift_storeEnumTagMultiPayload();
    uint64_t v89 = (uint64_t *)(v87 + v85[6]);
    *uint64_t v89 = swift_getKeyPath();
    sub_1000059D8(&qword_100089110);
    swift_storeEnumTagMultiPayload();
    uint64_t v90 = (_OWORD *)(v87 + v85[7]);
    *uint64_t v90 = 0u;
    v90[1] = 0u;
    sub_100018494(v87, v57);
    uint64_t v77 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v126 + 56))(v57, v77, 1, v85);
  uint64_t v91 = v119;
  sub_1000185F8(v78, v119, &qword_100089338);
  uint64_t v92 = v125;
  sub_1000185F8(v57, v125, &qword_1000892F8);
  uint64_t v93 = v127;
  sub_1000185F8(v91, v127, &qword_100089338);
  uint64_t v94 = sub_1000059D8(&qword_1000893A0);
  sub_1000185F8(v92, v93 + *(int *)(v94 + 48), &qword_1000892F8);
  sub_100007D0C(v57, &qword_1000892F8);
  sub_100007D0C(v78, &qword_100089338);
  sub_100007D0C(v92, &qword_1000892F8);
  return sub_100007D0C(v91, &qword_100089338);
}

uint64_t sub_10001605C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v42 = a4;
  uint64_t v38 = sub_10006A1A0();
  uint64_t v5 = *(void *)(v38 - 8);
  uint64_t v6 = __chkstk_darwin(v38);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_1000059D8(&qword_1000893A8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v36 - v14;
  uint64_t v15 = sub_1000059D8(&qword_1000893B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000059D8(&qword_1000893B8);
  uint64_t v39 = *(void *)(v18 - 8);
  uint64_t v40 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = a1 + *(int *)(type metadata accessor for StartWritingWidgetSystemMediumView() + 28);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  sub_1000478D0(*(unsigned char *)(v24 + *(int *)(started + 20) + 11), (uint64_t)v17);
  uint64_t v26 = 1;
  sub_1000164E8(v43, v44, 1, (uint64_t)v21);
  sub_100007D0C((uint64_t)v17, &qword_1000893B0);
  sub_100010A78((uint64_t)v21, (uint64_t)v23, &qword_1000893B8);
  sub_1000363F4((uint64_t)v10);
  sub_10006A190();
  LOBYTE(v24) = sub_10006A170();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v28 = v38;
  v27(v8, v38);
  v27(v10, v28);
  uint64_t v29 = (uint64_t)v37;
  if (v24)
  {
    sub_1000059D8(&qword_1000893C8);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_10006BB40;
    *(void *)(v30 + 32) = sub_100069FF0();
    sub_100069FF0();
    uint64_t v31 = sub_10006A000();
    swift_release();
    *(void *)(v30 + 40) = v31;
    *(void *)&v45[0] = v30;
    sub_10006A350();
    sub_10006A130();
    sub_10006A140();
    sub_10006A0B0();
    sub_100069840();
    sub_100016864(v43, v44, v45, 0, v29);
    sub_1000184F8((uint64_t)v45);
    uint64_t v26 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v29, v26, 1, v40);
  sub_1000185F8((uint64_t)v23, (uint64_t)v21, &qword_1000893B8);
  uint64_t v32 = v41;
  sub_1000185F8(v29, v41, &qword_1000893A8);
  uint64_t v33 = v42;
  sub_1000185F8((uint64_t)v21, v42, &qword_1000893B8);
  uint64_t v34 = sub_1000059D8(&qword_1000893C0);
  sub_1000185F8(v32, v33 + *(int *)(v34 + 48), &qword_1000893A8);
  sub_100007D0C(v29, &qword_1000893A8);
  sub_100007D0C((uint64_t)v23, &qword_1000893B8);
  sub_100007D0C(v32, &qword_1000893A8);
  return sub_100007D0C((uint64_t)v21, &qword_1000893B8);
}

uint64_t sub_1000164E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v36 = a3;
  uint64_t v42 = a4;
  uint64_t v6 = sub_100069AB0();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v35 = (uint64_t)&v35 - v9;
  uint64_t v10 = sub_1000059D8(&qword_1000893D0);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  sub_100005A64();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100069E60();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_1000059D8(&qword_1000893B0);
  sub_10000CE3C(&qword_1000893D8, &qword_1000893B0);
  uint64_t v18 = sub_100069E20();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_100018524(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v43 = v18;
  uint64_t v44 = v20;
  char v45 = v24;
  uint64_t v46 = v22;
  sub_100069E70();
  sub_100018524(v18, v20, v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_100069AD0();
  type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v26 = v35;
  sub_1000360CC(v35);
  uint64_t v27 = (uint64_t)v37;
  uint64_t v28 = v38;
  uint64_t v29 = v39;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, enum case for ContentSizeCategory.accessibilityMedium(_:), v39);
  uint64_t v30 = v27;
  LOBYTE(v27) = sub_100017E08(v26, v27);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v31(v30, v29);
  v31(v26, v29);
  if (v27) {
    uint64_t v32 = sub_100069A70();
  }
  else {
    uint64_t v32 = sub_100069A60();
  }
  double v33 = sub_100055FE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v42, 0.0, 1, INFINITY, 0, v25, v32);
  return (*(uint64_t (**)(char *, uint64_t, double))(v40 + 8))(v12, v41, v33);
}

uint64_t sub_100016864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v39 = a4;
  uint64_t v44 = a5;
  uint64_t v41 = sub_100069AB0();
  uint64_t v8 = *(void *)(v41 - 8);
  uint64_t v9 = __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v38 = (uint64_t)&v37 - v11;
  uint64_t v12 = sub_1000059D8(&qword_1000893D0);
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a3[1];
  long long v49 = *a3;
  long long v50 = v15;
  uint64_t v51 = *((void *)a3 + 4);
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  sub_100005A64();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100069E60();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v21 = sub_100069E20();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_100018524(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v45 = v21;
  uint64_t v46 = v23;
  char v47 = v27;
  uint64_t v48 = v25;
  sub_100069E70();
  sub_100018524(v21, v23, v27);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_100069AD0();
  type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v29 = v38;
  sub_1000360CC(v38);
  uint64_t v30 = (uint64_t)v40;
  uint64_t v31 = v41;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v40, enum case for ContentSizeCategory.accessibilityMedium(_:), v41);
  uint64_t v32 = v30;
  LOBYTE(v30) = sub_100017E08(v29, v30);
  double v33 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v33(v32, v31);
  v33(v29, v31);
  if (v30) {
    uint64_t v34 = sub_100069A70();
  }
  else {
    uint64_t v34 = sub_100069A60();
  }
  double v35 = sub_100055FE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v44, 0.0, 1, INFINITY, 0, v28, v34);
  return (*(uint64_t (**)(char *, uint64_t, double))(v42 + 8))(v14, v43, v35);
}

uint64_t sub_100016BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_1000059D8(&qword_100089250);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v60 = sub_1000059D8(&qword_100089258);
  uint64_t v9 = __chkstk_darwin(v60);
  uint64_t v58 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v57 = (uint64_t)&v55 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  long long v15 = (char *)&v55 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v55 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v55 - v22;
  *(void *)uint64_t v8 = sub_100069A70();
  *((void *)v8 + 1) = 0x4020000000000000;
  v8[16] = 0;
  uint64_t v24 = sub_1000059D8(&qword_100089260);
  uint64_t v25 = &v8[*(int *)(v24 + 44)];
  uint64_t v56 = a1;
  sub_100017070(a1, 0, v25);
  unsigned __int8 v26 = sub_100069CE0();
  unsigned __int8 v27 = sub_100069D10();
  char v28 = sub_100069D30();
  sub_100069D30();
  if (sub_100069D30() != v26) {
    char v28 = sub_100069D30();
  }
  sub_100069D30();
  if (sub_100069D30() != v27) {
    char v28 = sub_100069D30();
  }
  sub_100069750();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1000185F8((uint64_t)v8, (uint64_t)v21, &qword_100089250);
  uint64_t v37 = &v21[*(int *)(v60 + 36)];
  *uint64_t v37 = v28;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100007D0C((uint64_t)v8, &qword_100089250);
  sub_100010A78((uint64_t)v21, (uint64_t)v23, &qword_100089258);
  *(void *)uint64_t v6 = sub_100069A70();
  *((void *)v6 + 1) = 0x4020000000000000;
  v6[16] = 0;
  sub_100017070(v56, 1, &v6[*(int *)(v24 + 44)]);
  unsigned __int8 v38 = sub_100069CE0();
  unsigned __int8 v39 = sub_100069D10();
  char v40 = sub_100069D30();
  sub_100069D30();
  if (sub_100069D30() != v38) {
    char v40 = sub_100069D30();
  }
  sub_100069D30();
  if (sub_100069D30() != v39) {
    char v40 = sub_100069D30();
  }
  sub_100069750();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_1000185F8((uint64_t)v6, (uint64_t)v15, &qword_100089250);
  long long v49 = &v15[*(int *)(v60 + 36)];
  *long long v49 = v40;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_100007D0C((uint64_t)v6, &qword_100089250);
  sub_100010A78((uint64_t)v15, (uint64_t)v18, &qword_100089258);
  uint64_t v50 = v57;
  sub_1000185F8((uint64_t)v23, v57, &qword_100089258);
  uint64_t v51 = v58;
  sub_1000185F8((uint64_t)v18, v58, &qword_100089258);
  uint64_t v52 = v59;
  sub_1000185F8(v50, v59, &qword_100089258);
  uint64_t v53 = sub_1000059D8(&qword_100089268);
  sub_1000185F8(v51, v52 + *(int *)(v53 + 48), &qword_100089258);
  sub_100007D0C((uint64_t)v18, &qword_100089258);
  sub_100007D0C((uint64_t)v23, &qword_100089258);
  sub_100007D0C(v51, &qword_100089258);
  return sub_100007D0C(v50, &qword_100089258);
}

unint64_t sub_100017014()
{
  unint64_t result = qword_100089210;
  if (!qword_100089210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089210);
  }
  return result;
}

uint64_t sub_100017070@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  LODWORD(v79) = a2;
  uint64_t v88 = a3;
  uint64_t v4 = sub_1000059D8(&qword_100089270);
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  __chkstk_darwin(v4);
  uint64_t v82 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000059D8(&qword_100089278);
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v87 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v90 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v70 - v9;
  uint64_t v81 = sub_1000059D8(&qword_100089280);
  __chkstk_darwin(v81);
  uint64_t v74 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000059D8(&qword_100088BE8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000059D8(&qword_100089288);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000059D8(&qword_100089290);
  uint64_t v92 = *(void *)(v89 - 8);
  uint64_t v19 = __chkstk_darwin(v89);
  uint64_t v80 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v75 = (char *)&v70 - v22;
  __chkstk_darwin(v21);
  uint64_t v91 = (char *)&v70 - v23;
  uint64_t v24 = enum case for WidgetFamily.systemMedium(_:);
  uint64_t v25 = sub_10006A1C0();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v16, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v16, 0, 1, v25);
  uint64_t started = type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v28 = *(int *)(started + 28);
  uint64_t v76 = a1;
  uint64_t v29 = a1 + v28 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20);
  uint64_t v31 = *(void *)(v29 + 16);
  uint64_t v30 = *(void *)(v29 + 24);
  uint64_t v32 = v29;
  uint64_t v33 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v34 = &v16[v33[6]];
  uint64_t v35 = sub_100069600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  uint64_t v36 = &v16[v33[5]];
  *(void *)uint64_t v36 = v31;
  *((void *)v36 + 1) = v30;
  v16[v33[7]] = 1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_10001BDB8((uint64_t)v13);
  sub_100018598((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  uint64_t v37 = sub_1000694C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v13, 1, v37);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v72 = sub_1000059D8(&qword_100089298);
    unint64_t v73 = sub_100017D14();
    sub_100069E10();
    uint64_t v71 = v32;
    sub_100047EE4(0, *(unsigned char *)(v32 + 11), (uint64_t)&v93);
    uint64_t v39 = v93;
    long long v70 = v94;
    uint64_t v40 = v95;
    uint64_t v41 = v96;
    v76 += *(int *)(started + 20);
    uint64_t v42 = v81;
    uint64_t v43 = v74;
    uint64_t v44 = &v74[*(int *)(v81 + 36)];
    uint64_t v45 = sub_1000059D8(&qword_1000892A8);
    sub_1000363F4((uint64_t)&v44[*(int *)(v45 + 40)]);
    sub_1000698E0();
    char v46 = v79 & 1;
    unsigned char *v43 = v79 & 1;
    uint64_t v47 = &v44[*(int *)(v45 + 36)];
    *(void *)uint64_t v47 = v39;
    *(_OWORD *)(v47 + 8) = v70;
    *((void *)v47 + 3) = v40;
    *((void *)v47 + 4) = v41;
    sub_10000CE3C(&qword_1000892B0, &qword_100089288);
    sub_10000CE3C(&qword_1000892B8, &qword_100089280);
    uint64_t v48 = v75;
    uint64_t v49 = v78;
    sub_100069F00();
    sub_100007D0C((uint64_t)v43, &qword_100089280);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v18, v49);
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v48, v89);
    sub_100017DB4();
    uint64_t v50 = v82;
    sub_10006A0A0();
    sub_100048444(0, *(unsigned char *)(v71 + 11), (uint64_t)&v93);
    uint64_t v51 = v93;
    long long v79 = v94;
    uint64_t v52 = v95;
    uint64_t v53 = v96;
    uint64_t v54 = &v43[*(int *)(v42 + 36)];
    sub_1000363F4((uint64_t)&v54[*(int *)(v45 + 40)]);
    sub_1000698E0();
    unsigned char *v43 = v46;
    uint64_t v55 = &v54[*(int *)(v45 + 36)];
    *(void *)uint64_t v55 = v51;
    *(_OWORD *)(v55 + 8) = v79;
    *((void *)v55 + 3) = v52;
    *((void *)v55 + 4) = v53;
    sub_10000CE3C(&qword_1000892C8, &qword_100089270);
    uint64_t v56 = v90;
    uint64_t v57 = v84;
    sub_100069F00();
    sub_100007D0C((uint64_t)v43, &qword_100089280);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v57);
    uint64_t v59 = v85;
    uint64_t v58 = v86;
    uint64_t v60 = v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v56, v87);
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    uint64_t v62 = v80;
    uint64_t v63 = v89;
    v61(v80, v91, v89);
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    v64(v56, v59, v60);
    uint64_t v65 = v88;
    v61(v88, v62, v63);
    uint64_t v66 = &v65[*(int *)(sub_1000059D8(&qword_1000892D0) + 48)];
    uint64_t v67 = v90;
    v64(v66, v90, v60);
    uint64_t v68 = *(void (**)(char *, uint64_t))(v58 + 8);
    v68(v59, v60);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v92 + 8);
    v69(v91, v63);
    v68(v67, v60);
    return ((uint64_t (*)(char *, uint64_t))v69)(v62, v63);
  }
  return result;
}

uint64_t sub_1000179DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088FB8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000884A0 != -1) {
    swift_once();
  }
  v10[0] = qword_1000921F8;
  v10[1] = unk_100092200;
  sub_100005A64();
  swift_bridgeObjectRetain();
  sub_10006A090();
  uint64_t v6 = sub_10006A0E0();
  double v8 = sub_100056040(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t, double))(v3 + 8))(v5, v2, v8);
}

uint64_t sub_100017B78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088FB8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000884A8 != -1) {
    swift_once();
  }
  v10[0] = qword_100092208;
  v10[1] = unk_100092210;
  sub_100005A64();
  swift_bridgeObjectRetain();
  sub_10006A090();
  uint64_t v6 = sub_10006A0E0();
  double v8 = sub_100056040(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t, double))(v3 + 8))(v5, v2, v8);
}

unint64_t sub_100017D14()
{
  unint64_t result = qword_1000892A0;
  if (!qword_1000892A0)
  {
    sub_100005A1C(&qword_100089298);
    sub_10000CE3C(&qword_100088FC8, &qword_100088FB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000892A0);
  }
  return result;
}

unint64_t sub_100017DB4()
{
  unint64_t result = qword_1000892C0;
  if (!qword_1000892C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000892C0);
  }
  return result;
}

BOOL sub_100017E08(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_100069AB0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 >= v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 >= v16;
}

unint64_t sub_100018228()
{
  unint64_t result = qword_100089348;
  if (!qword_100089348)
  {
    sub_100005A1C(&qword_100089308);
    sub_10000CE3C(&qword_100089350, &qword_100089300);
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089348);
  }
  return result;
}

unint64_t sub_1000182FC()
{
  unint64_t result = qword_100089368;
  if (!qword_100089368)
  {
    sub_100005A1C(&qword_100089320);
    sub_10001839C();
    sub_10000CE3C(&qword_100089388, &qword_100089390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089368);
  }
  return result;
}

unint64_t sub_10001839C()
{
  unint64_t result = qword_100089370;
  if (!qword_100089370)
  {
    sub_100005A1C(&qword_100089318);
    sub_100005A1C(&qword_100089308);
    sub_100018228();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_100089378, &qword_100089380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089370);
  }
  return result;
}

uint64_t sub_100018494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000184F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100018524(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100018534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018598(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000185F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000059D8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001865C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005A1C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000186DC()
{
  return sub_10001865C(&qword_100089430, &qword_100089400, (void (*)(void))sub_100018704);
}

unint64_t sub_100018704()
{
  unint64_t result = qword_100089438;
  if (!qword_100089438)
  {
    sub_100005A1C(&qword_1000893F8);
    sub_1000187B0((unint64_t *)&qword_100089440, (void (*)(uint64_t))type metadata accessor for WidgetHeaderView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089438);
  }
  return result;
}

uint64_t sub_1000187B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000187F8()
{
  unint64_t result = qword_100089448;
  if (!qword_100089448)
  {
    sub_100005A1C(&qword_100089420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089448);
  }
  return result;
}

unint64_t sub_100018870()
{
  unint64_t result = qword_100089450;
  if (!qword_100089450)
  {
    sub_100005A1C(&qword_100089218);
    sub_100005A1C(&qword_1000891F0);
    sub_10000CE3C(&qword_100089208, &qword_1000891F0);
    sub_100017014();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_100089458, &qword_100089220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089450);
  }
  return result;
}

uint64_t static Logger.appLoggerWith(category:)()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (v1)
  {
    sub_10006A2E0();
  }
  swift_bridgeObjectRetain();

  return sub_100069730();
}

uint64_t static Logger.byoLoggerWith(subsystem:category:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_100069730();
}

uint64_t sub_100018AC8(uint64_t a1)
{
  uint64_t v20 = a1;
  uint64_t v21 = sub_1000059D8(&qword_100089500);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000059D8(&qword_100089508);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  __chkstk_darwin(v6);
  sub_10001B664();
  sub_100069070();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  sub_100069060(v24);
  swift_getKeyPath();
  unint64_t v22 = sub_10001B830();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v25._countAndFlagsBits = 0xD000000000000029;
  v25._object = (void *)0x8000000100070890;
  sub_100069060(v25);
  sub_100069080();
  uint64_t v19 = sub_100068FC0();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  uint64_t v7 = v21;
  v16(v2, v21);
  sub_100069070();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  sub_100069060(v26);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v27._countAndFlagsBits = 0x756F4A20726F6620;
  v27._object = (void *)0xED00002E6C616E72;
  sub_100069060(v27);
  sub_100069080();
  uint64_t v17 = sub_100068FC0();
  uint64_t v8 = v7;
  uint64_t v9 = v16;
  v16(v2, v8);
  sub_100069070();
  v28._countAndFlagsBits = 0x656B696C20642749;
  v28._object = (void *)0xEC000000206F7420;
  sub_100069060(v28);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v29._object = (void *)0x80000001000708C0;
  v29._countAndFlagsBits = 0xD00000000000001DLL;
  sub_100069060(v29);
  sub_100069080();
  uint64_t v18 = (char *)sub_100068FC0();
  uint64_t v10 = v21;
  v9(v2, v21);
  sub_100069070();
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  sub_100069060(v30);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v31._countAndFlagsBits = 0xD000000000000027;
  v31._object = (void *)0x80000001000708E0;
  sub_100069060(v31);
  sub_100069080();
  uint64_t v11 = sub_100068FC0();
  v9(v2, v10);
  sub_1000059D8(&qword_100089510);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10006BD80;
  uint64_t v13 = v17;
  *(void *)(v12 + 32) = v19;
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = v18;
  *(void *)(v12 + 56) = v11;
  uint64_t v14 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100019028(uint64_t a1)
{
  return sub_10001A278(a1, (uint64_t)&unk_10006BEC8, (void (*)(uint64_t))sub_10001B664);
}

uint64_t sub_10001905C()
{
  uint64_t v0 = sub_100068FE0();
  uint64_t v1 = sub_100068FE0();
  uint64_t v2 = sub_100068FE0();
  uint64_t v3 = sub_100068FE0();
  uint64_t v4 = sub_100068FE0();
  uint64_t v5 = sub_100068FE0();
  uint64_t v6 = sub_100068FE0();
  uint64_t v7 = sub_100068FE0();
  sub_1000059D8(&qword_100089468);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10006BD90;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = sub_100068FD0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1000191C8(uint64_t a1)
{
  uint64_t v20 = a1;
  uint64_t v19 = sub_1000059D8(&qword_1000894E8);
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000059D8(&qword_1000894F0);
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  sub_100008010();
  sub_100069070();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  sub_100069060(v21);
  swift_getKeyPath();
  unint64_t v16 = sub_10001B830();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v22._object = (void *)0x8000000100070850;
  v22._countAndFlagsBits = 0xD000000000000018;
  sub_100069060(v22);
  sub_100069080();
  uint64_t v18 = sub_100068FC0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v15 = v1 + 8;
  uint64_t v6 = v19;
  v14(v3, v19);
  sub_100069070();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  sub_100069060(v23);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v24._countAndFlagsBits = 0x756F4A20726F6620;
  v24._object = (void *)0xED00002E6C616E72;
  sub_100069060(v24);
  sub_100069080();
  uint64_t v17 = sub_100068FC0();
  uint64_t v7 = v14;
  v14(v3, v6);
  sub_100069070();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_100069060(v25);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v26._countAndFlagsBits = 0xD00000000000001CLL;
  v26._object = (void *)0x8000000100070870;
  sub_100069060(v26);
  sub_100069080();
  uint64_t v8 = sub_100068FC0();
  v7(v3, v19);
  sub_1000059D8(&qword_1000894F8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10006BDA0;
  uint64_t v10 = v17;
  *(void *)(v9 + 32) = v18;
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v8;
  uint64_t v11 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1000195FC(uint64_t a1)
{
  return sub_10001A278(a1, (uint64_t)&unk_10006BEA0, (void (*)(uint64_t))sub_100008010);
}

uint64_t sub_100019630()
{
  uint64_t v0 = sub_100068FE0();
  uint64_t v1 = sub_100068FE0();
  uint64_t v2 = sub_100068FE0();
  uint64_t v3 = sub_100068FE0();
  uint64_t v4 = sub_100068FE0();
  uint64_t v5 = sub_100068FE0();
  uint64_t v6 = sub_100068FE0();
  sub_1000059D8(&qword_100089468);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10006BDB0;
  *(void *)(v7 + 32) = v0;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v2;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v5;
  *(void *)(v7 + 80) = v6;
  uint64_t v8 = sub_100068FD0();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100019788(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_1000894D0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  uint64_t v24 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000059D8(&qword_1000894D8);
  __chkstk_darwin(v6);
  sub_10001B6B8();
  sub_100069070();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_100069060(v25);
  swift_getKeyPath();
  unint64_t v22 = sub_10001B830();
  uint64_t v17 = a1;
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v26._countAndFlagsBits = 0xD000000000000012;
  v26._object = (void *)0x80000001000707B0;
  sub_100069060(v26);
  sub_100069080();
  uint64_t v7 = sub_100068FC0();
  uint64_t v8 = v23;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v20 = v7;
  Swift::String v21 = v9;
  v24 += 8;
  v9(v5, v23);
  sub_100069070();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  sub_100069060(v27);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v28._object = (void *)0x80000001000707D0;
  v28._countAndFlagsBits = 0xD000000000000028;
  sub_100069060(v28);
  sub_100069080();
  uint64_t v19 = sub_100068FC0();
  uint64_t v10 = v21;
  v21(v5, v8);
  sub_100069070();
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  sub_100069060(v29);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v30._object = (void *)0x8000000100070800;
  v30._countAndFlagsBits = 0xD000000000000028;
  sub_100069060(v30);
  sub_100069080();
  uint64_t v18 = sub_100068FC0();
  uint64_t v11 = v23;
  v10(v5, v23);
  sub_100069070();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  sub_100069060(v31);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v32._countAndFlagsBits = 0xD000000000000017;
  v32._object = (void *)0x8000000100070830;
  sub_100069060(v32);
  sub_100069080();
  uint64_t v12 = sub_100068FC0();
  v21(v5, v11);
  sub_1000059D8(&qword_1000894E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10006BD80;
  uint64_t v14 = v19;
  *(void *)(v13 + 32) = v20;
  *(void *)(v13 + 40) = v14;
  *(void *)(v13 + 48) = v18;
  *(void *)(v13 + 56) = v12;
  uint64_t v15 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100019C70(uint64_t a1)
{
  return sub_10001A278(a1, (uint64_t)&unk_10006BE78, (void (*)(uint64_t))sub_10001B6B8);
}

uint64_t sub_100019CA4()
{
  uint64_t v0 = sub_100068FE0();
  uint64_t v1 = sub_100068FE0();
  uint64_t v2 = sub_100068FE0();
  uint64_t v3 = sub_100068FE0();
  uint64_t v4 = sub_100068FE0();
  uint64_t v5 = sub_100068FE0();
  uint64_t v6 = sub_100068FE0();
  uint64_t v7 = sub_100068FE0();
  sub_1000059D8(&qword_100089468);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10006BD90;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = sub_100068FD0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100019E0C(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_1000894B8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000059D8(&qword_1000894C0);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  sub_10001B70C();
  sub_100069070();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  sub_100069060(v22);
  swift_getKeyPath();
  v15[1] = sub_10001B830();
  uint64_t v17 = a1;
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v23._countAndFlagsBits = 0x6F74206576615320;
  v23._object = (void *)0xEF736F746F685020;
  sub_100069060(v23);
  sub_100069080();
  uint64_t v19 = sub_100068FC0();
  uint64_t v8 = v20;
  unint64_t v16 = *(void (**)(char *, uint64_t))(v21 + 8);
  v21 += 8;
  v16(v5, v20);
  sub_100069070();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  sub_100069060(v24);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v25._countAndFlagsBits = 0xD000000000000023;
  v25._object = (void *)0x8000000100070760;
  sub_100069060(v25);
  sub_100069080();
  uint64_t v18 = sub_100068FC0();
  uint64_t v9 = v16;
  v16(v5, v8);
  sub_100069070();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  sub_100069060(v26);
  swift_getKeyPath();
  sub_100068F90();
  swift_release();
  sub_100069050();
  swift_release();
  v27._object = (void *)0x8000000100070790;
  v27._countAndFlagsBits = 0xD000000000000019;
  sub_100069060(v27);
  sub_100069080();
  uint64_t v10 = sub_100068FC0();
  v9(v5, v20);
  sub_1000059D8(&qword_1000894C8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10006BDA0;
  uint64_t v12 = v18;
  *(void *)(v11 + 32) = v19;
  *(void *)(v11 + 40) = v12;
  *(void *)(v11 + 48) = v10;
  uint64_t v13 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10001A244(uint64_t a1)
{
  return sub_10001A278(a1, (uint64_t)&unk_10006BE50, (void (*)(uint64_t))sub_10001B70C);
}

uint64_t sub_10001A278(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_100069020();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10001B830();
  sub_100068F90();
  uint64_t v8 = swift_release();
  a3(v8);
  sub_100069010();
  uint64_t v9 = sub_100069000();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000059D8(&qword_100089498);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10006AB80;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = sub_100068FF0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10001A3E8()
{
  uint64_t v0 = sub_100068FE0();
  uint64_t v1 = sub_100068FE0();
  uint64_t v2 = sub_100068FE0();
  uint64_t v3 = sub_100068FE0();
  uint64_t v4 = sub_100068FE0();
  uint64_t v5 = sub_100068FE0();
  sub_1000059D8(&qword_100089468);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10006B7C0;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = sub_100068FD0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10001A508()
{
  uint64_t v0 = sub_1000059D8(&qword_1000894A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011190();
  sub_100069040();
  uint64_t v14 = sub_100068FC0();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_100069040();
  uint64_t v13 = sub_100068FC0();
  v4(v3, v0);
  sub_100069040();
  uint64_t v5 = sub_100068FC0();
  v4(v3, v0);
  sub_100069040();
  uint64_t v6 = sub_100068FC0();
  v4(v3, v0);
  sub_100069040();
  uint64_t v7 = sub_100068FC0();
  v4(v3, v0);
  sub_100069040();
  uint64_t v8 = sub_100068FC0();
  v4(v3, v0);
  sub_1000059D8(&qword_1000894A8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10006B7C0;
  uint64_t v10 = v13;
  *(void *)(v9 + 32) = v14;
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v5;
  *(void *)(v9 + 56) = v6;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 72) = v8;
  uint64_t v11 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10001A80C(uint64_t a1)
{
  return sub_10001AE54(a1, 4);
}

uint64_t sub_10001A814()
{
  uint64_t v0 = sub_1000059D8(&qword_1000894A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011190();
  sub_100069040();
  uint64_t v4 = sub_100068FC0();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_100069040();
  uint64_t v6 = sub_100068FC0();
  v5(v3, v0);
  sub_100069040();
  uint64_t v7 = sub_100068FC0();
  v5(v3, v0);
  sub_1000059D8(&qword_1000894A8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10006BDA0;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10001AA20(uint64_t a1)
{
  return sub_10001AE54(a1, 5);
}

uint64_t sub_10001AA28()
{
  uint64_t v0 = sub_1000059D8(&qword_1000894A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011190();
  sub_100069040();
  uint64_t v4 = sub_100068FC0();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_100069040();
  uint64_t v6 = sub_100068FC0();
  v5(v3, v0);
  sub_100069040();
  uint64_t v7 = sub_100068FC0();
  v5(v3, v0);
  sub_1000059D8(&qword_1000894A8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10006BDA0;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10001AC34(uint64_t a1)
{
  return sub_10001AE54(a1, 8);
}

uint64_t sub_10001AC3C()
{
  uint64_t v0 = sub_1000059D8(&qword_1000894A0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011190();
  sub_100069040();
  uint64_t v4 = sub_100068FC0();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_100069040();
  uint64_t v6 = sub_100068FC0();
  v5(v3, v0);
  sub_100069040();
  uint64_t v7 = sub_100068FC0();
  v5(v3, v0);
  sub_1000059D8(&qword_1000894A8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10006BDA0;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = sub_100068FB0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10001AE4C(uint64_t a1)
{
  return sub_10001AE54(a1, 9);
}

uint64_t sub_10001AE54(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100069020();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11[15] = a2;
  swift_getKeyPath();
  sub_10001B7D4();
  sub_100068FA0();
  swift_release();
  sub_100011190();
  sub_100011868();
  sub_100069030();
  uint64_t v7 = sub_100069000();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000059D8(&qword_100089498);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10006AB80;
  *(void *)(v8 + 32) = v7;
  uint64_t v9 = sub_100068FF0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10001AFC4()
{
  uint64_t v0 = sub_100068FE0();
  uint64_t v1 = sub_100068FE0();
  sub_1000059D8(&qword_100089468);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10006BB40;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = sub_100068FD0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10001B074()
{
  uint64_t v0 = sub_100068F80();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100011190();
  sub_100068F70();
  uint64_t v4 = sub_100068F60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000059D8(&qword_100089460);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10006AB80;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_100068F50();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for JournalSettingsAssistantIntentProvider()
{
  return &type metadata for JournalSettingsAssistantIntentProvider;
}

uint64_t sub_10001B1BC()
{
  uint64_t v0 = sub_1000690B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10003C104();
  uint64_t v23 = v4;
  sub_10001B664();
  sub_1000690C0();
  uint64_t v21 = sub_1000690A0();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  uint64_t v22 = sub_10000C078();
  uint64_t v23 = v6;
  sub_100008010();
  sub_1000690C0();
  uint64_t v20 = sub_1000690A0();
  v5(v3, v0);
  uint64_t v22 = sub_100062128();
  uint64_t v23 = v7;
  sub_10001B6B8();
  sub_1000690C0();
  uint64_t v19 = sub_1000690A0();
  v5(v3, v0);
  uint64_t v22 = sub_100032910();
  uint64_t v23 = v8;
  sub_10001B70C();
  sub_1000690C0();
  uint64_t v9 = sub_1000690A0();
  v5(v3, v0);
  uint64_t v22 = sub_100011578();
  sub_100011190();
  sub_1000690D0();
  uint64_t v10 = sub_1000690A0();
  v5(v3, v0);
  uint64_t v22 = sub_100011578();
  sub_1000690D0();
  uint64_t v11 = sub_1000690A0();
  v5(v3, v0);
  uint64_t v22 = sub_100011578();
  sub_1000690D0();
  uint64_t v12 = sub_1000690A0();
  v5(v3, v0);
  uint64_t v22 = sub_100011578();
  sub_1000690D0();
  uint64_t v13 = sub_1000690A0();
  v5(v3, v0);
  sub_1000059D8(&qword_100089488);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10006BD90;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v19;
  *(void *)(v14 + 56) = v9;
  *(void *)(v14 + 64) = v10;
  *(void *)(v14 + 72) = v11;
  *(void *)(v14 + 80) = v12;
  *(void *)(v14 + 88) = v13;
  uint64_t v16 = sub_100069090();
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_10001B664()
{
  unint64_t result = qword_100089470;
  if (!qword_100089470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089470);
  }
  return result;
}

unint64_t sub_10001B6B8()
{
  unint64_t result = qword_100089478;
  if (!qword_100089478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089478);
  }
  return result;
}

unint64_t sub_10001B70C()
{
  unint64_t result = qword_100089480;
  if (!qword_100089480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089480);
  }
  return result;
}

uint64_t sub_10001B760@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100068F00();
  *a1 = v3;
  return result;
}

uint64_t sub_10001B79C()
{
  return sub_100068F10();
}

unint64_t sub_10001B7D4()
{
  unint64_t result = qword_100089490;
  if (!qword_100089490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089490);
  }
  return result;
}

unint64_t sub_10001B830()
{
  unint64_t result = qword_1000894B0;
  if (!qword_1000894B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000894B0);
  }
  return result;
}

uint64_t sub_10001B898@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100068F00();
  *a1 = v3;
  return result;
}

uint64_t sub_10001B8D8()
{
  return sub_100068F10();
}

uint64_t sub_10001B910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100069600();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10001B97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10001B9E8(uint64_t a1)
{
  uint64_t v2 = sub_100069600();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10001BA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001BBF0);
}

uint64_t sub_10001BBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10001BC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001BC70);
}

uint64_t sub_10001BC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PickerWidgetTimelineEntry()
{
  uint64_t result = qword_100089570;
  if (!qword_100089570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001BD2C()
{
  uint64_t result = sub_100069600();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001BDB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v171 = a1;
  uint64_t v146 = sub_1000695B0();
  uint64_t v145 = *(void *)(v146 - 8);
  ((void (*)(void))__chkstk_darwin)();
  char v144 = (char *)&v142 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000059D8(&qword_100088EE8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v157 = (uint64_t)&v142 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100069600();
  uint64_t v163 = *(void *)(v3 - 8);
  uint64_t v164 = v3;
  ((void (*)(void))__chkstk_darwin)();
  v155 = (char *)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000059D8(&qword_1000895B8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10006A1C0();
  uint64_t v161 = *(void *)(v7 - 8);
  uint64_t v162 = v7;
  ((void (*)(void))__chkstk_darwin)();
  v154 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = (int *)type metadata accessor for CanvasStartingState();
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v169 = (uint64_t)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100069620();
  uint64_t v160 = *(void *)(v156 - 8);
  ((void (*)(void))__chkstk_darwin)();
  v153 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000059D8(&qword_1000895C0);
  uint64_t v11 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v13 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v165 = (uint64_t)&v142 - v14;
  uint64_t v15 = sub_100069340();
  uint64_t v166 = *(void *)(v15 - 8);
  uint64_t v167 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  v149 = (char *)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v152 = (char *)&v142 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v143 = (char *)&v142 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  long long v147 = (char *)&v142 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v142 = (char *)&v142 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v151 = (char *)&v142 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  Swift::String v30 = (char *)&v142 - v29;
  __chkstk_darwin(v28);
  v150 = (char *)&v142 - v31;
  uint64_t v159 = sub_1000694C0();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  char v148 = (char *)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000059D8(&qword_100088BE8);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v36 = (char *)&v142 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  unsigned __int8 v38 = (char *)&v142 - v37;
  uint64_t v39 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v142 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1000693B0();
  uint64_t v174 = *(void *)(v170 - 8);
  uint64_t v42 = __chkstk_darwin(v170);
  v173 = (char *)&v142 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v142 - v44;
  sub_1000693A0();
  if (qword_100088478 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100069390();
  char v46 = v45;
  sub_100069360();
  sub_10001DD2C((uint64_t)v172, (uint64_t)v41);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v52 = *((void *)v41 + 1);
      uint64_t v47 = v45;
      sub_100069380();
      uint64_t v53 = v170;
      if (v52)
      {
        uint64_t v55 = (void (*)(char *, void))sub_100069350();
        if (*v54)
        {
          uint64_t v56 = v54;
          sub_100069330();
          swift_bridgeObjectRelease();
          unint64_t v57 = *v56;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v56 = v57;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v57 = sub_10001DF60(0, *(void *)(v57 + 16) + 1, 1, v57, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v56 = v57;
          }
          unint64_t v60 = *(void *)(v57 + 16);
          unint64_t v59 = *(void *)(v57 + 24);
          if (v60 >= v59 >> 1)
          {
            unint64_t v57 = sub_10001DF60(v59 > 1, v60 + 1, 1, v57, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v56 = v57;
          }
          *(void *)(v57 + 16) = v60 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v166 + 32))(v57+ ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80))+ *(void *)(v166 + 72) * v60, v30, v167);
          goto LABEL_24;
        }
        swift_bridgeObjectRelease();
        v55(v176, 0);
      }
      break;
    case 2u:
      uint64_t v61 = (uint64_t)v41;
      uint64_t v62 = v165;
      sub_100010A78(v61, v165, &qword_1000895C0);
      uint64_t v47 = v45;
      sub_100069380();
      sub_1000185F8(v62, (uint64_t)v13, &qword_1000895C0);
      uint64_t v63 = v160;
      uint64_t v64 = v156;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v13, 1, v156) == 1)
      {
        uint64_t v50 = &qword_1000895C0;
        sub_100007D0C(v62, &qword_1000895C0);
        uint64_t v51 = (uint64_t)v13;
        goto LABEL_15;
      }
      uint64_t v88 = v153;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v153, v13, v64);
      uint64_t v90 = (void (*)(char *, void))sub_100069350();
      uint64_t v53 = v170;
      if (*v89)
      {
        uint64_t v91 = v89;
        sub_100069610();
        sub_100069330();
        swift_bridgeObjectRelease();
        unint64_t v92 = *v91;
        char v93 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v91 = v92;
        uint64_t v94 = v166;
        if ((v93 & 1) == 0)
        {
          unint64_t v92 = sub_10001DF60(0, *(void *)(v92 + 16) + 1, 1, v92, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
          *uint64_t v91 = v92;
        }
        unint64_t v96 = *(void *)(v92 + 16);
        unint64_t v95 = *(void *)(v92 + 24);
        if (v96 >= v95 >> 1)
        {
          unint64_t v92 = sub_10001DF60(v95 > 1, v96 + 1, 1, v92, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
          *uint64_t v91 = v92;
        }
        *(void *)(v92 + 16) = v96 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v94 + 32))(v92+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * v96, v151, v167);
        v90(v176, 0);
        (*(void (**)(char *, uint64_t))(v160 + 8))(v153, v64);
        sub_100007D0C(v165, &qword_1000895C0);
      }
      else
      {
        v90(v176, 0);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v88, v64);
        sub_100007D0C(v165, &qword_1000895C0);
      }
      break;
    case 3u:
      uint64_t v65 = (uint64_t)v41;
      uint64_t v66 = v169;
      sub_10001DDB0(v65, v169);
      uint64_t v47 = v45;
      sub_100069380();
      sub_1000185F8(v66, (uint64_t)v6, &qword_1000895B8);
      uint64_t v68 = v161;
      uint64_t v67 = v162;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v6, 1, v162) == 1)
      {
        sub_100007D0C((uint64_t)v6, &qword_1000895B8);
        uint64_t v53 = v170;
        uint64_t v69 = v166;
      }
      else
      {
        uint64_t v97 = v154;
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v154, v6, v67);
        uint64_t v99 = (void (*)(char *, void))sub_100069350();
        uint64_t v69 = v166;
        if (*v98)
        {
          uint64_t v100 = v98;
          uint64_t v175 = sub_10006A1B0();
          sub_10006A560();
          uint64_t v101 = v142;
          sub_100069330();
          swift_bridgeObjectRelease();
          unint64_t v102 = *v100;
          char v103 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v100 = v102;
          uint64_t v53 = v170;
          if ((v103 & 1) == 0)
          {
            unint64_t v102 = sub_10001DF60(0, *(void *)(v102 + 16) + 1, 1, v102, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v100 = v102;
          }
          unint64_t v105 = *(void *)(v102 + 16);
          unint64_t v104 = *(void *)(v102 + 24);
          if (v105 >= v104 >> 1)
          {
            unint64_t v102 = sub_10001DF60(v104 > 1, v105 + 1, 1, v102, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v100 = v102;
          }
          *(void *)(v102 + 16) = v105 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v102+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v105, v101, v167);
          v99(v176, 0);
          (*(void (**)(char *, uint64_t))(v161 + 8))(v154, v162);
        }
        else
        {
          v99(v176, 0);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v97, v67);
          uint64_t v53 = v170;
        }
        uint64_t v66 = v169;
      }
      if (*(void *)(v66 + v168[5] + 8))
      {
        swift_bridgeObjectRetain();
        uint64_t v111 = (void (*)(char *, void))sub_100069350();
        if (*v110)
        {
          char v112 = v110;
          uint64_t v113 = v147;
          sub_100069330();
          swift_bridgeObjectRelease();
          unint64_t v114 = *v112;
          char v115 = swift_isUniquelyReferenced_nonNull_native();
          *char v112 = v114;
          if ((v115 & 1) == 0)
          {
            unint64_t v114 = sub_10001DF60(0, *(void *)(v114 + 16) + 1, 1, v114, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *char v112 = v114;
          }
          unint64_t v117 = *(void *)(v114 + 16);
          unint64_t v116 = *(void *)(v114 + 24);
          if (v117 >= v116 >> 1)
          {
            unint64_t v114 = sub_10001DF60(v116 > 1, v117 + 1, 1, v114, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *char v112 = v114;
          }
          *(void *)(v114 + 16) = v117 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v114+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v117, v113, v167);
          v111(v176, 0);
        }
        else
        {
          swift_bridgeObjectRelease();
          v111(v176, 0);
        }
        uint64_t v66 = v169;
      }
      uint64_t v118 = v157;
      sub_1000185F8(v66 + v168[6], v157, &qword_100088EE8);
      uint64_t v119 = v163;
      uint64_t v120 = v164;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v118, 1, v164) == 1)
      {
        sub_100007D0C(v118, &qword_100088EE8);
      }
      else
      {
        uint64_t v121 = v155;
        (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v155, v118, v120);
        uint64_t v122 = v119;
        uint64_t v124 = (void (*)(char *, void))sub_100069350();
        if (*v123)
        {
          uint64_t v125 = v123;
          uint64_t v126 = v144;
          sub_1000692F0();
          sub_10001E274();
          uint64_t v127 = v146;
          sub_1000695F0();
          (*(void (**)(char *, uint64_t))(v145 + 8))(v126, v127);
          uint64_t v128 = v143;
          sub_100069330();
          swift_bridgeObjectRelease();
          unint64_t v129 = *v125;
          char v130 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v125 = v129;
          if ((v130 & 1) == 0)
          {
            unint64_t v129 = sub_10001DF60(0, *(void *)(v129 + 16) + 1, 1, v129, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v125 = v129;
          }
          unint64_t v132 = *(void *)(v129 + 16);
          unint64_t v131 = *(void *)(v129 + 24);
          if (v132 >= v131 >> 1)
          {
            unint64_t v129 = sub_10001DF60(v131 > 1, v132 + 1, 1, v129, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v125 = v129;
          }
          *(void *)(v129 + 16) = v132 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v129+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v132, v128, v167);
          v124(v176, 0);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v155, v164);
        }
        else
        {
          v124(v176, 0);
          (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v120);
        }
        uint64_t v66 = v169;
      }
      unsigned int v133 = *(unsigned __int8 *)(v66 + v168[7]);
      if (v133 < 0xFE)
      {
        char v134 = sub_10001E1E0(v133);
        uint64_t v136 = (void (*)(char *, void))sub_100069350();
        if (*v135)
        {
          uint64_t v137 = v135;
          sub_10001DD90(v134);
          sub_100069330();
          swift_bridgeObjectRelease();
          unint64_t v138 = *v137;
          char v139 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v137 = v138;
          if ((v139 & 1) == 0)
          {
            unint64_t v138 = sub_10001DF60(0, *(void *)(v138 + 16) + 1, 1, v138, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v137 = v138;
          }
          unint64_t v141 = *(void *)(v138 + 16);
          unint64_t v140 = *(void *)(v138 + 24);
          if (v141 >= v140 >> 1)
          {
            unint64_t v138 = sub_10001DF60(v140 > 1, v141 + 1, 1, v138, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v137 = v138;
          }
          *(void *)(v138 + 16) = v141 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v138+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v141, v152, v167);
          v136(v176, 0);
        }
        else
        {
          v136(v176, 0);
        }
        sub_10001F3EC(v169, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      }
      else
      {
        sub_10001F3EC(v66, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
      }
      break;
    case 4u:
      uint64_t v47 = v45;
      sub_100069380();
      uint64_t v55 = (void (*)(char *, void))sub_100069350();
      if (!*v70)
      {
        v55(v176, 0);
        goto LABEL_45;
      }
      uint64_t v71 = v70;
      uint64_t v72 = v149;
      sub_100069330();
      swift_bridgeObjectRelease();
      unint64_t v73 = *v71;
      char v74 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v71 = v73;
      uint64_t v53 = v170;
      if ((v74 & 1) == 0)
      {
        unint64_t v73 = sub_10001DF60(0, *(void *)(v73 + 16) + 1, 1, v73, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
        unint64_t *v71 = v73;
      }
      uint64_t v75 = v166;
      unint64_t v77 = *(void *)(v73 + 16);
      unint64_t v76 = *(void *)(v73 + 24);
      if (v77 >= v76 >> 1)
      {
        unint64_t v73 = sub_10001DF60(v76 > 1, v77 + 1, 1, v73, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
        unint64_t *v71 = v73;
      }
      *(void *)(v73 + 16) = v77 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v73+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v77, v72, v167);
LABEL_24:
      v55(v176, 0);
      break;
    case 5u:
      uint64_t v47 = v45;
      sub_100069380();
      goto LABEL_45;
    default:
      sub_100010A78((uint64_t)v41, (uint64_t)v38, &qword_100088BE8);
      uint64_t v47 = v45;
      sub_100069380();
      sub_1000185F8((uint64_t)v38, (uint64_t)v36, &qword_100088BE8);
      uint64_t v48 = v158;
      uint64_t v49 = v159;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v36, 1, v159) == 1)
      {
        uint64_t v50 = &qword_100088BE8;
        sub_100007D0C((uint64_t)v38, &qword_100088BE8);
        uint64_t v51 = (uint64_t)v36;
LABEL_15:
        sub_100007D0C(v51, v50);
LABEL_45:
        uint64_t v53 = v170;
      }
      else
      {
        uint64_t v78 = v148;
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v148, v36, v49);
        long long v79 = (void (*)(char *, void))sub_100069350();
        uint64_t v53 = v170;
        if (*v80)
        {
          uint64_t v81 = v80;
          v172 = v79;
          sub_1000694B0();
          sub_100069330();
          swift_bridgeObjectRelease();
          unint64_t v82 = *v81;
          char v83 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v81 = v82;
          uint64_t v84 = v166;
          uint64_t v85 = v78;
          if ((v83 & 1) == 0)
          {
            unint64_t v82 = sub_10001DF60(0, *(void *)(v82 + 16) + 1, 1, v82, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v81 = v82;
          }
          unint64_t v87 = *(void *)(v82 + 16);
          unint64_t v86 = *(void *)(v82 + 24);
          if (v87 >= v86 >> 1)
          {
            unint64_t v82 = sub_10001DF60(v86 > 1, v87 + 1, 1, v82, &qword_1000895D0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
            *uint64_t v81 = v82;
          }
          *(void *)(v82 + 16) = v87 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v82+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v87, v150, v167);
          v172(v176, 0);
          (*(void (**)(char *, uint64_t))(v158 + 8))(v85, v159);
          sub_100007D0C((uint64_t)v38, &qword_100088BE8);
          uint64_t v47 = v46;
        }
        else
        {
          v79(v176, 0);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v78, v49);
          sub_100007D0C((uint64_t)v38, &qword_100088BE8);
        }
      }
      break;
  }
  uint64_t v106 = v173;
  uint64_t v107 = v174;
  (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v173, v47, v53);
  sub_100069370();
  uint64_t v108 = *(void (**)(char *, uint64_t))(v107 + 8);
  v108(v106, v53);
  return ((uint64_t (*)(char *, uint64_t))v108)(v47, v53);
}

uint64_t sub_10001D72C(char a1)
{
  if (a1) {
    return 0x68746C616568;
  }
  else {
    return 0x6163696669746F6ELL;
  }
}

uint64_t sub_10001D76C(char *a1, char *a2)
{
  return sub_100063080(*a1, *a2);
}

Swift::Int sub_10001D778()
{
  return sub_10001D780();
}

Swift::Int sub_10001D780()
{
  return sub_10006A5C0();
}

Swift::Int sub_10001D80C()
{
  return sub_10006A5C0();
}

Swift::Int sub_10001D900()
{
  return sub_10006A5C0();
}

Swift::Int sub_10001D96C()
{
  return sub_10006A5C0();
}

uint64_t sub_10001D9D8()
{
  return sub_1000632B4();
}

Swift::Int sub_10001D9E0()
{
  return sub_10001D9E8();
}

Swift::Int sub_10001D9E8()
{
  return sub_10006A5C0();
}

Swift::Int sub_10001DA70()
{
  return sub_10006A5C0();
}

Swift::Int sub_10001DB60()
{
  return sub_10006A5C0();
}

Swift::Int sub_10001DBC8()
{
  return sub_10006A5C0();
}

uint64_t sub_10001DC30@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000864D8;
  v8._object = v3;
  Swift::Int v5 = sub_10006A4D0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_10001DC90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001D72C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10001DCBC()
{
  qword_1000895A8 = 0x73746E656D6F6DLL;
  unk_1000895B0 = 0xE700000000000000;
}

uint64_t type metadata accessor for AppLaunchAction()
{
  uint64_t result = qword_100089648;
  if (!qword_100089648) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001DD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001DD90(char a1)
{
  return *(void *)&aKeyboardkeyboa[8 * a1];
}

uint64_t sub_10001DDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CanvasStartingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_10001DE14(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000059D8(&qword_100088F00);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[48 * v8 + 32]) {
          memmove(v12, a4 + 32, 48 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100020118(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001DF3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001DF60(a1, a2, a3, a4, &qword_100088EF0, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
}

uint64_t sub_10001DF60(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000059D8(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_10006A490();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100020210(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10001E1E0(unsigned __int8 a1)
{
  uint64_t v2 = a1 >> 5;
  uint64_t result = 10;
  switch(v2)
  {
    case 1:
      uint64_t result = a1 & 1 | 6u;
      break;
    case 2:
      if (a1 == 64) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = 3;
      }
      break;
    case 3:
      if (a1 == 96) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 5;
      }
      break;
    case 4:
      if (a1 == 128) {
        uint64_t result = 8;
      }
      else {
        uint64_t result = 9;
      }
      break;
    case 5:
      return result;
    default:
      uint64_t result = a1 & 1;
      break;
  }
  return result;
}

unint64_t sub_10001E274()
{
  unint64_t result = qword_1000895C8;
  if (!qword_1000895C8)
  {
    sub_1000695B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000895C8);
  }
  return result;
}

uint64_t *sub_10001E2D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_1000694C0();
        uint64_t v8 = *(void *)(v7 - 8);
        if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
          goto LABEL_13;
        }
        uint64_t v9 = sub_1000059D8(&qword_100088BE8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_14;
      case 1u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v7 = sub_100069620();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v13 = sub_1000059D8(&qword_1000895C0);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
LABEL_13:
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v14 = sub_10006A1C0();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          uint64_t v16 = sub_1000059D8(&qword_1000895B8);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        unint64_t v17 = (int *)type metadata accessor for CanvasStartingState();
        uint64_t v18 = v17[5];
        size_t v19 = (uint64_t *)((char *)a1 + v18);
        BOOL v20 = (uint64_t *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        void *v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v17[6];
        __dst = (char *)a1 + v22;
        unint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = sub_100069600();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        if (v26(v23, 1, v24))
        {
          uint64_t v27 = sub_1000059D8(&qword_100088EE8);
          memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10001E7E0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_1000694C0();
      goto LABEL_7;
    case 1:
      return swift_bridgeObjectRelease();
    case 2:
      uint64_t v3 = sub_100069620();
LABEL_7:
      uint64_t v4 = v3;
      uint64_t v9 = *(void *)(v3 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v3);
      if (result) {
        return result;
      }
      goto LABEL_12;
    case 3:
      uint64_t v5 = sub_10006A1C0();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      }
      uint64_t v7 = type metadata accessor for CanvasStartingState();
      swift_bridgeObjectRelease();
      a1 += *(int *)(v7 + 24);
      uint64_t v4 = sub_100069600();
      uint64_t v9 = *(void *)(v4 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v4);
      if (!result)
      {
LABEL_12:
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
        uint64_t result = v8(a1, v4);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *sub_10001EA38(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1000694C0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_1000059D8(&qword_100088BE8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      goto LABEL_19;
    case 1u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 2u:
      uint64_t v10 = sub_100069620();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_1000059D8(&qword_1000895C0);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      goto LABEL_19;
    case 3u:
      uint64_t v13 = sub_10006A1C0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_1000059D8(&qword_1000895B8);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
      uint64_t v17 = v16[5];
      uint64_t v18 = (void *)((char *)a1 + v17);
      size_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v16[6];
      __dst = (char *)a1 + v21;
      uint64_t v22 = (char *)a2 + v21;
      uint64_t v23 = sub_100069600();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        uint64_t v26 = sub_1000059D8(&qword_100088EE8);
        memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      *((unsigned char *)a1 + v16[7]) = *((unsigned char *)a2 + v16[7]);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10001EEF8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10001F3EC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1000694C0();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_1000059D8(&qword_100088BE8);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        goto LABEL_19;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 2u:
        uint64_t v9 = sub_100069620();
        uint64_t v10 = *(void *)(v9 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          uint64_t v11 = sub_1000059D8(&qword_1000895C0);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v10 + 16))(a1, a2, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        goto LABEL_19;
      case 3u:
        uint64_t v12 = sub_10006A1C0();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = sub_1000059D8(&qword_1000895B8);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v15 = (int *)type metadata accessor for CanvasStartingState();
        uint64_t v16 = v15[5];
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (void *)((char *)a2 + v16);
        void *v17 = *v18;
        v17[1] = v18[1];
        uint64_t v19 = v15[6];
        __dst = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = sub_100069600();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        if (v23(v20, 1, v21))
        {
          uint64_t v24 = sub_1000059D8(&qword_100088EE8);
          memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        *((unsigned char *)a1 + v15[7]) = *((unsigned char *)a2 + v15[7]);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10001F3EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_10001F44C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v10 = sub_10006A1C0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_1000059D8(&qword_1000895B8);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
      *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
      uint64_t v17 = v16[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_100069600();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_1000059D8(&qword_100088EE8);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      a1[v16[7]] = a2[v16[7]];
      goto LABEL_20;
    case 2:
      uint64_t v13 = sub_100069620();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_1000059D8(&qword_1000895C0);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      goto LABEL_20;
    case 0:
      uint64_t v7 = sub_1000694C0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_1000059D8(&qword_100088BE8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10001F8A0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10001F3EC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v10 = sub_10006A1C0();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = sub_1000059D8(&qword_1000895B8);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        uint64_t v16 = (int *)type metadata accessor for CanvasStartingState();
        *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
        uint64_t v17 = v16[6];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        uint64_t v20 = sub_100069600();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = sub_1000059D8(&qword_100088EE8);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        a1[v16[7]] = a2[v16[7]];
        goto LABEL_20;
      case 2:
        uint64_t v13 = sub_100069620();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = sub_1000059D8(&qword_1000895C0);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        goto LABEL_20;
      case 0:
        uint64_t v7 = sub_1000694C0();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = sub_1000059D8(&qword_100088BE8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001FD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10001FD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10001FD6C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_10001FD7C()
{
  sub_10001FEC4(319, &qword_100089658, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10001FEC4(319, (unint64_t *)&unk_100089660, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CanvasStartingState();
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_10001FEC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10006A3C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for JournalWidgetDemoMode.TimelineEntryAppearance(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PermissionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100020074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10002009C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000200A4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PermissionType()
{
  return &type metadata for PermissionType;
}

unint64_t sub_1000200C4()
{
  unint64_t result = qword_100089690[0];
  if (!qword_100089690[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100089690);
  }
  return result;
}

uint64_t sub_100020118(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10006A4C0();
  __break(1u);
  return result;
}

uint64_t sub_100020210(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_10006A4C0();
  __break(1u);
  return result;
}

uint64_t sub_10002036C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100020374()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10006A0F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100020440(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_10006A0F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = v13 + v10;
  unint64_t v15 = ((v13 + v10 + v12) & ~v10) + v13;
  uint64_t v16 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v16 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    uint64_t v20 = v8;
    uint64_t v21 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v22 = ((unint64_t)a2 + v11) & v21;
    uint64_t v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v23(((unint64_t)a1 + v11) & v21, v22, v20);
    v23((v14 + (((unint64_t)a1 + v11) & v21)) & v21, (v14 + v22) & v21, v20);
  }
  return a1;
}

uint64_t sub_1000205E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_10006A0F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v11 = v6 + 8;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  v12(v8, v5);
  uint64_t v9 = (*(void *)(v11 + 56) + v7 + v8) & ~v7;

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v5);
}

uint64_t sub_1000206CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_10006A0F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 48) + v11 + v13) & ~v11, (*(void *)(v10 + 48) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_1000207BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = sub_10006A0F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 40) + v11 + v13) & ~v11, (*(void *)(v10 + 40) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_1000208AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = sub_10006A0F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 32) + v11 + v13) & ~v11, (*(void *)(v10 + 32) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_10002099C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_10006A0F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 24) + v11 + v13) & ~v11, (*(void *)(v10 + 24) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_100020A8C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_10006A0F0();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + v12 + (v13 & ~v12)) & ~v12)
      + *(void *)(*(void *)(v8 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_100020D18(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_10006A0F0() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = ((*(void *)(v10 + 64) + v14 + (v15 & ~v14)) & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100021024);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          unint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for VibrantShapeStyleModifier()
{
  return sub_1000216B4();
}

uint64_t sub_100021064()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000210A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_1000697B0();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v43 - v6;
  uint64_t v50 = sub_10006A0F0();
  uint64_t v7 = *(void *)(v50 - 8);
  uint64_t v8 = __chkstk_darwin(v50);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v44 = (char *)&v43 - v12;
  uint64_t v52 = a1;
  uint64_t v54 = *(void *)(a1 + 16);
  uint64_t v46 = *(void *)(v54 - 8);
  __chkstk_darwin(v11);
  uint64_t v49 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10006A1A0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unsigned int v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unsigned int v20 = (char *)&v43 - v19;
  uint64_t v21 = sub_1000059D8(&qword_100089718);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069980();
  uint64_t v24 = sub_10006A0C0();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24);
  sub_1000215FC((uint64_t)v23);
  if (a1 == 1
    && (sub_100069A00(),
        sub_10006A180(),
        sub_10002165C(),
        char v25 = sub_10006A2A0(),
        uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8),
        v26(v18, v14),
        v26(v20, v14),
        (v25 & 1) == 0))
  {
    uint64_t v29 = v46;
    uint64_t v30 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v49, v51, v54);
    uint64_t v31 = v43;
    sub_100069940();
    uint64_t v33 = v47;
    uint64_t v32 = v48;
    uint64_t v34 = v45;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v45, enum case for ColorScheme.dark(_:), v48);
    char v35 = sub_1000697A0();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v33 + 8);
    v36(v34, v32);
    v36(v31, v32);
    uint64_t v37 = 36;
    if (v35) {
      uint64_t v37 = 40;
    }
    uint64_t v38 = v30 + *(int *)(v52 + v37);
    uint64_t v39 = v44;
    uint64_t v40 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v44, v38, v50);
    uint64_t v41 = v54;
    uint64_t v42 = v49;
    sub_100069790();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v42, v41);
  }
  else
  {
    uint64_t v27 = v50;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for BlendMode.normal(_:), v50);
    sub_100069790();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v27);
  }
}

uint64_t sub_1000215D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ShapeStyle._makeView<A>(view:inputs:)(a1, a2, a5, a3, a6, a4);
}

uint64_t sub_1000215FC(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_100089718);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10002165C()
{
  unint64_t result = qword_100089720;
  if (!qword_100089720)
  {
    sub_10006A1A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089720);
  }
  return result;
}

uint64_t sub_1000216B4()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000216E4()
{
  sub_100069B90();

  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for PickerStateOfMindWidget()
{
  return &type metadata for PickerStateOfMindWidget;
}

uint64_t sub_10002173C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100021758@<X0>(uint64_t a1@<X8>)
{
  return sub_100004DC4(5, a1);
}

uint64_t *sub_100021790(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006A1C0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000059D8(&qword_1000895B8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)a1 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = sub_100069600();
    uint64_t v19 = *(void *)(v18 - 8);
    unsigned int v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_1000059D8(&qword_100088EE8);
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100021A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006A1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_100069600();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *sub_100021B74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10006A1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000059D8(&qword_1000895B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = sub_100069600();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_1000059D8(&qword_100088EE8);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_100021D9C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10006A1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_1000059D8(&qword_1000895B8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_100069600();
  uint64_t v19 = *(void *)(v18 - 8);
  unsigned int v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_1000059D8(&qword_100088EE8);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_100022090(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10006A1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000059D8(&qword_1000895B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_100069600();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1000059D8(&qword_100088EE8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_1000222A0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10006A1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_1000059D8(&qword_1000895B8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_100069600();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v25 = sub_1000059D8(&qword_100088EE8);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_100022584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100022598);
}

uint64_t sub_100022598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000059D8(&qword_1000895B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1000059D8(&qword_100088EE8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1000226DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000226F0);
}

uint64_t sub_1000226F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000059D8(&qword_1000895B8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_1000059D8(&qword_100088EE8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for CanvasStartingState()
{
  uint64_t result = qword_100089780;
  if (!qword_100089780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100022874()
{
  sub_100022984(319, &qword_100089790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_100022984(319, (unint64_t *)&unk_100089798, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100022984(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10006A3C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000229DC(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_100069600();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  uint64_t v64 = v4;
  __chkstk_darwin(v3);
  unint64_t v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000059D8(&qword_1000897D0);
  __chkstk_darwin(v62);
  uint64_t v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_100088EE8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v60 - v11;
  __chkstk_darwin(v10);
  uint64_t v67 = (uint64_t)&v60 - v12;
  uint64_t v13 = sub_10006A1C0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000059D8(&qword_1000897D8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000059D8(&qword_1000895B8);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  int v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v60 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v60 - v28;
  uint64_t v65 = a1;
  sub_1000185F8(a1, (uint64_t)&v60 - v28, &qword_1000895B8);
  sub_1000185F8(v69, (uint64_t)v27, &qword_1000895B8);
  uint64_t v30 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_1000185F8((uint64_t)v29, (uint64_t)v20, &qword_1000895B8);
  sub_1000185F8((uint64_t)v27, v30, &qword_1000895B8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v31((uint64_t)v20, 1, v13) == 1)
  {
    sub_100007D0C((uint64_t)v27, &qword_1000895B8);
    sub_100007D0C((uint64_t)v29, &qword_1000895B8);
    if (v31(v30, 1, v13) == 1)
    {
      sub_100007D0C((uint64_t)v20, &qword_1000895B8);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v32 = &qword_1000897D8;
    uint64_t v33 = (uint64_t)v20;
    goto LABEL_7;
  }
  sub_1000185F8((uint64_t)v20, (uint64_t)v24, &qword_1000895B8);
  if (v31(v30, 1, v13) == 1)
  {
    sub_100007D0C((uint64_t)v27, &qword_1000895B8);
    sub_100007D0C((uint64_t)v29, &qword_1000895B8);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v30, v13);
  sub_1000231D0(&qword_1000897E0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  char v35 = sub_10006A2A0();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v16, v13);
  sub_100007D0C((uint64_t)v27, &qword_1000895B8);
  sub_100007D0C((uint64_t)v29, &qword_1000895B8);
  v36(v24, v13);
  sub_100007D0C((uint64_t)v20, &qword_1000895B8);
  if ((v35 & 1) == 0) {
    return 0;
  }
LABEL_11:
  uint64_t v37 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v38 = v37[5];
  uint64_t v39 = v65;
  uint64_t v40 = (void *)(v65 + v38);
  uint64_t v41 = *(void *)(v65 + v38 + 8);
  uint64_t v42 = v69;
  uint64_t v43 = (void *)(v69 + v38);
  uint64_t v44 = v43[1];
  if (!v41)
  {
    uint64_t v45 = (uint64_t)v66;
    uint64_t v46 = v67;
    uint64_t v47 = v68;
    if (v44) {
      return 0;
    }
LABEL_18:
    sub_1000185F8(v39 + v37[6], v46, &qword_100088EE8);
    sub_1000185F8(v42 + v37[6], v47, &qword_100088EE8);
    uint64_t v49 = v45 + *(int *)(v62 + 48);
    sub_1000185F8(v46, v45, &qword_100088EE8);
    sub_1000185F8(v47, v49, &qword_100088EE8);
    uint64_t v50 = v63;
    uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v51(v45, 1, v63) == 1)
    {
      sub_100007D0C(v47, &qword_100088EE8);
      sub_100007D0C(v46, &qword_100088EE8);
      if (v51(v49, 1, v50) == 1)
      {
        sub_100007D0C(v45, &qword_100088EE8);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v52 = v61;
      sub_1000185F8(v45, v61, &qword_100088EE8);
      if (v51(v49, 1, v50) != 1)
      {
        uint64_t v53 = v52;
        uint64_t v54 = v64;
        uint64_t v55 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v60, v49, v50);
        sub_1000231D0(&qword_100089418, (void (*)(uint64_t))&type metadata accessor for Date);
        LODWORD(v66) = sub_10006A2A0();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v54 + 8);
        v56(v55, v50);
        sub_100007D0C(v68, &qword_100088EE8);
        sub_100007D0C(v67, &qword_100088EE8);
        v56((char *)v53, v50);
        sub_100007D0C(v45, &qword_100088EE8);
        if (v66)
        {
LABEL_25:
          uint64_t v57 = v37[7];
          unsigned int v58 = *(unsigned __int8 *)(v39 + v57);
          unsigned int v59 = *(unsigned __int8 *)(v42 + v57);
          if (v58 <= 0xFD)
          {
            if (v59 <= 0xFD && (sub_100037638(v58, v59) & 1) != 0) {
              return 1;
            }
          }
          else if (v59 > 0xFD)
          {
            return 1;
          }
        }
        return 0;
      }
      sub_100007D0C(v68, &qword_100088EE8);
      sub_100007D0C(v46, &qword_100088EE8);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v50);
    }
    uint64_t v32 = &qword_1000897D0;
    uint64_t v33 = v45;
LABEL_7:
    sub_100007D0C(v33, v32);
    return 0;
  }
  uint64_t v45 = (uint64_t)v66;
  uint64_t v46 = v67;
  uint64_t v47 = v68;
  if (!v44) {
    return 0;
  }
  if (*v40 == *v43 && v41 == v44) {
    goto LABEL_18;
  }
  char v48 = sub_10006A570();
  uint64_t result = 0;
  if (v48) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1000231D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100023218()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100070B50;
  v6._object = (void *)0x8000000100070B30;
  v6._countAndFlagsBits = 0xD000000000000016;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x6C616E72756F4ALL;
  v8._object = (void *)0xE700000000000000;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000921B8 = v2;
  unk_1000921C0 = v4;
}

void sub_1000232DC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  v5._countAndFlagsBits = 0x8000000100070B10;
  v6._object = (void *)0x8000000100070AF0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x72746E452077654ELL;
  v8._object = (void *)0xE900000000000079;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000921C8 = v2;
  unk_1000921D0 = v4;
}

void sub_1000233A4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000020;
  v8._countAndFlagsBits = 0xD000000000000031;
  v5._countAndFlagsBits = 0x80000001000710F0;
  v6._object = (void *)0x8000000100071080;
  v8._object = (void *)0x80000001000710B0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000921D8 = v2;
  unk_1000921E0 = v4;
}

void sub_100023468()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100070C90;
  v6._object = (void *)0x8000000100070C60;
  v6._countAndFlagsBits = 0xD000000000000022;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 7824718;
  v8._object = (void *)0xE300000000000000;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000921E8 = v2;
  unk_1000921F0 = v4;
}

void sub_100023520()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100070BB0;
  v6._object = (void *)0x8000000100070C30;
  v6._countAndFlagsBits = 0xD000000000000023;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x72746E452077654ELL;
  v8._object = (void *)0xE900000000000079;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000921F8 = v2;
  unk_100092200 = v4;
}

void sub_1000235E4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100070BB0;
  v6._object = (void *)0x8000000100070B80;
  v6._countAndFlagsBits = 0xD000000000000024;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x6F7250207478654ELL;
  v8._object = (void *)0xEB0000000074706DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092208 = v2;
  unk_100092210 = v4;
}

void sub_1000236AC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002ALL;
  v5._countAndFlagsBits = 0x80000001000765F0;
  v6._object = (void *)0x8000000100076590;
  v8._object = (void *)0x80000001000765C0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092218 = v2;
  unk_100092220 = v4;
}

void sub_100023770()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000027;
  v5._countAndFlagsBits = 0x8000000100076540;
  v6._object = (void *)0x80000001000764E0;
  v8._object = (void *)0x8000000100076510;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092228 = v2;
  unk_100092230 = v4;
}

void sub_100023834()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000031;
  v5._countAndFlagsBits = 0x8000000100076480;
  v6._object = (void *)0x8000000100076410;
  v8._object = (void *)0x8000000100076440;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092238 = v2;
  unk_100092240 = v4;
}

void sub_1000238F8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000035;
  v5._countAndFlagsBits = 0x80000001000763B0;
  v6._object = (void *)0x8000000100076340;
  v8._object = (void *)0x8000000100076370;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092248 = v2;
  unk_100092250 = v4;
}

void sub_1000239BC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000031;
  v5._countAndFlagsBits = 0x80000001000762E0;
  v6._object = (void *)0x8000000100076270;
  v8._object = (void *)0x80000001000762A0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092258 = v2;
  unk_100092260 = v4;
}

void sub_100023A80()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100076220;
  v6._object = (void *)0x80000001000761C0;
  v8._object = (void *)0x80000001000761F0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092268 = v2;
  unk_100092270 = v4;
}

void sub_100023B44()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002ELL;
  v5._countAndFlagsBits = 0x8000000100076160;
  v6._object = (void *)0x8000000100076100;
  v8._object = (void *)0x8000000100076130;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092278 = v2;
  unk_100092280 = v4;
}

void sub_100023C08()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000716D0;
  v6._object = (void *)0x8000000100071670;
  v8._object = (void *)0x80000001000716A0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000022;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092288 = v2;
  unk_100092290 = v4;
}

void sub_100023CD0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100071620;
  v6._object = (void *)0x80000001000715D0;
  v8._object = (void *)0x8000000100071600;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001CLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092298 = v2;
  unk_1000922A0 = v4;
}

void sub_100023D94()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071B30;
  v6._object = (void *)0x8000000100071AD0;
  v8._object = (void *)0x8000000100071B00;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002ALL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000922A8 = v2;
  unk_1000922B0 = v4;
}

void sub_100023E5C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000027;
  v5._countAndFlagsBits = 0x8000000100071A80;
  v6._object = (void *)0x8000000100071A20;
  v8._object = (void *)0x8000000100071A50;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000922B8 = v2;
  unk_1000922C0 = v4;
}

void sub_100023F20()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000760A0;
  v6._object = (void *)0x8000000100076030;
  v8._object = (void *)0x8000000100076060;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000036;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000922C8 = v2;
  unk_1000922D0 = v4;
}

void sub_100023FE8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075FE0;
  v6._object = (void *)0x8000000100075F80;
  v8._object = (void *)0x8000000100075FB0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000025;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000922D8 = v2;
  unk_1000922E0 = v4;
}

void sub_1000240AC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000028;
  v5._countAndFlagsBits = 0x8000000100075F30;
  v6._object = (void *)0x8000000100075ED0;
  v8._object = (void *)0x8000000100075F00;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000922E8 = v2;
  unk_1000922F0 = v4;
}

void sub_100024170()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075E80;
  v6._object = (void *)0x8000000100075E30;
  v8._object = (void *)0x8000000100075E60;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001FLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000922F8 = v2;
  unk_100092300 = v4;
}

void sub_100024234()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100075DE0;
  v6._object = (void *)0x8000000100075D80;
  v8._object = (void *)0x8000000100075DB0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000026;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092308 = v2;
  unk_100092310 = v4;
}

void sub_1000242FC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075D30;
  v6._object = (void *)0x8000000100075CD0;
  v8._object = (void *)0x8000000100075D00;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000025;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092318 = v2;
  unk_100092320 = v4;
}

void sub_1000243C0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100075C80;
  v6._object = (void *)0x8000000100075C20;
  v8._object = (void *)0x8000000100075C50;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000026;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092328 = v2;
  unk_100092330 = v4;
}

void sub_100024488()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100075BD0;
  v6._object = (void *)0x8000000100075B70;
  v8._object = (void *)0x8000000100075BA0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000026;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092338 = v2;
  unk_100092340 = v4;
}

void sub_100024550()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075B20;
  v6._object = (void *)0x8000000100075AC0;
  v8._object = (void *)0x8000000100075AF0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000023;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092348 = v2;
  unk_100092350 = v4;
}

void sub_100024614()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075A70;
  v6._object = (void *)0x8000000100075A10;
  v8._object = (void *)0x8000000100075A40;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000021;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092358 = v2;
  unk_100092360 = v4;
}

uint64_t sub_1000246D8()
{
  if (qword_1000884D8 != -1) {
    swift_once();
  }
  qword_100092368 = qword_100092268;
  unk_100092370 = unk_100092270;

  return swift_bridgeObjectRetain();
}

void sub_100024744()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000759C0;
  v6._object = (void *)0x8000000100075960;
  v8._object = (void *)0x8000000100075990;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000024;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092378 = v2;
  unk_100092380 = v4;
}

void sub_10002480C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075910;
  v6._object = (void *)0x80000001000758B0;
  v8._object = (void *)0x80000001000758E0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000021;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092388 = v2;
  unk_100092390 = v4;
}

uint64_t sub_1000248D0()
{
  if (qword_1000884E8 != -1) {
    swift_once();
  }
  qword_100092398 = qword_100092288;
  unk_1000923A0 = unk_100092290;

  return swift_bridgeObjectRetain();
}

void sub_10002493C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100071E70;
  v6._object = (void *)0x8000000100071E10;
  v8._object = (void *)0x8000000100071E40;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000022;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000923A8 = v2;
  unk_1000923B0 = v4;
}

void sub_100024A00()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075860;
  v6._object = (void *)0x8000000100075810;
  v8._object = (void *)0x8000000100075840;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000923B8 = v2;
  unk_1000923C0 = v4;
}

uint64_t sub_100024AC4()
{
  if (qword_1000884F0 != -1) {
    swift_once();
  }
  qword_1000923C8 = qword_100092298;
  unk_1000923D0 = unk_1000922A0;

  return swift_bridgeObjectRetain();
}

void sub_100024B30()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000757C0;
  v6._object = (void *)0x8000000100075760;
  v8._object = (void *)0x8000000100075790;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000923D8 = v2;
  unk_1000923E0 = v4;
}

void sub_100024BF8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075710;
  v6._object = (void *)0x80000001000756C0;
  v8._object = (void *)0x80000001000756F0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000923E8 = v2;
  unk_1000923F0 = v4;
}

void sub_100024CBC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100075680;
  v6._object = (void *)0x8000000100075630;
  v8._object = (void *)0x8000000100075660;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000018;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000923F8 = v2;
  unk_100092400 = v4;
}

void sub_100024D88()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000755F0;
  v6._object = (void *)0x80000001000755A0;
  v8._object = (void *)0x80000001000755D0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000016;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092408 = v2;
  unk_100092410 = v4;
}

void sub_100024E50()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075560;
  v6._object = (void *)0x8000000100075510;
  v8._object = (void *)0x8000000100075540;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000014;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092418 = v2;
  unk_100092420 = v4;
}

void sub_100024F14()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000754D0;
  v6._object = (void *)0x8000000100075480;
  v8._object = (void *)0x80000001000754B0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000014;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092428 = v2;
  unk_100092430 = v4;
}

void sub_100024FDC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000721E0;
  v6._object = (void *)0x8000000100072190;
  v8._object = (void *)0x80000001000721C0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000014;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092438 = v2;
  unk_100092440 = v4;
}

void sub_1000250A4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100072150;
  v6._object = (void *)0x8000000100072100;
  v8._object = (void *)0x8000000100072130;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000012;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092448 = v2;
  unk_100092450 = v4;
}

void sub_10002516C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075440;
  v6._object = (void *)0x80000001000753F0;
  v8._object = (void *)0x8000000100075420;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000015;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092458 = v2;
  unk_100092460 = v4;
}

void sub_100025230()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000753B0;
  v6._object = (void *)0x8000000100075360;
  v8._object = (void *)0x8000000100075390;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000010;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092468 = v2;
  unk_100092470 = v4;
}

void sub_1000252FC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000028;
  v5._countAndFlagsBits = 0x8000000100075310;
  v6._object = (void *)0x80000001000752B0;
  v8._object = (void *)0x80000001000752E0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092478 = v2;
  unk_100092480 = v4;
}

void sub_1000253C0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100075260;
  v6._object = (void *)0x8000000100075210;
  v8._object = (void *)0x8000000100075240;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001ELL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092488 = v2;
  unk_100092490 = v4;
}

void sub_100025484()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000751B0;
  v6._object = (void *)0x8000000100075150;
  v8._object = (void *)0x8000000100075180;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002FLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092498 = v2;
  unk_1000924A0 = v4;
}

void sub_10002554C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000750F0;
  v6._object = (void *)0x8000000100075080;
  v8._object = (void *)0x80000001000750B0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000035;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000924A8 = v2;
  unk_1000924B0 = v4;
}

void sub_100025614()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100075020;
  v6._object = (void *)0x8000000100074FB0;
  v8._object = (void *)0x8000000100074FE0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000033;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000924B8 = v2;
  unk_1000924C0 = v4;
}

void sub_1000256DC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000034;
  v5._countAndFlagsBits = 0x8000000100074F50;
  v6._object = (void *)0x8000000100074EE0;
  v8._object = (void *)0x8000000100074F10;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000924C8 = v2;
  unk_1000924D0 = v4;
}

void sub_1000257A0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002CLL;
  v5._countAndFlagsBits = 0x8000000100074E80;
  v6._object = (void *)0x8000000100074E20;
  v8._object = (void *)0x8000000100074E50;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000924D8 = v2;
  unk_1000924E0 = v4;
}

void sub_100025864()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000030;
  v5._countAndFlagsBits = 0x8000000100074DC0;
  v6._object = (void *)0x8000000100074D50;
  v8._object = (void *)0x8000000100074D80;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000924E8 = v2;
  unk_1000924F0 = v4;
}

void sub_100025928()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002DLL;
  v5._countAndFlagsBits = 0x8000000100071570;
  v6._object = (void *)0x8000000100071510;
  v8._object = (void *)0x8000000100071540;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000924F8 = v2;
  unk_100092500 = v4;
}

void sub_1000259EC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x80000001000714C0;
  v6._object = (void *)0x8000000100071460;
  v8._object = (void *)0x8000000100071490;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000025;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092508 = v2;
  unk_100092510 = v4;
}

void sub_100025AB0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000719C0;
  v6._object = (void *)0x8000000100071950;
  v8._object = (void *)0x8000000100071980;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000031;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092518 = v2;
  unk_100092520 = v4;
}

void sub_100025B78()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071900;
  v6._object = (void *)0x80000001000718A0;
  v8._object = (void *)0x80000001000718D0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000028;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092528 = v2;
  unk_100092530 = v4;
}

void sub_100025C40()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074D00;
  v6._object = (void *)0x8000000100074CA0;
  v8._object = (void *)0x8000000100074CD0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000025;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092538 = v2;
  unk_100092540 = v4;
}

void sub_100025D08()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074C40;
  v6._object = (void *)0x8000000100074BE0;
  v8._object = (void *)0x8000000100074C10;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002ALL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092548 = v2;
  unk_100092550 = v4;
}

void sub_100025DD0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002CLL;
  v5._countAndFlagsBits = 0x8000000100074B80;
  v6._object = (void *)0x8000000100074B20;
  v8._object = (void *)0x8000000100074B50;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092558 = v2;
  unk_100092560 = v4;
}

void sub_100025E94()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074AC0;
  v6._object = (void *)0x8000000100074A50;
  v8._object = (void *)0x8000000100074A80;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000031;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092568 = v2;
  unk_100092570 = v4;
}

void sub_100025F5C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002FLL;
  v5._countAndFlagsBits = 0x80000001000749F0;
  v6._object = (void *)0x8000000100074990;
  v8._object = (void *)0x80000001000749C0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092578 = v2;
  unk_100092580 = v4;
}

void sub_100026024()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100074940;
  v6._object = (void *)0x80000001000748E0;
  v8._object = (void *)0x8000000100074910;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000023;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092588 = v2;
  unk_100092590 = v4;
}

void sub_1000260E8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074880;
  v6._object = (void *)0x8000000100074820;
  v8._object = (void *)0x8000000100074850;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002ELL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092598 = v2;
  unk_1000925A0 = v4;
}

void sub_1000261B0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100071D20;
  v6._object = (void *)0x8000000100071CD0;
  v8._object = (void *)0x8000000100071D00;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000925A8 = v2;
  unk_1000925B0 = v4;
}

void sub_100026274()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071DC0;
  v6._object = (void *)0x8000000100071D70;
  v8._object = (void *)0x8000000100071DA0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000001CLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000925B8 = v2;
  unk_1000925C0 = v4;
}

void sub_10002633C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000747C0;
  v6._object = (void *)0x8000000100074750;
  v8._object = (void *)0x8000000100074780;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000030;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000925C8 = v2;
  unk_1000925D0 = v4;
}

void sub_100026404()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100074700;
  v6._object = (void *)0x80000001000746A0;
  v8._object = (void *)0x80000001000746D0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000021;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000925D8 = v2;
  unk_1000925E0 = v4;
}

void sub_1000264C8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000028;
  v5._countAndFlagsBits = 0x8000000100074650;
  v6._object = (void *)0x80000001000745F0;
  v8._object = (void *)0x8000000100074620;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000925E8 = v2;
  unk_1000925F0 = v4;
}

void sub_10002658C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074590;
  v6._object = (void *)0x8000000100074530;
  v8._object = (void *)0x8000000100074560;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002FLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000925F8 = v2;
  unk_100092600 = v4;
}

void sub_100026654()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002BLL;
  v5._countAndFlagsBits = 0x80000001000744D0;
  v6._object = (void *)0x8000000100074470;
  v8._object = (void *)0x80000001000744A0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092608 = v2;
  unk_100092610 = v4;
}

void sub_100026718()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100074420;
  v6._object = (void *)0x80000001000743D0;
  v8._object = (void *)0x8000000100074400;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001BLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092618 = v2;
  unk_100092620 = v4;
}

void sub_1000267DC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002CLL;
  v5._countAndFlagsBits = 0x8000000100074370;
  v6._object = (void *)0x8000000100074310;
  v8._object = (void *)0x8000000100074340;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092628 = v2;
  unk_100092630 = v4;
}

void sub_1000268A0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000742B0;
  v6._object = (void *)0x8000000100074250;
  v8._object = (void *)0x8000000100074280;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092638 = v2;
  unk_100092640 = v4;
}

void sub_100026968()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074210;
  v6._object = (void *)0x80000001000741C0;
  v8._object = (void *)0x80000001000741F0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000016;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092648 = v2;
  unk_100092650 = v4;
}

void sub_100026A30()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100074170;
  v6._object = (void *)0x8000000100074110;
  v8._object = (void *)0x8000000100074140;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092658 = v2;
  unk_100092660 = v4;
}

uint64_t sub_100026AF8()
{
  if (qword_1000885E8 != -1) {
    swift_once();
  }
  qword_100092668 = qword_100092488;
  unk_100092670 = unk_100092490;

  return swift_bridgeObjectRetain();
}

void sub_100026B64()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x80000001000740C0;
  v6._object = (void *)0x8000000100074060;
  v8._object = (void *)0x8000000100074090;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092678 = v2;
  unk_100092680 = v4;
}

void sub_100026C28()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100074010;
  v6._object = (void *)0x8000000100073FB0;
  v8._object = (void *)0x8000000100073FE0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000024;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092688 = v2;
  unk_100092690 = v4;
}

void sub_100026CEC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100073F60;
  v6._object = (void *)0x8000000100073F00;
  v8._object = (void *)0x8000000100073F30;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000023;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092698 = v2;
  unk_1000926A0 = v4;
}

uint64_t sub_100026DB0()
{
  if (qword_100088680 != -1) {
    swift_once();
  }
  qword_1000926A8 = qword_1000925B8;
  unk_1000926B0 = unk_1000925C0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100026E1C()
{
  if (qword_100088678 != -1) {
    swift_once();
  }
  qword_1000926B8 = qword_1000925A8;
  unk_1000926C0 = unk_1000925B0;

  return swift_bridgeObjectRetain();
}

void sub_100026E88()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073EB0;
  v6._object = (void *)0x8000000100073E50;
  v8._object = (void *)0x8000000100073E80;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000025;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000926C8 = v2;
  unk_1000926D0 = v4;
}

void sub_100026F50()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100073E00;
  v6._object = (void *)0x8000000100073DA0;
  v8._object = (void *)0x8000000100073DD0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000926D8 = v2;
  unk_1000926E0 = v4;
}

void sub_100027014()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100073D50;
  v6._object = (void *)0x8000000100073D00;
  v8._object = (void *)0x8000000100073D30;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001FLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000926E8 = v2;
  unk_1000926F0 = v4;
}

void sub_1000270D8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073CC0;
  v6._object = (void *)0x8000000100073C70;
  v8._object = (void *)0x8000000100073CA0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000012;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000926F8 = v2;
  unk_100092700 = v4;
}

void sub_1000271A0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072030;
  v6._object = (void *)0x8000000100071FE0;
  v8._object = (void *)0x8000000100072010;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000011;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092708 = v2;
  unk_100092710 = v4;
}

void sub_100027268()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100073C30;
  v6._object = (void *)0x8000000100073BE0;
  v8._object = (void *)0x8000000100073C10;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000015;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092718 = v2;
  unk_100092720 = v4;
}

void sub_10002732C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100073BA0;
  v6._object = (void *)0x8000000100073B50;
  v8._object = (void *)0x8000000100073B80;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000011;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092728 = v2;
  unk_100092730 = v4;
}

void sub_1000273F4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000720C0;
  v6._object = (void *)0x8000000100072070;
  v8._object = (void *)0x80000001000720A0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000016;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092738 = v2;
  unk_100092740 = v4;
}

uint64_t sub_1000274BC()
{
  if (qword_100088728 != -1) {
    swift_once();
  }
  qword_100092748 = qword_100092708;
  unk_100092750 = unk_100092710;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100027528()
{
  if (qword_100088730 != -1) {
    swift_once();
  }
  qword_100092758 = qword_100092718;
  unk_100092760 = unk_100092720;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100027594()
{
  if (qword_100088738 != -1) {
    swift_once();
  }
  qword_100092768 = qword_100092728;
  unk_100092770 = unk_100092730;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100027600()
{
  if (qword_1000885E0 != -1) {
    swift_once();
  }
  qword_100092778 = qword_100092478;
  unk_100092780 = unk_100092480;

  return swift_bridgeObjectRetain();
}

void sub_10002766C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002FLL;
  v5._countAndFlagsBits = 0x8000000100073AF0;
  v6._object = (void *)0x8000000100073A90;
  v8._object = (void *)0x8000000100073AC0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092788 = v2;
  unk_100092790 = v4;
}

void sub_100027734()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073A30;
  v6._object = (void *)0x80000001000739C0;
  v8._object = (void *)0x80000001000739F0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000033;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092798 = v2;
  unk_1000927A0 = v4;
}

void sub_1000277FC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073960;
  v6._object = (void *)0x80000001000738F0;
  v8._object = (void *)0x8000000100073920;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000033;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000927A8 = v2;
  unk_1000927B0 = v4;
}

void sub_1000278C4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073890;
  v6._object = (void *)0x8000000100073820;
  v8._object = (void *)0x8000000100073850;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000033;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000927B8 = v2;
  unk_1000927C0 = v4;
}

void sub_10002798C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x80000001000737D0;
  v6._object = (void *)0x8000000100073770;
  v8._object = (void *)0x80000001000737A0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000023;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000927C8 = v2;
  unk_1000927D0 = v4;
}

void sub_100027A50()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073710;
  v6._object = (void *)0x80000001000736A0;
  v8._object = (void *)0x80000001000736D0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000030;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000927D8 = v2;
  unk_1000927E0 = v4;
}

void sub_100027B18()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073650;
  v6._object = (void *)0x80000001000735F0;
  v8._object = (void *)0x8000000100073620;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000026;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000927E8 = v2;
  unk_1000927F0 = v4;
}

void sub_100027BE0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073590;
  v6._object = (void *)0x8000000100073520;
  v8._object = (void *)0x8000000100073550;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000036;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000927F8 = v2;
  unk_100092800 = v4;
}

void sub_100027CA8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000030;
  v5._countAndFlagsBits = 0x80000001000734C0;
  v6._object = (void *)0x8000000100073450;
  v8._object = (void *)0x8000000100073480;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092808 = v2;
  unk_100092810 = v4;
}

void sub_100027D6C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002CLL;
  v5._countAndFlagsBits = 0x80000001000733F0;
  v6._object = (void *)0x8000000100073390;
  v8._object = (void *)0x80000001000733C0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092818 = v2;
  unk_100092820 = v4;
}

void sub_100027E30()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000034;
  v5._countAndFlagsBits = 0x8000000100073330;
  v6._object = (void *)0x80000001000732C0;
  v8._object = (void *)0x80000001000732F0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092828 = v2;
  unk_100092830 = v4;
}

void sub_100027EF4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100073260;
  v6._object = (void *)0x80000001000731F0;
  v8._object = (void *)0x8000000100073220;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000030;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092838 = v2;
  unk_100092840 = v4;
}

void sub_100027FBC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002ELL;
  v5._countAndFlagsBits = 0x8000000100073190;
  v6._object = (void *)0x8000000100073130;
  v8._object = (void *)0x8000000100073160;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092848 = v2;
  unk_100092850 = v4;
}

void sub_100028080()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x80000001000730E0;
  v6._object = (void *)0x8000000100073080;
  v8._object = (void *)0x80000001000730B0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000021;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092858 = v2;
  unk_100092860 = v4;
}

void sub_100028144()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071400;
  v6._object = (void *)0x8000000100071390;
  v8._object = (void *)0x80000001000713C0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000031;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092868 = v2;
  unk_100092870 = v4;
}

void sub_10002820C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000029;
  v5._countAndFlagsBits = 0x8000000100071340;
  v6._object = (void *)0x80000001000712E0;
  v8._object = (void *)0x8000000100071310;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092878 = v2;
  unk_100092880 = v4;
}

void sub_1000282D0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000028;
  v5._countAndFlagsBits = 0x8000000100071850;
  v6._object = (void *)0x80000001000717F0;
  v8._object = (void *)0x8000000100071820;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092888 = v2;
  unk_100092890 = v4;
}

void sub_100028394()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071790;
  v6._object = (void *)0x8000000100071720;
  v8._object = (void *)0x8000000100071750;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000031;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092898 = v2;
  unk_1000928A0 = v4;
}

void sub_10002845C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002BLL;
  v5._countAndFlagsBits = 0x8000000100073020;
  v6._object = (void *)0x8000000100072FC0;
  v8._object = (void *)0x8000000100072FF0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000928A8 = v2;
  unk_1000928B0 = v4;
}

void sub_100028520()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072F70;
  v6._object = (void *)0x8000000100072F20;
  v8._object = (void *)0x8000000100072F50;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001ALL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000928B8 = v2;
  unk_1000928C0 = v4;
}

void sub_1000285E4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072ED0;
  v6._object = (void *)0x8000000100072E70;
  v8._object = (void *)0x8000000100072EA0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000025;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000928C8 = v2;
  unk_1000928D0 = v4;
}

void sub_1000286A8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100071C80;
  v6._object = (void *)0x8000000100071C30;
  v8._object = (void *)0x8000000100071C60;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000928D8 = v2;
  unk_1000928E0 = v4;
}

void sub_10002876C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100072E10;
  v6._object = (void *)0x8000000100072DB0;
  v8._object = (void *)0x8000000100072DE0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x100000000000002CLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000928E8 = v2;
  unk_1000928F0 = v4;
}

void sub_100028834()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002DLL;
  v5._countAndFlagsBits = 0x8000000100072D50;
  v6._object = (void *)0x8000000100072CF0;
  v8._object = (void *)0x8000000100072D20;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000928F8 = v2;
  unk_100092900 = v4;
}

void sub_1000288F8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100072CA0;
  v6._object = (void *)0x8000000100072C40;
  v8._object = (void *)0x8000000100072C70;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000026;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092908 = v2;
  unk_100092910 = v4;
}

void sub_1000289C0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100072BF0;
  v6._object = (void *)0x8000000100072B90;
  v8._object = (void *)0x8000000100072BC0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000022;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092918 = v2;
  unk_100092920 = v4;
}

void sub_100028A88()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000002ELL;
  v5._countAndFlagsBits = 0x8000000100072B30;
  v6._object = (void *)0x8000000100072AD0;
  v8._object = (void *)0x8000000100072B00;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092928 = v2;
  unk_100092930 = v4;
}

uint64_t sub_100028B4C()
{
  if (qword_1000887D0 != -1) {
    swift_once();
  }
  qword_100092938 = qword_100092858;
  unk_100092940 = unk_100092860;

  return swift_bridgeObjectRetain();
}

void sub_100028BB8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072A80;
  v6._object = (void *)0x8000000100072A20;
  v8._object = (void *)0x8000000100072A50;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000021;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092948 = v2;
  unk_100092950 = v4;
}

void sub_100028C7C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000729D0;
  v6._object = (void *)0x8000000100072970;
  v8._object = (void *)0x80000001000729A0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000026;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092958 = v2;
  unk_100092960 = v4;
}

void sub_100028D44()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072920;
  v6._object = (void *)0x80000001000728D0;
  v8._object = (void *)0x8000000100072900;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001ELL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092968 = v2;
  unk_100092970 = v4;
}

void sub_100028E08()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072880;
  v6._object = (void *)0x8000000100072820;
  v8._object = (void *)0x8000000100072850;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000024;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092978 = v2;
  unk_100092980 = v4;
}

void sub_100028ECC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000727D0;
  v6._object = (void *)0x8000000100072770;
  v8._object = (void *)0x80000001000727A0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092988 = v2;
  unk_100092990 = v4;
}

uint64_t sub_100028F94()
{
  if (qword_100088810 != -1) {
    swift_once();
  }
  qword_100092998 = qword_1000928D8;
  unk_1000929A0 = unk_1000928E0;

  return swift_bridgeObjectRetain();
}

void sub_100029000()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100071BE0;
  v6._object = (void *)0x8000000100071B90;
  v8._object = (void *)0x8000000100071BC0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD00000000000001DLL;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000929A8 = v2;
  unk_1000929B0 = v4;
}

void sub_1000290C4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072720;
  v6._object = (void *)0x80000001000726C0;
  v8._object = (void *)0x80000001000726F0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000022;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000929B8 = v2;
  unk_1000929C0 = v4;
}

uint64_t sub_100029188()
{
  if (qword_100088800 != -1) {
    swift_once();
  }
  qword_1000929C8 = qword_1000928B8;
  unk_1000929D0 = unk_1000928C0;

  return swift_bridgeObjectRetain();
}

void sub_1000291F4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072670;
  v6._object = (void *)0x8000000100072610;
  v8._object = (void *)0x8000000100072640;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000020;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000929D8 = v2;
  unk_1000929E0 = v4;
}

void sub_1000292B8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071FA0;
  v6._object = (void *)0x8000000100071F50;
  v8._object = (void *)0x8000000100071F80;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000013;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000929E8 = v2;
  unk_1000929F0 = v4;
}

void sub_100029380()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071F10;
  v6._object = (void *)0x8000000100071EC0;
  v8._object = (void *)0x8000000100071EF0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000016;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_1000929F8 = v2;
  unk_100092A00 = v4;
}

void sub_100029448()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x80000001000725D0;
  v6._object = (void *)0x8000000100072580;
  v8._object = (void *)0x80000001000725B0;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000014;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A08 = v2;
  unk_100092A10 = v4;
}

void sub_10002950C()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072540;
  v6._object = (void *)0x80000001000724F0;
  v8._object = (void *)0x8000000100072520;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000014;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A18 = v2;
  unk_100092A20 = v4;
}

void sub_1000295D0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x80000001000724B0;
  v6._object = (void *)0x8000000100072460;
  v8._object = (void *)0x8000000100072490;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000012;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A28 = v2;
  unk_100092A30 = v4;
}

void sub_100029694()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072420;
  v6._object = (void *)0x80000001000723D0;
  v8._object = (void *)0x8000000100072400;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000015;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A38 = v2;
  unk_100092A40 = v4;
}

uint64_t sub_100029758()
{
  if (qword_100088898 != -1) {
    swift_once();
  }
  qword_100092A48 = qword_1000929E8;
  unk_100092A50 = unk_1000929F0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000297C4()
{
  if (qword_1000888A0 != -1) {
    swift_once();
  }
  qword_100092A58 = qword_1000929F8;
  unk_100092A60 = unk_100092A00;

  return swift_bridgeObjectRetain();
}

void sub_100029830()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072390;
  v6._object = (void *)0x8000000100072340;
  v8._object = (void *)0x8000000100072370;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000013;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A68 = v2;
  unk_100092A70 = v4;
}

uint64_t sub_1000298F4()
{
  if (qword_1000888B0 != -1) {
    swift_once();
  }
  qword_100092A78 = qword_100092A18;
  unk_100092A80 = unk_100092A20;

  return swift_bridgeObjectRetain();
}

void sub_100029960()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100072300;
  v6._object = (void *)0x80000001000722B0;
  v8._object = (void *)0x80000001000722E0;
  v6._countAndFlagsBits = 0xD000000000000026;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x1000000000000015;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A88 = v2;
  unk_100092A90 = v4;
}

void sub_100029A28()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000026;
  v5._countAndFlagsBits = 0x8000000100072270;
  v6._object = (void *)0x8000000100072220;
  v8._object = (void *)0x8000000100072250;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000014;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092A98 = v2;
  unk_100092AA0 = v4;
}

void sub_100029AEC()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v6._countAndFlagsBits = 0xD000000000000018;
  v5._countAndFlagsBits = 0x8000000100071150;
  v6._object = (void *)0x8000000100071110;
  v8._object = (void *)0x8000000100071130;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0xD000000000000016;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092AA8 = v2;
  unk_100092AB0 = v4;
}

void sub_100029BB0()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000039;
  v5._countAndFlagsBits = 0x8000000100070D60;
  v6._object = (void *)0x8000000100070D00;
  v8._object = (void *)0x8000000100070D20;
  v6._countAndFlagsBits = 0xD00000000000001ELL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092AB8 = v2;
  unk_100092AC0 = v4;
}

void sub_100029C74()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000711A0;
  v6._object = (void *)0x8000000100071180;
  v6._countAndFlagsBits = 0xD000000000000013;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x736F746F6850;
  v8._object = (void *)0xE600000000000000;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092AC8 = v2;
  unk_100092AD0 = v4;
}

void sub_100029D34()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000036;
  v5._countAndFlagsBits = 0x8000000100070E00;
  v6._object = (void *)0x8000000100070DA0;
  v8._object = (void *)0x8000000100070DC0;
  v6._countAndFlagsBits = 0xD000000000000019;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092AD8 = v2;
  unk_100092AE0 = v4;
}

void sub_100029DF8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000711E0;
  v6._object = (void *)0x80000001000711C0;
  v6._countAndFlagsBits = 0xD000000000000013;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x6172656D6143;
  v8._object = (void *)0xE600000000000000;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092AE8 = v2;
  unk_100092AF0 = v4;
}

void sub_100029EB8()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000003DLL;
  v5._countAndFlagsBits = 0x8000000100070E90;
  v6._object = (void *)0x8000000100070E30;
  v8._object = (void *)0x8000000100070E50;
  v6._countAndFlagsBits = 0xD000000000000019;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092AF8 = v2;
  unk_100092B00 = v4;
}

void sub_100029F80()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071220;
  v6._object = (void *)0x8000000100071200;
  v6._countAndFlagsBits = 0xD00000000000001CLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x6552206F69647541;
  v8._object = (void *)0xEF676E6964726F63;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092B08 = v2;
  unk_100092B10 = v4;
}

void sub_10002A050()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000035;
  v5._countAndFlagsBits = 0x8000000100070F30;
  v6._object = (void *)0x8000000100070EC0;
  v8._object = (void *)0x8000000100070EF0;
  v6._countAndFlagsBits = 0xD000000000000022;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092B18 = v2;
  unk_100092B20 = v4;
}

void sub_10002A114()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x8000000100071270;
  v6._object = (void *)0x8000000100071250;
  v6._countAndFlagsBits = 0xD000000000000016;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x736563616C50;
  v8._object = (void *)0xE600000000000000;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092B28 = v2;
  unk_100092B30 = v4;
}

void sub_10002A1D4()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000029;
  v5._countAndFlagsBits = 0x8000000100070FB0;
  v6._object = (void *)0x8000000100070F60;
  v8._object = (void *)0x8000000100070F80;
  v6._countAndFlagsBits = 0xD00000000000001CLL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092B38 = v2;
  unk_100092B40 = v4;
}

void sub_10002A298()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0x80000001000712B0;
  v6._object = (void *)0x8000000100071290;
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  v8._countAndFlagsBits = 0x666F206574617453;
  v8._object = (void *)0xED0000646E694D20;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092B48 = v2;
  unk_100092B50 = v4;
}

void sub_10002A368()
{
  unint64_t v0 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000033;
  v5._countAndFlagsBits = 0x8000000100071050;
  v6._object = (void *)0x8000000100070FE0;
  v8._object = (void *)0x8000000100071010;
  v6._countAndFlagsBits = 0xD000000000000020;
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v1.super.Class isa = v0;
  uint64_t v2 = sub_1000693E0(v6, v7, v1, v8, v5);
  uint64_t v4 = v3;

  qword_100092B58 = v2;
  unk_100092B60 = v4;
}

uint64_t type metadata accessor for JournalWidgetStrings()
{
  return self;
}

uint64_t sub_10002A454()
{
  uint64_t result = sub_1000698F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_10006A1A0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_10002A55C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v25 = sub_1000698F0();
  uint64_t v5 = *(void *)(v25 - 8);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v5 + 64) + v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = sub_10006A1A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v8 | *(unsigned char *)(v5 + 80) | *(unsigned char *)(v12 + 80));
  if (v15 <= 7
    && ((v14 + (v9 & ~(unint64_t)v8)) & ~v13) + *(void *)(*(void *)(v11 - 8) + 64) <= 0x18
    && ((v8 | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v12 + 80)) & 0x100000) == 0)
  {
    unint64_t v19 = ~(unint64_t)v8;
    uint64_t v20 = ~v13;
    uint64_t v24 = v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v25);
    unint64_t v21 = ((unint64_t)a1 + v9) & v19;
    unint64_t v22 = ((unint64_t)a2 + v9) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v21, v22, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v21 + v14) & v20, (v22 + v14) & v20, v24);
  }
  else
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return a1;
}

uint64_t sub_10002A778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000698F0();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56) + a1;
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = v7 + 8;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v9);
  uint64_t v10 = *(void *)(v8 + 56);
  uint64_t v11 = sub_10006A1A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
  uint64_t v14 = v11;
  unint64_t v15 = (v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);

  return v13(v15, v14);
}

uint64_t sub_10002A878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000698F0();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 48);
  uint64_t v16 = sub_10006A1A0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_10002A988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000698F0();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 40);
  uint64_t v16 = sub_10006A1A0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 24))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_10002AA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000698F0();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 32);
  uint64_t v16 = sub_10006A1A0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 32))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_10002ABA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000698F0();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v12 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v10 + 24);
  uint64_t v16 = sub_10006A1A0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 40))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_10002ACB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1000698F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = sub_10006A1A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v10 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  if (*(_DWORD *)(v14 + 84) <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v14 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(void *)(v7 + 64) + v15;
  if (a2 <= v18) {
    goto LABEL_27;
  }
  uint64_t v20 = ((v16 + v17 + (v19 & ~v15)) & ~v17) + *(void *)(*(void *)(v13 - 8) + 64);
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_10;
  }
  unsigned int v23 = ((a2 - v18 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    int v22 = *(_DWORD *)((char *)a1 + v20);
    if (!v22) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v23 > 0xFF)
  {
    int v22 = *(unsigned __int16 *)((char *)a1 + v20);
    if (!*(unsigned __int16 *)((char *)a1 + v20)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v23 >= 2)
  {
LABEL_10:
    int v22 = *((unsigned __int8 *)a1 + v20);
    if (!*((unsigned char *)a1 + v20)) {
      goto LABEL_27;
    }
LABEL_17:
    int v24 = (v22 - 1) << v21;
    if (v20 > 3) {
      int v24 = 0;
    }
    if (v20)
    {
      if (v20 <= 3) {
        int v25 = v20;
      }
      else {
        int v25 = 4;
      }
      switch(v25)
      {
        case 2:
          int v26 = *a1;
          break;
        case 3:
          int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v26 = *(_DWORD *)a1;
          break;
        default:
          int v26 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v26 = 0;
    }
    return v18 + (v26 | v24) + 1;
  }
LABEL_27:
  if (!v18) {
    return 0;
  }
  if (v8 == v18)
  {
    uint64_t v27 = v34;
    uint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v29 = a1;
    uint64_t v30 = v8;
LABEL_33:
    return v28(v29, v30, v27);
  }
  uint64_t v29 = (unsigned __int16 *)(((unint64_t)a1 + v19) & ~v15);
  if (v11 == v18)
  {
    uint64_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v30 = v11;
    uint64_t v27 = v9;
    goto LABEL_33;
  }
  unint64_t v32 = ((unint64_t)v29 + v16 + v17) & ~v17;
  uint64_t v33 = *(uint64_t (**)(unint64_t))(v14 + 48);

  return v33(v32);
}

void sub_10002AFEC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000698F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v36 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(v36 - 8);
  uint64_t v38 = v11;
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v10) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(void *)(sub_10006A1A0() - 8);
  uint64_t v15 = v14;
  if (*(_DWORD *)(v14 + 84) <= v13) {
    unsigned int v16 = v13;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = *(void *)(v9 + 64) + v17;
  uint64_t v19 = *(void *)(v11 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v14 + 80);
  size_t v21 = ((v19 + v20 + (v18 & ~v17)) & ~v20) + *(void *)(v14 + 64);
  if (a3 <= v16)
  {
    int v23 = 0;
    int v22 = a1;
  }
  else
  {
    int v22 = a1;
    if (v21 <= 3)
    {
      unsigned int v27 = ((a3 - v16 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v27))
      {
        int v23 = 4;
      }
      else if (v27 >= 0x100)
      {
        int v23 = 2;
      }
      else
      {
        int v23 = v27 > 1;
      }
    }
    else
    {
      int v23 = 1;
    }
  }
  if (v16 < a2)
  {
    unsigned int v24 = ~v16 + a2;
    if (v21 < 4)
    {
      int v25 = (v24 >> (8 * v21)) + 1;
      if (v21)
      {
        int v28 = v24 & ~(-1 << (8 * v21));
        bzero(v22, v21);
        if (v21 == 3)
        {
          *(_WORD *)int v22 = v28;
          v22[2] = BYTE2(v28);
        }
        else if (v21 == 2)
        {
          *(_WORD *)int v22 = v28;
        }
        else
        {
          unsigned char *v22 = v28;
        }
      }
    }
    else
    {
      bzero(v22, v21);
      *(_DWORD *)int v22 = v24;
      int v25 = 1;
    }
    switch(v23)
    {
      case 1:
        v22[v21] = v25;
        return;
      case 2:
        *(_WORD *)&v22[v21] = v25;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&v22[v21] = v25;
        return;
      default:
        return;
    }
  }
  uint64_t v26 = ~v17;
  switch(v23)
  {
    case 1:
      v22[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&v22[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x10002B39CLL);
    case 4:
      *(_DWORD *)&v22[v21] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v10 == v16)
      {
        uint64_t v29 = v37;
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v31 = v22;
        uint64_t v32 = a2;
        uint64_t v33 = v10;
LABEL_31:
        v30(v31, v32, v33, v29);
        return;
      }
      uint64_t v31 = (unsigned char *)((unint64_t)&v22[v18] & v26);
      if (v12 == v16)
      {
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
        uint64_t v32 = a2;
        uint64_t v33 = v12;
        uint64_t v29 = v36;
        goto LABEL_31;
      }
      unint64_t v34 = (unint64_t)&v31[v19 + v20] & ~v20;
      char v35 = *(void (**)(unint64_t, uint64_t))(v15 + 56);
      v35(v34, a2);
      return;
  }
}

uint64_t type metadata accessor for CTABackgroundModifier()
{
  return sub_1000216B4();
}

uint64_t sub_10002B3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10002B3E4()
{
  uint64_t result = type metadata accessor for CTABackgroundModifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10002B480(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = sub_1000698F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v28 = v4;
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v29 - 8);
  int v8 = *(_DWORD *)(v5 + 80);
  uint64_t v9 = v7;
  int v10 = *(_DWORD *)(v7 + 80);
  uint64_t v11 = sub_10006A1A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = (v10 | v8 | *(unsigned char *)(v12 + 80));
  uint64_t v15 = ~v14;
  uint64_t v16 = *(void *)(v5 + 64) + v10;
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v18 = v17 + v13;
  if (v14 > 7
    || ((v10 | v8 | *(_DWORD *)(v12 + 80)) & 0x100000) != 0
    || ((v14 + 1) & ~v14)
     + *(void *)(*(void *)(v11 - 8) + 64)
     + ((v17 + v13 + (v16 & ~(unint64_t)v10)) & ~v13) > 0x18)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    int v23 = (uint64_t *)(v21 + ((v14 + 16) & v15));
    swift_retain();
  }
  else
  {
    unint64_t v22 = ~(unint64_t)v10;
    uint64_t v27 = ~v13;
    int v23 = a1;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v24 = ((unint64_t)a1 + v14 + 1) & v15;
    uint64_t v25 = ((unint64_t)a2 + v14 + 1) & v15;
    uint64_t v31 = v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v24, v25, v28);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v16 + v24) & v22, (v16 + v25) & v22, v29);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v18 + ((v16 + v24) & v22)) & v27, (v18 + ((v16 + v25) & v22)) & v27, v31);
  }
  return v23;
}

uint64_t sub_10002B6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000698F0();
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_10006A1A0();
  uint64_t v19 = *(void *)(v10 - 8);
  uint64_t v11 = (v9 | v6 | *(_DWORD *)(v19 + 80));
  uint64_t v12 = v9;
  uint64_t v13 = *(_DWORD *)(v19 + 80);
  uint64_t v14 = (a1 + v11 + 1) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  uint64_t v15 = (*(void *)(v5 + 64) + v12 + v14) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
  uint64_t v16 = (*(void *)(v8 + 64) + v13 + v15) & ~v13;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);

  return v17(v16, v10);
}

unsigned char *sub_10002B85C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1000698F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_10006A1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

unsigned char *sub_10002BA0C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1000698F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_10006A1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

unsigned char *sub_10002BBBC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1000698F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_10006A1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

unsigned char *sub_10002BD6C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1000698F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = *(void *)(a3 + 16);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v21 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = sub_10006A1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = (v9 | v7 | *(_DWORD *)(v11 + 80));
  uint64_t v14 = (unint64_t)&a1[v13 + 1] & ~v13;
  uint64_t v15 = (unint64_t)&a2[v13 + 1] & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v14, v15, v5);
  uint64_t v16 = *(void *)(v6 + 64) + v9;
  unint64_t v17 = (v16 + v14) & ~(unint64_t)v9;
  unint64_t v18 = (v16 + v15) & ~(unint64_t)v9;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))(v17, v18, v21);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 40))((*(void *)(v8 + 64) + v12 + v17) & ~v12, (*(void *)(v8 + 64) + v12 + v18) & ~v12, v10);
  return a1;
}

uint64_t sub_10002BF1C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1000698F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v41 = v6;
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(sub_10006A1A0() - 8);
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v13 + 80);
  if (*(_DWORD *)(v13 + 84) <= v12) {
    unsigned int v16 = v12;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v17 = *(void *)(v13 + 64);
  if (v16 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(_DWORD *)(v10 + 80);
  uint64_t v20 = v15;
  uint64_t v21 = (*(_DWORD *)(v10 + 80) | *(_DWORD *)(v7 + 80) | v15);
  uint64_t v22 = *(void *)(v7 + 64) + v19;
  uint64_t v23 = *(void *)(v10 + 64) + v20;
  if (a2 <= v18) {
    goto LABEL_31;
  }
  uint64_t v24 = ((v21 + 1) & ~v21) + v17 + ((v23 + (v22 & ~v19)) & ~v20);
  char v25 = 8 * v24;
  if (v24 > 3) {
    goto LABEL_13;
  }
  unsigned int v28 = ((a2 - v18 + ~(-1 << v25)) >> v25) + 1;
  if (HIWORD(v28))
  {
    int v26 = *(_DWORD *)((char *)a1 + v24);
    if (v26) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v28 <= 0xFF)
    {
      if (v28 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v26 = *((unsigned __int8 *)a1 + v24);
      if (!*((unsigned char *)a1 + v24)) {
        goto LABEL_31;
      }
LABEL_21:
      int v29 = (v26 - 1) << v25;
      if (v24 > 3) {
        int v29 = 0;
      }
      if (v24)
      {
        if (v24 <= 3) {
          int v30 = v24;
        }
        else {
          int v30 = 4;
        }
        switch(v30)
        {
          case 2:
            int v31 = *a1;
            break;
          case 3:
            int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v31 = *(_DWORD *)a1;
            break;
          default:
            int v31 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v31 = 0;
      }
      return v18 + (v31 | v29) + 1;
    }
    int v26 = *(unsigned __int16 *)((char *)a1 + v24);
    if (*(unsigned __int16 *)((char *)a1 + v24)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v16 <= 0xFE)
  {
    unsigned int v32 = *(unsigned __int8 *)a1;
    BOOL v33 = v32 >= 2;
    int v34 = (v32 + 2147483646) & 0x7FFFFFFF;
    if (v33) {
      return (v34 + 1);
    }
    else {
      return 0;
    }
  }
  uint64_t v35 = ((unint64_t)a1 + v21 + 1) & ~v21;
  if (v8 == v16)
  {
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v37 = v8;
    uint64_t v38 = v41;
    return v36(v35, v37, v38);
  }
  uint64_t v35 = (v22 + v35) & ~v19;
  if (v11 == v16)
  {
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v37 = v11;
    uint64_t v38 = v9;
    return v36(v35, v37, v38);
  }
  uint64_t v39 = (v23 + v35) & ~v20;
  uint64_t v40 = *(uint64_t (**)(uint64_t))(v14 + 48);

  return v40(v39);
}

void sub_10002C2D8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000698F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v46 = v9;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v44 = *(void *)(a4 + 16);
  uint64_t v45 = v8;
  uint64_t v11 = *(void *)(v44 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v10) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(void *)(sub_10006A1A0() - 8);
  uint64_t v15 = v14;
  if (*(_DWORD *)(v14 + 84) <= v13) {
    unsigned int v16 = v13;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  int v17 = *(_DWORD *)(v11 + 80);
  uint64_t v18 = *(void *)(v11 + 64);
  uint64_t v19 = *(void *)(v14 + 64);
  if (v16 <= 0xFE) {
    unsigned int v20 = 254;
  }
  else {
    unsigned int v20 = v16;
  }
  uint64_t v21 = *(_DWORD *)(v14 + 80);
  uint64_t v22 = (v17 | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v14 + 80));
  uint64_t v23 = *(void *)(v9 + 64) + *(_DWORD *)(v11 + 80);
  uint64_t v24 = v18 + v21;
  size_t v25 = ((v18 + v21 + (v23 & ~(unint64_t)*(_DWORD *)(v11 + 80))) & ~v21) + v19;
  size_t v26 = v25 + ((v22 + 1) & ~v22);
  if (a3 <= v20)
  {
    int v27 = 0;
  }
  else if (v26 <= 3)
  {
    unsigned int v31 = ((a3 - v20 + ~(-1 << (8 * v26))) >> (8 * v26)) + 1;
    if (HIWORD(v31))
    {
      int v27 = 4;
    }
    else if (v31 >= 0x100)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = v31 > 1;
    }
  }
  else
  {
    int v27 = 1;
  }
  if (v20 < a2)
  {
    unsigned int v28 = ~v20 + a2;
    if (v26 < 4)
    {
      int v29 = (v28 >> (8 * v26)) + 1;
      if (v26)
      {
        int v32 = v28 & ~(-1 << (8 * v26));
        bzero(a1, v25 + ((v22 + 1) & ~v22));
        if (v26 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v25 + ((v22 + 1) & ~v22));
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v26] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v26] = v29;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)&a1[v26] = v29;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v21;
  switch(v27)
  {
    case 1:
      a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x10002C794);
    case 4:
      *(_DWORD *)&a1[v26] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if (v16 <= 0xFE)
      {
        *a1 = a2 + 1;
        return;
      }
      BOOL v33 = (unsigned char *)((unint64_t)&a1[v22 + 1] & ~v22);
      if (v16 < a2)
      {
        if (v25 <= 3) {
          int v34 = ~(-1 << (8 * v25));
        }
        else {
          int v34 = -1;
        }
        if (v25)
        {
          int v35 = v34 & (~v16 + a2);
          if (v25 <= 3) {
            int v36 = v25;
          }
          else {
            int v36 = 4;
          }
          bzero(v33, v25);
          switch(v36)
          {
            case 2:
              *(_WORD *)BOOL v33 = v35;
              break;
            case 3:
              *(_WORD *)BOOL v33 = v35;
              v33[2] = BYTE2(v35);
              break;
            case 4:
              *(_DWORD *)BOOL v33 = v35;
              break;
            default:
              *BOOL v33 = v35;
              break;
          }
        }
        return;
      }
      if (v10 == v16)
      {
        uint64_t v37 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
        unint64_t v38 = (unint64_t)v33;
        uint64_t v39 = a2;
        uint64_t v40 = v10;
        uint64_t v41 = v45;
LABEL_48:
        v37(v38, v39, v40, v41);
        return;
      }
      unint64_t v38 = (unint64_t)&v33[v23] & ~(unint64_t)v17;
      if (v12 == v16)
      {
        uint64_t v37 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        uint64_t v39 = a2;
        uint64_t v40 = v12;
        uint64_t v41 = v44;
        goto LABEL_48;
      }
      unint64_t v42 = (v24 + v38) & v30;
      uint64_t v43 = *(void (**)(unint64_t, uint64_t))(v15 + 56);
      v43(v42, a2);
      return;
  }
}

uint64_t type metadata accessor for WidgetCTAButtonSyle()
{
  return sub_1000216B4();
}

uint64_t sub_10002C7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002C828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069B60();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_100069B70();
}

uint64_t sub_10002C920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100069B60();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_100069B70();
}

uint64_t sub_10002CA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v69 = a3;
  uint64_t v70 = a1;
  uint64_t v6 = sub_1000059D8(&qword_100089980);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v56 = a2;
  uint64_t v53 = v9;
  uint64_t v52 = v10;
  uint64_t v11 = type metadata accessor for CTABackgroundModifier();
  uint64_t v58 = v6;
  uint64_t v54 = v11;
  uint64_t v12 = sub_100069870();
  uint64_t v59 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v51 - v13;
  sub_100005A1C(&qword_100089988);
  uint64_t v15 = sub_100069870();
  uint64_t v60 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v57 = (char *)v51 - v16;
  uint64_t v17 = sub_100069870();
  uint64_t v62 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v61 = (char *)v51 - v18;
  uint64_t v55 = v19;
  uint64_t v20 = sub_100069870();
  uint64_t v66 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v64 = (char *)v51 - v21;
  uint64_t v67 = v22;
  uint64_t v23 = sub_100069870();
  uint64_t v68 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v63 = (char *)v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v65 = (char *)v51 - v26;
  uint64_t v27 = (uint64_t)v4;
  if (*v4 == 1)
  {
    int v28 = 2;
    uint64_t v29 = sub_100069D50();
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v29 = sub_100069E00();
    uint64_t v31 = 0x4008000000000000;
    uint64_t v30 = sub_100069A50();
    int v28 = 0;
  }
  *(void *)uint64_t v8 = sub_100069A70();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v32 = (uint64_t)&v8[*(int *)(sub_1000059D8(&qword_100089990) + 44)];
  v51[1] = v29;
  sub_10002D1BC(v29, v30, v31, v28, v27, v53, v52, v32);
  uint64_t v33 = sub_10000CE3C(&qword_100089998, &qword_100089980);
  sub_100069FD0();
  sub_100007D0C((uint64_t)v8, &qword_100089980);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v79 = v33;
  uint64_t v80 = WitnessTable;
  uint64_t v35 = swift_getWitnessTable();
  int v36 = v57;
  sub_100069F60();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
  uint64_t v37 = sub_10000CE3C(&qword_1000899A0, &qword_100089988);
  uint64_t v77 = v35;
  uint64_t v78 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v61;
  sub_100069F50();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v15);
  sub_100069FE0();
  sub_10006A000();
  swift_release();
  uint64_t v75 = v38;
  unint64_t v76 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v40 = v55;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = v64;
  sub_100069FC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v40);
  sub_100069C30();
  sub_10006A120();
  uint64_t v73 = v41;
  char v74 = &protocol witness table for _ShadowEffect;
  uint64_t v43 = v67;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v63;
  sub_100069F10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v43);
  uint64_t v71 = v44;
  uint64_t v72 = &protocol witness table for _ScaleEffect;
  swift_getWitnessTable();
  uint64_t v46 = v68;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  char v48 = v65;
  v47(v65, v45, v23);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v45, v23);
  v47(v69, v48, v23);
  return ((uint64_t (*)(char *, uint64_t))v49)(v48, v23);
}

uint64_t sub_10002D1BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v98 = a7;
  uint64_t v97 = a6;
  uint64_t v99 = a5;
  int v89 = a4;
  *((void *)&v88 + 1) = a3;
  *(void *)&long long v88 = a2;
  uint64_t v87 = a1;
  uint64_t v77 = a8;
  uint64_t v76 = sub_1000059D8(&qword_1000899A8);
  __chkstk_darwin(v76);
  unint64_t v102 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000698F0();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100069DE0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100069C10();
  uint64_t v14 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000059D8(&qword_1000899B0);
  __chkstk_darwin(v81);
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000059D8(&qword_1000899B8);
  uint64_t v86 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000059D8(&qword_1000899C0);
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v80 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000059D8(&qword_1000899C8);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000059D8(&qword_1000899D0) - 8;
  __chkstk_darwin(v82);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000059D8(&qword_1000899D8);
  __chkstk_darwin(v93);
  uint64_t v90 = (uint64_t)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000059D8(&qword_1000899E0);
  uint64_t v92 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v91 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000059D8(&qword_1000899E8);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v101 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000059D8(&qword_1000899F0);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069C20();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Font.Leading.tight(_:), v10);
  uint64_t v31 = sub_100069DF0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v78;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v78);
  uint64_t v34 = v81;
  uint64_t v35 = (uint64_t *)&v18[*(int *)(v81 + 36)];
  uint64_t *v35 = KeyPath;
  v35[1] = v31;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v33);
  uint64_t v36 = (uint64_t)v26;
  unint64_t v37 = sub_10002EAE4();
  uint64_t v38 = v79;
  sub_100069FB0();
  sub_100007D0C((uint64_t)v18, &qword_1000899B0);
  long long v105 = v88;
  LOBYTE(v106) = v89;
  uint64_t v103 = v34;
  unint64_t v104 = v37;
  swift_getOpaqueTypeConformance2();
  sub_10002EBB4();
  uint64_t v39 = v80;
  uint64_t v40 = v84;
  sub_100069EE0();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v38, v40);
  uint64_t v41 = sub_100069FF0();
  uint64_t v42 = v83;
  uint64_t v43 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v24, v39, v85);
  *(void *)&v24[*(int *)(v22 + 44)] = v41;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v43);
  LOBYTE(v41) = sub_100069CF0();
  sub_100069750();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  sub_1000185F8((uint64_t)v24, v36, &qword_1000899C8);
  uint64_t v52 = v36 + *(int *)(v82 + 44);
  *(unsigned char *)uint64_t v52 = v41;
  *(void *)(v52 + 8) = v45;
  *(void *)(v52 + 16) = v47;
  *(void *)(v52 + 24) = v49;
  *(void *)(v52 + 32) = v51;
  *(unsigned char *)(v52 + 40) = 0;
  sub_100007D0C((uint64_t)v24, &qword_1000899C8);
  type metadata accessor for WidgetCTAButtonSyle();
  uint64_t v53 = v94;
  sub_1000698D0();
  sub_1000698C0();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v96);
  sub_10006A0E0();
  sub_1000698B0();
  uint64_t v54 = v90;
  sub_1000185F8(v36, v90, &qword_1000899D0);
  uint64_t v55 = v93;
  uint64_t v56 = (_OWORD *)(v54 + *(int *)(v93 + 36));
  long long v57 = v110;
  v56[4] = v109;
  v56[5] = v57;
  v56[6] = v111;
  long long v58 = v106;
  *uint64_t v56 = v105;
  v56[1] = v58;
  long long v59 = v108;
  v56[2] = v107;
  v56[3] = v59;
  sub_100007D0C(v36, &qword_1000899D0);
  uint64_t v60 = sub_10002EC38(&qword_100089A10, &qword_1000899D8, (void (*)(void))sub_10002EC08);
  uint64_t v61 = v91;
  sub_100069EF0();
  sub_100007D0C(v54, &qword_1000899D8);
  uint64_t v103 = v55;
  unint64_t v104 = v60;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v63 = v101;
  uint64_t v64 = v100;
  sub_100069E70();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v61, v64);
  uint64_t v65 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v66 = sub_100069850();
  uint64_t v67 = (uint64_t)v102;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v102, v65, v66);
  sub_10002EDD8(&qword_100089A38, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_10006A2A0();
  if (result)
  {
    uint64_t v103 = v64;
    unint64_t v104 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_100089A40, &qword_1000899A8);
    uint64_t v69 = v71;
    uint64_t v70 = v75;
    sub_100069F40();
    sub_100007D0C(v67, &qword_1000899A8);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v63, v70);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v72 + 32))(v77, v69, v73);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002DEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v76 = a3;
  swift_getWitnessTable();
  uint64_t v5 = sub_100069BA0();
  sub_100005A1C(&qword_100089A48);
  uint64_t v6 = sub_100069870();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v66 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v60 - v9;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = sub_1000698F0();
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = sub_10002EDD8(&qword_100089A50, (void (*)(uint64_t))&type metadata accessor for ButtonBorderShape);
  uint64_t v69 = v10;
  uint64_t v93 = v10;
  uint64_t v94 = v11;
  uint64_t v62 = v11;
  uint64_t v68 = v12;
  uint64_t v95 = v12;
  uint64_t v96 = v13;
  uint64_t v61 = v13;
  uint64_t v77 = sub_100069C90();
  uint64_t v78 = v5;
  uint64_t v14 = sub_100069870();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v63 = (char *)&v60 - v18;
  uint64_t v19 = sub_10006A1A0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v70 = v14;
  uint64_t v71 = v6;
  uint64_t v75 = sub_100069B80();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v60 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v25, v3 + *(int *)(a2 + 40), v19);
  sub_10006A190();
  sub_10002EDD8((unint64_t *)&qword_100089720, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  LOBYTE(v6) = sub_10006A2A0();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v23, v19);
  uint64_t v28 = ((uint64_t (*)(char *, uint64_t))v27)(v25, v19);
  if (v6)
  {
    __chkstk_darwin(v28);
    uint64_t v29 = v68;
    *(&v60 - 4) = v69;
    *(&v60 - 3) = v29;
    uint64_t v59 = v3;
    sub_10006A0E0();
    sub_1000059D8(&qword_100089A60);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v31 = sub_100005A1C(&qword_100089A68);
    uint64_t v32 = sub_10002EC38(&qword_100089A70, &qword_100089A68, (void (*)(void))sub_10002EE2C);
    uint64_t v93 = v31;
    uint64_t v94 = v32;
    swift_getOpaqueTypeConformance2();
    uint64_t v33 = (uint64_t)v66;
    sub_100069EB0();
    uint64_t v34 = sub_10000CE3C(&qword_100089A58, &qword_100089A48);
    uint64_t v81 = WitnessTable;
    uint64_t v82 = v34;
    uint64_t v35 = v71;
    swift_getWitnessTable();
    uint64_t v36 = v67;
    unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v38 = v65;
    v37(v65, v33, v35);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v39(v33, v35);
    v37((char *)v33, (uint64_t)v38, v35);
    uint64_t v40 = swift_getWitnessTable();
    uint64_t v79 = WitnessTable;
    uint64_t v80 = v40;
    uint64_t v41 = v70;
    swift_getWitnessTable();
    uint64_t v42 = v73;
    sub_10002C920(v33, v41, v35);
    v39(v33, v35);
    v39((uint64_t)v38, v35);
  }
  else
  {
    uint64_t v43 = swift_getWitnessTable();
    uint64_t v59 = v61;
    sub_100069EC0();
    uint64_t v44 = swift_getWitnessTable();
    uint64_t v91 = v43;
    uint64_t v92 = v44;
    uint64_t v45 = v70;
    uint64_t v72 = swift_getWitnessTable();
    uint64_t v46 = v64;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    uint64_t v48 = v63;
    v47(v63, v17, v45);
    uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
    v49(v17, v45);
    v47(v17, v48, v45);
    uint64_t v50 = sub_10000CE3C(&qword_100089A58, &qword_100089A48);
    uint64_t v89 = v43;
    uint64_t v90 = v50;
    swift_getWitnessTable();
    uint64_t v42 = v73;
    sub_10002C828((uint64_t)v17, v45);
    v49(v17, v45);
    v49(v48, v45);
  }
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v87 = v51;
  uint64_t v88 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = sub_10000CE3C(&qword_100089A58, &qword_100089A48);
  uint64_t v85 = v51;
  uint64_t v86 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v83 = v53;
  uint64_t v84 = v55;
  uint64_t v56 = v75;
  swift_getWitnessTable();
  uint64_t v57 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v76, v42, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v42, v56);
}

uint64_t sub_10002E838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v3 = sub_1000059D8(&qword_100089A90);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_100089A80);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000059D8(&qword_100089A68);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100069FE0();
  uint64_t v15 = sub_1000698F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v6, a1, v15);
  *(_WORD *)&v6[*(int *)(v4 + 44)] = 256;
  sub_1000185F8((uint64_t)v6, (uint64_t)v10 + *(int *)(v8 + 44), &qword_100089A90);
  uint64_t *v10 = v14;
  sub_100007D0C((uint64_t)v6, &qword_100089A90);
  sub_1000185F8((uint64_t)v10, (uint64_t)v13, &qword_100089A80);
  *(void *)&v13[*(int *)(v11 + 36)] = 0x3FC999999999999ALL;
  sub_100007D0C((uint64_t)v10, &qword_100089A80);
  sub_10002EC38(&qword_100089A70, &qword_100089A68, (void (*)(void))sub_10002EE2C);
  sub_100069E70();
  return sub_100007D0C((uint64_t)v13, &qword_100089A68);
}

uint64_t sub_10002EA78()
{
  return sub_100069800();
}

uint64_t sub_10002EA98()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10002EAE4()
{
  unint64_t result = qword_1000899F8;
  if (!qword_1000899F8)
  {
    sub_100005A1C(&qword_1000899B0);
    sub_10002EDD8(&qword_100089A00, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000899F8);
  }
  return result;
}

unint64_t sub_10002EBB4()
{
  unint64_t result = qword_100089A08;
  if (!qword_100089A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089A08);
  }
  return result;
}

uint64_t sub_10002EC08()
{
  return sub_10002EC38(&qword_100089A18, &qword_1000899D0, (void (*)(void))sub_10002ECB4);
}

uint64_t sub_10002EC38(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005A1C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002ECB4()
{
  unint64_t result = qword_100089A20;
  if (!qword_100089A20)
  {
    sub_100005A1C(&qword_1000899C8);
    sub_100005A1C(&qword_1000899B8);
    sub_100005A1C(&qword_1000899B0);
    sub_10002EAE4();
    swift_getOpaqueTypeConformance2();
    sub_10002EBB4();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_100089A28, &qword_100089A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089A20);
  }
  return result;
}

uint64_t sub_10002EDD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002EE20@<X0>(uint64_t a1@<X8>)
{
  return sub_10002E838(*(void *)(v1 + 32), a1);
}

unint64_t sub_10002EE2C()
{
  unint64_t result = qword_100089A78;
  if (!qword_100089A78)
  {
    sub_100005A1C(&qword_100089A80);
    sub_10000CE3C(&qword_100089A88, &qword_100089A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089A78);
  }
  return result;
}

uint64_t sub_10002EECC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10002F0B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10002F298()
{
  return sub_10000CE3C(&qword_100089AA8, &qword_100089AB0);
}

uint64_t sub_10002F2D4()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_100069460();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000692B0();
  sub_10000CD24(v10, qword_100092B68);
  sub_10000CCEC(v10, (uint64_t)qword_100092B68);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000692A0();
}

uint64_t sub_10002F5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E20);
  __chkstk_darwin(v1 - 8);
  uint64_t v28 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v23 = sub_100069470();
  uint64_t v11 = *(void *)(v23 - 8);
  uint64_t v12 = __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v24 = (char *)&v22 - v14;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v22 = v5;
  v16(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  uint64_t v17 = v27;
  sub_100069480();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v23);
  uint64_t v18 = v28;
  sub_100069160();
  uint64_t v19 = sub_100069170();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_1000059D8(&qword_100088E28);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10006BB40;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v20 = v22;
  v16(v8, v15, v22);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v20);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v20);
  sub_100069480();
  return sub_100069180();
}

uint64_t sub_10002FB84(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092B80);
}

uint64_t sub_10002FBA8()
{
  uint64_t v0 = sub_1000059D8(&qword_100088E90);
  sub_10000CD24(v0, qword_100092B98);
  uint64_t v1 = sub_10000CCEC(v0, (uint64_t)qword_100092B98);
  sub_1000690E0();
  uint64_t v2 = sub_1000690F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10002FC60()
{
  uint64_t result = swift_getKeyPath();
  qword_100092BB0 = result;
  return result;
}

uint64_t sub_10002FC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_1000059D8(&qword_100088E60);
  v3[9] = swift_task_alloc();
  sub_1000059D8(&qword_100088E68);
  v3[10] = swift_task_alloc();
  sub_1000059D8(&qword_100089C40);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_100068EB0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_1000059D8(&qword_100089C48);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_10002FE4C, 0, 0);
}

uint64_t sub_10002FE4C()
{
  sub_100068F00();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_100030F24();
  *uint64_t v1 = v0;
  v1[1] = sub_10002FF20;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_100030518, 0, &type metadata for SaveToPhotosEntity, v2);
}

uint64_t sub_10002FF20()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003001C, 0, 0);
}

uint64_t sub_10003001C()
{
  sub_100068F00();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_100068F00();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_100088970 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100092BB0;
  *(void *)(v0 + 168) = qword_100092BB0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_10000CE3C(&qword_100089C28, &qword_100089C30);
  *uint64_t v3 = v0;
  v3[1] = sub_100030174;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_100030174()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000928C;
  }
  else {
    uint64_t v2 = sub_1000302C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000302C8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_100068F00();
  uint64_t v7 = sub_100069290();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000692C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_10001B70C();
  sub_100031138();
  sub_100068E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_100068EA0();
  sub_100068EC0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10003051C()
{
  uint64_t v0 = sub_1000059D8(&qword_100089C50);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100088970 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100069150();
  swift_release();
  sub_100031138();
  sub_10000CE3C(&qword_100089C58, &qword_100089C50);
  sub_100069140();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100030684()
{
  if (qword_100088970 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1000306E4()
{
  unint64_t result = qword_100089AB8;
  if (!qword_100089AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089AB8);
  }
  return result;
}

unint64_t sub_10003073C()
{
  unint64_t result = qword_100089AC0;
  if (!qword_100089AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089AC0);
  }
  return result;
}

uint64_t sub_100030790()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000307C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100031D48(a1, a2, a3, (void (*)(void))sub_10001B70C);
}

uint64_t sub_1000307DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088960, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092B80, a1);
}

uint64_t sub_100030814@<X0>(uint64_t a1@<X8>)
{
  if (qword_100088968 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000059D8(&qword_100088E90);
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092B98);

  return sub_10000CDA8(v3, a1);
}

uint64_t sub_100030890(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100006638;
  return sub_10002FC88(a1, v5, v4);
}

uint64_t sub_10003093C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100032910();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100030964()
{
  return 0xD000000000000023;
}

unint64_t sub_100030984()
{
  unint64_t result = qword_100089AD0;
  if (!qword_100089AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089AD0);
  }
  return result;
}

unint64_t sub_1000309DC()
{
  unint64_t result = qword_100089AD8;
  if (!qword_100089AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089AD8);
  }
  return result;
}

uint64_t sub_100030A30(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100030A50, 0, 0);
}

uint64_t sub_100030A50()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  uint64_t v4 = *(unsigned __int8 **)(v0 + 16);
  NSString v5 = sub_10006A2D0();
  unsigned __int8 v6 = [v3 BOOLForKey:v5];

  *uint64_t v4 = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100030B74(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100030B98, 0, 0);
}

uint64_t sub_100030B98()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  Class isa = sub_10006A370().super.super.isa;
  NSString v5 = sub_10006A2D0();
  [v3 setValue:isa forKey:v5];

  unsigned __int8 v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100030CC4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_100089C10 + dword_100089C10);
  NSString v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *NSString v2 = v1;
  v2[1] = sub_10000CFAC;
  return v4();
}

unint64_t sub_100030D6C()
{
  unint64_t result = qword_100089AE8;
  if (!qword_100089AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089AE8);
  }
  return result;
}

uint64_t sub_100030DC0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000313C8();
  *uint64_t v4 = v2;
  v4[1] = sub_100009E88;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100030E74()
{
  unint64_t result = qword_100089AF8;
  if (!qword_100089AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089AF8);
  }
  return result;
}

unint64_t sub_100030ECC()
{
  unint64_t result = qword_100089B00;
  if (!qword_100089B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B00);
  }
  return result;
}

unint64_t sub_100030F24()
{
  unint64_t result = qword_100089B08[0];
  if (!qword_100089B08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100089B08);
  }
  return result;
}

uint64_t sub_100030F78(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000313C8();
  void *v5 = v2;
  v5[1] = sub_10000A158;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10003102C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000313C8();
  *uint64_t v4 = v2;
  v4[1] = sub_10000CFAC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1000310E0()
{
  unint64_t result = qword_100089B20;
  if (!qword_100089B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B20);
  }
  return result;
}

unint64_t sub_100031138()
{
  unint64_t result = qword_100089B28;
  if (!qword_100089B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B28);
  }
  return result;
}

unint64_t sub_100031190()
{
  unint64_t result = qword_100089B30;
  if (!qword_100089B30)
  {
    sub_100005A1C(qword_100089B38);
    sub_100031138();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B30);
  }
  return result;
}

uint64_t sub_100031204(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100030D6C();
  void *v5 = v2;
  v5[1] = sub_100006434;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_1000312BC()
{
  unint64_t result = qword_100089B50;
  if (!qword_100089B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B50);
  }
  return result;
}

unint64_t sub_100031314()
{
  unint64_t result = qword_100089B58;
  if (!qword_100089B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B58);
  }
  return result;
}

unint64_t sub_10003136C()
{
  unint64_t result = qword_100089B60;
  if (!qword_100089B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B60);
  }
  return result;
}

unint64_t sub_1000313C8()
{
  unint64_t result = qword_100089B68;
  if (!qword_100089B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B68);
  }
  return result;
}

unint64_t sub_100031420()
{
  unint64_t result = qword_100089B70;
  if (!qword_100089B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B70);
  }
  return result;
}

uint64_t sub_100031474(uint64_t a1)
{
  unint64_t v2 = sub_100030F24();

  return _EntityURLRepresentation.init(_:)(0xD00000000000004CLL, 0x8000000100076900, a1, v2);
}

unint64_t sub_1000314D4()
{
  unint64_t result = qword_100089B78;
  if (!qword_100089B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B78);
  }
  return result;
}

unint64_t sub_10003152C()
{
  unint64_t result = qword_100089B80;
  if (!qword_100089B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B80);
  }
  return result;
}

unint64_t sub_100031584()
{
  unint64_t result = qword_100089B88;
  if (!qword_100089B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089B88);
  }
  return result;
}

uint64_t sub_1000315D8@<X0>(uint64_t *a1@<X8>)
{
  sub_1000309DC();
  uint64_t result = sub_100068EE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100031618()
{
  sub_100033524();
  uint64_t v2 = sub_100069210();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000CD88(v3, v0, v2, v1);
}

uint64_t sub_1000316AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088958, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100092B68, a1);
}

uint64_t sub_1000316E4()
{
  return sub_10000CE3C(&qword_100089B98, &qword_100089BA0);
}

uint64_t sub_100031720(uint64_t a1)
{
  unint64_t v2 = sub_100030F24();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100031770()
{
  unint64_t result = qword_100089BA8;
  if (!qword_100089BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089BA8);
  }
  return result;
}

uint64_t sub_1000317C8(uint64_t a1)
{
  unint64_t v2 = sub_100031584();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100031818()
{
  unint64_t result = qword_100089BB0;
  if (!qword_100089BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089BB0);
  }
  return result;
}

uint64_t sub_10003186C(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092BB8);
}

uint64_t sub_100031890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100069470();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_100069100();
  uint64_t v13 = sub_1000690F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

unint64_t sub_100031B8C()
{
  unint64_t result = qword_100089BB8;
  if (!qword_100089BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089BB8);
  }
  return result;
}

uint64_t sub_100031BE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10003347C();
  unint64_t v5 = sub_100033524();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100031C48()
{
  uint64_t v0 = qword_100089A98;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100031C84()
{
  unint64_t result = qword_100089BC0;
  if (!qword_100089BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089BC0);
  }
  return result;
}

unint64_t sub_100031CDC()
{
  unint64_t result = qword_100089BC8;
  if (!qword_100089BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089BC8);
  }
  return result;
}

uint64_t sub_100031D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100031D48(a1, a2, a3, (void (*)(void))sub_100031B8C);
}

uint64_t sub_100031D48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100031D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088978, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092BB8, a1);
}

uint64_t sub_100031DD8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10003347C();
  unint64_t v7 = sub_1000334D0();
  unint64_t v8 = sub_100033524();
  void *v5 = v2;
  v5[1] = sub_10000B360;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100031EAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100033034();
  *a1 = result;
  return result;
}

uint64_t sub_100031ED4(uint64_t a1)
{
  unint64_t v2 = sub_100031B8C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SaveToPhotosIntent()
{
  return &type metadata for SaveToPhotosIntent;
}

ValueMetadata *type metadata accessor for SaveToPhotosEntity.SaveToPhotosQuery()
{
  return &type metadata for SaveToPhotosEntity.SaveToPhotosQuery;
}

ValueMetadata *type metadata accessor for SaveToPhotosEntity()
{
  return &type metadata for SaveToPhotosEntity;
}

ValueMetadata *type metadata accessor for SaveToPhotosEntity.UpdateIntent_value()
{
  return &type metadata for SaveToPhotosEntity.UpdateIntent_value;
}

uint64_t sub_100031F50()
{
  return sub_10000CE3C(&qword_100089BD8, &qword_100089BE0);
}

uint64_t sub_100031F8C()
{
  return sub_10000CE3C(&qword_100089BE8, &qword_100089BE0);
}

uint64_t sub_100031FC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E98);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000059D8(&qword_100088EA0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_100088EA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000059D8(&qword_100088EB0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1000309DC();
  sub_10006A1D0();
  sub_100069A80();
  uint64_t v16 = sub_10000CE3C(&qword_100088EB8, &qword_100088E98);
  sub_100069B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_100069A80();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_100069AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_100069B50();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_100069B00();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_100032484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_100032698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_100032910()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100069200();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000059D8(&qword_100088DE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_100069470();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000059D8(&qword_100089BF0);
  sub_100069450();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_100068EB0();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100030F24();
  uint64_t v19 = v23;
  uint64_t v24 = sub_100068F30();
  sub_1000059D8(&qword_100088E00);
  sub_100069450();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_10006A360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_100068F40();
  return v24;
}

uint64_t sub_100032D50()
{
  uint64_t v1 = sub_100069460();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_100069660();
  v0[5] = swift_task_alloc();
  sub_10006A2C0();
  v0[6] = swift_task_alloc();
  sub_100069470();
  v0[7] = swift_task_alloc();
  return _swift_task_switch(sub_100032E90, 0, 0);
}

uint64_t sub_100032E90()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  sub_1000059D8(&qword_100089AB0);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  sub_10000CE3C(&qword_100089C28, &qword_100089C30);
  uint64_t v4 = sub_1000692E0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_100033034()
{
  uint64_t v0 = sub_100069200();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000059D8(&qword_100088DE8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100069460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100069660();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_10006A2C0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_100069470();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_1000059D8(&qword_100089BF0);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_100068EB0();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_100030F24();
  return sub_100068F30();
}

unint64_t sub_10003347C()
{
  unint64_t result = qword_100089BF8;
  if (!qword_100089BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089BF8);
  }
  return result;
}

unint64_t sub_1000334D0()
{
  unint64_t result = qword_100089C00;
  if (!qword_100089C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089C00);
  }
  return result;
}

unint64_t sub_100033524()
{
  unint64_t result = qword_100089C08;
  if (!qword_100089C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089C08);
  }
  return result;
}

uint64_t sub_100033578@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for SaveToPhotosToggleControl()
{
  return &type metadata for SaveToPhotosToggleControl;
}

uint64_t sub_100033594()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_1000335B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000059D8(&qword_100088C28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10006A1C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_100069600();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
    uint64_t v14 = *(int *)(started + 20);
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    *((_DWORD *)v15 + 2) = *((_DWORD *)v16 + 2);
    *(void *)uint64_t v15 = *(void *)v16;
    uint64_t v17 = *((void *)v16 + 3);
    *((void *)v15 + 2) = *((void *)v16 + 2);
    *((void *)v15 + 3) = v17;
    uint64_t v18 = *((void *)v16 + 5);
    *((void *)v15 + 4) = *((void *)v16 + 4);
    *((void *)v15 + 5) = v18;
    uint64_t v19 = *(int *)(started + 24);
    __dst = &v10[v19];
    uint64_t v27 = started;
    uint64_t v20 = &v11[v19];
    uint64_t v21 = sub_10006A250();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = sub_1000059D8(&qword_100088F10);
      memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    v10[*(int *)(v27 + 28)] = v11[*(int *)(v27 + 28)];
  }
  return a1;
}

uint64_t sub_10003385C(uint64_t a1, uint64_t a2)
{
  sub_1000059D8(&qword_100088C28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10006A1C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + *(int *)(started + 24);
  uint64_t v9 = sub_10006A250();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

void *sub_1000339F8(void *a1, void *a2, uint64_t a3)
{
  sub_1000059D8(&qword_100088C28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006A1C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v25 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v12 = started[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  *((_DWORD *)v13 + 2) = *((_DWORD *)v14 + 2);
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 3);
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = v15;
  uint64_t v16 = *((void *)v14 + 5);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = v16;
  uint64_t v17 = started[6];
  __dst = &v8[v17];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = sub_10006A250();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    uint64_t v22 = sub_1000059D8(&qword_100088F10);
    memcpy(__dst, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  v8[started[7]] = v9[started[7]];
  return v25;
}

void *sub_100033C58(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100088C28);
    sub_1000059D8(&qword_100088C28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10006A1C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v25 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v12 = started[5];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  LOBYTE(v12) = v9[v12 + 8];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v12;
  v13[9] = v14[9];
  v13[10] = v14[10];
  v13[11] = v14[11];
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = *((void *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = *((void *)v14 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = started[6];
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  uint64_t v18 = sub_10006A250();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_11;
  }
  if (v22)
  {
LABEL_11:
    uint64_t v23 = sub_1000059D8(&qword_100088F10);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_12:
  uint64_t result = v25;
  v8[started[7]] = v9[started[7]];
  return result;
}

char *sub_100033F5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100088C28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10006A1C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v13 = started[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  uint64_t v17 = started[6];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  uint64_t v20 = sub_10006A250();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_1000059D8(&qword_100088F10);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v9[started[7]] = v10[started[7]];
  return a1;
}

char *sub_100034188(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100088C28);
    uint64_t v6 = sub_1000059D8(&qword_100088C28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10006A1C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v28 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v13 = started[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  *((_DWORD *)v14 + 2) = *(_DWORD *)&v10[v13 + 8];
  *(void *)uint64_t v14 = *(void *)&v10[v13];
  uint64_t v16 = *(void *)&v10[v13 + 24];
  *((void *)v14 + 2) = *(void *)&v10[v13 + 16];
  *((void *)v14 + 3) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v15 + 5);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *((void *)v14 + 5) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = started[6];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  uint64_t v21 = sub_10006A250();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_10;
  }
  if (v25)
  {
LABEL_10:
    uint64_t v26 = sub_1000059D8(&qword_100088F10);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_11:
  uint64_t result = v28;
  v9[started[7]] = v10[started[7]];
  return result;
}

uint64_t sub_10003445C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100034470);
}

uint64_t sub_100034470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100089C60);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 48);
    uint64_t v12 = started;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10003456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100034580);
}

uint64_t sub_100034580(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000059D8(&qword_100089C60);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56);
    uint64_t v14 = started;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for StartWritingWidgetView()
{
  uint64_t result = qword_100089CC0;
  if (!qword_100089CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000346D4()
{
  sub_10003479C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StartWritingWidgetTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10003479C()
{
  if (!qword_100089CD0)
  {
    sub_10006A1C0();
    unint64_t v0 = sub_1000697C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100089CD0);
    }
  }
}

uint64_t sub_1000347F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100034810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v2 = sub_1000059D8(&qword_100088BE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v55 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10006A1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = sub_1000059D8(&qword_1000895B8);
  __chkstk_darwin(v11 - 8);
  uint64_t v58 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v47);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000059D8(&qword_100089D00);
  __chkstk_darwin(v48);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000059D8(&qword_100089D08);
  uint64_t v53 = *(void *)(v17 - 8);
  uint64_t v54 = v17;
  __chkstk_darwin(v17);
  uint64_t v52 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000059D8(&qword_100089D10);
  __chkstk_darwin(v50);
  uint64_t v51 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v16;
  sub_100034F3C((uint64_t)v16);
  uint64_t v57 = v1;
  sub_10003613C(&qword_100088C28, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v10);
  uint64_t v20 = *(void (**)(void))(v5 + 104);
  unsigned int v46 = enum case for WidgetFamily.accessoryCircular(_:);
  uint64_t v45 = (void (*)(char *, void, uint64_t))v20;
  v20(v8);
  sub_100037054(&qword_1000897E0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  char v21 = sub_10006A2A0();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v8, v4);
  v22(v10, v4);
  if (v21)
  {
    uint64_t v23 = 1;
  }
  else
  {
    sub_10003613C(&qword_100088C28, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, v58);
    uint64_t v23 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v58, v23, 1, v4);
  uint64_t v24 = v57;
  sub_10003613C(&qword_100088C28, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v10);
  v45(v8, v46, v4);
  char v25 = sub_10006A2A0();
  v22(v8, v4);
  v22(v10, v4);
  if (v25)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v28 = v24 + *(int *)(type metadata accessor for StartWritingWidgetView() + 20);
    uint64_t v29 = v28 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20);
    uint64_t v26 = *(void *)(v29 + 16);
    uint64_t v27 = *(void *)(v29 + 24);
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v31 = &v14[v30[6]];
  uint64_t v32 = sub_100069600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  sub_100010A78(v58, (uint64_t)v14, &qword_1000895B8);
  uint64_t v33 = &v14[v30[5]];
  *(void *)uint64_t v33 = v26;
  *((void *)v33 + 1) = v27;
  v14[v30[7]] = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = v55;
  sub_10001BDB8(v55);
  sub_100037234((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  sub_1000364A4(&qword_100089D18, &qword_100089D00, (void (*)(void))sub_100036468, (void (*)(void))sub_100036708);
  uint64_t v35 = v52;
  uint64_t v36 = (uint64_t)v49;
  sub_100069E80();
  sub_100007D0C(v34, &qword_100088BE8);
  sub_100007D0C(v36, &qword_100089D00);
  uint64_t v37 = v24 + *(int *)(type metadata accessor for StartWritingWidgetView() + 20);
  LOBYTE(v34) = *(unsigned char *)(v37 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 28));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 16) = v34;
  uint64_t v41 = v53;
  uint64_t v40 = v54;
  uint64_t v42 = (uint64_t)v51;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v51, v35, v54);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(v50 + 36));
  uint64_t *v43 = KeyPath;
  v43[1] = (uint64_t)sub_100036828;
  v43[2] = v39;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v40);
  return sub_100010A78(v42, v56, &qword_100089D10);
}

uint64_t sub_100034F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t started = type metadata accessor for StartWritingWidgetView();
  __chkstk_darwin(started);
  uint64_t v56 = (uint64_t)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000059D8(&qword_100089D90);
  __chkstk_darwin(v64);
  uint64_t v65 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000059D8(&qword_100089D78);
  __chkstk_darwin(v82);
  uint64_t v67 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for StartWritingWidgetSystemMediumView();
  uint64_t v5 = __chkstk_darwin(v63);
  uint64_t v62 = (uint64_t *)((char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)&v56 - v7;
  uint64_t v8 = type metadata accessor for StartWritingWidgetTimelineEntry();
  __chkstk_darwin(v8 - 8);
  uint64_t v75 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for StartWritingWidgetSystemSmallView();
  uint64_t v10 = __chkstk_darwin(v70);
  uint64_t v12 = (uint64_t *)((char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v68 = (uint64_t)&v56 - v13;
  uint64_t v74 = sub_1000059D8(&qword_100089D98);
  __chkstk_darwin(v74);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000059D8(&qword_100089D58);
  __chkstk_darwin(v73);
  uint64_t v76 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for StartWritingWidgetAccessoryRectangularView();
  __chkstk_darwin(v69);
  uint64_t v58 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000059D8(&qword_100089DA0);
  __chkstk_darwin(v81);
  uint64_t v78 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000059D8(&qword_100089DA8);
  __chkstk_darwin(v71);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000059D8(&qword_100089DB0);
  __chkstk_darwin(v59);
  uint64_t v60 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000059D8(&qword_100089D38);
  __chkstk_darwin(v72);
  uint64_t v61 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000059D8(&qword_100089D28);
  __chkstk_darwin(v80);
  uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for StartWritingWidgetAccessoryInlineView();
  __chkstk_darwin(v25);
  uint64_t v57 = (uint64_t)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10006A1C0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v56 - v32;
  sub_10003613C(&qword_100088C28, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)&v56 - v32);
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v33, v27);
  if (v34 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v35 = v75;
    sub_1000371CC(v1 + *(int *)(started + 20), v75, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
    uint64_t *v12 = swift_getKeyPath();
    sub_1000059D8(&qword_100089110);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v70;
    uint64_t v37 = (uint64_t *)((char *)v12 + *(int *)(v70 + 20));
    *uint64_t v37 = swift_getKeyPath();
    sub_1000059D8(&qword_100089118);
    swift_storeEnumTagMultiPayload();
    sub_100037164(v35, (uint64_t)v12 + *(int *)(v36 + 24), (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
    uint64_t v38 = v68;
    sub_100037164((uint64_t)v12, v68, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetSystemSmallView);
    sub_1000371CC(v38, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetSystemSmallView);
    swift_storeEnumTagMultiPayload();
    sub_100037054(&qword_100089D60, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetAccessoryRectangularView);
    sub_100037054(&qword_100089D68, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetSystemSmallView);
    uint64_t v39 = (uint64_t)v76;
    sub_100069B70();
    sub_1000185F8(v39, (uint64_t)v20, &qword_100089D58);
    swift_storeEnumTagMultiPayload();
    sub_10003652C();
    sub_10003662C();
    sub_100069B70();
    sub_100007D0C(v39, &qword_100089D58);
    sub_1000185F8((uint64_t)v24, v78, &qword_100089D28);
    swift_storeEnumTagMultiPayload();
    sub_100036468();
    sub_100036708();
    sub_100069B70();
    sub_100007D0C((uint64_t)v24, &qword_100089D28);
    uint64_t v40 = type metadata accessor for StartWritingWidgetSystemSmallView;
    uint64_t v41 = v38;
  }
  else
  {
    uint64_t v42 = (uint64_t)v76;
    if (v34 == enum case for WidgetFamily.systemMedium(_:))
    {
      uint64_t v43 = v75;
      sub_1000371CC(v1 + *(int *)(started + 20), v75, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v45 = (uint64_t)v62;
      *uint64_t v62 = KeyPath;
      sub_1000059D8(&qword_100089110);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = v63;
      uint64_t v47 = (uint64_t *)(v45 + *(int *)(v63 + 20));
      *uint64_t v47 = swift_getKeyPath();
      sub_1000059D8(&qword_100089118);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = (uint64_t *)(v45 + *(int *)(v46 + 24));
      uint64_t *v48 = swift_getKeyPath();
      sub_1000059D8(&qword_100089120);
      swift_storeEnumTagMultiPayload();
      sub_100037164(v43, v45 + *(int *)(v46 + 28), (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
      uint64_t v49 = v66;
      sub_100037164(v45, v66, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetSystemMediumView);
      sub_1000371CC(v49, v65, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetSystemMediumView);
      swift_storeEnumTagMultiPayload();
      sub_100037054(&qword_100089D80, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetSystemMediumView);
      uint64_t v50 = (uint64_t)v67;
      sub_100069B70();
      sub_1000185F8(v50, v78, &qword_100089D78);
      swift_storeEnumTagMultiPayload();
      sub_100036468();
      sub_100036708();
      sub_100069B70();
      sub_100007D0C(v50, &qword_100089D78);
      uint64_t v51 = type metadata accessor for StartWritingWidgetSystemMediumView;
    }
    else
    {
      if (v34 == enum case for WidgetFamily.accessoryCircular(_:))
      {
        swift_storeEnumTagMultiPayload();
        sub_100037054(&qword_100089D40, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetAccessoryInlineView);
        sub_1000365D8();
        uint64_t v53 = (uint64_t)v61;
        sub_100069B70();
        sub_1000185F8(v53, (uint64_t)v20, &qword_100089D38);
        swift_storeEnumTagMultiPayload();
        sub_10003652C();
        sub_10003662C();
        sub_100069B70();
        sub_100007D0C(v53, &qword_100089D38);
        sub_1000185F8((uint64_t)v24, v78, &qword_100089D28);
        swift_storeEnumTagMultiPayload();
        sub_100036468();
        sub_100036708();
        sub_100069B70();
        return sub_100007D0C((uint64_t)v24, &qword_100089D28);
      }
      if (v34 == enum case for WidgetFamily.accessoryRectangular(_:))
      {
        uint64_t v54 = v58;
        sub_1000371CC(v1 + *(int *)(started + 20), v58, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
        sub_1000371CC(v54, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetAccessoryRectangularView);
        swift_storeEnumTagMultiPayload();
        sub_100037054(&qword_100089D60, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetAccessoryRectangularView);
        sub_100037054(&qword_100089D68, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetSystemSmallView);
        sub_100069B70();
        sub_1000185F8(v42, (uint64_t)v20, &qword_100089D58);
        swift_storeEnumTagMultiPayload();
        sub_10003652C();
        sub_10003662C();
        sub_100069B70();
        sub_100007D0C(v42, &qword_100089D58);
        sub_1000185F8((uint64_t)v24, v78, &qword_100089D28);
        swift_storeEnumTagMultiPayload();
        sub_100036468();
        sub_100036708();
        sub_100069B70();
        sub_100007D0C((uint64_t)v24, &qword_100089D28);
        uint64_t v40 = type metadata accessor for StartWritingWidgetAccessoryRectangularView;
        uint64_t v41 = v54;
        return sub_100037234(v41, (uint64_t (*)(void))v40);
      }
      if (v34 != enum case for WidgetFamily.accessoryInline(_:))
      {
        sub_1000371CC(v1, v56, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetView);
        unint64_t v83 = 0;
        unint64_t v84 = 0xE000000000000000;
        sub_10006A460(27);
        swift_bridgeObjectRelease();
        unint64_t v83 = 0xD000000000000019;
        unint64_t v84 = 0x8000000100076DD0;
        sub_10003613C(&qword_100088C28, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v31);
        sub_100037054(&qword_100089DB8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
        v85._countAndFlagsBits = sub_10006A560();
        sub_10006A310(v85);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
        uint64_t result = sub_10006A4A0();
        __break(1u);
        return result;
      }
      uint64_t v49 = v57;
      sub_1000371CC(v1 + *(int *)(started + 20), v57, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetTimelineEntry);
      sub_1000371CC(v49, v60, (uint64_t (*)(void))type metadata accessor for StartWritingWidgetAccessoryInlineView);
      swift_storeEnumTagMultiPayload();
      sub_100037054(&qword_100089D40, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetAccessoryInlineView);
      sub_1000365D8();
      uint64_t v55 = (uint64_t)v61;
      sub_100069B70();
      sub_1000185F8(v55, (uint64_t)v20, &qword_100089D38);
      swift_storeEnumTagMultiPayload();
      sub_10003652C();
      sub_10003662C();
      sub_100069B70();
      sub_100007D0C(v55, &qword_100089D38);
      sub_1000185F8((uint64_t)v24, v78, &qword_100089D28);
      swift_storeEnumTagMultiPayload();
      sub_100036468();
      sub_100036708();
      sub_100069B70();
      sub_100007D0C((uint64_t)v24, &qword_100089D28);
      uint64_t v51 = type metadata accessor for StartWritingWidgetAccessoryInlineView;
    }
    uint64_t v40 = v51;
    uint64_t v41 = v49;
  }
  return sub_100037234(v41, (uint64_t (*)(void))v40);
}

uint64_t sub_10003607C()
{
  return sub_100069960();
}

uint64_t sub_1000360A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100036880(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_1000360CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003613C(&qword_100089120, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x8000000100076E30, a1);
}

uint64_t sub_100036104@<X0>(uint64_t a1@<X8>)
{
  return sub_10003613C(&qword_100089110, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x8000000100076E10, a1);
}

uint64_t sub_10003613C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_100069A40();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000059D8(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000185F8(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_10006A3B0();
    uint64_t v21 = sub_100069CA0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_100036950(v27, v25, &v29);
      sub_10006A3D0();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100069A30();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1000363F4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003613C(&qword_100089118, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x8000000100076DF0, a1);
}

uint64_t sub_10003642C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003613C(&qword_100088C28, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_100036468()
{
  return sub_1000364A4(&qword_100089D20, &qword_100089D28, (void (*)(void))sub_10003652C, (void (*)(void))sub_10003662C);
}

uint64_t sub_1000364A4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005A1C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003652C()
{
  unint64_t result = qword_100089D30;
  if (!qword_100089D30)
  {
    sub_100005A1C(&qword_100089D38);
    sub_100037054(&qword_100089D40, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetAccessoryInlineView);
    sub_1000365D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089D30);
  }
  return result;
}

unint64_t sub_1000365D8()
{
  unint64_t result = qword_100089D48;
  if (!qword_100089D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089D48);
  }
  return result;
}

unint64_t sub_10003662C()
{
  unint64_t result = qword_100089D50;
  if (!qword_100089D50)
  {
    sub_100005A1C(&qword_100089D58);
    sub_100037054(&qword_100089D60, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetAccessoryRectangularView);
    sub_100037054(&qword_100089D68, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetSystemSmallView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089D50);
  }
  return result;
}

unint64_t sub_100036708()
{
  unint64_t result = qword_100089D70;
  if (!qword_100089D70)
  {
    sub_100005A1C(&qword_100089D78);
    sub_100037054(&qword_100089D80, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetSystemMediumView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089D70);
  }
  return result;
}

uint64_t sub_1000367B4()
{
  return sub_100069960();
}

uint64_t sub_1000367D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100036880(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100036818()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100036828(uint64_t a1)
{
  return sub_100049448(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100036830()
{
  return sub_100069A00();
}

uint64_t sub_100036854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100036880(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100036880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100036950(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100036A24(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100036C30((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100036C30((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100036BE0((uint64_t)v12);
  return v7;
}

uint64_t sub_100036A24(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10006A3E0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100036C8C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10006A480();
  if (!v8)
  {
    sub_10006A490();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10006A4C0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100036BE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100036C30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100036C8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100036D24(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100036F04(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100036F04(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100036D24(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100036E9C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10006A470();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10006A490();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10006A320();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10006A4C0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10006A490();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100036E9C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_1000059D8(&qword_100089D88);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100036F04(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000059D8(&qword_100089D88);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10006A4C0();
  __break(1u);
  return result;
}

uint64_t sub_100037054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003709C()
{
  return sub_100069A00();
}

uint64_t sub_1000370C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100036880(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100037100()
{
  return sub_100069950();
}

uint64_t sub_100037124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100036880(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(char *))&EnvironmentValues.sizeCategory.setter);
}

uint64_t sub_100037164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000371CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100037234(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100037298()
{
  unint64_t result = qword_100089DC0;
  if (!qword_100089DC0)
  {
    sub_100005A1C(&qword_100089D10);
    sub_100005A1C(&qword_100089D00);
    sub_1000364A4(&qword_100089D18, &qword_100089D00, (void (*)(void))sub_100036468, (void (*)(void))sub_100036708);
    swift_getOpaqueTypeConformance2();
    sub_100037388();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089DC0);
  }
  return result;
}

unint64_t sub_100037388()
{
  unint64_t result = qword_100089DC8;
  if (!qword_100089DC8)
  {
    sub_100005A1C(&qword_100089DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089DC8);
  }
  return result;
}

BOOL sub_1000373E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_1000373FC()
{
  Swift::UInt v1 = *v0;
  sub_10006A590();
  sub_10006A5A0(v1);
  return sub_10006A5C0();
}

void sub_100037444()
{
  sub_10006A5A0(*v0);
}

Swift::Int sub_100037470()
{
  Swift::UInt v1 = *v0;
  sub_10006A590();
  sub_10006A5A0(v1);
  return sub_10006A5C0();
}

void sub_1000374B4(uint64_t a1, unsigned __int8 a2)
{
  switch(a2 >> 5)
  {
    case 1:
      sub_10006A5A0(5uLL);
      sub_10006A5B0(a2 & 1);
      return;
    case 2:
      if (a2 == 64) {
        Swift::UInt v3 = 1;
      }
      else {
        Swift::UInt v3 = 2;
      }
      goto LABEL_14;
    case 3:
      if (a2 == 96) {
        Swift::UInt v3 = 3;
      }
      else {
        Swift::UInt v3 = 4;
      }
      goto LABEL_14;
    case 4:
      if (a2 == 128) {
        Swift::UInt v3 = 6;
      }
      else {
        Swift::UInt v3 = 7;
      }
      goto LABEL_14;
    case 5:
      Swift::UInt v3 = 8;
      goto LABEL_14;
    default:
      sub_10006A5A0(0);
      Swift::UInt v3 = a2 & 1;
LABEL_14:
      sub_10006A5A0(v3);
      return;
  }
}

Swift::Int sub_100037598()
{
  unsigned __int8 v1 = *v0;
  sub_10006A590();
  sub_1000374B4((uint64_t)v3, v1);
  return sub_10006A5C0();
}

void sub_1000375E0(uint64_t a1)
{
  sub_1000374B4(a1, *v1);
}

Swift::Int sub_1000375E8()
{
  unsigned __int8 v1 = *v0;
  sub_10006A590();
  sub_1000374B4((uint64_t)v3, v1);
  return sub_10006A5C0();
}

uint64_t sub_10003762C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100037638(*a1, *a2);
}

uint64_t sub_100037638(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 5)
  {
    case 1:
      if ((a2 & 0xE0) != 0x20) {
        return 0;
      }
      return (((a1 & 1) == 0) ^ a2) & 1;
    case 2:
      if (a1 == 64) {
        return a2 == 64;
      }
      return a2 == 65;
    case 3:
      if (a1 == 96)
      {
        if (a2 == 96) {
          return 1;
        }
      }
      else if (a2 == 97)
      {
        return 1;
      }
      return 0;
    case 4:
      if (a1 == 128) {
        return a2 == 128;
      }
      return a2 == 129;
    case 5:
      return a2 == 160;
    default:
      if (a2 >= 0x20u) {
        return 0;
      }
      return ((a2 ^ a1) & 1) == 0;
  }
}

uint64_t getEnumTagSinglePayload for CanvasContentInputType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7B) {
    goto LABEL_17;
  }
  if (a2 + 133 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 133) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 133;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *unint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000378A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1000378D0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_1000378EC(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1000378FC(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *unint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType()
{
  return &type metadata for CanvasContentInputType;
}

unint64_t sub_100037944()
{
  unint64_t result = qword_100089DD8;
  if (!qword_100089DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089DD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CanvasContentInputType.KeyboardFocus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100037A64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasContentInputType.KeyboardFocus()
{
  return &type metadata for CanvasContentInputType.KeyboardFocus;
}

unint64_t sub_100037AA0()
{
  unint64_t result = qword_100089DE0;
  if (!qword_100089DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089DE0);
  }
  return result;
}

void *sub_100037AF4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100069600();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    size_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    *((_DWORD *)v10 + 2) = *((_DWORD *)v11 + 2);
    uint64_t v12 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v12;
    uint64_t v13 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v13;
    __dst = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = sub_10006A250();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_1000059D8(&qword_100088F10);
      memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100037CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_10006A250();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_100037E1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v11;
  uint64_t v12 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v12;
  __dst = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = sub_10006A250();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1000059D8(&qword_100088F10);
    memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100037FD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 9) = *(unsigned char *)(v9 + 9);
  *(unsigned char *)(v8 + 10) = *(unsigned char *)(v9 + 10);
  *(unsigned char *)(v8 + 11) = *(unsigned char *)(v9 + 11);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_10006A250();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1000059D8(&qword_100088F10);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10003820C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  _OWORD *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = sub_10006A250();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1000059D8(&qword_100088F10);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100038388(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(_DWORD *)(v8 + 8) = *(_DWORD *)(a2 + v7 + 8);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_10006A250();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1000059D8(&qword_100088F10);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10003858C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000385A0);
}

uint64_t sub_1000385A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100069600();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000059D8(&qword_100088F10);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1000386D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000386E8);
}

uint64_t sub_1000386E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100069600();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000059D8(&qword_100088F10);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for StartWritingWidgetTimelineEntry()
{
  uint64_t result = qword_100089E40;
  if (!qword_100089E40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100038868()
{
  sub_100069600();
  if (v0 <= 0x3F)
  {
    sub_100038940();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100038940()
{
  if (!qword_100089E50)
  {
    sub_10006A250();
    unint64_t v0 = sub_10006A3C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100089E50);
    }
  }
}

uint64_t sub_100038998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000389A8(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_1000389A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100038A14()
{
  return sub_10000CE3C(&qword_100089E98, &qword_100089EA0);
}

uint64_t sub_100038A50()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_100069460();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000692B0();
  sub_10000CD24(v10, qword_100092BD0);
  sub_10000CCEC(v10, (uint64_t)qword_100092BD0);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000692A0();
}

uint64_t sub_100038D28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E20);
  __chkstk_darwin(v1 - 8);
  uint64_t v30 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v31 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v26 = sub_100069470();
  uint64_t v11 = *(void *)(v26 - 8);
  uint64_t v12 = __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v27 = (char *)&v23 - v14;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v24 = v5;
  v16(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  unint64_t v25 = v16;
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  int v17 = v31;
  sub_100069480();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v26);
  int v18 = v30;
  sub_100069160();
  uint64_t v19 = sub_100069170();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_1000059D8(&qword_100088E28);
  uint64_t v23 = 2 * *(void *)(v11 + 72);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10006BDA0;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v21 = v24;
  uint64_t v20 = v25;
  v25(v8, v15, v24);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v20(v8, v15, v21);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v20(v8, v15, v21);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v20(v8, v15, v21);
  sub_100069480();
  return sub_100069180();
}

uint64_t sub_100039380(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092BE8);
}

uint64_t sub_1000393A4()
{
  uint64_t v0 = sub_1000059D8(&qword_100088E90);
  sub_10000CD24(v0, qword_100092C00);
  uint64_t v1 = sub_10000CCEC(v0, (uint64_t)qword_100092C00);
  sub_1000690E0();
  uint64_t v2 = sub_1000690F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10003945C()
{
  uint64_t result = swift_getKeyPath();
  qword_100092C18 = result;
  return result;
}

uint64_t sub_100039484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_1000059D8(&qword_100088E60);
  v3[9] = swift_task_alloc();
  sub_1000059D8(&qword_100088E68);
  v3[10] = swift_task_alloc();
  sub_1000059D8(&qword_10008A030);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_100068EB0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_1000059D8(&qword_10008A038);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100039648, 0, 0);
}

uint64_t sub_100039648()
{
  sub_100068F00();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_10003A718();
  *uint64_t v1 = v0;
  v1[1] = sub_10003971C;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_100039D14, 0, &type metadata for SkipJournalingSuggestionsEntity, v2);
}

uint64_t sub_10003971C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100039818, 0, 0);
}

uint64_t sub_100039818()
{
  sub_100068F00();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_100068F00();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_100088998 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100092C18;
  *(void *)(v0 + 168) = qword_100092C18;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_10000CE3C(&qword_10008A018, &qword_10008A020);
  *uint64_t v3 = v0;
  v3[1] = sub_100039970;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_100039970()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000928C;
  }
  else {
    uint64_t v2 = sub_100039AC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100039AC4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_100068F00();
  uint64_t v7 = sub_100069290();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000692C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_10001B664();
  sub_10003A92C();
  sub_100068E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_100068EA0();
  sub_100068EC0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100039D18()
{
  uint64_t v0 = sub_1000059D8(&qword_10008A040);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100088998 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100069150();
  swift_release();
  sub_10003A92C();
  sub_10000CE3C(&qword_10008A048, &qword_10008A040);
  sub_100069140();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100039E80()
{
  if (qword_100088998 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100039EE0()
{
  unint64_t result = qword_100089EA8;
  if (!qword_100089EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089EA8);
  }
  return result;
}

unint64_t sub_100039F38()
{
  unint64_t result = qword_100089EB0;
  if (!qword_100089EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089EB0);
  }
  return result;
}

uint64_t sub_100039F8C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100039FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003B538(a1, a2, a3, (void (*)(void))sub_10001B664);
}

uint64_t sub_100039FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088988, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092BE8, a1);
}

uint64_t sub_10003A010@<X0>(uint64_t a1@<X8>)
{
  if (qword_100088990 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000059D8(&qword_100088E90);
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092C00);

  return sub_10000CDA8(v3, a1);
}

uint64_t sub_10003A08C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100006638;
  return sub_100039484(a1, v5, v4);
}

uint64_t sub_10003A138@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10003C104();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10003A160()
{
  return 0xD000000000000030;
}

unint64_t sub_10003A180()
{
  unint64_t result = qword_100089EC0;
  if (!qword_100089EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089EC0);
  }
  return result;
}

unint64_t sub_10003A1D8()
{
  unint64_t result = qword_100089EC8;
  if (!qword_100089EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089EC8);
  }
  return result;
}

uint64_t sub_10003A22C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10003A24C, 0, 0);
}

uint64_t sub_10003A24C()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  uint64_t v4 = *(unsigned __int8 **)(v0 + 16);
  NSString v5 = sub_10006A2D0();
  unsigned __int8 v6 = [v3 BOOLForKey:v5];

  *uint64_t v4 = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10003A36C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10003A390, 0, 0);
}

uint64_t sub_10003A390()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  Class isa = sub_10006A370().super.super.isa;
  NSString v5 = sub_10006A2D0();
  [v3 setValue:isa forKey:v5];

  unsigned __int8 v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10003A4B8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10008A000 + dword_10008A000);
  NSString v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *NSString v2 = v1;
  v2[1] = sub_10000CFAC;
  return v4();
}

unint64_t sub_10003A560()
{
  unint64_t result = qword_100089ED8;
  if (!qword_100089ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089ED8);
  }
  return result;
}

uint64_t sub_10003A5B4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10003ABB8();
  *uint64_t v4 = v2;
  v4[1] = sub_100009E88;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10003A668()
{
  unint64_t result = qword_100089EE8;
  if (!qword_100089EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089EE8);
  }
  return result;
}

unint64_t sub_10003A6C0()
{
  unint64_t result = qword_100089EF0;
  if (!qword_100089EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089EF0);
  }
  return result;
}

unint64_t sub_10003A718()
{
  unint64_t result = qword_100089EF8[0];
  if (!qword_100089EF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100089EF8);
  }
  return result;
}

uint64_t sub_10003A76C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10003ABB8();
  void *v5 = v2;
  v5[1] = sub_10000A158;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10003A820(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10003ABB8();
  *uint64_t v4 = v2;
  v4[1] = sub_10000CFAC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10003A8D4()
{
  unint64_t result = qword_100089F10;
  if (!qword_100089F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F10);
  }
  return result;
}

unint64_t sub_10003A92C()
{
  unint64_t result = qword_100089F18;
  if (!qword_100089F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F18);
  }
  return result;
}

unint64_t sub_10003A984()
{
  unint64_t result = qword_100089F20;
  if (!qword_100089F20)
  {
    sub_100005A1C(qword_100089F28);
    sub_10003A92C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F20);
  }
  return result;
}

uint64_t sub_10003A9F8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10003A560();
  void *v5 = v2;
  v5[1] = sub_100006434;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_10003AAB0()
{
  unint64_t result = qword_100089F40;
  if (!qword_100089F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F40);
  }
  return result;
}

unint64_t sub_10003AB08()
{
  unint64_t result = qword_100089F48;
  if (!qword_100089F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F48);
  }
  return result;
}

unint64_t sub_10003AB60()
{
  unint64_t result = qword_100089F50;
  if (!qword_100089F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F50);
  }
  return result;
}

unint64_t sub_10003ABB8()
{
  unint64_t result = qword_100089F58;
  if (!qword_100089F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F58);
  }
  return result;
}

unint64_t sub_10003AC10()
{
  unint64_t result = qword_100089F60;
  if (!qword_100089F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F60);
  }
  return result;
}

uint64_t sub_10003AC64(uint64_t a1)
{
  unint64_t v2 = sub_10003A718();

  return _EntityURLRepresentation.init(_:)(0xD00000000000004FLL, 0x80000001000771D0, a1, v2);
}

unint64_t sub_10003ACC4()
{
  unint64_t result = qword_100089F68;
  if (!qword_100089F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F68);
  }
  return result;
}

unint64_t sub_10003AD1C()
{
  unint64_t result = qword_100089F70;
  if (!qword_100089F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F70);
  }
  return result;
}

unint64_t sub_10003AD74()
{
  unint64_t result = qword_100089F78;
  if (!qword_100089F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F78);
  }
  return result;
}

uint64_t sub_10003ADC8@<X0>(uint64_t *a1@<X8>)
{
  sub_10003A1D8();
  uint64_t result = sub_100068EE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10003AE08()
{
  sub_10003CD10();
  uint64_t v2 = sub_100069210();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000CD88(v3, v0, v2, v1);
}

uint64_t sub_10003AE9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088980, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100092BD0, a1);
}

uint64_t sub_10003AED4()
{
  return sub_10000CE3C(&qword_100089F88, &qword_100089F90);
}

uint64_t sub_10003AF10(uint64_t a1)
{
  unint64_t v2 = sub_10003A718();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10003AF60()
{
  unint64_t result = qword_100089F98;
  if (!qword_100089F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089F98);
  }
  return result;
}

uint64_t sub_10003AFB8(uint64_t a1)
{
  unint64_t v2 = sub_10003AD74();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10003B008()
{
  unint64_t result = qword_100089FA0;
  if (!qword_100089FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FA0);
  }
  return result;
}

uint64_t sub_10003B05C(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092C20);
}

uint64_t sub_10003B080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100069470();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_100069100();
  uint64_t v13 = sub_1000690F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

unint64_t sub_10003B37C()
{
  unint64_t result = qword_100089FA8;
  if (!qword_100089FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FA8);
  }
  return result;
}

uint64_t sub_10003B3D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10003CC68();
  unint64_t v5 = sub_10003CD10();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10003B438()
{
  uint64_t v0 = qword_100089E88;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10003B474()
{
  unint64_t result = qword_100089FB0;
  if (!qword_100089FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FB0);
  }
  return result;
}

unint64_t sub_10003B4CC()
{
  unint64_t result = qword_100089FB8;
  if (!qword_100089FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FB8);
  }
  return result;
}

uint64_t sub_10003B520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003B538(a1, a2, a3, (void (*)(void))sub_10003B37C);
}

uint64_t sub_10003B538(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003B58C@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_1000889A0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092C20, a1);
}

uint64_t sub_10003B5C8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10003CC68();
  unint64_t v7 = sub_10003CCBC();
  unint64_t v8 = sub_10003CD10();
  void *v5 = v2;
  v5[1] = sub_10000B360;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10003B69C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10003C820();
  *a1 = result;
  return result;
}

uint64_t sub_10003B6C4(uint64_t a1)
{
  unint64_t v2 = sub_10003B37C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SkipJournalingSuggestionsIntent()
{
  return &type metadata for SkipJournalingSuggestionsIntent;
}

ValueMetadata *type metadata accessor for SkipJournalingSuggestionsEntity.SkipJournalingSuggestionsQuery()
{
  return &type metadata for SkipJournalingSuggestionsEntity.SkipJournalingSuggestionsQuery;
}

ValueMetadata *type metadata accessor for SkipJournalingSuggestionsEntity()
{
  return &type metadata for SkipJournalingSuggestionsEntity;
}

ValueMetadata *type metadata accessor for SkipJournalingSuggestionsEntity.UpdateIntent_value()
{
  return &type metadata for SkipJournalingSuggestionsEntity.UpdateIntent_value;
}

uint64_t sub_10003B740()
{
  return sub_10000CE3C(&qword_100089FC8, &qword_100089FD0);
}

uint64_t sub_10003B77C()
{
  return sub_10000CE3C(&qword_100089FD8, &qword_100089FD0);
}

uint64_t sub_10003B7B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E98);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000059D8(&qword_100088EA0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_100088EA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000059D8(&qword_100088EB0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10003A1D8();
  sub_10006A1D0();
  sub_100069A80();
  uint64_t v16 = sub_10000CE3C(&qword_100088EB8, &qword_100088E98);
  sub_100069B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_100069A80();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_100069AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_100069B50();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_100069B00();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_10003BC78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_10003BE8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_10003C104()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100069200();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000059D8(&qword_100088DE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_100069470();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000059D8(&qword_100089FE0);
  sub_100069450();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_100068EB0();
  int v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10003A718();
  uint64_t v19 = v23;
  uint64_t v24 = sub_100068F30();
  sub_1000059D8(&qword_100088E00);
  sub_100069450();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_10006A360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_100068F40();
  return v24;
}

uint64_t sub_10003C544()
{
  uint64_t v1 = sub_100069460();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_100069660();
  v0[5] = swift_task_alloc();
  sub_10006A2C0();
  v0[6] = swift_task_alloc();
  sub_100069470();
  v0[7] = swift_task_alloc();
  return _swift_task_switch(sub_10003C684, 0, 0);
}

uint64_t sub_10003C684()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  sub_1000059D8(&qword_100089EA0);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  sub_10000CE3C(&qword_10008A018, &qword_10008A020);
  uint64_t v4 = sub_1000692E0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_10003C820()
{
  uint64_t v0 = sub_100069200();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000059D8(&qword_100088DE8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100069460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100069660();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_10006A2C0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_100069470();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_1000059D8(&qword_100089FE0);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_100068EB0();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_10003A718();
  return sub_100068F30();
}

unint64_t sub_10003CC68()
{
  unint64_t result = qword_100089FE8;
  if (!qword_100089FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FE8);
  }
  return result;
}

unint64_t sub_10003CCBC()
{
  unint64_t result = qword_100089FF0;
  if (!qword_100089FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FF0);
  }
  return result;
}

unint64_t sub_10003CD10()
{
  unint64_t result = qword_100089FF8;
  if (!qword_100089FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089FF8);
  }
  return result;
}

uint64_t sub_10003CD64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for SkipJournalingSuggestionsToggleControl()
{
  return &type metadata for SkipJournalingSuggestionsToggleControl;
}

uint64_t sub_10003CD80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003CD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, void (*a6)(uint64_t)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  v265 = a3;
  uint64_t v251 = a7;
  v252 = a6;
  uint64_t v275 = a4;
  uint64_t v227 = a2;
  uint64_t v263 = a1;
  uint64_t v253 = a8;
  uint64_t v242 = sub_1000059D8(&qword_10008A100);
  uint64_t v9 = __chkstk_darwin(v242);
  v239 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v254 = (char *)&v224 - v11;
  uint64_t v249 = sub_1000059D8(&qword_10008A108);
  uint64_t v255 = *(void *)(v249 - 8);
  uint64_t v12 = __chkstk_darwin(v249);
  uint64_t v241 = (uint64_t)&v224 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v240 = (uint64_t)&v224 - v15;
  __chkstk_darwin(v14);
  uint64_t v273 = (uint64_t)&v224 - v16;
  uint64_t v17 = sub_1000059D8(&qword_10008A110);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v248 = (uint64_t)&v224 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v246 = (uint64_t)&v224 - v20;
  uint64_t v21 = sub_1000059D8(&qword_10008A118);
  __chkstk_darwin(v21 - 8);
  v250 = (char *)&v224 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000696C0();
  uint64_t v231 = *(void *)(v23 - 8);
  uint64_t v232 = v23;
  __chkstk_darwin(v23);
  uint64_t v230 = v24;
  v236 = (char *)&v224 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v26 = *(void *)(started - 8);
  uint64_t v27 = __chkstk_darwin(started);
  uint64_t v233 = (uint64_t)&v224 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v237 = (char *)&v224 - v29;
  uint64_t v30 = sub_100069660();
  uint64_t v234 = *(void *)(v30 - 8);
  uint64_t v235 = v30;
  __chkstk_darwin(v30);
  v268 = (char *)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100069600();
  uint64_t v258 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  v272 = (char *)&v224 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  v257 = (char *)&v224 - v36;
  uint64_t v229 = v37;
  __chkstk_darwin(v35);
  v270 = (char *)&v224 - v38;
  uint64_t v267 = sub_1000059D8(&qword_100088EF8);
  uint64_t v247 = *(void *)(v267 - 8);
  uint64_t v39 = __chkstk_darwin(v267);
  uint64_t v259 = (uint64_t)&v224 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v238 = (char *)&v224 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v271 = (uint64_t)&v224 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v260 = (uint64_t)&v224 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v269 = (void (**)(char *, uint64_t))((char *)&v224 - v48);
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v224 - v49;
  uint64_t v51 = sub_1000059D8(&qword_100088F08);
  uint64_t v52 = __chkstk_darwin(v51 - 8);
  uint64_t v245 = (uint64_t)&v224 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v244 = (uint64_t)&v224 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v243 = (uint64_t)&v224 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v60 = (char *)&v224 - v59;
  uint64_t v61 = __chkstk_darwin(v58);
  uint64_t v63 = (char *)&v224 - v62;
  a5(v61);
  uint64_t v64 = swift_allocBox();
  uint64_t v66 = v65;
  v264 = v63;
  uint64_t v67 = (uint64_t)v63;
  uint64_t v68 = v258;
  sub_1000185F8(v67, (uint64_t)v60, &qword_100088F08);
  uint64_t v69 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v26 + 48);
  v256 = (int *)started;
  v261 = v69;
  uint64_t v262 = v26 + 48;
  unsigned int v70 = v69((uint64_t)v60, 1, (int *)started);
  uint64_t v71 = v275;
  uint64_t v274 = v32;
  if (v70 == 1)
  {
    sub_100007D0C((uint64_t)v60, &qword_100088F08);
    swift_deallocBox();
    uint64_t v72 = v68;
  }
  else
  {
    uint64_t v228 = v64;
    sub_100042A30((uint64_t)v60, v66);
    sub_1000185F8(v66, (uint64_t)v50, &qword_100088EF8);
    sub_10004707C(&qword_10008A120);
    char v73 = sub_10006A290();
    uint64_t v74 = v68 + 16;
    v226 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    v226(v270, v71, v32);
    sub_1000185F8((uint64_t)v50, (uint64_t)v269, &qword_100088EF8);
    uint64_t v72 = v68;
    if (v73)
    {
      uint64_t v75 = v66;
      uint64_t v77 = v269;
      uint64_t v76 = v270;
      char v78 = sub_10006A280();
      sub_100007D0C((uint64_t)v77, &qword_100088EF8);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v76, v32);
      sub_100007D0C((uint64_t)v50, &qword_100088EF8);
      if (v78)
      {
        uint64_t v273 = v74;
        (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v268, v227, v235);
        uint64_t v79 = v256;
        uint64_t v80 = v75 + v256[7];
        char v81 = *(unsigned char *)(v80 + 48);
        long long v82 = *(_OWORD *)(v80 + 32);
        long long v83 = *(_OWORD *)v80;
        long long v312 = *(_OWORD *)(v80 + 16);
        long long v313 = v82;
        char v314 = v81;
        long long v311 = v83;
        sub_100044F70((uint64_t)&v311);
        uint64_t v84 = v263;
        sub_100044930((uint64_t)&v311, v263, (uint64_t)v276);
        sub_100044FA8((uint64_t)&v311);
        sub_100010A78((uint64_t)v276, (uint64_t)&v295, &qword_10008A128);
        uint64_t v85 = (uint64_t)v237;
        uint64_t v86 = v233;
        if (*((void *)&v296 + 1))
        {
          long long v299 = v295;
          long long v300 = v296;
          long long v301 = v297;
          char v302 = v298;
          sub_10000F630(v75, v233);
          uint64_t v87 = swift_allocObject();
          long long v88 = v300;
          *(_OWORD *)(v87 + 16) = v299;
          *(_OWORD *)(v87 + 32) = v88;
          *(_OWORD *)(v87 + 48) = v301;
          *(unsigned char *)(v87 + 64) = v302;
          sub_100063328(0, 0, 0, 0, (void (*)(uint64_t *__return_ptr, uint64_t))sub_100044F30, v87, v85);
          swift_release();
          sub_1000429D4(v86);
          sub_100044BC4(v85, v75);
        }
        uint64_t v89 = v75 + v79[5];
        long long v91 = *(_OWORD *)(v89 + 16);
        long long v90 = *(_OWORD *)(v89 + 32);
        long long v92 = *(_OWORD *)v89;
        char v310 = *(unsigned char *)(v89 + 48);
        long long v308 = v91;
        long long v309 = v90;
        long long v307 = v92;
        sub_100044F70((uint64_t)&v307);
        sub_100044930((uint64_t)&v307, v84, (uint64_t)v277);
        sub_100044FA8((uint64_t)&v307);
        sub_100010A78((uint64_t)v277, (uint64_t)&v287, &qword_10008A128);
        if (*((void *)&v288 + 1))
        {
          long long v291 = v287;
          long long v292 = v288;
          long long v293 = v289;
          char v294 = v290;
          sub_10000F630(v75, v86);
          uint64_t v93 = swift_allocObject();
          long long v94 = v292;
          *(_OWORD *)(v93 + 16) = v291;
          *(_OWORD *)(v93 + 32) = v94;
          *(_OWORD *)(v93 + 48) = v293;
          *(unsigned char *)(v93 + 64) = v294;
          sub_100063328(0, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1000470DC, 0, 0, 0, 0, v85);
          swift_release();
          sub_1000429D4(v86);
          sub_100044BC4(v85, v75);
        }
        uint64_t v95 = v75 + v79[6];
        long long v97 = *(_OWORD *)(v95 + 16);
        long long v96 = *(_OWORD *)(v95 + 32);
        long long v98 = *(_OWORD *)v95;
        char v306 = *(unsigned char *)(v95 + 48);
        long long v304 = v97;
        long long v305 = v96;
        long long v303 = v98;
        sub_100044F70((uint64_t)&v303);
        uint64_t v99 = v268;
        sub_100044930((uint64_t)&v303, v84, (uint64_t)v278);
        sub_100044FA8((uint64_t)&v303);
        (*(void (**)(char *, uint64_t))(v234 + 8))(v99, v235);
        sub_100010A78((uint64_t)v278, (uint64_t)&v279, &qword_10008A128);
        if (*((void *)&v280 + 1))
        {
          long long v283 = v279;
          long long v284 = v280;
          long long v285 = v281;
          char v286 = v282;
          sub_10000F630(v75, v86);
          uint64_t v100 = swift_allocObject();
          long long v101 = v284;
          *(_OWORD *)(v100 + 16) = v283;
          *(_OWORD *)(v100 + 32) = v101;
          *(_OWORD *)(v100 + 48) = v285;
          *(unsigned char *)(v100 + 64) = v286;
          sub_100063328(0, 0, (void (*)(void *__return_ptr, void))sub_1000470DC, v100, 0, 0, v85);
          swift_release();
          sub_1000429D4(v86);
          sub_100044BC4(v85, v75);
        }
        int v102 = *(unsigned __int8 *)(v80 + 48);
        uint64_t v225 = v75;
        if (v102 == 1)
        {
          sub_10000F630(v75, v86);
          uint64_t v103 = v257;
          uint64_t v104 = v274;
          v226(v257, v275, v274);
          uint64_t v106 = v231;
          uint64_t v105 = v232;
          (*(void (**)(char *, uint8_t *, uint64_t))(v231 + 16))(v236, v265, v232);
          uint64_t v107 = v258;
          unint64_t v108 = (*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80);
          unint64_t v109 = (v229 + *(unsigned __int8 *)(v106 + 80) + v108) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
          unint64_t v110 = (v230 + v109 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v111 = swift_allocObject();
          uint64_t v112 = v263;
          *(void *)(v111 + 16) = v266;
          *(void *)(v111 + 24) = v112;
          uint64_t v113 = v107;
          uint64_t v85 = (uint64_t)v237;
          unint64_t v114 = v103;
          uint64_t v84 = v263;
          (*(void (**)(unint64_t, char *, uint64_t))(v113 + 32))(v111 + v108, v114, v104);
          uint64_t v115 = v106;
          uint64_t v79 = v256;
          uint64_t v116 = v105;
          uint64_t v86 = v233;
          (*(void (**)(unint64_t, char *, uint64_t))(v115 + 32))(v111 + v109, v236, v116);
          *(void *)(v111 + v110) = v228;
          uint64_t v75 = v225;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_100063328(0, 0, 0, 0, (void (*)(uint64_t *__return_ptr, uint64_t))sub_100044DB4, v111, v85);
          swift_release();
          sub_1000429D4(v86);
          swift_beginAccess();
          sub_100044BC4(v85, v75);
        }
        swift_beginAccess();
        uint64_t v117 = v274;
        uint64_t v118 = v257;
        if (*(unsigned char *)(v75 + v79[5] + 48) == 1)
        {
          sub_10000F630(v75, v86);
          v226(v118, v275, v117);
          uint64_t v119 = v231;
          uint64_t v120 = v84;
          uint64_t v121 = v232;
          (*(void (**)(char *, uint8_t *, uint64_t))(v231 + 16))(v236, v265, v232);
          uint64_t v122 = v258;
          unint64_t v123 = (*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80);
          unint64_t v124 = (v229 + *(unsigned __int8 *)(v119 + 80) + v123) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
          unint64_t v125 = (v230 + v124 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v126 = swift_allocObject();
          *(void *)(v126 + 16) = v266;
          *(void *)(v126 + 24) = v120;
          (*(void (**)(unint64_t, char *, uint64_t))(v122 + 32))(v126 + v123, v257, v274);
          unint64_t v127 = v126 + v124;
          uint64_t v117 = v274;
          uint64_t v128 = v119;
          uint64_t v79 = v256;
          uint64_t v129 = v121;
          uint64_t v84 = v120;
          uint64_t v85 = (uint64_t)v237;
          (*(void (**)(unint64_t, char *, uint64_t))(v128 + 32))(v127, v236, v129);
          *(void *)(v126 + v125) = v228;
          uint64_t v75 = v225;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_100063328(0, (void (*)(uint64_t *__return_ptr, uint64_t))sub_100044C2C, 0, 0, 0, 0, v85);
          uint64_t v118 = v257;
          swift_release();
          sub_1000429D4(v86);
          sub_100044BC4(v85, v75);
        }
        if (*(unsigned char *)(v75 + v79[6] + 48) == 1)
        {
          sub_10000F630(v75, v86);
          v226(v118, v275, v117);
          uint64_t v131 = v231;
          uint64_t v130 = v232;
          unint64_t v132 = v236;
          (*(void (**)(char *, uint8_t *, uint64_t))(v231 + 16))(v236, v265, v232);
          uint64_t v133 = v84;
          uint64_t v134 = v258;
          unint64_t v135 = (*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80);
          unint64_t v136 = (v229 + *(unsigned __int8 *)(v131 + 80) + v135) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
          unint64_t v137 = (v230 + v136 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v138 = swift_allocObject();
          char v139 = v118;
          uint64_t v140 = v138;
          *(void *)(v138 + 16) = v266;
          *(void *)(v138 + 24) = v133;
          (*(void (**)(unint64_t, char *, uint64_t))(v134 + 32))(v138 + v135, v139, v274);
          unint64_t v141 = v132;
          uint64_t v85 = (uint64_t)v237;
          (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))(v140 + v136, v141, v130);
          *(void *)(v140 + v137) = v228;
          uint64_t v75 = v225;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v142 = v233;
          sub_100063328(0, 0, (void (*)(void *__return_ptr, void))sub_100044BAC, v140, 0, 0, v85);
          swift_release();
          sub_1000429D4(v142);
          sub_100044BC4(v85, v75);
        }
        sub_10000F630(v75, v85);
        v252(v85);
        sub_1000429D4(v85);
        sub_100007D0C((uint64_t)v264, &qword_100088F08);
        sub_10000F630(v75, v253);
        return swift_release();
      }
    }
    else
    {
      sub_100007D0C((uint64_t)v269, &qword_100088EF8);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v270, v32);
      sub_100007D0C((uint64_t)v50, &qword_100088EF8);
    }
    swift_release();
  }
  char v144 = (char *)sub_10004052C((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v265, v275);
  uint64_t v145 = *((void *)v144 + 2);
  uint64_t v146 = v273;
  if (v145)
  {
    unint64_t v147 = (*(unsigned __int8 *)(v255 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v255 + 80);
    v237 = v144;
    uint64_t v148 = (uint64_t)&v144[v147];
    v269 = (void (**)(char *, uint64_t))(v72 + 8);
    v270 = (char *)(v72 + 16);
    v268 = *(char **)(v255 + 72);
    v149 = &qword_10008A108;
    v150 = v272;
    do
    {
      v151 = v149;
      sub_1000185F8(v148, v146, v149);
      sub_10004707C(&qword_10008A120);
      uint64_t v152 = v274;
      uint64_t v153 = v275;
      char v154 = sub_10006A290();
      uint64_t v155 = v153;
      uint64_t v156 = v152;
      (*(void (**)(char *, uint64_t, uint64_t))v270)(v150, v155, v152);
      uint64_t v157 = v146;
      uint64_t v158 = v271;
      sub_1000185F8(v157, v271, &qword_100088EF8);
      if (v154)
      {
        char v159 = sub_10006A280();
        sub_100007D0C(v158, &qword_100088EF8);
        (*v269)(v150, v156);
        if (v159)
        {
          uint64_t v160 = v246;
          sub_100010A78(v273, v246, &qword_10008A108);
          uint64_t v161 = 0;
          goto LABEL_29;
        }
      }
      else
      {
        sub_100007D0C(v158, &qword_100088EF8);
        (*v269)(v150, v152);
      }
      uint64_t v146 = v273;
      v149 = v151;
      sub_100007D0C(v273, v151);
      v148 += (uint64_t)v268;
      --v145;
    }
    while (v145);
    uint64_t v161 = 1;
    uint64_t v156 = v274;
    uint64_t v160 = v246;
  }
  else
  {
    uint64_t v161 = 1;
    uint64_t v156 = v274;
    uint64_t v160 = v246;
  }
LABEL_29:
  uint64_t v162 = v255;
  uint64_t v163 = 1;
  uint64_t v164 = v249;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v255 + 56))(v160, v161, 1, v249);
  swift_bridgeObjectRelease();
  uint64_t v165 = v248;
  sub_1000185F8(v160, v248, &qword_10008A110);
  int v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v165, 1, v164);
  uint64_t v167 = v256;
  uint64_t v168 = (uint64_t)v250;
  if (v166 != 1)
  {
    uint64_t v169 = v165;
    uint64_t v170 = v240;
    sub_100010A78(v169, v240, &qword_10008A108);
    uint64_t v171 = v241;
    sub_1000185F8(v170, v241, &qword_100088EF8);
    sub_100010A78(v171, v168, &qword_100088EF8);
    sub_100007D0C(v170, &qword_10008A108);
    uint64_t v163 = 0;
  }
  uint64_t v172 = v247;
  uint64_t v173 = v163;
  uint64_t v174 = v267;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v247 + 56))(v168, v173, 1, v267);
  sub_100007D0C(v160, &qword_10008A110);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v168, 1, v174) == 1)
  {
    sub_100007D0C(v168, &qword_10008A118);
    sub_1000695C0();
    sub_10004707C(&qword_10008A120);
    uint64_t result = sub_10006A290();
    if ((result & 1) == 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v175 = v242;
    v176 = &v254[*(int *)(v242 + 48)];
    uint64_t v177 = v258;
    v178 = *(void (**)(void))(v258 + 16);
    v178();
    v179 = *(void (**)(char *, char *, uint64_t))(v177 + 32);
    v179(v176, v257, v156);
    v180 = v239;
    v181 = &v239[*(int *)(v175 + 48)];
    ((void (*)(char *, char *, uint64_t))v178)(v239, v254, v156);
    ((void (*)(char *, char *, uint64_t))v178)(v181, v176, v156);
    v182 = v238;
    v179(v238, v180, v156);
    v183 = *(void (**)(char *, uint64_t))(v177 + 8);
    v183(v181, v156);
    v184 = &v180[*(int *)(v242 + 48)];
    v179(v180, v254, v156);
    v179(v184, v176, v156);
    v179(&v182[*(int *)(v267 + 36)], v184, v156);
    uint64_t v167 = v256;
    v183(v180, v156);
    uint64_t v168 = (uint64_t)v182;
  }
  uint64_t v185 = v260;
  sub_100010A78(v168, v260, &qword_100088EF8);
  sub_1000185F8(v185, v259, &qword_100088EF8);
  uint64_t v186 = v243;
  sub_1000185F8((uint64_t)v264, v243, &qword_100088F08);
  if (v261(v186, 1, v167) == 1)
  {
    sub_100007D0C(v186, &qword_100088F08);
    uint64_t v187 = 0;
    uint64_t v188 = 0;
    uint64_t v189 = 0;
    uint64_t v190 = 0;
    uint64_t v191 = 0;
    uint64_t v192 = 0;
  }
  else
  {
    uint64_t v193 = v186 + v167[5];
    uint64_t v187 = *(void *)v193;
    uint64_t v274 = *(unsigned __int8 *)(v193 + 8);
    uint64_t v273 = *(unsigned __int8 *)(v193 + 9);
    uint64_t v194 = *(unsigned __int8 *)(v193 + 10);
    uint64_t v195 = *(unsigned __int8 *)(v193 + 11);
    uint64_t v189 = *(void *)(v193 + 16);
    uint64_t v190 = *(void *)(v193 + 24);
    uint64_t v191 = *(void *)(v193 + 32);
    uint64_t v192 = *(void *)(v193 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000429D4(v186);
    uint64_t v188 = v274 | (v273 << 8) | (v194 << 16) | (v195 << 24);
  }
  *(void *)&long long v299 = v187;
  *((void *)&v299 + 1) = v188;
  *(void *)&long long v300 = v189;
  *((void *)&v300 + 1) = v190;
  *(void *)&long long v301 = v191;
  *((void *)&v301 + 1) = v192;
  sub_10003EAF8(v263, 0, v275, v265, &v299, (uint64_t)&v303);
  sub_100042990(v187, v188, v189, v190);
  uint64_t v196 = v244;
  sub_1000185F8((uint64_t)v264, v244, &qword_100088F08);
  if (v261(v196, 1, v167) == 1)
  {
    sub_100007D0C(v196, &qword_100088F08);
    uint64_t v197 = 0;
    uint64_t v198 = 0;
    uint64_t v199 = 0;
    uint64_t v200 = 0;
    uint64_t v201 = 0;
    uint64_t v202 = 0;
  }
  else
  {
    uint64_t v203 = v196 + v167[6];
    uint64_t v197 = *(void *)v203;
    uint64_t v274 = *(unsigned __int8 *)(v203 + 8);
    uint64_t v273 = *(unsigned __int8 *)(v203 + 9);
    uint64_t v204 = *(unsigned __int8 *)(v203 + 10);
    uint64_t v205 = *(unsigned __int8 *)(v203 + 11);
    uint64_t v199 = *(void *)(v203 + 16);
    uint64_t v200 = *(void *)(v203 + 24);
    uint64_t v201 = *(void *)(v203 + 32);
    uint64_t v202 = *(void *)(v203 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000429D4(v196);
    uint64_t v198 = v274 | (v273 << 8) | (v204 << 16) | (v205 << 24);
  }
  *(void *)&long long v295 = v197;
  *((void *)&v295 + 1) = v198;
  *(void *)&long long v296 = v199;
  *((void *)&v296 + 1) = v200;
  *(void *)&long long v297 = v201;
  *((void *)&v297 + 1) = v202;
  sub_10003EAF8(v263, 1u, v275, v265, &v295, (uint64_t)&v307);
  sub_100042990(v197, v198, v199, v200);
  uint64_t v206 = v245;
  sub_1000185F8((uint64_t)v264, v245, &qword_100088F08);
  if (v261(v206, 1, v167) == 1)
  {
    sub_100007D0C(v206, &qword_100088F08);
    uint64_t v207 = 0;
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
  }
  else
  {
    uint64_t v213 = v206 + v167[7];
    uint64_t v207 = *(void *)v213;
    uint64_t v274 = *(unsigned __int8 *)(v213 + 8);
    uint64_t v273 = *(unsigned __int8 *)(v213 + 9);
    uint64_t v214 = *(unsigned __int8 *)(v213 + 10);
    uint64_t v215 = *(unsigned __int8 *)(v213 + 11);
    uint64_t v209 = *(void *)(v213 + 16);
    uint64_t v210 = *(void *)(v213 + 24);
    uint64_t v211 = *(void *)(v213 + 32);
    uint64_t v212 = *(void *)(v213 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000429D4(v206);
    uint64_t v208 = v274 | (v273 << 8) | (v214 << 16) | (v215 << 24);
  }
  *(void *)&long long v291 = v207;
  *((void *)&v291 + 1) = v208;
  *(void *)&long long v292 = v209;
  *((void *)&v292 + 1) = v210;
  *(void *)&long long v293 = v211;
  *((void *)&v293 + 1) = v212;
  sub_10003EAF8(v263, 2u, v275, v265, &v291, (uint64_t)&v311);
  sub_100042990(v207, v208, v209, v210);
  uint64_t v216 = v253;
  sub_100010A78(v259, v253, &qword_100088EF8);
  uint64_t v217 = v216 + v167[5];
  long long v218 = v304;
  *(_OWORD *)uint64_t v217 = v303;
  *(_OWORD *)(v217 + 16) = v218;
  *(_OWORD *)(v217 + 32) = v305;
  *(unsigned char *)(v217 + 48) = v306;
  uint64_t v219 = v216 + v167[6];
  long long v220 = v308;
  *(_OWORD *)uint64_t v219 = v307;
  *(_OWORD *)(v219 + 16) = v220;
  *(_OWORD *)(v219 + 32) = v309;
  *(unsigned char *)(v219 + 48) = v310;
  uint64_t v221 = v216 + v167[7];
  *(unsigned char *)(v221 + 48) = v314;
  long long v222 = v313;
  long long v223 = v311;
  *(_OWORD *)(v221 + 16) = v312;
  *(_OWORD *)(v221 + 32) = v222;
  *(_OWORD *)uint64_t v221 = v223;
  v252(v216);
  sub_100007D0C(v260, &qword_100088EF8);
  return sub_100007D0C((uint64_t)v264, &qword_100088F08);
}

uint64_t sub_10003E75C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v27 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = *(void *)(a1 + 48) + 48 * i;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(unsigned __int8 *)(v15 + 8);
    uint64_t v18 = *(unsigned __int8 *)(v15 + 9);
    uint64_t v19 = *(unsigned __int8 *)(v15 + 10);
    uint64_t v20 = *(unsigned __int8 *)(v15 + 11);
    uint64_t v21 = *(void *)(v15 + 16);
    uint64_t v22 = *(void *)(v15 + 24);
    uint64_t v24 = *(void *)(v15 + 32);
    uint64_t v23 = *(void *)(v15 + 40);
    uint64_t v34 = *(void *)v15;
    char v35 = v17;
    char v36 = v18;
    char v37 = v19;
    uint64_t v29 = v20;
    uint64_t v30 = v21;
    char v38 = v20;
    uint64_t v39 = v21;
    uint64_t v40 = v22;
    uint64_t v41 = v24;
    uint64_t v42 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v25 = sub_100042A94(&v34, a2, a3);
    uint64_t v43 = v4;
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_100044FA8((uint64_t)a2);
    }
    if (v25)
    {
      swift_release();
      uint64_t result = sub_100044FA8((uint64_t)a2);
      *a4 = v16;
      a4[1] = v17 | (v18 << 8) | (v19 << 16) | (v29 << 24);
      a4[2] = v30;
      a4[3] = v22;
      a4[4] = v24;
      a4[5] = v23;
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = v43;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v9 >= v28) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v9);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v9 + 1;
  if (v9 + 1 >= v28) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 2;
  if (v9 + 2 >= v28) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 3;
  if (v9 + 3 >= v28) {
    goto LABEL_28;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 4;
  if (v9 + 4 >= v28)
  {
LABEL_28:
    swift_release();
    uint64_t result = sub_100044FA8((uint64_t)a2);
    *(_OWORD *)a4 = 0u;
    *((_OWORD *)a4 + 1) = 0u;
    *((_OWORD *)a4 + 2) = 0u;
    return result;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10003E9FC()
{
  uint64_t v0 = sub_100069740();
  sub_10000CD24(v0, qword_10008A050);
  sub_10000CCEC(v0, (uint64_t)qword_10008A050);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_10006A2E0();
  }
  swift_bridgeObjectRetain();
  sub_100069730();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003EAF8@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint8_t *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  int v8 = a2;
  if (!a2)
  {
    uint64_t v9 = a3;
    unint64_t v10 = a4;
    int v11 = 1;
    goto LABEL_5;
  }
  uint64_t v9 = a3;
  unint64_t v10 = a4;
  if (v8 == 1)
  {
    int v11 = 0;
LABEL_5:
    unint64_t v12 = sub_10003FCE4(a1, v9, (uint64_t (*)(unsigned char *, uint64_t, uint64_t))v10, v11);
    goto LABEL_15;
  }
  unint64_t v13 = sub_10003EE4C(a1, v9, a4);
  unint64_t v12 = v14;
  sub_100010A78((uint64_t)a5, (uint64_t)v52, &qword_100088FD8);
  if (v54)
  {
    if (v53 && v53 != 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    char v15 = sub_10006A570();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_14;
    }
  }
  if (!sub_10004351C(0xAuLL))
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)v13;
    goto LABEL_15;
  }
LABEL_14:
  swift_bridgeObjectRelease();
LABEL_15:
  sub_100010A78((uint64_t)a5, (uint64_t)&v48, &qword_100088FD8);
  if (*((void *)&v49 + 1))
  {
    v51[0] = v48;
    v51[1] = v49;
    void v51[2] = v50;
    sub_10004701C(a5, (void (*)(void, void, void, void, void, void))sub_100046FD8);
    unint64_t v12 = sub_100046DFC(v12, (uint64_t)v51);
    sub_10004701C(a5, (void (*)(void, void, void, void, void, void))sub_100042990);
  }
  unint64_t v16 = *(void *)(v12 + 16);
  if (!v16) {
    goto LABEL_26;
  }
  uint64_t v17 = sub_100042C04(v12);
  uint64_t v19 = v18;
  char v21 = v20;
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_10004351C(v16);
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_26:
    uint64_t result = sub_10006A4A0();
    __break(1u);
    return result;
  }
  unint64_t v23 = v22;
  char v24 = v21 & 1;
  if (v22)
  {
    uint64_t v40 = a6;
    char v39 = v21;
    sub_100044FEC(v17, v19, v21 & 1);
    int64_t v25 = v17;
    uint64_t v26 = v19;
    do
    {
      uint64_t v27 = v26;
      uint64_t v28 = v25;
      char v29 = v24 & 1;
      int64_t v25 = sub_10004484C(v25, v26, v24 & 1, v12);
      uint64_t v26 = v30;
      char v24 = v31 & 1;
      sub_100044FE0(v28, v27, v29);
      --v23;
    }
    while (v23);
    sub_100044FE0(v17, v19, v39 & 1);
    swift_bridgeObjectRelease();
    uint64_t v17 = v25;
    uint64_t v19 = v26;
    a6 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_100040478(v17, v19, v12, (uint64_t)&v41);
  sub_100044FE0(v17, v19, v24);
  uint64_t result = swift_bridgeObjectRelease();
  char v33 = v42;
  __int16 v34 = v43;
  char v35 = v44;
  long long v36 = v45;
  uint64_t v37 = v46;
  uint64_t v38 = v47;
  *(void *)a6 = v41;
  *(unsigned char *)(a6 + 8) = v33;
  *(_WORD *)(a6 + 9) = v34;
  *(unsigned char *)(a6 + 11) = v35;
  *(_OWORD *)(a6 + 16) = v36;
  *(void *)(a6 + 32) = v37;
  *(void *)(a6 + 40) = v38;
  *(unsigned char *)(a6 + 48) = 0;
  return result;
}

void *sub_10003EE4C(uint64_t a1, uint64_t a2, uint8_t *a3)
{
  uint64_t v86 = sub_100069600();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v6 = __chkstk_darwin(v86 - 8);
  char v81 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)v75 - v8;
  uint64_t v9 = sub_1000059D8(&qword_10008A110);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (uint64_t)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v75 - v13;
  uint64_t v84 = a3;
  char v15 = sub_10004052C((uint64_t (*)(unsigned char *, uint64_t, uint64_t))a3, a2);
  uint64_t v89 = a2;
  uint64_t v16 = sub_1000417CC((uint64_t (*)(char *))sub_1000470C0, (uint64_t)v88, (uint64_t)v15);
  uint64_t v83 = 0;
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = sub_1000059D8(&qword_10008A108);
  uint64_t v19 = *(void *)(v18 - 8);
  if (v17)
  {
    sub_1000185F8(v16+ ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80)), (uint64_t)v14, &qword_10008A108);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, v20, 1, v18);
  swift_bridgeObjectRelease();
  int64_t v21 = sub_1000059D8(&qword_10008A108);
  int64_t v22 = *(void *)(v21 - 8);
  long long v82 = *(unsigned int (**)(char *, uint64_t, int64_t))(v22 + 48);
  if (v82(v14, 1, v21) != 1)
  {
    LODWORD(v87) = v14[*(int *)(v21 + 48)];
    sub_100007D0C((uint64_t)v14, &qword_100088EF8);
    goto LABEL_11;
  }
  sub_100007D0C((uint64_t)v14, &qword_10008A110);
  if (qword_1000889A8 == -1) {
    goto LABEL_6;
  }
  while (1)
  {
    swift_once();
LABEL_6:
    uint64_t v23 = sub_100069740();
    sub_10000CCEC(v23, (uint64_t)qword_10008A050);
    uint64_t v24 = v85;
    uint64_t v26 = v86;
    int64_t v25 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v87, a2, v86);
    uint64_t v27 = sub_100069720();
    os_log_type_t v28 = sub_10006A3A0();
    int v80 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      os_log_t v79 = v27;
      char v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(void *)&v92[0] = v78;
      uint64_t v77 = v29;
      uint64_t v76 = a2;
      *(_DWORD *)char v29 = 136315138;
      v75[1] = v29 + 4;
      sub_10004707C(&qword_10008A130);
      uint64_t v30 = sub_10006A560();
      v90[0] = sub_100036950(v30, v31, (uint64_t *)v92);
      a2 = v76;
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
      uint64_t v27 = v79;
      _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v80, "provideHomePrompts: Failed to identify time of day type for %s.", v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    }

    LODWORD(v87) = 4;
LABEL_11:
    uint64_t v32 = sub_100044FF8((uint64_t)v84, a2);
    __chkstk_darwin(v32);
    v75[-2] = a2;
    uint64_t v34 = sub_1000417CC((uint64_t (*)(char *))sub_10004705C, (uint64_t)&v75[-4], v33);
    if (*(void *)(v34 + 16))
    {
      sub_1000185F8(v34 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), v12, &qword_10008A108);
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, int64_t))(v22 + 56))(v12, v35, 1, v21);
    swift_bridgeObjectRelease();
    if (v82((char *)v12, 1, v21) == 1)
    {
      sub_100007D0C(v12, &qword_10008A110);
      if (qword_1000889A8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_100069740();
      sub_10000CCEC(v36, (uint64_t)qword_10008A050);
      uint64_t v37 = v85;
      uint64_t v38 = v81;
      uint64_t v39 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v81, a2, v86);
      uint64_t v40 = sub_100069720();
      os_log_type_t v41 = sub_10006A3A0();
      if (os_log_type_enabled(v40, v41))
      {
        char v42 = (uint8_t *)swift_slowAlloc();
        *(void *)&v92[0] = swift_slowAlloc();
        *(_DWORD *)char v42 = 136315138;
        uint64_t v12 = (uint64_t)(v42 + 12);
        uint64_t v84 = v42 + 4;
        sub_10004707C(&qword_10008A130);
        uint64_t v43 = sub_10006A560();
        v90[0] = sub_100036950(v43, v44, (uint64_t *)v92);
        sub_10006A3D0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "provideHomePrompts: Failed to identify time of week type for %s.", v42, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
      }

      LODWORD(v85) = 4;
    }
    else
    {
      LODWORD(v85) = *(unsigned __int8 *)(v12 + *(int *)(v21 + 48));
      sub_100007D0C(v12, &qword_100088EF8);
    }
    v90[6] = &_swiftEmptySetSingleton;
    long long v91 = &_swiftEmptySetSingleton;
    uint64_t v45 = a1 + 56;
    uint64_t v46 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v47 = -1;
    if (v46 < 64) {
      uint64_t v47 = ~(-1 << v46);
    }
    unint64_t v48 = v47 & *(void *)(a1 + 56);
    int64_t v21 = (unint64_t)(v46 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v22 = 0;
    a2 = 48;
    uint64_t v86 = (uint64_t)"a";
    if (v48)
    {
      while (1)
      {
        unint64_t v49 = __clz(__rbit64(v48));
        v48 &= v48 - 1;
        unint64_t v50 = v49 | (v22 << 6);
LABEL_42:
        uint64_t v54 = (_OWORD *)(*(void *)(a1 + 48) + 48 * v50);
        long long v56 = v54[1];
        long long v55 = v54[2];
        v92[0] = *v54;
        v92[1] = v56;
        v92[2] = v55;
        if (BYTE9(v92[0]) && BYTE9(v92[0]) != 1)
        {
          sub_100044F70((uint64_t)v92);
          swift_bridgeObjectRelease();
          uint64_t v12 = BYTE10(v92[0]);
          if (!BYTE10(v92[0])) {
            goto LABEL_49;
          }
LABEL_46:
          if (v12 == 1) {
            goto LABEL_49;
          }
          swift_bridgeObjectRelease();
LABEL_50:
          sub_1000435A8((uint64_t)v90, (uint64_t)v92);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v48) {
            break;
          }
        }
        else
        {
          char v57 = sub_10006A570();
          sub_100044F70((uint64_t)v92);
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0) {
            goto LABEL_26;
          }
          uint64_t v12 = BYTE10(v92[0]);
          if (BYTE10(v92[0])) {
            goto LABEL_46;
          }
LABEL_49:
          char v58 = sub_10006A570();
          swift_bridgeObjectRelease();
          if (v58) {
            goto LABEL_50;
          }
          int v59 = (int)v87;
          if (!v12)
          {
            swift_bridgeObjectRelease();
LABEL_56:
            unint64_t v61 = v86 | 0x8000000000000000;
            unint64_t v62 = 0xD000000000000010;
            switch(BYTE11(v92[0]))
            {
              case 1:
                unint64_t v62 = 0x6D6F4D6568546E69;
                uint64_t v63 = 7630437;
                goto LABEL_60;
              case 2:
                break;
              case 3:
                unint64_t v62 = 0x446C616963657073;
                uint64_t v63 = 7567713;
LABEL_60:
                unint64_t v61 = v63 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                break;
              default:
                unint64_t v62 = 0x616568416B6F6F6CLL;
                unint64_t v61 = 0xE900000000000064;
                break;
            }
            unint64_t v64 = v86 | 0x8000000000000000;
            unint64_t v65 = 0xD000000000000010;
            switch(v59)
            {
              case 0:
                unint64_t v64 = 0xE900000000000064;
                if (v62 != 0x616568416B6F6F6CLL) {
                  goto LABEL_69;
                }
                goto LABEL_66;
              case 1:
                unint64_t v65 = 0x6D6F4D6568546E69;
                unint64_t v64 = 0xEB00000000746E65;
                goto LABEL_65;
              case 2:
LABEL_65:
                if (v62 == v65) {
                  goto LABEL_66;
                }
                goto LABEL_69;
              case 3:
                unint64_t v64 = 0xEB00000000737961;
                if (v62 != 0x446C616963657073) {
                  goto LABEL_69;
                }
LABEL_66:
                if (v61 == v64)
                {
LABEL_85:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_50;
                }
LABEL_69:
                char v66 = sub_10006A570();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v66 & 1) == 0) {
                  goto LABEL_70;
                }
                goto LABEL_50;
              default:
                goto LABEL_70;
            }
          }
          char v60 = sub_10006A570();
          swift_bridgeObjectRelease();
          if (v60) {
            goto LABEL_56;
          }
LABEL_70:
          if (v85 != 4)
          {
            if (v12 == 1)
            {
              swift_bridgeObjectRelease();
LABEL_74:
              unint64_t v68 = v86 | 0x8000000000000000;
              unint64_t v69 = 0xD000000000000010;
              switch(BYTE11(v92[0]))
              {
                case 1:
                  unint64_t v69 = 0x6D6F4D6568546E69;
                  uint64_t v70 = 7630437;
                  goto LABEL_78;
                case 2:
                  break;
                case 3:
                  unint64_t v69 = 0x446C616963657073;
                  uint64_t v70 = 7567713;
LABEL_78:
                  unint64_t v68 = v70 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                  break;
                default:
                  unint64_t v69 = 0x616568416B6F6F6CLL;
                  unint64_t v68 = 0xE900000000000064;
                  break;
              }
              unint64_t v71 = v86 | 0x8000000000000000;
              unint64_t v72 = 0xD000000000000010;
              switch((int)v85)
              {
                case 1:
                  unint64_t v72 = 0x6D6F4D6568546E69;
                  unint64_t v71 = 0xEB00000000746E65;
                  goto LABEL_83;
                case 2:
LABEL_83:
                  if (v69 == v72) {
                    goto LABEL_84;
                  }
                  goto LABEL_88;
                case 3:
                  unint64_t v71 = 0xEB00000000737961;
                  if (v69 != 0x446C616963657073) {
                    goto LABEL_88;
                  }
                  goto LABEL_84;
                default:
                  unint64_t v71 = 0xE900000000000064;
                  if (v69 != 0x616568416B6F6F6CLL) {
                    goto LABEL_88;
                  }
LABEL_84:
                  if (v68 == v71) {
                    goto LABEL_85;
                  }
LABEL_88:
                  char v73 = sub_10006A570();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v73) {
                    goto LABEL_50;
                  }
                  goto LABEL_26;
              }
            }
            char v67 = sub_10006A570();
            swift_bridgeObjectRelease();
            if (v67) {
              goto LABEL_74;
            }
          }
LABEL_26:
          sub_100044FA8((uint64_t)v92);
          if (!v48) {
            break;
          }
        }
      }
    }
    int64_t v51 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_92;
    }
    if (v51 >= v21) {
      break;
    }
    unint64_t v52 = *(void *)(v45 + 8 * v51);
    ++v22;
    if (v52) {
      goto LABEL_41;
    }
    int64_t v22 = v51 + 1;
    if (v51 + 1 >= v21) {
      break;
    }
    unint64_t v52 = *(void *)(v45 + 8 * v22);
    if (v52) {
      goto LABEL_41;
    }
    int64_t v22 = v51 + 2;
    if (v51 + 2 >= v21) {
      break;
    }
    unint64_t v52 = *(void *)(v45 + 8 * v22);
    if (v52) {
      goto LABEL_41;
    }
    int64_t v53 = v51 + 3;
    if (v53 >= v21) {
      break;
    }
    unint64_t v52 = *(void *)(v45 + 8 * v53);
    if (v52)
    {
      int64_t v22 = v53;
LABEL_41:
      unint64_t v48 = (v52 - 1) & v52;
      unint64_t v50 = __clz(__rbit64(v52)) + (v22 << 6);
      goto LABEL_42;
    }
    while (1)
    {
      int64_t v22 = v53 + 1;
      if (__OFADD__(v53, 1)) {
        break;
      }
      if (v22 >= v21) {
        goto LABEL_90;
      }
      unint64_t v52 = *(void *)(v45 + 8 * v22);
      ++v53;
      if (v52) {
        goto LABEL_41;
      }
    }
LABEL_92:
    __break(1u);
  }
LABEL_90:
  swift_release();
  return v91;
}

unint64_t sub_10003FCE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(unsigned char *, uint64_t, uint64_t), int a4)
{
  int v67 = a4;
  uint64_t v66 = a1;
  uint64_t v65 = sub_100069600();
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v6 = __chkstk_darwin(v65 - 8);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v55 - v9;
  uint64_t v11 = sub_1000059D8(&qword_10008A110);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v55 - v15;
  uint64_t v63 = a3;
  uint64_t v17 = sub_10004052C(a3, a2);
  uint64_t v69 = a2;
  uint64_t v18 = sub_1000417CC((uint64_t (*)(char *))sub_1000470C0, (uint64_t)v68, (uint64_t)v17);
  uint64_t v62 = 0;
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = sub_1000059D8(&qword_10008A108);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v21;
  char v60 = v8;
  if (v19)
  {
    uint64_t v23 = v10;
    sub_1000185F8(v18 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)), (uint64_t)v16, &qword_10008A108);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v23 = v10;
    uint64_t v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v16, v24, 1, v20);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1000059D8(&qword_10008A108);
  uint64_t v26 = *(void *)(v25 - 8);
  unint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v61(v16, 1, v25) == 1)
  {
    sub_100007D0C((uint64_t)v16, &qword_10008A110);
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100069740();
    sub_10000CCEC(v27, (uint64_t)qword_10008A050);
    uint64_t v29 = v64;
    uint64_t v28 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v23, a2, v65);
    uint64_t v30 = sub_100069720();
    os_log_type_t v31 = sub_10006A3A0();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      os_log_t v59 = v30;
      uint64_t v33 = swift_slowAlloc();
      int v57 = v32;
      uint64_t v34 = (uint8_t *)v33;
      uint64_t v58 = swift_slowAlloc();
      v71[0] = v58;
      long long v56 = v34;
      *(_DWORD *)uint64_t v34 = 136315138;
      v55[1] = v34 + 4;
      sub_10004707C(&qword_10008A130);
      uint64_t v35 = sub_10006A560();
      uint64_t v70 = sub_100036950(v35, v36, v71);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
      uint64_t v30 = v59;
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v57, "provideLockPrompts: Failed to identify time of day type for %s.", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
    }

    int v37 = 4;
  }
  else
  {
    int v37 = v16[*(int *)(v25 + 48)];
    sub_100007D0C((uint64_t)v16, &qword_100088EF8);
  }
  uint64_t v38 = sub_100044FF8((uint64_t)v63, a2);
  __chkstk_darwin(v38);
  v55[-2] = a2;
  uint64_t v39 = v62;
  uint64_t v41 = sub_1000417CC((uint64_t (*)(char *))sub_1000470C0, (uint64_t)&v55[-4], v40);
  if (*(void *)(v41 + 16))
  {
    sub_1000185F8(v41 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), (uint64_t)v14, &qword_10008A108);
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v42 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v14, v42, 1, v25);
  swift_bridgeObjectRelease();
  if (v61(v14, 1, v25) == 1)
  {
    LODWORD(v63) = v37;
    sub_100007D0C((uint64_t)v14, &qword_10008A110);
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_100069740();
    sub_10000CCEC(v43, (uint64_t)qword_10008A050);
    uint64_t v44 = v64;
    uint64_t v45 = v65;
    uint64_t v46 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v60, a2, v65);
    uint64_t v47 = sub_100069720();
    os_log_type_t v48 = sub_10006A3A0();
    if (os_log_type_enabled(v47, v48))
    {
      unint64_t v49 = (uint8_t *)swift_slowAlloc();
      v71[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v49 = 136315138;
      uint64_t v62 = v39;
      sub_10004707C(&qword_10008A130);
      uint64_t v50 = sub_10006A560();
      uint64_t v70 = sub_100036950(v50, v51, v71);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "provideLockPrompts: Failed to identify time of week type for %s.", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);
    }

    int v52 = 4;
    int v37 = (int)v63;
  }
  else
  {
    int v52 = v14[*(int *)(v25 + 48)];
    sub_100007D0C((uint64_t)v14, &qword_100088EF8);
  }
  uint64_t v53 = swift_bridgeObjectRetain();
  return sub_100042F10(v53, v67 & 1, v37, v52);
}

uint64_t sub_100040478@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(void *)(a3 + 48) + 48 * result;
  char v5 = *(unsigned char *)(v4 + 8);
  __int16 v6 = *(_WORD *)(v4 + 9);
  char v7 = *(unsigned char *)(v4 + 11);
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v10 = *(void *)(v4 + 32);
  uint64_t v11 = *(void *)(v4 + 40);
  *(void *)a4 = *(void *)v4;
  *(unsigned char *)(a4 + 8) = v5;
  *(_WORD *)(a4 + 9) = v6;
  *(unsigned char *)(a4 + 11) = v7;
  *(void *)(a4 + 16) = v9;
  *(void *)(a4 + 24) = v8;
  *(void *)(a4 + 32) = v10;
  *(void *)(a4 + 40) = v11;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *sub_10004052C(uint64_t (*a1)(unsigned char *, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_10008A110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v128 = &v119[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v130 = &v119[-v8];
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v132 = &v119[-v10];
  __chkstk_darwin(v9);
  unint64_t v137 = &v119[-v11];
  uint64_t v143 = sub_1000059D8(&qword_10008A108);
  uint64_t v139 = *(void *)(v143 - 8);
  uint64_t v12 = __chkstk_darwin(v143);
  unint64_t v127 = &v119[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v129 = &v119[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v133 = &v119[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v131 = &v119[-v19];
  __chkstk_darwin(v18);
  unint64_t v135 = &v119[-v20];
  uint64_t v21 = sub_1000696C0();
  uint64_t v141 = *(void *)(v21 - 8);
  uint64_t v142 = v21;
  __chkstk_darwin(v21);
  uint64_t v146 = &v119[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v148 = sub_100069600();
  uint64_t v144 = *(void *)(v148 - 8);
  uint64_t v23 = __chkstk_darwin(v148);
  unint64_t v136 = &v119[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v134 = &v119[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v145 = &v119[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v147 = (void (*)(char *, uint64_t))&v119[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v140 = &v119[-v32];
  __chkstk_darwin(v31);
  uint64_t v34 = &v119[-v33];
  uint64_t v35 = sub_1000696B0();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = &v119[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = sub_1000059D8(&qword_10008A150);
  __chkstk_darwin(v39 - 8);
  uint64_t v41 = &v119[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = sub_100069320();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = &v119[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v38, enum case for Calendar.Component.day(_:), v35);
  uint64_t v138 = a1;
  sub_100069670();
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v38, v35);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
  {
    uint64_t v46 = v148;
    uint64_t v47 = v144;
    sub_100007D0C((uint64_t)v41, &qword_10008A150);
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_100069740();
    sub_10000CCEC(v48, (uint64_t)qword_10008A050);
    uint64_t v49 = v47;
    uint64_t v50 = v136;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v47 + 16))(v136, a2, v46);
    unint64_t v51 = sub_100069720();
    os_log_type_t v52 = sub_10006A3A0();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      sub_10004707C(&qword_10008A130);
      uint64_t v54 = sub_10006A560();
      uint64_t v149 = sub_100036950(v54, v55, &v150);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v50, v46);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "calculateTimeOfDayRanges: Failed to calculate day interval for %s.", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v50, v46);
    }
  }
  else
  {
    uint64_t v126 = v43;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v43 + 32))(v45, v41, v42);
    sub_100069310();
    long long v56 = v140;
    sub_100069300();
    uint64_t v57 = v144;
    uint64_t v58 = v144 + 16;
    os_log_t v59 = *(void (**)(void (*)(char *, uint64_t), unsigned char *, uint64_t))(v144 + 16);
    char v60 = v147;
    uint64_t v61 = v148;
    v59(v147, v34, v148);
    unint64_t v136 = (unsigned char *)v42;
    uint64_t v62 = v145;
    uint64_t v125 = v58;
    unint64_t v124 = (void (*)(unsigned char *, unsigned char *, uint64_t))v59;
    v59((void (*)(char *, uint64_t))v145, v56, v61);
    uint64_t v64 = v141;
    uint64_t v63 = v142;
    uint64_t v65 = v146;
    (*(void (**)(unsigned char *, uint64_t (*)(unsigned char *, uint64_t, uint64_t), uint64_t))(v141 + 16))(v146, v138, v142);
    uint64_t v66 = v137;
    sub_100041EB4(2, (uint64_t)v34, 4, v60, (uint64_t)v62, (uint64_t)v65, (uint64_t)v137);
    uint64_t v67 = v139 + 48;
    uint64_t v138 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v139 + 48);
    if (v138(v66, 1, v143) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v146, v63);
      unint64_t v68 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
      uint64_t v69 = v148;
      v68(v145, v148);
      v68(v147, v69);
      uint64_t v70 = v136;
    }
    else
    {
      uint64_t v122 = v45;
      unint64_t v123 = v34;
      uint64_t v71 = v57;
      uint64_t v72 = v143;
      uint64_t v73 = *(int *)(v143 + 48);
      uint64_t v74 = v67;
      uint64_t v75 = v135;
      sub_100010A78((uint64_t)v66, (uint64_t)v135, &qword_100088EF8);
      int v76 = v66[v73];
      v75[v73] = v76;
      uint64_t v77 = *(int *)(v72 + 48);
      uint64_t v78 = v133;
      sub_1000185F8((uint64_t)v75, (uint64_t)v133, &qword_100088EF8);
      int v120 = v76;
      v78[v77] = v76;
      unint64_t v137 = (unsigned char *)sub_1000059D8(&qword_100088EF8);
      uint64_t v79 = (uint64_t)v134;
      uint64_t v80 = v148;
      v124(v134, &v78[*((int *)v137 + 9)], v148);
      sub_100007D0C((uint64_t)v78, &qword_100088EF8);
      uint64_t v66 = v132;
      sub_100041EB4(0, v79, 6, v147, (uint64_t)v145, (uint64_t)v146, (uint64_t)v132);
      long long v82 = *(void (**)(unsigned char *, uint64_t))(v71 + 8);
      uint64_t v81 = v71 + 8;
      unint64_t v68 = v82;
      v82((unsigned char *)v79, v80);
      uint64_t v121 = v74;
      int v83 = v138(v66, 1, v72);
      uint64_t v84 = v80;
      if (v83 == 1)
      {
        sub_100007D0C((uint64_t)v75, &qword_10008A108);
        (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v146, v142);
        v68(v145, v80);
        v68(v147, v80);
        uint64_t v34 = v123;
        uint64_t v69 = v80;
      }
      else
      {
        uint64_t v144 = v81;
        uint64_t v85 = v79;
        uint64_t v86 = v143;
        uint64_t v87 = *(int *)(v143 + 48);
        long long v88 = v131;
        sub_100010A78((uint64_t)v66, (uint64_t)v131, &qword_100088EF8);
        int v89 = v66[v87];
        v88[v87] = v89;
        uint64_t v90 = *(int *)(v86 + 48);
        sub_1000185F8((uint64_t)v88, (uint64_t)v78, &qword_100088EF8);
        v78[v90] = v89;
        v124((unsigned char *)v85, &v78[*((int *)v137 + 9)], v84);
        sub_100007D0C((uint64_t)v78, &qword_100088EF8);
        uint64_t v66 = v130;
        sub_100041EB4(1, v85, 9, v147, (uint64_t)v145, (uint64_t)v146, (uint64_t)v130);
        v68((unsigned char *)v85, v84);
        if (v138(v66, 1, v86) == 1)
        {
          sub_100007D0C((uint64_t)v88, &qword_10008A108);
          sub_100007D0C((uint64_t)v135, &qword_10008A108);
          (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v146, v142);
          uint64_t v69 = v148;
          v68(v145, v148);
          v68(v147, v69);
          uint64_t v34 = v123;
        }
        else
        {
          LODWORD(v132) = v89;
          uint64_t v91 = *(int *)(v143 + 48);
          uint64_t v92 = v143;
          uint64_t v93 = v129;
          sub_100010A78((uint64_t)v66, (uint64_t)v129, &qword_100088EF8);
          int v94 = v66[v91];
          v93[v91] = v94;
          uint64_t v95 = *(int *)(v92 + 48);
          sub_1000185F8((uint64_t)v93, (uint64_t)v78, &qword_100088EF8);
          LODWORD(v130) = v94;
          v78[v95] = v94;
          uint64_t v96 = (uint64_t)v134;
          uint64_t v97 = v148;
          v124(v134, &v78[*((int *)v137 + 9)], v148);
          sub_100007D0C((uint64_t)v78, &qword_100088EF8);
          long long v98 = v128;
          uint64_t v100 = v146;
          uint64_t v99 = v147;
          long long v101 = v145;
          sub_100041EB4(2, v96, 5, v147, (uint64_t)v145, (uint64_t)v146, (uint64_t)v128);
          v68((unsigned char *)v96, v97);
          (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v100, v142);
          v68(v101, v97);
          v68(v99, v97);
          if (v138(v98, 1, v143) != 1)
          {
            uint64_t v104 = v143;
            uint64_t v105 = *(int *)(v143 + 48);
            uint64_t v106 = v127;
            sub_100010A78((uint64_t)v98, (uint64_t)v127, &qword_100088EF8);
            LODWORD(v147) = v98[v105];
            v106[v105] = (_BYTE)v147;
            sub_1000059D8(&qword_10008A158);
            uint64_t v107 = *(void *)(v139 + 72);
            unint64_t v108 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
            uint64_t v102 = swift_allocObject();
            *(_OWORD *)(v102 + 16) = xmmword_10006BD80;
            uint64_t v109 = v102 + v108;
            uint64_t v110 = *(int *)(v104 + 48);
            sub_1000185F8((uint64_t)v135, v109, &qword_100088EF8);
            *(unsigned char *)(v109 + v110) = v120;
            uint64_t v111 = *(int *)(v104 + 48);
            uint64_t v112 = v131;
            sub_1000185F8((uint64_t)v131, v109 + v107, &qword_100088EF8);
            *(unsigned char *)(v109 + v107 + v111) = (_BYTE)v132;
            uint64_t v113 = *(int *)(v104 + 48);
            unint64_t v114 = v129;
            sub_1000185F8((uint64_t)v129, v109 + 2 * v107, &qword_100088EF8);
            *(unsigned char *)(v109 + 2 * v107 + v113) = (_BYTE)v130;
            uint64_t v115 = v109 + 3 * v107;
            uint64_t v116 = *(int *)(v104 + 48);
            uint64_t v117 = v127;
            sub_1000185F8((uint64_t)v127, v115, &qword_100088EF8);
            *(unsigned char *)(v115 + v116) = (_BYTE)v147;
            sub_100007D0C((uint64_t)v117, &qword_10008A108);
            sub_100007D0C((uint64_t)v114, &qword_10008A108);
            sub_100007D0C((uint64_t)v112, &qword_10008A108);
            sub_100007D0C((uint64_t)v135, &qword_10008A108);
            uint64_t v118 = v148;
            v68(v140, v148);
            v68(v123, v118);
            (*(void (**)(unsigned char *, unsigned char *))(v126 + 8))(v122, v136);
            return (void *)v102;
          }
          sub_100007D0C((uint64_t)v129, &qword_10008A108);
          sub_100007D0C((uint64_t)v131, &qword_10008A108);
          sub_100007D0C((uint64_t)v135, &qword_10008A108);
          uint64_t v66 = v98;
          uint64_t v34 = v123;
          uint64_t v69 = v148;
        }
      }
      long long v56 = v140;
      uint64_t v70 = v136;
      uint64_t v45 = v122;
    }
    sub_100007D0C((uint64_t)v66, &qword_10008A110);
    v68(v56, v69);
    v68(v34, v69);
    (*(void (**)(unsigned char *, unsigned char *))(v126 + 8))(v45, v70);
  }
  return &_swiftEmptyArrayStorage;
}

double sub_100041490@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint8_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v9 = swift_projectBox();
  swift_beginAccess();
  uint64_t v10 = v9 + *(int *)(started + 28);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 8);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 9);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 10);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 11);
  uint64_t v15 = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v10 + 24);
  uint64_t v17 = *(void *)(v10 + 32);
  uint64_t v18 = *(void *)(v10 + 40);
  v24[0] = *(void *)v10;
  v24[1] = v11 | (v12 << 8) | (v13 << 16) | (v14 << 24);
  v24[2] = v15;
  v24[3] = v16;
  v24[4] = v17;
  v24[5] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003EAF8(a1, 2u, a2, a3, v24, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v19 = v21[1];
  *(_OWORD *)a4 = v21[0];
  *(_OWORD *)(a4 + 16) = v19;
  double result = *(double *)&v22;
  *(_OWORD *)(a4 + 32) = v22;
  *(unsigned char *)(a4 + 48) = v23;
  return result;
}

double sub_1000415A4@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint8_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v9 = swift_projectBox();
  swift_beginAccess();
  uint64_t v10 = v9 + *(int *)(started + 20);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 8);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 9);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 10);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 11);
  uint64_t v15 = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v10 + 24);
  uint64_t v17 = *(void *)(v10 + 32);
  uint64_t v18 = *(void *)(v10 + 40);
  v24[0] = *(void *)v10;
  v24[1] = v11 | (v12 << 8) | (v13 << 16) | (v14 << 24);
  v24[2] = v15;
  v24[3] = v16;
  v24[4] = v17;
  v24[5] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003EAF8(a1, 0, a2, a3, v24, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v19 = v21[1];
  *(_OWORD *)a4 = v21[0];
  *(_OWORD *)(a4 + 16) = v19;
  double result = *(double *)&v22;
  *(_OWORD *)(a4 + 32) = v22;
  *(unsigned char *)(a4 + 48) = v23;
  return result;
}

double sub_1000416B8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint8_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v9 = swift_projectBox();
  swift_beginAccess();
  uint64_t v10 = v9 + *(int *)(started + 24);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 8);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 9);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 10);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 11);
  uint64_t v15 = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v10 + 24);
  uint64_t v17 = *(void *)(v10 + 32);
  uint64_t v18 = *(void *)(v10 + 40);
  v24[0] = *(void *)v10;
  v24[1] = v11 | (v12 << 8) | (v13 << 16) | (v14 << 24);
  v24[2] = v15;
  v24[3] = v16;
  v24[4] = v17;
  v24[5] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003EAF8(a1, 1u, a2, a3, v24, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v19 = v21[1];
  *(_OWORD *)a4 = v21[0];
  *(_OWORD *)(a4 + 16) = v19;
  double result = *(double *)&v22;
  *(_OWORD *)(a4 + 32) = v22;
  *(unsigned char *)(a4 + 48) = v23;
  return result;
}

uint64_t sub_1000417CC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1000059D8(&qword_10008A108);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = &_swiftEmptyArrayStorage;
  uint64_t v25 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = (unint64_t *)&_swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void **)(v24 + 72);
      sub_1000185F8(a3 + v16 + (void)v13 * v14, (uint64_t)v12, &qword_10008A108);
      char v17 = a1(v12);
      if (v3)
      {
        sub_100007D0C((uint64_t)v12, &qword_10008A108);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_100010A78((uint64_t)v12, v23, &qword_10008A108);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10004445C(0, v15[2] + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_10004445C(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        void v15[2] = v19 + 1;
        uint64_t result = sub_100010A78(v23, (uint64_t)v15 + v16 + v19 * (void)v13, &qword_10008A108);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_100007D0C((uint64_t)v12, &qword_10008A108);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_100041A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088EF8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100069600();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004707C(&qword_10008A120);
  char v11 = sub_10006A290();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_1000185F8(a1, (uint64_t)v6, &qword_100088EF8);
  if (v11) {
    char v12 = sub_10006A280();
  }
  else {
    char v12 = 0;
  }
  sub_100007D0C((uint64_t)v6, &qword_100088EF8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

uint64_t sub_100041C08(unsigned char *a1, char a2, char a3, char a4)
{
  unsigned int v6 = a1[10];
  unsigned __int8 v7 = a1[11];
  if (a2) {
    uint64_t v8 = 0x696C6E496B636F6CLL;
  }
  else {
    uint64_t v8 = 0x746365526B636F6CLL;
  }
  if (a2) {
    unint64_t v9 = 0xEA0000000000656ELL;
  }
  else {
    unint64_t v9 = 0xEF72616C75676E61;
  }
  if (*(void *)&aLockinlilockre_0[8 * (char)a1[9]] == v8 && *(void *)&aNe_0[8 * (char)a1[9]] == v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_10006A570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  if (v6 > 1)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v13 = sub_10006A570();
  swift_bridgeObjectRelease();
  if (v13) {
    return 1;
  }
  if (a3 != 4)
  {
    if (v6)
    {
      char v14 = sub_10006A570();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (sub_100062ED0(v7, a3)) {
      return 1;
    }
  }
LABEL_25:
  if (a4 == 4) {
    return 0;
  }
  if (v6)
  {
    swift_bridgeObjectRelease();
    return sub_100062ED0(v7, a4) & 1;
  }
  char v15 = sub_10006A570();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v15) {
    return sub_100062ED0(v7, a4) & 1;
  }
  return result;
}

uint64_t sub_100041EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v80 = a6;
  uint64_t v81 = a7;
  long long v82 = a4;
  uint64_t v85 = a2;
  uint64_t v72 = sub_1000059D8(&qword_10008A100);
  uint64_t v9 = __chkstk_darwin(v72);
  uint64_t v73 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v67 - v11;
  uint64_t v70 = sub_1000059D8(&qword_100088EF8);
  __chkstk_darwin(v70);
  uint64_t v71 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000059D8(&qword_10008A140);
  __chkstk_darwin(v13 - 8);
  uint64_t v78 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000059D8(&qword_10008A148);
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000693D0();
  uint64_t v76 = *(void *)(v18 - 8);
  uint64_t v77 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000059D8(&qword_100088EE8);
  __chkstk_darwin(v21 - 8);
  uint64_t v75 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100069600();
  uint64_t v84 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  unint64_t v68 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v67 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v67 - v30;
  __chkstk_darwin(v29);
  int v83 = (char *)&v67 - v32;
  char v33 = 1;
  uint64_t v74 = a1;
  switch((char)a1)
  {
    case 2:
      break;
    default:
      char v33 = sub_10006A570();
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = v84;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v35(v31, v85, v23);
  v35(v28, (uint64_t)v82, v23);
  if (v33)
  {
    uint64_t v67 = a5;
    sub_10004707C(&qword_100089418);
    char v36 = sub_10006A2A0();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    v37(v28, v23);
    long long v82 = v37;
    v37(v31, v23);
    if ((v36 & 1) == 0)
    {
      uint64_t v40 = v83;
      v35(v83, v67, v23);
      uint64_t v38 = v85;
      goto LABEL_13;
    }
    uint64_t v34 = v84;
    uint64_t v38 = v85;
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v39(v28, v23);
    long long v82 = v39;
    v39(v31, v23);
    uint64_t v38 = v85;
  }
  uint64_t v40 = v83;
  uint64_t v41 = sub_1000696C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v17, 1, 1, v41);
  uint64_t v42 = sub_1000696E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v78, 1, 1, v42);
  sub_1000693C0();
  uint64_t v43 = (uint64_t)v75;
  sub_100069690();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v77);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v43, 1, v23) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v40, v43, v23);
LABEL_13:
    uint64_t v51 = sub_1000059D8(&qword_10008A108);
    uint64_t v52 = *(int *)(v51 + 48);
    sub_10004707C(&qword_10008A120);
    if (sub_10006A290())
    {
      uint64_t v53 = v72;
      uint64_t v54 = v69;
      unint64_t v55 = &v69[*(int *)(v72 + 48)];
      v35(v69, v38, v23);
      uint64_t v85 = v52;
      long long v56 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
      int v83 = v55;
      v56(v55, v40, v23);
      uint64_t v57 = *(int *)(v53 + 48);
      uint64_t v58 = v73;
      uint64_t v84 = v51;
      os_log_t v59 = &v73[v57];
      v35(v73, (uint64_t)v54, v23);
      v35(v59, (uint64_t)v55, v23);
      uint64_t v60 = (uint64_t)v71;
      v56(v71, v58, v23);
      uint64_t v61 = v82;
      v82(v59, v23);
      uint64_t v62 = &v58[*(int *)(v53 + 48)];
      v56(v58, v54, v23);
      v56(v62, v83, v23);
      v56((char *)(v60 + *(int *)(v70 + 36)), v62, v23);
      v61(v58, v23);
      uint64_t v63 = v81;
      sub_100010A78(v60, v81, &qword_100088EF8);
      uint64_t v64 = v84;
      *(unsigned char *)(v63 + v85) = v74;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
    }
    __break(1u);
    goto LABEL_18;
  }
  sub_100007D0C(v43, &qword_100088EE8);
  if (qword_1000889A8 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v44 = sub_100069740();
  sub_10000CCEC(v44, (uint64_t)qword_10008A050);
  uint64_t v45 = v68;
  v35(v68, v38, v23);
  uint64_t v46 = sub_100069720();
  os_log_type_t v47 = sub_10006A3A0();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136315138;
    sub_10004707C(&qword_10008A130);
    uint64_t v49 = sub_10006A560();
    uint64_t v86 = sub_100036950(v49, v50, &v87);
    sub_10006A3D0();
    swift_bridgeObjectRelease();
    v82(v45, v23);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "calculateTimeOfDayRanges: Failed to calculate range end using %s.", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v82(v45, v23);
  }

  uint64_t v66 = sub_1000059D8(&qword_10008A108);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v81, 1, 1, v66);
}

uint64_t type metadata accessor for StartWritingWidgetPromptProvider()
{
  return self;
}

uint64_t sub_100042990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000429D4(uint64_t a1)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_100042A30(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 32))(a2, a1, started);
  return a2;
}

uint64_t sub_100042A94(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  int v6 = *((unsigned __int8 *)a1 + 8);
  uint64_t v7 = *((char *)a1 + 9);
  uint64_t v8 = *((char *)a1 + 10);
  if ((sub_100062ED0(*((unsigned char *)a1 + 11), a2[11]) & 1) == 0) {
    return 0;
  }
  if (*(void *)&aLockinlilockre_0[8 * v7] == *(void *)&aLockinlilockre_0[8 * a2[9]]
    && *(void *)&aNe_0[8 * v7] == *(void *)&aNe_0[8 * a2[9]])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_10006A570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)&aTimeofdatimeof_0[8 * v8] == *(void *)&aTimeofdatimeof_0[8 * a2[10]]
    && *(void *)&aY_0[8 * v8] == *(void *)&aY_0[8 * a2[10]])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v5 == a3) & ~v6;
  }
  char v13 = sub_10006A570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v13) {
    return (v5 == a3) & ~v6;
  }
  return result;
}

uint64_t sub_100042C04(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_100042CA4()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000059D8(&qword_10008A138);
  uint64_t v3 = sub_10006A440();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    char v5 = (void *)(v2 + 56);
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_23;
        }
        unint64_t v16 = v5[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_23;
          }
          unint64_t v16 = v5[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_23;
            }
            unint64_t v16 = v5[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_23:
                swift_release();
                uint64_t v18 = 1 << *(unsigned char *)(v2 + 32);
                if (v18 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v5 = -1 << v18;
                }
                unint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_29;
                  }
                  if (v10 >= v8) {
                    goto LABEL_23;
                  }
                  unint64_t v16 = v5[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_22:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v12 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      char v13 = (long long *)(*(void *)(v2 + 48) + 48 * v12);
      long long v19 = *v13;
      long long v20 = v13[1];
      long long v21 = v13[2];
      sub_10006A590();
      sub_100064A98();
      sub_10006A5C0();
      unint64_t result = sub_10006A420();
      *(void *)(v3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v14 = (_OWORD *)(*(void *)(v3 + 48) + 48 * result);
      _OWORD *v14 = v19;
      v14[1] = v20;
      v14[2] = v21;
      ++*(void *)(v3 + 16);
    }
  }
  unint64_t result = swift_release();
  *unint64_t v1 = v3;
  return result;
}

unint64_t sub_100042F10(uint64_t isStackAllocationSafe, char a2, int a3, int a4)
{
  uint64_t v8 = isStackAllocationSafe;
  char v9 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v10 = (unint64_t)((1 << v9) + 63) >> 6;
  size_t v11 = 8 * v10;
  if ((v9 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    unint64_t v12 = sub_1000430A8((unint64_t)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v10, v8, a2 & 1, a3, a4);
    swift_release();
    if (v4) {
      swift_willThrow();
    }
  }
  else
  {
    char v13 = (void *)swift_slowAlloc();
    bzero(v13, v11);
    unint64_t v12 = sub_1000430A8((unint64_t)v13, v10, v8, a2 & 1, a3, a4);
    swift_release();
    swift_slowDealloc();
  }
  return v12;
}

unint64_t sub_1000430A8(unint64_t result, uint64_t a2, uint64_t a3, char a4, int a5, int a6)
{
  int v40 = a5;
  int v41 = a6;
  uint64_t v28 = (unint64_t *)result;
  int64_t v8 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  char v12 = a4 & 1;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v8 << 6);
LABEL_17:
    uint64_t v18 = *(void *)(a3 + 48) + 48 * v14;
    char v19 = *(unsigned char *)(v18 + 8);
    __int16 v20 = *(_WORD *)(v18 + 9);
    char v21 = *(unsigned char *)(v18 + 11);
    uint64_t v22 = *(void *)(v18 + 16);
    uint64_t v23 = *(void *)(v18 + 24);
    uint64_t v24 = *(void *)(v18 + 32);
    uint64_t v25 = *(void *)(v18 + 40);
    uint64_t v32 = *(void *)v18;
    char v33 = v19;
    __int16 v34 = v20;
    char v35 = v21;
    uint64_t v36 = v22;
    uint64_t v37 = v23;
    uint64_t v38 = v24;
    uint64_t v39 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v26 = sub_100041C08(&v32, v12, v40, v41);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      return result;
    }
    if (v26)
    {
      *(unint64_t *)((char *)v28 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v29++, 1);
      if (v15) {
        goto LABEL_30;
      }
    }
  }
  BOOL v15 = __OFADD__(v8++, 1);
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v8 >= v31) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v8);
  if (v16)
  {
LABEL_16:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v8 << 6);
    goto LABEL_17;
  }
  int64_t v17 = v8 + 1;
  if (v8 + 1 >= v31) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v8 + 2;
  if (v8 + 2 >= v31) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v8 + 3;
  if (v8 + 3 >= v31)
  {
LABEL_26:
    swift_retain();
    return sub_1000432F4(v28, a2, v29, a3);
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v8 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v8 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v8 >= v31) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v8);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1000432F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    swift_release();
    return (unint64_t)&_swiftEmptySetSingleton;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1000059D8(&qword_10008A138);
  unint64_t result = sub_10006A450();
  unint64_t v6 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  unint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_30;
      }
      if (v15 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          goto LABEL_27;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            goto LABEL_27;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              goto LABEL_27;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_31;
                }
                if (v11 >= a2) {
                  goto LABEL_27;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (long long *)(*(void *)(a4 + 48) + 48 * v14);
    long long v19 = *v18;
    long long v20 = v18[2];
    long long v26 = v18[1];
    long long v27 = v20;
    long long v25 = v19;
    sub_10006A590();
    sub_100044F70((uint64_t)&v25);
    sub_100064A98();
    sub_10006A5C0();
    unint64_t result = sub_10006A420();
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v21 = (_OWORD *)(*(void *)(v6 + 48) + 48 * result);
    long long v23 = v26;
    long long v22 = v27;
    *char v21 = v25;
    v21[1] = v23;
    _OWORD v21[2] = v22;
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_10004351C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    unint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000435A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_10006A590();
  swift_bridgeObjectRetain();
  sub_100064A98();
  Swift::Int v6 = sub_10006A5C0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v5 + 56;
  uint64_t v44 = v2;
  uint64_t v45 = a1;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = *v44;
    *uint64_t v44 = 0x8000000000000000;
    sub_100044F70(a2);
    sub_100043AF4(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v44 = v52;
    swift_bridgeObjectRelease();
    long long v34 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)a2;
    *(_OWORD *)(v45 + 16) = v34;
    *(_OWORD *)(v45 + 32) = *(_OWORD *)(a2 + 32);
    return 1;
  }
  uint64_t v10 = ~v7;
  uint64_t v49 = v5;
  uint64_t v50 = *(void *)a2;
  int v11 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v47 = ~v7;
  uint64_t v48 = v5 + 56;
  int v46 = v11;
  while (2)
  {
    uint64_t v12 = *(void *)(v5 + 48) + 48 * v8;
    uint64_t v13 = *(char *)(v12 + 9);
    uint64_t v14 = *(char *)(v12 + 10);
    uint64_t v15 = *(unsigned __int8 *)(v12 + 11);
    uint64_t v17 = *(void *)(v12 + 16);
    uint64_t v16 = *(void *)(v12 + 24);
    uint64_t v18 = *(void *)(v12 + 32);
    uint64_t v19 = *(void *)(v12 + 40);
    if (*(unsigned char *)(v12 + 8))
    {
      if (!v11) {
        goto LABEL_4;
      }
    }
    else
    {
      if (*(void *)v12 == v50) {
        char v20 = v11;
      }
      else {
        char v20 = 1;
      }
      if (v20) {
        goto LABEL_4;
      }
    }
    uint64_t v21 = 8 * v13;
    BOOL v22 = *(void *)&aLockinlilockre_0[v21] == *(void *)&aLockinlilockre_0[8 * *(char *)(a2 + 9)]
       && *(void *)&aNe_0[v21] == *(void *)&aNe_0[8 * *(char *)(a2 + 9)];
    uint64_t v51 = v18;
    if (v22)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_10006A570();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        goto LABEL_3;
      }
    }
    if (*(void *)&aTimeofdatimeof_0[8 * v14] == *(void *)&aTimeofdatimeof_0[8 * *(char *)(a2 + 10)]
      && *(void *)&aY_0[8 * v14] == *(void *)&aY_0[8 * *(char *)(a2 + 10)])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = sub_10006A570();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0) {
        goto LABEL_3;
      }
    }
    unint64_t v26 = 0x800000010006F5F0;
    unint64_t v27 = 0xD000000000000010;
    switch(v15)
    {
      case 1:
        unint64_t v27 = 0x6D6F4D6568546E69;
        uint64_t v28 = 7630437;
        goto LABEL_30;
      case 2:
        break;
      case 3:
        unint64_t v27 = 0x446C616963657073;
        uint64_t v28 = 7567713;
LABEL_30:
        unint64_t v26 = v28 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        break;
      default:
        unint64_t v27 = 0x616568416B6F6F6CLL;
        unint64_t v26 = 0xE900000000000064;
        break;
    }
    unint64_t v29 = 0x800000010006F5F0;
    unint64_t v30 = 0xD000000000000010;
    switch(*(unsigned char *)(a2 + 11))
    {
      case 1:
        unint64_t v30 = 0x6D6F4D6568546E69;
        unint64_t v29 = 0xEB00000000746E65;
        goto LABEL_35;
      case 2:
LABEL_35:
        if (v27 == v30) {
          goto LABEL_36;
        }
        goto LABEL_39;
      case 3:
        unint64_t v29 = 0xEB00000000737961;
        if (v27 != 0x446C616963657073) {
          goto LABEL_39;
        }
        goto LABEL_36;
      default:
        unint64_t v29 = 0xE900000000000064;
        if (v27 != 0x616568416B6F6F6CLL) {
          goto LABEL_39;
        }
LABEL_36:
        if (v26 == v29)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_39:
          char v31 = sub_10006A570();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) == 0) {
            goto LABEL_3;
          }
        }
        if ((v17 != *(void *)(a2 + 16) || v16 != *(void *)(a2 + 24)) && (sub_10006A570() & 1) == 0)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v48;
          uint64_t v5 = v49;
          uint64_t v10 = v47;
          int v11 = v46;
          goto LABEL_4;
        }
        if (v51 != *(void *)(a2 + 32) || v19 != *(void *)(a2 + 40))
        {
          char v32 = sub_10006A570();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v48;
          uint64_t v5 = v49;
          uint64_t v10 = v47;
          int v11 = v46;
          if (v32) {
            goto LABEL_49;
          }
LABEL_4:
          unint64_t v8 = (v8 + 1) & v10;
          if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_47;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_49:
        swift_bridgeObjectRelease();
        sub_100044FA8(a2);
        uint64_t v36 = *(void *)(*v44 + 48) + 48 * v8;
        char v37 = *(unsigned char *)(v36 + 8);
        __int16 v38 = *(_WORD *)(v36 + 9);
        char v39 = *(unsigned char *)(v36 + 11);
        uint64_t v41 = *(void *)(v36 + 16);
        uint64_t v40 = *(void *)(v36 + 24);
        uint64_t v42 = *(void *)(v36 + 32);
        uint64_t v43 = *(void *)(v36 + 40);
        *(void *)uint64_t v45 = *(void *)v36;
        *(unsigned char *)(v45 + 8) = v37;
        *(_WORD *)(v45 + 9) = v38;
        *(unsigned char *)(v45 + 11) = v39;
        *(void *)(v45 + 16) = v41;
        *(void *)(v45 + 24) = v40;
        *(void *)(v45 + 32) = v42;
        *(void *)(v45 + 40) = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return 0;
    }
  }
}

Swift::Int sub_100043AF4(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  Swift::Int v48 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_100042CA4();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (Swift::Int)sub_100044014();
        goto LABEL_54;
      }
      sub_1000441FC();
    }
    uint64_t v8 = *v3;
    sub_10006A590();
    sub_100064A98();
    unint64_t result = sub_10006A5C0();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    uint64_t v10 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v9;
      int v12 = *(unsigned __int8 *)(v5 + 8);
      uint64_t v41 = *(unsigned __int8 *)(v5 + 11);
      uint64_t v42 = 8 * *(char *)(v5 + 9);
      uint64_t v43 = *(void *)v5;
      uint64_t v47 = v8;
      uint64_t v45 = ~v9;
      uint64_t v46 = v8 + 56;
      int v44 = v12;
      while (1)
      {
        uint64_t v13 = *(void *)(v8 + 48) + 48 * a2;
        uint64_t v14 = *(char *)(v13 + 9);
        uint64_t v15 = *(char *)(v13 + 10);
        uint64_t v16 = *(unsigned __int8 *)(v13 + 11);
        uint64_t v18 = *(void *)(v13 + 16);
        uint64_t v17 = *(void *)(v13 + 24);
        uint64_t v20 = *(void *)(v13 + 32);
        uint64_t v19 = *(void *)(v13 + 40);
        if (*(unsigned char *)(v13 + 8))
        {
          if (!v12) {
            goto LABEL_11;
          }
        }
        else
        {
          if (*(void *)v13 == v43) {
            char v21 = v12;
          }
          else {
            char v21 = 1;
          }
          if (v21) {
            goto LABEL_11;
          }
        }
        uint64_t v22 = 8 * v14;
        if (*(void *)&aLockinlilockre_0[v22] == *(void *)&aLockinlilockre_0[v42]
          && *(void *)&aNe_0[v22] == *(void *)&aNe_0[v42])
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v24 = sub_10006A570();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0) {
            goto LABEL_10;
          }
        }
        if (*(void *)&aTimeofdatimeof_0[8 * v15] == *(void *)&aTimeofdatimeof_0[8 * *(char *)(v48 + 10)]
          && *(void *)&aY_0[8 * v15] == *(void *)&aY_0[8 * *(char *)(v48 + 10)])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v26 = sub_10006A570();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0) {
            goto LABEL_10;
          }
        }
        unint64_t v27 = 0x800000010006F5F0;
        unint64_t v28 = 0xD000000000000010;
        switch(v16)
        {
          case 1:
            unint64_t v28 = 0x6D6F4D6568546E69;
            uint64_t v29 = 7630437;
            goto LABEL_37;
          case 2:
            break;
          case 3:
            unint64_t v28 = 0x446C616963657073;
            uint64_t v29 = 7567713;
LABEL_37:
            unint64_t v27 = v29 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          default:
            unint64_t v28 = 0x616568416B6F6F6CLL;
            unint64_t v27 = 0xE900000000000064;
            break;
        }
        unint64_t v30 = 0x800000010006F5F0;
        unint64_t v31 = 0xD000000000000010;
        switch(v41)
        {
          case 1:
            unint64_t v31 = 0x6D6F4D6568546E69;
            unint64_t v30 = 0xEB00000000746E65;
            goto LABEL_42;
          case 2:
LABEL_42:
            if (v28 == v31) {
              goto LABEL_43;
            }
            goto LABEL_46;
          case 3:
            unint64_t v30 = 0xEB00000000737961;
            if (v28 != 0x446C616963657073) {
              goto LABEL_46;
            }
            goto LABEL_43;
          default:
            unint64_t v30 = 0xE900000000000064;
            if (v28 != 0x616568416B6F6F6CLL) {
              goto LABEL_46;
            }
LABEL_43:
            if (v27 == v30)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
LABEL_46:
              char v32 = sub_10006A570();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v32 & 1) == 0) {
                goto LABEL_10;
              }
            }
            if ((v18 != *(void *)(v48 + 16) || v17 != *(void *)(v48 + 24)) && (sub_10006A570() & 1) == 0)
            {
LABEL_10:
              swift_bridgeObjectRelease();
              unint64_t result = swift_bridgeObjectRelease();
              uint64_t v10 = v46;
              uint64_t v8 = v47;
              uint64_t v11 = v45;
              int v12 = v44;
              goto LABEL_11;
            }
            if (v20 == *(void *)(v48 + 32) && v19 == *(void *)(v48 + 40)) {
              goto LABEL_57;
            }
            char v33 = sub_10006A570();
            swift_bridgeObjectRelease();
            unint64_t result = swift_bridgeObjectRelease();
            uint64_t v10 = v46;
            uint64_t v8 = v47;
            uint64_t v11 = v45;
            int v12 = v44;
            if (v33) {
              goto LABEL_58;
            }
LABEL_11:
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v10 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_54;
            }
            break;
        }
      }
    }
  }
LABEL_54:
  uint64_t v34 = *v40;
  *(void *)(*v40 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  char v35 = (_OWORD *)(*(void *)(v34 + 48) + 48 * a2);
  long long v36 = *(_OWORD *)(v48 + 16);
  _OWORD *v35 = *(_OWORD *)v48;
  v35[1] = v36;
  v35[2] = *(_OWORD *)(v48 + 32);
  uint64_t v37 = *(void *)(v34 + 16);
  BOOL v38 = __OFADD__(v37, 1);
  uint64_t v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
LABEL_57:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_58:
    sub_10006A580();
    __break(1u);
    JUMPOUT(0x100043FF4);
  }
  *(void *)(v34 + 16) = v39;
  return result;
}

void *sub_100044014()
{
  unint64_t v1 = v0;
  sub_1000059D8(&qword_10008A138);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006A430();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27)
      {
        int64_t v9 = v26 + 2;
        if (v26 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v6 + 8 * v9);
        if (!v27) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    char v18 = *(unsigned char *)(v17 + 8);
    __int16 v19 = *(_WORD *)(v17 + 9);
    char v20 = *(unsigned char *)(v17 + 11);
    uint64_t v22 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v23 = *(void *)(v17 + 32);
    uint64_t v24 = *(void *)(v17 + 40);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v25 = *(void *)v17;
    *(unsigned char *)(v25 + 8) = v18;
    *(_WORD *)(v25 + 9) = v19;
    *(unsigned char *)(v25 + 11) = v20;
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v21;
    *(void *)(v25 + 32) = v23;
    *(void *)(v25 + 40) = v24;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v13) {
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1000441FC()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000059D8(&qword_10008A138);
  uint64_t v3 = sub_10006A440();
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = swift_release();
LABEL_25:
    *unint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v8) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v5 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v5 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v20 = *(void *)(v5 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_7:
    int64_t v13 = (long long *)(*(void *)(v2 + 48) + 48 * v12);
    long long v14 = *v13;
    long long v15 = v13[2];
    long long v23 = v13[1];
    long long v24 = v15;
    long long v22 = v14;
    sub_10006A590();
    sub_100044F70((uint64_t)&v22);
    sub_100064A98();
    sub_10006A5C0();
    unint64_t result = sub_10006A420();
    *(void *)(v3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (_OWORD *)(*(void *)(v3 + 48) + 48 * result);
    long long v18 = v23;
    long long v17 = v24;
    *uint64_t v16 = v22;
    v16[1] = v18;
    v16[2] = v17;
    ++*(void *)(v3 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v8)
  {
LABEL_23:
    unint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v5 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v5 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10004443C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10004447C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10004445C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100044604(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10004447C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000059D8(&qword_100088F00);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10006A4C0();
  __break(1u);
  return result;
}

uint64_t sub_100044604(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000059D8(&qword_10008A158);
  uint64_t v10 = *(void *)(sub_1000059D8(&qword_10008A108) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1000059D8(&qword_10008A108) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  long long v18 = (char *)v13 + v17;
  int64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  int64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10006A4C0();
  __break(1u);
  return result;
}

int64_t sub_10004484C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_100044930(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v29[0] = *(_OWORD *)a1;
  v29[1] = v4;
  long long v30 = *(_OWORD *)(a1 + 32);
  long long v5 = 0uLL;
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v13 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    goto LABEL_14;
  }
  sub_100044F70(a1);
  if ((void)v30 == sub_100069630() && *((void *)&v30 + 1) == v8)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v10 = sub_10006A570();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_12:
    sub_100044FA8(a1);
LABEL_13:
    uint64_t v13 = 0;
    uint64_t v17 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    long long v5 = 0uLL;
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)&v29[0];
  int v12 = BYTE8(v29[0]);
  if ((BYTE8(v29[0]) & 1) != 0
    || (sub_100044F70((uint64_t)v29), sub_10003E75C(a2, (char *)v29, v11, &v24), !(void)v27))
  {
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_100069740();
    sub_10000CCEC(v18, (uint64_t)qword_10008A050);
    sub_100044F70(a1);
    int64_t v19 = sub_100069720();
    os_log_type_t v20 = sub_10006A3A0();
    if (os_log_type_enabled(v19, v20))
    {
      int64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int64_t v21 = 134217984;
      sub_100044FA8(a1);
      if (v12) {
        uint64_t v22 = -1;
      }
      else {
        uint64_t v22 = v11;
      }
      uint64_t v24 = v22;
      sub_10006A3D0();
      sub_100044FA8(a1);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "providePersistedPrompts: Failed to find localized counterpart for prompt with key, %ld.", v21, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      sub_100044FA8(a1);
      sub_100044FA8(a1);
    }

    goto LABEL_13;
  }
  uint64_t v13 = v24;
  int v14 = v25;
  uint64_t v15 = v26;
  uint64_t v16 = v28;
  long long v23 = v27;
  sub_100044FA8(a1);
  uint64_t v17 = v14 & 0xFFFFFF01;
  long long v5 = v23;
LABEL_14:
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v17;
  *(void *)(a3 + 16) = v15;
  *(_OWORD *)(a3 + 24) = v5;
  *(void *)(a3 + 40) = v16;
  *(unsigned char *)(a3 + 48) = 0;
}

uint64_t sub_100044BAC()
{
  return sub_100044DCC((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_1000416B8);
}

uint64_t sub_100044BC4(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 40))(a2, a1, started);
  return a2;
}

uint64_t sub_100044C2C()
{
  return sub_100044DCC((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_1000415A4);
}

uint64_t sub_100044C48()
{
  uint64_t v1 = sub_100069600();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1000696C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_100044DB4()
{
  return sub_100044DCC((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_100041490);
}

uint64_t sub_100044DCC(uint64_t (*a1)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_100069600() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_1000696C0() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v7, v8, v1 + v3, v1 + v6, v9);
}

uint64_t sub_100044EF0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 65, 7);
}

__n128 sub_100044F30@<Q0>(uint64_t a1@<X8>)
{
  sub_100044F70(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = *(__n128 *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v1 + 64);
  return result;
}

uint64_t sub_100044F70(uint64_t a1)
{
  return a1;
}

uint64_t sub_100044FA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100044FE0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100044FEC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100044FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v206 = sub_1000059D8(&qword_10008A100);
  uint64_t v4 = __chkstk_darwin(v206);
  uint64_t v196 = (char *)&v186 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v194 = (char *)&v186 - v6;
  uint64_t v195 = sub_1000059D8(&qword_100088EF8);
  __chkstk_darwin(v195);
  uint64_t v205 = (char *)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_10008A140);
  __chkstk_darwin(v8 - 8);
  uint64_t v215 = (char *)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000059D8(&qword_10008A148);
  __chkstk_darwin(v10 - 8);
  uint64_t v213 = (char *)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_1000693D0();
  uint64_t v220 = *(void *)(v214 - 8);
  __chkstk_darwin(v214);
  uint64_t v212 = (char *)&v186 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000059D8(&qword_100088EE8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v209 = (char *)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  os_log_t v219 = (os_log_t)((char *)&v186 - v16);
  uint64_t v218 = sub_100069600();
  uint64_t v222 = *(void *)(v218 - 8);
  uint64_t v17 = __chkstk_darwin(v218);
  uint64_t v211 = (char *)&v186 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v208 = (char *)&v186 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v202 = (char *)&v186 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v204 = (char *)&v186 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v203 = (char *)&v186 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v207 = (char *)&v186 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v197 = (char *)&v186 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v200 = (char *)&v186 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v201 = (char *)&v186 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v199 = (char *)&v186 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v198 = (char *)&v186 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v210 = (char *)&v186 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v217 = (char *)&v186 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v221 = (char *)&v186 - v44;
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v186 - v45;
  uint64_t v47 = sub_1000696B0();
  uint64_t v48 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v186 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000059D8(&qword_10008A150);
  __chkstk_darwin(v51 - 8);
  uint64_t v53 = (char *)&v186 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100069320();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v186 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v50, enum case for Calendar.Component.weekOfYear(_:), v47);
  uint64_t v216 = a1;
  sub_100069670();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
  {
    uint64_t v58 = v222;
    uint64_t v59 = v218;
    sub_100007D0C((uint64_t)v53, &qword_10008A150);
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100069740();
    sub_10000CCEC(v60, (uint64_t)qword_10008A050);
    uint64_t v61 = v211;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v211, a2, v59);
    uint64_t v62 = sub_100069720();
    os_log_type_t v63 = sub_10006A3A0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v224 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315138;
      sub_10004707C(&qword_10008A130);
      uint64_t v65 = sub_10006A560();
      uint64_t v223 = sub_100036950(v65, v66, &v224);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v59);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "calculateTimeOfWeekRanges: Failed to calculate week interval from %s.", v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v59);
    }

    return (uint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v192 = v55;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v193 = v54;
  v67(v57, v53, v54);
  sub_100069310();
  uint64_t v191 = v57;
  sub_100069300();
  uint64_t v68 = sub_1000696C0();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
  uint64_t v190 = v69 + 56;
  v70(v213, 1, 1, v68);
  uint64_t v71 = sub_1000696E0();
  uint64_t v72 = *(void *)(v71 - 8);
  uint64_t v73 = v46;
  uint64_t v189 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
  uint64_t v188 = v72 + 56;
  v189(v215, 1, 1, v71);
  uint64_t v74 = (uint64_t)v212;
  sub_1000693C0();
  os_log_t v75 = v219;
  uint64_t v211 = v73;
  sub_100069690();
  uint64_t v77 = v220 + 8;
  uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
  uint64_t v78 = v74;
  uint64_t v79 = v218;
  v76(v78, v214);
  uint64_t v80 = v222;
  uint64_t v81 = *(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v222 + 48);
  if (v81(v75, 1, v79) == 1)
  {
    sub_100007D0C((uint64_t)v219, &qword_100088EE8);
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v82 = sub_100069740();
    sub_10000CCEC(v82, (uint64_t)qword_10008A050);
    int v83 = v208;
    uint64_t v84 = v79;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v208, v211, v79);
    uint64_t v85 = sub_100069720();
    os_log_type_t v86 = sub_10006A3A0();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v224 = swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 136315138;
      sub_10004707C(&qword_10008A130);
      uint64_t v88 = sub_10006A560();
      uint64_t v223 = sub_100036950(v88, v89, &v224);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      uint64_t v90 = *(void (**)(char *, uint64_t))(v80 + 8);
      v90(v83, v79);
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "calculateTimeOfWeekRanges: Failed to calculate \"inTheMoment\" start from %s.", v87, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v90 = *(void (**)(char *, uint64_t))(v80 + 8);
      v90(v83, v79);
    }

    uint64_t v104 = v192;
    uint64_t v105 = v191;
LABEL_24:
    v90(v221, v84);
    v90(v211, v84);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v193);
    return (uint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v220 = v77;
  uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 32);
  uint64_t v208 = (char *)(v80 + 32);
  uint64_t v187 = v91;
  v91(v217, (uint64_t)v219, v79);
  v70(v213, 1, 1, v68);
  v189(v215, 1, 1, v71);
  uint64_t v92 = (uint64_t)v212;
  sub_1000693C0();
  uint64_t v93 = (uint64_t)v209;
  int v94 = v221;
  sub_100069690();
  v76(v92, v214);
  uint64_t v84 = v79;
  if (v81((os_log_t)v93, 1, v79) == 1)
  {
    uint64_t v95 = v94;
    uint64_t v96 = v222;
    sub_100007D0C(v93, &qword_100088EE8);
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v97 = sub_100069740();
    sub_10000CCEC(v97, (uint64_t)qword_10008A050);
    long long v98 = v202;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v202, v95, v79);
    uint64_t v99 = sub_100069720();
    os_log_type_t v100 = sub_10006A3A0();
    if (os_log_type_enabled(v99, v100))
    {
      long long v101 = (uint8_t *)swift_slowAlloc();
      uint64_t v224 = swift_slowAlloc();
      *(_DWORD *)long long v101 = 136315138;
      sub_10004707C(&qword_10008A130);
      uint64_t v102 = sub_10006A560();
      uint64_t v223 = sub_100036950(v102, v103, &v224);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      uint64_t v90 = *(void (**)(char *, uint64_t))(v96 + 8);
      v90(v98, v79);
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "calculateTimeOfWeekRanges: Failed to calculate \"recentPast\" start from %s.", v101, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v90 = *(void (**)(char *, uint64_t))(v96 + 8);
      v90(v98, v79);
    }

    uint64_t v104 = v192;
    uint64_t v105 = v191;
    v90(v217, v79);
    goto LABEL_24;
  }
  uint64_t v106 = v210;
  v187(v210, v93, v84);
  uint64_t v107 = v217;
  char v108 = sub_1000695D0();
  uint64_t v109 = v222;
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v222 + 16);
  uint64_t v111 = v198;
  v110(v198, v107, v84);
  uint64_t v112 = v199;
  v110(v199, v106, v84);
  if (v108) {
    char v113 = sub_1000695D0();
  }
  else {
    char v113 = 0;
  }
  unint64_t v114 = v203;
  uint64_t v115 = *(void (**)(char *, uint64_t))(v109 + 8);
  v115(v112, v84);
  v115(v111, v84);
  uint64_t v116 = v201;
  v110(v201, v106, v84);
  uint64_t v117 = v200;
  v110(v200, v221, v84);
  uint64_t v222 = v109 + 8;
  if ((v113 & 1) == 0)
  {
    v115(v117, v84);
    v115(v116, v84);
    goto LABEL_33;
  }
  char v118 = sub_1000695D0();
  v115(v117, v84);
  v115(v116, v84);
  if ((v118 & 1) == 0)
  {
LABEL_33:
    uint64_t v163 = v217;
    if (qword_1000889A8 != -1) {
      swift_once();
    }
    uint64_t v164 = sub_100069740();
    sub_10000CCEC(v164, (uint64_t)qword_10008A050);
    uint64_t v165 = v197;
    v110(v197, v211, v84);
    v110(v207, v163, v84);
    v110(v114, v106, v84);
    int v166 = v204;
    v110(v204, v221, v84);
    uint64_t v167 = sub_100069720();
    os_log_type_t v168 = sub_10006A3A0();
    int v169 = v168;
    if (os_log_type_enabled(v167, v168))
    {
      uint64_t v170 = swift_slowAlloc();
      uint64_t v220 = swift_slowAlloc();
      uint64_t v224 = v220;
      *(_DWORD *)uint64_t v170 = 136315906;
      sub_10004707C(&qword_10008A130);
      os_log_t v219 = v167;
      uint64_t v171 = sub_10006A560();
      uint64_t v223 = sub_100036950(v171, v172, &v224);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      LODWORD(v216) = v169;
      v115(v165, v84);
      *(_WORD *)(v170 + 12) = 2080;
      uint64_t v173 = v207;
      uint64_t v174 = sub_10006A560();
      uint64_t v223 = sub_100036950(v174, v175, &v224);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      v115(v173, v84);
      *(_WORD *)(v170 + 22) = 2080;
      uint64_t v176 = sub_10006A560();
      uint64_t v223 = sub_100036950(v176, v177, &v224);
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      v115(v114, v84);
      *(_WORD *)(v170 + 32) = 2080;
      v178 = v204;
      uint64_t v106 = v210;
      uint64_t v179 = sub_10006A560();
      uint64_t v223 = sub_100036950(v179, v180, &v224);
      v181 = v221;
      sub_10006A3D0();
      swift_bridgeObjectRelease();
      v115(v178, v84);
      os_log_t v182 = v219;
      _os_log_impl((void *)&_mh_execute_header, v219, (os_log_type_t)v216, "calculateTimeOfWeekRanges: Invalid goalposts - %s, %s, %s, %s", (uint8_t *)v170, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v163 = v217;
      swift_slowDealloc();

      uint64_t v183 = v193;
      uint64_t v184 = v192;
      uint64_t v185 = v191;
    }
    else
    {
      v115(v165, v84);
      v115(v207, v84);
      v115(v114, v84);
      v115(v166, v84);

      uint64_t v183 = v193;
      uint64_t v184 = v192;
      uint64_t v185 = v191;
      v181 = v221;
    }
    v115(v106, v84);
    v115(v163, v84);
    v115(v181, v84);
    v115(v211, v84);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v185, v183);
    return (uint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v220 = (uint64_t)v115;
  sub_1000059D8(&qword_10008A158);
  uint64_t v119 = sub_1000059D8(&qword_10008A108);
  unint64_t v120 = (*(unsigned __int8 *)(*(void *)(v119 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v119 - 8) + 80);
  uint64_t v214 = *(void *)(*(void *)(v119 - 8) + 72);
  uint64_t v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = xmmword_10006BDA0;
  uint64_t v216 = v119;
  uint64_t v213 = (char *)*(int *)(v119 + 48);
  uint64_t v122 = sub_10004707C(&qword_10008A120);
  unint64_t v123 = v211;
  uint64_t v124 = v84;
  uint64_t v215 = (char *)v122;
  uint64_t result = sub_10006A290();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  os_log_t v219 = (os_log_t)(v121 + v120);
  uint64_t v126 = v194;
  uint64_t v127 = (uint64_t)&v194[*(int *)(v206 + 48)];
  uint64_t v128 = v123;
  uint64_t v129 = v206;
  v110(v194, v128, v84);
  uint64_t v212 = (char *)v127;
  v110((char *)v127, v217, v84);
  uint64_t v130 = *(int *)(v129 + 48);
  uint64_t v131 = v196;
  unint64_t v132 = &v196[v130];
  v110(v196, v126, v84);
  v110(v132, (char *)v127, v84);
  uint64_t v133 = v84;
  uint64_t v134 = (void (*)(char *, char *, uint64_t))v187;
  v187(v205, (uint64_t)v131, v133);
  ((void (*)(char *, uint64_t))v220)(v132, v124);
  unint64_t v135 = &v131[*(int *)(v206 + 48)];
  v134(v131, v126, v124);
  v134(v135, v212, v124);
  unint64_t v136 = v205;
  v134(&v205[*(int *)(v195 + 36)], v135, v124);
  ((void (*)(char *, uint64_t))v220)(v131, v124);
  uint64_t v137 = (uint64_t)v136;
  os_log_t v138 = v219;
  sub_100010A78(v137, (uint64_t)v219, &qword_100088EF8);
  v213[(void)v138] = 0;
  uint64_t v213 = (char *)*(int *)(v216 + 48);
  uint64_t v139 = v210;
  uint64_t result = sub_10006A290();
  if ((result & 1) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v212 = (char *)v219 + v214;
  uint64_t v140 = v206;
  uint64_t v141 = v194;
  uint64_t v142 = &v194[*(int *)(v206 + 48)];
  v110(v194, v217, v124);
  uint64_t v209 = v142;
  v110(v142, v139, v124);
  uint64_t v143 = v196;
  uint64_t v144 = &v196[*(int *)(v140 + 48)];
  v110(v196, v141, v124);
  v110(v144, v142, v124);
  uint64_t v145 = (void (*)(char *, char *, uint64_t))v187;
  v187(v205, (uint64_t)v143, v124);
  uint64_t v146 = (void (*)(char *, uint64_t))v220;
  ((void (*)(char *, uint64_t))v220)(v144, v124);
  unint64_t v147 = &v143[*(int *)(v206 + 48)];
  v145(v143, v141, v124);
  v145(v147, v209, v124);
  uint64_t v148 = v205;
  v145(&v205[*(int *)(v195 + 36)], v147, v124);
  v146(v143, v124);
  uint64_t v149 = (uint64_t)v148;
  uint64_t v150 = (uint64_t)v212;
  sub_100010A78(v149, (uint64_t)v212, &qword_100088EF8);
  v213[v150] = 1;
  uint64_t v216 = *(int *)(v216 + 48);
  v151 = v210;
  uint64_t v152 = v221;
  uint64_t result = sub_10006A290();
  if (result)
  {
    os_log_t v219 = (os_log_t)((char *)v219 + 2 * v214);
    uint64_t v153 = v206;
    char v154 = v194;
    uint64_t v155 = &v194[*(int *)(v206 + 48)];
    v110(v194, v151, v124);
    uint64_t v215 = v155;
    v110(v155, v152, v124);
    uint64_t v156 = v196;
    uint64_t v157 = &v196[*(int *)(v153 + 48)];
    v110(v196, v154, v124);
    v110(v157, v155, v124);
    uint64_t v158 = (uint64_t)v205;
    char v159 = (void (*)(char *, char *, uint64_t))v187;
    v187(v205, (uint64_t)v156, v124);
    uint64_t v160 = (void (*)(char *, uint64_t))v220;
    ((void (*)(char *, uint64_t))v220)(v157, v124);
    uint64_t v161 = &v156[*(int *)(v206 + 48)];
    v159(v156, v154, v124);
    v159(v161, v215, v124);
    v159((char *)(v158 + *(int *)(v195 + 36)), v161, v124);
    v160(v156, v124);
    os_log_t v162 = v219;
    sub_100010A78(v158, (uint64_t)v219, &qword_100088EF8);
    *((unsigned char *)&v162->isa + v216) = 2;
    v160(v210, v124);
    v160(v217, v124);
    v160(v221, v124);
    v160(v211, v124);
    (*(void (**)(char *, uint64_t))(v192 + 8))(v191, v193);
    return v121;
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_100046C24(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = (unint64_t *)result;
  uint64_t v25 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v11) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v6;
    if (!v19)
    {
      int64_t v6 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v6);
      if (!v19)
      {
        int64_t v6 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v7 + 8 * v6);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v13 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_5:
    uint64_t v14 = (_OWORD *)(*(void *)(a3 + 48) + 48 * v13);
    long long v16 = v14[1];
    long long v15 = v14[2];
    v24[0] = *v14;
    v24[1] = v16;
    v24[2] = v15;
    sub_100044F70((uint64_t)v24);
    char v17 = sub_100066264((uint64_t)v24, a4);
    uint64_t result = sub_100044FA8((uint64_t)v24);
    if ((v17 & 1) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_1000432F4(v23, a2, v25, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v6 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v6);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_100046DFC(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  sub_100044F70(a2);
  uint64_t isStackAllocationSafe = sub_100044F70(a2);
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_100044F70(a2);
    unint64_t v10 = sub_100046C24((unint64_t)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    sub_100044FA8(a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
    sub_100044FA8(a2);
    sub_100044FA8(a2);
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    sub_100044F70(a2);
    unint64_t v10 = sub_100046C24((unint64_t)v11, v7, a1, a2);
    sub_100044FA8(a2);
    swift_release();
    swift_slowDealloc();
    sub_100044FA8(a2);
    sub_100044FA8(a2);
  }
  return v10;
}

uint64_t sub_100046FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_10004701C(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10004705C(uint64_t a1)
{
  return sub_100041A2C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10004707C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100069600();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000470C0(uint64_t a1)
{
  return sub_10004705C(a1) & 1;
}

unint64_t sub_1000470E4()
{
  unint64_t result = qword_10008A160;
  if (!qword_10008A160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A160);
  }
  return result;
}

unint64_t sub_10004713C()
{
  unint64_t result = qword_10008A168;
  if (!qword_10008A168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A168);
  }
  return result;
}

uint64_t sub_100047190()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000471AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000471FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v4 = sub_10006A2D0();
  id v5 = [v3 initWithSuiteName:v4];

  if (v5)
  {
    NSString v6 = sub_10006A2D0();
    id v7 = [v5 objectForKey:v6];

    if (v7)
    {
      sub_10006A3F0();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v16, 0, sizeof(v16));
    }
    sub_100011D38((uint64_t)v16, (uint64_t)v17);
    if (v18)
    {
      if (swift_dynamicCast())
      {
        sub_100069410();
        swift_allocObject();
        sub_100069400();
        sub_100049404(&qword_10008A230);
        sub_1000693F0();
        sub_1000493AC(v14, v15);
        swift_release();
        uint64_t v12 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56))(a1, v12, 1, started);
      }
    }
    else
    {
      sub_100007D0C((uint64_t)v17, &qword_100089108);
    }
    id v8 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v9 = sub_10006A2D0();
    id v10 = [v8 initWithSuiteName:v9];

    if (v10)
    {
      NSString v11 = sub_10006A2D0();
      [v10 removeObjectForKey:v11];

      uint64_t v12 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56))(a1, v12, 1, started);
    }
  }
  uint64_t result = sub_10006A4A0();
  __break(1u);
  return result;
}

uint64_t sub_10004755C(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_100088F08);
  __chkstk_darwin(v2 - 8);
  NSString v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v6 = *(void *)(started - 8);
  __chkstk_darwin(started);
  id v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100049344(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, started) == 1)
  {
    sub_100007D0C((uint64_t)v4, &qword_100088F08);
    id v9 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v10 = sub_10006A2D0();
    id v11 = [v9 initWithSuiteName:v10];

    if (v11)
    {
      NSString v12 = sub_10006A2D0();
      [v11 removeObjectForKey:v12];

      return 1;
    }
  }
  else
  {
    sub_100042A30((uint64_t)v4, (uint64_t)v8);
    sub_100069440();
    swift_allocObject();
    sub_100069430();
    sub_100049404(&qword_10008A228);
    uint64_t v13 = sub_100069420();
    unint64_t v15 = v14;
    swift_release();
    id v16 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v17 = sub_10006A2D0();
    id v18 = [v16 initWithSuiteName:v17];

    if (v18)
    {
      Class isa = sub_1000694D0().super.isa;
      NSString v20 = sub_10006A2D0();
      [v18 setObject:isa forKey:v20];
      sub_1000493AC(v13, v15);

      sub_1000429D4((uint64_t)v8);
      return 1;
    }
  }
  uint64_t result = sub_10006A4A0();
  __break(1u);
  return result;
}

double sub_1000478D0@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100069700();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      if (qword_100088A28 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_10000CCEC(v4, (uint64_t)qword_100092D68);
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v7, v12, v4);
      uint64_t v14 = sub_10006A010();
      if (qword_100088A30 != -1) {
        swift_once();
      }
      unint64_t v15 = qword_100092D80;
      goto LABEL_23;
    case 2:
      if (qword_100088A88 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_10000CCEC(v4, (uint64_t)qword_100092E88);
      id v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v9(v7, v16, v4);
      uint64_t v10 = sub_10006A010();
      if (qword_100088A90 != -1) {
        swift_once();
      }
      id v11 = qword_100092EA0;
      goto LABEL_17;
    case 3:
      if (qword_100088AB8 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_10000CCEC(v4, (uint64_t)qword_100092F18);
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v7, v27, v4);
      uint64_t v14 = sub_10006A010();
      if (qword_100088AC0 != -1) {
        swift_once();
      }
      unint64_t v15 = qword_100092F30;
LABEL_23:
      uint64_t v28 = sub_10000CCEC(v4, (uint64_t)v15);
      v13(v7, v28, v4);
      uint64_t v29 = sub_10006A010();
      sub_1000059D8(&qword_1000893C8);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_10006BB40;
      *(void *)(v30 + 32) = v14;
      *(void *)(v30 + 40) = v29;
      *(void *)&long long v37 = v30;
      sub_10006A350();
      swift_retain();
      swift_retain();
      sub_10006A130();
      sub_10006A140();
      sub_10006A0B0();
      sub_100069840();
      swift_release();
      swift_release();
      uint64_t v31 = sub_1000059D8(&qword_1000893B0);
      uint64_t v32 = a2 + *(int *)(v31 + 36);
      uint64_t v33 = enum case for BlendMode.plusDarker(_:);
      uint64_t v23 = sub_10006A0F0();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);
      v24(v32, v33, v23);
      uint64_t v25 = a2 + *(int *)(v31 + 40);
      uint64_t v26 = enum case for BlendMode.plusLighter(_:);
      goto LABEL_24;
    default:
      if (qword_100088A58 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10000CCEC(v4, (uint64_t)qword_100092DF8);
      id v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v9(v7, v8, v4);
      uint64_t v10 = sub_10006A010();
      if (qword_100088A60 != -1) {
        swift_once();
      }
      id v11 = qword_100092E10;
LABEL_17:
      uint64_t v17 = sub_10000CCEC(v4, (uint64_t)v11);
      v9(v7, v17, v4);
      uint64_t v18 = sub_10006A010();
      sub_1000059D8(&qword_1000893C8);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_10006BB40;
      *(void *)(v19 + 32) = v10;
      *(void *)(v19 + 40) = v18;
      *(void *)&long long v37 = v19;
      sub_10006A350();
      swift_retain();
      swift_retain();
      sub_10006A130();
      sub_10006A140();
      sub_10006A0B0();
      sub_100069840();
      swift_release();
      swift_release();
      uint64_t v20 = sub_1000059D8(&qword_1000893B0);
      uint64_t v21 = a2 + *(int *)(v20 + 36);
      uint64_t v22 = enum case for BlendMode.normal(_:);
      uint64_t v23 = sub_10006A0F0();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);
      v24(v21, v22, v23);
      uint64_t v25 = a2 + *(int *)(v20 + 40);
      uint64_t v26 = v22;
LABEL_24:
      v24(v25, v26, v23);
      double result = *(double *)&v37;
      long long v35 = v38;
      *(_OWORD *)a2 = v37;
      *(_OWORD *)(a2 + 16) = v35;
      *(void *)(a2 + 32) = v39;
      return result;
  }
}

double sub_100047EE4@<D0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100069700();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 1:
      if (qword_100088A10 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_10000CCEC(v6, (uint64_t)qword_100092D20);
      id v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v11(v9, v14, v6);
      uint64_t v12 = sub_10006A010();
      if (a1)
      {
        if (qword_100088A20 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092D50;
      }
      else
      {
        if (qword_100088A18 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092D38;
      }
      break;
    case 2:
      if (qword_100088A70 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_10000CCEC(v6, (uint64_t)qword_100092E40);
      id v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v11(v9, v15, v6);
      uint64_t v12 = sub_10006A010();
      if (a1)
      {
        if (qword_100088A80 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092E70;
      }
      else
      {
        if (qword_100088A78 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092E58;
      }
      break;
    case 3:
      if (qword_100088AA0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_10000CCEC(v6, (uint64_t)qword_100092ED0);
      id v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v11(v9, v16, v6);
      uint64_t v12 = sub_10006A010();
      if (a1)
      {
        if (qword_100088AB0 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092F00;
      }
      else
      {
        if (qword_100088AA8 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092EE8;
      }
      break;
    default:
      if (qword_100088A40 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_10000CCEC(v6, (uint64_t)qword_100092DB0);
      id v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v11(v9, v10, v6);
      uint64_t v12 = sub_10006A010();
      if (a1)
      {
        if (qword_100088A50 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092DE0;
      }
      else
      {
        if (qword_100088A48 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092DC8;
      }
      break;
  }
  uint64_t v17 = sub_10000CCEC(v6, (uint64_t)v13);
  v11(v9, v17, v6);
  uint64_t v18 = sub_10006A010();
  sub_1000059D8(&qword_1000893C8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10006BB40;
  *(void *)(v19 + 32) = v12;
  *(void *)(v19 + 40) = v18;
  *(void *)&long long v23 = v19;
  sub_10006A350();
  swift_retain();
  swift_retain();
  sub_10006A130();
  sub_10006A140();
  sub_10006A0B0();
  sub_100069840();
  swift_release();
  swift_release();
  double result = *(double *)&v23;
  long long v21 = v24;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v21;
  *(void *)(a3 + 32) = v25;
  return result;
}

double sub_100048444@<D0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100069700();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 1:
      if (a1)
      {
        if (qword_100088A20 != -1) {
          swift_once();
        }
        id v11 = qword_100092D50;
      }
      else
      {
        if (qword_100088A18 != -1) {
          swift_once();
        }
        id v11 = qword_100092D38;
      }
      uint64_t v18 = sub_10000CCEC(v6, (uint64_t)v11);
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v15(v9, v18, v6);
      uint64_t v16 = sub_10006A010();
      if (qword_100088A38 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_100092D98;
      break;
    case 2:
      if (a1)
      {
        if (qword_100088A80 != -1) {
          swift_once();
        }
        uint64_t v12 = qword_100092E70;
      }
      else
      {
        if (qword_100088A78 != -1) {
          swift_once();
        }
        uint64_t v12 = qword_100092E58;
      }
      uint64_t v19 = sub_10000CCEC(v6, (uint64_t)v12);
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v15(v9, v19, v6);
      uint64_t v16 = sub_10006A010();
      if (qword_100088A98 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_100092EB8;
      break;
    case 3:
      if (a1)
      {
        if (qword_100088AB0 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092F00;
      }
      else
      {
        if (qword_100088AA8 != -1) {
          swift_once();
        }
        uint64_t v13 = qword_100092EE8;
      }
      uint64_t v20 = sub_10000CCEC(v6, (uint64_t)v13);
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v15(v9, v20, v6);
      uint64_t v16 = sub_10006A010();
      if (qword_100088AC8 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_100092F48;
      break;
    default:
      if (a1)
      {
        if (qword_100088A50 != -1) {
          swift_once();
        }
        uint64_t v10 = qword_100092DE0;
      }
      else
      {
        if (qword_100088A48 != -1) {
          swift_once();
        }
        uint64_t v10 = qword_100092DC8;
      }
      uint64_t v14 = sub_10000CCEC(v6, (uint64_t)v10);
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v15(v9, v14, v6);
      uint64_t v16 = sub_10006A010();
      if (qword_100088A68 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_100092E28;
      break;
  }
  uint64_t v21 = sub_10000CCEC(v6, (uint64_t)v17);
  v15(v9, v21, v6);
  uint64_t v22 = sub_10006A010();
  sub_1000059D8(&qword_1000893C8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10006BB40;
  *(void *)(v23 + 32) = v16;
  *(void *)(v23 + 40) = v22;
  *(void *)&long long v27 = v23;
  sub_10006A350();
  swift_retain();
  swift_retain();
  sub_10006A130();
  sub_10006A140();
  sub_10006A0B0();
  sub_100069840();
  swift_release();
  swift_release();
  double result = *(double *)&v27;
  long long v25 = v28;
  *(_OWORD *)a3 = v27;
  *(_OWORD *)(a3 + 16) = v25;
  *(void *)(a3 + 32) = v29;
  return result;
}

uint64_t sub_1000489B0()
{
  sub_1000059D8(&qword_100088BE0);
  uint64_t v0 = sub_10006A1C0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10006D7D0;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for WidgetFamily.accessoryInline(_:), v0);
  v6(v5 + v2, enum case for WidgetFamily.accessoryCircular(_:), v0);
  v6(v5 + 2 * v2, enum case for WidgetFamily.accessoryRectangular(_:), v0);
  v6(v5 + 3 * v2, enum case for WidgetFamily.systemSmall(_:), v0);
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v6)(v5 + 4 * v2, enum case for WidgetFamily.systemMedium(_:), v0);
  qword_100092C38 = v4;
  return result;
}

double sub_100048B30()
{
  uint64_t v0 = sub_100069700();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000059D8(&qword_1000893C8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10006BB40;
  if (qword_100088AD8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10000CCEC(v0, (uint64_t)qword_100092F78);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  *(void *)(v4 + 32) = sub_10006A010();
  if (qword_100088AD0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10000CCEC(v0, (uint64_t)qword_100092F60);
  v6(v3, v7, v0);
  *(void *)(v4 + 40) = sub_10006A010();
  *(void *)&long long v10 = v4;
  sub_10006A350();
  sub_10006A100();
  sub_10006A110();
  sub_10006A0B0();
  sub_100069840();
  double result = *(double *)&v10;
  xmmword_100092C40 = v10;
  *(_OWORD *)algn_100092C50 = v11;
  qword_100092C60 = v12;
  return result;
}

uint64_t sub_100048D44()
{
  uint64_t v0 = sub_100069470();
  sub_10000CD24(v0, qword_100092C68);
  sub_10000CCEC(v0, (uint64_t)qword_100092C68);
  return sub_100069450();
}

uint64_t sub_100048DA8(uint64_t a1)
{
  v1[2] = a1;
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  v1[3] = started;
  v1[4] = *(void *)(started - 8);
  v1[5] = swift_task_alloc();
  sub_1000059D8(&qword_100088F08);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return _swift_task_switch(sub_100048EA8, 0, 0);
}

uint64_t sub_100048EA8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = swift_allocBox();
  uint64_t v6 = v5;
  sub_1000471FC(v1);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v8 = v0[7];
  if (v7 == 1)
  {
    sub_100007D0C(v8, &qword_100088F08);
    swift_deallocBox();
  }
  else
  {
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v11 = v0[3];
    uint64_t v12 = v0[4];
    sub_100042A30(v8, v6);
    sub_10000F630(v6, v10);
    swift_retain();
    sub_100063328(0, 0, 0, 0, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10004933C, v4, v9);
    swift_release();
    sub_1000429D4(v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    sub_10004755C(v9);
    sub_100007D0C(v9, &qword_100088F08);
    swift_release();
  }
  sub_100068ED0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100049080@<X0>(uint64_t a1@<X8>)
{
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v3 = swift_projectBox();
  swift_beginAccess();
  uint64_t v4 = v3 + *(int *)(started + 28);
  char v5 = *(unsigned char *)(v4 + 8);
  __int16 v6 = *(_WORD *)(v4 + 9);
  char v7 = *(unsigned char *)(v4 + 11);
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v10 = *(void *)(v4 + 32);
  uint64_t v11 = *(void *)(v4 + 40);
  *(void *)a1 = *(void *)v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(_WORD *)(a1 + 9) = v6;
  *(unsigned char *)(a1 + 11) = v7;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = 1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100049128@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000889C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100069470();
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092C68);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000491D4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100006434;
  return sub_100048DA8(a1);
}

uint64_t sub_10004926C(uint64_t a1)
{
  unint64_t v2 = sub_100017DB4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for StartWritingWidgetUtil()
{
  return self;
}

ValueMetadata *type metadata accessor for StartWritingWidgetUtil.RefreshIntent()
{
  return &type metadata for StartWritingWidgetUtil.RefreshIntent;
}

unint64_t sub_1000492E0()
{
  unint64_t result = qword_10008A210;
  if (!qword_10008A210)
  {
    sub_100005A1C(&qword_10008A218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A210);
  }
  return result;
}

uint64_t sub_10004933C@<X0>(uint64_t a1@<X8>)
{
  return sub_100049080(a1);
}

uint64_t sub_100049344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000493AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100049404(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StartWritingWidgetPersistedPrompts();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100049448(uint64_t result, char a2)
{
  if (a2 != 2 && (a2 & 1) == 0)
  {
    uint64_t v3 = result;
    uint64_t v4 = sub_1000698A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    sub_1000059D8(&qword_10008A238);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10006BB40;
    sub_100069880();
    sub_100069890();
    sub_10004955C();
    sub_1000059D8(&qword_10008A240);
    sub_1000495B4();
    return sub_10006A410();
  }
  return result;
}

unint64_t sub_10004955C()
{
  unint64_t result = qword_1000892E8;
  if (!qword_1000892E8)
  {
    sub_1000698A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000892E8);
  }
  return result;
}

unint64_t sub_1000495B4()
{
  unint64_t result = qword_10008A248;
  if (!qword_10008A248)
  {
    sub_100005A1C(&qword_10008A240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A248);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for WidgetLabelStyle.Appearance(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLabelStyle()
{
  return &type metadata for WidgetLabelStyle;
}

uint64_t sub_10004963C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100049658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v23[0] = a2;
  v23[1] = a1;
  uint64_t v26 = a5;
  uint64_t v27 = sub_1000059D8(&qword_10008A250);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000059D8(&qword_10008A258);
  __chkstk_darwin(v25);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000059D8(&qword_10008A260);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000059D8(&qword_10008A268);
  __chkstk_darwin(v24);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100069BD0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    if (a4 == 1)
    {
      *(void *)uint64_t v8 = v23[0];
      *((void *)v8 + 1) = 0;
      v8[16] = 0;
      uint64_t v20 = sub_1000059D8(&qword_10008A270);
      sub_100049B34(0, (uint64_t)&v8[*(int *)(v20 + 44)], a3);
      sub_1000185F8((uint64_t)v8, (uint64_t)v10, &qword_10008A250);
      swift_storeEnumTagMultiPayload();
      sub_10004A4E0();
      sub_10004A58C();
      sub_100069B70();
      return sub_100007D0C((uint64_t)v8, &qword_10008A250);
    }
    else
    {
      sub_100069BE0();
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
      swift_storeEnumTagMultiPayload();
      sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
      sub_10004A58C();
      sub_100069B70();
      sub_1000185F8((uint64_t)v15, (uint64_t)v10, &qword_10008A268);
      swift_storeEnumTagMultiPayload();
      sub_10004A4E0();
      sub_100069B70();
      sub_100007D0C((uint64_t)v15, &qword_10008A268);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  else
  {
    *(void *)uint64_t v8 = v23[0];
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v22 = sub_1000059D8(&qword_10008A270);
    sub_100049B34(1, (uint64_t)&v8[*(int *)(v22 + 44)], a3);
    sub_1000185F8((uint64_t)v8, (uint64_t)v13, &qword_10008A250);
    swift_storeEnumTagMultiPayload();
    sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_10004A58C();
    sub_100069B70();
    sub_1000185F8((uint64_t)v15, (uint64_t)v10, &qword_10008A268);
    swift_storeEnumTagMultiPayload();
    sub_10004A4E0();
    sub_100069B70();
    sub_100007D0C((uint64_t)v15, &qword_10008A268);
    return sub_100007D0C((uint64_t)v8, &qword_10008A250);
  }
}

uint64_t sub_100049B34@<X0>(int a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v61 = a2;
  uint64_t v57 = sub_1000059D8(&qword_10008A290);
  __chkstk_darwin(v57);
  uint64_t v58 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000059D8(&qword_10008A298);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v60 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v46 - v9;
  uint64_t v10 = sub_100069BF0();
  uint64_t v54 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000059D8(&qword_10008A2A0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100069BD0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000059D8(&qword_10008A2A8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v46 - v23;
  int v56 = a1;
  uint64_t v46 = v12;
  if (a1)
  {
    sub_100069BE0();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v19, v16);
    swift_storeEnumTagMultiPayload();
    sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_10004A5E8(&qword_10008A2B0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    uint64_t v25 = (uint64_t)v24;
    sub_100069B70();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v27 = v17;
    long long v28 = v19;
    v26(v19, v16);
    uint64_t v29 = v54;
  }
  else
  {
    uint64_t v53 = v17;
    long long v28 = v19;
    sub_100069C00();
    uint64_t v30 = v54;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v15, v12, v10);
    swift_storeEnumTagMultiPayload();
    sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_10004A5E8(&qword_10008A2B0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    uint64_t v31 = v12;
    uint64_t v25 = (uint64_t)v24;
    sub_100069B70();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v10);
    uint64_t v29 = v30;
    uint64_t v27 = v53;
  }
  uint64_t v32 = v10;
  if (a3 == INFINITY)
  {
    long long v62 = xmmword_10006D8F0;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    char v66 = 0;
LABEL_6:
    sub_1000059D8(&qword_100089420);
    sub_1000187F8();
    sub_100069B70();
    uint64_t v54 = v67;
    uint64_t v53 = v68;
    uint64_t v52 = v69;
    uint64_t v51 = v70;
    uint64_t v50 = v71;
    uint64_t v49 = v72;
    uint64_t v48 = v73;
    uint64_t v47 = v74;
    char v33 = v75;
    goto LABEL_9;
  }
  if (a3 != 0.0)
  {
    sub_10006A0E0();
    sub_100069820();
    long long v62 = xmmword_10006D8F0;
    *(void *)&long long v63 = v76;
    *((void *)&v63 + 1) = v77;
    *(void *)&long long v64 = v78;
    *((void *)&v64 + 1) = v79;
    long long v65 = v80;
    char v66 = 1;
    goto LABEL_6;
  }
  uint64_t v54 = 0;
  uint64_t v53 = 0;
  uint64_t v52 = 0;
  uint64_t v51 = 0;
  uint64_t v50 = 0;
  uint64_t v49 = 0;
  uint64_t v48 = 0;
  uint64_t v47 = 0;
  char v33 = -1;
LABEL_9:
  if (v56)
  {
    uint64_t v34 = v46;
    sub_100069C00();
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v58, v34, v10);
    swift_storeEnumTagMultiPayload();
    sub_10004A5E8(&qword_10008A2B0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    uint64_t v35 = (uint64_t)v59;
    sub_100069B70();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v32);
  }
  else
  {
    sub_100069BE0();
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v58, v28, v16);
    swift_storeEnumTagMultiPayload();
    sub_10004A5E8(&qword_10008A2B0, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    uint64_t v35 = (uint64_t)v59;
    sub_100069B70();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v16);
  }
  uint64_t v36 = v55;
  sub_1000185F8(v25, v55, &qword_10008A2A8);
  uint64_t v37 = v60;
  sub_1000185F8(v35, v60, &qword_10008A298);
  uint64_t v38 = v61;
  sub_1000185F8(v36, v61, &qword_10008A2A8);
  uint64_t v39 = sub_1000059D8(&qword_10008A2B8);
  uint64_t v40 = v38 + *(int *)(v39 + 48);
  uint64_t v41 = v53;
  *(void *)uint64_t v40 = v54;
  *(void *)(v40 + 8) = v41;
  uint64_t v42 = v51;
  *(void *)(v40 + 16) = v52;
  *(void *)(v40 + 24) = v42;
  uint64_t v43 = v49;
  *(void *)(v40 + 32) = v50;
  *(void *)(v40 + 40) = v43;
  uint64_t v44 = v47;
  *(void *)(v40 + 48) = v48;
  *(void *)(v40 + 56) = v44;
  *(unsigned char *)(v40 + 64) = v33;
  sub_1000185F8(v37, v38 + *(int *)(v39 + 64), &qword_10008A298);
  sub_100007D0C(v35, &qword_10008A298);
  sub_100007D0C(v25, &qword_10008A2A8);
  sub_100007D0C(v37, &qword_10008A298);
  return sub_100007D0C(v36, &qword_10008A2A8);
}

uint64_t sub_10004A4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100049658(a1, *(void *)v2, *(double *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

unint64_t sub_10004A4E0()
{
  unint64_t result = qword_10008A278;
  if (!qword_10008A278)
  {
    sub_100005A1C(&qword_10008A268);
    sub_10004A5E8(&qword_10008A280, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    sub_10004A58C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A278);
  }
  return result;
}

unint64_t sub_10004A58C()
{
  unint64_t result = qword_10008A288;
  if (!qword_10008A288)
  {
    sub_100005A1C(&qword_10008A250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A288);
  }
  return result;
}

uint64_t sub_10004A5E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s14JournalWidgets16WidgetLabelStyleV10AppearanceOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14JournalWidgets16WidgetLabelStyleV10AppearanceOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10004A6BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10004A6D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLabelStyle.Appearance()
{
  return &type metadata for WidgetLabelStyle.Appearance;
}

unint64_t sub_10004A700()
{
  unint64_t result = qword_10008A2C0;
  if (!qword_10008A2C0)
  {
    sub_100005A1C(&qword_10008A2C8);
    sub_10004A4E0();
    sub_10004A58C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A2C0);
  }
  return result;
}

uint64_t *sub_10004A77C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000059D8(&qword_100088C28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10006A1C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10006A1A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_1000698A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (*(uint64_t *)((char *)a2 + v17 + 24))
    {
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *((void *)v19 + 1);
      char v22 = v19[16];
      sub_10004AA10(*(void *)v19, v21, v22);
      *(void *)uint64_t v18 = v20;
      *((void *)v18 + 1) = v21;
      v18[16] = v22;
      *((void *)v18 + 3) = *((void *)v19 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
    }
  }
  return a1;
}

uint64_t sub_10004AA10(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10004AA20(uint64_t a1, int *a2)
{
  sub_1000059D8(&qword_100088C28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10006A1C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006A1A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000698A0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    uint64_t result = swift_release();
  }
  uint64_t v10 = a1 + a2[7];
  if (*(void *)(v10 + 24))
  {
    sub_100018524(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10004ABC8(void *a1, void *a2, int *a3)
{
  sub_1000059D8(&qword_100088C28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006A1C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10006A1A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1000698A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    void *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (*(void *)((char *)a2 + v15 + 24))
  {
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *((void *)v17 + 1);
    char v20 = v17[16];
    sub_10004AA10(*(void *)v17, v19, v20);
    *(void *)uint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
    v16[16] = v20;
    *((void *)v16 + 3) = *((void *)v17 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v21;
  }
  return a1;
}

void *sub_10004AE0C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100088C28);
    sub_1000059D8(&qword_100088C28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10006A1C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100007D0C((uint64_t)a1 + v7, &qword_100089118);
    sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10006A1A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    sub_100007D0C((uint64_t)a1 + v11, &qword_100089110);
    sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000698A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      void *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a1 + v15 + 24);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
  if (v18)
  {
    if (v19)
    {
      uint64_t v20 = *(void *)v17;
      uint64_t v21 = *((void *)v17 + 1);
      char v22 = v17[16];
      sub_10004AA10(*(void *)v17, v21, v22);
      uint64_t v23 = *(void *)v16;
      uint64_t v24 = *(void *)(v16 + 8);
      char v25 = *(unsigned char *)(v16 + 16);
      *(void *)uint64_t v16 = v20;
      *(void *)(v16 + 8) = v21;
      *(unsigned char *)(v16 + 16) = v22;
      sub_100018524(v23, v24, v25);
      *(void *)(v16 + 24) = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100007D0C(v16, &qword_10008A2D0);
      long long v29 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v29;
    }
  }
  else if (v19)
  {
    uint64_t v26 = *(void *)v17;
    uint64_t v27 = *((void *)v17 + 1);
    char v28 = v17[16];
    sub_10004AA10(*(void *)v17, v27, v28);
    *(void *)uint64_t v16 = v26;
    *(void *)(v16 + 8) = v27;
    *(unsigned char *)(v16 + 16) = v28;
    *(void *)(v16 + 24) = *((void *)v17 + 3);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v30;
  }
  return a1;
}

char *sub_10004B0F8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100088C28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10006A1C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10006A1A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1000698A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  return a1;
}

char *sub_10004B31C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100088C28);
    uint64_t v6 = sub_1000059D8(&qword_100088C28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10006A1C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100007D0C((uint64_t)&a1[v8], &qword_100089118);
    uint64_t v11 = sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10006A1A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_100007D0C((uint64_t)&a1[v13], &qword_100089110);
    uint64_t v16 = sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000698A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = &a2[v18];
  if (!*(void *)&a1[v18 + 24]) {
    goto LABEL_15;
  }
  if (!*((void *)v20 + 3))
  {
    sub_100007D0C(v19, &qword_10008A2D0);
LABEL_15:
    long long v25 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v25;
    return a1;
  }
  char v21 = v20[16];
  uint64_t v22 = *(void *)v19;
  uint64_t v23 = *(void *)(v19 + 8);
  char v24 = *(unsigned char *)(v19 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = v21;
  sub_100018524(v22, v23, v24);
  *(void *)(v19 + 24) = *((void *)v20 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004B5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004B5DC);
}

uint64_t sub_10004B5DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100089C60);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000059D8(&qword_100089130);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_1000059D8(&qword_100089128);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7] + 24);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  int v17 = v16 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

uint64_t sub_10004B758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004B76C);
}

uint64_t sub_10004B76C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000059D8(&qword_100089C60);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1000059D8(&qword_100089130);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_1000059D8(&qword_100089128);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7] + 24) = a2;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for WidgetHeaderView()
{
  uint64_t result = qword_10008A330;
  if (!qword_10008A330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004B924()
{
  sub_10004BA84(319, (unint64_t *)&qword_100089CD0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_10004BA84(319, &qword_1000891B0, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_10004BA84(319, &qword_1000891A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10004BA84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000697C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10004BAD8()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10004BAF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a2[3];
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  uint64_t v6 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v7 = *a2;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *a1;
  sub_10004E7FC(*a1, v9, v8, v2);
  sub_10004E7FC(v7, v6, v5, v3);
  char v11 = sub_100069E30();
  sub_10004EB0C(v7, v6, v5, v3);
  sub_10004EB0C(v10, v9, v8, v2);
  return v11 & 1;
}

uint64_t sub_10004BBFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v2 = type metadata accessor for WidgetHeaderView();
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000059D8(&qword_10008A370);
  uint64_t v37 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000059D8(&qword_10008A378);
  __chkstk_darwin(v41);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_10008A380);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000059D8(&qword_10008A388);
  __chkstk_darwin(v40);
  char v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000059D8(&qword_10008A390);
  __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10006A1C0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_10003642C((uint64_t)&v36 - v19);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v20, v14);
  if (v21 == enum case for WidgetFamily.systemSmall(_:) || v21 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v28 = v39;
    sub_10004C8B4(v39);
    uint64_t v29 = v37;
    uint64_t v30 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v9, v28, v42);
    swift_storeEnumTagMultiPayload();
    sub_10004E410();
    uint64_t v31 = sub_100005A1C(&qword_10008A3D0);
    uint64_t v32 = sub_100005A1C(&qword_10008A3D8);
    uint64_t v33 = sub_10000CE3C(&qword_10008A3E0, &qword_10008A3D8);
    unint64_t v34 = sub_10002EBB4();
    unint64_t v44 = v32;
    uint64_t v45 = &type metadata for WidgetLabelStyle;
    uint64_t v46 = v33;
    unint64_t v47 = v34;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v44 = v31;
    uint64_t v45 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_100069B70();
    sub_1000185F8((uint64_t)v11, (uint64_t)v6, &qword_10008A388);
    swift_storeEnumTagMultiPayload();
    sub_10004E5F8();
    sub_100069B70();
    sub_100007D0C((uint64_t)v11, &qword_10008A388);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v39, v30);
  }
  else if (v21 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_10004C32C((uint64_t)v13);
    sub_1000185F8((uint64_t)v13, (uint64_t)v9, &qword_10008A390);
    swift_storeEnumTagMultiPayload();
    sub_10004E410();
    uint64_t v22 = sub_100005A1C(&qword_10008A3D0);
    uint64_t v23 = sub_100005A1C(&qword_10008A3D8);
    uint64_t v24 = sub_10000CE3C(&qword_10008A3E0, &qword_10008A3D8);
    unint64_t v25 = sub_10002EBB4();
    unint64_t v44 = v23;
    uint64_t v45 = &type metadata for WidgetLabelStyle;
    uint64_t v46 = v24;
    unint64_t v47 = v25;
    uint64_t v26 = swift_getOpaqueTypeConformance2();
    unint64_t v44 = v22;
    uint64_t v45 = (ValueMetadata *)v26;
    swift_getOpaqueTypeConformance2();
    sub_100069B70();
    sub_1000185F8((uint64_t)v11, (uint64_t)v6, &qword_10008A388);
    swift_storeEnumTagMultiPayload();
    sub_10004E5F8();
    sub_100069B70();
    sub_100007D0C((uint64_t)v11, &qword_10008A388);
    return sub_100007D0C((uint64_t)v13, &qword_10008A390);
  }
  else
  {
    sub_100018534(v1, v36);
    unint64_t v44 = 0;
    uint64_t v45 = (ValueMetadata *)0xE000000000000000;
    sub_10006A460(39);
    swift_bridgeObjectRelease();
    unint64_t v44 = 0xD000000000000025;
    uint64_t v45 = (ValueMetadata *)0x80000001000776A0;
    sub_10003642C((uint64_t)v18);
    sub_10004EB50(&qword_100089DB8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v48._countAndFlagsBits = sub_10006A560();
    sub_10006A310(v48);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t result = sub_10006A4A0();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004C32C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_100069DE0();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000059D8(&qword_10008A3B0);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000059D8(&qword_10008A3F0);
  uint64_t v6 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000059D8(&qword_10008A3A0);
  __chkstk_darwin(v38);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000059D8(&qword_10008A3F8);
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000059D8(&qword_10008A390);
  __chkstk_darwin(v36);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v1;
  sub_1000059D8(&qword_10008A400);
  sub_1000059D8(&qword_10008A408);
  sub_10004E72C();
  *(void *)&long long v47 = &type metadata for Image;
  *((void *)&v47 + 1) = &protocol witness table for Image;
  swift_getOpaqueTypeConformance2();
  sub_10006A080();
  if (*(void *)(v1 + *(int *)(type metadata accessor for WidgetHeaderView() + 28) + 24))
  {
    uint64_t v16 = sub_100069A50();
    char v17 = 0;
    __asm { FMOV            V0.2D, #4.0 }
    *(void *)&_Q0 = v16;
  }
  else
  {
    _Q0 = 0uLL;
    char v17 = 2;
  }
  long long v47 = _Q0;
  char v48 = v17;
  sub_10000CE3C(&qword_10008A3B8, &qword_10008A3B0);
  sub_10002EBB4();
  uint64_t v23 = v37;
  sub_100069EE0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v23);
  sub_100069D60();
  unint64_t v25 = v42;
  uint64_t v24 = v43;
  uint64_t v26 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for Font.Leading.tight(_:), v44);
  uint64_t v27 = sub_100069DF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v41;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v41);
  uint64_t v30 = (uint64_t *)&v10[*(int *)(v38 + 36)];
  uint64_t *v30 = KeyPath;
  v30[1] = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  sub_100069DA0();
  sub_10004E4E4();
  sub_100069ED0();
  sub_100007D0C((uint64_t)v10, &qword_10008A3A0);
  LODWORD(KeyPath) = sub_100069BC0();
  uint64_t v32 = v39;
  uint64_t v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v15, v13, v40);
  *(_DWORD *)&v15[*(int *)(v36 + 36)] = KeyPath;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);
  return sub_100010A78((uint64_t)v15, v45, &qword_10008A390);
}

uint64_t sub_10004C8B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v2 = sub_100069850();
  uint64_t v74 = *(void *)(v2 - 8);
  uint64_t v75 = v2;
  __chkstk_darwin(v2);
  uint64_t v73 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000059D8(&qword_10008A3D8);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  long long v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000059D8(&qword_10008A3D0);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000059D8(&qword_10008A370);
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  char v66 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000698A0();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = type metadata accessor for WidgetHeaderView();
  uint64_t v15 = __chkstk_darwin(v14);
  char v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t *)(v1 + *(int *)(v15 + 28));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = v18[2];
  uint64_t v22 = v18[3];
  uint64_t v59 = v18;
  uint64_t v77 = v22;
  uint64_t v62 = v20;
  uint64_t v63 = v19;
  uint64_t v61 = v21;
  uint64_t v60 = v1;
  if (v22)
  {
    sub_100018534(v1, (uint64_t)v17);
    sub_10004E7FC(v19, v20, v21, v22);
    sub_100036104((uint64_t)v13);
    sub_100069880();
    sub_10004EB50((unint64_t *)&qword_1000892E8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v23 = sub_10006A400();
    uint64_t v24 = v19;
    unint64_t v25 = *(void (**)(char *, uint64_t))(v58 + 8);
    v25(v11, v8);
    v25(v13, v8);
    sub_10004E7A0((uint64_t)v17);
    if (v23)
    {
      v78.i64[0] = 0xD00000000000007CLL;
      v78.i64[1] = 0x8000000100070370;
      sub_100005A64();
      uint64_t v26 = sub_100069E60();
      uint64_t v27 = v26;
      uint64_t v20 = v28;
      uint64_t v22 = v29;
      uint64_t v31 = v30 & 1;
      goto LABEL_7;
    }
    uint64_t v31 = v21 & 1;
    uint64_t v27 = v24;
    uint64_t v22 = v77;
  }
  else
  {
    sub_100018534(v1, (uint64_t)v17);
    sub_10004E7A0((uint64_t)v17);
    uint64_t v31 = 0;
    uint64_t v20 = 0;
    uint64_t v27 = 0;
  }
  uint64_t v26 = sub_10004E7FC(v27, v20, v31, v22);
LABEL_7:
  uint64_t v32 = __chkstk_darwin(v26);
  uint64_t v56 = v27;
  *(&v54 - 6) = v27;
  *(&v54 - 5) = v20;
  uint64_t v58 = v20;
  uint64_t v57 = v31;
  *(&v54 - 4) = v31;
  *(&v54 - 3) = v22;
  uint64_t v55 = v22;
  *(&v54 - 2) = v60;
  __chkstk_darwin(v32);
  *(&v54 - 2) = v33;
  sub_1000059D8(&qword_10008A418);
  sub_1000059D8(&qword_10008A420);
  uint64_t v34 = sub_100005A1C(&qword_10008A428);
  unint64_t v35 = sub_10004E858();
  v78.i64[0] = v34;
  v78.i64[1] = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = sub_100005A1C(&qword_10008A478);
  uint64_t v37 = sub_100005A1C(&qword_10008A480);
  unint64_t v38 = sub_10004EA6C();
  v78.i64[0] = v37;
  v78.i64[1] = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v78.i64[0] = v36;
  v78.i64[1] = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v40 = v64;
  sub_10006A080();
  if (v59[3])
  {
    uint64_t v41 = sub_100069A70();
    int64x2_t v42 = vdupq_n_s64(0x7FF0000000000000uLL);
    v42.i64[0] = v41;
    char v43 = 1;
  }
  else
  {
    int64x2_t v42 = 0uLL;
    char v43 = 2;
  }
  int64x2_t v78 = v42;
  LOBYTE(v79) = v43;
  uint64_t v44 = sub_10000CE3C(&qword_10008A3E0, &qword_10008A3D8);
  unint64_t v45 = sub_10002EBB4();
  uint64_t v46 = v69;
  uint64_t v47 = v67;
  sub_100069EE0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v47);
  uint64_t v49 = v73;
  uint64_t v48 = v74;
  uint64_t v50 = v75;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, enum case for DynamicTypeSize.large(_:), v75);
  v78.i64[0] = v47;
  v78.i64[1] = (uint64_t)&type metadata for WidgetLabelStyle;
  uint64_t v79 = v44;
  unint64_t v80 = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v66;
  uint64_t v52 = v72;
  sub_100069F30();
  sub_10004EB0C(v56, v58, v57, v55);
  sub_10004EB0C(v63, v62, v61, v77);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v52);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v68 + 32))(v76, v51, v70);
}

uint64_t sub_10004D09C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WidgetHeaderView() + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v6 & 1;
  if (v7) {
    uint64_t v9 = v4;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v7) {
    uint64_t v10 = v5;
  }
  else {
    uint64_t v10 = 0;
  }
  if (!v7) {
    uint64_t v8 = 0;
  }
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v8;
  a2[3] = v7;
  return sub_10004E7FC(v4, v5, v6, v7);
}

uint64_t sub_10004D0F8()
{
  return swift_release();
}

uint64_t sub_10004D178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v63 = a6;
  uint64_t v48 = sub_1000059D8(&qword_10008A4F8);
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10006A1A0();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v55 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v54 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_100069DE0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000059D8(&qword_10008A500);
  uint64_t v15 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  char v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000059D8(&qword_10008A440);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000059D8(&qword_10008A428);
  __chkstk_darwin(v62);
  char v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000059D8(&qword_10008A418);
  uint64_t v60 = *(void *)(v24 - 8);
  uint64_t v61 = v24;
  __chkstk_darwin(v24);
  uint64_t v58 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069E00();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Font.Leading.tight(_:), v11);
  uint64_t v26 = sub_100069DF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = v50;
  uint64_t v65 = v51;
  uint64_t v66 = v52;
  uint64_t v67 = v53;
  uint64_t v68 = KeyPath;
  uint64_t v69 = v26;
  sub_1000059D8(&qword_10008A448);
  sub_10004E9CC();
  sub_100069FB0();
  swift_release();
  swift_release();
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = v49;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v17, v49);
  char v30 = &v21[*(int *)(v19 + 44)];
  *(void *)char v30 = v28;
  *((void *)v30 + 1) = 1;
  v30[16] = 0;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v29);
  type metadata accessor for WidgetHeaderView();
  uint64_t v31 = v54;
  sub_1000363F4(v54);
  uint64_t v32 = v55;
  sub_10006A190();
  uint64_t v33 = v32;
  LOBYTE(v32) = sub_10006A170();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v56 + 8);
  unint64_t v35 = v33;
  uint64_t v36 = v57;
  v34(v35, v57);
  v34((char *)v31, v36);
  if (v32)
  {
    LODWORD(v64) = sub_100069BB0();
  }
  else
  {
    int v37 = sub_100069BC0();
    uint64_t v38 = v48;
    uint64_t v39 = v47;
    uint64_t v40 = &v47[*(int *)(v48 + 36)];
    uint64_t v41 = enum case for BlendMode.plusDarker(_:);
    uint64_t v42 = sub_10006A0F0();
    char v43 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104);
    v43(v40, v41, v42);
    v43(&v39[*(int *)(v38 + 40)], enum case for BlendMode.plusLighter(_:), v42);
    *(_DWORD *)uint64_t v39 = v37;
    sub_10000CE3C(&qword_10008A508, &qword_10008A4F8);
  }
  uint64_t v44 = sub_100069830();
  sub_1000185F8((uint64_t)v21, (uint64_t)v23, &qword_10008A440);
  *(void *)&v23[*(int *)(v62 + 36)] = v44;
  sub_100007D0C((uint64_t)v21, &qword_10008A440);
  sub_10004E858();
  unint64_t v45 = v58;
  sub_100069E70();
  sub_100007D0C((uint64_t)v23, &qword_10008A428);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v63, v45, v61);
}

uint64_t sub_10004D7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = sub_1000059D8(&qword_100088BE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000693B0();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000694C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000059D8(&qword_10008A498);
  uint64_t v10 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000059D8(&qword_10008A480);
  __chkstk_darwin(v30);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000059D8(&qword_10008A478);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  __chkstk_darwin(v15);
  char v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000059D8(&qword_10008A420);
  uint64_t v35 = *(void *)(v18 - 8);
  uint64_t v36 = v18;
  __chkstk_darwin(v18);
  uint64_t v34 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000693A0();
  if (qword_100088478 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100069390();
  sub_100069370();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v33);
    uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v32, v4, v7);
    __chkstk_darwin(v21);
    *(&v29 - 2) = v40;
    sub_1000059D8(&qword_10008A4A0);
    sub_10004EBA0();
    sub_100069E10();
    sub_10006A0E0();
    sub_100069820();
    uint64_t v22 = v37;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v37);
    uint64_t v23 = v30;
    uint64_t v24 = &v14[*(int *)(v30 + 36)];
    long long v25 = v45;
    *(_OWORD *)uint64_t v24 = v44;
    *((_OWORD *)v24 + 1) = v25;
    *((_OWORD *)v24 + 2) = v46;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
    unint64_t v26 = sub_10004EA6C();
    sub_100069E70();
    sub_100007D0C((uint64_t)v14, &qword_10008A480);
    uint64_t v42 = v23;
    unint64_t v43 = v26;
    swift_getOpaqueTypeConformance2();
    uint64_t v27 = v34;
    uint64_t v28 = v39;
    sub_100069EF0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v28);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v41, v27, v36);
  }
  return result;
}

uint64_t sub_10004DD80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_10006A030();
  uint64_t v43 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  __chkstk_darwin(v1);
  uint64_t v41 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000059D8(&qword_10008A4B8);
  uint64_t v3 = __chkstk_darwin(v49);
  long long v45 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v46 = (uint64_t)&v38 - v5;
  uint64_t v47 = sub_1000059D8(&qword_10008A4F0);
  __chkstk_darwin(v47);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000059D8(&qword_10008A4D8);
  __chkstk_darwin(v39);
  uint64_t v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_10006A050();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000059D8(&qword_100088C58);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10006A1A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v38 - v20;
  type metadata accessor for WidgetHeaderView();
  sub_1000363F4((uint64_t)v21);
  sub_10006A190();
  char v22 = sub_10006A170();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v19, v15);
  v23(v21, v15);
  if (v22)
  {
    uint64_t v24 = sub_10006A040();
    uint64_t v25 = sub_100069D80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
    uint64_t v26 = sub_100069DC0();
    sub_100007D0C((uint64_t)v14, &qword_100088C58);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v28 = v40;
    uint64_t v29 = v42;
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v11, enum case for Image.Scale.large(_:), v42);
    uint64_t v30 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))((char *)v9 + *(int *)(v39 + 28), v11, v29);
    uint64_t *v9 = v30;
    uint64_t v31 = v45;
    sub_1000185F8((uint64_t)v9, (uint64_t)v45 + *(int *)(v49 + 36), &qword_10008A4D8);
    *uint64_t v31 = v24;
    v31[1] = KeyPath;
    v31[2] = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100007D0C((uint64_t)v9, &qword_10008A4D8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v32 = v46;
    sub_100010A78((uint64_t)v31, v46, &qword_10008A4B8);
    sub_1000185F8(v32, (uint64_t)v7, &qword_10008A4B8);
    swift_storeEnumTagMultiPayload();
    sub_1000059D8(&qword_10008A4E8);
    sub_10004EC1C();
    sub_10004ED5C();
    sub_100069B70();
    return sub_100007D0C(v32, &qword_10008A4B8);
  }
  else
  {
    sub_10006A070();
    uint64_t v35 = v43;
    uint64_t v34 = v44;
    uint64_t v36 = v41;
    (*(void (**)(char *, void, uint64_t))(v43 + 104))(v41, enum case for Image.ResizingMode.stretch(_:), v44);
    uint64_t v37 = sub_10006A060();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    *(void *)uint64_t v7 = v37;
    *((void *)v7 + 1) = 0;
    *((_WORD *)v7 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_1000059D8(&qword_10008A4E8);
    sub_10004EC1C();
    sub_10004ED5C();
    return sub_100069B70();
  }
}

unint64_t sub_10004E410()
{
  unint64_t result = qword_10008A398;
  if (!qword_10008A398)
  {
    sub_100005A1C(&qword_10008A390);
    sub_100005A1C(&qword_10008A3A0);
    sub_10004E4E4();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_10008A3C0, &qword_10008A3C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A398);
  }
  return result;
}

unint64_t sub_10004E4E4()
{
  unint64_t result = qword_10008A3A8;
  if (!qword_10008A3A8)
  {
    sub_100005A1C(&qword_10008A3A0);
    sub_100005A1C(&qword_10008A3B0);
    sub_10000CE3C(&qword_10008A3B8, &qword_10008A3B0);
    sub_10002EBB4();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A3A8);
  }
  return result;
}

unint64_t sub_10004E5F8()
{
  unint64_t result = qword_10008A3E8;
  if (!qword_10008A3E8)
  {
    sub_100005A1C(&qword_10008A388);
    sub_10004E410();
    sub_100005A1C(&qword_10008A3D0);
    sub_100005A1C(&qword_10008A3D8);
    sub_10000CE3C(&qword_10008A3E0, &qword_10008A3D8);
    sub_10002EBB4();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A3E8);
  }
  return result;
}

uint64_t sub_10004E724@<X0>(uint64_t *a1@<X8>)
{
  return sub_10004D09C(*(void *)(v1 + 16), a1);
}

unint64_t sub_10004E72C()
{
  unint64_t result = qword_10008A410;
  if (!qword_10008A410)
  {
    sub_100005A1C(&qword_10008A400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A410);
  }
  return result;
}

uint64_t sub_10004E7A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetHeaderView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004E7FC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10004AA10(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10004E840@<X0>(uint64_t a1@<X8>)
{
  return sub_10004D178(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t sub_10004E850@<X0>(uint64_t a1@<X8>)
{
  return sub_10004D7DC(*(void *)(v1 + 16), a1);
}

unint64_t sub_10004E858()
{
  unint64_t result = qword_10008A430;
  if (!qword_10008A430)
  {
    sub_100005A1C(&qword_10008A428);
    sub_10004E8F8();
    sub_10000CE3C(&qword_10008A468, &qword_10008A470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A430);
  }
  return result;
}

unint64_t sub_10004E8F8()
{
  unint64_t result = qword_10008A438;
  if (!qword_10008A438)
  {
    sub_100005A1C(&qword_10008A440);
    sub_100005A1C(&qword_10008A448);
    sub_10004E9CC();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_10008A458, &qword_10008A460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A438);
  }
  return result;
}

unint64_t sub_10004E9CC()
{
  unint64_t result = qword_10008A450;
  if (!qword_10008A450)
  {
    sub_100005A1C(&qword_10008A448);
    sub_10004E72C();
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A450);
  }
  return result;
}

unint64_t sub_10004EA6C()
{
  unint64_t result = qword_10008A488;
  if (!qword_10008A488)
  {
    sub_100005A1C(&qword_10008A480);
    sub_10000CE3C(&qword_10008A490, &qword_10008A498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A488);
  }
  return result;
}

uint64_t sub_10004EB0C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100018524(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004EB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004EB98@<X0>(uint64_t a1@<X8>)
{
  return sub_10004DD80(a1);
}

unint64_t sub_10004EBA0()
{
  unint64_t result = qword_10008A4A8;
  if (!qword_10008A4A8)
  {
    sub_100005A1C(&qword_10008A4A0);
    sub_10004EC1C();
    sub_10004ED5C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A4A8);
  }
  return result;
}

unint64_t sub_10004EC1C()
{
  unint64_t result = qword_10008A4B0;
  if (!qword_10008A4B0)
  {
    sub_100005A1C(&qword_10008A4B8);
    sub_10004ECBC();
    sub_10000CE3C(&qword_10008A4D0, &qword_10008A4D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A4B0);
  }
  return result;
}

unint64_t sub_10004ECBC()
{
  unint64_t result = qword_10008A4C0;
  if (!qword_10008A4C0)
  {
    sub_100005A1C(&qword_10008A4C8);
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A4C0);
  }
  return result;
}

unint64_t sub_10004ED5C()
{
  unint64_t result = qword_10008A4E0;
  if (!qword_10008A4E0)
  {
    sub_100005A1C(&qword_10008A4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A4E0);
  }
  return result;
}

uint64_t sub_10004EDD0()
{
  return sub_100069920();
}

uint64_t sub_10004EDF4(uint64_t a1)
{
  uint64_t v2 = sub_10006A050();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100069930();
}

uint64_t initializeBufferWithCopyOfBuffer for StartWritingWidgetPrompt(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for WidgetHeaderView.Appearance(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    sub_100018524(*(void *)result, *(void *)(result + 8), *(unsigned char *)(result + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for WidgetHeaderView.Appearance(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[3];
  if (v3 < 0xFFFFFFFF)
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    char v6 = *((unsigned char *)a2 + 16);
    sub_10004AA10(*a2, v5, v6);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for WidgetHeaderView.Appearance(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      uint64_t v11 = *(void *)a2;
      uint64_t v12 = *(void *)(a2 + 8);
      char v13 = *(unsigned char *)(a2 + 16);
      sub_10004AA10(*(void *)a2, v12, v13);
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(unsigned char *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_100018524(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_10004AA10(*(void *)a2, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_100018524(v8, v9, v10);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for WidgetHeaderView.Appearance(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for WidgetHeaderView.Appearance(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    sub_100018524(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    swift_bridgeObjectRelease();
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100018524(v6, v7, v8);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetHeaderView.Appearance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WidgetHeaderView.Appearance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_10004F218(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10004F230(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetHeaderView.Appearance()
{
  return &type metadata for WidgetHeaderView.Appearance;
}

unint64_t sub_10004F268()
{
  unint64_t result = qword_10008A510;
  if (!qword_10008A510)
  {
    sub_100005A1C(&qword_10008A518);
    sub_10004E5F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A510);
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetAccessoryCircularView()
{
  return &type metadata for StartWritingWidgetAccessoryCircularView;
}

uint64_t sub_10004F2F4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10004F310(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t *sub_10004F320(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000698A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    char v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10006A1A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    long long v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100069600();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
    uint64_t v18 = *(int *)(started + 20);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    *((_DWORD *)v19 + 2) = *((_DWORD *)v20 + 2);
    *(void *)uint64_t v19 = *(void *)v20;
    uint64_t v21 = *((void *)v20 + 3);
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v21;
    uint64_t v22 = *((void *)v20 + 5);
    *((void *)v19 + 4) = *((void *)v20 + 4);
    *((void *)v19 + 5) = v22;
    uint64_t v23 = *(int *)(started + 24);
    __dst = &v14[v23];
    uint64_t v31 = started;
    uint64_t v24 = &v15[v23];
    uint64_t v25 = sub_10006A250();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = sub_1000059D8(&qword_100088F10);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    v14[*(int *)(v31 + 28)] = v15[*(int *)(v31 + 28)];
  }
  return a1;
}

uint64_t sub_10004F664(uint64_t a1, uint64_t a2)
{
  sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000698A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006A1A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_100069600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v7 + *(int *)(started + 24);
  uint64_t v11 = sub_10006A250();
  uint64_t v14 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v13(v10, v11);
  }
  return result;
}

void *sub_10004F86C(void *a1, void *a2, uint64_t a3)
{
  sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000698A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10006A1A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v29 = a1;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v16 = started[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  *((_DWORD *)v17 + 2) = *((_DWORD *)v18 + 2);
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v19;
  uint64_t v20 = *((void *)v18 + 5);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = v20;
  uint64_t v21 = started[6];
  __dst = &v12[v21];
  uint64_t v22 = &v13[v21];
  uint64_t v23 = sub_10006A250();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = sub_1000059D8(&qword_100088F10);
    memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  v12[started[7]] = v13[started[7]];
  return v29;
}

void *sub_10004FB64(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100089110);
    sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000698A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100007D0C((uint64_t)a1 + v7, &qword_100089118);
    sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10006A1A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v29 = a1;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v16 = started[5];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  LOBYTE(v16) = v13[v16 + 8];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v16;
  v17[9] = v18[9];
  v17[10] = v18[10];
  v17[11] = v18[11];
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = *((void *)v18 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = *((void *)v18 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = started[6];
  uint64_t v20 = &v12[v19];
  uint64_t v21 = &v13[v19];
  uint64_t v22 = sub_10006A250();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_14;
  }
  if (v26)
  {
LABEL_14:
    uint64_t v27 = sub_1000059D8(&qword_100088F10);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_15:
  uint64_t result = v29;
  v12[started[7]] = v13[started[7]];
  return result;
}

char *sub_10004FF10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100089110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000698A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000059D8(&qword_100089118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10006A1A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v18 = started[5];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  uint64_t v22 = started[6];
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  uint64_t v25 = sub_10006A250();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1000059D8(&qword_100088F10);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v14[started[7]] = v15[started[7]];
  return a1;
}

char *sub_1000501DC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100007D0C((uint64_t)a1, &qword_100089110);
    uint64_t v6 = sub_1000059D8(&qword_100089110);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000698A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100007D0C((uint64_t)&a1[v8], &qword_100089118);
    uint64_t v11 = sub_1000059D8(&qword_100089118);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10006A1A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v33 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_100069600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v18 = started[5];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  *((_DWORD *)v19 + 2) = *(_DWORD *)&v15[v18 + 8];
  *(void *)uint64_t v19 = *(void *)&v15[v18];
  uint64_t v21 = *(void *)&v15[v18 + 24];
  *((void *)v19 + 2) = *(void *)&v15[v18 + 16];
  *((void *)v19 + 3) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v20 + 5);
  *((void *)v19 + 4) = *((void *)v20 + 4);
  *((void *)v19 + 5) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = started[6];
  uint64_t v24 = &v14[v23];
  uint64_t v25 = &v15[v23];
  uint64_t v26 = sub_10006A250();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_13;
  }
  if (v30)
  {
LABEL_13:
    uint64_t v31 = sub_1000059D8(&qword_100088F10);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_14:
  uint64_t result = v33;
  v14[started[7]] = v15[started[7]];
  return result;
}

uint64_t sub_100050560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100050574);
}

uint64_t sub_100050574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100089128);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000059D8(&qword_100089130);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 48);
  uint64_t v16 = started;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000506C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000506DC);
}

uint64_t sub_1000506DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000059D8(&qword_100089128);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1000059D8(&qword_100089130);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56);
  uint64_t v18 = started;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for StartWritingWidgetSystemSmallView()
{
  uint64_t result = qword_10008A578;
  if (!qword_10008A578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100050888()
{
  sub_1000509C4(319, &qword_1000891A8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  if (v0 <= 0x3F)
  {
    sub_1000509C4(319, &qword_1000891B0, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StartWritingWidgetTimelineEntry();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000509C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000697C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100050A18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100050A34()
{
  return sub_100069940();
}

uint64_t sub_100050A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053F38(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100050A84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v27 = sub_1000697B0();
  uint64_t v2 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100069C70();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_10008A5B8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000059D8(&qword_10008A5C0);
  uint64_t v10 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_100069AC0();
  *((void *)v9 + 1) = 0x4010000000000000;
  v9[16] = 0;
  uint64_t v13 = sub_1000059D8(&qword_10008A5C8);
  sub_100050E48(v1, (uint64_t)&v9[*(int *)(v13 + 44)]);
  sub_100069C60();
  sub_10006A0E0();
  sub_10000CE3C(&qword_10008A5D0, &qword_10008A5B8);
  sub_100017014();
  sub_100069F90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  sub_100007D0C((uint64_t)v9, &qword_10008A5B8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = v26;
  uint64_t v15 = v27;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v26, enum case for ColorScheme.dark(_:), v27);
  uint64_t v17 = sub_1000059D8(&qword_10008A5D8);
  uint64_t v18 = v28;
  uint64_t v19 = (uint64_t *)(v28 + *(int *)(v17 + 36));
  uint64_t v20 = sub_1000059D8(&qword_100089220);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v19 + *(int *)(v20 + 28), v16, v15);
  uint64_t *v19 = KeyPath;
  uint64_t v21 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v18, v12, v25);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v16, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

uint64_t sub_100050E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000059D8(&qword_10008A5E0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_1000059D8(&qword_10008A5E8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = sub_1000059D8(&qword_100089408);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v25 - v20;
  sub_1000510D8((uint64_t)&v25 - v20);
  sub_100051948((uint64_t)v15);
  unsigned char *v9 = sub_100069CB0();
  uint64_t v22 = sub_1000059D8(&qword_10008A5F0);
  sub_100052A44(a1, (uint64_t)&v9[*(int *)(v22 + 44)]);
  sub_1000185F8((uint64_t)v21, (uint64_t)v19, &qword_100089408);
  sub_1000185F8((uint64_t)v15, (uint64_t)v13, &qword_10008A5E8);
  sub_1000185F8((uint64_t)v9, (uint64_t)v7, &qword_10008A5E0);
  sub_1000185F8((uint64_t)v19, a2, &qword_100089408);
  uint64_t v23 = sub_1000059D8(&qword_10008A5F8);
  sub_1000185F8((uint64_t)v13, a2 + *(int *)(v23 + 48), &qword_10008A5E8);
  sub_1000185F8((uint64_t)v7, a2 + *(int *)(v23 + 64), &qword_10008A5E0);
  sub_100007D0C((uint64_t)v9, &qword_10008A5E0);
  sub_100007D0C((uint64_t)v15, &qword_10008A5E8);
  sub_100007D0C((uint64_t)v21, &qword_100089408);
  sub_100007D0C((uint64_t)v7, &qword_10008A5E0);
  sub_100007D0C((uint64_t)v13, &qword_10008A5E8);
  return sub_100007D0C((uint64_t)v19, &qword_100089408);
}

uint64_t sub_1000510D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v1 = sub_100069580();
  uint64_t v91 = *(void *)(v1 - 8);
  uint64_t v92 = v1;
  __chkstk_darwin(v1);
  uint64_t v90 = (char *)v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000696E0();
  __chkstk_darwin(v3 - 8);
  uint64_t v88 = (char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000696C0();
  __chkstk_darwin(v5 - 8);
  uint64_t v84 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100069660();
  __chkstk_darwin(v7 - 8);
  uint64_t v82 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000694A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000059D8(&qword_1000893E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000059D8(&qword_1000893F0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000695A0();
  uint64_t v80 = *(void *)(v16 - 8);
  uint64_t v81 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v79[2] = (char *)v79 - v20;
  uint64_t v21 = sub_100069600();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79[1] = v24;
  uint64_t v25 = type metadata accessor for WidgetHeaderView();
  uint64_t v26 = (int *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  int v29 = (void *)((char *)v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  uint64_t v85 = (uint64_t)v79 - v30;
  uint64_t v87 = sub_1000059D8(&qword_1000893F8) - 8;
  __chkstk_darwin(v87);
  uint64_t v32 = (char *)v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000059D8(&qword_100089400) - 8;
  __chkstk_darwin(v89);
  uint64_t v83 = (uint64_t)v79 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartWritingWidgetSystemSmallView();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v86 + *(int *)(started + 24), v21);
  uint64_t v35 = sub_1000694F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v15, 1, 1, v35);
  uint64_t v36 = sub_1000694E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 1, 1, v36);
  sub_100069490();
  sub_100069640();
  sub_100069680();
  sub_1000696D0();
  sub_100069510();
  uint64_t v37 = v90;
  sub_100069570();
  sub_100069590();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v37, v92);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v19, v81);
  sub_1000544C8(&qword_100089410, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  sub_1000544C8(&qword_100089418, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v38 = sub_100069E40();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43 & 1;
  uint64_t *v29 = swift_getKeyPath();
  sub_1000059D8(&qword_100088C28);
  swift_storeEnumTagMultiPayload();
  long long v45 = (uint64_t *)((char *)v29 + v26[7]);
  *long long v45 = swift_getKeyPath();
  sub_1000059D8(&qword_100089118);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = (uint64_t *)((char *)v29 + v26[8]);
  *uint64_t v46 = swift_getKeyPath();
  sub_1000059D8(&qword_100089110);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = (uint64_t *)((char *)v29 + v26[9]);
  *uint64_t v47 = v38;
  v47[1] = v40;
  v47[2] = v44;
  v47[3] = v42;
  uint64_t v48 = v85;
  sub_100018494((uint64_t)v29, v85);
  LOBYTE(v38) = sub_100069D20();
  sub_100069750();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  sub_100018534(v48, (uint64_t)v32);
  uint64_t v57 = &v32[*(int *)(v87 + 44)];
  char *v57 = v38;
  *((void *)v57 + 1) = v50;
  *((void *)v57 + 2) = v52;
  *((void *)v57 + 3) = v54;
  *((void *)v57 + 4) = v56;
  v57[40] = 0;
  sub_100018598(v48, (uint64_t (*)(void))type metadata accessor for WidgetHeaderView);
  LOBYTE(v48) = sub_100069D00();
  sub_100069750();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v83;
  sub_1000185F8((uint64_t)v32, v83, &qword_1000893F8);
  uint64_t v67 = v66 + *(int *)(v89 + 44);
  *(unsigned char *)uint64_t v67 = v48;
  *(void *)(v67 + 8) = v59;
  *(void *)(v67 + 16) = v61;
  *(void *)(v67 + 24) = v63;
  *(void *)(v67 + 32) = v65;
  *(unsigned char *)(v67 + 40) = 0;
  sub_100007D0C((uint64_t)v32, &qword_1000893F8);
  LOBYTE(v48) = sub_100069D40();
  sub_100069750();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v76 = v93;
  sub_1000185F8(v66, v93, &qword_100089400);
  uint64_t v77 = v76 + *(int *)(sub_1000059D8(&qword_100089408) + 36);
  *(unsigned char *)uint64_t v77 = v48;
  *(void *)(v77 + 8) = v69;
  *(void *)(v77 + 16) = v71;
  *(void *)(v77 + 24) = v73;
  *(void *)(v77 + 32) = v75;
  *(unsigned char *)(v77 + 40) = 0;
  return sub_100007D0C(v66, &qword_100089400);
}

uint64_t sub_100051948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v101 = a1;
  uint64_t v3 = sub_100069910();
  uint64_t v99 = *(void *)(v3 - 8);
  uint64_t v100 = v3;
  __chkstk_darwin(v3);
  long long v98 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100069DE0();
  uint64_t v5 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000059D8(&qword_10008A660);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (void *)((char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = sub_1000059D8(&qword_10008A668);
  __chkstk_darwin(v89);
  uint64_t v11 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000059D8(&qword_10008A670);
  uint64_t v91 = *(void *)(v12 - 8);
  uint64_t v92 = v12;
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000059D8(&qword_10008A678);
  __chkstk_darwin(v83);
  uint64_t v87 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000059D8(&qword_10008A680);
  __chkstk_darwin(v85);
  uint64_t v88 = (uint64_t)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000059D8(&qword_10008A688);
  __chkstk_darwin(v84);
  uint64_t v90 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000059D8(&qword_10008A690);
  __chkstk_darwin(v93);
  uint64_t v96 = (uint64_t)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000059D8(&qword_10008A698);
  __chkstk_darwin(v18 - 8);
  uint64_t v97 = (uint64_t)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000059D8(&qword_10008A5E8);
  __chkstk_darwin(v94);
  uint64_t v95 = (uint64_t)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000698A0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)v78 - v26;
  sub_100036104((uint64_t)v78 - v26);
  sub_100069880();
  v78[1] = sub_1000544C8((unint64_t *)&qword_1000892E8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v28 = sub_10006A400();
  int v29 = *(void (**)(char *, uint64_t))(v22 + 8);
  v29(v25, v21);
  uint64_t v82 = v22 + 8;
  uint64_t v80 = v29;
  v29(v27, v21);
  if (v28)
  {
    uint64_t v30 = 0x8000000100070370;
    uint64_t v31 = v2;
    uint64_t v32 = 0xD00000000000007CLL;
  }
  else
  {
    uint64_t v33 = v2 + *(int *)(type metadata accessor for StartWritingWidgetSystemSmallView() + 24);
    uint64_t v34 = v33 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20);
    uint64_t v31 = v2;
    uint64_t v32 = *(void *)(v34 + 16);
    uint64_t v30 = *(void *)(v34 + 24);
    swift_bridgeObjectRetain();
  }
  v78[0] = v31;
  uint64_t *v9 = sub_10006A0E0();
  v9[1] = v35;
  uint64_t v36 = sub_1000059D8(&qword_10008A6A0);
  sub_10005236C(v32, v30, v31, (uint64_t)v9 + *(int *)(v36 + 44));
  swift_bridgeObjectRelease();
  sub_100069DD0();
  uint64_t v37 = v79;
  uint64_t v38 = v81;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v79, enum case for Font.Leading.tight(_:), v81);
  uint64_t v39 = sub_100069DF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v37, v38);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000185F8((uint64_t)v9, (uint64_t)v11, &qword_10008A660);
  uint64_t v41 = (uint64_t *)&v11[*(int *)(v89 + 36)];
  *uint64_t v41 = KeyPath;
  v41[1] = v39;
  sub_100007D0C((uint64_t)v9, &qword_10008A660);
  sub_100069D90();
  sub_1000540B8();
  uint64_t v42 = v86;
  sub_100069ED0();
  sub_100007D0C((uint64_t)v11, &qword_10008A668);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v45 = v91;
  uint64_t v44 = v92;
  uint64_t v46 = (uint64_t)v87;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v87, v42, v92);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v83 + 36));
  *uint64_t v47 = v43;
  v47[1] = 0x3FB999999999999ALL;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = v88;
  sub_1000185F8(v46, v88, &qword_10008A678);
  uint64_t v50 = v49 + *(int *)(v85 + 36);
  *(void *)uint64_t v50 = v48;
  *(unsigned char *)(v50 + 8) = 0;
  sub_100007D0C(v46, &qword_10008A678);
  uint64_t v51 = v98;
  sub_100069900();
  uint64_t v52 = swift_getKeyPath();
  uint64_t v53 = (uint64_t)v90;
  uint64_t v54 = (uint64_t *)&v90[*(int *)(v84 + 36)];
  uint64_t v55 = sub_1000059D8(&qword_100089398);
  uint64_t v57 = v99;
  uint64_t v56 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))((char *)v54 + *(int *)(v55 + 28), v51, v100);
  *uint64_t v54 = v52;
  sub_1000185F8(v49, v53, &qword_10008A680);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v56);
  sub_100007D0C(v49, &qword_10008A680);
  sub_100036104((uint64_t)v27);
  sub_100069880();
  char v58 = sub_10006A400();
  uint64_t v59 = v80;
  v80(v25, v21);
  v59(v27, v21);
  if (v58) {
    uint64_t v60 = 3;
  }
  else {
    uint64_t v60 = 0;
  }
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = v96;
  sub_1000185F8(v53, v96, &qword_10008A688);
  uint64_t v63 = v62 + *(int *)(v93 + 36);
  *(void *)uint64_t v63 = v61;
  *(void *)(v63 + 8) = v60;
  *(unsigned char *)(v63 + 16) = (v58 & 1) == 0;
  sub_100007D0C(v53, &qword_10008A688);
  uint64_t v64 = sub_10006A0D0();
  uint64_t v65 = v97;
  sub_100056298(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v97, 0.0, 1, INFINITY, 0, v64, v66);
  sub_100007D0C(v62, &qword_10008A690);
  LOBYTE(v61) = sub_100069CE0();
  sub_100069750();
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v75 = v95;
  sub_1000185F8(v65, v95, &qword_10008A698);
  uint64_t v76 = v75 + *(int *)(v94 + 36);
  *(unsigned char *)uint64_t v76 = v61;
  *(void *)(v76 + 8) = v68;
  *(void *)(v76 + 16) = v70;
  *(void *)(v76 + 24) = v72;
  *(void *)(v76 + 32) = v74;
  *(unsigned char *)(v76 + 40) = 0;
  sub_100007D0C(v65, &qword_10008A698);
  return sub_100010A78(v75, v101, &qword_10008A5E8);
}

uint64_t sub_10005236C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v69 = a4;
  uint64_t v67 = sub_10006A1A0();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v6 = __chkstk_darwin(v67);
  uint64_t v65 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v64 = (uint64_t)v60 - v8;
  uint64_t v9 = sub_1000059D8(&qword_1000893B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000059D8(&qword_10008A6B8);
  uint64_t v12 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000059D8(&qword_10008A6C0);
  __chkstk_darwin(v62);
  uint64_t v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000059D8(&qword_10008A6C8);
  uint64_t v70 = *(void *)(v17 - 8);
  uint64_t v71 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v72 = (char *)v60 - v21;
  *(void *)&long long v61 = a1;
  *(void *)&long long v76 = a1;
  *((void *)&v76 + 1) = a2;
  unint64_t v22 = sub_100005A64();
  *((void *)&v61 + 1) = a2;
  swift_bridgeObjectRetain();
  v60[1] = v22;
  uint64_t v23 = sub_100069E60();
  uint64_t v25 = v24;
  *(void *)&long long v76 = v23;
  *((void *)&v76 + 1) = v24;
  LOBYTE(a2) = v26 & 1;
  LOBYTE(v77) = v26 & 1;
  *((void *)&v77 + 1) = v27;
  sub_100069F70();
  sub_100018524(v23, v25, a2);
  swift_bridgeObjectRelease();
  uint64_t v28 = v63 + *(int *)(type metadata accessor for StartWritingWidgetSystemSmallView() + 24);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  sub_1000478D0(*(unsigned char *)(v28 + *(int *)(started + 20) + 11), (uint64_t)v11);
  sub_1000185F8((uint64_t)v11, (uint64_t)&v16[*(int *)(v62 + 36)], &qword_1000893B0);
  uint64_t v30 = v68;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v68);
  sub_100007D0C((uint64_t)v11, &qword_1000893B0);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  sub_1000543F8();
  sub_100069E70();
  sub_100007D0C((uint64_t)v16, &qword_10008A6C0);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  uint64_t v68 = (uint64_t)v20;
  v31(v72, v20, v71);
  uint64_t v32 = v64;
  sub_1000363F4(v64);
  uint64_t v33 = v65;
  sub_10006A190();
  uint64_t v34 = v33;
  LOBYTE(v33) = sub_10006A170();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v36 = v34;
  uint64_t v37 = v67;
  v35(v36, v67);
  v35((char *)v32, v37);
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  if (v33)
  {
    long long v76 = v61;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_100069E60();
    uint64_t v44 = v43;
    char v46 = v45 & 1;
    sub_1000059D8(&qword_1000893C8);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_10006BB40;
    *(void *)(v47 + 32) = sub_100069FF0();
    sub_100069FF0();
    uint64_t v48 = sub_10006A000();
    swift_release();
    *(void *)(v47 + 40) = v48;
    *(void *)&long long v76 = v47;
    sub_10006A350();
    sub_10006A130();
    sub_10006A140();
    sub_10006A0B0();
    sub_100069840();
    long long v73 = v76;
    long long v74 = v77;
    uint64_t v75 = v78;
    uint64_t v38 = sub_100069E20();
    uint64_t v39 = v49;
    uint64_t v41 = v50;
    uint64_t v40 = v51 & 1;
    sub_100018524(v42, v44, v46);
    swift_bridgeObjectRelease();
    sub_1000184F8((uint64_t)&v76);
  }
  uint64_t v53 = v70;
  uint64_t v52 = v71;
  uint64_t v54 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 16);
  uint64_t v55 = v68;
  v54(v68, v72, v71);
  uint64_t v56 = v69;
  v54(v69, (char *)v55, v52);
  uint64_t v57 = (uint64_t *)(v56 + *(int *)(sub_1000059D8(&qword_10008A6E8) + 48));
  uint64_t *v57 = v38;
  v57[1] = v39;
  v57[2] = v40;
  v57[3] = v41;
  sub_10004E7FC(v38, v39, v40, v41);
  char v58 = *(void (**)(char *, uint64_t))(v53 + 8);
  v58(v72, v52);
  sub_10004EB0C(v38, v39, v40, v41);
  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v55, v52);
}

uint64_t sub_100052A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_1000059D8(&qword_10008A600);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v60 = sub_1000059D8(&qword_10008A608);
  uint64_t v9 = __chkstk_darwin(v60);
  uint64_t v58 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v57 = (uint64_t)&v55 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v55 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v55 - v22;
  *(void *)uint64_t v8 = sub_100069A70();
  *((void *)v8 + 1) = 0x4018000000000000;
  v8[16] = 0;
  uint64_t v24 = sub_1000059D8(&qword_10008A610);
  uint64_t v25 = (uint64_t)&v8[*(int *)(v24 + 44)];
  uint64_t v56 = a1;
  sub_100052F04(a1, 0, 1, v25);
  unsigned __int8 v26 = sub_100069CE0();
  unsigned __int8 v27 = sub_100069D10();
  char v28 = sub_100069D30();
  sub_100069D30();
  if (sub_100069D30() != v26) {
    char v28 = sub_100069D30();
  }
  sub_100069D30();
  if (sub_100069D30() != v27) {
    char v28 = sub_100069D30();
  }
  sub_100069750();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1000185F8((uint64_t)v8, (uint64_t)v21, &qword_10008A600);
  uint64_t v37 = &v21[*(int *)(v60 + 36)];
  *uint64_t v37 = v28;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100007D0C((uint64_t)v8, &qword_10008A600);
  sub_100010A78((uint64_t)v21, (uint64_t)v23, &qword_10008A608);
  *(void *)uint64_t v6 = sub_100069A70();
  *((void *)v6 + 1) = 0x4018000000000000;
  v6[16] = 0;
  sub_100052F04(v56, 1, 0, (uint64_t)&v6[*(int *)(v24 + 44)]);
  unsigned __int8 v38 = sub_100069CE0();
  unsigned __int8 v39 = sub_100069D10();
  char v40 = sub_100069D30();
  sub_100069D30();
  if (sub_100069D30() != v38) {
    char v40 = sub_100069D30();
  }
  sub_100069D30();
  if (sub_100069D30() != v39) {
    char v40 = sub_100069D30();
  }
  sub_100069750();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_1000185F8((uint64_t)v6, (uint64_t)v15, &qword_10008A600);
  uint64_t v49 = &v15[*(int *)(v60 + 36)];
  *uint64_t v49 = v40;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_100007D0C((uint64_t)v6, &qword_10008A600);
  sub_100010A78((uint64_t)v15, (uint64_t)v18, &qword_10008A608);
  uint64_t v50 = v57;
  sub_1000185F8((uint64_t)v23, v57, &qword_10008A608);
  uint64_t v51 = v58;
  sub_1000185F8((uint64_t)v18, v58, &qword_10008A608);
  uint64_t v52 = v59;
  sub_1000185F8(v50, v59, &qword_10008A608);
  uint64_t v53 = sub_1000059D8(&qword_10008A618);
  sub_1000185F8(v51, v52 + *(int *)(v53 + 48), &qword_10008A608);
  sub_100007D0C((uint64_t)v18, &qword_10008A608);
  sub_100007D0C((uint64_t)v23, &qword_10008A608);
  sub_100007D0C(v51, &qword_10008A608);
  return sub_100007D0C(v50, &qword_10008A608);
}

uint64_t sub_100052EA0()
{
  return sub_100069940();
}

uint64_t sub_100052EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053F38(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100052F04@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v115) = a3;
  int v99 = a2;
  uint64_t v113 = a4;
  uint64_t v104 = sub_1000698F0();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v102 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000059D8(&qword_10008A620);
  uint64_t v105 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v116 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000059D8(&qword_10008A628);
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v107 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_10008A630);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v112 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v106 = (char *)&v87 - v12;
  __chkstk_darwin(v11);
  uint64_t v110 = (uint64_t)&v87 - v13;
  uint64_t v97 = sub_1000059D8(&qword_100089280);
  uint64_t v14 = __chkstk_darwin(v97);
  uint64_t v100 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v87 - v16;
  uint64_t v18 = sub_1000059D8(&qword_100088BE8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000059D8(&qword_100089288);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000059D8(&qword_100089290);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v90 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000059D8(&qword_10008A638);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v101 = (uint64_t)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v94 = (char *)&v87 - v30;
  __chkstk_darwin(v29);
  uint64_t v114 = (uint64_t)&v87 - v31;
  uint64_t v32 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v33 = sub_10006A1C0();
  uint64_t v34 = *(void *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v23, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v23, 0, 1, v33);
  uint64_t started = type metadata accessor for StartWritingWidgetSystemSmallView();
  uint64_t v36 = *(int *)(started + 24);
  uint64_t v98 = a1;
  uint64_t v37 = a1 + v36 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20);
  uint64_t v38 = *(void *)(v37 + 16);
  uint64_t v39 = *(void *)(v37 + 24);
  char v40 = (int *)type metadata accessor for CanvasStartingState();
  uint64_t v41 = &v23[v40[6]];
  uint64_t v42 = sub_100069600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  uint64_t v43 = &v23[v40[5]];
  *(void *)uint64_t v43 = v38;
  *((void *)v43 + 1) = v39;
  v23[v40[7]] = 1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_10001BDB8((uint64_t)v20);
  sub_100018598((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AppLaunchAction);
  uint64_t v44 = sub_1000694C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v20, 1, v44);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1000059D8(&qword_100089298);
    sub_100017D14();
    uint64_t v46 = v91;
    sub_100069E10();
    uint64_t v89 = v37;
    char v47 = *(unsigned char *)(v37 + 11);
    int v88 = v115 & 1;
    sub_100047EE4(v115 & 1, v47, (uint64_t)&v119);
    uint64_t v48 = v119;
    long long v87 = v120;
    uint64_t v49 = v121;
    uint64_t v50 = v122;
    uint64_t v51 = v98 + *(int *)(started + 20);
    uint64_t v52 = v97;
    uint64_t v53 = &v17[*(int *)(v97 + 36)];
    uint64_t v54 = sub_1000059D8(&qword_1000892A8);
    uint64_t v55 = (uint64_t)&v53[*(int *)(v54 + 40)];
    uint64_t v98 = v51;
    sub_1000363F4(v55);
    sub_1000698E0();
    v99 &= 1u;
    unsigned char *v17 = v99;
    uint64_t v56 = &v53[*(int *)(v54 + 36)];
    *(void *)uint64_t v56 = v48;
    *(_OWORD *)(v56 + 8) = v87;
    *((void *)v56 + 3) = v49;
    *((void *)v56 + 4) = v50;
    uint64_t v57 = sub_10000CE3C(&qword_1000892B0, &qword_100089288);
    uint64_t v58 = sub_10000CE3C(&qword_1000892B8, &qword_100089280);
    uint64_t v59 = v90;
    uint64_t v60 = v93;
    sub_100069F00();
    sub_100007D0C((uint64_t)v17, &qword_100089280);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v46, v60);
    if (qword_1000884A0 != -1) {
      swift_once();
    }
    uint64_t v117 = qword_1000921F8;
    uint64_t v118 = unk_100092200;
    uint64_t v119 = v60;
    *(void *)&long long v120 = v52;
    uint64_t v61 = v52;
    *((void *)&v120 + 1) = v57;
    uint64_t v121 = v58;
    swift_getOpaqueTypeConformance2();
    unint64_t v62 = sub_100005A64();
    uint64_t v63 = (uint64_t)v94;
    uint64_t v64 = v96;
    uint64_t v93 = v62;
    sub_100069F80();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v59, v64);
    uint64_t v65 = sub_100010A78(v63, v114, &qword_10008A638);
    __chkstk_darwin(v65);
    *((unsigned char *)&v87 - 16) = v88;
    sub_1000059D8(&qword_10008A640);
    sub_100053E74();
    sub_100017DB4();
    sub_10006A0A0();
    uint64_t v66 = v102;
    char v67 = v115;
    if (v115) {
      sub_1000698D0();
    }
    else {
      sub_1000698E0();
    }
    uint64_t v69 = v111;
    uint64_t v68 = (uint64_t)v112;
    sub_100048444(v67 & 1, *(unsigned char *)(v89 + 11), (uint64_t)&v119);
    uint64_t v70 = v119;
    long long v115 = v120;
    uint64_t v71 = v121;
    uint64_t v72 = v122;
    long long v73 = v100;
    long long v74 = &v100[*(int *)(v61 + 36)];
    sub_1000363F4((uint64_t)&v74[*(int *)(v54 + 40)]);
    *long long v73 = v99;
    uint64_t v75 = &v74[*(int *)(v54 + 36)];
    *(void *)uint64_t v75 = v70;
    *(_OWORD *)(v75 + 8) = v115;
    *((void *)v75 + 3) = v71;
    *((void *)v75 + 4) = v72;
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v74, v66, v104);
    uint64_t v76 = sub_10000CE3C(&qword_10008A650, &qword_10008A620);
    uint64_t v78 = v107;
    uint64_t v77 = v108;
    uint64_t v79 = v116;
    sub_100069F00();
    sub_100007D0C((uint64_t)v73, &qword_100089280);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v79, v77);
    if (qword_1000884A8 != -1) {
      swift_once();
    }
    uint64_t v117 = qword_100092208;
    uint64_t v118 = unk_100092210;
    uint64_t v119 = v77;
    *(void *)&long long v120 = v61;
    *((void *)&v120 + 1) = v76;
    uint64_t v121 = v58;
    swift_getOpaqueTypeConformance2();
    uint64_t v80 = v106;
    sub_100069F80();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v78, v69);
    uint64_t v81 = (uint64_t)v80;
    uint64_t v82 = v110;
    sub_100010A78(v81, v110, &qword_10008A630);
    uint64_t v83 = v114;
    uint64_t v84 = v101;
    sub_1000185F8(v114, v101, &qword_10008A638);
    sub_1000185F8(v82, v68, &qword_10008A630);
    uint64_t v85 = v113;
    sub_1000185F8(v84, v113, &qword_10008A638);
    uint64_t v86 = sub_1000059D8(&qword_10008A658);
    sub_1000185F8(v68, v85 + *(int *)(v86 + 48), &qword_10008A630);
    sub_100007D0C(v82, &qword_10008A630);
    sub_100007D0C(v83, &qword_10008A638);
    sub_100007D0C(v68, &qword_10008A630);
    return sub_100007D0C(v84, &qword_10008A638);
  }
  return result;
}

uint64_t sub_100053BB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088FB8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100088498 != -1) {
    swift_once();
  }
  v10[0] = qword_1000921E8;
  v10[1] = unk_1000921F0;
  sub_100005A64();
  swift_bridgeObjectRetain();
  sub_10006A090();
  uint64_t v6 = sub_10006A0E0();
  double v8 = sub_100056040(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t, double))(v3 + 8))(v5, v2, v8);
}

__n128 sub_100053D54@<Q0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10006A020();
  int v5 = a1 & 1;
  if (v5) {
    double v6 = 0.0;
  }
  else {
    double v6 = INFINITY;
  }
  uint64_t v7 = sub_10006A0E0();
  sub_1000562F4(0.0, 1, 0.0, 1, v6, v5, 0.0, 1, (uint64_t)v22, 0.0, 1, 0.0, 1, v7, v8, v4);
  swift_release();
  uint64_t v9 = v22[1];
  char v10 = v23;
  uint64_t v11 = v24;
  char v12 = v25;
  uint64_t v13 = v26;
  char v14 = v27;
  uint64_t v15 = v28;
  char v16 = v29;
  uint64_t v17 = v30;
  char v18 = v31;
  uint64_t v19 = v32;
  char v20 = v33;
  __n128 result = v34;
  *(void *)a2 = v22[0];
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(unsigned char *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(unsigned char *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  *(unsigned char *)(a2 + 64) = v16;
  *(void *)(a2 + 72) = v17;
  *(unsigned char *)(a2 + 80) = v18;
  *(void *)(a2 + 88) = v19;
  *(unsigned char *)(a2 + 96) = v20;
  *(__n128 *)(a2 + 104) = result;
  return result;
}

double sub_100053E6C@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100053D54(*(unsigned char *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100053E74()
{
  unint64_t result = qword_10008A648;
  if (!qword_10008A648)
  {
    sub_100005A1C(&qword_10008A640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A648);
  }
  return result;
}

uint64_t sub_100053EE8()
{
  return sub_100069970();
}

uint64_t sub_100053F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053F38(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_100053F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100054008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000699D0();
  *a1 = result;
  return result;
}

uint64_t sub_100054034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000699D0();
  *a1 = result;
  return result;
}

uint64_t sub_100054060()
{
  return sub_1000699E0();
}

uint64_t sub_10005408C()
{
  return sub_1000699E0();
}

unint64_t sub_1000540B8()
{
  unint64_t result = qword_10008A6A8;
  if (!qword_10008A6A8)
  {
    sub_100005A1C(&qword_10008A668);
    sub_10000CE3C(&qword_10008A6B0, &qword_10008A660);
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A6A8);
  }
  return result;
}

uint64_t sub_10005417C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100069990();
  *a1 = v3;
  return result;
}

uint64_t sub_1000541A8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100069990();
  *a1 = v3;
  return result;
}

uint64_t sub_1000541D4()
{
  return sub_1000699A0();
}

uint64_t sub_1000541FC()
{
  return sub_1000699A0();
}

uint64_t sub_100054224@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000699B0();
  *a1 = result;
  return result;
}

uint64_t sub_100054250@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000699B0();
  *a1 = result;
  return result;
}

uint64_t sub_10005427C()
{
  return sub_1000699C0();
}

uint64_t sub_1000542A4()
{
  return sub_1000699C0();
}

uint64_t sub_1000542CC()
{
  return sub_100069970();
}

uint64_t sub_1000542F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053F38(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_100054330@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100069A10();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100054364@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100069A10();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100054398()
{
  return sub_100069A20();
}

uint64_t sub_1000543C8()
{
  return sub_100069A20();
}

unint64_t sub_1000543F8()
{
  unint64_t result = qword_10008A6D0;
  if (!qword_10008A6D0)
  {
    sub_100005A1C(&qword_10008A6C0);
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_10008A6D8, &qword_10008A6E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A6D0);
  }
  return result;
}

uint64_t sub_1000544C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100054528()
{
  unint64_t result = qword_10008A6F0;
  if (!qword_10008A6F0)
  {
    sub_100005A1C(&qword_10008A5D8);
    sub_100005A1C(&qword_10008A5B8);
    sub_10000CE3C(&qword_10008A5D0, &qword_10008A5B8);
    sub_100017014();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_100089458, &qword_100089220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A6F0);
  }
  return result;
}

uint64_t sub_10005463C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v191 = a2;
  uint64_t v171 = a3;
  uint64_t v4 = sub_10006A240();
  __chkstk_darwin(v4 - 8);
  uint64_t v167 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000059D8(&qword_100088EE8);
  __chkstk_darwin(v6 - 8);
  uint64_t v173 = (char *)&v165 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v189 = *(void *)(started - 8);
  uint64_t v8 = __chkstk_darwin(started);
  uint64_t v196 = (char *)&v165 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v169 = (uint64_t)&v165 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v170 = (char *)&v165 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v165 - v14;
  uint64_t v16 = sub_1000059D8(&qword_10008A100);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v165 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v165 - v20;
  uint64_t v204 = sub_1000059D8(&qword_100088EF8);
  uint64_t v22 = __chkstk_darwin(v204);
  uint64_t v175 = (uint64_t)&v165 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v165 - v25;
  __chkstk_darwin(v24);
  uint64_t v211 = (uint64_t)&v165 - v27;
  uint64_t v28 = sub_100069600();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v174 = (char *)&v165 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v208 = (char *)&v165 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  int v166 = (char *)&v165 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v165 - v37;
  __chkstk_darwin(v36);
  uint64_t v199 = (char *)&v165 - v39;
  sub_1000695E0();
  sub_1000695C0();
  uint64_t v40 = sub_100055E30(&qword_10008A120, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v221 = v28;
  uint64_t v192 = v40;
  if ((sub_10006A290() & 1) == 0)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t v26 = (char *)sub_10001DF3C(0, *((void *)v26 + 2) + 1, 1, (unint64_t)v26);
    goto LABEL_37;
  }
  uint64_t v165 = v15;
  uint64_t v41 = &v21[*(int *)(v16 + 48)];
  uint64_t v190 = v19;
  uint64_t v42 = v16;
  uint64_t v188 = v16;
  uint64_t v43 = v29;
  uint64_t v187 = v26;
  uint64_t v44 = v29 + 16;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  uint64_t v168 = a1;
  uint64_t v46 = v221;
  v45(v21, a1, v221);
  uint64_t v47 = v29 + 32;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v220 = v41;
  uint64_t v183 = v38;
  v48(v41, v38, v46);
  uint64_t v49 = &v190[*(int *)(v42 + 48)];
  v45(v190, (uint64_t)v21, v46);
  uint64_t v218 = v45;
  uint64_t v219 = v44;
  v45(v49, (uint64_t)v41, v46);
  uint64_t v50 = (uint64_t)v187;
  v48(v187, v190, v46);
  uint64_t v172 = v43;
  uint64_t v51 = *(void (**)(char *, uint64_t))(v43 + 8);
  v51(v49, v46);
  uint64_t v52 = v190;
  uint64_t v53 = &v190[*(int *)(v188 + 48)];
  os_log_t v182 = v21;
  v48(v190, v21, v46);
  v48(v53, v220, v46);
  uint64_t v54 = v50 + *(int *)(v204 + 36);
  uint64_t v185 = v47;
  uint64_t v184 = v48;
  v48((char *)v54, v53, v46);
  uint64_t v205 = v51;
  uint64_t v206 = v43 + 8;
  v51(v52, v46);
  sub_100055D04(v50, v211);
  uint64_t v55 = v191;
  uint64_t v56 = *(void *)(v191 + 16);
  if (!v56)
  {
    uint64_t v135 = 0;
    unint64_t v202 = 0;
    uint64_t v200 = 0;
    uint64_t v203 = 0;
    uint64_t v201 = 0;
    uint64_t v177 = 0;
    unint64_t v178 = 0;
    uint64_t v179 = 0;
    uint64_t v109 = 0;
    uint64_t v112 = 0;
    uint64_t v110 = 0;
    unint64_t v136 = &_swiftEmptyArrayStorage;
    uint64_t v59 = v199;
    uint64_t v131 = v172;
    goto LABEL_40;
  }
  uint64_t v57 = 0;
  uint64_t v198 = 0;
  unint64_t v202 = 0;
  uint64_t v200 = 0;
  uint64_t v203 = 0;
  uint64_t v201 = 0;
  uint64_t v197 = 0;
  uint64_t v177 = 0;
  unint64_t v178 = 0;
  uint64_t v179 = 0;
  uint64_t v176 = 0;
  uint64_t v180 = 0;
  v181 = 0;
  uint64_t v209 = &_swiftEmptyArrayStorage;
  uint64_t v58 = v211;
  uint64_t v59 = v199;
  do
  {
    unint64_t v62 = (void *)(v55 + v57);
    uint64_t v63 = *(void *)(v55 + v57 + 32);
    uint64_t v64 = *(unsigned __int8 *)(v55 + v57 + 40);
    uint64_t v65 = *(unsigned __int8 *)(v55 + v57 + 41);
    uint64_t v66 = (char *)*(unsigned __int8 *)(v55 + v57 + 42);
    uint64_t v67 = *(unsigned __int8 *)(v55 + v57 + 43);
    uint64_t v213 = v65;
    uint64_t v214 = v67;
    uint64_t v68 = *(void *)(v55 + v57 + 48);
    uint64_t v69 = v62[7];
    uint64_t v26 = (char *)v62[9];
    uint64_t v215 = v62[8];
    uint64_t v216 = v68;
    uint64_t v217 = v63;
    uint64_t v210 = v56;
    uint64_t v212 = v26;
    uint64_t v207 = v64;
    uint64_t v220 = v66;
    if (v57)
    {
      uint64_t v70 = v58;
      uint64_t v71 = v58 + *(int *)(v204 + 36);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v72 = v183;
      sub_1000695C0();
      if ((sub_10006A290() & 1) == 0)
      {
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v73 = v188;
      long long v74 = v182;
      uint64_t v75 = &v182[*(int *)(v188 + 48)];
      uint64_t v76 = v71;
      uint64_t v194 = v69;
      uint64_t v77 = v221;
      uint64_t v78 = v70;
      uint64_t v79 = (void (*)(char *, char *, uint64_t))v218;
      v218(v182, v76, v221);
      sub_100007D0C(v78, &qword_100088EF8);
      uint64_t v193 = v75;
      uint64_t v195 = v57;
      uint64_t v80 = v184;
      v184(v75, v72, v77);
      uint64_t v81 = v190;
      uint64_t v82 = &v190[*(int *)(v73 + 48)];
      v79(v190, v74, v77);
      v79(v82, v75, v77);
      uint64_t v83 = (uint64_t)v187;
      v80(v187, v81, v77);
      uint64_t v84 = v205;
      v205(v82, v77);
      uint64_t v85 = *(int *)(v73 + 48);
      uint64_t v26 = v212;
      uint64_t v86 = &v81[v85];
      v80(v81, v74, v77);
      v80(v86, v193, v77);
      v80((char *)(v83 + *(int *)(v204 + 36)), v86, v77);
      uint64_t v64 = v207;
      uint64_t v57 = v195;
      uint64_t v87 = v77;
      uint64_t v69 = v194;
      v84(v81, v87);
      uint64_t v66 = v220;
      uint64_t v65 = v213;
      uint64_t v58 = v211;
      sub_100055D04(v83, v211);
      uint64_t v59 = v199;
      uint64_t v63 = v217;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v88 = v58;
    if (sub_1000695D0())
    {
LABEL_14:
      sub_100042990(v198, v202, v200, v203);
      v218(v208, v88, v221);
      if (v57)
      {
        unint64_t v202 = v64 | (v65 << 8) | ((void)v66 << 16) | (v214 << 24);
        char v97 = v64;
        uint64_t v98 = v215;
        uint64_t v99 = v216;
      }
      else
      {
        sub_100042990(v177, v178, v179, v176);
        unint64_t v100 = v64 | (v65 << 8) | ((void)v66 << 16) | (v214 << 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v177 = v217;
        unint64_t v202 = v100;
        unint64_t v178 = v100;
        uint64_t v99 = v216;
        uint64_t v63 = v217;
        uint64_t v179 = v216;
        uint64_t v176 = v69;
        char v97 = v64;
        uint64_t v98 = v215;
        uint64_t v180 = v215;
        v181 = v26;
      }
      uint64_t v101 = (uint64_t)v196;
      v218(v196, (uint64_t)v208, v221);
      uint64_t v102 = started;
      uint64_t v103 = v101 + *(int *)(started + 24);
      uint64_t v104 = sub_10006A250();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v103, 1, 1, v104);
      uint64_t v105 = v101 + *(int *)(v102 + 20);
      *(void *)uint64_t v105 = v63;
      *(unsigned char *)(v105 + 8) = v97;
      *(unsigned char *)(v105 + 9) = v213;
      *(unsigned char *)(v105 + 10) = (_BYTE)v220;
      *(unsigned char *)(v105 + 11) = v214;
      *(void *)(v105 + 16) = v99;
      *(void *)(v105 + 24) = v69;
      *(void *)(v105 + 32) = v98;
      *(void *)(v105 + 40) = v26;
      *(unsigned char *)(v101 + *(int *)(v102 + 28)) = 1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v209 = (void *)sub_10001DF3C(0, v209[2] + 1, 1, (unint64_t)v209);
      }
      uint64_t v58 = v211;
      unint64_t v107 = v209[2];
      unint64_t v106 = v209[3];
      if (v107 >= v106 >> 1) {
        uint64_t v209 = (void *)sub_10001DF3C(v106 > 1, v107 + 1, 1, (unint64_t)v209);
      }
      uint64_t v108 = v209;
      v209[2] = v107 + 1;
      sub_100006F5C((uint64_t)v196, (uint64_t)v108+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * v107);
      uint64_t v60 = v208;
      uint64_t v203 = v69;
      uint64_t v197 = v26;
      uint64_t v198 = v63;
      uint64_t v200 = v216;
      uint64_t v201 = v215;
      uint64_t v59 = v199;
      uint64_t v61 = v210;
      goto LABEL_5;
    }
    uint64_t v89 = v69;
    uint64_t v90 = v57;
    uint64_t v58 = v211;
    uint64_t v91 = v221;
    char v92 = sub_10006A290();
    uint64_t v93 = v174;
    v218(v174, (uint64_t)v59, v91);
    uint64_t v94 = v175;
    sub_100055D6C(v58, v175);
    if ((v92 & 1) == 0)
    {
      sub_100007D0C(v94, &qword_100088EF8);
      uint64_t v60 = v93;
      uint64_t v61 = v210;
      uint64_t v57 = v90;
LABEL_5:
      v205(v60, v221);
      goto LABEL_6;
    }
    uint64_t v95 = v221;
    char v96 = sub_10006A280();
    sub_100007D0C(v94, &qword_100088EF8);
    v205(v93, v95);
    uint64_t v88 = (uint64_t)v59;
    uint64_t v57 = v90;
    uint64_t v69 = v89;
    uint64_t v26 = v212;
    uint64_t v63 = v217;
    uint64_t v64 = v207;
    uint64_t v66 = v220;
    if (v96) {
      goto LABEL_14;
    }
    uint64_t v61 = v210;
    uint64_t v58 = v211;
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57 += 48;
    uint64_t v56 = v61 - 1;
    uint64_t v55 = v191;
  }
  while (v56);
  uint64_t v109 = v176;
  if (v176)
  {
    swift_bridgeObjectRetain();
    uint64_t v110 = v181;
    swift_bridgeObjectRetain();
    char v111 = sub_1000695D0();
    uint64_t v112 = v180;
    if (v111)
    {
      char v113 = v178;
      unint64_t v114 = v178 >> 24;
      long long v115 = v59;
      unint64_t v116 = v178 >> 16;
      unint64_t v117 = v178 >> 8;
      uint64_t v118 = (uint64_t)v165;
      v218(v165, (uint64_t)v115, v221);
      uint64_t v119 = started;
      uint64_t v120 = v118 + *(int *)(started + 24);
      uint64_t v121 = sub_10006A250();
      uint64_t v122 = v120;
      uint64_t v123 = v176;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v122, 1, 1, v121);
      uint64_t v124 = v118 + *(int *)(v119 + 20);
      *(void *)uint64_t v124 = v177;
      *(unsigned char *)(v124 + 8) = v113 & 1;
      *(unsigned char *)(v124 + 9) = v117;
      *(unsigned char *)(v124 + 10) = v116;
      *(unsigned char *)(v124 + 11) = v114;
      *(void *)(v124 + 16) = v179;
      *(void *)(v124 + 24) = v123;
      uint64_t v125 = v181;
      *(void *)(v124 + 32) = v112;
      *(void *)(v124 + 40) = v125;
      uint64_t v126 = *(int *)(v119 + 28);
      uint64_t v110 = v181;
      *(unsigned char *)(v118 + v126) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v127 = (unint64_t)v209;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v127 = sub_10001DF3C(0, *(void *)(v127 + 16) + 1, 1, v127);
      }
      uint64_t v128 = v173;
      unint64_t v130 = *(void *)(v127 + 16);
      unint64_t v129 = *(void *)(v127 + 24);
      uint64_t v209 = (void *)v127;
      uint64_t v59 = v199;
      uint64_t v131 = v172;
      unint64_t v132 = v197;
      if (v130 >= v129 >> 1) {
        uint64_t v209 = (void *)sub_10001DF3C(v129 > 1, v130 + 1, 1, (unint64_t)v209);
      }
      uint64_t v133 = v209;
      v209[2] = v130 + 1;
      sub_100006F5C(v118, (uint64_t)v133+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * v130);
      uint64_t v109 = v176;
      uint64_t v134 = (uint64_t)v128;
    }
    else
    {
      uint64_t v134 = (uint64_t)v173;
      uint64_t v131 = v172;
      unint64_t v132 = v197;
    }
    sub_100042990(v177, v178, v179, v109);
    uint64_t v137 = v203;
    if (v203) {
      goto LABEL_36;
    }
LABEL_32:
    uint64_t v203 = 0;
    unint64_t v136 = v209;
    uint64_t v135 = v198;
    uint64_t v138 = v209[2];
    if (v138) {
      goto LABEL_41;
    }
LABEL_33:
    sub_100042990(v135, v202, v200, v203);
    sub_100042990(v177, v178, v179, v109);
    sub_100007D0C(v211, &qword_100088EF8);
    swift_bridgeObjectRelease();
    v205(v59, v221);
LABEL_43:
    uint64_t v156 = v171;
    uint64_t v157 = sub_1000059D8(&qword_100088EE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v156, 1, 1, v157);
  }
  uint64_t v134 = (uint64_t)v173;
  uint64_t v131 = v172;
  uint64_t v110 = v181;
  uint64_t v112 = v180;
  unint64_t v132 = v197;
  uint64_t v137 = v203;
  if (!v203) {
    goto LABEL_32;
  }
LABEL_36:
  uint64_t v180 = v112;
  uint64_t v139 = v202;
  unint64_t v140 = v202 >> 8;
  unint64_t v141 = v202 >> 16;
  unint64_t v142 = v202 >> 24;
  uint64_t v143 = (uint64_t)v170;
  v218(v170, v211 + *(int *)(v204 + 36), v221);
  uint64_t v144 = v132;
  uint64_t v145 = started;
  uint64_t v146 = v143 + *(int *)(started + 24);
  uint64_t v147 = sub_10006A250();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v146, 1, 1, v147);
  uint64_t v148 = v143 + *(int *)(v145 + 20);
  uint64_t v149 = v198;
  *(void *)uint64_t v148 = v198;
  *(unsigned char *)(v148 + 8) = v139 & 1;
  *(unsigned char *)(v148 + 9) = v140;
  *(unsigned char *)(v148 + 10) = v141;
  *(unsigned char *)(v148 + 11) = v142;
  uint64_t v150 = v200;
  *(void *)(v148 + 16) = v200;
  *(void *)(v148 + 24) = v137;
  *(void *)(v148 + 32) = v201;
  *(void *)(v148 + 40) = v144;
  *(unsigned char *)(v143 + *(int *)(v145 + 28)) = 0;
  sub_100046FD8(v149, v139, v150, v137);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = (char *)v209;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_47;
  }
LABEL_37:
  unint64_t v152 = *((void *)v26 + 2);
  unint64_t v151 = *((void *)v26 + 3);
  uint64_t v153 = (uint64_t)v26;
  uint64_t v59 = v199;
  uint64_t v131 = v172;
  uint64_t v110 = v181;
  uint64_t v135 = v198;
  uint64_t v112 = v180;
  if (v152 >= v151 >> 1) {
    uint64_t v153 = sub_10001DF3C(v151 > 1, v152 + 1, 1, (unint64_t)v26);
  }
  unint64_t v136 = (void *)v153;
  *(void *)(v153 + 16) = v152 + 1;
  sub_100006F5C((uint64_t)v170, v153+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * v152);
  sub_100042990(v135, v202, v200, v203);
  uint64_t v109 = v176;
LABEL_40:
  uint64_t v134 = (uint64_t)v173;
  uint64_t v138 = v136[2];
  if (!v138) {
    goto LABEL_33;
  }
LABEL_41:
  v181 = v110;
  uint64_t v180 = v112;
  uint64_t v154 = v169;
  sub_100006EF4((uint64_t)v136+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * (v138 - 1), v169);
  uint64_t v155 = v221;
  v218((char *)v134, v154, v221);
  sub_100055DD4(v154);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v131 + 56))(v134, 0, 1, v155);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v134, 1, v155) == 1)
  {
    sub_100042990(v135, v202, v200, v203);
    sub_100042990(v177, v178, v179, v109);
    sub_100007D0C(v211, &qword_100088EF8);
    swift_bridgeObjectRelease();
    v205(v59, v221);
    sub_100007D0C(v134, &qword_100088EE8);
    goto LABEL_43;
  }
  uint64_t v159 = v109;
  uint64_t v160 = v166;
  uint64_t v161 = v221;
  v184(v166, (char *)v134, v221);
  sub_10006A220();
  sub_100055E30(qword_100088EC0, (void (*)(uint64_t))type metadata accessor for StartWritingWidgetTimelineEntry);
  uint64_t v162 = v171;
  sub_10006A270();
  uint64_t v163 = v205;
  v205(v160, v161);
  sub_100042990(v135, v202, v200, v203);
  sub_100042990(v177, v178, v179, v159);
  sub_100007D0C(v211, &qword_100088EF8);
  v163(v59, v161);
  uint64_t v164 = sub_1000059D8(&qword_100088EE0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v162, 0, 1, v164);
}

uint64_t type metadata accessor for JournalWidgetDemoMode()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JournalWidgetDemoMode.TimelineEntryAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100055C74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalWidgetDemoMode.TimelineEntryAppearance()
{
  return &type metadata for JournalWidgetDemoMode.TimelineEntryAppearance;
}

unint64_t sub_100055CB0()
{
  unint64_t result = qword_10008A790;
  if (!qword_10008A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A790);
  }
  return result;
}

uint64_t sub_100055D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100055D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100055DD4(uint64_t a1)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_100055E30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100055E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055E8C);
}

uint64_t sub_100055E8C(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 48);

  return v5(a1, a2, started);
}

uint64_t sub_100055EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100055F0C);
}

uint64_t sub_100055F0C(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartWritingWidgetTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56);

  return v5(a1, a2, a2, started);
}

uint64_t type metadata accessor for StartWritingWidgetAccessoryRectangularView()
{
  uint64_t result = qword_10008A7F0;
  if (!qword_10008A7F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100055FC8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100055FE4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10005609C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000893D0, &qword_1000893B8).n128_u64[0];
  return result;
}

double sub_100056040@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10005609C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100088FB8, &qword_100089298).n128_u64[0];
  return result;
}

__n128 sub_10005609C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10006A3B0();
    uint64_t v28 = (void *)sub_100069CA0();
    sub_100069710();

    uint64_t v19 = a16;
  }
  sub_1000698B0();
  uint64_t v29 = sub_1000059D8(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  uint64_t v30 = (_OWORD *)(a9 + *(int *)(sub_1000059D8(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  _OWORD *v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_100056298@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1000564B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10008A690, &qword_10008A698).n128_u64[0];
  return result;
}

uint64_t sub_1000562F4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10006A3B0();
    uint64_t v25 = (void *)sub_100069CA0();
    sub_100069710();
  }
  sub_1000698B0();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_retain();
}

__n128 sub_1000564B0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10006A3B0();
    long long v28 = (void *)sub_100069CA0();
    sub_100069710();

    uint64_t v19 = a17;
  }
  sub_1000698B0();
  sub_1000185F8(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(sub_1000059D8(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  _OWORD *v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  _OWORD v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_100056680@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v2 = (int *)type metadata accessor for WidgetHeaderView();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v40 - v6;
  uint64_t v8 = sub_1000059D8(&qword_10008A840);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v40 - v13;
  if (qword_100088480 != -1) {
    swift_once();
  }
  uint64_t v46 = qword_1000921B8;
  uint64_t v47 = unk_1000921C0;
  unint64_t v42 = sub_100005A64();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_100069E60();
  uint64_t v16 = v15;
  uint64_t v41 = v17;
  uint64_t v19 = v18 & 1;
  uint64_t *v5 = swift_getKeyPath();
  sub_1000059D8(&qword_100088C28);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)((char *)v5 + v2[5]);
  uint64_t *v20 = swift_getKeyPath();
  sub_1000059D8(&qword_100089118);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (uint64_t *)((char *)v5 + v2[6]);
  *uint64_t v21 = swift_getKeyPath();
  sub_1000059D8(&qword_100089110);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)((char *)v5 + v2[7]);
  uint64_t *v22 = v14;
  v22[1] = v16;
  uint64_t v23 = v41;
  void v22[2] = v19;
  v22[3] = v23;
  sub_100018494((uint64_t)v5, (uint64_t)v7);
  sub_100056FDC();
  uint64_t v24 = v12;
  sub_100069EF0();
  sub_10004E7A0((uint64_t)v7);
  uint64_t v25 = v45;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v45, v24, v8);
  uint64_t v26 = v43 + *(int *)(type metadata accessor for StartWritingWidgetTimelineEntry() + 20);
  uint64_t v27 = *(void *)(v26 + 24);
  uint64_t v46 = *(void *)(v26 + 16);
  uint64_t v47 = v27;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_100069E60();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  LODWORD(v43) = sub_100069BB0();
  long long v35 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v35(v24, v25, v8);
  uint64_t v40 = v24;
  long long v36 = v44;
  v35(v44, v24, v8);
  long long v37 = &v36[*(int *)(sub_1000059D8(&qword_10008A848) + 48)];
  *(void *)long long v37 = v28;
  *((void *)v37 + 1) = v30;
  v37[16] = v34;
  *((void *)v37 + 3) = v32;
  *((_DWORD *)v37 + 8) = v43;
  sub_10004AA10(v28, v30, v34);
  long long v38 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  v38(v45, v8);
  sub_100018524(v28, v30, v34);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v38)(v40, v8);
}

uint64_t sub_100056A5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000059D8(&qword_10008A828);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_100069AD0();
  *((void *)v6 + 1) = 0x4000000000000000;
  v6[16] = 0;
  uint64_t v7 = sub_1000059D8(&qword_10008A830);
  sub_100056680(v2, &v6[*(int *)(v7 + 44)]);
  uint64_t v8 = sub_10006A0D0();
  sub_1000564B0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v8, v9, &qword_10008A828, &qword_10008A838);
  return sub_100007D0C((uint64_t)v6, &qword_10008A828);
}

uint64_t sub_100056B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v2 = sub_100069DE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000059D8(&qword_10008A860);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_10008A868);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  uint64_t v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000059D8(&qword_10008A870);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000059D8(&qword_10008A878);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069D60();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
  uint64_t v18 = sub_100069DF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = sub_1000059D8(&qword_10008A880);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v7, v35, v20);
  uint64_t v21 = (uint64_t *)&v7[*(int *)(v32 + 36)];
  *uint64_t v21 = KeyPath;
  v21[1] = v18;
  sub_100069DA0();
  sub_10005710C();
  uint64_t v22 = v31;
  sub_100069ED0();
  sub_100007D0C((uint64_t)v7, &qword_10008A860);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v13, v22, v34);
  uint64_t v26 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v26 = v23;
  *((void *)v26 + 1) = 2;
  v26[16] = 0;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
  uint64_t v27 = swift_getKeyPath();
  sub_1000185F8((uint64_t)v13, (uint64_t)v17, &qword_10008A870);
  uint64_t v28 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  *uint64_t v28 = v27;
  v28[1] = 0x3FE8A3D70A3D70A4;
  sub_100007D0C((uint64_t)v13, &qword_10008A870);
  uint64_t v29 = v36;
  sub_1000185F8((uint64_t)v17, v36, &qword_10008A878);
  *(_WORD *)(v29 + *(int *)(sub_1000059D8(&qword_10008A898) + 36)) = 256;
  return sub_100007D0C((uint64_t)v17, &qword_10008A878);
}

uint64_t sub_100056F84()
{
  return sub_1000699F0();
}

uint64_t sub_100056FA8()
{
  return sub_1000699F0();
}

unint64_t sub_100056FDC()
{
  unint64_t result = qword_100089440;
  if (!qword_100089440)
  {
    type metadata accessor for WidgetHeaderView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100089440);
  }
  return result;
}

ValueMetadata *type metadata accessor for TextModifier()
{
  return &type metadata for TextModifier;
}

unint64_t sub_100057048()
{
  unint64_t result = qword_10008A850;
  if (!qword_10008A850)
  {
    sub_100005A1C(&qword_10008A838);
    sub_10000CE3C(&qword_10008A858, &qword_10008A828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A850);
  }
  return result;
}

uint64_t sub_1000570E8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005710C()
{
  unint64_t result = qword_10008A888;
  if (!qword_10008A888)
  {
    sub_100005A1C(&qword_10008A860);
    sub_10000CE3C(&qword_10008A890, &qword_10008A880);
    sub_10000CE3C(&qword_100089358, &qword_100089360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A888);
  }
  return result;
}

unint64_t sub_1000571E4()
{
  unint64_t result = qword_10008A8A0;
  if (!qword_10008A8A0)
  {
    sub_100005A1C(&qword_10008A898);
    sub_100057260();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8A0);
  }
  return result;
}

unint64_t sub_100057260()
{
  unint64_t result = qword_10008A8A8;
  if (!qword_10008A8A8)
  {
    sub_100005A1C(&qword_10008A878);
    sub_100057300();
    sub_10000CE3C(&qword_100089378, &qword_100089380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8A8);
  }
  return result;
}

unint64_t sub_100057300()
{
  unint64_t result = qword_10008A8B0;
  if (!qword_10008A8B0)
  {
    sub_100005A1C(&qword_10008A870);
    sub_100005A1C(&qword_10008A860);
    sub_10005710C();
    swift_getOpaqueTypeConformance2();
    sub_10000CE3C(&qword_10008A458, &qword_10008A460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8B0);
  }
  return result;
}

uint64_t sub_1000573D4()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_100069460();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000692B0();
  sub_10000CD24(v10, qword_100092C80);
  sub_10000CCEC(v10, (uint64_t)qword_100092C80);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000692A0();
}

unint64_t sub_1000576BC(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_10008A928);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000059D8(&qword_10008A930);
  uint64_t v6 = sub_10006A4B0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000185F8(v12, (uint64_t)v5, &qword_10008A928);
    char v14 = *v5;
    unint64_t result = sub_1000589DC(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = sub_100069190();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000578B4(uint64_t a1)
{
  uint64_t v2 = sub_1000059D8(&qword_10008A948);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000059D8(&qword_10008A950);
  uint64_t v6 = sub_10006A4B0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000185F8(v12, (uint64_t)v5, &qword_10008A948);
    char v14 = *v5;
    unint64_t result = sub_1000589DC(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = sub_1000059D8(&qword_10008A958);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100057AB4()
{
  uint64_t v0 = sub_1000059D8(&qword_10008A938);
  sub_10000CD24(v0, qword_100092C98);
  sub_10000CCEC(v0, (uint64_t)qword_100092C98);
  sub_1000059D8(&qword_10008A940);
  uint64_t v1 = *(void *)(sub_1000059D8(&qword_10008A948) - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10006E000;
  unint64_t v5 = v4 + v3;
  *(unsigned char *)(v4 + v3) = 0;
  sub_100011868();
  sub_1000691E0();
  *(unsigned char *)(v5 + v2) = 1;
  sub_1000691E0();
  *(unsigned char *)(v5 + 2 * v2) = 2;
  sub_1000691E0();
  *(unsigned char *)(v5 + 3 * v2) = 3;
  sub_1000691E0();
  *(unsigned char *)(v5 + 4 * v2) = 4;
  sub_1000691E0();
  *(unsigned char *)(v5 + 5 * v2) = 5;
  sub_1000691E0();
  *(unsigned char *)(v5 + 6 * v2) = 6;
  sub_1000691E0();
  *(unsigned char *)(v5 + 7 * v2) = 7;
  sub_1000691E0();
  *(unsigned char *)(v5 + 8 * v2) = 8;
  sub_1000691E0();
  *(unsigned char *)(v5 + 9 * v2) = 9;
  sub_1000691E0();
  sub_1000578B4(v4);
  return sub_1000691F0();
}

unint64_t sub_100057E10(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x7972746E45646461;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 5:
      unint64_t result = 0x72756F4A6B636F6CLL;
      break;
    case 7:
      unint64_t result = 0x68506F5465766173;
      break;
    case 8:
      unint64_t result = 0x6F4A74726F707865;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 1953460082;
      break;
  }
  return result;
}

uint64_t sub_100057F78(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_100057E10(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_100057E10(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10006A570();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_100058008()
{
  unint64_t result = qword_10008A8B8;
  if (!qword_10008A8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8B8);
  }
  return result;
}

Swift::Int sub_10005805C()
{
  char v1 = *v0;
  sub_10006A590();
  sub_100057E10(v1);
  sub_10006A300();
  swift_bridgeObjectRelease();
  return sub_10006A5C0();
}

uint64_t sub_1000580C0()
{
  sub_100057E10(*v0);
  sub_10006A300();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100058114()
{
  char v1 = *v0;
  sub_10006A590();
  sub_100057E10(v1);
  sub_10006A300();
  swift_bridgeObjectRelease();
  return sub_10006A5C0();
}

uint64_t sub_100058174@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10005B6C4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000581A4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100057E10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000581D8()
{
  unint64_t result = qword_10008A8C0;
  if (!qword_10008A8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8C0);
  }
  return result;
}

uint64_t sub_10005822C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000889D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000059D8(&qword_10008A938);
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092C98);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_1000582DC()
{
  unint64_t result = qword_10008A8C8;
  if (!qword_10008A8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8C8);
  }
  return result;
}

unint64_t sub_100058334()
{
  unint64_t result = qword_10008A8D0;
  if (!qword_10008A8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8D0);
  }
  return result;
}

void *sub_100058388()
{
  return &protocol witness table for String;
}

uint64_t sub_100058394()
{
  sub_100011964();
  uint64_t v2 = sub_1000691B0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000CD88(v3, v0, v2, v1);
}

unint64_t sub_10005842C()
{
  unint64_t result = qword_10008A8E0;
  if (!qword_10008A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8E0);
  }
  return result;
}

unint64_t sub_100058484()
{
  unint64_t result = qword_10008A8E8;
  if (!qword_10008A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8E8);
  }
  return result;
}

unint64_t sub_1000584E0()
{
  unint64_t result = qword_10008A8F0;
  if (!qword_10008A8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8F0);
  }
  return result;
}

uint64_t sub_100058534@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000889C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000692B0();
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092C80);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000585DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005862C(uint64_t a1)
{
  unint64_t v2 = sub_100011868();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10005867C()
{
  unint64_t result = qword_10008A8F8;
  if (!qword_10008A8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A8F8);
  }
  return result;
}

unint64_t sub_1000586D4()
{
  unint64_t result = qword_10008A900;
  if (!qword_10008A900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A900);
  }
  return result;
}

unint64_t sub_10005872C()
{
  unint64_t result = qword_10008A908;
  if (!qword_10008A908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A908);
  }
  return result;
}

uint64_t sub_100058784(uint64_t a1)
{
  unint64_t v2 = sub_1000584E0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000587D4()
{
  unint64_t result = qword_10008A910;
  if (!qword_10008A910)
  {
    sub_100005A1C(&qword_10008A918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A910);
  }
  return result;
}

void sub_100058830(void *a1@<X8>)
{
  *a1 = &off_1000864A8;
}

uint64_t getEnumTagSinglePayload for JournalSettingsDeepLinks(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JournalSettingsDeepLinks(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005899CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000589C4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for JournalSettingsDeepLinks()
{
  return &type metadata for JournalSettingsDeepLinks;
}

unint64_t sub_1000589DC(char a1)
{
  sub_10006A590();
  sub_100057E10(a1);
  sub_10006A300();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10006A5C0();

  return sub_100058A64(a1, v2);
}

unint64_t sub_100058A64(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD000000000000019;
      unint64_t v8 = 0x800000010006F540;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          break;
        case 2:
          unint64_t v7 = 0x7972746E45646461;
          unint64_t v8 = 0xED0000656C746954;
          break;
        case 3:
          uint64_t v9 = "ggestions";
          goto LABEL_10;
        case 4:
          unint64_t v7 = 0x6163696669746F6ELL;
          unint64_t v8 = 0xED0000736E6F6974;
          break;
        case 5:
          unint64_t v7 = 0x72756F4A6B636F6CLL;
          unint64_t v8 = 0xEB000000006C616ELL;
          break;
        case 6:
          uint64_t v9 = "alwaysUseMomentDate";
LABEL_10:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v7 = 0xD000000000000013;
          break;
        case 7:
          unint64_t v7 = 0x68506F5465766173;
          unint64_t v8 = 0xEC000000736F746FLL;
          break;
        case 8:
          unint64_t v7 = 0x6F4A74726F707865;
          unint64_t v8 = 0xED00006C616E7275;
          break;
        case 9:
          unint64_t v7 = 0xD000000000000011;
          unint64_t v8 = 0x800000010006F5C0;
          break;
        default:
          unint64_t v8 = 0xE400000000000000;
          unint64_t v7 = 1953460082;
          break;
      }
      unint64_t v10 = 0x800000010006F540;
      switch(v6)
      {
        case 1:
          if (v7 != 0xD000000000000019) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 2:
          uint64_t v12 = 0x7972746E45646461;
          uint64_t v13 = 0x656C746954;
          goto LABEL_25;
        case 3:
          char v14 = "ggestions";
          goto LABEL_30;
        case 4:
          uint64_t v12 = 0x6163696669746F6ELL;
          uint64_t v13 = 0x736E6F6974;
LABEL_25:
          unint64_t v10 = v13 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          if (v7 != v12) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 5:
          unint64_t v10 = 0xEB000000006C616ELL;
          if (v7 != 0x72756F4A6B636F6CLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 6:
          char v14 = "alwaysUseMomentDate";
LABEL_30:
          unint64_t v10 = (unint64_t)v14 | 0x8000000000000000;
          if (v7 != 0xD000000000000013) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 7:
          unint64_t v10 = 0xEC000000736F746FLL;
          if (v7 != 0x68506F5465766173) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 8:
          unint64_t v10 = 0xED00006C616E7275;
          if (v7 != 0x6F4A74726F707865) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 9:
          unint64_t v10 = 0x800000010006F5C0;
          if (v7 != 0xD000000000000011) {
            goto LABEL_17;
          }
          goto LABEL_16;
        default:
          unint64_t v10 = 0xE400000000000000;
          if (v7 != 1953460082) {
            goto LABEL_17;
          }
LABEL_16:
          if (v8 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_17:
          char v11 = sub_10006A570();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_100058E3C()
{
  uint64_t v0 = sub_1000059D8(&qword_100088E20);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v169 = (char *)v133 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  int v166 = (char *)v133 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v163 = (char *)v133 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v160 = (char *)v133 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v157 = (char *)v133 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v152 = (char *)v133 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v149 = (char *)v133 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v146 = (char *)v133 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v175 = (char *)v133 - v18;
  __chkstk_darwin(v17);
  unint64_t v142 = (char *)v133 - v19;
  uint64_t v20 = sub_1000059D8(&qword_100088DF0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v168 = (char *)v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v164 = (char *)v133 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v161 = (char *)v133 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v159 = (char *)v133 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v154 = (char *)v133 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v150 = (char *)v133 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v148 = (char *)v133 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v145 = (char *)v133 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v143 = (char *)v133 - v38;
  __chkstk_darwin(v37);
  unint64_t v141 = (char *)v133 - v39;
  uint64_t v40 = sub_100069460();
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)v133 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100069660();
  __chkstk_darwin(v44 - 8);
  uint64_t v45 = sub_10006A2C0();
  __chkstk_darwin(v45 - 8);
  uint64_t v46 = sub_100069470();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v190 = v46;
  uint64_t v191 = v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v167 = (char *)v133 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v165 = (char *)v133 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v162 = (char *)v133 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v158 = (char *)v133 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v153 = (char *)v133 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  unint64_t v151 = (char *)v133 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v147 = (char *)v133 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v144 = (char *)v133 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  *(void *)&long long v174 = (char *)v133 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v189 = (char *)v133 - v67;
  __chkstk_darwin(v66);
  *(void *)&long long v138 = (char *)v133 - v68;
  sub_1000059D8(&qword_10008A920);
  uint64_t v69 = (int *)(sub_1000059D8(&qword_10008A928) - 8);
  uint64_t v70 = *(void *)v69;
  uint64_t v178 = *(void *)(*(void *)v69 + 72);
  os_log_t v182 = v69;
  unint64_t v71 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  uint64_t v72 = swift_allocObject();
  uint64_t v140 = v72;
  *(_OWORD *)(v72 + 16) = xmmword_10006E000;
  unint64_t v73 = v72 + v71;
  *(unsigned char *)(v72 + v71) = 0;
  unint64_t v183 = v72 + v71;
  unint64_t v172 = 0xD000000000000010;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v74 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 104);
  unsigned int v170 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v176 = v40;
  v75(v43, enum case for LocalizedStringResource.BundleDescription.main(_:), v40);
  uint64_t v173 = v75;
  unint64_t v179 = 0x800000010006FC10;
  sub_100069480();
  unint64_t v137 = 0xD00000000000001ALL;
  sub_10006A2B0();
  sub_100069650();
  v75(v43, v74, v40);
  uint64_t v76 = v141;
  sub_100069480();
  uint64_t v77 = v191 + 56;
  uint64_t v187 = *(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56);
  v187(v76, 0, 1, v190);
  unint64_t v136 = v73 + v69[14];
  uint64_t v78 = v142;
  sub_100069160();
  uint64_t v186 = sub_100069170();
  uint64_t v79 = *(void *)(v186 - 8);
  uint64_t v185 = *(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56);
  uint64_t v188 = v79 + 56;
  v185(v78, 0, 1, v186);
  uint64_t v181 = sub_1000059D8(&qword_100088E28);
  uint64_t v191 = v77;
  uint64_t v80 = *(void *)(v77 + 16);
  uint64_t v81 = *(unsigned __int8 *)(v77 + 24);
  uint64_t v171 = 2 * v80;
  uint64_t v177 = v80;
  uint64_t v156 = ((v81 + 32) & ~v81) + 2 * v80;
  uint64_t v180 = (v81 + 32) & ~v81;
  uint64_t v184 = v81 | 7;
  uint64_t v82 = swift_allocObject();
  long long v155 = xmmword_10006BB40;
  unint64_t v135 = v82;
  *(_OWORD *)(v82 + 16) = xmmword_10006BB40;
  unint64_t v139 = 0xD000000000000017;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v83 = v170;
  uint64_t v84 = v176;
  uint64_t v85 = v173;
  v173(v43, v170, v176);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  uint64_t v86 = v83;
  v85(v43, v83, v84);
  uint64_t v87 = v85;
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v85(v43, v86, v84);
  sub_100069480();
  sub_100069180();
  uint64_t v88 = (unsigned char *)(v183 + v178);
  *(unsigned char *)(v183 + v178) = 1;
  unint64_t v136 = 0xD00000000000002CLL;
  sub_10006A2B0();
  sub_100069650();
  v87(v43, v86, v84);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v87(v43, v86, v84);
  uint64_t v89 = v143;
  sub_100069480();
  v187(v89, 0, 1, v190);
  unint64_t v135 = (unint64_t)&v88[v182[14]];
  uint64_t v90 = v175;
  sub_100069160();
  v185(v90, 0, 1, v186);
  unint64_t v141 = (char *)(v180 + v171 + v177);
  uint64_t v91 = swift_allocObject();
  long long v138 = xmmword_10006BDA0;
  uint64_t v134 = (unsigned char *)v91;
  *(_OWORD *)(v91 + 16) = xmmword_10006BDA0;
  unint64_t v142 = (char *)0xD000000000000012;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v92 = v176;
  uint64_t v93 = v173;
  v173(v43, v86, v176);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v93(v43, v86, v92);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v93(v43, v86, v92);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v93(v43, v86, v92);
  sub_100069480();
  sub_100069180();
  uint64_t v143 = (char *)(2 * v178);
  uint64_t v94 = (unsigned char *)(v183 + 2 * v178);
  *uint64_t v94 = 2;
  unint64_t v135 = 0xD000000000000020;
  sub_10006A2B0();
  sub_100069650();
  v93(v43, v86, v92);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v93(v43, v86, v92);
  uint64_t v95 = v93;
  char v96 = v145;
  sub_100069480();
  v187(v96, 0, 1, v190);
  uint64_t v134 = &v94[v182[14]];
  char v97 = v146;
  sub_100069160();
  v185(v97, 0, 1, v186);
  uint64_t v175 = (char *)(v180 + v177);
  uint64_t v98 = swift_allocObject();
  long long v174 = xmmword_10006AB80;
  *(_OWORD *)(v98 + 16) = xmmword_10006AB80;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v99 = v170;
  uint64_t v100 = v176;
  v95(v43, v170, v176);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v95(v43, v99, v100);
  sub_100069480();
  sub_100069180();
  uint64_t v101 = &v143[v178 + v183];
  *uint64_t v101 = 3;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v102 = v99;
  v95(v43, v99, v100);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v95(v43, v99, v100);
  uint64_t v103 = v95;
  uint64_t v104 = v148;
  sub_100069480();
  v187(v104, 0, 1, v190);
  uint64_t v146 = &v101[v182[14]];
  uint64_t v105 = v149;
  sub_100069160();
  v185(v105, 0, 1, v186);
  *(_OWORD *)(swift_allocObject() + 16) = v174;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v106 = v176;
  v95(v43, v102, v176);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v95(v43, v102, v106);
  sub_100069480();
  sub_100069180();
  uint64_t v149 = (char *)(4 * v178);
  uint64_t v148 = (char *)(v183 + 4 * v178);
  *uint64_t v148 = 4;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v107 = v41 + 104;
  v95(v43, v102, v106);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v95(v43, v102, v106);
  uint64_t v108 = v150;
  sub_100069480();
  v187(v108, 0, 1, v190);
  uint64_t v109 = v152;
  sub_100069160();
  v185(v109, 0, 1, v186);
  *(_OWORD *)(swift_allocObject() + 16) = v155;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v110 = v176;
  v103(v43, v102, v176);
  sub_100069480();
  v148 += v182[14];
  sub_10006A2B0();
  sub_100069650();
  v103(v43, v102, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v103(v43, v102, v110);
  char v111 = v103;
  sub_100069480();
  sub_100069180();
  uint64_t v112 = &v149[v178 + v183];
  *uint64_t v112 = 5;
  sub_10006A2B0();
  sub_100069650();
  v111(v43, v102, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v111(v43, v102, v110);
  char v113 = v154;
  sub_100069480();
  v187(v113, 0, 1, v190);
  unint64_t v114 = v157;
  sub_100069160();
  v185(v114, 0, 1, v186);
  *(_OWORD *)(swift_allocObject() + 16) = v174;
  unint64_t v152 = &v112[v182[14]];
  sub_10006A2B0();
  sub_100069650();
  v111(v43, v102, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v111(v43, v102, v110);
  sub_100069480();
  sub_100069180();
  long long v115 = (unsigned char *)(v183 + 6 * v178);
  *long long v115 = 6;
  sub_10006A2B0();
  sub_100069650();
  v111(v43, v102, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v111(v43, v102, v110);
  unint64_t v116 = v159;
  sub_100069480();
  v187(v116, 0, 1, v190);
  uint64_t v157 = &v115[v182[14]];
  unint64_t v117 = v160;
  sub_100069160();
  v185(v117, 0, 1, v186);
  *(_OWORD *)(swift_allocObject() + 16) = v174;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v118 = v170;
  uint64_t v119 = v173;
  v173(v43, v170, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  uint64_t v120 = v118;
  v119(v43, v118, v110);
  sub_100069480();
  sub_100069180();
  uint64_t v160 = (char *)(8 * v178);
  uint64_t v159 = (char *)(v183 + 7 * v178);
  *uint64_t v159 = 7;
  sub_10006A2B0();
  sub_100069650();
  v133[1] = v107;
  v119(v43, v118, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v119(v43, v118, v110);
  uint64_t v121 = v119;
  uint64_t v122 = v161;
  sub_100069480();
  v187(v122, 0, 1, v190);
  uint64_t v123 = v163;
  sub_100069160();
  v185(v123, 0, 1, v186);
  *(_OWORD *)(swift_allocObject() + 16) = v155;
  sub_10006A2B0();
  sub_100069650();
  v121(v43, v120, v110);
  sub_100069480();
  v159 += v182[14];
  sub_10006A2B0();
  sub_100069650();
  v121(v43, v120, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  uint64_t v124 = v121;
  v121(v43, v120, v110);
  sub_100069480();
  sub_100069180();
  uint64_t v125 = &v160[v183];
  v160[v183] = 8;
  sub_10006A2B0();
  sub_100069650();
  v124(v43, v120, v110);
  sub_100069480();
  uint64_t v163 = (char *)0xD00000000000001CLL;
  sub_10006A2B0();
  sub_100069650();
  v124(v43, v120, v110);
  uint64_t v126 = v164;
  sub_100069480();
  v187(v126, 0, 1, v190);
  uint64_t v162 = &v125[v182[14]];
  unint64_t v127 = v166;
  sub_100069160();
  v185(v127, 0, 1, v186);
  uint64_t v161 = (char *)swift_allocObject();
  *((_OWORD *)v161 + 1) = v138;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v128 = v173;
  v173(v43, v120, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v128(v43, v120, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v128(v43, v120, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v128(v43, v120, v110);
  sub_100069480();
  sub_100069180();
  v183 += (unint64_t)&v160[v178];
  *(unsigned char *)unint64_t v183 = 9;
  sub_10006A2B0();
  sub_100069650();
  v128(v43, v120, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v128(v43, v120, v110);
  unint64_t v129 = v128;
  unint64_t v130 = v168;
  sub_100069480();
  v187(v130, 0, 1, v190);
  uint64_t v131 = v169;
  sub_100069160();
  v185(v131, 0, 1, v186);
  *(_OWORD *)(swift_allocObject() + 16) = v174;
  sub_10006A2B0();
  sub_100069650();
  v129(v43, v120, v110);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v129(v43, v120, v110);
  sub_100069480();
  sub_100069180();
  return sub_1000576BC(v140);
}

uint64_t sub_10005B6C4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100086528;
  v6._object = a2;
  unint64_t v4 = sub_10006A4D0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

uint64_t sub_10005B710()
{
  sub_1000059D8(&qword_10008A960);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10006BDB0;
  if (qword_1000884B0 != -1) {
    swift_once();
  }
  uint64_t v1 = unk_100092220;
  *(void *)(inited + 32) = qword_100092218;
  *(void *)(inited + 40) = v1;
  uint64_t v2 = qword_1000884B8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = unk_100092230;
  *(void *)(inited + 48) = qword_100092228;
  *(void *)(inited + 56) = v3;
  uint64_t v4 = qword_1000884C0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = unk_100092240;
  *(void *)(inited + 64) = qword_100092238;
  *(void *)(inited + 72) = v5;
  uint64_t v6 = qword_1000884C8;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = unk_100092250;
  *(void *)(inited + 80) = qword_100092248;
  *(void *)(inited + 88) = v7;
  uint64_t v8 = qword_1000884D0;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = unk_100092260;
  *(void *)(inited + 96) = qword_100092258;
  *(void *)(inited + 104) = v9;
  uint64_t v10 = qword_1000884D8;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = unk_100092270;
  *(void *)(inited + 112) = qword_100092268;
  *(void *)(inited + 120) = v11;
  uint64_t v12 = qword_1000884E0;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = unk_100092280;
  *(void *)(inited + 128) = qword_100092278;
  *(void *)(inited + 136) = v13;
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_10006E320;
  uint64_t v15 = qword_1000884E8;
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = unk_100092290;
  *(void *)(v14 + 32) = qword_100092288;
  *(void *)(v14 + 40) = v16;
  uint64_t v17 = qword_1000884F0;
  swift_bridgeObjectRetain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = unk_1000922A0;
  *(void *)(v14 + 48) = qword_100092298;
  *(void *)(v14 + 56) = v18;
  uint64_t v19 = qword_1000884F8;
  swift_bridgeObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = unk_1000922B0;
  *(void *)(v14 + 64) = qword_1000922A8;
  *(void *)(v14 + 72) = v20;
  uint64_t v21 = qword_100088500;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = unk_1000922C0;
  *(void *)(v14 + 80) = qword_1000922B8;
  *(void *)(v14 + 88) = v22;
  uint64_t v23 = qword_100088508;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v24 = unk_1000922D0;
  *(void *)(v14 + 96) = qword_1000922C8;
  *(void *)(v14 + 104) = v24;
  uint64_t v25 = qword_100088510;
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    swift_once();
  }
  uint64_t v26 = unk_1000922E0;
  *(void *)(v14 + 112) = qword_1000922D8;
  *(void *)(v14 + 120) = v26;
  uint64_t v27 = qword_100088518;
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = unk_1000922F0;
  *(void *)(v14 + 128) = qword_1000922E8;
  *(void *)(v14 + 136) = v28;
  uint64_t v29 = qword_100088520;
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = unk_100092300;
  *(void *)(v14 + 144) = qword_1000922F8;
  *(void *)(v14 + 152) = v30;
  uint64_t v31 = qword_100088528;
  swift_bridgeObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v32 = unk_100092310;
  *(void *)(v14 + 160) = qword_100092308;
  *(void *)(v14 + 168) = v32;
  uint64_t v33 = qword_100088530;
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = unk_100092320;
  *(void *)(v14 + 176) = qword_100092318;
  *(void *)(v14 + 184) = v34;
  uint64_t v35 = qword_100088538;
  swift_bridgeObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = unk_100092330;
  *(void *)(v14 + 192) = qword_100092328;
  *(void *)(v14 + 200) = v36;
  uint64_t v37 = swift_initStackObject();
  *(_OWORD *)(v37 + 16) = xmmword_10006B7C0;
  uint64_t v38 = qword_100088540;
  swift_bridgeObjectRetain();
  if (v38 != -1) {
    swift_once();
  }
  uint64_t v39 = unk_100092340;
  *(void *)(v37 + 32) = qword_100092338;
  *(void *)(v37 + 40) = v39;
  uint64_t v40 = qword_100088548;
  swift_bridgeObjectRetain();
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v41 = unk_100092350;
  *(void *)(v37 + 48) = qword_100092348;
  *(void *)(v37 + 56) = v41;
  uint64_t v42 = qword_100088550;
  swift_bridgeObjectRetain();
  if (v42 != -1) {
    swift_once();
  }
  uint64_t v43 = unk_100092360;
  *(void *)(v37 + 64) = qword_100092358;
  *(void *)(v37 + 72) = v43;
  uint64_t v44 = qword_100088558;
  swift_bridgeObjectRetain();
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v45 = unk_100092370;
  *(void *)(v37 + 80) = qword_100092368;
  *(void *)(v37 + 88) = v45;
  uint64_t v46 = qword_100088560;
  swift_bridgeObjectRetain();
  if (v46 != -1) {
    swift_once();
  }
  uint64_t v47 = unk_100092380;
  *(void *)(v37 + 96) = qword_100092378;
  *(void *)(v37 + 104) = v47;
  uint64_t v48 = qword_100088568;
  swift_bridgeObjectRetain();
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v49 = unk_100092390;
  *(void *)(v37 + 112) = qword_100092388;
  *(void *)(v37 + 120) = v49;
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_10006B7C0;
  uint64_t v51 = qword_100088570;
  swift_bridgeObjectRetain();
  if (v51 != -1) {
    swift_once();
  }
  uint64_t v52 = unk_1000923A0;
  *(void *)(v50 + 32) = qword_100092398;
  *(void *)(v50 + 40) = v52;
  uint64_t v53 = qword_100088578;
  swift_bridgeObjectRetain();
  if (v53 != -1) {
    swift_once();
  }
  uint64_t v54 = unk_1000923B0;
  *(void *)(v50 + 48) = qword_1000923A8;
  *(void *)(v50 + 56) = v54;
  uint64_t v55 = qword_100088580;
  swift_bridgeObjectRetain();
  if (v55 != -1) {
    swift_once();
  }
  uint64_t v56 = unk_1000923C0;
  *(void *)(v50 + 64) = qword_1000923B8;
  *(void *)(v50 + 72) = v56;
  uint64_t v57 = qword_100088588;
  swift_bridgeObjectRetain();
  if (v57 != -1) {
    swift_once();
  }
  uint64_t v58 = unk_1000923D0;
  *(void *)(v50 + 80) = qword_1000923C8;
  *(void *)(v50 + 88) = v58;
  uint64_t v59 = qword_100088590;
  swift_bridgeObjectRetain();
  if (v59 != -1) {
    swift_once();
  }
  uint64_t v60 = unk_1000923E0;
  *(void *)(v50 + 96) = qword_1000923D8;
  *(void *)(v50 + 104) = v60;
  uint64_t v61 = qword_100088598;
  swift_bridgeObjectRetain();
  if (v61 != -1) {
    swift_once();
  }
  uint64_t v62 = unk_1000923F0;
  *(void *)(v50 + 112) = qword_1000923E8;
  *(void *)(v50 + 120) = v62;
  uint64_t v63 = swift_initStackObject();
  *(_OWORD *)(v63 + 16) = xmmword_10006BD80;
  uint64_t v64 = qword_1000885A0;
  swift_bridgeObjectRetain();
  if (v64 != -1) {
    swift_once();
  }
  uint64_t v65 = unk_100092400;
  *(void *)(v63 + 32) = qword_1000923F8;
  *(void *)(v63 + 40) = v65;
  uint64_t v66 = qword_1000885A8;
  swift_bridgeObjectRetain();
  if (v66 != -1) {
    swift_once();
  }
  uint64_t v67 = unk_100092410;
  *(void *)(v63 + 48) = qword_100092408;
  *(void *)(v63 + 56) = v67;
  uint64_t v68 = qword_1000885B0;
  swift_bridgeObjectRetain();
  if (v68 != -1) {
    swift_once();
  }
  uint64_t v69 = unk_100092420;
  *(void *)(v63 + 64) = qword_100092418;
  *(void *)(v63 + 72) = v69;
  uint64_t v70 = qword_1000885B8;
  swift_bridgeObjectRetain();
  if (v70 != -1) {
    swift_once();
  }
  uint64_t v71 = unk_100092430;
  *(void *)(v63 + 80) = qword_100092428;
  *(void *)(v63 + 88) = v71;
  uint64_t v72 = swift_initStackObject();
  *(_OWORD *)(v72 + 16) = xmmword_10006BD80;
  uint64_t v73 = qword_1000885C0;
  swift_bridgeObjectRetain();
  if (v73 != -1) {
    swift_once();
  }
  uint64_t v74 = unk_100092440;
  *(void *)(v72 + 32) = qword_100092438;
  *(void *)(v72 + 40) = v74;
  uint64_t v75 = qword_1000885C8;
  swift_bridgeObjectRetain();
  if (v75 != -1) {
    swift_once();
  }
  uint64_t v76 = unk_100092450;
  *(void *)(v72 + 48) = qword_100092448;
  *(void *)(v72 + 56) = v76;
  uint64_t v77 = qword_1000885D0;
  swift_bridgeObjectRetain();
  if (v77 != -1) {
    swift_once();
  }
  uint64_t v78 = unk_100092460;
  *(void *)(v72 + 64) = qword_100092458;
  *(void *)(v72 + 72) = v78;
  uint64_t v79 = qword_1000885D8;
  swift_bridgeObjectRetain();
  if (v79 != -1) {
    swift_once();
  }
  uint64_t v80 = unk_100092470;
  *(void *)(v72 + 80) = qword_100092468;
  *(void *)(v72 + 88) = v80;
  swift_bridgeObjectRetain();
  char v294 = sub_10005E638(0);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v81 = swift_initStackObject();
  *(_OWORD *)(v81 + 16) = xmmword_10006BD90;
  if (qword_1000885E0 != -1) {
    swift_once();
  }
  uint64_t v82 = unk_100092480;
  *(void *)(v81 + 32) = qword_100092478;
  *(void *)(v81 + 40) = v82;
  uint64_t v83 = qword_1000885E8;
  swift_bridgeObjectRetain();
  if (v83 != -1) {
    swift_once();
  }
  uint64_t v84 = unk_100092490;
  *(void *)(v81 + 48) = qword_100092488;
  *(void *)(v81 + 56) = v84;
  uint64_t v85 = qword_1000885F0;
  swift_bridgeObjectRetain();
  if (v85 != -1) {
    swift_once();
  }
  uint64_t v86 = unk_1000924A0;
  *(void *)(v81 + 64) = qword_100092498;
  *(void *)(v81 + 72) = v86;
  uint64_t v87 = qword_1000885F8;
  swift_bridgeObjectRetain();
  if (v87 != -1) {
    swift_once();
  }
  uint64_t v88 = unk_1000924B0;
  *(void *)(v81 + 80) = qword_1000924A8;
  *(void *)(v81 + 88) = v88;
  uint64_t v89 = qword_100088600;
  swift_bridgeObjectRetain();
  if (v89 != -1) {
    swift_once();
  }
  uint64_t v90 = unk_1000924C0;
  *(void *)(v81 + 96) = qword_1000924B8;
  *(void *)(v81 + 104) = v90;
  uint64_t v91 = qword_100088608;
  swift_bridgeObjectRetain();
  if (v91 != -1) {
    swift_once();
  }
  uint64_t v92 = unk_1000924D0;
  *(void *)(v81 + 112) = qword_1000924C8;
  *(void *)(v81 + 120) = v92;
  uint64_t v93 = qword_100088610;
  swift_bridgeObjectRetain();
  if (v93 != -1) {
    swift_once();
  }
  uint64_t v94 = unk_1000924E0;
  *(void *)(v81 + 128) = qword_1000924D8;
  *(void *)(v81 + 136) = v94;
  uint64_t v95 = qword_100088618;
  swift_bridgeObjectRetain();
  if (v95 != -1) {
    swift_once();
  }
  uint64_t v96 = unk_1000924F0;
  *(void *)(v81 + 144) = qword_1000924E8;
  *(void *)(v81 + 152) = v96;
  uint64_t v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = xmmword_10006E330;
  uint64_t v98 = qword_100088620;
  swift_bridgeObjectRetain();
  if (v98 != -1) {
    swift_once();
  }
  uint64_t v99 = unk_100092500;
  *(void *)(v97 + 32) = qword_1000924F8;
  *(void *)(v97 + 40) = v99;
  uint64_t v100 = qword_100088628;
  swift_bridgeObjectRetain();
  if (v100 != -1) {
    swift_once();
  }
  uint64_t v101 = unk_100092510;
  *(void *)(v97 + 48) = qword_100092508;
  *(void *)(v97 + 56) = v101;
  uint64_t v102 = qword_100088630;
  swift_bridgeObjectRetain();
  if (v102 != -1) {
    swift_once();
  }
  uint64_t v103 = unk_100092520;
  *(void *)(v97 + 64) = qword_100092518;
  *(void *)(v97 + 72) = v103;
  uint64_t v104 = qword_100088638;
  swift_bridgeObjectRetain();
  if (v104 != -1) {
    swift_once();
  }
  uint64_t v105 = unk_100092530;
  *(void *)(v97 + 80) = qword_100092528;
  *(void *)(v97 + 88) = v105;
  uint64_t v106 = qword_100088640;
  swift_bridgeObjectRetain();
  if (v106 != -1) {
    swift_once();
  }
  uint64_t v107 = unk_100092540;
  *(void *)(v97 + 96) = qword_100092538;
  *(void *)(v97 + 104) = v107;
  uint64_t v108 = qword_100088648;
  swift_bridgeObjectRetain();
  if (v108 != -1) {
    swift_once();
  }
  uint64_t v109 = unk_100092550;
  *(void *)(v97 + 112) = qword_100092548;
  *(void *)(v97 + 120) = v109;
  uint64_t v110 = qword_100088650;
  swift_bridgeObjectRetain();
  if (v110 != -1) {
    swift_once();
  }
  uint64_t v111 = unk_100092560;
  *(void *)(v97 + 128) = qword_100092558;
  *(void *)(v97 + 136) = v111;
  uint64_t v112 = qword_100088658;
  swift_bridgeObjectRetain();
  if (v112 != -1) {
    swift_once();
  }
  uint64_t v113 = unk_100092570;
  *(void *)(v97 + 144) = qword_100092568;
  *(void *)(v97 + 152) = v113;
  uint64_t v114 = qword_100088660;
  swift_bridgeObjectRetain();
  if (v114 != -1) {
    swift_once();
  }
  uint64_t v115 = unk_100092580;
  *(void *)(v97 + 160) = qword_100092578;
  *(void *)(v97 + 168) = v115;
  uint64_t v116 = qword_100088668;
  swift_bridgeObjectRetain();
  if (v116 != -1) {
    swift_once();
  }
  uint64_t v117 = unk_100092590;
  *(void *)(v97 + 176) = qword_100092588;
  *(void *)(v97 + 184) = v117;
  uint64_t v118 = qword_100088670;
  swift_bridgeObjectRetain();
  if (v118 != -1) {
    swift_once();
  }
  uint64_t v119 = unk_1000925A0;
  *(void *)(v97 + 192) = qword_100092598;
  *(void *)(v97 + 200) = v119;
  uint64_t v120 = qword_100088678;
  swift_bridgeObjectRetain();
  if (v120 != -1) {
    swift_once();
  }
  uint64_t v121 = unk_1000925B0;
  *(void *)(v97 + 208) = qword_1000925A8;
  *(void *)(v97 + 216) = v121;
  uint64_t v122 = qword_100088680;
  swift_bridgeObjectRetain();
  if (v122 != -1) {
    swift_once();
  }
  uint64_t v123 = unk_1000925C0;
  *(void *)(v97 + 224) = qword_1000925B8;
  *(void *)(v97 + 232) = v123;
  uint64_t v124 = qword_100088688;
  swift_bridgeObjectRetain();
  if (v124 != -1) {
    swift_once();
  }
  uint64_t v125 = unk_1000925D0;
  *(void *)(v97 + 240) = qword_1000925C8;
  *(void *)(v97 + 248) = v125;
  uint64_t v126 = qword_100088690;
  swift_bridgeObjectRetain();
  if (v126 != -1) {
    swift_once();
  }
  uint64_t v127 = unk_1000925E0;
  *(void *)(v97 + 256) = qword_1000925D8;
  *(void *)(v97 + 264) = v127;
  uint64_t v128 = qword_100088698;
  swift_bridgeObjectRetain();
  if (v128 != -1) {
    swift_once();
  }
  uint64_t v129 = unk_1000925F0;
  *(void *)(v97 + 272) = qword_1000925E8;
  *(void *)(v97 + 280) = v129;
  uint64_t v130 = swift_allocObject();
  *(_OWORD *)(v130 + 16) = xmmword_10006B7C0;
  uint64_t v131 = qword_1000886A0;
  swift_bridgeObjectRetain();
  if (v131 != -1) {
    swift_once();
  }
  uint64_t v132 = unk_100092600;
  *(void *)(v130 + 32) = qword_1000925F8;
  *(void *)(v130 + 40) = v132;
  uint64_t v133 = qword_1000886A8;
  swift_bridgeObjectRetain();
  if (v133 != -1) {
    swift_once();
  }
  uint64_t v134 = unk_100092610;
  *(void *)(v130 + 48) = qword_100092608;
  *(void *)(v130 + 56) = v134;
  uint64_t v135 = qword_1000886B0;
  swift_bridgeObjectRetain();
  if (v135 != -1) {
    swift_once();
  }
  uint64_t v136 = unk_100092620;
  *(void *)(v130 + 64) = qword_100092618;
  *(void *)(v130 + 72) = v136;
  uint64_t v137 = qword_1000886B8;
  swift_bridgeObjectRetain();
  if (v137 != -1) {
    swift_once();
  }
  uint64_t v138 = unk_100092630;
  *(void *)(v130 + 80) = qword_100092628;
  *(void *)(v130 + 88) = v138;
  uint64_t v139 = qword_1000886C0;
  swift_bridgeObjectRetain();
  if (v139 != -1) {
    swift_once();
  }
  uint64_t v140 = unk_100092640;
  *(void *)(v130 + 96) = qword_100092638;
  *(void *)(v130 + 104) = v140;
  uint64_t v141 = qword_1000886C8;
  swift_bridgeObjectRetain();
  if (v141 != -1) {
    swift_once();
  }
  uint64_t v142 = unk_100092650;
  *(void *)(v130 + 112) = qword_100092648;
  *(void *)(v130 + 120) = v142;
  uint64_t v143 = swift_allocObject();
  *(_OWORD *)(v143 + 16) = xmmword_10006D7D0;
  uint64_t v144 = qword_1000886D0;
  swift_bridgeObjectRetain();
  if (v144 != -1) {
    swift_once();
  }
  uint64_t v145 = unk_100092660;
  *(void *)(v143 + 32) = qword_100092658;
  *(void *)(v143 + 40) = v145;
  uint64_t v146 = qword_1000886D8;
  swift_bridgeObjectRetain();
  if (v146 != -1) {
    swift_once();
  }
  uint64_t v147 = unk_100092670;
  *(void *)(v143 + 48) = qword_100092668;
  *(void *)(v143 + 56) = v147;
  uint64_t v148 = qword_1000886E0;
  swift_bridgeObjectRetain();
  if (v148 != -1) {
    swift_once();
  }
  uint64_t v149 = unk_100092680;
  *(void *)(v143 + 64) = qword_100092678;
  *(void *)(v143 + 72) = v149;
  uint64_t v150 = qword_1000886E8;
  swift_bridgeObjectRetain();
  if (v150 != -1) {
    swift_once();
  }
  uint64_t v151 = unk_100092690;
  *(void *)(v143 + 80) = qword_100092688;
  *(void *)(v143 + 88) = v151;
  uint64_t v152 = qword_1000886F0;
  swift_bridgeObjectRetain();
  if (v152 != -1) {
    swift_once();
  }
  uint64_t v153 = unk_1000926A0;
  *(void *)(v143 + 96) = qword_100092698;
  *(void *)(v143 + 104) = v153;
  uint64_t v154 = swift_allocObject();
  *(_OWORD *)(v154 + 16) = xmmword_10006D7D0;
  uint64_t v155 = qword_1000886F8;
  swift_bridgeObjectRetain();
  if (v155 != -1) {
    swift_once();
  }
  uint64_t v156 = unk_1000926B0;
  *(void *)(v154 + 32) = qword_1000926A8;
  *(void *)(v154 + 40) = v156;
  uint64_t v157 = qword_100088700;
  swift_bridgeObjectRetain();
  if (v157 != -1) {
    swift_once();
  }
  uint64_t v158 = unk_1000926C0;
  *(void *)(v154 + 48) = qword_1000926B8;
  *(void *)(v154 + 56) = v158;
  uint64_t v159 = qword_100088708;
  swift_bridgeObjectRetain();
  if (v159 != -1) {
    swift_once();
  }
  uint64_t v160 = unk_1000926D0;
  *(void *)(v154 + 64) = qword_1000926C8;
  *(void *)(v154 + 72) = v160;
  uint64_t v161 = qword_100088710;
  swift_bridgeObjectRetain();
  if (v161 != -1) {
    swift_once();
  }
  uint64_t v162 = unk_1000926E0;
  *(void *)(v154 + 80) = qword_1000926D8;
  *(void *)(v154 + 88) = v162;
  uint64_t v163 = qword_100088718;
  swift_bridgeObjectRetain();
  if (v163 != -1) {
    swift_once();
  }
  uint64_t v164 = unk_1000926F0;
  *(void *)(v154 + 96) = qword_1000926E8;
  *(void *)(v154 + 104) = v164;
  uint64_t v165 = swift_allocObject();
  *(_OWORD *)(v165 + 16) = xmmword_10006BD80;
  uint64_t v166 = qword_100088720;
  swift_bridgeObjectRetain();
  if (v166 != -1) {
    swift_once();
  }
  uint64_t v167 = unk_100092700;
  *(void *)(v165 + 32) = qword_1000926F8;
  *(void *)(v165 + 40) = v167;
  uint64_t v168 = qword_100088728;
  swift_bridgeObjectRetain();
  if (v168 != -1) {
    swift_once();
  }
  uint64_t v169 = unk_100092710;
  *(void *)(v165 + 48) = qword_100092708;
  *(void *)(v165 + 56) = v169;
  uint64_t v170 = qword_100088730;
  swift_bridgeObjectRetain();
  if (v170 != -1) {
    swift_once();
  }
  uint64_t v171 = unk_100092720;
  *(void *)(v165 + 64) = qword_100092718;
  *(void *)(v165 + 72) = v171;
  uint64_t v172 = qword_100088738;
  swift_bridgeObjectRetain();
  if (v172 != -1) {
    swift_once();
  }
  uint64_t v173 = unk_100092730;
  *(void *)(v165 + 80) = qword_100092728;
  *(void *)(v165 + 88) = v173;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = xmmword_10006BD80;
  uint64_t v175 = qword_100088740;
  swift_bridgeObjectRetain();
  if (v175 != -1) {
    swift_once();
  }
  uint64_t v176 = unk_100092740;
  *(void *)(v174 + 32) = qword_100092738;
  *(void *)(v174 + 40) = v176;
  uint64_t v177 = qword_100088748;
  swift_bridgeObjectRetain();
  if (v177 != -1) {
    swift_once();
  }
  uint64_t v178 = unk_100092750;
  *(void *)(v174 + 48) = qword_100092748;
  *(void *)(v174 + 56) = v178;
  uint64_t v179 = qword_100088750;
  swift_bridgeObjectRetain();
  if (v179 != -1) {
    swift_once();
  }
  uint64_t v180 = unk_100092760;
  *(void *)(v174 + 64) = qword_100092758;
  *(void *)(v174 + 72) = v180;
  uint64_t v181 = qword_100088758;
  swift_bridgeObjectRetain();
  if (v181 != -1) {
    swift_once();
  }
  uint64_t v182 = unk_100092770;
  *(void *)(v174 + 80) = qword_100092768;
  *(void *)(v174 + 88) = v182;
  swift_bridgeObjectRetain();
  unint64_t v183 = sub_10005E638(1);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10005E3A0((uint64_t)v183);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v184 = swift_allocObject();
  *(_OWORD *)(v184 + 16) = xmmword_10006E340;
  if (qword_100088760 != -1) {
    swift_once();
  }
  uint64_t v185 = unk_100092780;
  *(void *)(v184 + 32) = qword_100092778;
  *(void *)(v184 + 40) = v185;
  uint64_t v186 = qword_100088768;
  swift_bridgeObjectRetain();
  if (v186 != -1) {
    swift_once();
  }
  uint64_t v187 = unk_100092790;
  *(void *)(v184 + 48) = qword_100092788;
  *(void *)(v184 + 56) = v187;
  uint64_t v188 = qword_100088770;
  swift_bridgeObjectRetain();
  if (v188 != -1) {
    swift_once();
  }
  uint64_t v189 = unk_1000927A0;
  *(void *)(v184 + 64) = qword_100092798;
  *(void *)(v184 + 72) = v189;
  uint64_t v190 = qword_100088778;
  swift_bridgeObjectRetain();
  if (v190 != -1) {
    swift_once();
  }
  uint64_t v191 = unk_1000927B0;
  *(void *)(v184 + 80) = qword_1000927A8;
  *(void *)(v184 + 88) = v191;
  uint64_t v192 = qword_100088780;
  swift_bridgeObjectRetain();
  if (v192 != -1) {
    swift_once();
  }
  uint64_t v193 = unk_1000927C0;
  *(void *)(v184 + 96) = qword_1000927B8;
  *(void *)(v184 + 104) = v193;
  uint64_t v194 = qword_100088788;
  swift_bridgeObjectRetain();
  if (v194 != -1) {
    swift_once();
  }
  uint64_t v195 = unk_1000927D0;
  *(void *)(v184 + 112) = qword_1000927C8;
  *(void *)(v184 + 120) = v195;
  uint64_t v196 = qword_100088790;
  swift_bridgeObjectRetain();
  if (v196 != -1) {
    swift_once();
  }
  uint64_t v197 = unk_1000927E0;
  *(void *)(v184 + 128) = qword_1000927D8;
  *(void *)(v184 + 136) = v197;
  uint64_t v198 = qword_100088798;
  swift_bridgeObjectRetain();
  if (v198 != -1) {
    swift_once();
  }
  uint64_t v199 = unk_1000927F0;
  *(void *)(v184 + 144) = qword_1000927E8;
  *(void *)(v184 + 152) = v199;
  uint64_t v200 = qword_1000887A0;
  swift_bridgeObjectRetain();
  if (v200 != -1) {
    swift_once();
  }
  uint64_t v201 = unk_100092800;
  *(void *)(v184 + 160) = qword_1000927F8;
  *(void *)(v184 + 168) = v201;
  uint64_t v202 = qword_1000887A8;
  swift_bridgeObjectRetain();
  if (v202 != -1) {
    swift_once();
  }
  uint64_t v203 = unk_100092810;
  *(void *)(v184 + 176) = qword_100092808;
  *(void *)(v184 + 184) = v203;
  uint64_t v204 = qword_1000887B0;
  swift_bridgeObjectRetain();
  if (v204 != -1) {
    swift_once();
  }
  uint64_t v205 = unk_100092820;
  *(void *)(v184 + 192) = qword_100092818;
  *(void *)(v184 + 200) = v205;
  uint64_t v206 = qword_1000887B8;
  swift_bridgeObjectRetain();
  if (v206 != -1) {
    swift_once();
  }
  uint64_t v207 = unk_100092830;
  *(void *)(v184 + 208) = qword_100092828;
  *(void *)(v184 + 216) = v207;
  uint64_t v208 = qword_1000887C0;
  swift_bridgeObjectRetain();
  if (v208 != -1) {
    swift_once();
  }
  uint64_t v209 = unk_100092840;
  *(void *)(v184 + 224) = qword_100092838;
  *(void *)(v184 + 232) = v209;
  uint64_t v210 = qword_1000887C8;
  swift_bridgeObjectRetain();
  if (v210 != -1) {
    swift_once();
  }
  uint64_t v211 = unk_100092850;
  *(void *)(v184 + 240) = qword_100092848;
  *(void *)(v184 + 248) = v211;
  uint64_t v212 = qword_1000887D0;
  swift_bridgeObjectRetain();
  if (v212 != -1) {
    swift_once();
  }
  uint64_t v213 = unk_100092860;
  *(void *)(v184 + 256) = qword_100092858;
  *(void *)(v184 + 264) = v213;
  uint64_t v214 = swift_allocObject();
  *(_OWORD *)(v214 + 16) = xmmword_10006E350;
  uint64_t v215 = qword_1000887D8;
  swift_bridgeObjectRetain();
  if (v215 != -1) {
    swift_once();
  }
  uint64_t v216 = unk_100092870;
  *(void *)(v214 + 32) = qword_100092868;
  *(void *)(v214 + 40) = v216;
  uint64_t v217 = qword_1000887E0;
  swift_bridgeObjectRetain();
  if (v217 != -1) {
    swift_once();
  }
  uint64_t v218 = unk_100092880;
  *(void *)(v214 + 48) = qword_100092878;
  *(void *)(v214 + 56) = v218;
  uint64_t v219 = qword_1000887E8;
  swift_bridgeObjectRetain();
  if (v219 != -1) {
    swift_once();
  }
  uint64_t v220 = unk_100092890;
  *(void *)(v214 + 64) = qword_100092888;
  *(void *)(v214 + 72) = v220;
  uint64_t v221 = qword_1000887F0;
  swift_bridgeObjectRetain();
  if (v221 != -1) {
    swift_once();
  }
  uint64_t v222 = unk_1000928A0;
  *(void *)(v214 + 80) = qword_100092898;
  *(void *)(v214 + 88) = v222;
  uint64_t v223 = qword_1000887F8;
  swift_bridgeObjectRetain();
  if (v223 != -1) {
    swift_once();
  }
  uint64_t v224 = unk_1000928B0;
  *(void *)(v214 + 96) = qword_1000928A8;
  *(void *)(v214 + 104) = v224;
  uint64_t v225 = qword_100088800;
  swift_bridgeObjectRetain();
  if (v225 != -1) {
    swift_once();
  }
  uint64_t v226 = unk_1000928C0;
  *(void *)(v214 + 112) = qword_1000928B8;
  *(void *)(v214 + 120) = v226;
  uint64_t v227 = qword_100088808;
  swift_bridgeObjectRetain();
  if (v227 != -1) {
    swift_once();
  }
  uint64_t v228 = unk_1000928D0;
  *(void *)(v214 + 128) = qword_1000928C8;
  *(void *)(v214 + 136) = v228;
  uint64_t v229 = qword_100088810;
  swift_bridgeObjectRetain();
  if (v229 != -1) {
    swift_once();
  }
  uint64_t v230 = unk_1000928E0;
  *(void *)(v214 + 144) = qword_1000928D8;
  *(void *)(v214 + 152) = v230;
  uint64_t v231 = qword_100088818;
  swift_bridgeObjectRetain();
  if (v231 != -1) {
    swift_once();
  }
  uint64_t v232 = unk_1000928F0;
  *(void *)(v214 + 160) = qword_1000928E8;
  *(void *)(v214 + 168) = v232;
  uint64_t v233 = qword_100088820;
  swift_bridgeObjectRetain();
  if (v233 != -1) {
    swift_once();
  }
  uint64_t v234 = unk_100092900;
  *(void *)(v214 + 176) = qword_1000928F8;
  *(void *)(v214 + 184) = v234;
  uint64_t v235 = qword_100088828;
  swift_bridgeObjectRetain();
  if (v235 != -1) {
    swift_once();
  }
  uint64_t v236 = unk_100092910;
  *(void *)(v214 + 192) = qword_100092908;
  *(void *)(v214 + 200) = v236;
  uint64_t v237 = qword_100088830;
  swift_bridgeObjectRetain();
  if (v237 != -1) {
    swift_once();
  }
  uint64_t v238 = unk_100092920;
  *(void *)(v214 + 208) = qword_100092918;
  *(void *)(v214 + 216) = v238;
  uint64_t v239 = qword_100088838;
  swift_bridgeObjectRetain();
  if (v239 != -1) {
    swift_once();
  }
  uint64_t v240 = unk_100092930;
  *(void *)(v214 + 224) = qword_100092928;
  *(void *)(v214 + 232) = v240;
  uint64_t v241 = swift_allocObject();
  *(_OWORD *)(v241 + 16) = xmmword_10006B7C0;
  uint64_t v242 = qword_100088840;
  swift_bridgeObjectRetain();
  if (v242 != -1) {
    swift_once();
  }
  uint64_t v243 = unk_100092940;
  *(void *)(v241 + 32) = qword_100092938;
  *(void *)(v241 + 40) = v243;
  uint64_t v244 = qword_100088848;
  swift_bridgeObjectRetain();
  if (v244 != -1) {
    swift_once();
  }
  uint64_t v245 = unk_100092950;
  *(void *)(v241 + 48) = qword_100092948;
  *(void *)(v241 + 56) = v245;
  uint64_t v246 = qword_100088850;
  swift_bridgeObjectRetain();
  if (v246 != -1) {
    swift_once();
  }
  uint64_t v247 = unk_100092960;
  *(void *)(v241 + 64) = qword_100092958;
  *(void *)(v241 + 72) = v247;
  uint64_t v248 = qword_100088858;
  swift_bridgeObjectRetain();
  if (v248 != -1) {
    swift_once();
  }
  uint64_t v249 = unk_100092970;
  *(void *)(v241 + 80) = qword_100092968;
  *(void *)(v241 + 88) = v249;
  uint64_t v250 = qword_100088860;
  swift_bridgeObjectRetain();
  if (v250 != -1) {
    swift_once();
  }
  uint64_t v251 = unk_100092980;
  *(void *)(v241 + 96) = qword_100092978;
  *(void *)(v241 + 104) = v251;
  uint64_t v252 = qword_100088868;
  swift_bridgeObjectRetain();
  if (v252 != -1) {
    swift_once();
  }
  uint64_t v253 = unk_100092990;
  *(void *)(v241 + 112) = qword_100092988;
  *(void *)(v241 + 120) = v253;
  uint64_t v254 = swift_allocObject();
  *(_OWORD *)(v254 + 16) = xmmword_10006D7D0;
  uint64_t v255 = qword_100088870;
  swift_bridgeObjectRetain();
  if (v255 != -1) {
    swift_once();
  }
  uint64_t v256 = unk_1000929A0;
  *(void *)(v254 + 32) = qword_100092998;
  *(void *)(v254 + 40) = v256;
  uint64_t v257 = qword_100088878;
  swift_bridgeObjectRetain();
  if (v257 != -1) {
    swift_once();
  }
  uint64_t v258 = unk_1000929B0;
  *(void *)(v254 + 48) = qword_1000929A8;
  *(void *)(v254 + 56) = v258;
  uint64_t v259 = qword_100088880;
  swift_bridgeObjectRetain();
  if (v259 != -1) {
    swift_once();
  }
  uint64_t v260 = unk_1000929C0;
  *(void *)(v254 + 64) = qword_1000929B8;
  *(void *)(v254 + 72) = v260;
  uint64_t v261 = qword_100088888;
  swift_bridgeObjectRetain();
  if (v261 != -1) {
    swift_once();
  }
  uint64_t v262 = unk_1000929D0;
  *(void *)(v254 + 80) = qword_1000929C8;
  *(void *)(v254 + 88) = v262;
  uint64_t v263 = qword_100088890;
  swift_bridgeObjectRetain();
  if (v263 != -1) {
    swift_once();
  }
  uint64_t v264 = unk_1000929E0;
  *(void *)(v254 + 96) = qword_1000929D8;
  *(void *)(v254 + 104) = v264;
  uint64_t v265 = swift_allocObject();
  *(_OWORD *)(v265 + 16) = xmmword_10006B7C0;
  uint64_t v266 = qword_100088898;
  swift_bridgeObjectRetain();
  if (v266 != -1) {
    swift_once();
  }
  uint64_t v267 = unk_1000929F0;
  *(void *)(v265 + 32) = qword_1000929E8;
  *(void *)(v265 + 40) = v267;
  uint64_t v268 = qword_1000888A0;
  swift_bridgeObjectRetain();
  if (v268 != -1) {
    swift_once();
  }
  uint64_t v269 = unk_100092A00;
  *(void *)(v265 + 48) = qword_1000929F8;
  *(void *)(v265 + 56) = v269;
  uint64_t v270 = qword_1000888A8;
  swift_bridgeObjectRetain();
  if (v270 != -1) {
    swift_once();
  }
  uint64_t v271 = unk_100092A10;
  *(void *)(v265 + 64) = qword_100092A08;
  *(void *)(v265 + 72) = v271;
  uint64_t v272 = qword_1000888B0;
  swift_bridgeObjectRetain();
  if (v272 != -1) {
    swift_once();
  }
  uint64_t v273 = unk_100092A20;
  *(void *)(v265 + 80) = qword_100092A18;
  *(void *)(v265 + 88) = v273;
  uint64_t v274 = qword_1000888B8;
  swift_bridgeObjectRetain();
  if (v274 != -1) {
    swift_once();
  }
  uint64_t v275 = unk_100092A30;
  *(void *)(v265 + 96) = qword_100092A28;
  *(void *)(v265 + 104) = v275;
  uint64_t v276 = qword_1000888C0;
  swift_bridgeObjectRetain();
  if (v276 != -1) {
    swift_once();
  }
  uint64_t v277 = unk_100092A40;
  *(void *)(v265 + 112) = qword_100092A38;
  *(void *)(v265 + 120) = v277;
  uint64_t v278 = swift_allocObject();
  *(_OWORD *)(v278 + 16) = xmmword_10006B7C0;
  uint64_t v279 = qword_1000888C8;
  swift_bridgeObjectRetain();
  if (v279 != -1) {
    swift_once();
  }
  uint64_t v280 = unk_100092A50;
  *(void *)(v278 + 32) = qword_100092A48;
  *(void *)(v278 + 40) = v280;
  uint64_t v281 = qword_1000888D0;
  swift_bridgeObjectRetain();
  if (v281 != -1) {
    swift_once();
  }
  uint64_t v282 = unk_100092A60;
  *(void *)(v278 + 48) = qword_100092A58;
  *(void *)(v278 + 56) = v282;
  uint64_t v283 = qword_1000888D8;
  swift_bridgeObjectRetain();
  if (v283 != -1) {
    swift_once();
  }
  uint64_t v284 = unk_100092A70;
  *(void *)(v278 + 64) = qword_100092A68;
  *(void *)(v278 + 72) = v284;
  uint64_t v285 = qword_1000888E0;
  swift_bridgeObjectRetain();
  if (v285 != -1) {
    swift_once();
  }
  uint64_t v286 = unk_100092A80;
  *(void *)(v278 + 80) = qword_100092A78;
  *(void *)(v278 + 88) = v286;
  uint64_t v287 = qword_1000888E8;
  swift_bridgeObjectRetain();
  if (v287 != -1) {
    swift_once();
  }
  uint64_t v288 = unk_100092A90;
  *(void *)(v278 + 96) = qword_100092A88;
  *(void *)(v278 + 104) = v288;
  uint64_t v289 = qword_1000888F0;
  swift_bridgeObjectRetain();
  if (v289 != -1) {
    swift_once();
  }
  uint64_t v290 = unk_100092AA0;
  *(void *)(v278 + 112) = qword_100092A98;
  *(void *)(v278 + 120) = v290;
  swift_bridgeObjectRetain();
  long long v291 = sub_10005E638(2);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10005E3A0((uint64_t)v291);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v292 = sub_10005E9D0((uint64_t)v294);
  uint64_t result = swift_bridgeObjectRelease();
  qword_100092CB0 = v292;
  return result;
}

uint64_t sub_10005E268@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v23 = a6;
  uint64_t v22 = a4;
  uint64_t v12 = sub_100069660();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_100069650();
  char v24 = 0;
  uint64_t v16 = sub_100069630();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  char v20 = v24;
  *(void *)a7 = a1;
  *(unsigned char *)(a7 + 8) = v20;
  *(unsigned char *)(a7 + 9) = a2;
  *(unsigned char *)(a7 + 10) = a3;
  *(unsigned char *)(a7 + 11) = v23;
  *(void *)(a7 + 16) = v22;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = v16;
  *(void *)(a7 + 40) = v18;
  return result;
}

uint64_t sub_10005E3A0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_10001DE14(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[48 * v9 + 32];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10006A4C0();
  __break(1u);
  return result;
}

unint64_t *sub_10005E500(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v17 = (unint64_t *)&_swiftEmptyArrayStorage;
  sub_10004443C(0, 0, 0);
  int64_t v4 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      a2(v16, v6, v8, v9);
      swift_bridgeObjectRelease();
      uint64_t v17 = v4;
      unint64_t v11 = v4[2];
      unint64_t v10 = v4[3];
      if (v11 >= v10 >> 1)
      {
        sub_10004443C(v10 > 1, v11 + 1, 1);
        int64_t v4 = v17;
      }
      ++v6;
      v7 += 2;
      v4[2] = v11 + 1;
      uint64_t v12 = &v4[6 * v11];
      long long v13 = v16[0];
      long long v14 = v16[2];
      *((_OWORD *)v12 + 3) = v16[1];
      *((_OWORD *)v12 + 4) = v14;
      *((_OWORD *)v12 + 2) = v13;
    }
    while (v5 != v6);
  }
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t *sub_10005E638(char a1)
{
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  uint64_t v1 = swift_bridgeObjectRetain();
  unint64_t v2 = sub_10005E500(v1, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_bridgeObjectRetain();
  int64_t v4 = sub_10005E500(v3, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v4);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_10005E500(v5, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v6);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_10005E500(v7, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v8);
  uint64_t v9 = swift_bridgeObjectRetain();
  unint64_t v10 = sub_10005E500(v9, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v10);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_10005E500(v11, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v12);
  uint64_t v13 = swift_bridgeObjectRetain();
  long long v14 = sub_10005E500(v13, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v14);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_10005E500(v15, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v16);
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_10005E500(v17, (void (*)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t))sub_10005EAE0);
  swift_bridgeObjectRelease();
  sub_10005E3A0((uint64_t)v18);
  swift_release();
  return v2;
}

uint64_t sub_10005E9D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10005EA74();
  uint64_t result = sub_10006A380();
  uint64_t v7 = result;
  if (v2)
  {
    int64_t v4 = (_OWORD *)(a1 + 32);
    do
    {
      long long v5 = v4[1];
      v8[0] = *v4;
      v8[1] = v5;
      v8[2] = v4[2];
      sub_100044F70((uint64_t)v8);
      sub_1000435A8((uint64_t)v6, (uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_10005EA74()
{
  unint64_t result = qword_10008A968;
  if (!qword_10008A968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A968);
  }
  return result;
}

uint64_t sub_10005EAC8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10005EAD8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_10005E268(a1, a2, a3, a4, a5, *(unsigned __int8 *)(v6 + 16), a6);
}

double sub_10005EAE4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr, uint64_t, void, void, uint64_t, uint64_t))(v4 + 16))(v8, a1, *(unsigned __int8 *)(v4 + 32), *(unsigned __int8 *)(v4 + 33), a2, a3);
  long long v6 = v8[1];
  *a4 = v8[0];
  a4[1] = v6;
  double result = *(double *)&v9;
  a4[2] = v9;
  return result;
}

uint64_t sub_10005EB44()
{
  return sub_10000CE3C(&qword_10008A980, &qword_10008A988);
}

uint64_t sub_10005EB80()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_100069460();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  long long v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000692B0();
  sub_10000CD24(v10, qword_100092CB8);
  sub_10000CCEC(v10, (uint64_t)qword_100092CB8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000692A0();
}

uint64_t sub_10005EE58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E20);
  __chkstk_darwin(v1 - 8);
  uint64_t v27 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v26 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v22 = sub_100069470();
  uint64_t v11 = *(void *)(v22 - 8);
  uint64_t v12 = __chkstk_darwin(v22);
  char v24 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v23 = (char *)&v21 - v14;
  sub_10006A2B0();
  sub_100069650();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v16(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  uint64_t v17 = v26;
  sub_100069480();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v22);
  uint64_t v18 = v27;
  sub_100069160();
  uint64_t v19 = sub_100069170();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_1000059D8(&qword_100088E28);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10006AB80;
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  sub_100069480();
  sub_10006A2B0();
  sub_100069650();
  v16(v8, v15, v5);
  sub_100069480();
  return sub_100069180();
}

uint64_t sub_10005F3A0(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092CD0);
}

uint64_t sub_10005F3C4()
{
  uint64_t v0 = sub_1000059D8(&qword_100088E90);
  sub_10000CD24(v0, qword_100092CE8);
  uint64_t v1 = sub_10000CCEC(v0, (uint64_t)qword_100092CE8);
  sub_1000690E0();
  uint64_t v2 = sub_1000690F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10005F47C()
{
  uint64_t result = swift_getKeyPath();
  qword_100092D00 = result;
  return result;
}

uint64_t sub_10005F4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_1000059D8(&qword_100088E60);
  v3[9] = swift_task_alloc();
  sub_1000059D8(&qword_100088E68);
  v3[10] = swift_task_alloc();
  sub_1000059D8(&qword_10008AB18);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_100068EB0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_1000059D8(&qword_10008AB20);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_10005F668, 0, 0);
}

uint64_t sub_10005F668()
{
  sub_100068F00();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  unint64_t v2 = sub_100060738();
  *uint64_t v1 = v0;
  v1[1] = sub_10005F73C;
  uint64_t v3 = *(void *)(v0 + 144);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v3, v0 + 16, sub_10005FD34, 0, &type metadata for ShowInsightsSummaryEntity, v2);
}

uint64_t sub_10005F73C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10005F838, 0, 0);
}

uint64_t sub_10005F838()
{
  sub_100068F00();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 160) = v1;
  sub_100068F00();
  *(unsigned char *)(v0 + 193) = *(unsigned char *)(v0 + 192);
  if (qword_1000889F8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100092D00;
  *(void *)(v0 + 168) = qword_100092D00;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  uint64_t v4 = sub_10000CE3C(&qword_10008AB00, &qword_10008AB08);
  *uint64_t v3 = v0;
  v3[1] = sub_10005F990;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 193, v2, &type metadata for Bool, v4);
}

uint64_t sub_10005F990()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10000928C;
  }
  else {
    uint64_t v2 = sub_10005FAE4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10005FAE4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_100068F00();
  uint64_t v7 = sub_100069290();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = sub_1000692C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_10001B6B8();
  sub_10006094C();
  sub_100068E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_100068EA0();
  sub_100068EC0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10005FD38()
{
  uint64_t v0 = sub_1000059D8(&qword_10008AB28);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000889F8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100069150();
  swift_release();
  sub_10006094C();
  sub_10000CE3C(&qword_10008AB30, &qword_10008AB28);
  sub_100069140();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10005FEA0()
{
  if (qword_1000889F8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10005FF00()
{
  unint64_t result = qword_10008A990;
  if (!qword_10008A990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A990);
  }
  return result;
}

unint64_t sub_10005FF58()
{
  unint64_t result = qword_10008A998;
  if (!qword_10008A998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A998);
  }
  return result;
}

uint64_t sub_10005FFAC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005FFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006155C(a1, a2, a3, (void (*)(void))sub_10001B6B8);
}

uint64_t sub_10005FFF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_1000889E8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092CD0, a1);
}

uint64_t sub_100060030@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000889F0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000059D8(&qword_100088E90);
  uint64_t v3 = sub_10000CCEC(v2, (uint64_t)qword_100092CE8);

  return sub_10000CDA8(v3, a1);
}

uint64_t sub_1000600AC(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100006638;
  return sub_10005F4A4(a1, v5, v4);
}

uint64_t sub_100060158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100062128();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100060180()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_1000601A0()
{
  unint64_t result = qword_10008A9A8;
  if (!qword_10008A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A9A8);
  }
  return result;
}

unint64_t sub_1000601F8()
{
  unint64_t result = qword_10008A9B0;
  if (!qword_10008A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A9B0);
  }
  return result;
}

uint64_t sub_10006024C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10006026C, 0, 0);
}

uint64_t sub_10006026C()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  uint64_t v4 = *(unsigned __int8 **)(v0 + 16);
  NSString v5 = sub_10006A2D0();
  unsigned __int8 v6 = [v3 BOOLForKey:v5];

  *uint64_t v4 = v6;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10006038C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1000603B0, 0, 0);
}

uint64_t sub_1000603B0()
{
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = sub_10006A2D0();
  id v3 = [v1 initWithSuiteName:v2];

  if (!v3) {
    id v3 = [self standardUserDefaults];
  }
  Class isa = sub_10006A370().super.super.isa;
  NSString v5 = sub_10006A2D0();
  [v3 setValue:isa forKey:v5];

  unsigned __int8 v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000604D8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10008AAE8 + dword_10008AAE8);
  NSString v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *NSString v2 = v1;
  v2[1] = sub_10000CFAC;
  return v4();
}

unint64_t sub_100060580()
{
  unint64_t result = qword_10008A9C0;
  if (!qword_10008A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A9C0);
  }
  return result;
}

uint64_t sub_1000605D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100060BD8();
  *uint64_t v4 = v2;
  v4[1] = sub_100009E88;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100060688()
{
  unint64_t result = qword_10008A9D0;
  if (!qword_10008A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A9D0);
  }
  return result;
}

unint64_t sub_1000606E0()
{
  unint64_t result = qword_10008A9D8;
  if (!qword_10008A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A9D8);
  }
  return result;
}

unint64_t sub_100060738()
{
  unint64_t result = qword_10008A9E0[0];
  if (!qword_10008A9E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10008A9E0);
  }
  return result;
}

uint64_t sub_10006078C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100060BD8();
  void *v5 = v2;
  v5[1] = sub_10000A158;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100060840(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100060BD8();
  *uint64_t v4 = v2;
  v4[1] = sub_10000CFAC;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1000608F4()
{
  unint64_t result = qword_10008A9F8;
  if (!qword_10008A9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008A9F8);
  }
  return result;
}

unint64_t sub_10006094C()
{
  unint64_t result = qword_10008AA00;
  if (!qword_10008AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA00);
  }
  return result;
}

unint64_t sub_1000609A4()
{
  unint64_t result = qword_10008AA08;
  if (!qword_10008AA08)
  {
    sub_100005A1C(qword_10008AA10);
    sub_10006094C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA08);
  }
  return result;
}

uint64_t sub_100060A18(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100060580();
  void *v5 = v2;
  v5[1] = sub_100006434;
  return EntityQuery.results()(a1, a2, v6);
}

unint64_t sub_100060AD0()
{
  unint64_t result = qword_10008AA28;
  if (!qword_10008AA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA28);
  }
  return result;
}

unint64_t sub_100060B28()
{
  unint64_t result = qword_10008AA30;
  if (!qword_10008AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA30);
  }
  return result;
}

unint64_t sub_100060B80()
{
  unint64_t result = qword_10008AA38;
  if (!qword_10008AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA38);
  }
  return result;
}

unint64_t sub_100060BD8()
{
  unint64_t result = qword_10008AA40;
  if (!qword_10008AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA40);
  }
  return result;
}

unint64_t sub_100060C30()
{
  unint64_t result = qword_10008AA48;
  if (!qword_10008AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA48);
  }
  return result;
}

uint64_t sub_100060C84(uint64_t a1)
{
  unint64_t v2 = sub_100060738();

  return _EntityURLRepresentation.init(_:)(0xD000000000000055, 0x8000000100078330, a1, v2);
}

unint64_t sub_100060CE4()
{
  unint64_t result = qword_10008AA50;
  if (!qword_10008AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA50);
  }
  return result;
}

unint64_t sub_100060D3C()
{
  unint64_t result = qword_10008AA58;
  if (!qword_10008AA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA58);
  }
  return result;
}

unint64_t sub_100060D94()
{
  unint64_t result = qword_10008AA60;
  if (!qword_10008AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA60);
  }
  return result;
}

uint64_t sub_100060DE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1000601F8();
  uint64_t result = sub_100068EE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100060E28()
{
  sub_100062D34();
  uint64_t v2 = sub_100069210();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10000CD88(v3, v0, v2, v1);
}

uint64_t sub_100060EBC@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_1000889E0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100092CB8, a1);
}

uint64_t sub_100060EF4()
{
  return sub_10000CE3C(&qword_10008AA70, &qword_10008AA78);
}

uint64_t sub_100060F30(uint64_t a1)
{
  unint64_t v2 = sub_100060738();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100060F80()
{
  unint64_t result = qword_10008AA80;
  if (!qword_10008AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA80);
  }
  return result;
}

uint64_t sub_100060FD8(uint64_t a1)
{
  unint64_t v2 = sub_100060D94();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100061028()
{
  unint64_t result = qword_10008AA88;
  if (!qword_10008AA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA88);
  }
  return result;
}

uint64_t sub_100061080(uint64_t a1)
{
  return sub_10000AB8C(a1, qword_100092D08);
}

uint64_t sub_1000610A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100069460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100069660();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10006A2C0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100069470();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  sub_100069480();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  sub_100069100();
  uint64_t v13 = sub_1000690F0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

unint64_t sub_1000613A0()
{
  unint64_t result = qword_10008AA90;
  if (!qword_10008AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA90);
  }
  return result;
}

uint64_t sub_1000613F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100062C8C();
  unint64_t v5 = sub_100062D34();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_10006145C()
{
  uint64_t v0 = qword_10008A970;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100061498()
{
  unint64_t result = qword_10008AA98;
  if (!qword_10008AA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AA98);
  }
  return result;
}

unint64_t sub_1000614F0()
{
  unint64_t result = qword_10008AAA0;
  if (!qword_10008AAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AAA0);
  }
  return result;
}

uint64_t sub_100061544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006155C(a1, a2, a3, (void (*)(void))sub_1000613A0);
}

uint64_t sub_10006155C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000615B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B1D4(&qword_100088A00, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100092D08, a1);
}

uint64_t sub_1000615EC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100062C8C();
  unint64_t v7 = sub_100062CE0();
  unint64_t v8 = sub_100062D34();
  void *v5 = v2;
  v5[1] = sub_10000B360;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000616C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100062844();
  *a1 = result;
  return result;
}

uint64_t sub_1000616E8(uint64_t a1)
{
  unint64_t v2 = sub_1000613A0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenShowInsightsSummaryDeepLink()
{
  return &type metadata for OpenShowInsightsSummaryDeepLink;
}

ValueMetadata *type metadata accessor for ShowInsightsSummaryEntity.ShowInsightsSummaryQuery()
{
  return &type metadata for ShowInsightsSummaryEntity.ShowInsightsSummaryQuery;
}

ValueMetadata *type metadata accessor for ShowInsightsSummaryEntity()
{
  return &type metadata for ShowInsightsSummaryEntity;
}

ValueMetadata *type metadata accessor for ShowInsightsSummaryEntity.UpdateIntent_value()
{
  return &type metadata for ShowInsightsSummaryEntity.UpdateIntent_value;
}

uint64_t sub_100061764()
{
  return sub_10000CE3C(&qword_10008AAB0, &qword_10008AAB8);
}

uint64_t sub_1000617A0()
{
  return sub_10000CE3C(&qword_10008AAC0, &qword_10008AAB8);
}

uint64_t sub_1000617DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1000059D8(&qword_100088E98);
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000059D8(&qword_100088EA0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000059D8(&qword_100088EA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000059D8(&qword_100088EB0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1000601F8();
  sub_10006A1D0();
  sub_100069A80();
  uint64_t v16 = sub_10000CE3C(&qword_100088EB8, &qword_100088E98);
  sub_100069B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  sub_100069A80();
  uint64_t v31 = v1;
  uint64_t v32 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  sub_100069AE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v18);
  uint64_t v31 = v18;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v26;
  sub_100069B50();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v20);
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  sub_100069B00();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v21);
}

uint64_t sub_100061C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_100061EB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100069460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100069660();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10006A2C0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100069470();
  __chkstk_darwin(v8 - 8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  uint64_t result = sub_100069E50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_100062128()
{
  uint64_t v0 = sub_1000059D8(&qword_100088DE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100069200();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000059D8(&qword_100088DE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = sub_100069470();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000059D8(&qword_10008AAC8);
  sub_100069450();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = sub_100068EB0();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100060738();
  uint64_t v19 = v23;
  uint64_t v24 = sub_100068F30();
  sub_1000059D8(&qword_100088E00);
  sub_100069450();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = sub_10006A360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  sub_100068F40();
  return v24;
}

uint64_t sub_100062568()
{
  uint64_t v1 = sub_100069460();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_100069660();
  v0[5] = swift_task_alloc();
  sub_10006A2C0();
  v0[6] = swift_task_alloc();
  sub_100069470();
  v0[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000626A8, 0, 0);
}

uint64_t sub_1000626A8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  sub_1000059D8(&qword_10008A988);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_100069480();
  sub_10000CE3C(&qword_10008AB00, &qword_10008AB08);
  uint64_t v4 = sub_1000692E0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_100062844()
{
  uint64_t v0 = sub_100069200();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000059D8(&qword_100088DE8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_1000059D8(&qword_100088DF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100069460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100069660();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_10006A2C0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_100069470();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v21[1] = sub_1000059D8(&qword_10008AAC8);
  sub_10006A2B0();
  sub_100069650();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_100069480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v26 = 0;
  uint64_t v18 = sub_100068EB0();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_100060738();
  return sub_100068F30();
}

unint64_t sub_100062C8C()
{
  unint64_t result = qword_10008AAD0;
  if (!qword_10008AAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AAD0);
  }
  return result;
}

unint64_t sub_100062CE0()
{
  unint64_t result = qword_10008AAD8;
  if (!qword_10008AAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AAD8);
  }
  return result;
}

unint64_t sub_100062D34()
{
  unint64_t result = qword_10008AAE0;
  if (!qword_10008AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AAE0);
  }
  return result;
}

uint64_t sub_100062D88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for ShowInsightsSummaryEntityToggleControl()
{
  return &type metadata for ShowInsightsSummaryEntityToggleControl;
}

uint64_t sub_100062DA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100062DC0(char a1, char a2)
{
  if (*(void *)&aLockinlilockre_1[8 * a1] == *(void *)&aLockinlilockre_1[8 * a2]
    && *(void *)&aNe_1[8 * a1] == *(void *)&aNe_1[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10006A570();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100062E48(char a1, char a2)
{
  if (*(void *)&aTimeofdatimeof_1[8 * a1] == *(void *)&aTimeofdatimeof_1[8 * a2]
    && *(void *)&aY_1[8 * a1] == *(void *)&aY_1[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10006A570();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_100062ED0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x800000010006F5F0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xEB00000000746E65;
      unint64_t v5 = 0x6D6F4D6568546E69;
      break;
    case 2:
      break;
    case 3:
      unint64_t v3 = 0xEB00000000737961;
      unint64_t v5 = 0x446C616963657073;
      break;
    default:
      unint64_t v3 = 0xE900000000000064;
      unint64_t v5 = 0x616568416B6F6F6CLL;
      break;
  }
  unint64_t v6 = 0x800000010006F5F0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000746E65;
      unint64_t v2 = 0x6D6F4D6568546E69;
      goto LABEL_9;
    case 2:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
      goto LABEL_12;
    case 3:
      unint64_t v6 = 0xEB00000000737961;
      if (v5 == 0x446C616963657073) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x616568416B6F6F6CLL) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_10006A570();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100063080(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x68746C616568;
  }
  else {
    uint64_t v3 = 0x6163696669746F6ELL;
  }
  if (v2) {
    unint64_t v4 = 0xED0000736E6F6974;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x68746C616568;
  }
  else {
    uint64_t v5 = 0x6163696669746F6ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xED0000736E6F6974;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_10006A570();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10006312C()
{
  sub_10006A300();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100063180()
{
  sub_10006A300();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000631D4()
{
  sub_10006A300();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000632B4()
{
  sub_10006A300();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100063328@<X0>(void (*a1)(uint64_t)@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X2>, void (*a3)(void *__return_ptr, void)@<X4>, uint64_t a4@<X5>, void (*a5)(uint64_t *__return_ptr, uint64_t)@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _DWORD v88[3];
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t *__return_ptr, uint64_t);
  uint64_t started;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  unsigned __int8 v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 v106;
  uint64_t v107;
  unsigned __int8 v108;
  unsigned __int8 v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  uint64_t v117;
  unsigned __int8 v118;
  char v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;

  uint64_t v80 = a6;
  uint64_t v94 = a5;
  uint64_t v87 = a4;
  *(void *)uint64_t v88 = a3;
  uint64_t v79 = a7;
  uint64_t started = type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v10 = __chkstk_darwin(started);
  uint64_t v71 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v81 = (uint64_t)&v71 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v71 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v71 - v17;
  uint64_t v19 = sub_1000059D8(&qword_10008A118);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000059D8(&qword_100088EF8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v96 = (uint64_t)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    a1(v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  }
  uint64_t v26 = v7;
  sub_10000F630(v7, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_100055D6C((uint64_t)v18, v96);
    sub_1000429D4((uint64_t)v18);
    uint64_t v27 = sub_100007D0C((uint64_t)v21, &qword_10008A118);
  }
  else
  {
    sub_1000429D4((uint64_t)v18);
    uint64_t v27 = sub_100055D04((uint64_t)v21, v96);
  }
  uint64_t v28 = v94;
  uint64_t v29 = started;
  if (a2)
  {
    a2(&v97, v27);
    uint64_t v30 = v97;
    uint64_t v31 = v98;
    char v32 = v99;
    uint64_t v33 = v100;
    LODWORD(v94) = v101;
    uint64_t v34 = v103;
    uint64_t v93 = v102;
    uint64_t v91 = v104;
    uint64_t v90 = v105;
    uint64_t v89 = v106;
    sub_10000F630(v26, (uint64_t)v16);
    uint64_t v92 = v34;
    if (v34) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_10000F630(v7, (uint64_t)v16);
  }
  uint64_t v35 = &v16[*(int *)(v29 + 20)];
  uint64_t v30 = *(void *)v35;
  uint64_t v31 = v35[8];
  char v32 = v35[9];
  uint64_t v33 = v35[10];
  LODWORD(v94) = v35[11];
  uint64_t v36 = *((void *)v35 + 3);
  uint64_t v93 = *((void *)v35 + 2);
  uint64_t v37 = *((void *)v35 + 5);
  uint64_t v91 = *((void *)v35 + 4);
  uint64_t v89 = v35[48];
  uint64_t v92 = v36;
  swift_bridgeObjectRetain();
  uint64_t v90 = v37;
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v38 = *(void (**)(uint64_t *__return_ptr, uint64_t))v88;
  uint64_t v75 = v33;
  uint64_t v78 = v30;
  uint64_t v39 = sub_1000429D4((uint64_t)v16);
  if (v38)
  {
    v38(&v107, v39);
    uint64_t v40 = v107;
    uint64_t v41 = v108;
    uint64_t v42 = v109;
    v88[0] = v110;
    LODWORD(v87) = v111;
    uint64_t v43 = v113;
    uint64_t v86 = v112;
    uint64_t v84 = v114;
    uint64_t v83 = v115;
    uint64_t v82 = v116;
    uint64_t v44 = v81;
    sub_10000F630(v26, v81);
    uint64_t v85 = v43;
    if (v43)
    {
      uint64_t v45 = v44;
      uint64_t v46 = (uint64_t)v71;
      uint64_t v47 = (int *)started;
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v44 = v81;
    sub_10000F630(v26, v81);
  }
  uint64_t v47 = (int *)started;
  uint64_t v48 = v44 + *(int *)(started + 24);
  uint64_t v40 = *(void *)v48;
  uint64_t v41 = *(unsigned __int8 *)(v48 + 8);
  uint64_t v42 = *(unsigned __int8 *)(v48 + 9);
  v88[0] = *(unsigned __int8 *)(v48 + 10);
  LODWORD(v87) = *(unsigned __int8 *)(v48 + 11);
  uint64_t v49 = *(void *)(v48 + 24);
  uint64_t v86 = *(void *)(v48 + 16);
  uint64_t v50 = *(void *)(v48 + 40);
  uint64_t v84 = *(void *)(v48 + 32);
  uint64_t v82 = *(unsigned __int8 *)(v48 + 48);
  uint64_t v85 = v49;
  swift_bridgeObjectRetain();
  uint64_t v83 = v50;
  swift_bridgeObjectRetain();
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)v71;
LABEL_17:
  uint64_t v72 = v42;
  uint64_t v73 = v41;
  uint64_t v74 = v40;
  uint64_t v76 = v32;
  uint64_t v77 = v31;
  uint64_t v51 = sub_1000429D4(v45);
  if (!v28)
  {
    sub_10000F630(v26, v46);
LABEL_21:
    uint64_t v61 = v46 + v47[7];
    uint64_t v81 = *(void *)v61;
    LODWORD(v80) = *(unsigned __int8 *)(v61 + 8);
    uint64_t v53 = *(unsigned char *)(v61 + 9);
    uint64_t v54 = *(unsigned char *)(v61 + 10);
    uint64_t v55 = *(unsigned char *)(v61 + 11);
    uint64_t v57 = *(void *)(v61 + 16);
    uint64_t v56 = *(void *)(v61 + 24);
    uint64_t v58 = *(void *)(v61 + 32);
    uint64_t v59 = *(void *)(v61 + 40);
    uint64_t v60 = *(unsigned char *)(v61 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  v28(&v117, v51);
  uint64_t v81 = v117;
  LODWORD(v80) = v118;
  uint64_t v52 = v26;
  uint64_t v53 = v119;
  uint64_t v54 = v120;
  uint64_t v55 = v121;
  uint64_t v57 = v122;
  uint64_t v56 = v123;
  uint64_t v58 = v124;
  uint64_t v59 = v125;
  uint64_t v60 = v126;
  sub_10000F630(v52, v46);
  if (!v56) {
    goto LABEL_21;
  }
LABEL_22:
  sub_1000429D4(v46);
  uint64_t v62 = v79;
  unint64_t result = sub_100055D04(v96, v79);
  uint64_t v64 = v62 + v47[5];
  *(void *)uint64_t v64 = v78;
  *(unsigned char *)(v64 + 8) = v77;
  *(unsigned char *)(v64 + 9) = v76;
  *(unsigned char *)(v64 + 10) = v75;
  *(unsigned char *)(v64 + 11) = (_BYTE)v94;
  uint64_t v65 = v92;
  *(void *)(v64 + 16) = v93;
  *(void *)(v64 + 24) = v65;
  uint64_t v66 = v90;
  *(void *)(v64 + 32) = v91;
  *(void *)(v64 + 40) = v66;
  *(unsigned char *)(v64 + 48) = v89;
  uint64_t v67 = v62 + v47[6];
  *(void *)uint64_t v67 = v74;
  *(unsigned char *)(v67 + 8) = v73;
  *(unsigned char *)(v67 + 9) = v72;
  *(unsigned char *)(v67 + 10) = v88[0];
  *(unsigned char *)(v67 + 11) = v87;
  uint64_t v68 = v85;
  *(void *)(v67 + 16) = v86;
  *(void *)(v67 + 24) = v68;
  uint64_t v69 = v83;
  *(void *)(v67 + 32) = v84;
  *(void *)(v67 + 40) = v69;
  *(unsigned char *)(v67 + 48) = v82;
  uint64_t v70 = v62 + v47[7];
  *(void *)uint64_t v70 = v81;
  *(unsigned char *)(v70 + 8) = v80;
  *(unsigned char *)(v70 + 9) = v53;
  *(unsigned char *)(v70 + 10) = v54;
  *(unsigned char *)(v70 + 11) = v55;
  *(void *)(v70 + 16) = v57;
  *(void *)(v70 + 24) = v56;
  *(void *)(v70 + 32) = v58;
  *(void *)(v70 + 40) = v59;
  *(unsigned char *)(v70 + 48) = v60;
  return result;
}

uint64_t type metadata accessor for StartWritingWidgetPersistedPrompts()
{
  uint64_t result = qword_10008AB90;
  if (!qword_10008AB90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100063AB8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100069600();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = sub_1000059D8(&qword_100088EF8);
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v10;
    uint64_t v13 = (char *)a2 + v10;
    *(void *)uint64_t v12 = *(void *)v13;
    *((_DWORD *)v12 + 2) = *((_DWORD *)v13 + 2);
    uint64_t v14 = *((void *)v13 + 3);
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((void *)v12 + 3) = v14;
    uint64_t v15 = *((void *)v13 + 5);
    *((void *)v12 + 4) = *((void *)v13 + 4);
    *((void *)v12 + 5) = v15;
    v12[48] = v13[48];
    uint64_t v16 = (char *)a1 + v11;
    uint64_t v17 = (char *)a2 + v11;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    v16[9] = v17[9];
    v16[10] = v17[10];
    v16[11] = v17[11];
    uint64_t v18 = *((void *)v17 + 3);
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *((void *)v16 + 3) = v18;
    uint64_t v19 = *((void *)v17 + 5);
    *((void *)v16 + 4) = *((void *)v17 + 4);
    *((void *)v16 + 5) = v19;
    v16[48] = v17[48];
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    v21[9] = v22[9];
    v21[10] = v22[10];
    v21[11] = v22[11];
    uint64_t v23 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v23;
    uint64_t v24 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v24;
    v21[48] = v22[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100063CA0(uint64_t a1)
{
  uint64_t v2 = sub_100069600();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = sub_1000059D8(&qword_100088EF8);
  v3(a1 + *(int *)(v4 + 36), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100063D88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = sub_1000059D8(&qword_100088EF8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_DWORD *)(v11 + 8) = *(_DWORD *)(v12 + 8);
  uint64_t v13 = *(void *)(v12 + 24);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = v13;
  uint64_t v14 = *(void *)(v12 + 40);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = v14;
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  uint64_t v15 = a1 + v10;
  uint64_t v16 = a2 + v10;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(unsigned char *)(v15 + 9) = *(unsigned char *)(v16 + 9);
  *(unsigned char *)(v15 + 10) = *(unsigned char *)(v16 + 10);
  *(unsigned char *)(v15 + 11) = *(unsigned char *)(v16 + 11);
  uint64_t v17 = *(void *)(v16 + 24);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = v17;
  uint64_t v18 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v18;
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(unsigned char *)(v20 + 9) = *(unsigned char *)(v21 + 9);
  *(unsigned char *)(v20 + 10) = *(unsigned char *)(v21 + 10);
  *(unsigned char *)(v20 + 11) = *(unsigned char *)(v21 + 11);
  uint64_t v22 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v23;
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100063F20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = sub_1000059D8(&qword_100088EF8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9);
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = v12;
  *(unsigned char *)(v10 + 9) = *(unsigned char *)(v11 + 9);
  *(unsigned char *)(v10 + 10) = *(unsigned char *)(v11 + 10);
  *(unsigned char *)(v10 + 11) = *(unsigned char *)(v11 + 11);
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = *(void *)(v11 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 48) = *(unsigned char *)(v11 + 48);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  LOBYTE(v13) = *(unsigned char *)(a2 + v13 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = v13;
  *(unsigned char *)(v14 + 9) = *(unsigned char *)(v15 + 9);
  *(unsigned char *)(v14 + 10) = *(unsigned char *)(v15 + 10);
  *(unsigned char *)(v14 + 11) = *(unsigned char *)(v15 + 11);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  LOBYTE(v16) = *(unsigned char *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = v16;
  *(unsigned char *)(v17 + 9) = *(unsigned char *)(v18 + 9);
  *(unsigned char *)(v17 + 10) = *(unsigned char *)(v18 + 10);
  *(unsigned char *)(v17 + 11) = *(unsigned char *)(v18 + 11);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
  return a1;
}

uint64_t sub_100064138(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = sub_1000059D8(&qword_100088EF8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = (long long *)(a2 + v9);
  long long v13 = *v12;
  long long v14 = v12[1];
  long long v15 = v12[2];
  *(unsigned char *)(v11 + 48) = *((unsigned char *)v12 + 48);
  *(_OWORD *)uint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  *(_OWORD *)(v11 + 32) = v15;
  uint64_t v16 = a1 + v10;
  uint64_t v17 = a2 + v10;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  long long v22 = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(v21 + 16);
  *(_OWORD *)(v20 + 32) = v22;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t sub_100064244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100069600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = sub_1000059D8(&qword_100088EF8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *(_DWORD *)(v10 + 8) = *(_DWORD *)(a2 + v9 + 8);
  uint64_t v12 = *(void *)(a2 + v9 + 24);
  *(void *)(v10 + 16) = *(void *)(a2 + v9 + 16);
  *(void *)(v10 + 24) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v11 + 40);
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  *(void *)(v10 + 40) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 48) = *(unsigned char *)(v11 + 48);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(_DWORD *)(v15 + 8) = *(_DWORD *)(a2 + v14 + 8);
  uint64_t v17 = *(void *)(a2 + v14 + 24);
  *(void *)(v15 + 16) = *(void *)(a2 + v14 + 16);
  *(void *)(v15 + 24) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_DWORD *)(v20 + 8) = *(_DWORD *)(v21 + 8);
  uint64_t v22 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 48) = *(unsigned char *)(v21 + 48);
  return a1;
}

uint64_t sub_1000643B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000643C8);
}

uint64_t sub_1000643C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000059D8(&qword_100088EF8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100064490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000644A4);
}

uint64_t sub_1000644A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000059D8(&qword_100088EF8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

void sub_100064568()
{
  sub_100064600();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100064600()
{
  if (!qword_10008ABA0)
  {
    sub_100069600();
    sub_10004707C(&qword_10008A120);
    unint64_t v0 = sub_10006A390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10008ABA0);
    }
  }
}

uint64_t initializeWithCopy for StartWritingWidgetPrompt(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StartWritingWidgetPrompt(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 11) = *((unsigned char *)a2 + 11);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for StartWritingWidgetPrompt(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StartWritingWidgetPrompt(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWritingWidgetPrompt(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWritingWidgetPrompt(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPrompt()
{
  return &type metadata for StartWritingWidgetPrompt;
}

unint64_t sub_10006487C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6F4D6568546E69;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x446C616963657073;
      break;
    default:
      unint64_t result = 0x616568416B6F6F6CLL;
      break;
  }
  return result;
}

uint64_t sub_100064928(unsigned __int8 *a1, char *a2)
{
  return sub_100062ED0(*a1, *a2);
}

Swift::Int sub_100064934()
{
  return sub_10001D80C();
}

uint64_t sub_10006493C()
{
  return sub_1000631D4();
}

Swift::Int sub_100064944()
{
  return sub_10001DA70();
}

uint64_t sub_10006494C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000666D4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_10006497C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10006487C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000649A8()
{
  return sub_10006A340();
}

uint64_t sub_100064A08()
{
  return sub_10006A330();
}

uint64_t sub_100064A58(char a1)
{
  return *(void *)&aTimeofdatimeof_1[8 * a1];
}

uint64_t sub_100064A78(char a1)
{
  return *(void *)&aLockinlilockre_1[8 * a1];
}

uint64_t sub_100064A98()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_10006A5B0(0);
  }
  else
  {
    Swift::UInt v1 = *(void *)v0;
    sub_10006A5B0(1u);
    sub_10006A5A0(v1);
  }
  sub_10006A300();
  swift_bridgeObjectRelease();
  sub_10006A300();
  swift_bridgeObjectRelease();
  sub_10006A300();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006A300();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006A300();

  return swift_bridgeObjectRelease();
}

unint64_t sub_100064C64(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74616E6974736564;
      break;
    case 2:
      unint64_t result = 0x656C616373;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 1954047348;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 0x64496568636163;
      break;
  }
  return result;
}

uint64_t sub_100064D28(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_1000059D8(&qword_10008AC50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000660A4(a1, a1[3]);
  sub_100066CD8();
  sub_10006A5E0();
  v10[15] = 0;
  sub_10006A520();
  if (!v2)
  {
    v10[14] = v3[9];
    v10[13] = 1;
    sub_100066E28();
    sub_10006A550();
    v10[12] = v3[10];
    v10[11] = 2;
    sub_100066E7C();
    sub_10006A550();
    v10[10] = v3[11];
    v10[9] = 3;
    sub_100066ED0();
    sub_10006A550();
    v10[8] = 4;
    sub_10006A530();
    v10[7] = 5;
    sub_10006A530();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100064F74(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x74706D6F7270;
  }
}

uint64_t sub_100064FAC(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_1000059D8(&qword_10008ACB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000660A4(a1, a1[3]);
  sub_100067E90();
  sub_10006A5E0();
  long long v9 = v3[1];
  long long v12 = *v3;
  long long v13 = v9;
  long long v14 = v3[2];
  v11[15] = 0;
  sub_100067EE4();
  sub_10006A550();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_10006A540();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10006512C(char *a1, char *a2)
{
  return sub_100062E48(*a1, *a2);
}

Swift::Int sub_100065138()
{
  return sub_10001D900();
}

uint64_t sub_100065140()
{
  return sub_100063180();
}

Swift::Int sub_100065148()
{
  return sub_10001DB60();
}

uint64_t sub_100065150@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000866B8;
  uint64_t result = sub_100066720(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_100065188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100064A58(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000651B4()
{
  return sub_10006A340();
}

uint64_t sub_100065214()
{
  return sub_10006A330();
}

uint64_t sub_100065264(char *a1, char *a2)
{
  return sub_100062DC0(*a1, *a2);
}

Swift::Int sub_100065270()
{
  return sub_10001D96C();
}

uint64_t sub_100065278()
{
  return sub_10006312C();
}

Swift::Int sub_100065280()
{
  return sub_10001DBC8();
}

uint64_t sub_100065288@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100086720;
  uint64_t result = sub_100066720(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1000652C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100064A78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000652EC()
{
  return sub_10006A340();
}

uint64_t sub_10006534C()
{
  return sub_10006A330();
}

BOOL sub_10006539C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1000653B8()
{
  return sub_100064C64(*v0);
}

uint64_t sub_1000653C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100066768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000653E8()
{
  return 0;
}

uint64_t sub_1000653F4(uint64_t a1)
{
  unint64_t v2 = sub_100066CD8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100065430(uint64_t a1)
{
  unint64_t v2 = sub_100066CD8();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10006546C()
{
  return sub_10006A5C0();
}

Swift::Int sub_1000654B0()
{
  return sub_10006A5C0();
}

double sub_1000654EC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000669A8(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100065530(void *a1)
{
  return sub_100064D28(a1);
}

uint64_t sub_100065548(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  _OWORD v8[2] = v5;
  return sub_100066264((uint64_t)v7, (uint64_t)v8) & 1;
}

unint64_t sub_100065594()
{
  unint64_t result = qword_10008ABD8;
  if (!qword_10008ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ABD8);
  }
  return result;
}

uint64_t sub_1000655E8()
{
  return sub_100064F74(*v0);
}

uint64_t sub_1000655F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100067980(a1, a2);
  *a3 = result;
  return result;
}

void sub_100065618(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100065624(uint64_t a1)
{
  unint64_t v2 = sub_100067E90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100065660(uint64_t a1)
{
  unint64_t v2 = sub_100067E90();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10006569C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100067A60(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(unsigned char *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1000656EC(void *a1)
{
  return sub_100064FAC(a1);
}

uint64_t sub_100065704(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v2;
  int v3 = *(unsigned __int8 *)(a1 + 48);
  long long v4 = *a2;
  long long v5 = a2[1];
  v9[2] = *(_OWORD *)(a1 + 32);
  v10[0] = v4;
  long long v6 = a2[2];
  v10[1] = v5;
  void v10[2] = v6;
  int v7 = *((unsigned __int8 *)a2 + 48);
  return sub_100066264((uint64_t)v9, (uint64_t)v10) & ~(v3 ^ v7) & 1;
}

unint64_t sub_100065764(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696C6E496B636F6CLL;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6F666E49656D6F68;
      break;
    default:
      unint64_t result = 0x656D69746566696CLL;
      break;
  }
  return result;
}

uint64_t sub_100065808(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000059D8(&qword_10008ABE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000660A4(a1, a1[3]);
  sub_1000660E8();
  sub_10006A5E0();
  LOBYTE(v36) = 0;
  sub_1000059D8(&qword_100088EF8);
  sub_100066190(&qword_10008ABF0, &qword_10008ABF8);
  sub_10006A550();
  if (!v2)
  {
    uint64_t started = (int *)type metadata accessor for StartWritingWidgetPersistedPrompts();
    unint64_t v10 = (uint64_t *)(v3 + started[5]);
    uint64_t v11 = *v10;
    char v12 = *((unsigned char *)v10 + 8);
    __int16 v13 = *(_WORD *)((char *)v10 + 9);
    char v14 = *((unsigned char *)v10 + 11);
    long long v15 = *((_OWORD *)v10 + 1);
    uint64_t v16 = v10[4];
    uint64_t v17 = v10[5];
    LOBYTE(v10) = *((unsigned char *)v10 + 48);
    uint64_t v36 = v11;
    char v37 = v12;
    __int16 v38 = v13;
    char v39 = v14;
    long long v40 = v15;
    uint64_t v41 = v16;
    uint64_t v42 = v17;
    char v43 = (char)v10;
    HIBYTE(v35) = 1;
    sub_10006613C();
    sub_10006A550();
    uint64_t v18 = (uint64_t *)(v3 + started[6]);
    uint64_t v19 = *v18;
    char v20 = *((unsigned char *)v18 + 8);
    __int16 v21 = *(_WORD *)((char *)v18 + 9);
    char v22 = *((unsigned char *)v18 + 11);
    long long v23 = *((_OWORD *)v18 + 1);
    uint64_t v24 = v18[4];
    uint64_t v25 = v18[5];
    LOBYTE(v18) = *((unsigned char *)v18 + 48);
    uint64_t v36 = v19;
    char v37 = v20;
    __int16 v38 = v21;
    char v39 = v22;
    long long v40 = v23;
    uint64_t v41 = v24;
    uint64_t v42 = v25;
    char v43 = (char)v18;
    HIBYTE(v35) = 2;
    sub_10006A550();
    uint64_t v26 = (uint64_t *)(v3 + started[7]);
    uint64_t v27 = *v26;
    char v28 = *((unsigned char *)v26 + 8);
    __int16 v29 = *(_WORD *)((char *)v26 + 9);
    char v30 = *((unsigned char *)v26 + 11);
    long long v31 = *((_OWORD *)v26 + 1);
    uint64_t v32 = v26[4];
    uint64_t v33 = v26[5];
    LOBYTE(v26) = *((unsigned char *)v26 + 48);
    uint64_t v36 = v27;
    char v37 = v28;
    __int16 v38 = v29;
    char v39 = v30;
    long long v40 = v31;
    uint64_t v41 = v32;
    uint64_t v42 = v33;
    char v43 = (char)v26;
    HIBYTE(v35) = 3;
    sub_10006A550();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100065B04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v4 = sub_1000059D8(&qword_100088EF8);
  __chkstk_darwin(v4);
  long long v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000059D8(&qword_10008AC08);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetPersistedPrompts();
  __chkstk_darwin(started);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000660A4(a1, a1[3]);
  sub_1000660E8();
  uint64_t v42 = v7;
  sub_10006A5D0();
  if (v2) {
    return sub_100036BE0((uint64_t)a1);
  }
  uint64_t v11 = v39;
  LOBYTE(v43) = 0;
  sub_100066190(&qword_10008AC10, &qword_10008AC18);
  uint64_t v12 = (uint64_t)v40;
  sub_10006A510();
  sub_100055D04(v12, (uint64_t)v10);
  char v51 = 1;
  sub_100066210();
  sub_10006A510();
  char v13 = v44;
  __int16 v14 = v45;
  char v15 = v46;
  long long v16 = v47;
  uint64_t v17 = v48;
  uint64_t v18 = v49;
  char v19 = v50;
  char v20 = &v10[started[5]];
  *(void *)char v20 = v43;
  v20[8] = v13;
  *(_WORD *)(v20 + 9) = v14;
  v20[11] = v15;
  *((_OWORD *)v20 + 1) = v16;
  *((void *)v20 + 4) = v17;
  *((void *)v20 + 5) = v18;
  v20[48] = v19;
  char v51 = 2;
  sub_10006A510();
  char v21 = v44;
  __int16 v22 = v45;
  char v23 = v46;
  long long v24 = v47;
  uint64_t v25 = v48;
  uint64_t v26 = v49;
  char v27 = v50;
  char v28 = &v10[started[6]];
  *(void *)char v28 = v43;
  v28[8] = v21;
  *(_WORD *)(v28 + 9) = v22;
  v28[11] = v23;
  *((_OWORD *)v28 + 1) = v24;
  *((void *)v28 + 4) = v25;
  *((void *)v28 + 5) = v26;
  v28[48] = v27;
  char v51 = 3;
  sub_10006A510();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v41);
  char v29 = v44;
  __int16 v30 = v45;
  char v31 = v46;
  long long v32 = v47;
  uint64_t v33 = v48;
  uint64_t v34 = v49;
  char v35 = v50;
  uint64_t v36 = &v10[started[7]];
  *(void *)uint64_t v36 = v43;
  v36[8] = v29;
  *(_WORD *)(v36 + 9) = v30;
  v36[11] = v31;
  *((_OWORD *)v36 + 1) = v32;
  *((void *)v36 + 4) = v33;
  *((void *)v36 + 5) = v34;
  v36[48] = v35;
  sub_10000F630((uint64_t)v10, v38);
  sub_100036BE0((uint64_t)a1);
  return sub_1000429D4((uint64_t)v10);
}

unint64_t sub_100065FBC()
{
  return sub_100065764(*v0);
}

uint64_t sub_100065FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100067CD4(a1, a2);
  *a3 = result;
  return result;
}

void sub_100065FEC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100065FF8(uint64_t a1)
{
  unint64_t v2 = sub_1000660E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100066034(uint64_t a1)
{
  unint64_t v2 = sub_1000660E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100066070@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100065B04(a1, a2);
}

uint64_t sub_100066088(void *a1)
{
  return sub_100065808(a1);
}

void *sub_1000660A4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1000660E8()
{
  unint64_t result = qword_10008ABE8;
  if (!qword_10008ABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ABE8);
  }
  return result;
}

unint64_t sub_10006613C()
{
  unint64_t result = qword_10008AC00;
  if (!qword_10008AC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC00);
  }
  return result;
}

uint64_t sub_100066190(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005A1C(&qword_100088EF8);
    sub_10004707C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100066210()
{
  unint64_t result = qword_10008AC20;
  if (!qword_10008AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC20);
  }
  return result;
}

uint64_t sub_100066264(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  if (*(void *)&aLockinlilockre_1[8 * *(char *)(a1 + 9)] == *(void *)&aLockinlilockre_1[8 * *(char *)(a2 + 9)]
    && *(void *)&aNe_1[8 * *(char *)(a1 + 9)] == *(void *)&aNe_1[8 * *(char *)(a2 + 9)])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = sub_10006A570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v6 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)&aTimeofdatimeof_1[8 * *(char *)(a1 + 10)] == *(void *)&aTimeofdatimeof_1[8 * *(char *)(a2 + 10)]
    && *(void *)&aY_1[8 * *(char *)(a1 + 10)] == *(void *)&aY_1[8 * *(char *)(a2 + 10)])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_10006A570();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  if ((sub_100062ED0(*(unsigned char *)(a1 + 11), *(unsigned char *)(a2 + 11)) & 1) == 0) {
    return 0;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (v10 = sub_10006A570(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
    {
      return 1;
    }
    else
    {
      return sub_10006A570();
    }
  }
  return result;
}

uint64_t sub_100066440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000059D8(&qword_100088EF8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v9 = (char *)v41 - v8;
  sub_100069600();
  sub_10004707C(&qword_100089418);
  char v10 = sub_10006A2A0();
  sub_100055D6C(a1, (uint64_t)v9);
  sub_100055D6C(a2, (uint64_t)v7);
  if ((v10 & 1) == 0)
  {
    sub_100007D0C((uint64_t)v7, &qword_100088EF8);
    sub_100007D0C((uint64_t)v9, &qword_100088EF8);
    goto LABEL_9;
  }
  char v11 = sub_10006A2A0();
  sub_100007D0C((uint64_t)v7, &qword_100088EF8);
  sub_100007D0C((uint64_t)v9, &qword_100088EF8);
  if ((v11 & 1) == 0)
  {
LABEL_9:
    char v22 = 0;
    return v22 & 1;
  }
  uint64_t started = (int *)type metadata accessor for StartWritingWidgetPersistedPrompts();
  uint64_t v13 = a1 + started[5];
  long long v14 = *(_OWORD *)(v13 + 32);
  long long v15 = *(_OWORD *)v13;
  v45[1] = *(_OWORD *)(v13 + 16);
  long long v45[2] = v14;
  v45[0] = v15;
  int v16 = *(unsigned __int8 *)(v13 + 48);
  uint64_t v17 = a2 + started[5];
  long long v18 = *(_OWORD *)(v17 + 32);
  long long v19 = *(_OWORD *)v17;
  v46[1] = *(_OWORD *)(v17 + 16);
  v46[2] = v18;
  v46[0] = v19;
  int v20 = *(unsigned __int8 *)(v17 + 48);
  char v21 = sub_100066264((uint64_t)v45, (uint64_t)v46);
  char v22 = 0;
  if ((v21 & 1) != 0 && ((v16 ^ v20) & 1) == 0)
  {
    uint64_t v23 = a1 + started[6];
    long long v24 = *(_OWORD *)(v23 + 32);
    long long v25 = *(_OWORD *)v23;
    v43[1] = *(_OWORD *)(v23 + 16);
    v43[2] = v24;
    v43[0] = v25;
    int v26 = *(unsigned __int8 *)(v23 + 48);
    uint64_t v27 = a2 + started[6];
    long long v28 = *(_OWORD *)(v27 + 32);
    long long v29 = *(_OWORD *)v27;
    v44[1] = *(_OWORD *)(v27 + 16);
    v44[2] = v28;
    v44[0] = v29;
    int v30 = *(unsigned __int8 *)(v27 + 48);
    char v31 = sub_100066264((uint64_t)v43, (uint64_t)v44);
    char v22 = 0;
    if ((v31 & 1) != 0 && ((v26 ^ v30) & 1) == 0)
    {
      uint64_t v32 = a1 + started[7];
      long long v33 = *(_OWORD *)(v32 + 32);
      long long v34 = *(_OWORD *)v32;
      v41[1] = *(_OWORD *)(v32 + 16);
      v41[2] = v33;
      v41[0] = v34;
      char v35 = *(unsigned char *)(v32 + 48);
      uint64_t v36 = a2 + started[7];
      long long v37 = *(_OWORD *)(v36 + 32);
      long long v38 = *(_OWORD *)v36;
      v42[1] = *(_OWORD *)(v36 + 16);
      v42[2] = v37;
      v42[0] = v38;
      char v39 = *(unsigned char *)(v36 + 48);
      char v22 = sub_100066264((uint64_t)v41, (uint64_t)v42) & (v35 ^ v39 ^ 1);
    }
  }
  return v22 & 1;
}

uint64_t sub_1000666D4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100086638;
  v6._object = a2;
  unint64_t v4 = sub_10006A4D0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_100066720(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_10006A4D0(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_100066768(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64496568636163 && a2 == 0xE700000000000000;
  if (v3 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100078890)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_10006A570();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1000669A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000059D8(&qword_10008AC28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000660A4(a1, a1[3]);
  sub_100066CD8();
  sub_10006A5D0();
  if (v2) {
    return sub_100036BE0((uint64_t)a1);
  }
  char v34 = 0;
  uint64_t v9 = sub_10006A4E0();
  char v11 = v10;
  char v32 = 1;
  sub_100066D2C();
  sub_10006A510();
  int v25 = v33;
  char v30 = 2;
  sub_100066D80();
  sub_10006A510();
  int v24 = v31;
  char v28 = 3;
  sub_100066DD4();
  sub_10006A510();
  int v23 = v29;
  char v27 = 4;
  uint64_t v21 = sub_10006A4F0();
  uint64_t v22 = v12;
  char v26 = 5;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_10006A4F0();
  uint64_t v15 = v14;
  int v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  sub_100036BE0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  *(unsigned char *)(a2 + 9) = v25;
  *(unsigned char *)(a2 + 10) = v24;
  *(unsigned char *)(a2 + 11) = v23;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v15;
  return result;
}

unint64_t sub_100066CD8()
{
  unint64_t result = qword_10008AC30;
  if (!qword_10008AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC30);
  }
  return result;
}

unint64_t sub_100066D2C()
{
  unint64_t result = qword_10008AC38;
  if (!qword_10008AC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC38);
  }
  return result;
}

unint64_t sub_100066D80()
{
  unint64_t result = qword_10008AC40;
  if (!qword_10008AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC40);
  }
  return result;
}

unint64_t sub_100066DD4()
{
  unint64_t result = qword_10008AC48;
  if (!qword_10008AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC48);
  }
  return result;
}

unint64_t sub_100066E28()
{
  unint64_t result = qword_10008AC58;
  if (!qword_10008AC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC58);
  }
  return result;
}

unint64_t sub_100066E7C()
{
  unint64_t result = qword_10008AC60;
  if (!qword_10008AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC60);
  }
  return result;
}

unint64_t sub_100066ED0()
{
  unint64_t result = qword_10008AC68;
  if (!qword_10008AC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StartWritingWidgetPrompt.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StartWritingWidgetPrompt.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100067080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPrompt.CodingKeys()
{
  return &type metadata for StartWritingWidgetPrompt.CodingKeys;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPersistedPrompts.CodingKeys()
{
  return &type metadata for StartWritingWidgetPersistedPrompts.CodingKeys;
}

uint64_t _s14JournalWidgets24StartWritingWidgetPromptVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 11) = *((unsigned char *)a2 + 11);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

__n128 initializeWithTake for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StartWritingWidgetPersistedPrompts.PromptInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPersistedPrompts.PromptInfo()
{
  return &type metadata for StartWritingWidgetPersistedPrompts.PromptInfo;
}

uint64_t _s14JournalWidgets28StartWritingWidgetPromptTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14JournalWidgets28StartWritingWidgetPromptTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100067484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPromptType()
{
  return &type metadata for StartWritingWidgetPromptType;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPromptScale()
{
  return &type metadata for StartWritingWidgetPromptScale;
}

uint64_t _s14JournalWidgets35StartWritingWidgetPromptDestinationOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14JournalWidgets35StartWritingWidgetPromptDestinationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100067630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPromptDestination()
{
  return &type metadata for StartWritingWidgetPromptDestination;
}

unint64_t sub_10006766C()
{
  unint64_t result = qword_10008AC70;
  if (!qword_10008AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC70);
  }
  return result;
}

unint64_t sub_1000676C4()
{
  unint64_t result = qword_10008AC78;
  if (!qword_10008AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC78);
  }
  return result;
}

unint64_t sub_10006771C()
{
  unint64_t result = qword_10008AC80;
  if (!qword_10008AC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC80);
  }
  return result;
}

unint64_t sub_100067774()
{
  unint64_t result = qword_10008AC88;
  if (!qword_10008AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC88);
  }
  return result;
}

unint64_t sub_1000677CC()
{
  unint64_t result = qword_10008AC90;
  if (!qword_10008AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC90);
  }
  return result;
}

unint64_t sub_100067824()
{
  unint64_t result = qword_10008AC98;
  if (!qword_10008AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AC98);
  }
  return result;
}

unint64_t sub_10006787C()
{
  unint64_t result = qword_10008ACA0;
  if (!qword_10008ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACA0);
  }
  return result;
}

unint64_t sub_1000678D4()
{
  unint64_t result = qword_10008ACA8;
  if (!qword_10008ACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACA8);
  }
  return result;
}

unint64_t sub_10006792C()
{
  unint64_t result = qword_10008ACB0;
  if (!qword_10008ACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACB0);
  }
  return result;
}

uint64_t sub_100067980(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v3 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000788B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10006A570();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100067A60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000059D8(&qword_10008ACD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000660A4(a1, a1[3]);
  sub_100067E90();
  sub_10006A5D0();
  if (v2) {
    return sub_100036BE0((uint64_t)a1);
  }
  char v30 = 0;
  sub_100067F38();
  sub_10006A510();
  uint64_t v19 = v20;
  int v29 = v21;
  int v17 = v23;
  int v18 = v22;
  int v16 = v24;
  uint64_t v9 = v26;
  uint64_t v10 = v28;
  uint64_t v14 = v27;
  uint64_t v15 = v25;
  LOBYTE(v20) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_10006A500();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100036BE0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(unsigned char *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 9) = v18;
  *(unsigned char *)(a2 + 10) = v17;
  *(unsigned char *)(a2 + 11) = v16;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = v11 & 1;
  return result;
}

uint64_t sub_100067CD4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656D69746566696CLL && a2 == 0xE800000000000000;
  if (v3 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696C6E496B636F6CLL && a2 == 0xEE006F666E49656ELL || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100078870 || (sub_10006A570() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F666E49656D6F68 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10006A570();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_100067E90()
{
  unint64_t result = qword_10008ACC0;
  if (!qword_10008ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACC0);
  }
  return result;
}

unint64_t sub_100067EE4()
{
  unint64_t result = qword_10008ACC8;
  if (!qword_10008ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACC8);
  }
  return result;
}

unint64_t sub_100067F38()
{
  unint64_t result = qword_10008ACD8;
  if (!qword_10008ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACD8);
  }
  return result;
}

unint64_t sub_100067F8C()
{
  unint64_t result = qword_10008ACE0;
  if (!qword_10008ACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACE0);
  }
  return result;
}

unint64_t sub_100067FE0()
{
  unint64_t result = qword_10008ACE8;
  if (!qword_10008ACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACE8);
  }
  return result;
}

unint64_t sub_100068034()
{
  unint64_t result = qword_10008ACF0;
  if (!qword_10008ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StartWritingWidgetPersistedPrompts.PromptInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100068154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartWritingWidgetPersistedPrompts.PromptInfo.CodingKeys()
{
  return &type metadata for StartWritingWidgetPersistedPrompts.PromptInfo.CodingKeys;
}

unint64_t sub_100068190()
{
  unint64_t result = qword_10008ACF8;
  if (!qword_10008ACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008ACF8);
  }
  return result;
}

unint64_t sub_1000681E8()
{
  unint64_t result = qword_10008AD00;
  if (!qword_10008AD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AD00);
  }
  return result;
}

unint64_t sub_100068240()
{
  unint64_t result = qword_10008AD08;
  if (!qword_10008AD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AD08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CanvasPickerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100068374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasPickerType()
{
  return &type metadata for CanvasPickerType;
}

unint64_t sub_1000683B0()
{
  unint64_t result = qword_10008AD10;
  if (!qword_10008AD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10008AD10);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

id sub_100068428()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  qword_10008AD18 = (uint64_t)result;
  return result;
}

uint64_t sub_100068480(uint64_t a1)
{
  return sub_100068828(a1, qword_100092D20);
}

uint64_t sub_1000684A4(uint64_t a1)
{
  return sub_100068828(a1, qword_100092D38);
}

uint64_t sub_1000684C8(uint64_t a1)
{
  return sub_100068828(a1, qword_100092D50);
}

uint64_t sub_1000684EC(uint64_t a1)
{
  return sub_100068828(a1, qword_100092D68);
}

uint64_t sub_100068510(uint64_t a1)
{
  return sub_100068828(a1, qword_100092D80);
}

uint64_t sub_100068534(uint64_t a1)
{
  return sub_100068828(a1, qword_100092D98);
}

uint64_t sub_100068558(uint64_t a1)
{
  return sub_100068828(a1, qword_100092DB0);
}

uint64_t sub_10006857C(uint64_t a1)
{
  return sub_100068828(a1, qword_100092DC8);
}

uint64_t sub_1000685A0(uint64_t a1)
{
  return sub_100068828(a1, qword_100092DE0);
}

uint64_t sub_1000685C4(uint64_t a1)
{
  return sub_100068828(a1, qword_100092DF8);
}

uint64_t sub_1000685E8(uint64_t a1)
{
  return sub_100068828(a1, qword_100092E10);
}

uint64_t sub_10006860C(uint64_t a1)
{
  return sub_100068828(a1, qword_100092E28);
}

uint64_t sub_100068630(uint64_t a1)
{
  return sub_100068828(a1, qword_100092E40);
}

uint64_t sub_100068654(uint64_t a1)
{
  return sub_100068828(a1, qword_100092E58);
}

uint64_t sub_100068678(uint64_t a1)
{
  return sub_100068828(a1, qword_100092E70);
}

uint64_t sub_10006869C(uint64_t a1)
{
  return sub_100068828(a1, qword_100092E88);
}

uint64_t sub_1000686C0(uint64_t a1)
{
  return sub_100068828(a1, qword_100092EA0);
}

uint64_t sub_1000686E4(uint64_t a1)
{
  return sub_100068828(a1, qword_100092EB8);
}

uint64_t sub_100068708(uint64_t a1)
{
  return sub_100068828(a1, qword_100092ED0);
}

uint64_t sub_10006872C(uint64_t a1)
{
  return sub_100068828(a1, qword_100092EE8);
}

uint64_t sub_100068750(uint64_t a1)
{
  return sub_100068828(a1, qword_100092F00);
}

uint64_t sub_100068774(uint64_t a1)
{
  return sub_100068828(a1, qword_100092F18);
}

uint64_t sub_100068798(uint64_t a1)
{
  return sub_100068828(a1, qword_100092F30);
}

uint64_t sub_1000687BC(uint64_t a1)
{
  return sub_100068828(a1, qword_100092F48);
}

uint64_t sub_1000687E0(uint64_t a1)
{
  return sub_100068828(a1, qword_100092F60);
}

uint64_t sub_100068804(uint64_t a1)
{
  return sub_100068828(a1, qword_100092F78);
}

uint64_t sub_100068828(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100069700();
  sub_10000CD24(v3, a2);
  sub_10000CCEC(v3, (uint64_t)a2);
  if (qword_100088A08 != -1) {
    swift_once();
  }
  id v4 = (id)qword_10008AD18;
  return sub_1000696F0();
}

uint64_t sub_1000688CC()
{
  return sub_100068A78(1);
}

uint64_t sub_1000688D4(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_100092118 == -1)
  {
    if (qword_100092120) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_100092118, 0, (dispatch_function_t)sub_100068A70);
    if (qword_100092120) {
      return _availability_version_check();
    }
  }
  if (qword_100092110 == -1)
  {
    BOOL v8 = dword_100092100 < a2;
    if (dword_100092100 > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_100092110, 0, (dispatch_function_t)sub_1000688CC);
    BOOL v8 = dword_100092100 < a2;
    if (dword_100092100 > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_100092104 > a3) {
    return 1;
  }
  return dword_100092104 >= a3 && dword_100092108 >= a4;
}

uint64_t sub_100068A70()
{
  return sub_100068A78(0);
}

uint64_t sub_100068A78(uint64_t result)
{
  uint64_t v1 = (uint64_t (**)(void))qword_100092120;
  if (qword_100092120) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (&__availability_version_check)
    {
      uint64_t v1 = &__availability_version_check;
      qword_100092120 = (uint64_t)&__availability_version_check;
    }
    if (!v1 || result != 0)
    {
      id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        id v4 = *(unsigned __int8 **)result;
        id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            uint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    char v11 = (uint64_t (*)(void))result;
                    id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    uint64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      id result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        id result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          uint64_t v13 = (FILE *)result;
                          uint64_t v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            int v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            int v16 = malloc(v15);
                            if (v16)
                            {
                              uint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  uint64_t v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &dword_100092100, &dword_100092104, &dword_100092108);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    uint64_t v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  uint64_t v19 = v13;
                                }
                                int v16 = v26;
                              }
                              else
                              {
                                int v16 = v26;
                                uint64_t v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          uint64_t v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100068DB0()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t sub_100068DC0()
{
  return static AppIntentInternal.sideEffect.getter();
}

uint64_t sub_100068DD0()
{
  return static AppIntentInternal.shortcutsMetadata.getter();
}

uint64_t sub_100068E10()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_100068E20()
{
  return static AppIntent.description.getter();
}

uint64_t sub_100068E30()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t sub_100068E40()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_100068E50()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_100068E80()
{
  return IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
}

uint64_t sub_100068EA0()
{
  return IntentDialog.init<A, B>(from:capturedContent:)();
}

uint64_t sub_100068EB0()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_100068EC0()
{
  return static IntentResult.result<A>(value:dialog:)();
}

uint64_t sub_100068ED0()
{
  return static IntentResult.result<>()();
}

uint64_t sub_100068EE0()
{
  return _UniqueEntity.id.getter();
}

uint64_t sub_100068EF0()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t sub_100068F00()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100068F10()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_100068F20()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_100068F30()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_100068F40()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100068F50()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
}

uint64_t sub_100068F60()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
}

uint64_t sub_100068F70()
{
  return _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
}

uint64_t sub_100068F80()
{
  return type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
}

uint64_t sub_100068F90()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t sub_100068FA0()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t sub_100068FB0()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t sub_100068FC0()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t sub_100068FD0()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t sub_100068FE0()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t sub_100068FF0()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
}

uint64_t sub_100069000()
{
  return static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
}

uint64_t sub_100069010()
{
  return _AssistantIntent.Value.init<A>(for:builder:)();
}

uint64_t sub_100069020()
{
  return type metadata accessor for _AssistantIntent.Value();
}

uint64_t sub_100069030()
{
  return _AssistantIntent.Value.init<A, B>(_:for:)();
}

uint64_t sub_100069040()
{
  return _AssistantIntent.Phrase.init(stringLiteral:)();
}

uint64_t sub_100069050()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

void sub_100069060(Swift::String a1)
{
}

uint64_t sub_100069070()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100069080()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t sub_100069090()
{
  return static _AssistantIntent.Builder.buildBlock(_:)();
}

uint64_t sub_1000690A0()
{
  return static _AssistantIntent.Builder.buildExpression(_:)();
}

uint64_t sub_1000690B0()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t sub_1000690C0()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t sub_1000690D0()
{
  return _AssistantIntent.init<A>(_:phrases:implying:)();
}

uint64_t sub_1000690E0()
{
  return IntentDescription.init(stringLiteral:)();
}

uint64_t sub_1000690F0()
{
  return type metadata accessor for IntentDescription();
}

uint64_t sub_100069100()
{
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t sub_100069140()
{
  return static _DialogBuilderEntity.buildBlock<A>(_:)();
}

uint64_t sub_100069150()
{
  return static _DialogBuilderEntity.buildExpression<A, B>(_:)();
}

uint64_t sub_100069160()
{
  return DisplayRepresentation.Image.init(systemName:isTemplate:)();
}

uint64_t sub_100069170()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_100069180()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)();
}

uint64_t sub_100069190()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_1000691A0()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t sub_1000691B0()
{
  return _URLRepresentableEnum.urlRepresentationParameter.getter();
}

uint64_t sub_1000691D0()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t sub_1000691E0()
{
  return _EnumURLRepresentation.EnumSingleURLRepresentation.init(stringLiteral:)();
}

uint64_t sub_1000691F0()
{
  return _EnumURLRepresentation.init(_:)();
}

uint64_t sub_100069200()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_100069210()
{
  return _URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_100069270()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_100069290()
{
  return type metadata accessor for _GeneratedContentOptions();
}

uint64_t sub_1000692A0()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1000692B0()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_1000692C0()
{
  return type metadata accessor for _GeneratedContentFallback();
}

uint64_t sub_1000692E0()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_1000692F0()
{
  return static FormatStyle<>.iso8601.getter();
}

uint64_t sub_100069300()
{
  return DateInterval.end.getter();
}

uint64_t sub_100069310()
{
  return DateInterval.start.getter();
}

uint64_t sub_100069320()
{
  return type metadata accessor for DateInterval();
}

uint64_t sub_100069330()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_100069340()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_100069350()
{
  return URLComponents.queryItems.modify();
}

uint64_t sub_100069360()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_100069370()
{
  return URLComponents.url.getter();
}

uint64_t sub_100069380()
{
  return URLComponents.host.setter();
}

uint64_t sub_100069390()
{
  return URLComponents.scheme.setter();
}

uint64_t sub_1000693A0()
{
  return URLComponents.init()();
}

uint64_t sub_1000693B0()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_1000693C0()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_1000693D0()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1000693E0(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_1000693F0()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t sub_100069400()
{
  return PropertyListDecoder.init()();
}

uint64_t sub_100069410()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t sub_100069420()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_100069430()
{
  return PropertyListEncoder.init()();
}

uint64_t sub_100069440()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t sub_100069450()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100069460()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_100069470()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_100069480()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100069490()
{
  return static FormatStyleCapitalizationContext.standalone.getter();
}

uint64_t sub_1000694A0()
{
  return type metadata accessor for FormatStyleCapitalizationContext();
}

uint64_t sub_1000694B0()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1000694C0()
{
  return type metadata accessor for URL();
}

NSData sub_1000694D0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1000694E0()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t sub_1000694F0()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t sub_100069500()
{
  return Date.FormatStyle.day(_:)();
}

uint64_t sub_100069510()
{
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
}

uint64_t sub_100069520()
{
  return Date.FormatStyle.month(_:)();
}

uint64_t sub_100069530()
{
  return static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
}

uint64_t sub_100069540()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Day();
}

uint64_t sub_100069550()
{
  return static Date.FormatStyle.Symbol.Month.abbreviated.getter();
}

uint64_t sub_100069560()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Month();
}

uint64_t sub_100069570()
{
  return static Date.FormatStyle.Symbol.Weekday.wide.getter();
}

uint64_t sub_100069580()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Weekday();
}

uint64_t sub_100069590()
{
  return Date.FormatStyle.weekday(_:)();
}

uint64_t sub_1000695A0()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t sub_1000695B0()
{
  return type metadata accessor for Date.ISO8601FormatStyle();
}

uint64_t sub_1000695C0()
{
  return Date.addingTimeInterval(_:)();
}

uint64_t sub_1000695D0()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_1000695E0()
{
  return static Date.now.getter();
}

uint64_t sub_1000695F0()
{
  return Date.formatted<A>(_:)();
}

uint64_t sub_100069600()
{
  return type metadata accessor for Date();
}

uint64_t sub_100069610()
{
  return UUID.uuidString.getter();
}

uint64_t sub_100069620()
{
  return type metadata accessor for UUID();
}

uint64_t sub_100069630()
{
  return Locale.identifier.getter();
}

uint64_t sub_100069640()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_100069650()
{
  return static Locale.current.getter();
}

uint64_t sub_100069660()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100069670()
{
  return Calendar.dateInterval(of:for:)();
}

uint64_t sub_100069680()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_100069690()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t sub_1000696A0()
{
  return static Calendar.current.getter();
}

uint64_t sub_1000696B0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1000696C0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1000696D0()
{
  return static TimeZone.autoupdatingCurrent.getter();
}

uint64_t sub_1000696E0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1000696F0()
{
  return ColorResource.init(name:bundle:)();
}

uint64_t sub_100069700()
{
  return type metadata accessor for ColorResource();
}

uint64_t sub_100069710()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100069720()
{
  return Logger.logObject.getter();
}

uint64_t sub_100069730()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100069740()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100069750()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_100069760()
{
  return ShapeStyle._apply(to:)();
}

uint64_t sub_100069770()
{
  return static ShapeStyle._apply(to:)();
}

uint64_t sub_100069790()
{
  return ShapeStyle.blendMode(_:)();
}

uint64_t sub_1000697A0()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t sub_1000697B0()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_1000697C0()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_1000697E0()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_1000697F0()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_100069800()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_100069810()
{
  return static WidgetBundle.main()();
}

uint64_t sub_100069820()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_100069830()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t sub_100069840()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_100069850()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_100069860()
{
  return ModifiedContent<>.accessibilityAddTraits(_:)();
}

uint64_t sub_100069870()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_100069880()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_100069890()
{
  return static RedactionReasons.privacy.getter();
}

uint64_t sub_1000698A0()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_1000698B0()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_1000698C0()
{
  return static ButtonBorderShape.== infix(_:_:)();
}

uint64_t sub_1000698D0()
{
  return static ButtonBorderShape.circle.getter();
}

uint64_t sub_1000698E0()
{
  return static ButtonBorderShape.capsule.getter();
}

uint64_t sub_1000698F0()
{
  return type metadata accessor for ButtonBorderShape();
}

uint64_t sub_100069900()
{
  return static ContentTransition.opacity.getter();
}

uint64_t sub_100069910()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_100069920()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100069930()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_100069940()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100069950()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100069960()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_100069970()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100069980()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t sub_100069990()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_1000699A0()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_1000699B0()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_1000699C0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000699D0()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_1000699E0()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000699F0()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_100069A00()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100069A10()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_100069A20()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100069A30()
{
  return EnvironmentValues.init()();
}

uint64_t sub_100069A40()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100069A50()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_100069A60()
{
  return static VerticalAlignment.top.getter();
}

uint64_t sub_100069A70()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_100069A80()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_100069A90()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t sub_100069AA0()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t sub_100069AB0()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t sub_100069AC0()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_100069AD0()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_100069AE0()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_100069AF0()
{
  return WidgetConfiguration.description<A>(_:)();
}

uint64_t sub_100069B00()
{
  return WidgetConfiguration.hiddenControl()();
}

uint64_t sub_100069B10()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_100069B20()
{
  return WidgetConfiguration._contentMarginsDisabled()();
}

uint64_t sub_100069B30()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_100069B40()
{
  return WidgetConfiguration.configurationDisplayName<A>(_:)();
}

uint64_t sub_100069B50()
{
  return WidgetConfiguration.disablesControlStateCaching()();
}

uint64_t sub_100069B60()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_100069B70()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100069B80()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_100069B90()
{
  return type metadata accessor for _BlendModeShapeStyle();
}

uint64_t sub_100069BA0()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t sub_100069BB0()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_100069BC0()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_100069BD0()
{
  return type metadata accessor for LabelStyleConfiguration.Icon();
}

uint64_t sub_100069BE0()
{
  return LabelStyleConfiguration.icon.getter();
}

uint64_t sub_100069BF0()
{
  return type metadata accessor for LabelStyleConfiguration.Title();
}

uint64_t sub_100069C00()
{
  return LabelStyleConfiguration.title.getter();
}

uint64_t sub_100069C10()
{
  return type metadata accessor for ButtonStyleConfiguration.Label();
}

uint64_t sub_100069C20()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t sub_100069C30()
{
  return ButtonStyleConfiguration.isPressed.getter();
}

uint64_t sub_100069C40()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_100069C50()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_100069C60()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_100069C70()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_100069C80()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_100069C90()
{
  return type metadata accessor for _InsettableBackgroundShapeModifier();
}

uint64_t sub_100069CA0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_100069CB0()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t sub_100069CC0()
{
  return Axis.Set.init(rawValue:)();
}

uint64_t sub_100069CD0()
{
  return static Axis.Set.vertical.getter();
}

uint64_t sub_100069CE0()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_100069CF0()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_100069D00()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_100069D10()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_100069D20()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_100069D30()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_100069D40()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_100069D50()
{
  return static Font.subheadline.getter();
}

uint64_t sub_100069D60()
{
  return static Font.body.getter();
}

uint64_t sub_100069D70()
{
  return static Font.title.getter();
}

uint64_t sub_100069D80()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_100069D90()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_100069DA0()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_100069DB0()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_100069DC0()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_100069DD0()
{
  return static Font.title3.getter();
}

uint64_t sub_100069DE0()
{
  return type metadata accessor for Font.Leading();
}

uint64_t sub_100069DF0()
{
  return Font.leading(_:)();
}

uint64_t sub_100069E00()
{
  return static Font.footnote.getter();
}

uint64_t sub_100069E10()
{
  return Link.init(destination:label:)();
}

uint64_t sub_100069E20()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_100069E30()
{
  return static Text.== infix(_:_:)();
}

uint64_t sub_100069E40()
{
  return Text.init<A>(_:format:)();
}

uint64_t sub_100069E50()
{
  return Text.init(_:)();
}

uint64_t sub_100069E60()
{
  return Text.init<A>(_:)();
}

uint64_t sub_100069E70()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_100069E80()
{
  return View.widgetURL(_:)();
}

uint64_t sub_100069E90()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_100069EA0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100069EB0()
{
  return View.background<A>(alignment:content:)();
}

uint64_t sub_100069EC0()
{
  return View.background<A, B>(_:in:fillStyle:)();
}

uint64_t sub_100069ED0()
{
  return View.fontWeight(_:)();
}

uint64_t sub_100069EE0()
{
  return View.labelStyle<A>(_:)();
}

uint64_t sub_100069EF0()
{
  return View.unredacted()();
}

uint64_t sub_100069F00()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_100069F10()
{
  return View.scaleEffect(_:anchor:)();
}

uint64_t sub_100069F20()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100069F30()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t sub_100069F40()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t sub_100069F50()
{
  return View.compositingGroup()();
}

uint64_t sub_100069F60()
{
  return View.buttonBorderShape(_:)();
}

uint64_t sub_100069F70()
{
  return View.hyphenationFactor(_:)();
}

uint64_t sub_100069F80()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t sub_100069F90()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_100069FA0()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_100069FB0()
{
  return View.bold(_:)();
}

uint64_t sub_100069FC0()
{
  return View.shadow(color:radius:x:y:)();
}

uint64_t sub_100069FD0()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_100069FE0()
{
  return static Color.black.getter();
}

uint64_t sub_100069FF0()
{
  return static Color.white.getter();
}

uint64_t sub_10006A000()
{
  return Color.opacity(_:)();
}

uint64_t sub_10006A010()
{
  return Color.init(_:)();
}

uint64_t sub_10006A020()
{
  return Image.init(systemName:)();
}

uint64_t sub_10006A030()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_10006A040()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_10006A050()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_10006A060()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_10006A070()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_10006A080()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10006A090()
{
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t sub_10006A0A0()
{
  return Button.init<A>(intent:label:)();
}

uint64_t sub_10006A0B0()
{
  return Gradient.init(colors:)();
}

uint64_t sub_10006A0C0()
{
  return type metadata accessor for Material();
}

uint64_t sub_10006A0D0()
{
  return static Alignment.topLeading.getter();
}

uint64_t sub_10006A0E0()
{
  return static Alignment.center.getter();
}

uint64_t sub_10006A0F0()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_10006A100()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_10006A110()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_10006A120()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_10006A130()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_10006A140()
{
  return static UnitPoint.trailing.getter();
}

uint64_t sub_10006A150()
{
  return AccessoryWidgetBackground.init()();
}

uint64_t sub_10006A160()
{
  return type metadata accessor for AccessoryWidgetBackground();
}

uint64_t sub_10006A170()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_10006A180()
{
  return static WidgetRenderingMode.vibrant.getter();
}

uint64_t sub_10006A190()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_10006A1A0()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_10006A1B0()
{
  return WidgetFamily.rawValue.getter();
}

uint64_t sub_10006A1C0()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_10006A1D0()
{
  return ControlToggle.init<A, B, C, D, E, F>(kind:intentUpdatableProperty:content:value:)();
}

uint64_t sub_10006A1E0()
{
  return TimelineEntry.relevance.getter();
}

uint64_t sub_10006A210()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_10006A220()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_10006A230()
{
  return static TimelineReloadPolicy.never.getter();
}

uint64_t sub_10006A240()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_10006A250()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_10006A260()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_10006A270()
{
  return Timeline.init(entries:policy:)();
}

uint64_t sub_10006A280()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_10006A290()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_10006A2A0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10006A2B0()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10006A2C0()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_10006A2D0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10006A2E0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006A2F0()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_10006A300()
{
  return String.hash(into:)();
}

void sub_10006A310(Swift::String a1)
{
}

Swift::Int sub_10006A320()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10006A330()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10006A340()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10006A350()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10006A360()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

NSNumber sub_10006A370()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_10006A380()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10006A390()
{
  return type metadata accessor for Range();
}

uint64_t sub_10006A3A0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10006A3B0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10006A3C0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10006A3D0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10006A3E0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10006A3F0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10006A400()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_10006A410()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10006A420()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_10006A430()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10006A440()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10006A450()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_10006A460(Swift::Int a1)
{
}

uint64_t sub_10006A470()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10006A480()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10006A490()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10006A4A0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10006A4B0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10006A4C0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_10006A4D0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10006A4E0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10006A4F0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006A500()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006A510()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10006A520()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10006A530()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006A540()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006A550()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10006A560()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10006A570()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10006A580()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10006A590()
{
  return Hasher.init(_seed:)();
}

void sub_10006A5A0(Swift::UInt a1)
{
}

void sub_10006A5B0(Swift::UInt8 a1)
{
}

Swift::Int sub_10006A5C0()
{
  return Hasher._finalize()();
}

uint64_t sub_10006A5D0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10006A5E0()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

uint64_t _availability_version_check()
{
  return __availability_version_check();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return _fseek(a1, a2, a3);
}

uint64_t ftell(FILE *a1)
{
  return _ftell(a1);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t self
{
  return _self;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void rewind(FILE *a1)
{
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_deallocBox()
{
  return _swift_deallocBox();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}