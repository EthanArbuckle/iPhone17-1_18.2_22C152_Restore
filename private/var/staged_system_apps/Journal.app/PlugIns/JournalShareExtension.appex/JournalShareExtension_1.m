void sub_1000ADCB0(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  void *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_10010A800();
    sub_10001CB98(0, &qword_10015A880);
    sub_1000AE57C();
    sub_10010A180();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(unsigned char *)(a1 + 32);
    v17 = (void *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64) {
      v8 = ~(-1 << v7);
    }
    else {
      v8 = -1;
    }
    v5 = v8 & *(void *)(a1 + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      v12 = (char *)v4;
      goto LABEL_29;
    }
    v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    v15 = v17[v14];
    v12 = (char *)v4 + 1;
    if (!v15)
    {
      v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      v15 = v17[(void)v12];
      if (!v15)
      {
        v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        v15 = v17[(void)v12];
        if (!v15)
        {
          v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          v15 = v17[(void)v12];
          if (!v15)
          {
            v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            v15 = v17[(void)v12];
            if (!v15)
            {
              v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                v15 = v17[(void)v16++];
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1000AE5E4();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_10003DEBC(v18, v13);

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_10010A830())
      {
        sub_10001CB98(0, &qword_10015A880);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18[0];
        swift_unknownObjectRelease();
        v12 = (char *)v4;
        v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_1000ADFA0(char a1)
{
  unint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64724F7465737361;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x7461447972746E65;
      break;
    case 5:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 6:
      unint64_t result = 0x6144656C646E7562;
      break;
    case 7:
      unint64_t result = 0x72756F5365746164;
      break;
    case 8:
      unint64_t result = 0x64656767616C66;
      break;
    case 9:
      unint64_t result = 0x74706D6F7270;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AE128(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000ADFA0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000ADFA0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10010ACA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000AE1B4()
{
  char v1 = *v0;
  sub_10010ADC0();
  sub_1000ADFA0(v1);
  sub_100109DB0();
  swift_bridgeObjectRelease();
  return sub_10010AE20();
}

uint64_t sub_1000AE218()
{
  sub_1000ADFA0(*v0);
  sub_100109DB0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000AE26C()
{
  char v1 = *v0;
  sub_10010ADC0();
  sub_1000ADFA0(v1);
  sub_100109DB0();
  swift_bridgeObjectRelease();
  return sub_10010AE20();
}

uint64_t sub_1000AE2CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000AE710(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000AE2FC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000ADFA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000AE328(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *char v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_1000BDE0C(result, v5, 0);
  }
  return result;
}

uint64_t sub_1000AE3A0()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_1000BDE0C(0, v3, 1);
  }
  return result;
}

uint64_t sub_1000AE3FC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000AE450()
{
  unint64_t result = qword_10015DF80;
  if (!qword_10015DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DF80);
  }
  return result;
}

uint64_t sub_1000AE4A4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AE4DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000AE50C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_1000AE51C(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C5024(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1000AE524()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000AE534()
{
  return sub_1000C5034(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000AE53C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AE574(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1000C505C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_1000AE57C()
{
  unint64_t result = qword_10015DF98;
  if (!qword_10015DF98)
  {
    sub_10001CB98(255, &qword_10015A880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DF98);
  }
  return result;
}

uint64_t sub_1000AE5E4()
{
  return swift_release();
}

uint64_t sub_1000AE5EC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1000AE69C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000AE7A4();
  uint64_t result = sub_10010A170();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_10003D9C8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000AE710(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100140138;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xC) {
    return 12;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000AE75C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000AE7A4()
{
  unint64_t result = qword_10015DFB0;
  if (!qword_10015DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DFB0);
  }
  return result;
}

uint64_t _s6FieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6FieldsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AE954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6FieldsOMa()
{
  return &_s6FieldsON;
}

unint64_t sub_1000AE990()
{
  unint64_t result = qword_10015DFB8;
  if (!qword_10015DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DFB8);
  }
  return result;
}

unint64_t sub_1000AE9EC(unsigned __int8 a1)
{
  unint64_t result = 0xD00000000000002ALL;
  if (a1 >= 2u) {
    return 0xD000000000000031;
  }
  return result;
}

unint64_t sub_1000AEA48(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x7370657473;
      break;
    case 4:
      unint64_t result = 0x6D69547472617473;
      break;
    case 5:
      unint64_t result = 0x656D6954646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AEB2C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015E0F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000B14BC();
  sub_10010AE60();
  char v17 = 0;
  sub_10010AC10();
  if (!v2)
  {
    char v16 = *(unsigned char *)(v3 + 16);
    char v15 = 1;
    sub_1000B15C8();
    sub_10010AC00();
    char v14 = 2;
    sub_10010ABC0();
    char v13 = 3;
    sub_10010ABC0();
    _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    char v12 = 4;
    sub_100109460();
    sub_1000B13B4(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    char v11 = 5;
    sub_10010AC00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AEDB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v22 - v7;
  uint64_t v25 = sub_100004BD4(&qword_10015E0D8);
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v9 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  v26 = a1;
  sub_10000B718(a1, v12);
  sub_1000B14BC();
  char v13 = v27;
  sub_10010AE50();
  if (v13) {
    return sub_10000B7B0((uint64_t)v26);
  }
  uint64_t v14 = (uint64_t)v8;
  v27 = v6;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v34 = 0;
  *(void *)char v11 = sub_10010AB70();
  *((void *)v11 + 1) = v17;
  char v32 = 1;
  sub_1000B1510();
  sub_10010AB60();
  v11[16] = v33;
  char v31 = 2;
  *((void *)v11 + 3) = sub_10010AB20();
  *((void *)v11 + 4) = v18;
  char v30 = 3;
  *((void *)v11 + 5) = sub_10010AB20();
  *((void *)v11 + 6) = v19;
  sub_100109460();
  char v29 = 4;
  uint64_t v22 = sub_1000B13B4(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  sub_100012FA4(v14, (uint64_t)&v11[*(int *)(v9 + 32)]);
  char v28 = 5;
  uint64_t v20 = (uint64_t)v27;
  sub_10010AB60();
  (*(void (**)(void, uint64_t))(v15 + 8))(0, v25);
  sub_100012FA4(v20, (uint64_t)&v11[*(int *)(v9 + 36)]);
  sub_1000B1564((uint64_t)v11, v16);
  sub_10000B7B0((uint64_t)v26);
  return sub_1000B1460((uint64_t)v11);
}

uint64_t sub_1000AF23C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000811EC(*a1, *a2);
}

Swift::Int sub_1000AF248()
{
  return sub_100076594();
}

uint64_t sub_1000AF250()
{
  return sub_100076728();
}

Swift::Int sub_1000AF258()
{
  return sub_1000767B8();
}

uint64_t sub_1000AF260@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000B1A34(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000AF290@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000AE9EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000AF2BC()
{
  return sub_100109F00();
}

uint64_t sub_1000AF31C()
{
  return sub_100109EC0();
}

unint64_t sub_1000AF36C()
{
  return sub_1000AEA48(*v0);
}

uint64_t sub_1000AF374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B1A80(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AF39C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1000AF3A8(uint64_t a1)
{
  unint64_t v2 = sub_1000B14BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AF3E4(uint64_t a1)
{
  unint64_t v2 = sub_1000B14BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AF420@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AEDB4(a1, a2);
}

uint64_t sub_1000AF438(void *a1)
{
  return sub_1000AEB2C(a1);
}

uint64_t sub_1000AF450(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100004BD4(&qword_10015A1F8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling19MotionActivityAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_11;
  }
  swift_retain();
  sub_100025E0C((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_11:
    sub_10000B9CC((uint64_t)v7, &qword_10015A1F8);
    return 0;
  }
  sub_1000B13FC((uint64_t)v7, (uint64_t)v11);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  if (a2 && (v12 == a1 ? (BOOL v14 = v13 == a2) : (BOOL v14 = 0), v14 || (sub_10010ACA0() & 1) != 0))
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10009EE24(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v18 = *((void *)v15 + 2);
    unint64_t v17 = *((void *)v15 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v15 = sub_10009EE24((double *)(v17 > 1), v18 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v18 + 1;
    uint64_t v19 = &v15[2 * v18];
    *((void *)v19 + 4) = v12;
    *((void *)v19 + 5) = v13;
  }
  uint64_t v21 = v11[5];
  uint64_t v20 = v11[6];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_10009EE24(0, *((void *)v15 + 2) + 1, 1, v15);
  }
  unint64_t v23 = *((void *)v15 + 2);
  unint64_t v22 = *((void *)v15 + 3);
  if (v23 >= v22 >> 1) {
    uint64_t v15 = sub_10009EE24((double *)(v22 > 1), v23 + 1, 1, v15);
  }
  *((void *)v15 + 2) = v23 + 1;
  uint64_t v24 = &v15[2 * v23];
  *((void *)v24 + 4) = v21;
  *((void *)v24 + 5) = v20;
  uint64_t v16 = sub_100042280(8236, 0xE200000000000000, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_1000B1460((uint64_t)v11);
  return v16;
}

uint64_t sub_1000AF724()
{
  uint64_t v1 = sub_100109CE0();
  __chkstk_darwin(v1 - 8);
  v29[2] = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100109CC0();
  __chkstk_darwin(v3 - 8);
  v29[1] = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_10015E100);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004BD4(&qword_10015A1F8);
  __chkstk_darwin(v12 - 8);
  BOOL v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100109520();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_100004BD4(&qword_10015E108);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109500();
  sub_1000B161C();
  sub_100108FA0();
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling19MotionActivityAsset_metadata)) {
    goto LABEL_5;
  }
  swift_retain();
  sub_100025E0C((uint64_t)v14);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8))
  {
    uint64_t v20 = &qword_10015A1F8;
    uint64_t v21 = (uint64_t)v14;
  }
  else
  {
    sub_1000B1564((uint64_t)v14, (uint64_t)v11);
    sub_10000B9CC((uint64_t)v14, &qword_10015A1F8);
    uint64_t v24 = *((void *)v11 + 5);
    uint64_t v25 = *((void *)v11 + 6);
    swift_bridgeObjectRetain();
    sub_1000B1460((uint64_t)v11);
    if (!v25) {
      goto LABEL_5;
    }
    uint64_t v30 = v24;
    uint64_t v31 = v25;
    sub_1000A36D0();
    sub_1000B1670();
    sub_100109C20();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_100004BD4(&qword_10015E120);
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) != 1)
    {
      sub_100109750();
      uint64_t v28 = v30;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
      sub_100109CB0();
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      sub_100109CA0(v32);
      uint64_t v30 = v28;
      sub_100109C90();
      v33._countAndFlagsBits = 0x2973287065747320;
      v33._object = (void *)0xE800000000000000;
      sub_100109CA0(v33);
      sub_100109CD0();
      sub_100109510();
      uint64_t v22 = sub_100109D60();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return v22;
    }
    uint64_t v20 = &qword_10015E100;
    uint64_t v21 = (uint64_t)v7;
  }
  sub_10000B9CC(v21, v20);
LABEL_5:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return 0;
}

uint64_t sub_1000AFC40()
{
  return swift_release();
}

id sub_1000AFC50()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19MotionActivityAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000AFC98()
{
  return _s19MotionActivityAssetCMa(0);
}

uint64_t _s19MotionActivityAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015DFE8);
}

uint64_t sub_1000AFCC0()
{
  return swift_updateClassMetadata2();
}

void *sub_1000AFD04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    uint64_t v10 = *(int *)(a3 + 32);
    __dst = (void *)(a1 + v10);
    char v11 = (char *)a2 + v10;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v12 = sub_100109460();
    uint64_t v13 = *(void *)(v12 - 8);
    BOOL v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_1000AFF60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_100109460();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t sub_1000B0098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v11 = sub_100109460();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1000B02A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_1000B0584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1000B0764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_100109460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 36);
  int v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t sub_1000B0A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B0A2C);
}

uint64_t sub_1000B0A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000B0AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B0AF4);
}

uint64_t sub_1000B0AF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s19MotionActivityAssetC18MotionActivityDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015E050);
}

void sub_1000B0BC0()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000B0C6C()
{
  return swift_retain();
}

uint64_t sub_1000B0C7C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling19MotionActivityAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000B0C94(uint64_t a1, uint64_t a2)
{
  return sub_1000AF450(a1, a2);
}

uint64_t sub_1000B0CB8()
{
  return sub_1000AF450(0, 0);
}

id sub_1000B0CE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100109520();
  __chkstk_darwin(v2 - 8);
  v42[1] = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100109CE0();
  __chkstk_darwin(v4 - 8);
  v42[0] = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v43 = (char *)v42 - v10;
  uint64_t v11 = sub_100109880();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004BD4(&qword_10015A1F8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  int v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling19MotionActivityAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_6;
  }
  swift_retain();
  sub_100025E0C((uint64_t)v17);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_6:
    sub_10000B9CC((uint64_t)v17, &qword_10015A1F8);
    return 0;
  }
  sub_1000B13FC((uint64_t)v17, (uint64_t)v21);
  sub_1001097F0();
  id v22 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class isa = sub_1001097B0().super.isa;
  id v24 = [v22 initWithContentType:isa];

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_bridgeObjectRetain();
  NSString v25 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v26 = v43;
  [v24 setDisplayName:v25];

  sub_1000AF724();
  if (v27)
  {
    NSString v28 = sub_100109CF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v28 = 0;
  }
  [v24 setContentDescription:v28];

  sub_10006BBA8((uint64_t)&v21[*(int *)(v18 + 32)], (uint64_t)v9);
  uint64_t v29 = sub_100109460();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v9, 1, v29) == 1)
  {
    uint64_t v31 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    if (v31 && (id v32 = [v31 entry]) != 0)
    {
      Swift::String v33 = v32;
      sub_100072EE4(v26);

      uint64_t v34 = 0;
    }
    else
    {
      uint64_t v34 = 1;
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v26, v34, 1, v29);
    sub_10000B9CC((uint64_t)v9, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v30 + 32))(v26, v9, v29);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  sub_100109C80();
  sub_100109510();
  uint64_t v35 = sub_100109D60();
  uint64_t v37 = v36;
  sub_100004BD4((uint64_t *)&unk_10015F2B0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_100122230;
  *(void *)(v38 + 32) = sub_100084A54(v35, v37, (uint64_t)v26);
  *(void *)(v38 + 40) = v39;
  Class v40 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v24 setAlternateNames:v40];
  swift_bridgeObjectRelease();

  sub_10000B9CC((uint64_t)v26, (uint64_t *)&unk_10015CDE0);
  sub_1000B1460((uint64_t)v21);
  return v24;
}

id sub_1000B1300()
{
  return sub_1000B0CE4();
}

uint64_t sub_1000B1324()
{
  return sub_1000B13B4(&qword_10015A200, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa);
}

uint64_t sub_1000B136C()
{
  return sub_1000B13B4(&qword_10015E098, (void (*)(uint64_t))_s19MotionActivityAssetC18MotionActivityDataVMa);
}

uint64_t sub_1000B13B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B13FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1460(uint64_t a1)
{
  uint64_t v2 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000B14BC()
{
  unint64_t result = qword_10015E0E0;
  if (!qword_10015E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E0E0);
  }
  return result;
}

unint64_t sub_1000B1510()
{
  unint64_t result = qword_10015E0E8;
  if (!qword_10015E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E0E8);
  }
  return result;
}

uint64_t sub_1000B1564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000B15C8()
{
  unint64_t result = qword_10015E0F8;
  if (!qword_10015E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E0F8);
  }
  return result;
}

unint64_t sub_1000B161C()
{
  unint64_t result = qword_10015E110;
  if (!qword_10015E110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E110);
  }
  return result;
}

unint64_t sub_1000B1670()
{
  unint64_t result = qword_10015E118;
  if (!qword_10015E118)
  {
    sub_100012F08(&qword_10015E108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E118);
  }
  return result;
}

unsigned char *_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B1798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysOMa()
{
  return &_s19MotionActivityAssetC18MotionActivityDataV10CodingKeysON;
}

unsigned char *_s19MotionActivityAssetC22MotionActivityTypeEnumOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B189CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19MotionActivityAssetC22MotionActivityTypeEnumOMa()
{
  return &_s19MotionActivityAssetC22MotionActivityTypeEnumON;
}

unint64_t sub_1000B18D8()
{
  unint64_t result = qword_10015E128;
  if (!qword_10015E128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E128);
  }
  return result;
}

unint64_t sub_1000B1930()
{
  unint64_t result = qword_10015E130;
  if (!qword_10015E130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E130);
  }
  return result;
}

unint64_t sub_1000B1988()
{
  unint64_t result = qword_10015E138;
  if (!qword_10015E138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E138);
  }
  return result;
}

unint64_t sub_1000B19E0()
{
  unint64_t result = qword_10015E140;
  if (!qword_10015E140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E140);
  }
  return result;
}

uint64_t sub_1000B1A34(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001402A0;
  v6._object = a2;
  unint64_t v4 = sub_10010AAF0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000B1A80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100111E30 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100111E50 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7370657473 && a2 == 0xE500000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1000B1D14()
{
  unint64_t result = qword_10015E148;
  if (!qword_10015E148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E148);
  }
  return result;
}

uint64_t sub_1000B1D68()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E150);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015E150);
  if (qword_100158C40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E090);
  Swift::OpaquePointer v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000B1E30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 369) = a5;
  *(unsigned char *)(v6 + 368) = a4;
  *(void *)(v6 + 256) = a3;
  *(void *)(v6 + 264) = a6;
  *(void *)(v6 + 240) = a1;
  *(void *)(v6 + 248) = a2;
  uint64_t v7 = sub_100004BD4(&qword_10015E228);
  *(void *)(v6 + 272) = v7;
  *(void *)(v6 + 280) = *(void *)(v7 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  sub_100004BD4(&qword_10015A5F0);
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = swift_task_alloc();
  *(void *)(v6 + 312) = sub_10010A060();
  *(void *)(v6 + 320) = sub_10010A050();
  uint64_t v9 = sub_100109FF0();
  *(void *)(v6 + 328) = v9;
  *(void *)(v6 + 336) = v8;
  return _swift_task_switch(sub_1000B1F78, v9, v8);
}

uint64_t sub_1000B1F78()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    Swift::OpaquePointer v3 = (_OWORD *)(v0 + 16);
    char v37 = *(unsigned char *)(v0 + 369);
    uint64_t v4 = v1 + 32;
    uint64_t v36 = sub_10010A080();
    uint64_t v5 = *(void *)(v36 - 8);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v34 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    Swift::String v33 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v38 = v2;
      uint64_t v7 = *(void *)(v0 + 296);
      uint64_t v8 = *(void *)(v0 + 304);
      uint64_t v9 = *(void **)(v0 + 264);
      char v10 = *(unsigned char *)(v0 + 368);
      long long v12 = *(_OWORD *)(v4 + 16);
      long long v11 = *(_OWORD *)(v4 + 32);
      *Swift::OpaquePointer v3 = *(_OWORD *)v4;
      *(_OWORD *)(v0 + 32) = v12;
      *(_OWORD *)(v0 + 48) = v11;
      long long v14 = *(_OWORD *)(v4 + 64);
      long long v13 = *(_OWORD *)(v4 + 80);
      long long v15 = *(_OWORD *)(v4 + 48);
      *(void *)(v0 + 112) = *(void *)(v4 + 96);
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      *(_OWORD *)(v0 + 64) = v15;
      v35(v8, 1, 1, v36);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      uint64_t v17 = (void *)(v16 + 16);
      *(void *)(v16 + 24) = 0;
      long long v18 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v16 + 96) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v16 + 112) = v18;
      *(void *)(v16 + 128) = *(void *)(v0 + 112);
      long long v19 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v16 + 32) = *v3;
      *(_OWORD *)(v16 + 48) = v19;
      long long v20 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v16 + 64) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v16 + 80) = v20;
      *(unsigned char *)(v16 + 136) = v10;
      *(unsigned char *)(v16 + 137) = v37;
      *(void *)(v16 + 144) = v9;
      sub_1000B47C8(v8, v7);
      LODWORD(v8) = (*v34)(v7, 1, v36);
      sub_1000B4830(v0 + 16);
      sub_1000B4830(v0 + 16);
      id v21 = v9;
      uint64_t v22 = *(void *)(v0 + 296);
      if (v8 == 1)
      {
        sub_10004EC28(*(void *)(v0 + 296));
        if (!*v17) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_10010A070();
        (*v33)(v22, v36);
        if (!*v17)
        {
LABEL_8:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_100109FF0();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v26 = **(void **)(v0 + 248);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_10015E240;
      *(void *)(v27 + 24) = v16;
      sub_100004BD4(&qword_10015D978);
      uint64_t v28 = v25 | v23;
      if (v25 | v23)
      {
        uint64_t v28 = v0 + 184;
        *(void *)(v0 + 184) = 0;
        *(void *)(v0 + 192) = 0;
        *(void *)(v0 + 200) = v23;
        *(void *)(v0 + 208) = v25;
      }
      uint64_t v6 = *(void *)(v0 + 304);
      *(void *)(v0 + 216) = 1;
      *(void *)(v0 + 224) = v28;
      *(void *)(v0 + 232) = v26;
      swift_task_create();
      swift_release();
      sub_1000B4974(v0 + 16);
      sub_10004EC28(v6);
      v4 += 104;
      uint64_t v2 = v38 - 1;
      if (v38 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_100004BD4(&qword_10015D978);
  sub_10010A020();
  *(void *)(v0 + 344) = _swiftEmptyArrayStorage;
  uint64_t v29 = sub_10010A050();
  *(void *)(v0 + 352) = v29;
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1000B2340;
  uint64_t v31 = *(void *)(v0 + 272);
  return TaskGroup.Iterator.next(isolation:)(v0 + 120, v29, &protocol witness table for MainActor, v31);
}

uint64_t sub_1000B2340()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_1000B2484, v3, v2);
}

uint64_t sub_1000B2484()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void **)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v5 = *(void **)(v0 + 176);
    uint64_t v22 = *(void **)(v0 + 128);
    id v6 = v22;
    id v19 = v1;
    sub_1000B4610(v4, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(double **)(v0 + 344);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v8 = sub_10009EF34(0, *((void *)v8 + 2) + 1, 1, *(double **)(v0 + 344));
    }
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_10009EF34((double *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    long long v11 = &v8[8 * v10];
    *((void *)v11 + 4) = v19;
    *((void *)v11 + 5) = v22;
    *((unsigned char *)v11 + 48) = v2;
    *((unsigned char *)v11 + 49) = BYTE1(v2) & 1;
    *((void *)v11 + 7) = v21;
    *((unsigned char *)v11 + 64) = v3 & 1;
    *((unsigned char *)v11 + 65) = BYTE1(v3) & 1;
    *((unsigned char *)v11 + 66) = BYTE2(v3) & 1;
    *((void *)v11 + 9) = v20;
    *((void *)v11 + 10) = v4;
    *((void *)v11 + 11) = v5;
    sub_1000B49C8(v1, v22, v2, v21, v3, v20, v4, v5);
    *(void *)(v0 + 344) = v8;
    uint64_t v12 = sub_10010A050();
    *(void *)(v0 + 352) = v12;
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v13;
    *long long v13 = v0;
    v13[1] = sub_1000B2340;
    uint64_t v14 = *(void *)(v0 + 272);
    return TaskGroup.Iterator.next(isolation:)(v0 + 120, v12, &protocol witness table for MainActor, v14);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v16 = *(void **)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    swift_release();
    *uint64_t v16 = v15;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_1000B26F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a7;
  *(unsigned char *)(v7 + 57) = a6;
  *(unsigned char *)(v7 + 56) = a5;
  *(void *)(v7 + 32) = a1;
  return _swift_task_switch(sub_1000B271C, 0, 0);
}

uint64_t sub_1000B271C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 40);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = (objc_class *)_s15MOMapAnnotationCMa();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  id v6 = &v5[OBJC_IVAR____TtCC21JournalShareExtension10MapManager15MOMapAnnotation_title];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtCC21JournalShareExtension10MapManager15MOMapAnnotation_coordinate];
  *(void *)uint64_t v7 = v2;
  *((void *)v7 + 1) = v3;
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  [v0 initWith];
  int v8 = *((unsigned __int8 *)v1 + 32);
  char v9 = *((unsigned char *)v1 + 56);
  long long v11 = (void *)v1[2];
  uint64_t v10 = v1[3];
  uint64_t v12 = *(void *)(v0 + 40);
  if (!v11) {
    goto LABEL_6;
  }
  unint64_t v13 = *(void *)(v12 + 48);
  uint64_t v14 = *(void *)(v12 + 40) & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v13) & 0xF;
  }
  char v15 = v14 != 0;
  if (v14)
  {
    char v16 = 0;
  }
  else
  {
LABEL_6:
    char v15 = 0;
    char v16 = *(double *)(v12 + 80) > 150.0;
  }
  char v26 = *(unsigned char *)(v0 + 57);
  char v17 = *(unsigned char *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 32);
  if (v8) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v10;
  }
  id v20 = [*(id *)(v0 + 48) traitCollection];
  id v21 = sub_10004F0F8(v11, v9, v15, v16, v20);
  uint64_t v23 = v22;

  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 17) = v9;
  *(void *)(v18 + 24) = v19;
  *(unsigned char *)(v18 + 32) = (v26 & 1) == 0;
  *(unsigned char *)(v18 + 33) = v15;
  *(unsigned char *)(v18 + 34) = v16;
  *(void *)(v18 + 40) = 0x4000000000000000;
  *(void *)(v18 + 48) = v21;
  *(void *)(v18 + 56) = v23;
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t _s36MOSuggestionAssetMapSnapshotProviderCMa()
{
  return self;
}

double *sub_1000B2910(double *a1)
{
  uint64_t v2 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((void *)a1 + 2) < 3uLL)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v36 = (int *)v4;
    if (qword_100158BD8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100109960();
    sub_100007CB8(v7, (uint64_t)qword_10015E150);
    int v8 = sub_100109940();
    os_log_type_t v9 = sub_10010A2F0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetMapsClusterer] Building dendrogram", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = objc_allocWithZone((Class)_s30MOSuggestionAssetMapsClustererCMa());
    uint64_t v12 = swift_bridgeObjectRetain();
    unint64_t v13 = sub_100051854(v12, 1.0);
    sub_100051B38();
    uint64_t v14 = sub_100052A4C();
    int64_t v15 = *((void *)v14 + 2);
    if (v15)
    {
      uint64_t v35 = v13;
      v41 = _swiftEmptyArrayStorage;
      sub_1000BDDC4(0, v15, 0);
      uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
      uint64_t v34 = v14;
      uint64_t v17 = (uint64_t)v14 + ((v16 + 32) & ~v16);
      uint64_t v37 = *(void *)(v3 + 72);
      a1 = v41;
      uint64_t v18 = v36;
      do
      {
        sub_100041C30(v17, (uint64_t)v6);
        uint64_t v19 = *v6;
        uint64_t v20 = v6[1];
        uint64_t v21 = v18[12];
        uint64_t v22 = (uint64_t *)((char *)v6 + v18[11]);
        uint64_t v23 = v22[1];
        uint64_t v40 = *v22;
        uint64_t v24 = v6[3];
        uint64_t v25 = *(void **)((char *)v6 + v18[9]);
        if (v24 >= 2) {
          uint64_t v26 = v6[3];
        }
        else {
          uint64_t v26 = 0;
        }
        uint64_t v38 = v26;
        int v39 = *((unsigned __int8 *)v6 + v21);
        uint64_t v27 = *(uint64_t *)((char *)v6 + v18[13]);
        id v28 = v25;
        swift_bridgeObjectRetain();
        sub_100041C94((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000BDDC4(0, *((void *)a1 + 2) + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        unint64_t v30 = *((void *)a1 + 2);
        unint64_t v29 = *((void *)a1 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_1000BDDC4(v29 > 1, v30 + 1, 1);
          uint64_t v18 = v36;
          a1 = v41;
        }
        *((void *)a1 + 2) = v30 + 1;
        uint64_t v31 = &a1[13 * v30];
        *((void *)v31 + 4) = v19;
        *((void *)v31 + 5) = v20;
        uint64_t v32 = v38;
        *((void *)v31 + 6) = v25;
        *((void *)v31 + 7) = v32;
        *((unsigned char *)v31 + 64) = v24 < 2;
        *((void *)v31 + 9) = v40;
        *((void *)v31 + 10) = v23;
        *((unsigned char *)v31 + 88) = v39;
        v31[12] = 0.0;
        v31[13] = 0.0;
        *((void *)v31 + 14) = v27;
        v17 += v37;
        v31[15] = 0.0;
        v31[16] = -2.68156159e154;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
  }
  return a1;
}

#error "1000B3834: switch analysis failed: failed to propagate the switch expression (funcsize=966)"

uint64_t sub_1000B3F20(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 152) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  *(void *)(v3 + 80) = sub_10010A060();
  *(void *)(v3 + 88) = sub_10010A050();
  uint64_t v5 = sub_100109FF0();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = v4;
  return _swift_task_switch(sub_1000B3FC0, v5, v4);
}

uint64_t sub_1000B3FC0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v4 = sub_1000B2910((double *)v2);
  *(void *)(v0 + 112) = v4;
  BOOL v5 = *(void *)(v2 + 16) == 1;
  uint64_t v6 = sub_1000B2C6C(v2, v4, v3, v1, 1);
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = sub_100004BD4(&qword_10015D978);
  uint64_t v8 = sub_100004BD4(&qword_10015E208);
  uint64_t v9 = sub_10010A050();
  *(void *)(v0 + 128) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *(void *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 24) = v3;
  *(unsigned char *)(v10 + 25) = v5;
  *(void *)(v10 + 32) = v6;
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  *id v11 = v0;
  v11[1] = sub_1000B414C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 56, v7, v8, v9, &protocol witness table for MainActor, &unk_10015E218, v10, v7);
}

uint64_t sub_1000B414C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_1000B42D0, v3, v2);
}

uint64_t sub_1000B42D0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_10010A9D0();
    uint64_t v3 = 0;
    do
    {
      uint64_t v5 = *(void **)(v1 + v3 + 32);
      uint64_t v4 = *(void **)(v1 + v3 + 40);
      char v6 = *(unsigned char *)(v1 + v3 + 48);
      char v7 = *(unsigned char *)(v1 + v3 + 49);
      uint64_t v8 = *(void *)(v1 + v3 + 56);
      char v9 = *(unsigned char *)(v1 + v3 + 64);
      char v10 = *(unsigned char *)(v1 + v3 + 65);
      char v11 = *(unsigned char *)(v1 + v3 + 66);
      uint64_t v12 = *(void *)(v1 + v3 + 72);
      uint64_t v13 = *(void **)(v1 + v3 + 80);
      uint64_t v14 = *(void **)(v1 + v3 + 88);
      *(void *)(v0 + 16) = v4;
      *(unsigned char *)(v0 + 24) = v6;
      *(unsigned char *)(v0 + 25) = v7;
      *(void *)(v0 + 32) = v8;
      *(unsigned char *)(v0 + 40) = v9;
      *(unsigned char *)(v0 + 41) = v10;
      *(unsigned char *)(v0 + 42) = v11;
      *(void *)(v0 + 48) = v12;
      id v15 = v4;
      id v16 = v5;
      sub_1000B4610(v13, v14);
      id v17 = v16;
      id v18 = v15;
      sub_1000B4610(v13, v14);
      sub_100038960(v13, v14);

      id v19 = v17;
      id v20 = v18;
      sub_1000B4610(v13, v14);
      sub_100038960(v13, v14);

      id v21 = v19;
      id v22 = v20;
      sub_1000B4610(v13, v14);

      id v23 = objc_allocWithZone((Class)_s19MOPOIAnnotationViewCMa());
      sub_100037CEC((uint64_t)v17, (long long *)(v0 + 16), v13, v14);

      sub_100038960(v13, v14);
      sub_10010A9B0();
      sub_10010A9E0();
      sub_10010A9F0();
      sub_10010A9C0();
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void **)(v0 + 120);
  sub_1000B4650();
  Class isa = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v24 setAnnotationViews:isa];

  uint64_t v26 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v27 = *(void *)(v0 + 120);
  return v26(v27);
}

uint64_t sub_1000B4540(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 25);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 24);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *char v10 = v3;
  v10[1] = sub_1000091E4;
  return sub_1000B1E30(a1, a2, v6, v9, v7, v8);
}

id sub_1000B4610(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

unint64_t sub_1000B4650()
{
  unint64_t result = qword_10015E220;
  if (!qword_10015E220)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015E220);
  }
  return result;
}

uint64_t sub_1000B4690()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1000B46F0(uint64_t a1)
{
  uint64_t v4 = v1 + 32;
  char v5 = *(unsigned char *)(v1 + 136);
  char v6 = *(unsigned char *)(v1 + 137);
  uint64_t v7 = *(void *)(v1 + 144);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_1000090F0;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v7;
  *(unsigned char *)(v8 + 57) = v6;
  *(unsigned char *)(v8 + 56) = v5;
  *(void *)(v8 + 32) = a1;
  return _swift_task_switch(sub_1000B271C, 0, 0);
}

uint64_t sub_1000B47C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B4830(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000B4884()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B48BC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_1000090F0;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015E238 + dword_10015E238);
  return v6(a1, v4);
}

uint64_t sub_1000B4974(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

void sub_1000B49C8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  if (a1)
  {

    sub_100038960(a7, a8);
  }
}

uint64_t sub_1000B4A20()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E250);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015E250);
  if (qword_100158C18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E018);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000B4AE8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100004BD4((uint64_t *)&unk_10015A850);
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_10010A4C0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  if (qword_100158C98 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10016E178;
  v2[8] = qword_10016E178;
  return _swift_task_switch(sub_1000B4C10, v4, 0);
}

uint64_t sub_1000B4C10()
{
  *(CFAbsoluteTime *)(v0 + 72) = CFAbsoluteTimeGetCurrent();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000B4CB4;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_1000B8F64(v2, 0, 1);
}

uint64_t sub_1000B4CB4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000B4DB0, 0, 0);
}

uint64_t sub_1000B4DB0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  v0[11] = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000B4ED4;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000B4ED4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1000B5048, 0, 0);
}

uint64_t sub_1000B5048()
{
  return _swift_task_switch(sub_1000B5064, *(void *)(v0 + 64), 0);
}

uint64_t sub_1000B5064()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (char *)v0[2];
  uint64_t v3 = &v2[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id];
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  sub_1000B8D20(v1);
  sub_10000B9CC(v1, (uint64_t *)&unk_10015A850);
  sub_1000BAAE8(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000B51A0()
{
  v1[6] = v0;
  uint64_t v2 = sub_100109070();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_1001091E0();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  sub_100004BD4((uint64_t *)&unk_100159D40);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = type metadata accessor for AssetAttachment.AssetType(0);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_1000B5390, 0, 0);
}

uint64_t sub_1000B5390()
{
  uint64_t v131 = v0;
  uint64_t v1 = (unint64_t *)(*(void *)(v0 + 48)
                          + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments);
  swift_beginAccess();
  unint64_t v2 = *v1;
  *(void *)(v0 + 168) = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10010AA80();
    *(void *)(v0 + 176) = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v127 = *(uint64_t (**)(void))(v0 + 8);
    return v127();
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(void *)(v0 + 176) = v3;
  if (!v3) {
    goto LABEL_67;
  }
LABEL_3:
  if (v3 < 1) {
    __break(1u);
  }
  uint64_t v4 = 0;
  *(_DWORD *)(v0 + 256) = enum case for URL.DirectoryHint.inferFromPath(_:);
  while (1)
  {
    *(void *)(v0 + 184) = v4;
    uint64_t v5 = *(void *)(v0 + 168);
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = sub_10010A920();
    }
    else
    {
      uint64_t v6 = *(void *)(v5 + 8 * v4 + 32);
      swift_retain();
    }
    *(void *)(v0 + 192) = v6;
    uint64_t v7 = v6 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
    sub_1000C3388(v6 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, *(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = *(void *)(v0 + 160);
        char v9 = type metadata accessor for AssetAttachment.AssetType;
        goto LABEL_11;
      case 2u:
        sub_1000C33F0(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v10 = 0x6F65646976;
        break;
      case 3u:
        sub_1000C33F0(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v10 = 0x6F69647561;
        break;
      case 4u:
        uint64_t v11 = *(void *)(v0 + 160);
        swift_bridgeObjectRelease();
        uint64_t v12 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
        sub_1000C33F0(v11 + *(int *)(v12 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v10 = 0x726568746FLL;
        break;
      default:
        uint64_t v8 = *(void *)(v0 + 160);
        char v9 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_11:
        sub_1000C33F0(v8, v9);
        uint64_t v10 = 0x6567616D69;
        break;
    }
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v13 = *(char **)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v6 + 16);
    sub_1000C7FA4(v13);
    sub_1000248D8((uint64_t)v13, v14, (uint64_t *)&unk_100159D40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
      break;
    }
    v41 = *(void **)(v0 + 120);
    (*(void (**)(void *, void, void))(*(void *)(v0 + 88) + 32))(v41, *(void *)(v0 + 128), *(void *)(v0 + 80));
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1000C9DFC(v41);
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = v44;
    if (v44)
    {
      uint64_t v117 = dword_10015E320;
      v118 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v118;
      void *v118 = v0;
      v118[1] = sub_1000B6348;
      v119 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015E320 + v117);
      uint64_t v120 = v17;
      uint64_t v121 = v10;
      uint64_t v122 = v42;
      uint64_t v123 = v44;
      goto LABEL_63;
    }
    swift_bridgeObjectRelease();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v45 = *(void *)(v0 + 112);
    uint64_t v46 = *(void *)(v0 + 120);
    uint64_t v47 = *(void *)(v0 + 80);
    uint64_t v48 = *(void *)(v0 + 88);
    v49 = *(void **)(v0 + 48);
    uint64_t v129 = sub_100109960();
    sub_100007CB8(v129, (uint64_t)qword_10015E6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v45, v46, v47);
    id v50 = v49;
    v51 = sub_100109940();
    os_log_type_t v52 = sub_10010A2D0();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = *(void *)(v0 + 112);
    uint64_t v55 = *(void *)(v0 + 80);
    v56 = *(void **)(v0 + 48);
    v57 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
    if (v53)
    {
      uint64_t v58 = swift_slowAlloc();
      v59 = (void *)swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 138412546;
      *(void *)(v58 + 4) = v56;
      void *v59 = v56;
      *(_WORD *)(v58 + 12) = 2080;
      sub_1000C3450((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v60 = sub_10010AC60();
      *(void *)(v58 + 14) = sub_1000C50D4(v60, v61, &v130);
      swift_bridgeObjectRelease();
      (*v57)(v54, v55);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "%@.saveAttachments error, failed to save file from sourceURL: %s", (uint8_t *)v58, 0x16u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*v57)(v54, v55);
    }

    if (qword_100158A68 != -1) {
      swift_once();
    }
    if (qword_10016DEA8)
    {
      uint64_t v71 = *(unsigned int *)(v0 + 256);
      uint64_t v72 = *(void *)(v0 + 96);
      uint64_t v73 = *(void *)(v0 + 80);
      uint64_t v74 = *(void *)(v0 + 88);
      uint64_t v76 = *(void *)(v0 + 64);
      uint64_t v75 = *(void *)(v0 + 72);
      uint64_t v77 = *(void *)(v0 + 56);
      sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, v72);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 104))(v75, v71, v77);
      sub_10005058C();
      sub_1001091B0();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v73);
    }
    else
    {
      sub_1001090E0();
    }
    uint64_t v78 = *(void *)(v0 + 104);
    uint64_t v79 = *(void *)(v0 + 80);
    uint64_t v80 = *(void *)(v0 + 88);
    uint64_t v81 = sub_100109090();
    v83 = v82;
    v84 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v84(v78, v79);
    sub_100109090();
    v133._countAndFlagsBits = v81;
    v133._object = v83;
    BOOL v85 = sub_100109E70(v133);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v85)
    {
      id v86 = [self defaultManager];
      sub_1001090F0(v87);
      v89 = v88;
      *(void *)(v0 + 40) = 0;
      unsigned __int8 v90 = [v86 removeItemAtURL:v88 error:v0 + 40];

      v91 = *(void **)(v0 + 40);
      if (v90)
      {
        uint64_t v92 = *(void *)(v0 + 120);
        uint64_t v93 = *(void *)(v0 + 80);
        id v94 = v91;
        swift_release();
        uint64_t v95 = v92;
        uint64_t v96 = v93;
      }
      else
      {
        id v99 = v91;
        sub_100108FC0();

        swift_willThrow();
        if (qword_100158C10 != -1) {
          swift_once();
        }
        sub_100007CB8(v129, (uint64_t)qword_10015E6B8);
        swift_errorRetain();
        swift_errorRetain();
        v100 = sub_100109940();
        os_log_type_t v101 = sub_10010A2D0();
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v102 = swift_slowAlloc();
          v103 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v102 = 138412290;
          swift_errorRetain();
          uint64_t v104 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v102 + 4) = v104;
          void *v103 = v104;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v100, v101, "Error when removing attachment source file: %@", (uint8_t *)v102, 0xCu);
          sub_100004BD4((uint64_t *)&unk_100159D70);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
        }
        else
        {

          swift_release();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v113 = *(void *)(v0 + 120);
        uint64_t v114 = *(void *)(v0 + 80);
        swift_errorRelease();
        uint64_t v95 = v113;
        uint64_t v96 = v114;
      }
    }
    else
    {
      uint64_t v97 = *(void *)(v0 + 120);
      uint64_t v98 = *(void *)(v0 + 80);
      swift_release();
      uint64_t v95 = v97;
      uint64_t v96 = v98;
    }
    v84(v95, v96);
LABEL_59:
    uint64_t v115 = *(void *)(v0 + 176);
    uint64_t v116 = *(void *)(v0 + 184) + 1;
    sub_10000B9CC(*(void *)(v0 + 136), (uint64_t *)&unk_100159D40);
    if (v116 == v115) {
      goto LABEL_67;
    }
    uint64_t v4 = *(void *)(v0 + 184) + 1;
  }
  uint64_t v18 = *(void *)(v0 + 152);
  sub_10000B9CC(*(void *)(v0 + 128), (uint64_t *)&unk_100159D40);
  sub_1000C3388(v7, v18, type metadata accessor for AssetAttachment.AssetType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v20 = *(UIImage ***)(v0 + 152);
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    sub_1000C33F0((uint64_t)v20, type metadata accessor for AssetAttachment.AssetType);
    if (qword_100158C10 != -1) {
      swift_once();
    }
    v62 = *(void **)(v0 + 48);
    uint64_t v63 = sub_100109960();
    sub_100007CB8(v63, (uint64_t)qword_10015E6B8);
    id v64 = v62;
    v65 = sub_100109940();
    os_log_type_t v66 = sub_10010A2D0();
    BOOL v67 = os_log_type_enabled(v65, v66);
    v68 = *(void **)(v0 + 48);
    if (v67)
    {
      uint64_t v69 = swift_slowAlloc();
      v70 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 138412290;
      *(void *)(v69 + 4) = v68;
      void *v70 = v68;

      _os_log_impl((void *)&_mh_execute_header, v65, v66, "%@.saveAttachments error, nothing to save", (uint8_t *)v69, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_58;
  }
  id v21 = *v20;
  *(void *)(v0 + 216) = *v20;
  id v22 = UIImageHEICRepresentation(v21);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    v105 = *(void **)(v0 + 48);
    uint64_t v106 = sub_100109960();
    sub_100007CB8(v106, (uint64_t)qword_10015E6B8);
    id v107 = v105;
    v65 = sub_100109940();
    os_log_type_t v108 = sub_10010A2D0();
    BOOL v109 = os_log_type_enabled(v65, v108);
    v110 = *(void **)(v0 + 48);
    if (v109)
    {
      uint64_t v111 = swift_slowAlloc();
      v112 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v111 = 138412290;
      *(void *)(v111 + 4) = v110;
      void *v112 = v110;

      _os_log_impl((void *)&_mh_execute_header, v65, v108, "%@.saveAttachments error, imageData is nil", (uint8_t *)v111, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_58:

    swift_release();
    goto LABEL_59;
  }
  id v23 = v22;
  v128 = v21;
  uint64_t v24 = sub_100109250();
  unint64_t v26 = v25;

  *(void *)(v0 + 224) = v24;
  *(void *)(v0 + 232) = v26;
  uint64_t v27 = *(void *)(v6 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
  id v28 = *(void **)(v6 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID + 8);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1000CABBC(v24, v26, v27, v28, 0x63696568, (void *)0xE400000000000000);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 240) = v31;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v32 = *(void **)(v0 + 48);
    uint64_t v33 = sub_100109960();
    sub_100007CB8(v33, (uint64_t)qword_10015E6B8);
    id v34 = v32;
    uint64_t v35 = sub_100109940();
    os_log_type_t v36 = sub_10010A2D0();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void **)(v0 + 48);
    if (v37)
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 138412290;
      *(void *)(v39 + 4) = v38;
      *uint64_t v40 = v38;

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%@.saveAttachments error, failed to save image data", (uint8_t *)v39, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100007084(v24, v26);
    }
    else
    {
      sub_100007084(v24, v26);
    }
    swift_release();
    goto LABEL_59;
  }
  uint64_t v124 = dword_10015E320;
  v125 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v125;
  void *v125 = v0;
  v125[1] = sub_1000B73C0;
  v119 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015E320 + v124);
  uint64_t v120 = v17;
  uint64_t v121 = v10;
  uint64_t v122 = v29;
  uint64_t v123 = v31;
LABEL_63:
  return v119(v120, v121, 0xE500000000000000, v122, v123, 1);
}

uint64_t sub_1000B6348()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000B6494, 0, 0);
}

uint64_t sub_1000B6494()
{
  uint64_t v131 = v0;
  uint64_t v1 = &off_100158000;
  unint64_t v2 = &unk_10016D000;
LABEL_2:
  if (v1[333] != (_UNKNOWN *)-1)
  {
    swift_once();
    uint64_t v3 = (void *)v2[469];
    if (v3) {
      goto LABEL_4;
    }
LABEL_6:
    sub_1001090E0();
    goto LABEL_7;
  }
  uint64_t v3 = (void *)v2[469];
  if (!v3) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v4 = *(unsigned int *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 56);
  sub_10004FBE0(qword_10016DEA0, v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(v8, v4, v10);
  sub_10005058C();
  sub_1001091B0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
LABEL_7:
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = sub_100109090();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v17(v11, v12);
  sub_100109090();
  v133._countAndFlagsBits = v14;
  v133._object = v16;
  BOOL v18 = sub_100109E70(v133);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18)
  {
    id v19 = [self defaultManager];
    sub_1001090F0(v20);
    id v22 = v21;
    *(void *)(v0 + 40) = 0;
    unsigned __int8 v23 = [v19 removeItemAtURL:v21 error:v0 + 40];

    uint64_t v24 = *(void **)(v0 + 40);
    if (v23)
    {
      uint64_t v25 = *(void *)(v0 + 120);
      uint64_t v26 = *(void *)(v0 + 80);
      id v27 = v24;
      swift_release();
      uint64_t v28 = v25;
      uint64_t v29 = v26;
    }
    else
    {
      id v32 = v24;
      sub_100108FC0();

      swift_willThrow();
      if (qword_100158C10 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_100109960();
      sub_100007CB8(v33, (uint64_t)qword_10015E6B8);
      swift_errorRetain();
      swift_errorRetain();
      id v34 = sub_100109940();
      os_log_type_t v35 = sub_10010A2D0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        BOOL v37 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 138412290;
        swift_errorRetain();
        uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v36 + 4) = v38;
        *BOOL v37 = v38;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Error when removing attachment source file: %@", (uint8_t *)v36, 0xCu);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
      }
      else
      {

        swift_release();
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v39 = *(void *)(v0 + 120);
      uint64_t v40 = *(void *)(v0 + 80);
      swift_errorRelease();
      uint64_t v28 = v39;
      uint64_t v29 = v40;
    }
  }
  else
  {
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v31 = *(void *)(v0 + 80);
    swift_release();
    uint64_t v28 = v30;
    uint64_t v29 = v31;
  }
  v17(v28, v29);
  while (1)
  {
    uint64_t v41 = *(void *)(v0 + 176);
    uint64_t v42 = *(void *)(v0 + 184) + 1;
    sub_10000B9CC(*(void *)(v0 + 136), (uint64_t *)&unk_100159D40);
    if (v42 == v41) {
      break;
    }
    uint64_t v43 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v43;
    uint64_t v44 = *(void *)(v0 + 168);
    if ((v44 & 0xC000000000000001) != 0)
    {
      uint64_t v45 = sub_10010A920();
    }
    else
    {
      uint64_t v45 = *(void *)(v44 + 8 * v43 + 32);
      swift_retain();
    }
    *(void *)(v0 + 192) = v45;
    uint64_t v46 = v45 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
    sub_1000C3388(v45 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, *(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v47 = *(void *)(v0 + 160);
        uint64_t v48 = type metadata accessor for AssetAttachment.AssetType;
        goto LABEL_27;
      case 2u:
        sub_1000C33F0(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v49 = 0x6F65646976;
        break;
      case 3u:
        sub_1000C33F0(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v49 = 0x6F69647561;
        break;
      case 4u:
        uint64_t v50 = *(void *)(v0 + 160);
        swift_bridgeObjectRelease();
        uint64_t v51 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
        sub_1000C33F0(v50 + *(int *)(v51 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v49 = 0x726568746FLL;
        break;
      default:
        uint64_t v47 = *(void *)(v0 + 160);
        uint64_t v48 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_27:
        sub_1000C33F0(v47, v48);
        uint64_t v49 = 0x6567616D69;
        break;
    }
    uint64_t v53 = *(void *)(v0 + 128);
    os_log_type_t v52 = *(char **)(v0 + 136);
    uint64_t v55 = *(void *)(v0 + 80);
    uint64_t v54 = *(void *)(v0 + 88);
    uint64_t v56 = *(void *)(v45 + 16);
    sub_1000C7FA4(v52);
    sub_1000248D8((uint64_t)v52, v53, (uint64_t *)&unk_100159D40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v53, 1, v55) != 1)
    {
      uint64_t v96 = *(void **)(v0 + 120);
      (*(void (**)(void *, void, void))(*(void *)(v0 + 88) + 32))(v96, *(void *)(v0 + 128), *(void *)(v0 + 80));
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_1000C9DFC(v96);
      uint64_t v99 = v98;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 200) = v99;
      if (v99)
      {
        uint64_t v127 = dword_10015E320;
        v128 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v128;
        void *v128 = v0;
        v128[1] = sub_1000B6348;
        uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015E320
                                                                                         + v127);
        uint64_t v123 = v56;
        uint64_t v124 = v49;
        uint64_t v125 = v97;
        uint64_t v126 = v99;
        goto LABEL_61;
      }
      swift_bridgeObjectRelease();
      if (qword_100158C10 != -1) {
        swift_once();
      }
      uint64_t v100 = *(void *)(v0 + 112);
      uint64_t v101 = *(void *)(v0 + 120);
      uint64_t v102 = *(void *)(v0 + 80);
      uint64_t v103 = *(void *)(v0 + 88);
      uint64_t v104 = *(void **)(v0 + 48);
      uint64_t v105 = sub_100109960();
      sub_100007CB8(v105, (uint64_t)qword_10015E6B8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v100, v101, v102);
      id v106 = v104;
      id v107 = sub_100109940();
      os_log_type_t v108 = sub_10010A2D0();
      BOOL v109 = os_log_type_enabled(v107, v108);
      uint64_t v110 = *(void *)(v0 + 112);
      uint64_t v111 = *(void *)(v0 + 80);
      v112 = *(void **)(v0 + 48);
      uint64_t v113 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
      if (v109)
      {
        uint64_t v114 = swift_slowAlloc();
        uint64_t v115 = (void *)swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        *(_DWORD *)uint64_t v114 = 138412546;
        *(void *)(v114 + 4) = v112;
        *uint64_t v115 = v112;
        *(_WORD *)(v114 + 12) = 2080;
        sub_1000C3450((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v116 = sub_10010AC60();
        *(void *)(v114 + 14) = sub_1000C50D4(v116, v117, &v130);
        swift_bridgeObjectRelease();
        (*v113)(v110, v111);
        _os_log_impl((void *)&_mh_execute_header, v107, v108, "%@.saveAttachments error, failed to save file from sourceURL: %s", (uint8_t *)v114, 0x16u);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*v113)(v110, v111);
      }

      uint64_t v1 = &off_100158000;
      unint64_t v2 = (void *)&unk_10016D000;
      goto LABEL_2;
    }
    uint64_t v57 = *(void *)(v0 + 152);
    sub_10000B9CC(*(void *)(v0 + 128), (uint64_t *)&unk_100159D40);
    sub_1000C3388(v46, v57, type metadata accessor for AssetAttachment.AssetType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v59 = *(UIImage ***)(v0 + 152);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v129 = v49;
      uint64_t v60 = *v59;
      *(void *)(v0 + 216) = *v59;
      unint64_t v61 = UIImageHEICRepresentation(v60);
      if (v61)
      {
        v62 = v61;
        uint64_t v63 = sub_100109250();
        unint64_t v65 = v64;

        *(void *)(v0 + 224) = v63;
        *(void *)(v0 + 232) = v65;
        uint64_t v67 = *(void *)(v45 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
        os_log_type_t v66 = *(void **)(v45 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID + 8);
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_1000CABBC(v63, v65, v67, v66, 0x63696568, (void *)0xE400000000000000);
        uint64_t v70 = v69;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 240) = v70;
        if (v70)
        {
          uint64_t v120 = dword_10015E320;
          uint64_t v121 = (void *)swift_task_alloc();
          *(void *)(v0 + 248) = v121;
          *uint64_t v121 = v0;
          v121[1] = sub_1000B73C0;
          uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015E320
                                                                                           + v120);
          uint64_t v123 = v56;
          uint64_t v124 = v129;
          uint64_t v125 = v68;
          uint64_t v126 = v70;
LABEL_61:
          return v122(v123, v124, 0xE500000000000000, v125, v126, 1);
        }
        swift_bridgeObjectRelease();
        if (qword_100158C10 != -1) {
          swift_once();
        }
        uint64_t v71 = *(void **)(v0 + 48);
        uint64_t v72 = sub_100109960();
        sub_100007CB8(v72, (uint64_t)qword_10015E6B8);
        id v73 = v71;
        uint64_t v74 = sub_100109940();
        os_log_type_t v75 = sub_10010A2D0();
        BOOL v76 = os_log_type_enabled(v74, v75);
        uint64_t v77 = *(void **)(v0 + 48);
        if (v76)
        {
          uint64_t v78 = swift_slowAlloc();
          uint64_t v79 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v78 = 138412290;
          *(void *)(v78 + 4) = v77;
          *uint64_t v79 = v77;

          _os_log_impl((void *)&_mh_execute_header, v74, v75, "%@.saveAttachments error, failed to save image data", (uint8_t *)v78, 0xCu);
          sub_100004BD4((uint64_t *)&unk_100159D70);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_100007084(v63, v65);
        }
        else
        {
          sub_100007084(v63, v65);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_100158C10 != -1) {
          swift_once();
        }
        v88 = *(void **)(v0 + 48);
        uint64_t v89 = sub_100109960();
        sub_100007CB8(v89, (uint64_t)qword_10015E6B8);
        id v90 = v88;
        uint64_t v74 = sub_100109940();
        os_log_type_t v91 = sub_10010A2D0();
        BOOL v92 = os_log_type_enabled(v74, v91);
        uint64_t v93 = *(void **)(v0 + 48);
        if (v92)
        {
          uint64_t v94 = swift_slowAlloc();
          uint64_t v95 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v94 = 138412290;
          *(void *)(v94 + 4) = v93;
          *uint64_t v95 = v93;

          _os_log_impl((void *)&_mh_execute_header, v74, v91, "%@.saveAttachments error, imageData is nil", (uint8_t *)v94, 0xCu);
          sub_100004BD4((uint64_t *)&unk_100159D70);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000C33F0((uint64_t)v59, type metadata accessor for AssetAttachment.AssetType);
      if (qword_100158C10 != -1) {
        swift_once();
      }
      uint64_t v80 = *(void **)(v0 + 48);
      uint64_t v81 = sub_100109960();
      sub_100007CB8(v81, (uint64_t)qword_10015E6B8);
      id v82 = v80;
      uint64_t v74 = sub_100109940();
      os_log_type_t v83 = sub_10010A2D0();
      BOOL v84 = os_log_type_enabled(v74, v83);
      BOOL v85 = *(void **)(v0 + 48);
      if (v84)
      {
        uint64_t v86 = swift_slowAlloc();
        v87 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 138412290;
        *(void *)(v86 + 4) = v85;
        void *v87 = v85;

        _os_log_impl((void *)&_mh_execute_header, v74, v83, "%@.saveAttachments error, nothing to save", (uint8_t *)v86, 0xCu);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }

    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v118 = *(uint64_t (**)(void))(v0 + 8);
  return v118();
}

uint64_t sub_1000B73C0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000B750C, 0, 0);
}

uint64_t sub_1000B750C()
{
  uint64_t v132 = v0;
  uint64_t v1 = *(void **)(v0 + 216);
  sub_100007084(*(void *)(v0 + 224), *(void *)(v0 + 232));

  swift_release();
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184) + 1;
  sub_10000B9CC(*(void *)(v0 + 136), (uint64_t *)&unk_100159D40);
  if (v3 == v2)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  while (1)
  {
    uint64_t v10 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v10;
    uint64_t v11 = *(void *)(v0 + 168);
    if ((v11 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = sub_10010A920();
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 8 * v10 + 32);
      swift_retain();
    }
    *(void *)(v0 + 192) = v12;
    uint64_t v13 = v12 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
    sub_1000C3388(v12 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, *(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = *(void *)(v0 + 160);
        uint64_t v15 = type metadata accessor for AssetAttachment.AssetType;
        goto LABEL_15;
      case 2u:
        sub_1000C33F0(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v16 = 0x6F65646976;
        break;
      case 3u:
        sub_1000C33F0(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v16 = 0x6F69647561;
        break;
      case 4u:
        uint64_t v17 = *(void *)(v0 + 160);
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015CDF0);
        sub_1000C33F0(v17 + *(int *)(v18 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v16 = 0x726568746FLL;
        break;
      default:
        uint64_t v14 = *(void *)(v0 + 160);
        uint64_t v15 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_15:
        sub_1000C33F0(v14, v15);
        uint64_t v16 = 0x6567616D69;
        break;
    }
    uint64_t v20 = *(void *)(v0 + 128);
    id v19 = *(char **)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v23 = *(void *)(v12 + 16);
    sub_1000C7FA4(v19);
    sub_1000248D8((uint64_t)v19, v20, (uint64_t *)&unk_100159D40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
      break;
    }
    uint64_t v47 = *(void **)(v0 + 120);
    (*(void (**)(void *, void, void))(*(void *)(v0 + 88) + 32))(v47, *(void *)(v0 + 128), *(void *)(v0 + 80));
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1000C9DFC(v47);
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = v50;
    if (v50)
    {
      uint64_t v120 = dword_10015E320;
      uint64_t v121 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v121;
      *uint64_t v121 = v0;
      v121[1] = sub_1000B6348;
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015E320 + v120);
      uint64_t v123 = v23;
      uint64_t v124 = v16;
      uint64_t v125 = v48;
      uint64_t v126 = v50;
      goto LABEL_63;
    }
    swift_bridgeObjectRelease();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v51 = *(void *)(v0 + 112);
    uint64_t v52 = *(void *)(v0 + 120);
    uint64_t v53 = *(void *)(v0 + 80);
    uint64_t v54 = *(void *)(v0 + 88);
    uint64_t v55 = *(void **)(v0 + 48);
    uint64_t v56 = sub_100109960();
    sub_100007CB8(v56, (uint64_t)qword_10015E6B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v51, v52, v53);
    id v57 = v55;
    uint64_t v58 = sub_100109940();
    os_log_type_t v59 = sub_10010A2D0();
    BOOL v60 = os_log_type_enabled(v58, v59);
    uint64_t v61 = *(void *)(v0 + 112);
    uint64_t v62 = *(void *)(v0 + 80);
    uint64_t v63 = *(void **)(v0 + 48);
    unint64_t v64 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
    uint64_t v130 = v56;
    if (v60)
    {
      uint64_t v65 = swift_slowAlloc();
      os_log_type_t v66 = (void *)swift_slowAlloc();
      uint64_t v131 = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = 138412546;
      *(void *)(v65 + 4) = v63;
      *os_log_type_t v66 = v63;
      *(_WORD *)(v65 + 12) = 2080;
      sub_1000C3450((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v67 = sub_10010AC60();
      *(void *)(v65 + 14) = sub_1000C50D4(v67, v68, &v131);
      swift_bridgeObjectRelease();
      (*v64)(v61, v62);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "%@.saveAttachments error, failed to save file from sourceURL: %s", (uint8_t *)v65, 0x16u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*v64)(v61, v62);
    }

    if (qword_100158A68 != -1) {
      swift_once();
    }
    if (qword_10016DEA8)
    {
      uint64_t v76 = *(unsigned int *)(v0 + 256);
      uint64_t v77 = *(void *)(v0 + 96);
      uint64_t v78 = *(void *)(v0 + 80);
      uint64_t v79 = *(void *)(v0 + 88);
      uint64_t v81 = *(void *)(v0 + 64);
      uint64_t v80 = *(void *)(v0 + 72);
      uint64_t v82 = *(void *)(v0 + 56);
      sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, v77);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 104))(v80, v76, v82);
      sub_10005058C();
      sub_1001091B0();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
    }
    else
    {
      sub_1001090E0();
    }
    uint64_t v83 = *(void *)(v0 + 104);
    uint64_t v84 = *(void *)(v0 + 80);
    uint64_t v85 = *(void *)(v0 + 88);
    uint64_t v86 = sub_100109090();
    v88 = v87;
    uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v89(v83, v84);
    sub_100109090();
    v134._countAndFlagsBits = v86;
    v134._object = v88;
    BOOL v90 = sub_100109E70(v134);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v90)
    {
      id v91 = [self defaultManager];
      sub_1001090F0(v92);
      uint64_t v94 = v93;
      *(void *)(v0 + 40) = 0;
      unsigned __int8 v95 = [v91 removeItemAtURL:v93 error:v0 + 40];

      uint64_t v96 = *(void **)(v0 + 40);
      if (v95)
      {
        uint64_t v97 = *(void *)(v0 + 120);
        uint64_t v98 = *(void *)(v0 + 80);
        id v99 = v96;
        swift_release();
        uint64_t v100 = v97;
        uint64_t v101 = v98;
      }
      else
      {
        id v104 = v96;
        sub_100108FC0();

        swift_willThrow();
        if (qword_100158C10 != -1) {
          swift_once();
        }
        sub_100007CB8(v130, (uint64_t)qword_10015E6B8);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v105 = sub_100109940();
        os_log_type_t v106 = sub_10010A2D0();
        if (os_log_type_enabled(v105, v106))
        {
          uint64_t v107 = swift_slowAlloc();
          os_log_type_t v108 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v107 = 138412290;
          swift_errorRetain();
          uint64_t v109 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v107 + 4) = v109;
          *os_log_type_t v108 = v109;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v105, v106, "Error when removing attachment source file: %@", (uint8_t *)v107, 0xCu);
          sub_100004BD4((uint64_t *)&unk_100159D70);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
        }
        else
        {

          swift_release();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v118 = *(void *)(v0 + 120);
        uint64_t v119 = *(void *)(v0 + 80);
        swift_errorRelease();
        uint64_t v100 = v118;
        uint64_t v101 = v119;
      }
    }
    else
    {
      uint64_t v102 = *(void *)(v0 + 120);
      uint64_t v103 = *(void *)(v0 + 80);
      swift_release();
      uint64_t v100 = v102;
      uint64_t v101 = v103;
    }
    v89(v100, v101);
LABEL_8:
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v9 = *(void *)(v0 + 184) + 1;
    sub_10000B9CC(*(void *)(v0 + 136), (uint64_t *)&unk_100159D40);
    if (v9 == v8) {
      goto LABEL_2;
    }
  }
  uint64_t v24 = *(void *)(v0 + 152);
  sub_10000B9CC(*(void *)(v0 + 128), (uint64_t *)&unk_100159D40);
  sub_1000C3388(v13, v24, type metadata accessor for AssetAttachment.AssetType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v26 = *(UIImage ***)(v0 + 152);
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    sub_1000C33F0((uint64_t)v26, type metadata accessor for AssetAttachment.AssetType);
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v69 = *(void **)(v0 + 48);
    uint64_t v70 = sub_100109960();
    sub_100007CB8(v70, (uint64_t)qword_10015E6B8);
    id v71 = v69;
    uint64_t v72 = sub_100109940();
    os_log_type_t v73 = sub_10010A2D0();
    BOOL v74 = os_log_type_enabled(v72, v73);
    os_log_type_t v75 = *(void **)(v0 + 48);
    if (v74)
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      *(void *)(v6 + 4) = v75;
      *uint64_t v7 = v75;

      _os_log_impl((void *)&_mh_execute_header, v72, v73, "%@.saveAttachments error, nothing to save", (uint8_t *)v6, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_7;
  }
  id v27 = *v26;
  *(void *)(v0 + 216) = *v26;
  uint64_t v28 = UIImageHEICRepresentation(v27);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v110 = *(void **)(v0 + 48);
    uint64_t v111 = sub_100109960();
    sub_100007CB8(v111, (uint64_t)qword_10015E6B8);
    id v112 = v110;
    uint64_t v72 = sub_100109940();
    os_log_type_t v113 = sub_10010A2D0();
    BOOL v114 = os_log_type_enabled(v72, v113);
    uint64_t v115 = *(void **)(v0 + 48);
    if (v114)
    {
      uint64_t v116 = swift_slowAlloc();
      unint64_t v117 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v116 = 138412290;
      *(void *)(v116 + 4) = v115;
      *unint64_t v117 = v115;

      _os_log_impl((void *)&_mh_execute_header, v72, v113, "%@.saveAttachments error, imageData is nil", (uint8_t *)v116, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_7:

    swift_release();
    goto LABEL_8;
  }
  uint64_t v29 = v28;
  uint64_t v129 = v27;
  uint64_t v30 = sub_100109250();
  unint64_t v32 = v31;

  *(void *)(v0 + 224) = v30;
  *(void *)(v0 + 232) = v32;
  uint64_t v33 = *(void *)(v12 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
  id v34 = *(void **)(v12 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID + 8);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1000CABBC(v30, v32, v33, v34, 0x63696568, (void *)0xE400000000000000);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 240) = v37;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v38 = *(void **)(v0 + 48);
    uint64_t v39 = sub_100109960();
    sub_100007CB8(v39, (uint64_t)qword_10015E6B8);
    id v40 = v38;
    uint64_t v41 = sub_100109940();
    os_log_type_t v42 = sub_10010A2D0();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = *(void **)(v0 + 48);
    if (v43)
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 138412290;
      *(void *)(v45 + 4) = v44;
      *uint64_t v46 = v44;

      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%@.saveAttachments error, failed to save image data", (uint8_t *)v45, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100007084(v30, v32);
    }
    else
    {
      sub_100007084(v30, v32);
    }
    swift_release();
    goto LABEL_8;
  }
  uint64_t v127 = dword_10015E320;
  v128 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v128;
  void *v128 = v0;
  v128[1] = sub_1000B73C0;
  uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015E320 + v127);
  uint64_t v123 = v23;
  uint64_t v124 = v16;
  uint64_t v125 = v35;
  uint64_t v126 = v37;
LABEL_63:
  return v122(v123, v124, 0xE500000000000000, v125, v126, 1);
}

double *sub_1000B846C(uint64_t a1, void (*a2)(void))
{
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_10010A9D0();
  if (!v4) {
    return v8;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_100037A20(i, (uint64_t)v7);
    a2(0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_10010A9B0();
    sub_10010A9E0();
    sub_10010A9F0();
    sub_10010A9C0();
    if (!--v4) {
      return v8;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1000B8578()
{
  uint64_t v1 = sub_1000BA550();
  id v2 = [v0 assetOrdering];
  if (!v2
    || (uint64_t v3 = v2,
        uint64_t v4 = sub_100109250(),
        unint64_t v6 = v5,
        v3,
        uint64_t v7 = (void *)sub_1000284CC(),
        sub_100007084(v4, v6),
        !v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
  }
  if (((unint64_t)v1 & 0x8000000000000000) != 0 || ((unint64_t)v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t)sub_1000BECD0(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = (unint64_t)v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = v8;
  sub_1000C2C68(&v11, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v11;
}

void *sub_1000B8690(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10010AA80())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)sub_10010A920() : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000B87B8()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E268);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015E268);
  if (qword_100158C18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E018);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000B8880()
{
  uint64_t v0 = sub_1001094F0();
  sub_100007C54(v0, qword_10015E280);
  sub_100007CB8(v0, (uint64_t)qword_10015E280);
  return sub_1001094E0();
}

uint64_t sub_1000B88CC()
{
  uint64_t v1 = v0;
  unint64_t v2 = (unint64_t)sub_1000B8BEC();
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v4 = sub_10010AA80();
  if (!v4) {
    goto LABEL_22;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v5 = 0;
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v9 = (id)sub_10010A920();
    }
    else {
      id v9 = *(id *)(v3 + 8 * i + 32);
    }
    id v8 = v9;
    sub_100109F10();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_100109F70();
    }
    sub_100109FA0();
    sub_100109F50();
    _s15ReflectionAssetCMa();
    if (!swift_dynamicCastClass())
    {
      if ((*(uint64_t (**)(void))((swift_isaMask & *v8) + 0x200))())
      {
        uint64_t v7 = v8;
        id v8 = v5;
        unint64_t v5 = v7;
      }
      else if ((*((unsigned char *)v8 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_isHidden) & 1) == 0)
      {
        id v8 = v8;
        sub_100109F10();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_100109F70();
        }
        sub_100109FA0();
        sub_100109F50();
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  if (!v5)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = v5;
  sub_100109F10();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_26:
  }
    sub_100109F70();
  sub_100109FA0();
  sub_100109F50();

LABEL_24:
  uint64_t v10 = (unint64_t *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  *uint64_t v10 = v3;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsWithSlimAsset) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  char v11 = (void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  *char v11 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

double *sub_1000B8BEC()
{
  unint64_t v0 = sub_1000B8578();
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = sub_10010AA80();
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t result = (double *)sub_10010A9D0();
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)sub_10010A920();
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      sub_10003CCA8();

      sub_10010A9B0();
      sub_10010A9E0();
      sub_10010A9F0();
      sub_10010A9C0();
    }
    while (v2 != v4);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B8D20(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001094F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = sub_10002E8DC((uint64_t)&off_10013F780);
  sub_1001099D0();
  swift_bridgeObjectRelease();
  sub_1000248D8(a1, (uint64_t)v4, (uint64_t *)&unk_10015A850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10000B9CC((uint64_t)v4, (uint64_t *)&unk_10015A850);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id v10 = [self defaultCenter];
  if (qword_100158A98 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10016DED8;
  Class isa = sub_100109480().super.isa;
  [v10 postNotificationName:v11 object:isa];

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000B8F64(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 168) = a2;
  *(void *)(v4 + 176) = v3;
  *(unsigned char *)(v4 + 300) = a3;
  *(void *)(v4 + 160) = a1;
  uint64_t v5 = sub_10010A4C0();
  *(void *)(v4 + 184) = v5;
  *(void *)(v4 + 192) = *(void *)(v5 - 8);
  *(void *)(v4 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_1000B902C, 0, 0);
}

uint64_t sub_1000B902C()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  char v3 = *(unsigned char *)(v0 + 300);
  uint64_t v4 = *(void **)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);
  *(void *)(v0 + 208) = *(void *)(*(void *)(v0 + 176) + 24);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 216) = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(unsigned char *)(v7 + 40) = v3 & 1;
  *(_DWORD *)(v0 + 296) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  id v8 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 224) = v8;
  *(void *)(v0 + 232) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v8(v1);
  id v9 = v4;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v10;
  *id v10 = v0;
  v10[1] = sub_1000B91A8;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000B91A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 200);
  uint64_t v3 = *(void *)(*v0 + 192);
  uint64_t v4 = *(void *)(*v0 + 184);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 248) = v5;
  *(void *)(v1 + 256) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1000B9330, 0, 0);
}

uint64_t sub_1000B9330()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10015E318 + dword_10015E318);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000B93D4;
  return v3();
}

uint64_t sub_1000B93D4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000B94D0, 0, 0);
}

uint64_t sub_1000B94D0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  uint64_t v2 = *(unsigned int *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void **)(v0 + 160);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 272) = v6;
  *(void *)(v6 + 16) = v5;
  v1(v3, v2, v4);
  id v7 = v5;
  id v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v8;
  *id v8 = v0;
  v8[1] = sub_1000B95EC;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000B95EC()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 248);
  uint64_t v3 = *(void *)(*(void *)v1 + 200);
  uint64_t v4 = *(void *)(*(void *)v1 + 184);
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  swift_release();
  v2(v3, v4);
  return _swift_task_switch(sub_1000B9774, 0, 0);
}

uint64_t sub_1000B9774()
{
  uint64_t v48 = v0;
  uint64_t v1 = (void **)(v0 + 20);
  uint64_t v2 = v0[20] + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id;
  uint64_t v3 = (unint64_t *)(v0[22] + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v4 = *v3;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000B8690((uint64_t (*)(id *))sub_1000C3554, v5, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  id v7 = &off_100158000;
  if (v6)
  {
    if (qword_100158BE8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_100109960();
    sub_100007CB8(v8, (uint64_t)qword_10015E268);
    id v9 = v6;
    swift_retain_n();
    id v10 = v9;
    uint64_t v11 = sub_100109940();
    os_log_type_t v12 = sub_10010A2D0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v45 = v2;
      uint64_t v13 = swift_slowAlloc();
      BOOL v43 = (void *)swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315650;
      if (qword_100158BF0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1001094F0();
      sub_100007CB8(v14, (uint64_t)qword_10015E280);
      sub_1000C3450((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v15 = sub_10010AC60();
      v0[17] = sub_1000C50D4(v15, v16, v47);
      sub_10010A730();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      v0[18] = v10;
      id v17 = v10;
      sub_10010A730();
      void *v43 = v6;

      *(_WORD *)(v13 + 22) = 2080;
      _s5AssetCMa();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_100109F40();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      v0[19] = sub_1000C50D4(v18, v20, v47);
      sub_10010A730();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s (addAssetAsync) Asset already exists in self.assetsAll existingAsset:%@ self.assetsAll:%s", (uint8_t *)v13, 0x20u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v2 = v45;
      id v7 = &off_100158000;
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    uint64_t v21 = *v1;
    swift_beginAccess();
    id v22 = v21;
    sub_100109F10();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_100109F70();
    }
    sub_100109FA0();
    sub_100109F50();
    swift_endAccess();
  }
  uint64_t v23 = (unint64_t *)(v0[22] + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v24 = *v23;
  uint64_t v25 = swift_task_alloc();
  *(void *)(v25 + 16) = v2;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1000B8690((uint64_t (*)(id *))sub_1000C3344, v25, v24);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v26)
  {
    if (v7[381] != (_UNKNOWN *)-1) {
      swift_once();
    }
    uint64_t v27 = sub_100109960();
    sub_100007CB8(v27, (uint64_t)qword_10015E268);
    swift_retain_n();
    id v28 = v26;
    uint64_t v29 = sub_100109940();
    os_log_type_t v30 = sub_10010A2D0();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v44 = v30;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      if (qword_100158BF0 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1001094F0();
      sub_100007CB8(v32, (uint64_t)qword_10015E280);
      sub_1000C3450((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v33 = sub_10010AC60();
      v0[14] = sub_1000C50D4(v33, v34, v47);
      sub_10010A730();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2112;
      v0[15] = v28;
      id v35 = v28;
      sub_10010A730();
      *uint64_t v46 = v26;

      *(_WORD *)(v31 + 22) = 2080;
      _s5AssetCMa();
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100109F40();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      v0[16] = sub_1000C50D4(v36, v38, v47);
      sub_10010A730();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v44, "%s (addAssetAsync) Asset already exists in self.assetsAll existingAsset:%@ self.assets:%s", (uint8_t *)v31, 0x20u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    uint64_t v39 = *v1;
    swift_beginAccess();
    id v40 = v39;
    sub_100109F10();
    if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_100109F70();
    }
    sub_100109FA0();
    sub_100109F50();
    swift_endAccess();
  }
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

void sub_1000BA04C(uint64_t a1, char *a2, uint64_t a3, int a4)
{
  int v61 = a4;
  uint64_t v7 = sub_1001094F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v60 = v4;
    unint64_t v16 = a2;
    id v17 = *(id *)(Strong + 24);
    id v18 = sub_100039014(v17);

    [*(id *)(v15 + 32) addAssetsObject:v18];
    id v19 = sub_1000CED64();
    uint64_t v63 = v16;
    unint64_t v20 = &v16[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath];
    *(void *)unint64_t v20 = v19;
    *((void *)v20 + 1) = v21;
    swift_bridgeObjectRelease();
    id v59 = v18;
    sub_1000CED64();
    if (v22)
    {
      type metadata accessor for Journaling();
      sub_1000CEC08((uint64_t)v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = sub_1001091E0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
    }
    id v24 = v63;
    uint64_t v25 = &v63[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryURL];
    swift_beginAccess();
    sub_10002440C((uint64_t)v13, (uint64_t)v25, (uint64_t *)&unk_100159D40);
    swift_endAccess();
    swift_getObjectType();
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      id v28 = v24;
    }
    else {
      id v28 = 0;
    }
    if (v28)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = v15;
      uint64_t v31 = v10;
      uint64_t v32 = v8;
      uint64_t v33 = v7;
      uint64_t v34 = a3;
      id v35 = v63;
      uint64_t v36 = ObjectType;
      id v24 = v63;
      sub_100007D38(v36, v27);

      a3 = v34;
      uint64_t v7 = v33;
      uint64_t v8 = v32;
      id v10 = v31;
      uint64_t v15 = v30;
    }
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      id v37 = v24;
    }
    else {
      id v37 = 0;
    }
    if (v37)
    {
      id v38 = v24;
      sub_1000A1F1C();
    }
    id v39 = [*(id *)(v15 + 32) assetOrdering];
    if (!v39) {
      goto LABEL_20;
    }
    id v40 = v39;
    uint64_t v41 = sub_100109250();
    os_log_type_t v42 = v10;
    uint64_t v43 = v8;
    uint64_t v44 = v7;
    uint64_t v45 = a3;
    unint64_t v47 = v46;

    uint64_t v48 = (void *)sub_1000284CC();
    unint64_t v49 = v47;
    a3 = v45;
    uint64_t v7 = v44;
    uint64_t v8 = v43;
    id v10 = v42;
    id v24 = v63;
    sub_100007084(v41, v49);
    if (!v48)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      uint64_t v48 = &_swiftEmptyDictionarySingleton;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, (uint64_t)v24 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id, v7);
    if (v61)
    {
      uint64_t v50 = sub_1000BA550();
      if ((unint64_t)v50 >> 62) {
        a3 = sub_10010AA80();
      }
      else {
        a3 = *(void *)(((unint64_t)v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v62 = v48;
    sub_1000FF0DC(a3, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    id v52 = *(id *)(v15 + 32);
    uint64_t v53 = sub_1000EB7A4();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    if (v55 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = sub_100109240().super.isa;
      sub_100008508(v53, v55);
    }
    [v52 setAssetOrdering:isa];

    id v57 = *(id *)(v15 + 32);
    [v57 setIsUploadedToCloud:0];
    swift_release();
  }
}

double *sub_1000BA550()
{
  id v1 = [v0 assets];
  if (!v1
    || (uint64_t v2 = v1,
        id v3 = [v1 allObjects],
        v2,
        uint64_t v4 = sub_100109F30(),
        v3,
        uint64_t v5 = sub_1000B846C(v4, (void (*)(void))type metadata accessor for JournalEntryAssetMO),
        unint64_t result = (double *)swift_bridgeObjectRelease(),
        !v5))
  {
    if (qword_100158BE8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100109960();
    sub_100007CB8(v11, (uint64_t)qword_10015E268);
    uint64_t v12 = sub_100109940();
    os_log_type_t v13 = sub_10010A2D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      id v18 = (double *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      if (qword_100158BF0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1001094F0();
      sub_100007CB8(v15, (uint64_t)qword_10015E280);
      sub_1000C3450((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = sub_10010AC60();
      sub_1000C50D4(v16, v17, (uint64_t *)&v18);
      sub_10010A730();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s WARNING: JournalEntryMO assets is nil", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return _swiftEmptyArrayStorage;
  }
  id v18 = _swiftEmptyArrayStorage;
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v7 = *(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10010AA80();
  unint64_t result = (double *)swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_5:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (((unint64_t)v5 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_10010A920();
      }
      else {
        id v9 = *(id *)&v5[i + 4];
      }
      id v10 = v9;
      if (([v9 isRemovedFromCloud] & 1) != 0
        || ([v10 isUndoablyDeleted] & 1) != 0)
      {
      }
      else
      {
        sub_10010A9B0();
        sub_10010A9E0();
        sub_10010A9F0();
        sub_10010A9C0();
      }
    }
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

void sub_1000BA8E4()
{
  sub_10003AF70();
  if (qword_100158BE8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100109960();
  sub_100007CB8(v0, (uint64_t)qword_10015E268);
  id v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)id v3 = 136315138;
    if (qword_100158BF0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1001094F0();
    sub_100007CB8(v4, (uint64_t)qword_10015E280);
    sub_1000C3450((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v5 = sub_10010AC60();
    sub_1000C50D4(v5, v6, &v7);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s (addAssetAsync) Done adding asset to viewModel", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

void sub_1000BAAE8(void *a1)
{
  v10[1] = 0xE000000000000000;
  sub_10010A8D0(57);
  v11._object = (void *)0x8000000100111ED0;
  v11._countAndFlagsBits = 0xD00000000000001DLL;
  sub_100109E00(v11);
  id v2 = [a1 description];
  uint64_t v3 = sub_100109D30();
  uint64_t v5 = v4;

  v12._countAndFlagsBits = v3;
  v12._object = v5;
  sub_100109E00(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x74657373615B2029;
  v13._object = (void *)0xEC000000203A6449;
  sub_100109E00(v13);
  sub_1001094F0();
  sub_1000C3450((unint64_t *)&qword_100159D68, (void (*)(uint64_t))&type metadata accessor for UUID);
  v14._countAndFlagsBits = sub_10010AC60();
  sub_100109E00(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 8285;
  v15._object = (void *)0xE200000000000000;
  sub_100109E00(v15);
  CFAbsoluteTimeGetCurrent();
  sub_10010A0D0();
  v16._countAndFlagsBits = 0x73646E6F63657320;
  v16._object = (void *)0xE800000000000000;
  sub_100109E00(v16);
  if (qword_100158BE8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100109960();
  sub_100007CB8(v6, (uint64_t)qword_10015E268);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100109940();
  os_log_type_t v8 = sub_10010A2F0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000C50D4(0, 0xE000000000000000, v10);
    sub_10010A730();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1000BADF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + 32);
    id v2 = [v1 assetOrdering];
    if (!v2
      || (uint64_t v3 = v2, v4 = sub_100109250(), v6 = v5, v3, v7 = sub_1000284CC(), sub_100007084(v4, v6), !v7))
    {
      swift_bridgeObjectRelease();
    }
    sub_1000C2D14();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1000EB7A4();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    if (v10 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = sub_100109240().super.isa;
      sub_100008508(v8, v10);
    }
    [v1 setAssetOrdering:isa];
    swift_release();
  }
}

uint64_t sub_1000BAF4C()
{
  v1[17] = v0;
  uint64_t v2 = sub_10010A4C0();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  sub_100004BD4((uint64_t *)&unk_10015CDE0);
  v1[21] = swift_task_alloc();
  sub_100004BD4((uint64_t *)&unk_10015A850);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_1001094F0();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_1000BB0D8, 0, 0);
}

uint64_t sub_1000BB0D8()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[17] + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleId;
  swift_beginAccess();
  sub_1000248D8(v4, v3, (uint64_t *)&unk_10015A850);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000B9CC(v0[23], (uint64_t *)&unk_10015A850);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[17];
  (*(void (**)(uint64_t, void, void))(v0[25] + 32))(v5, v0[23], v0[24]);
  uint64_t v7 = (unint64_t *)(v6 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v8 = *v7;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v5;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1000B8690((uint64_t (*)(id *))sub_1000C0CAC, v9, v8);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  if (v10)
  {
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
    goto LABEL_5;
  }
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[22];
  uint64_t v15 = v0[19];
  uint64_t v23 = v0[20];
  uint64_t v16 = v0[17];
  uint64_t v22 = v0[18];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[25] + 56))(v14, 1, 1, v0[24]);
  swift_beginAccess();
  sub_10002440C(v14, v4, (uint64_t *)&unk_10015A850);
  swift_endAccess();
  uint64_t v17 = sub_100109460();
  id v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v13, 1, 1, v17);
  uint64_t v19 = v16 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleDate;
  swift_beginAccess();
  sub_10002440C(v13, v19, (uint64_t *)&unk_10015CDE0);
  swift_endAccess();
  v18(v13, 1, 1, v17);
  uint64_t v20 = v16 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleEndDate;
  swift_beginAccess();
  sub_10002440C(v13, v20, (uint64_t *)&unk_10015CDE0);
  swift_endAccess();
  v0[27] = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v23, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v22);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[28] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1000BB4F8;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000BB4F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  uint64_t v2 = *(void *)(*(void *)v0 + 152);
  uint64_t v3 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1000BB66C, 0, 0);
}

uint64_t sub_1000BB66C()
{
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000BB714(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015A010);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v31 = (uint64_t)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  __chkstk_darwin(v14);
  id v18 = (char *)&v29 - v17;
  uint64_t v19 = *a1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_suggestionId;
  swift_beginAccess();
  sub_1000248D8(v19, (uint64_t)v18, (uint64_t *)&unk_10015A850);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v16, a2, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1000248D8((uint64_t)v18, (uint64_t)v10, (uint64_t *)&unk_10015A850);
  sub_1000248D8((uint64_t)v16, v20, (uint64_t *)&unk_10015A850);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_10000B9CC((uint64_t)v16, (uint64_t *)&unk_10015A850);
    sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015A850);
    int v22 = v21(v20, 1, v4);
    if (v22 == 1) {
      uint64_t v23 = (uint64_t *)&unk_10015A850;
    }
    else {
      uint64_t v23 = &qword_10015A010;
    }
    if (v22 == 1) {
      char v24 = -1;
    }
    else {
      char v24 = 0;
    }
  }
  else
  {
    uint64_t v25 = v31;
    sub_1000248D8((uint64_t)v10, v31, (uint64_t *)&unk_10015A850);
    if (v21(v20, 1, v4) == 1)
    {
      sub_10000B9CC((uint64_t)v16, (uint64_t *)&unk_10015A850);
      sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015A850);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
      char v24 = 0;
      uint64_t v23 = &qword_10015A010;
    }
    else
    {
      uint64_t v26 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v30, v20, v4);
      sub_1000C3450(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v24 = sub_100109C70();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v26, v4);
      uint64_t v23 = (uint64_t *)&unk_10015A850;
      sub_10000B9CC((uint64_t)v16, (uint64_t *)&unk_10015A850);
      sub_10000B9CC((uint64_t)v18, (uint64_t *)&unk_10015A850);
      v27((char *)v25, v4);
    }
  }
  sub_10000B9CC((uint64_t)v10, v23);
  return v24 & 1;
}

uint64_t sub_1000BBB20()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 32);
    [v1 setBundleId:0];
    [v1 setBundleDate:0];
    [v1 setBundleEndDate:0];
    return swift_release();
  }
  return result;
}

uint64_t sub_1000BBBC4()
{
  v1[2] = v0;
  uint64_t v2 = sub_10010A4C0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  if (qword_100158C98 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10016E178;
  v1[6] = qword_10016E178;
  return _swift_task_switch(sub_1000BBCBC, v3, 0);
}

uint64_t sub_1000BBCBC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  v0[7] = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000BBDDC;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000BBDDC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1000BBF6C, v1, 0);
}

uint64_t sub_1000BBF6C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000BBFFC;
  return sub_1000BAF4C();
}

uint64_t sub_1000BBFFC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000BC10C()
{
  uint64_t v103 = sub_100109A70();
  uint64_t v1 = *(char **)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v102 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100109AC0();
  uint64_t v3 = *(char **)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v100 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v117 = (char *)&v94 - v9;
  uint64_t v123 = sub_1001094F0();
  uint64_t v112 = *(void *)(v123 - 8);
  uint64_t v10 = __chkstk_darwin(v123);
  uint64_t v109 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v107 = (char *)&v94 - v13;
  uint64_t v99 = v14;
  __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v94 - v15;
  uint64_t v16 = sub_100108FF0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v120 = v3;
  uint64_t v122 = v1;
  id v104 = v8;
  uint64_t v111 = result;
  id v21 = [*(id *)(result + 32) assets];
  int v22 = _swiftEmptyArrayStorage;
  uint64_t v94 = v0;
  if (v21)
  {
    uint64_t v23 = v21;
    uint64_t v129 = _swiftEmptyArrayStorage;
    sub_10010A5B0();

    sub_1000C3450(&qword_10015E2A8, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
    sub_10010A720();
    while (v128)
    {
      sub_10002426C(&v127, &aBlock);
      sub_100037A20((uint64_t)&aBlock, (uint64_t)&v127);
      type metadata accessor for JournalEntryAssetMO();
      if (swift_dynamicCast()
        && (id v24 = v124, v25 = [v124 isUndoablyDeleted],
                        v24,
                        (v25 & 1) != 0))
      {
        sub_10002426C(&aBlock, &v127);
        uint64_t v26 = v129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000BDE2C(0, *((void *)v26 + 2) + 1, 1);
          uint64_t v26 = v129;
        }
        unint64_t v28 = *((void *)v26 + 2);
        unint64_t v27 = *((void *)v26 + 3);
        if (v28 >= v27 >> 1)
        {
          sub_1000BDE2C(v27 > 1, v28 + 1, 1);
          uint64_t v26 = v129;
        }
        *((void *)v26 + 2) = v28 + 1;
        sub_10002426C(&v127, &v26[4 * v28 + 4]);
      }
      else
      {
        sub_10000B7B0((uint64_t)&aBlock);
      }
      sub_10010A720();
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_10000B9CC((uint64_t)&v127, &qword_10015A8A0);
    int v22 = v129;
  }
  uint64_t v29 = v111;
  uint64_t v30 = v123;
  uint64_t v31 = v107;
  if (qword_100158BE8 != -1) {
LABEL_73:
  }
    swift_once();
  uint64_t v110 = sub_100109960();
  sub_100007CB8(v110, (uint64_t)qword_10015E268);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_100109940();
  os_log_type_t v33 = sub_10010A2F0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v116 = v22;
  if (v34)
  {
    uint64_t v35 = v29;
    uint64_t v36 = swift_slowAlloc();
    id v37 = (char **)swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 138543874;
    id v38 = *(void **)(v35 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_id);
    *(void *)&long long aBlock = v38;
    id v39 = v38;
    sub_10010A730();
    uint64_t v121 = v37;
    *id v37 = (char *)v38;
    swift_release_n();
    *(_WORD *)(v36 + 12) = 2048;
    id v40 = (unint64_t *)(v35 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v41 = *v40;
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_10010AA80();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    *(void *)&long long aBlock = v42;
    sub_10010A730();
    swift_release();
    *(_WORD *)(v36 + 22) = 2048;
    int v22 = v116;
    uint64_t v43 = *((void *)v116 + 2);
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = v43;
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}@ (removeUndoablyDeletedAssets) assets.count: %ld  assetsToRemove.count:%ld", (uint8_t *)v36, 0x20u);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v29 = v35;
    uint64_t v30 = v123;
    uint64_t v31 = v107;
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v44 = *((void *)v22 + 2);
  uint64_t v45 = (uint64_t)v104;
  if (!v44)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  id v46 = [*(id *)(v29 + 32) assetOrdering];
  if (!v46) {
    goto LABEL_24;
  }
  unint64_t v47 = v46;
  uint64_t v48 = sub_100109250();
  unint64_t v50 = v49;

  uint64_t v51 = sub_1000284CC();
  uint64_t v52 = v48;
  uint64_t v30 = v123;
  sub_100007084(v52, v50);
  uint64_t v105 = (void *)v51;
  if (!v51)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v105 = &_swiftEmptyDictionarySingleton;
  }
  unint64_t v53 = 0;
  unint64_t v54 = v22 + 4;
  uint64_t v121 = (char **)(v112 + 56);
  uint64_t v118 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
  uint64_t v119 = (void (**)(char *, char *, uint64_t))(v112 + 32);
  uint64_t v98 = v112 + 16;
  uint64_t v97 = v126;
  uint64_t v96 = (void (**)(char *, uint64_t))(v122 + 8);
  unsigned __int8 v95 = (void (**)(char *, uint64_t))(v120 + 8);
  os_log_type_t v108 = (void (**)(unint64_t, uint64_t))(v112 + 8);
  uint64_t v122 = (char *)&type metadata for Any + 8;
  uint64_t v114 = v44;
  os_log_type_t v113 = v22 + 4;
  do
  {
    if (v53 >= *((void *)v22 + 2))
    {
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    sub_100037A20((uint64_t)&v54[4 * v53], (uint64_t)&aBlock);
    type metadata accessor for JournalEntryAssetMO();
    if (swift_dynamicCast())
    {
      int v22 = v129;
      [v129 setIsRemovedFromCloud:1];
      [v22 setIsUploadedToCloud:1];
      id v55 = [v22 id];
      if (v55)
      {
        uint64_t v56 = v55;
        sub_1001094B0();

        id v57 = *v119;
        uint64_t v58 = (uint64_t)v117;
        (*v119)(v117, v31, v30);
        uint64_t v120 = *v121;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v120)(v58, 0, 1, v30);
        if ((*v118)(v58, 1, v30) != 1)
        {
          v57(v115, (char *)v58, v30);
          if (qword_100158BF8 != -1) {
            swift_once();
          }
          if (qword_100158C00 != -1) {
            swift_once();
          }
          uint64_t v106 = qword_10016DFF8;
          uint64_t v59 = v112;
          uint64_t v31 = v107;
          (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v107, v115, v30);
          unint64_t v60 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
          uint64_t v61 = swift_allocObject();
          v57((char *)(v61 + v60), v31, v30);
          v126[2] = sub_1000C0D78;
          v126[3] = v61;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          v126[0] = sub_10001DEE8;
          v126[1] = &unk_100144AE8;
          uint64_t v62 = _Block_copy(&aBlock);
          uint64_t v63 = v100;
          sub_100109A90();
          uint64_t v129 = _swiftEmptyArrayStorage;
          sub_1000C3450((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100004BD4((uint64_t *)&unk_10015A5E0);
          sub_10002E5E0((unint64_t *)&qword_100159D60, (uint64_t *)&unk_10015A5E0);
          unint64_t v64 = v102;
          uint64_t v65 = v103;
          sub_10010A7D0();
          sub_10010A420();
          _Block_release(v62);
          os_log_type_t v66 = v64;
          uint64_t v30 = v123;
          (*v96)(v66, v65);
          (*v95)(v63, v101);
          swift_release();
          (*(void (**)(char *, uint64_t))(v112 + 8))(v115, v30);
          uint64_t v45 = (uint64_t)v104;
          uint64_t v29 = v111;
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v58 = (uint64_t)v117;
        uint64_t v120 = *v121;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v120)(v117, 1, 1, v30);
      }
      sub_10000B9CC(v58, (uint64_t *)&unk_10015A850);
      if (qword_100158A90 != -1) {
        swift_once();
      }
      sub_100007CB8(v110, (uint64_t)qword_10015C760);
      uint64_t v67 = sub_100109940();
      os_log_type_t v68 = sub_10010A2D0();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v69 = 0;
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "(purgeCache) unable to get assetId from an asset", v69, 2u);
        swift_slowDealloc();
      }

      uint64_t v30 = v123;
LABEL_45:
      sub_1000CF110();
      id v70 = [v22 fileAttachments];
      if (!v70) {
        goto LABEL_57;
      }
      id v71 = v70;
      id v72 = [v70 allObjects];

      uint64_t v73 = sub_100109F30();
      uint64_t v30 = v123;
      BOOL v74 = sub_1000B846C(v73, (void (*)(void))type metadata accessor for JournalEntryAssetFileAttachmentMO);
      swift_bridgeObjectRelease();
      if (!v74)
      {
LABEL_57:
        [*(id *)(v29 + 32) removeAssetsObject:v22 v94];
        id v78 = [v22 id];
        if (v78)
        {
          uint64_t v79 = v78;
          sub_1001094B0();

          uint64_t v80 = *v119;
          (*v119)((char *)v45, v31, v30);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v120)(v45, 0, 1, v30);
          if ((*v118)(v45, 1, v30) != 1)
          {
            uint64_t v81 = (uint64_t)v109;
            v80(v109, (char *)v45, v30);
            uint64_t v82 = v105;
            swift_bridgeObjectRetain();
            unint64_t v83 = sub_1000FD0B0(v81);
            LOBYTE(v81) = v84;
            swift_bridgeObjectRelease();
            if (v81)
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long aBlock = v82;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_100100984();
                uint64_t v82 = (void *)aBlock;
              }
              unint64_t v86 = v82[6] + *(void *)(v112 + 72) * v83;
              v87 = *(void (**)(unint64_t, uint64_t))(v112 + 8);
              uint64_t v88 = v123;
              v87(v86, v123);
              uint64_t v105 = (void *)aBlock;
              sub_1000CD5C4(v83, aBlock);

              swift_bridgeObjectRelease();
            }
            else
            {

              v87 = *v108;
              uint64_t v88 = v123;
            }
            v87((unint64_t)v109, v88);
            uint64_t v30 = v88;
            goto LABEL_28;
          }
        }
        else
        {
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v120)(v45, 1, 1, v30);
        }

        sub_10000B9CC(v45, (uint64_t *)&unk_10015A850);
LABEL_28:
        int v22 = v116;
        uint64_t v44 = v114;
        unint64_t v54 = v113;
        goto LABEL_29;
      }
      if ((unint64_t)v74 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_10010AA80();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_49;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(((unint64_t)v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v30)
        {
LABEL_49:
          if (v30 < 1) {
            goto LABEL_72;
          }
          for (uint64_t i = 0; i != v30; ++i)
          {
            if (((unint64_t)v74 & 0xC000000000000001) != 0) {
              id v76 = (id)sub_10010A920();
            }
            else {
              id v76 = *(id *)&v74[i + 4];
            }
            uint64_t v77 = v76;
            [v76 setIsRemovedFromCloud:1 v94];
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = v111;
      uint64_t v30 = v123;
      goto LABEL_57;
    }
LABEL_29:
    ++v53;
  }
  while (v53 != v44);
  swift_bridgeObjectRelease();
  id v89 = *(id *)(v29 + 32);
  uint64_t v90 = sub_1000EB7A4();
  unint64_t v92 = v91;
  swift_bridgeObjectRelease();
  if (v92 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = sub_100109240().super.isa;
    sub_100008508(v90, v92);
  }
  [v89 setAssetOrdering:isa v94];

  [*(id *)(v29 + 32) setIsUploadedToCloud:0];
  return swift_release();
}

BOOL sub_1000BD2E4(void **a1, id *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = sub_1001094F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v40 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = *a1;
  id v37 = *a2;
  id v21 = [v20 id];
  if (!v21)
  {
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v24(v10, 1, 1, v11);
LABEL_6:
    sub_1001094E0();
    sub_10000B9CC((uint64_t)v10, (uint64_t *)&unk_10015A850);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  int v22 = v21;
  sub_1001094B0();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v10, v17, v11);
  id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    goto LABEL_6;
  }
  v23(v19, v10, v11);
  if (!*(void *)(a3 + 16)) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v25 = sub_1000FD0B0((uint64_t)v19);
  if (v26)
  {
    uint64_t v38 = *(void *)(*(void *)(a3 + 56) + 8 * v25);
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v38 = 0;
LABEL_10:
  unint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v19, v11);
  id v28 = [v37 id];
  if (v28)
  {
    uint64_t v29 = v28;
    sub_1001094B0();

    uint64_t v30 = *(void (**)(void))(v12 + 32);
    uint64_t v31 = (uint64_t)v39;
    v30();
    v24((char *)v31, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v31, 1, v11) != 1)
    {
      uint64_t v32 = (uint64_t)v40;
      ((void (*)(char *, uint64_t, uint64_t))v30)(v40, v31, v11);
      if (!*(void *)(a3 + 16)) {
        goto LABEL_18;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v31 = (uint64_t)v39;
    v24(v39, 1, 1, v11);
  }
  uint64_t v32 = (uint64_t)v40;
  sub_1001094E0();
  sub_10000B9CC(v31, (uint64_t *)&unk_10015A850);
  if (!*(void *)(a3 + 16))
  {
LABEL_18:
    uint64_t v35 = 0;
    goto LABEL_19;
  }
LABEL_16:
  unint64_t v33 = sub_1000FD0B0(v32);
  if ((v34 & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v35 = *(void *)(*(void *)(a3 + 56) + 8 * v33);
LABEL_19:
  v27((char *)v32, v11);
  return v38 < v35;
}

uint64_t sub_1000BD6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 128) = a6;
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 48) = a4;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  uint64_t v8 = sub_10010A4C0();
  *(void *)(v7 + 72) = v8;
  *(void *)(v7 + 80) = *(void *)(v8 - 8);
  *(void *)(v7 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_1000BD7B4, 0, 0);
}

uint64_t sub_1000BD7B4()
{
  uint64_t v1 = *(char **)(v0 + 64);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context];
  *(void *)(v0 + 96) = v2;
  if (v2
    && (uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO],
        (*(void *)(v0 + 104) = v3) != 0))
  {
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v26 = *(void *)(v0 + 72);
    uint64_t v27 = *(void *)(v0 + 88);
    char v25 = *(unsigned char *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = swift_allocObject();
    *(void *)(v0 + 112) = v10;
    *(void *)(v10 + 16) = v3;
    *(void *)(v10 + 24) = v9;
    *(void *)(v10 + 32) = v7;
    *(void *)(v10 + 40) = v8;
    *(void *)(v10 + 48) = v6;
    *(void *)(v10 + 56) = v5;
    *(unsigned char *)(v10 + 64) = v25;
    *(void *)(v10 + 72) = v2;
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v27, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v26);
    id v11 = v2;
    id v12 = v3;
    v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1000BDB04;
    return NSManagedObjectContext.perform<A>(schedule:_:)();
  }
  else
  {
    if (qword_100158C10 != -1)
    {
      swift_once();
      uint64_t v1 = *(char **)(v0 + 64);
    }
    uint64_t v14 = sub_100109960();
    sub_100007CB8(v14, (uint64_t)qword_10015E6B8);
    uint64_t v15 = v1;
    uint64_t v16 = sub_100109940();
    os_log_type_t v17 = sub_10010A2D0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void **)(v0 + 64);
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      id v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      *(void *)(v0 + 16) = v19;
      id v22 = v19;
      sub_10010A730();
      *id v21 = v19;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%@ (addAttachmentToCoreData) managed objects aren't set", v20, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
}

uint64_t sub_1000BDB04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1000BDC78, 0, 0);
}

uint64_t sub_1000BDC78()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000BDCE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BE118(a1, a2, a3, *v3, &qword_10015E2E8, type metadata accessor for AssetAttachment.AssetType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDD20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BE4E8(a1, a2, a3, *v3, &qword_10015E2E0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDD48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BDE4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000BDD68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BDFAC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDD88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BE118(a1, a2, a3, *v3, &qword_10015D980, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDDC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BE360(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDDE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BE4E8(a1, a2, a3, *v3, &qword_10015E2D0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDE0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BE7C8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDE2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000BEB60(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000BDE4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015D988);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BDFAC(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4((uint64_t *)&unk_10015F2B0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BE118(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004BD4(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (double *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  unint64_t v22 = a4 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || (unint64_t)v21 >= v22 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  id v24 = &v21[v23];
  unint64_t v25 = v22 + v23;
  if (v22 >= (unint64_t)v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BE360(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015D960);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BE4E8(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *(void *)(a4 + 24);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v8 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_100004BD4(a5);
    size_t v11 = (double *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = (char *)(v11 + 4);
  unint64_t v15 = (char *)(a4 + 32);
  if (a1)
  {
    if (v11 != (double *)a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BE644(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015D958);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  int64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BE7C8(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015E2D8);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  int64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BE918(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004BD4(&qword_10015E308);
  uint64_t v10 = *(void *)(sub_100004BD4(&qword_10015E2F0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (double *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  *((void *)v13 + 2) = v8;
  *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100004BD4(&qword_10015E2F0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  BOOL v18 = (char *)v13 + v17;
  unint64_t v19 = a4 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || (unint64_t)v18 >= v19 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = v19 + v20;
  if (v19 >= (unint64_t)v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000BEB60(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015E2B0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

double *sub_1000BECD0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100004BD4(qword_100159E08);
      uint64_t v3 = (double *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      *((void *)v3 + 2) = v2;
      *((void *)v3 + 3) = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1000C0E2C((unint64_t)(v3 + 4), v2, v1, (void (*)(void))type metadata accessor for JournalEntryAssetMO, &qword_10015E2C0, &qword_10015E2B8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10009D73C);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

double *sub_1000BEE00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004BD4(&qword_10015D980);
  uint64_t v3 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v6);
  if (v4)
  {
    if ((double *)((char *)result - v5) != (double *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_1000C1064(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1000AE5E4();
      if (v9 == v1) {
        return (double *)v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1000BEF54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004BD4(&qword_10015E308);
  uint64_t v3 = *(void *)(sub_100004BD4(&qword_10015E2F0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (double *)j__malloc_size(v6);
  if (v4)
  {
    if ((double *)((char *)result - v5) != (double *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_100004BD4(&qword_10015E2F0) - 8);
      uint64_t v10 = sub_1000C1344(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_1000AE5E4();
      if (v10 == v1) {
        return (double *)v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1000BF0E8(unint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_100004BD4(&qword_10015E2F0) - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1000C1704(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1000BF194(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1000BF194(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v138 = sub_100004BD4(&qword_10015E2F0);
  uint64_t v4 = *(void *)(v138 - 8);
  uint64_t v5 = __chkstk_darwin(v138);
  uint64_t v129 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v139 = (uint64_t)&v123 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v135 = (uint64_t)&v123 - v10;
  __chkstk_darwin(v9);
  uint64_t v134 = (uint64_t)&v123 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_10010AC50(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_1000BFC04(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  uint64_t v132 = v4;
  Swift::Int v125 = result;
  if (v12 < 2)
  {
    BOOL v18 = _swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    id v124 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_107:
      uint64_t v116 = v18;
      if (v20 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_136;
          }
          if (!v117) {
            goto LABEL_148;
          }
          double v119 = v116[2 * v118 + 4];
          double v120 = v116[2 * v20 + 3];
          sub_1000C0200(v117 + *(void *)(v132 + 72) * *(void *)&v119, v117 + *(void *)(v132 + 72) * *(void *)&v116[2 * v20 + 2], v117 + *(void *)(v132 + 72) * *(void *)&v120, v131);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v120 < *(uint64_t *)&v119) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v116 = sub_1000C0C44((uint64_t)v116);
          }
          if (v118 >= *((void *)v116 + 2)) {
            goto LABEL_138;
          }
          uint64_t v121 = &v116[2 * v118 + 4];
          *uint64_t v121 = v119;
          v121[1] = v120;
          unint64_t v122 = *((void *)v116 + 2);
          if (v20 > v122) {
            goto LABEL_139;
          }
          memmove(&v116[2 * v20 + 2], &v116[2 * v20 + 4], 16 * (v122 - v20));
          *((void *)v116 + 2) = v122 - 1;
          unint64_t v20 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v124[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_100109F80();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    id v124 = (double *)v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  BOOL v18 = _swiftEmptyArrayStorage;
  v136 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v38 = v19 + 1;
      goto LABEL_58;
    }
    uint64_t v127 = v2;
    uint64_t v23 = *a1;
    uint64_t v24 = *(void *)(v132 + 72);
    uint64_t v25 = v134;
    sub_1000248D8(*a1 + v24 * v22, v134, &qword_10015E2F0);
    Swift::Int v140 = v12;
    uint64_t v26 = v135;
    sub_1000248D8(v23 + v24 * v21, v135, &qword_10015E2F0);
    uint64_t v27 = *(int *)(v138 + 48);
    uint64_t v133 = *(void *)(v25 + v27);
    uint64_t v28 = *(void *)(v26 + v27);
    uint64_t v29 = v26;
    Swift::Int v30 = v140;
    sub_10000B9CC(v29, &qword_10015E2F0);
    sub_10000B9CC(v25, &qword_10015E2F0);
    uint64_t v128 = v23;
    uint64_t v141 = v24;
    Swift::Int v137 = v21 + 2;
    if (v21 + 2 >= v30)
    {
      uint64_t v2 = v127;
    }
    else
    {
      uint64_t v126 = v18;
      uint64_t v31 = v24 * v22;
      uint64_t v32 = v23;
      uint64_t v33 = v24 * (v21 + 2);
      while (1)
      {
        uint64_t v34 = v134;
        int v35 = v133 < v28;
        sub_1000248D8(v32 + v33, v134, &qword_10015E2F0);
        uint64_t v36 = v135;
        sub_1000248D8(v32 + v31, v135, &qword_10015E2F0);
        int v37 = *(void *)(v34 + *(int *)(v138 + 48)) >= *(void *)(v36 + *(int *)(v138 + 48));
        sub_10000B9CC(v36, &qword_10015E2F0);
        sub_10000B9CC(v34, &qword_10015E2F0);
        if (v35 == v37) {
          break;
        }
        v32 += v141;
        if (v140 == ++v137)
        {
          Swift::Int v30 = v140;
          Swift::Int v137 = v140;
          a1 = v136;
          BOOL v18 = v126;
          uint64_t v2 = v127;
          Swift::Int v21 = v130;
          goto LABEL_24;
        }
      }
      a1 = v136;
      BOOL v18 = v126;
      uint64_t v2 = v127;
      Swift::Int v21 = v130;
      Swift::Int v30 = v140;
    }
LABEL_24:
    if (v133 >= v28) {
      break;
    }
    uint64_t v38 = v137;
    if (v137 < v21) {
      goto LABEL_142;
    }
    if (v21 >= v137) {
      goto LABEL_38;
    }
    uint64_t v126 = v18;
    uint64_t v127 = v2;
    uint64_t v39 = 0;
    uint64_t v40 = v141;
    uint64_t v41 = v141 * (v137 - 1);
    uint64_t v42 = v137 * v141;
    Swift::Int v43 = v21;
    uint64_t v44 = v21 * v141;
    do
    {
      if (v43 != v38 + v39 - 1)
      {
        uint64_t v45 = v128;
        if (!v128) {
          goto LABEL_147;
        }
        unint64_t v46 = v128 + v44;
        sub_10000B800(v128 + v44, v129, &qword_10015E2F0);
        if (v44 < v41 || v46 >= v45 + v42)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v44 != v41)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_10000B800(v129, v45 + v41, &qword_10015E2F0);
        uint64_t v38 = v137;
        uint64_t v40 = v141;
      }
      ++v43;
      --v39;
      v41 -= v40;
      v42 -= v40;
      v44 += v40;
    }
    while (v43 < v38 + v39);
    BOOL v18 = v126;
    uint64_t v2 = v127;
    Swift::Int v21 = v130;
    Swift::Int v30 = v140;
    if (v38 < v140) {
      goto LABEL_39;
    }
LABEL_58:
    if (v38 < v21) {
      goto LABEL_135;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v137 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      BOOL v18 = sub_1000C073C(0, *((void *)v18 + 2) + 1, 1, (uint64_t)v18);
    }
    unint64_t v64 = *((void *)v18 + 2);
    unint64_t v63 = *((void *)v18 + 3);
    unint64_t v20 = v64 + 1;
    if (v64 >= v63 >> 1) {
      BOOL v18 = sub_1000C073C((double *)(v63 > 1), v64 + 1, 1, (uint64_t)v18);
    }
    uint64_t v65 = v2;
    *((void *)v18 + 2) = v20;
    os_log_type_t v66 = v18 + 4;
    uint64_t v67 = &v18[2 * v64 + 4];
    Swift::Int v68 = v137;
    *(void *)uint64_t v67 = v21;
    *((void *)v67 + 1) = v68;
    if (v64)
    {
      while (1)
      {
        unint64_t v69 = v20 - 1;
        if (v20 >= 4)
        {
          BOOL v74 = &v66[2 * v20];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_124;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_125;
          }
          unint64_t v81 = v20 - 2;
          uint64_t v82 = &v66[2 * v20 - 4];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_127;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_130;
          }
          if (v86 >= v77)
          {
            id v104 = &v66[2 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_134;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v98 = *((void *)v18 + 4);
            uint64_t v99 = *((void *)v18 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_89;
          }
          uint64_t v71 = *((void *)v18 + 4);
          uint64_t v70 = *((void *)v18 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_126;
        }
        unint64_t v81 = v20 - 2;
        v87 = &v66[2 * v20 - 4];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_129;
        }
        uint64_t v93 = &v66[2 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_132;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_133;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_95:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v92) {
          goto LABEL_128;
        }
        uint64_t v100 = &v66[2 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_131;
        }
        if (v103 < v91) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v20)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v109 = *a1;
        if (!*a1) {
          goto LABEL_146;
        }
        uint64_t v110 = v18;
        uint64_t v111 = &v66[2 * v108];
        uint64_t v112 = *(void *)v111;
        os_log_type_t v113 = &v66[2 * v69];
        double v114 = v113[1];
        sub_1000C0200(v109 + *(void *)(v132 + 72) * *(void *)v111, v109 + *(void *)(v132 + 72) * *(void *)v113, v109 + *(void *)(v132 + 72) * *(void *)&v114, v131);
        if (v65) {
          goto LABEL_118;
        }
        if (*(uint64_t *)&v114 < v112) {
          goto LABEL_121;
        }
        if (v69 > *((void *)v110 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v111 = v112;
        v66[2 * v108 + 1] = v114;
        unint64_t v115 = *((void *)v110 + 2);
        if (v69 >= v115) {
          goto LABEL_123;
        }
        BOOL v18 = v110;
        unint64_t v20 = v115 - 1;
        memmove(&v66[2 * v69], v113 + 2, 16 * (v115 - 1 - v69));
        *((void *)v110 + 2) = v115 - 1;
        a1 = v136;
        if (v115 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v19 = v137;
    uint64_t v2 = v65;
    Swift::Int v12 = a1[1];
    if (v137 >= v12) {
      goto LABEL_107;
    }
  }
  uint64_t v38 = v137;
LABEL_38:
  if (v38 >= v30) {
    goto LABEL_58;
  }
LABEL_39:
  if (__OFSUB__(v38, v21)) {
    goto LABEL_140;
  }
  if (v38 - v21 >= v125) {
    goto LABEL_58;
  }
  if (__OFADD__(v21, v125)) {
    goto LABEL_143;
  }
  if (v21 + v125 >= v30) {
    uint64_t v47 = v30;
  }
  else {
    uint64_t v47 = v21 + v125;
  }
  if (v47 >= v21)
  {
    if (v38 != v47)
    {
      uint64_t v126 = v18;
      uint64_t v127 = v2;
      uint64_t v48 = *(void *)(v132 + 72);
      uint64_t v141 = v48 * (v38 - 1);
      uint64_t v133 = v48;
      uint64_t v49 = v38 * v48;
      uint64_t v128 = v47;
      do
      {
        uint64_t v51 = 0;
        Swift::Int v52 = v21;
        Swift::Int v137 = v38;
        while (1)
        {
          uint64_t v53 = *a1;
          uint64_t v54 = v49;
          uint64_t v55 = v49 + v51 + *a1;
          uint64_t v56 = v134;
          sub_1000248D8(v55, v134, &qword_10015E2F0);
          uint64_t v57 = v135;
          sub_1000248D8(v141 + v51 + v53, v135, &qword_10015E2F0);
          uint64_t v58 = *(int *)(v138 + 48);
          Swift::Int v140 = *(void *)(v56 + v58);
          Swift::Int v59 = *(void *)(v57 + v58);
          sub_10000B9CC(v57, &qword_10015E2F0);
          sub_10000B9CC(v56, &qword_10015E2F0);
          if (v140 >= v59) {
            break;
          }
          uint64_t v60 = *a1;
          if (!*a1) {
            goto LABEL_145;
          }
          uint64_t v49 = v54;
          uint64_t v61 = v60 + v141 + v51;
          sub_10000B800(v60 + v54 + v51, v139, &qword_10015E2F0);
          swift_arrayInitWithTakeFrontToBack();
          sub_10000B800(v139, v61, &qword_10015E2F0);
          v51 -= v133;
          ++v52;
          a1 = v136;
          Swift::Int v50 = v137;
          if (v137 == v52) {
            goto LABEL_49;
          }
        }
        Swift::Int v50 = v137;
        uint64_t v49 = v54;
LABEL_49:
        uint64_t v38 = v50 + 1;
        v141 += v133;
        v49 += v133;
        Swift::Int v21 = v130;
      }
      while (v38 != v128);
      uint64_t v38 = v128;
      BOOL v18 = v126;
      uint64_t v2 = v127;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = sub_10010AA50();
  __break(1u);
  return result;
}

uint64_t sub_1000BFC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v37 = a1;
  uint64_t v43 = sub_100004BD4(&qword_10015E2F0);
  uint64_t v7 = __chkstk_darwin(v43);
  uint64_t v44 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v39 = (uint64_t)&v35 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v38 = (uint64_t)&v35 - v13;
  uint64_t v42 = a3;
  uint64_t v36 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v40 = v14;
    uint64_t v16 = v14 * v42;
    uint64_t v17 = &qword_10015E2F0;
    unint64_t v46 = a4;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v19 = v37;
    uint64_t v41 = v16;
    while (1)
    {
      uint64_t v21 = *v46;
      uint64_t v22 = v16 + v18 + *v46;
      uint64_t v23 = v38;
      sub_1000248D8(v22, v38, v17);
      uint64_t v24 = v15 + v18 + v21;
      uint64_t v25 = v15;
      uint64_t v26 = v39;
      sub_1000248D8(v24, v39, v17);
      uint64_t v27 = *(int *)(v43 + 48);
      uint64_t v45 = *(void *)(v23 + v27);
      uint64_t v28 = v17;
      uint64_t v29 = *(void *)(v26 + v27);
      uint64_t v30 = v26;
      uint64_t v15 = v25;
      sub_10000B9CC(v30, v28);
      uint64_t v31 = v23;
      uint64_t v16 = v41;
      uint64_t result = sub_10000B9CC(v31, v28);
      BOOL v32 = v45 < v29;
      uint64_t v17 = v28;
      if (!v32)
      {
LABEL_4:
        uint64_t v15 = v25 + v40;
        v16 += v40;
        if (++v42 == v36) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v33 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v34 = v33 + v25 + v18;
      sub_10000B800(v33 + v16 + v18, v44, v28);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t v20 = v34;
      uint64_t v17 = v28;
      uint64_t result = sub_10000B800(v44, v20, v28);
      v18 -= v40;
      if (v42 == ++v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000BFE9C(void **__src, void **a2, unint64_t a3, id *__dst, uint64_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  unint64_t v46 = __src;
  uint64_t v45 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != a2 || &a2[v14] <= __dst) {
        memmove(__dst, a2, 8 * v14);
      }
      uint64_t v25 = &v5[v14];
      uint64_t v44 = v25;
      unint64_t v46 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        uint64_t v26 = (void **)(a3 - 8);
        uint64_t v27 = v7;
        uint64_t v38 = v5;
        uint64_t v39 = v8;
        while (1)
        {
          unint64_t v28 = (unint64_t)v25;
          uint64_t v29 = v25 - 1;
          uint64_t v43 = *(v25 - 1);
          uint64_t v30 = *--v27;
          id v42 = v30;
          uint64_t v31 = v43;
          id v32 = v30;
          BOOL v33 = sub_1000BD2E4(&v43, &v42, a5);
          if (v41) {
            break;
          }
          BOOL v34 = v33;
          uint64_t v41 = 0;
          uint64_t v35 = v26 + 1;

          if (v34)
          {
            if (v35 != v7 || v26 >= v7) {
              double *v26 = *v27;
            }
            unint64_t v46 = v27;
            uint64_t v36 = v38;
            uint64_t v25 = (id *)v28;
            if (v27 <= v39) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v44 = v29;
            if ((unint64_t)v35 < v28 || (unint64_t)v26 >= v28 || v35 != (void **)v28) {
              double *v26 = *v29;
            }
            uint64_t v27 = v7;
            uint64_t v25 = v29;
            uint64_t v36 = v38;
            if (v7 <= v39) {
              goto LABEL_48;
            }
          }
          --v26;
          uint64_t v7 = v27;
          if (v25 <= v36) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v15 = &v5[v11];
    uint64_t v44 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        uint64_t v16 = v8;
        uint64_t v43 = *v7;
        uint64_t v17 = v5;
        id v42 = *v5;
        id v18 = v42;
        uint64_t v19 = v43;
        id v20 = v18;
        BOOL v21 = sub_1000BD2E4(&v43, &v42, a5);
        if (v41) {
          break;
        }
        BOOL v22 = v21;

        if (v22)
        {
          uint64_t v23 = v7 + 1;
          uint64_t v24 = v16;
          if (v16 < v7 || v16 >= v23 || v16 != v7) {
            *uint64_t v16 = *v7;
          }
          uint64_t v5 = v17;
        }
        else
        {
          uint64_t v24 = v16;
          if (v16 != v17) {
            *uint64_t v16 = *v17;
          }
          uint64_t v5 = v17 + 1;
          uint64_t v45 = v17 + 1;
          uint64_t v23 = v7;
        }
        uint64_t v41 = 0;
        uint64_t v8 = v24 + 1;
        unint64_t v46 = v8;
        if (v5 < v15)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_1000C0838((void **)&v46, (const void **)&v45, &v44);
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000C0200(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_100004BD4(&qword_10015E2F0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v50 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v51 = *(void *)(v13 + 72);
  if (!v51)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v51 == -1) {
    goto LABEL_70;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v51 == -1) {
    goto LABEL_71;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v51;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v16 = v14 / v51;
  if (v15 >= v14 / v51)
  {
    if (v16 < 0) {
      goto LABEL_72;
    }
    uint64_t v18 = v16 * v51;
    if (a4 < a2 || a2 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v30 = a4 + v18;
    unint64_t v52 = a4 + v18;
    unint64_t v54 = a2;
    if (v18 < 1 || a1 >= a2) {
      goto LABEL_50;
    }
    uint64_t v33 = -v51;
    unint64_t v47 = a4;
    uint64_t v48 = v8;
    unint64_t v49 = a1;
    while (1)
    {
      uint64_t v51 = a3 + v33;
      sub_1000248D8(v30 + v33, (uint64_t)v12, &qword_10015E2F0);
      unint64_t v34 = a2 + v33;
      uint64_t v35 = (uint64_t)v12;
      uint64_t v36 = v50;
      sub_1000248D8(a2 + v33, v50, &qword_10015E2F0);
      uint64_t v37 = *(int *)(v8 + 48);
      uint64_t v38 = v33;
      uint64_t v39 = *(void *)(v35 + v37);
      uint64_t v40 = *(void *)(v36 + v37);
      uint64_t v41 = v36;
      uint64_t v12 = (char *)v35;
      sub_10000B9CC(v41, &qword_10015E2F0);
      sub_10000B9CC(v35, &qword_10015E2F0);
      if (v39 < v40) {
        break;
      }
      uint64_t v42 = v51;
      unint64_t v44 = v52;
      v52 += v38;
      uint64_t v33 = v38;
      if (a3 >= v44 && v51 < v44)
      {
        uint64_t v8 = v48;
        unint64_t v43 = v49;
        if (a3 != v44) {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v34 = a2;
        goto LABEL_63;
      }
      uint64_t v8 = v48;
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v34 = a2;
      unint64_t v45 = v47;
      unint64_t v43 = v49;
LABEL_65:
      unint64_t v30 = v52;
      if (v52 > v45)
      {
        a2 = v34;
        a3 = v42;
        if (v34 > v43) {
          continue;
        }
      }
      goto LABEL_50;
    }
    uint64_t v42 = v51;
    if (a3 < a2 || v51 >= a2)
    {
      uint64_t v8 = v48;
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v43 = v49;
      uint64_t v33 = v38;
    }
    else
    {
      uint64_t v8 = v48;
      unint64_t v43 = v49;
      uint64_t v33 = v38;
      if (a3 != a2) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    v54 += v33;
LABEL_63:
    unint64_t v45 = v47;
    goto LABEL_65;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v51;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v52 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        unint64_t v20 = a3;
        sub_1000248D8(a2, (uint64_t)v12, &qword_10015E2F0);
        uint64_t v21 = v50;
        sub_1000248D8(a4, v50, &qword_10015E2F0);
        uint64_t v22 = *(int *)(v8 + 48);
        uint64_t v23 = *(void *)&v12[v22];
        uint64_t v24 = *(void *)(v21 + v22);
        sub_10000B9CC(v21, &qword_10015E2F0);
        sub_10000B9CC((uint64_t)v12, &qword_10015E2F0);
        unint64_t v25 = v54;
        if (v23 >= v24)
        {
          unint64_t v28 = v53 + v51;
          if (v54 < v53 || v54 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v54 != v53) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v53 = v28;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v51;
          if (v54 < a2 || v54 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v54 == a2) {
              unint64_t v25 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v54 = v25 + v51;
        a4 = v53;
        if (v53 >= v49) {
          break;
        }
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_50:
    sub_1000C0B00(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

double *sub_1000C073C(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015E2C8);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  int64_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1000C0838(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_10010AAD0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_1000C08F4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_10010AAD0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1000C0A34(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_10010AAD0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

uint64_t sub_1000C0B00(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_100004BD4(&qword_10015E2F0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_10010AAD0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

double *sub_1000C0C44(uint64_t a1)
{
  return sub_1000C073C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000C0C58()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C0C90()
{
  return sub_1000BC10C();
}

uint64_t sub_1000C0CAC(void *a1)
{
  return sub_1000BB714(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1000C0CCC()
{
  return sub_1000BBB20();
}

uint64_t sub_1000C0CE8()
{
  uint64_t v1 = sub_1001094F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000C0D78()
{
  uint64_t v1 = *(void *)(sub_1001094F0() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1000806D8(v2);
}

uint64_t sub_1000C0DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C0DE8()
{
  return swift_release();
}

uint64_t sub_1000C0DF0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000C0E2C(a1, a2, a3, (void (*)(void))sub_1000C3514, &qword_10015E338, &qword_10015E330, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10009D6D0);
}

uint64_t sub_1000C0E2C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10002E5E0(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_100004BD4(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000C1064(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = _s30MOSuggestionAssetMapsClustererC7ClusterVMa();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = a4;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v17 = a4 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = -1 << *(unsigned char *)(v17 - 24);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(v17 - 24);
  uint64_t v33 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  int64_t v34 = (unint64_t)(63 - v19) >> 6;
  int64_t v31 = v34 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_1000C3388(*(void *)(v35 + 48) + v29 * v25, (uint64_t)v12, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
    sub_100041CF0((uint64_t)v12, (uint64_t)v15);
    uint64_t result = sub_100041CF0((uint64_t)v15, a2);
    if (v23 == a3) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    unint64_t v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    uint64_t v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v34)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000C1344(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100004BD4(&qword_10015E2F0);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v35 = a4 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v33 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  int64_t v34 = (unint64_t)(63 - v16) >> 6;
  int64_t v31 = v34 - 1;
  uint64_t v21 = a3;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v27 = *(void *)(a4 + 48);
    uint64_t v28 = sub_1001094F0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v27 + *(void *)(*(void *)(v28 - 8) + 72) * v23, v28);
    *(void *)&v11[*(int *)(v37 + 48)] = *(void *)(*(void *)(a4 + 56) + 8 * v23);
    sub_10000B800((uint64_t)v11, (uint64_t)v14, &qword_10015E2F0);
    uint64_t result = sub_10000B800((uint64_t)v14, a2, &qword_10015E2F0);
    if (v20 == v21)
    {
      a3 = v21;
      goto LABEL_38;
    }
    a2 += *(void *)(v36 + 72);
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v24 >= v34) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v34)
      {
        unint64_t v18 = 0;
        int64_t v19 = v24;
      }
      else
      {
        unint64_t v25 = *(void *)(v35 + 8 * v19);
        if (v25) {
          goto LABEL_14;
        }
        int64_t v26 = v24 + 2;
        if (v24 + 2 >= v34) {
          goto LABEL_33;
        }
        unint64_t v25 = *(void *)(v35 + 8 * v26);
        if (v25)
        {
LABEL_17:
          int64_t v24 = v26;
          goto LABEL_18;
        }
        int64_t v19 = v24 + 3;
        if (v24 + 3 < v34)
        {
          unint64_t v25 = *(void *)(v35 + 8 * v19);
          if (v25)
          {
LABEL_14:
            int64_t v24 = v19;
            goto LABEL_18;
          }
          int64_t v26 = v24 + 4;
          if (v24 + 4 >= v34)
          {
LABEL_33:
            unint64_t v18 = 0;
            goto LABEL_37;
          }
          unint64_t v25 = *(void *)(v35 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              int64_t v24 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_42;
              }
              if (v24 >= v34)
              {
                unint64_t v18 = 0;
                int64_t v19 = v31;
                goto LABEL_37;
              }
              unint64_t v25 = *(void *)(v35 + 8 * v24);
              ++v26;
              if (v25) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v18 = 0;
        int64_t v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      uint64_t v16 = v32;
      a1 = v33;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v18 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1000C1698(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000C16AC(unint64_t a1)
{
  return sub_1000BE118(0, *(void *)(a1 + 16), 0, a1, &qword_10015D980, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_1000C16F0(uint64_t a1)
{
  return sub_1000BE644(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000C1704(unint64_t a1)
{
  return sub_1000BE918(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1000C1718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v50 = a1;
  uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = sub_1001094F0();
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v53 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v57 = (char *)&v48 - v19;
  __chkstk_darwin(v18);
  unint64_t v63 = (char *)&v48 - v21;
  uint64_t v49 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    unint64_t v23 = (void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    uint64_t v61 = (void (**)(uint64_t, uint64_t))(v20 + 8);
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v54 = v22;
    uint64_t v24 = v22 + 8 * a3 - 8;
    unint64_t v52 = v14;
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v20 + 32);
LABEL_5:
    unint64_t v25 = *(void **)(v54 + 8 * a3);
    uint64_t v26 = v50;
    uint64_t v51 = v24;
    uint64_t v55 = a3;
    while (1)
    {
      uint64_t v27 = *(void **)v24;
      id v28 = v25;
      id v64 = v27;
      id v60 = v28;
      id v29 = [v28 id];
      if (!v29) {
        break;
      }
      uint64_t v30 = v29;
      int64_t v31 = v57;
      sub_1001094B0();

      uint64_t v32 = *v23;
      (*v23)(v14, v31, v15);
      uint64_t v33 = *v62;
      (*v62)(v14, 0, 1, v15);
      if ((*v56)(v14, 1, v15) == 1) {
        goto LABEL_11;
      }
      v32(v63, v14, v15);
      if (!*(void *)(a5 + 16)) {
        goto LABEL_14;
      }
LABEL_12:
      unint64_t v34 = sub_1000FD0B0((uint64_t)v63);
      if (v35)
      {
        uint64_t v59 = *(void *)(*(void *)(a5 + 56) + 8 * v34);
        goto LABEL_15;
      }
LABEL_14:
      uint64_t v59 = 0;
LABEL_15:
      uint64_t v36 = *v61;
      (*v61)((uint64_t)v63, v15);
      id v37 = [v64 id];
      if (!v37)
      {
        v33(v12, 1, 1, v15);
LABEL_20:
        uint64_t v41 = (uint64_t)v53;
        sub_1001094E0();
        sub_10000B9CC((uint64_t)v12, (uint64_t *)&unk_10015A850);
        if (!*(void *)(a5 + 16)) {
          goto LABEL_23;
        }
        goto LABEL_21;
      }
      uint64_t v38 = v37;
      uint64_t v39 = v57;
      sub_1001094B0();

      uint64_t v40 = *v58;
      (*v58)(v12, v39, v15);
      v33(v12, 0, 1, v15);
      if ((*v56)(v12, 1, v15) == 1) {
        goto LABEL_20;
      }
      uint64_t v41 = (uint64_t)v53;
      v40(v53, v12, v15);
      if (!*(void *)(a5 + 16)) {
        goto LABEL_23;
      }
LABEL_21:
      unint64_t v42 = sub_1000FD0B0(v41);
      if (v43)
      {
        uint64_t v44 = *(void *)(*(void *)(a5 + 56) + 8 * v42);
        goto LABEL_24;
      }
LABEL_23:
      uint64_t v44 = 0;
LABEL_24:
      v36(v41, v15);

      unint64_t v23 = v58;
      BOOL v45 = v59 < v44;
      uint64_t v46 = v55;
      uint64_t v14 = v52;
      if (!v45) {
        goto LABEL_4;
      }
      if (!v54)
      {
        __break(1u);
        return;
      }
      unint64_t v47 = *(void **)v24;
      unint64_t v25 = *(void **)(v24 + 8);
      *(void *)uint64_t v24 = v25;
      *(void *)(v24 + 8) = v47;
      v24 -= 8;
      if (v46 == ++v26)
      {
LABEL_4:
        a3 = v46 + 1;
        uint64_t v24 = v51 + 8;
        if (a3 == v49) {
          return;
        }
        goto LABEL_5;
      }
    }
    uint64_t v33 = *v62;
    (*v62)(v14, 1, 1, v15);
LABEL_11:
    sub_1001094E0();
    sub_10000B9CC((uint64_t)v14, (uint64_t *)&unk_10015A850);
    if (!*(void *)(a5 + 16)) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
}

uint64_t sub_1000C1BE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v189 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v189 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v189 - v16;
  v219 = (void **)sub_1001094F0();
  uint64_t v18 = (uint64_t)*(v219 - 1);
  uint64_t v19 = __chkstk_darwin(v219);
  uint64_t v217 = (uint64_t)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v206 = (char *)&v189 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v202 = (uint64_t)&v189 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v211 = (char *)&v189 - v26;
  __chkstk_darwin(v25);
  v197 = (char *)&v189 - v27;
  v194 = a1;
  Swift::Int v28 = a1[1];
  uint64_t v216 = a2;
  swift_bridgeObjectRetain_n();
  Swift::Int v29 = sub_10010AC50(v28);
  if (v29 >= v28)
  {
    if (v28 < 0) {
      goto LABEL_180;
    }
    if (v28)
    {
      uint64_t v34 = v216;
      swift_bridgeObjectRetain();
      sub_1000C1718(0, v28, 1, v194, v34);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v28 >= 0) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = v28 + 1;
  }
  if (v28 < -1) {
    goto LABEL_188;
  }
  v195 = v17;
  v196 = v15;
  Swift::Int v200 = v28;
  Swift::Int v193 = v29;
  if (v28 < 2)
  {
    uint64_t v36 = _swiftEmptyArrayStorage;
    uint64_t v222 = (uint64_t)_swiftEmptyArrayStorage;
    v201 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v33 = v219;
    if (v28 != 1)
    {
      unint64_t v120 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_144:
      if (v120 >= 2)
      {
        v177 = (char *)*v194;
        v218 = (char *)*v194;
        do
        {
          unint64_t v178 = v120 - 2;
          if (v120 < 2) {
            goto LABEL_174;
          }
          if (!v177) {
            goto LABEL_187;
          }
          uint64_t v179 = v3;
          v180 = v36;
          double v181 = v36[2 * v178 + 4];
          double v182 = v36[2 * v120 + 3];
          double v183 = v36[2 * v120 + 2];
          v219 = (void **)&v177[8 * *(void *)&v181];
          v184 = (void **)&v177[8 * *(void *)&v183];
          unint64_t v185 = (unint64_t)&v177[8 * *(void *)&v182];
          uint64_t v186 = v216;
          swift_bridgeObjectRetain();
          sub_1000BFE9C(v219, v184, v185, v201, v186);
          if (v179) {
            break;
          }
          if (*(uint64_t *)&v182 < *(uint64_t *)&v181) {
            goto LABEL_176;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v180 = sub_1000C0C44((uint64_t)v180);
          }
          if (v178 >= *((void *)v180 + 2)) {
            goto LABEL_177;
          }
          v187 = &v180[2 * v178 + 4];
          double *v187 = v181;
          v187[1] = v182;
          unint64_t v188 = *((void *)v180 + 2);
          if (v120 > v188) {
            goto LABEL_178;
          }
          memmove(&v180[2 * v120 + 2], &v180[2 * v120 + 4], 16 * (v188 - v120));
          uint64_t v36 = v180;
          *((void *)v180 + 2) = v188 - 1;
          unint64_t v120 = v188 - 1;
          uint64_t v3 = 0;
          v177 = v218;
        }
        while (v188 > 2);
      }
LABEL_155:
      swift_bridgeObjectRelease();
LABEL_158:
      *(void *)((v222 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_100109F50();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v31 = v30 >> 1;
    type metadata accessor for JournalEntryAssetMO();
    uint64_t v32 = sub_100109F80();
    *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) = v31;
    v201 = (id *)((v32 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v222 = v32;
    uint64_t v33 = v219;
  }
  unint64_t v37 = 0;
  uint64_t v38 = *v194;
  uint64_t v39 = (void (**)(void))(v18 + 32);
  v210 = (unsigned int (**)(uint64_t, uint64_t, void **))(v18 + 48);
  v214 = (void (**)(uint64_t, void **))(v18 + 8);
  v215 = (void (**)(char *, uint64_t, uint64_t, void **))(v18 + 56);
  uint64_t v191 = v38 + 16;
  uint64_t v205 = v38;
  uint64_t v192 = v38 - 8;
  uint64_t v36 = _swiftEmptyArrayStorage;
  v208 = v12;
  int64_t v40 = v200;
  v212 = (void (**)(void))(v18 + 32);
  v207 = v9;
  while (1)
  {
    int64_t v41 = v37;
    int64_t v42 = v37 + 1;
    v199 = v36;
    uint64_t v203 = v37;
    if ((uint64_t)(v37 + 1) >= v40)
    {
      Swift::Int v77 = v193;
      goto LABEL_54;
    }
    char v43 = v36;
    uint64_t v44 = *(void **)(v205 + 8 * v42);
    unint64_t v45 = v37;
    id v220 = *(id *)(v205 + 8 * v37);
    id v46 = v220;
    v221 = v44;
    id v47 = v44;
    id v48 = v46;
    LODWORD(v198) = sub_1000BD2E4(&v221, &v220, v216);
    if (v3)
    {
      swift_bridgeObjectRelease();

      goto LABEL_158;
    }

    int64_t v42 = v45 + 2;
    int64_t v41 = v45;
    if ((uint64_t)(v45 + 2) >= v200)
    {
      uint64_t v39 = v212;
      uint64_t v36 = v43;
      goto LABEL_45;
    }
    uint64_t v49 = (id *)(v191 + 8 * v45);
    uint64_t v39 = v212;
    while (1)
    {
      int64_t v209 = v42;
      uint64_t v50 = *(v49 - 1);
      id v51 = *v49;
      v218 = v50;
      id v52 = [v51 id];
      if (!v52)
      {
        uint64_t v57 = *v215;
        uint64_t v56 = (uint64_t)v195;
        (*v215)(v195, 1, 1, v33);
LABEL_23:
        uint64_t v58 = (uint64_t)v197;
        sub_1001094E0();
        sub_10000B9CC(v56, (uint64_t *)&unk_10015A850);
        goto LABEL_24;
      }
      unint64_t v53 = v52;
      uint64_t v54 = v211;
      sub_1001094B0();

      uint64_t v55 = *v39;
      uint64_t v56 = (uint64_t)v195;
      ((void (*)(char *, char *, void **))*v39)(v195, v54, v33);
      uint64_t v57 = *v215;
      (*v215)((char *)v56, 0, 1, v33);
      if ((*v210)(v56, 1, v33) == 1) {
        goto LABEL_23;
      }
      uint64_t v58 = (uint64_t)v197;
      v55();
LABEL_24:
      uint64_t v59 = v216;
      uint64_t v60 = *(void *)(v216 + 16);
      v213 = (void **)v51;
      if (v60 && (unint64_t v61 = sub_1000FD0B0(v58), (v62 & 1) != 0)) {
        v204 = *(void ***)(*(void *)(v59 + 56) + 8 * v61);
      }
      else {
        v204 = 0;
      }
      uint64_t v63 = v3;
      id v64 = *v214;
      uint64_t v65 = v58;
      uint64_t v33 = v219;
      (*v214)(v65, v219);
      id v66 = [v218 id];
      if (v66)
      {
        uint64_t v67 = v66;
        Swift::Int v68 = v211;
        sub_1001094B0();

        unint64_t v69 = *v212;
        uint64_t v70 = (uint64_t)v196;
        uint64_t v71 = v68;
        uint64_t v39 = v212;
        ((void (*)(char *, char *, void **))*v212)(v196, v71, v33);
        v57((char *)v70, 0, 1, v33);
        if ((*v210)(v70, 1, v33) != 1)
        {
          ((void (*)(uint64_t, uint64_t, void **))v69)(v202, v70, v33);
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v70 = (uint64_t)v196;
        v57(v196, 1, 1, v33);
      }
      sub_1001094E0();
      sub_10000B9CC(v70, (uint64_t *)&unk_10015A850);
LABEL_33:
      uint64_t v9 = v207;
      uint64_t v72 = v216;
      uint64_t v3 = v63;
      if (*(void *)(v216 + 16))
      {
        unint64_t v73 = sub_1000FD0B0(v202);
        BOOL v74 = v213;
        uint64_t v76 = (v75 & 1) != 0 ? *(void *)(*(void *)(v72 + 56) + 8 * v73) : 0;
        uint64_t v12 = v208;
      }
      else
      {
        uint64_t v76 = 0;
        BOOL v74 = v213;
      }
      v64(v202, v33);

      if (((v198 ^ ((uint64_t)v204 >= v76)) & 1) == 0) {
        break;
      }
      int64_t v42 = v209 + 1;
      ++v49;
      uint64_t v36 = v199;
      if (v200 == v209 + 1)
      {
        int64_t v42 = v200;
        goto LABEL_44;
      }
    }
    uint64_t v36 = v199;
    int64_t v42 = v209;
LABEL_44:
    int64_t v41 = v203;
LABEL_45:
    Swift::Int v77 = v193;
    if (v198) {
      break;
    }
LABEL_54:
    if (v42 >= v200) {
      goto LABEL_89;
    }
    if (__OFSUB__(v42, v41)) {
      goto LABEL_179;
    }
    if (v42 - v41 >= v77) {
      goto LABEL_89;
    }
    if (__OFADD__(v41, v77)) {
      goto LABEL_181;
    }
    int64_t v83 = v200;
    if (v41 + v77 < v200) {
      int64_t v83 = v41 + v77;
    }
    if (v83 < v41)
    {
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    if (v42 == v83) {
      goto LABEL_89;
    }
    uint64_t v190 = v3;
    uint64_t v84 = (void **)(v192 + 8 * v42);
    uint64_t v85 = v205;
    int64_t v198 = v83;
    while (2)
    {
      v87 = *(void **)(v85 + 8 * v42);
      int64_t v88 = v41;
      v204 = v84;
      int64_t v209 = v42;
      while (1)
      {
        uint64_t v89 = *v84;
        BOOL v90 = v87;
        v218 = v89;
        v213 = v90;
        id v91 = [v90 id];
        if (!v91)
        {
          uint64_t v95 = *v215;
          (*v215)(v12, 1, 1, v33);
          uint64_t v97 = (uint64_t)v206;
LABEL_70:
          sub_1001094E0();
          sub_10000B9CC((uint64_t)v12, (uint64_t *)&unk_10015A850);
          goto LABEL_71;
        }
        char v92 = v91;
        uint64_t v93 = v211;
        sub_1001094B0();

        uint64_t v94 = *v39;
        ((void (*)(char *, char *, void **))*v39)(v12, v93, v33);
        uint64_t v95 = *v215;
        (*v215)(v12, 0, 1, v33);
        unsigned int v96 = (*v210)((uint64_t)v12, 1, v33);
        uint64_t v97 = (uint64_t)v206;
        if (v96 == 1) {
          goto LABEL_70;
        }
        ((void (*)(char *, char *, void **))v94)(v206, v12, v33);
LABEL_71:
        uint64_t v98 = v216;
        if (*(void *)(v216 + 16) && (unint64_t v99 = sub_1000FD0B0(v97), (v100 & 1) != 0)) {
          uint64_t v101 = *(void *)(*(void *)(v98 + 56) + 8 * v99);
        }
        else {
          uint64_t v101 = 0;
        }
        uint64_t v102 = *v214;
        uint64_t v103 = v97;
        id v104 = v219;
        (*v214)(v103, v219);
        id v105 = [v218 id];
        if (!v105)
        {
          uint64_t v109 = (uint64_t)v207;
          v95(v207, 1, 1, v104);
LABEL_79:
          sub_1001094E0();
          sub_10000B9CC(v109, (uint64_t *)&unk_10015A850);
          goto LABEL_80;
        }
        uint64_t v106 = v105;
        uint64_t v107 = v211;
        sub_1001094B0();

        unint64_t v108 = *v39;
        uint64_t v109 = (uint64_t)v207;
        uint64_t v110 = v107;
        uint64_t v85 = v205;
        ((void (*)(char *, char *, void **))v108)(v207, v110, v104);
        v95((char *)v109, 0, 1, v104);
        if ((*v210)(v109, 1, v104) == 1) {
          goto LABEL_79;
        }
        ((void (*)(uint64_t, uint64_t, void **))v108)(v217, v109, v219);
LABEL_80:
        uint64_t v9 = (char *)v109;
        uint64_t v111 = v216;
        uint64_t v39 = v212;
        if (*(void *)(v216 + 16) && (unint64_t v112 = sub_1000FD0B0(v217), (v113 & 1) != 0)) {
          uint64_t v114 = *(void *)(*(void *)(v111 + 56) + 8 * v112);
        }
        else {
          uint64_t v114 = 0;
        }
        v102(v217, v219);

        if (v101 >= v114) {
          break;
        }
        uint64_t v12 = v208;
        int64_t v86 = v209;
        if (!v85) {
          goto LABEL_184;
        }
        unint64_t v115 = *v84;
        v87 = v84[1];
        *uint64_t v84 = v87;
        v84[1] = v115;
        --v84;
        ++v88;
        uint64_t v33 = v219;
        if (v86 == v88) {
          goto LABEL_64;
        }
      }
      uint64_t v12 = v208;
      int64_t v86 = v209;
      uint64_t v33 = v219;
LABEL_64:
      int64_t v42 = v86 + 1;
      int64_t v41 = v203;
      uint64_t v84 = v204 + 1;
      if (v42 != v198) {
        continue;
      }
      break;
    }
    int64_t v42 = v198;
    uint64_t v3 = v190;
    uint64_t v36 = v199;
LABEL_89:
    if (v42 < v41) {
      goto LABEL_175;
    }
    uint64_t v116 = (uint64_t)v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v209 = v42;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v36 = (double *)v116;
    }
    else {
      uint64_t v36 = sub_1000C073C(0, *(void *)(v116 + 16) + 1, 1, v116);
    }
    unint64_t v119 = *((void *)v36 + 2);
    unint64_t v118 = *((void *)v36 + 3);
    unint64_t v120 = v119 + 1;
    if (v119 >= v118 >> 1) {
      uint64_t v36 = sub_1000C073C((double *)(v118 > 1), v119 + 1, 1, (uint64_t)v36);
    }
    *((void *)v36 + 2) = v120;
    uint64_t v121 = (char *)(v36 + 4);
    unint64_t v122 = &v36[2 * v119 + 4];
    int64_t v123 = v209;
    *(void *)unint64_t v122 = v203;
    *((void *)v122 + 1) = v123;
    if (v119)
    {
      v218 = (char *)(v36 + 4);
      while (1)
      {
        unint64_t v124 = v120 - 1;
        if (v120 >= 4)
        {
          uint64_t v129 = &v121[16 * v120];
          uint64_t v130 = *((void *)v129 - 8);
          uint64_t v131 = *((void *)v129 - 7);
          BOOL v135 = __OFSUB__(v131, v130);
          uint64_t v132 = v131 - v130;
          if (v135) {
            goto LABEL_163;
          }
          uint64_t v134 = *((void *)v129 - 6);
          uint64_t v133 = *((void *)v129 - 5);
          BOOL v135 = __OFSUB__(v133, v134);
          uint64_t v127 = v133 - v134;
          char v128 = v135;
          if (v135) {
            goto LABEL_164;
          }
          unint64_t v136 = v120 - 2;
          Swift::Int v137 = &v121[16 * v120 - 32];
          uint64_t v139 = *(void *)v137;
          uint64_t v138 = *((void *)v137 + 1);
          BOOL v135 = __OFSUB__(v138, v139);
          uint64_t v140 = v138 - v139;
          if (v135) {
            goto LABEL_166;
          }
          BOOL v135 = __OFADD__(v127, v140);
          uint64_t v141 = v127 + v140;
          if (v135) {
            goto LABEL_169;
          }
          if (v141 >= v132)
          {
            v159 = &v121[16 * v124];
            uint64_t v161 = *(void *)v159;
            uint64_t v160 = *((void *)v159 + 1);
            BOOL v135 = __OFSUB__(v160, v161);
            uint64_t v162 = v160 - v161;
            if (v135) {
              goto LABEL_173;
            }
            BOOL v152 = v127 < v162;
            goto LABEL_127;
          }
        }
        else
        {
          if (v120 != 3)
          {
            uint64_t v153 = *((void *)v36 + 4);
            uint64_t v154 = *((void *)v36 + 5);
            BOOL v135 = __OFSUB__(v154, v153);
            uint64_t v146 = v154 - v153;
            char v147 = v135;
            goto LABEL_121;
          }
          uint64_t v126 = *((void *)v36 + 4);
          uint64_t v125 = *((void *)v36 + 5);
          BOOL v135 = __OFSUB__(v125, v126);
          uint64_t v127 = v125 - v126;
          char v128 = v135;
        }
        if (v128) {
          goto LABEL_165;
        }
        unint64_t v136 = v120 - 2;
        v142 = &v121[16 * v120 - 32];
        uint64_t v144 = *(void *)v142;
        uint64_t v143 = *((void *)v142 + 1);
        BOOL v145 = __OFSUB__(v143, v144);
        uint64_t v146 = v143 - v144;
        char v147 = v145;
        if (v145) {
          goto LABEL_168;
        }
        v148 = &v121[16 * v124];
        uint64_t v150 = *(void *)v148;
        uint64_t v149 = *((void *)v148 + 1);
        BOOL v135 = __OFSUB__(v149, v150);
        uint64_t v151 = v149 - v150;
        if (v135) {
          goto LABEL_171;
        }
        if (__OFADD__(v146, v151)) {
          goto LABEL_172;
        }
        if (v146 + v151 >= v127)
        {
          BOOL v152 = v127 < v151;
LABEL_127:
          if (v152) {
            unint64_t v124 = v136;
          }
          goto LABEL_129;
        }
LABEL_121:
        if (v147) {
          goto LABEL_167;
        }
        v155 = &v121[16 * v124];
        uint64_t v157 = *(void *)v155;
        uint64_t v156 = *((void *)v155 + 1);
        BOOL v135 = __OFSUB__(v156, v157);
        uint64_t v158 = v156 - v157;
        if (v135) {
          goto LABEL_170;
        }
        if (v158 < v146) {
          goto LABEL_138;
        }
LABEL_129:
        unint64_t v163 = v124 - 1;
        if (v124 - 1 >= v120)
        {
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        if (!v205) {
          goto LABEL_185;
        }
        v164 = v36;
        v165 = v9;
        uint64_t v166 = v3;
        v167 = &v121[16 * v163];
        uint64_t v168 = *(void *)v167;
        unint64_t v169 = v124;
        v170 = &v121[16 * v124];
        uint64_t v171 = *(void *)v170;
        uint64_t v172 = *((void *)v170 + 1);
        v213 = (void **)(v205 + 8 * *(void *)v167);
        uint64_t v203 = v205 + 8 * v172;
        v204 = (void **)(v205 + 8 * v171);
        uint64_t v173 = v216;
        swift_bridgeObjectRetain();
        sub_1000BFE9C(v213, v204, v203, v201, v173);
        if (v166) {
          goto LABEL_155;
        }
        if (v172 < v168) {
          goto LABEL_160;
        }
        v174 = v164;
        if (v169 > *((void *)v164 + 2)) {
          goto LABEL_161;
        }
        *(void *)v167 = v168;
        *(void *)&v218[16 * v163 + 8] = v172;
        unint64_t v175 = *((void *)v164 + 2);
        if (v169 >= v175) {
          goto LABEL_162;
        }
        unint64_t v120 = v175 - 1;
        v176 = v174;
        memmove(v170, v170 + 16, 16 * (v175 - 1 - v169));
        uint64_t v36 = v176;
        uint64_t v121 = v218;
        uint64_t v33 = v219;
        *((void *)v176 + 2) = v175 - 1;
        uint64_t v12 = v208;
        uint64_t v39 = v212;
        uint64_t v3 = 0;
        uint64_t v9 = v165;
        if (v175 <= 2) {
          goto LABEL_138;
        }
      }
    }
    unint64_t v120 = 1;
LABEL_138:
    int64_t v40 = v200;
    unint64_t v37 = v209;
    if (v209 >= v200) {
      goto LABEL_144;
    }
  }
  if (v42 >= v41)
  {
    if (v41 < v42)
    {
      uint64_t v78 = (uint64_t *)(v192 + 8 * v42);
      int64_t v79 = v42;
      int64_t v80 = v41;
      unint64_t v81 = (uint64_t *)(v205 + 8 * v41);
      while (1)
      {
        if (v80 != --v79)
        {
          if (!v205) {
            goto LABEL_186;
          }
          uint64_t v82 = *v81;
          *unint64_t v81 = *v78;
          *uint64_t v78 = v82;
        }
        ++v80;
        --v78;
        ++v81;
        if (v80 >= v79) {
          goto LABEL_54;
        }
      }
    }
    goto LABEL_54;
  }
LABEL_183:
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_188:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_10010AA50();
  __break(1u);
  return result;
}

uint64_t sub_1000C2C68(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_1000C1698(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_1000C1BE8(v8, a2);
  swift_bridgeObjectRelease();
  sub_10010A9C0();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1000C2D14()
{
  uint64_t v62 = sub_100004BD4(&qword_10015E2F0);
  uint64_t v54 = *(void *)(v62 - 8);
  uint64_t v0 = __chkstk_darwin(v62);
  uint64_t v2 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v0);
  uint64_t v60 = (char *)&v52 - v4;
  __chkstk_darwin(v3);
  uint64_t v67 = (char *)&v52 - v5;
  uint64_t v6 = sub_100004BD4(&qword_10015E2F8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v53 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4(&qword_10015E300);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (unint64_t *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v52 - v13);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000BEF54(v15);
  swift_bridgeObjectRelease();
  Swift::Int v68 = v16;
  sub_1000BF0E8((unint64_t *)&v68);
  unint64_t v17 = (unint64_t)v68;
  unint64_t v18 = *((void *)v68 + 2);
  id v64 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v19 = (double *)&_swiftEmptyDictionarySingleton;
  uint64_t v63 = (unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
  unint64_t v20 = 0;
  unint64_t v61 = v2;
  uint64_t v58 = v12;
  uint64_t v59 = v6;
  unint64_t v56 = (unint64_t)v68;
  uint64_t v57 = v14;
  unint64_t v55 = v18;
  while (1)
  {
    if (v20 == v18)
    {
      uint64_t v21 = 1;
      unint64_t v22 = v18;
    }
    else
    {
      if (v20 >= *(void *)(v17 + 16)) {
        goto LABEL_22;
      }
      unint64_t v66 = v20 + 1;
      uint64_t v23 = (uint64_t)&v53[*(int *)(v6 + 48)];
      sub_1000248D8(v17+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v20, v23, &qword_10015E2F0);
      uint64_t v24 = (uint64_t)v12 + *(int *)(v6 + 48);
      *uint64_t v12 = v20;
      sub_10000B800(v23, v24, &qword_10015E2F0);
      uint64_t v21 = 0;
      unint64_t v22 = v66;
    }
    (*v64)(v12, v21, 1, v6);
    sub_10000B800((uint64_t)v12, (uint64_t)v14, &qword_10015E300);
    if ((*v63)(v14, 1, v6) == 1)
    {
      swift_release();
      return (uint64_t)v19;
    }
    unint64_t v25 = *v14;
    unint64_t v65 = v22;
    unint64_t v66 = v25;
    uint64_t v26 = (char *)v14 + *(int *)(v6 + 48);
    uint64_t v27 = v62;
    uint64_t v28 = *(int *)(v62 + 48);
    uint64_t v29 = *(void *)&v26[v28];
    uint64_t v30 = sub_1001094F0();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    uint64_t v33 = v60;
    v32(v60, v26, v30);
    *(void *)&v33[v28] = v29;
    uint64_t v34 = *(int *)(v27 + 48);
    uint64_t v35 = (uint64_t)v67;
    v32(v67, v33, v30);
    *(void *)(v35 + v34) = v29;
    uint64_t v36 = *(int *)(v27 + 48);
    uint64_t v37 = (uint64_t)v61;
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    v38(v61, v35, v30);
    *(void *)(v37 + v36) = v29;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v68 = v19;
    unint64_t v41 = sub_1000FD0B0(v37);
    uint64_t v42 = *((void *)v19 + 2);
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43)) {
      break;
    }
    char v45 = v40;
    if (*((void *)v19 + 3) >= v44)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v68;
        if (v40) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_100100984();
        uint64_t v19 = v68;
        if (v45) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_1000FE308(v44, isUniquelyReferenced_nonNull_native);
      unint64_t v46 = sub_1000FD0B0(v37);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_24;
      }
      unint64_t v41 = v46;
      uint64_t v19 = v68;
      if (v45)
      {
LABEL_2:
        *(void *)(*((void *)v19 + 7) + 8 * v41) = v66;
        goto LABEL_3;
      }
    }
    *(void *)&v19[(v41 >> 6) + 8] |= 1 << v41;
    v38((char *)(*((void *)v19 + 6) + *(void *)(v31 + 72) * v41), v37, v30);
    *(void *)(*((void *)v19 + 7) + 8 * v41) = v66;
    uint64_t v48 = *((void *)v19 + 2);
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_23;
    }
    *((void *)v19 + 2) = v50;
LABEL_3:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v37, v30);
    sub_10000B9CC((uint64_t)v67, &qword_10015E2F0);
    uint64_t v12 = v58;
    uint64_t v6 = v59;
    unint64_t v17 = v56;
    uint64_t v14 = v57;
    unint64_t v18 = v55;
    unint64_t v20 = v65;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  sub_10010AD20();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000C328C()
{
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

void sub_1000C32CC()
{
  sub_1000BA04C(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1000C32F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C3328()
{
}

uint64_t sub_1000C3344()
{
  return sub_1001094A0() & 1;
}

uint64_t sub_1000C3388(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C33F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000C3450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C3498()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1000C34E8()
{
  sub_1000CB5E8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void *)(v0 + 72));
}

unint64_t sub_1000C3514()
{
  unint64_t result = qword_100159E00;
  if (!qword_100159E00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100159E00);
  }
  return result;
}

uint64_t sub_1000C3554()
{
  return sub_1000C3344() & 1;
}

uint64_t type metadata accessor for MapManager()
{
  return self;
}

uint64_t sub_1000C3594(uint64_t a1)
{
  uint64_t v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v3 = *((void *)v2 - 1);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v65 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v58 - v6);
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v9 = sub_10007D128((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  uint64_t v59 = v12;
  while (1)
  {
    sub_10006A6C8(v11, (uint64_t)v7);
    uint64_t v15 = (double *)((char *)v7 + v2[10]);
    if ((_BYTE)v15[1]) {
      goto LABEL_4;
    }
    uint64_t v16 = (double *)((char *)v7 + v2[11]);
    if ((_BYTE)v16[1]) {
      goto LABEL_4;
    }
    double v17 = *v15;
    double v18 = *v16;
    if (*(void *)(v9 + 16))
    {
      sub_1000FD03C(v17, *v16);
      if (v19) {
        goto LABEL_4;
      }
    }
    unint64_t v20 = (uint64_t *)((char *)v7 + v2[13]);
    unint64_t v21 = v20[1];
    int v64 = *((unsigned __int8 *)v7 + v2[14]);
    if (v21 >> 60 == 15)
    {
      unint64_t v22 = 0;
    }
    else
    {
      uint64_t v23 = *v20;
      sub_100006F28(*v20, v21);
      unint64_t v22 = (void *)sub_1000E8454();
      sub_100008508(v23, v21);
    }
    uint64_t v24 = (char *)v7 + v2[16];
    uint64_t v25 = *(void *)v24;
    int v26 = v24[8];
    sub_10006A6C8((uint64_t)v7, v65);
    if (v26 == 1)
    {
      uint64_t v27 = (uint64_t *)(v65 + v2[15]);
      if (v27[1])
      {
        uint64_t v25 = 0;
        if (v22)
        {
          id v28 = [v22 placemark];
          id v29 = [v28 location];

          if (v29)
          {
            [v29 horizontalAccuracy];
            uint64_t v25 = v30;
          }
        }
      }
      else
      {
        uint64_t v25 = *v27;
      }
    }
    sub_10006A72C(v65);
    uint64_t v31 = (void *)v7[1];
    uint64_t v63 = v8;
    if (v31)
    {
      uint64_t v66 = *v7;
      uint64_t v32 = v31;
    }
    else
    {
      uint64_t v66 = 0;
      uint64_t v32 = (void *)0xE000000000000000;
    }
    id v33 = v22;
    swift_bridgeObjectRetain();
    id v62 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = (void *)v9;
    unint64_t v36 = sub_1000FD03C(v17, v18);
    uint64_t v37 = *(void *)(v9 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v9 + 24) >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1001005A4();
      }
    }
    else
    {
      sub_1000FDC2C(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1000FD03C(v17, v18);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_39;
      }
      unint64_t v36 = v41;
    }
    char v43 = v64 & 1;
    uint64_t v44 = v67;
    uint64_t v60 = v22;
    unint64_t v61 = (unint64_t)v67;
    v64 &= 1u;
    if (v40)
    {
      uint64_t v45 = v67[7] + 104 * v36;
      unint64_t v46 = v2;
      char v47 = *(void **)(v45 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v2 = v46;
      char v48 = v64;
      swift_bridgeObjectRelease();
      *(double *)uint64_t v45 = v17;
      *(double *)(v45 + 8) = v18;
      *(void *)(v45 + 16) = v22;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = 1;
      *(void *)(v45 + 40) = v66;
      *(void *)(v45 + 48) = v32;
      *(unsigned char *)(v45 + 56) = v48;
      *(void *)(v45 + 64) = 0;
      *(void *)(v45 + 72) = 0;
      *(void *)(v45 + 80) = v25;
      *(void *)(v45 + 88) = 0;
      *(void *)(v45 + 96) = 0xE000000000000000;
    }
    else
    {
      v67[(v36 >> 6) + 8] |= 1 << v36;
      BOOL v49 = (double *)(v44[6] + 16 * v36);
      double *v49 = v17;
      v49[1] = v18;
      uint64_t v50 = v44[7] + 104 * v36;
      *(double *)uint64_t v50 = v17;
      *(double *)(v50 + 8) = v18;
      *(void *)(v50 + 16) = v22;
      *(void *)(v50 + 24) = 0;
      *(unsigned char *)(v50 + 32) = 1;
      *(void *)(v50 + 40) = v66;
      *(void *)(v50 + 48) = v32;
      *(unsigned char *)(v50 + 56) = v43;
      *(void *)(v50 + 64) = 0;
      *(void *)(v50 + 72) = 0;
      *(void *)(v50 + 80) = v25;
      *(void *)(v50 + 88) = 0;
      *(void *)(v50 + 96) = 0xE000000000000000;
      uint64_t v51 = v44[2];
      BOOL v52 = __OFADD__(v51, 1);
      uint64_t v53 = v51 + 1;
      if (v52) {
        goto LABEL_38;
      }
      v44[2] = v53;
    }
    swift_bridgeObjectRelease();
    id v54 = v62;
    id v62 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_10009E7DC(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v9 = v61;
    unint64_t v56 = *((void *)v8 + 2);
    unint64_t v55 = *((void *)v8 + 3);
    if (v56 >= v55 >> 1) {
      uint64_t v8 = sub_10009E7DC((double *)(v55 > 1), v56 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v56 + 1;
    uint64_t v13 = &v8[13 * v56];
    v13[4] = v17;
    v13[5] = v18;
    *((void *)v13 + 6) = v60;
    v13[7] = 0.0;
    *((unsigned char *)v13 + 64) = 1;
    id v14 = v62;
    *((void *)v13 + 9) = v66;
    *((void *)v13 + 10) = v14;
    *((unsigned char *)v13 + 88) = v64;
    v13[12] = 0.0;
    v13[13] = 0.0;
    *((void *)v13 + 14) = v25;
    v13[15] = 0.0;
    v13[16] = -2.68156159e154;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v59;
LABEL_4:
    sub_10006A72C((uint64_t)v7);
    v11 += v12;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = sub_10010AD20();
  __break(1u);
  return result;
}

BOOL sub_1000C3B0C(double a1, double a2, double a3, double a4)
{
  if (a1 < -90.0 || a1 > 90.0 || a2 < -180.0 || a2 > 180.0) {
    return 0;
  }
  BOOL v7 = a4 >= 0.0;
  if (a4 > 360.0) {
    BOOL v7 = 0;
  }
  if (a3 > 180.0) {
    BOOL v7 = 0;
  }
  return a3 >= 0.0 && v7;
}

uint64_t sub_1000C3B8C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000C3BEC()
{
  sub_100004BD4(&qword_10015E488);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = [objc_allocWithZone((Class)sub_100004BD4(&qword_10015E490)) init];
  sub_100004BD4(&qword_10015E498);
  uint64_t result = swift_allocObject();
  v0[3] = result;
  v0[4] = 0xD000000000000011;
  v0[5] = 0x8000000100111F70;
  qword_10016DFF0 = (uint64_t)v0;
  return result;
}

uint64_t sub_1000C3C84()
{
  uint64_t v0 = sub_10010A3F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10010A3A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100109AC0();
  __chkstk_darwin(v5 - 8);
  sub_10008D298();
  sub_100109AB0();
  sub_10010A390();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t result = sub_10010A430();
  qword_10016DFF8 = result;
  return result;
}

uint64_t sub_1000C3E2C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000C3E5C()
{
  sub_1000C3E2C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageCache()
{
  return sub_100008550();
}

uint64_t sub_1000C3EA8()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E4A0);
  sub_100007CB8(v0, (uint64_t)qword_10015E4A0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

id AssetMetadataDownloadOperation.__allocating_init(recordId:database:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[qword_10015E4B8] = a1;
  *(void *)&v7[qword_10015E4C0] = a2;
  *(void *)&v7[qword_10015E4C8] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return [super init];
}

id AssetMetadataDownloadOperation.init(recordId:database:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[qword_10015E4B8] = a1;
  *(void *)&v3[qword_10015E4C0] = a2;
  *(void *)&v3[qword_10015E4C8] = a3;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for AssetMetadataDownloadOperation();
  return [super init];
}

uint64_t type metadata accessor for AssetMetadataDownloadOperation()
{
  uint64_t result = qword_10015E518;
  if (!qword_10015E518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AssetMetadataDownloadOperation.main@Sendable ()()
{
  v1[4] = v0;
  sub_100004BD4((uint64_t *)&unk_100159D40);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_1001091E0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_1000C41C4, 0, 0);
}

uint64_t sub_1000C41C4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_10015E4C8);
  uint64_t v3 = swift_task_alloc();
  v0[10] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  unint64_t v5 = sub_1000C4CEC();
  *uint64_t v4 = v0;
  v4[1] = sub_1000C42CC;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10015E4E0, v3, v5);
}

uint64_t sub_1000C42CC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000C48D8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000C43E8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C43E8()
{
  uint64_t v32 = v0;
  id v1 = (id)v0[2];
  if (!sub_10010A670()) {
    goto LABEL_10;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_10:
    if (qword_100158C08 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_100109960();
    sub_100007CB8(v19, (uint64_t)qword_10015E4A0);
    id v1 = v1;
    unint64_t v20 = sub_100109940();
    os_log_type_t v21 = sub_10010A2E0();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)unint64_t v22 = 136315138;
      id v23 = [v1 debugDescription];
      uint64_t v24 = sub_100109D30();
      unint64_t v26 = v25;

      v0[3] = sub_1000C50D4(v24, v26, &v31);
      sub_10010A730();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "error getting DataConfig.JournalEntryAssetFileAttachment.file :%s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_20:

LABEL_23:
      uint64_t v11 = 0;
      uint64_t v13 = 0;
      id v1 = 0;
      goto LABEL_24;
    }

LABEL_22:
    goto LABEL_23;
  }
  id v3 = [v2 fileURL];
  if (!v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[7] + 56))(v0[5], 1, 1, v0[6]);
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  sub_100109140();

  objc_super v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v9(v8, v5, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
LABEL_16:
    sub_1000192F8(v0[5]);
    if (qword_100158C08 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100109960();
    sub_100007CB8(v27, (uint64_t)qword_10015E4A0);
    unint64_t v20 = sub_100109940();
    os_log_type_t v28 = sub_10010A2E0();
    if (os_log_type_enabled(v20, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v28, "ckAsset.fileURL is nil", v29, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    swift_unknownObjectRelease();
    goto LABEL_22;
  }
  uint64_t v10 = v0[12];
  v9(v0[9], v0[5], v0[6]);
  uint64_t v11 = sub_100109200();
  uint64_t v13 = v12;
  uint64_t v14 = v0[9];
  uint64_t v15 = v0[6];
  uint64_t v16 = v0[7];
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);

    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  swift_unknownObjectRelease();
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, id))v0[1];
  return v30(v11, v13, v1);
}

uint64_t sub_1000C48D8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C4960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_1000C4984, 0, 0);
}

uint64_t sub_1000C4984()
{
  id v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_10015E4B8);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000C4A90;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10000E354;
  v0[13] = &unk_100144C40;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000C4A90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1000C4BC0;
  }
  else {
    uint64_t v2 = sub_1000C4BA0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000C4BA0()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000C4BC0()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C4C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000090F0;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_1000C4984, 0, 0);
}

unint64_t sub_1000C4CEC()
{
  unint64_t result = qword_10015E4E8;
  if (!qword_10015E4E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015E4E8);
  }
  return result;
}

void AssetMetadataDownloadOperation.init()()
{
}

void sub_1000C4D5C()
{
}

void sub_1000C4D8C()
{
  uint64_t v1 = *(void **)(v0 + qword_10015E4C8);
}

id AssetMetadataDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetMetadataDownloadOperation();
  return [super dealloc];
}

void sub_1000C4E14(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_10015E4C8);
}

uint64_t sub_1000C4E70(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *objc_super v2 = v1;
  v2[1] = sub_1000C4F00;
  return AssetMetadataDownloadOperation.main@Sendable ()();
}

uint64_t sub_1000C4F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    uint64_t v10 = *(void **)(v8 + 16);
    *uint64_t v10 = a1;
    v10[1] = a2;
    uint64_t v10[2] = a3;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
  return v11();
}

unsigned char **sub_1000C5024(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1000C5034(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000C505C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1000C50D4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10010A730();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1000C50D4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000C51FC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100037A20((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100037A20((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000B7B0((uint64_t)v12);
  return v7;
}

uint64_t sub_1000C51A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000C51F4()
{
  return type metadata accessor for AssetMetadataDownloadOperation();
}

uint64_t sub_1000C51FC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10010A740();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000C53B8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10010A980();
  if (!v8)
  {
    sub_10010AA50();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10010AAD0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000C53B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000C5450(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000C55C8(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000C55C8(v3 > 1, v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

double *sub_1000C5450(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100064BF8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10010A8E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10010AA50();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_100109E10();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_10010AAD0();
    __break(1u);
LABEL_14:
    uint64_t result = (double *)sub_10010AA50();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1000C55C8(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004BD4(&qword_10015B918);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000C5718(unint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1000C72A0((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      int64_t v7 = &v3[16 * a1];
      uint64_t v8 = *((void *)v7 + 4);
      memmove(v7 + 32, v7 + 48, 16 * v6);
      *((void *)v3 + 2) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000C57F8(unint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1000C72F0((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      int64_t v7 = &v3[2 * a1];
      uint64_t v8 = *((void *)v7 + 4);
      memmove(v7 + 4, v7 + 6, 16 * v6);
      *((void *)v3 + 2) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

uint64_t sub_1000C58D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_10010ACA0() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_10010ACA0();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_1000C59C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v6 = 0;
    BOOL v7 = (void *)(a3 + 40);
    do
    {
      if (*v7)
      {
        if (a2)
        {
          BOOL v8 = *(v7 - 1) == a1 && *v7 == a2;
          if (v8 || (sub_10010ACA0() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v7 += 2;
      ++v6;
    }
    while (v3 != v6);
  }
  return 0;
}

uint64_t sub_1000C5A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,double a23,unsigned __int8 a24,double a25,unsigned __int8 a26,uint64_t a27,unsigned __int8 a28)
{
  int v121 = a8;
  double v107 = *(double *)&a7;
  uint64_t v105 = a6;
  uint64_t v106 = a5;
  uint64_t v126 = a2;
  uint64_t v120 = a1;
  int v122 = a24;
  int v123 = a26;
  uint64_t v22 = sub_100109520();
  __chkstk_darwin(v22 - 8);
  char v113 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004BD4((uint64_t *)&unk_10015F250);
  __chkstk_darwin(v24 - 8);
  unint64_t v118 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004BD4(&qword_10015A198);
  uint64_t v116 = *(void *)(v26 - 8);
  uint64_t v117 = v26;
  __chkstk_darwin(v26);
  unint64_t v115 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100004BD4((uint64_t *)&unk_10015F260);
  uint64_t v111 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v109 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100004BD4(&qword_10015A1A0);
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  unint64_t v108 = (char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100004BD4((uint64_t *)&unk_10015F270);
  uint64_t v119 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  unint64_t v124 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v34 = (char *)&v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  unint64_t v36 = (char *)&v104 - v35;
  uint64_t v37 = sub_100109460();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  id v104 = (char *)&v104 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  char v42 = (char *)&v104 - v41;
  if ((a22 & 1) != 0 || a21 < 2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1001589C0 != -1) {
      swift_once();
    }
    sub_100004BD4(&qword_10015A190);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_100122230;
    *(void *)(v43 + 56) = &type metadata for Int;
    *(void *)(v43 + 64) = &protocol witness table for Int;
    *(void *)(v43 + 32) = a21;
    a3 = sub_100109D00();
    a4 = v44;
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = sub_10009EE24(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v47 = *((void *)v45 + 2);
  unint64_t v46 = *((void *)v45 + 3);
  if (v47 >= v46 >> 1) {
    uint64_t v45 = sub_10009EE24((double *)(v46 > 1), v47 + 1, 1, v45);
  }
  *((void *)v45 + 2) = v47 + 1;
  char v48 = &v45[2 * v47];
  *((void *)v48 + 4) = a3;
  unsigned __int8 v49 = a28;
  *((void *)v48 + 5) = a4;
  uint64_t v129 = v45;
  if (v122)
  {
    sub_10006BBA8(v106, (uint64_t)v36);
    unint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    if (v55(v36, 1, v37) == 1)
    {
      sub_10000B9CC((uint64_t)v36, (uint64_t *)&unk_10015CDE0);
    }
    else
    {
      int v122 = a28;
      unint64_t v56 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v56(v42, v36, v37);
      sub_10006BBA8(v105, (uint64_t)v34);
      if (v55(v34, 1, v37) == 1)
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v37);
        sub_10000B9CC((uint64_t)v34, (uint64_t *)&unk_10015CDE0);
        unsigned __int8 v49 = v122;
        char v57 = v123;
        if (v123) {
          goto LABEL_34;
        }
        goto LABEL_35;
      }
      v56(v104, v34, v37);
      sub_1001093B0();
      if (qword_100158CA8 != -1)
      {
        double v103 = v61;
        swift_once();
        double v61 = v103;
      }
      id v62 = [(id)qword_100160598 stringFromTimeInterval:v61 + 0.5];
      unsigned __int8 v49 = v122;
      if (v62)
      {
        uint64_t v63 = v62;
        uint64_t v64 = sub_100109D30();
        uint64_t v66 = v65;
      }
      else
      {
        uint64_t v64 = 0;
        uint64_t v66 = 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v45 = sub_10009EE24(0, *((void *)v45 + 2) + 1, 1, v45);
      }
      unint64_t v68 = *((void *)v45 + 2);
      unint64_t v67 = *((void *)v45 + 3);
      if (v68 >= v67 >> 1) {
        uint64_t v45 = sub_10009EE24((double *)(v67 > 1), v68 + 1, 1, v45);
      }
      *((void *)v45 + 2) = v68 + 1;
      unint64_t v69 = &v45[2 * v68];
      *((void *)v69 + 4) = v64;
      *((void *)v69 + 5) = v66;
      uint64_t v129 = v45;
      uint64_t v70 = *(void (**)(char *, uint64_t))(v38 + 8);
      v70(v104, v37);
      v70(v42, v37);
    }
  }
  else
  {
    if (qword_100158CA8 != -1) {
      swift_once();
    }
    id v50 = [(id)qword_100160598 stringFromTimeInterval:a23 + 0.5];
    if (v50)
    {
      uint64_t v51 = v50;
      uint64_t v52 = sub_100109D30();
      uint64_t v54 = v53;
    }
    else
    {
      uint64_t v52 = 0;
      uint64_t v54 = 0;
    }
    unint64_t v59 = *((void *)v45 + 2);
    unint64_t v58 = *((void *)v45 + 3);
    if (v59 >= v58 >> 1) {
      uint64_t v45 = sub_10009EE24((double *)(v58 > 1), v59 + 1, 1, v45);
    }
    *((void *)v45 + 2) = v59 + 1;
    uint64_t v60 = &v45[2 * v59];
    *((void *)v60 + 4) = v52;
    *((void *)v60 + 5) = v54;
    uint64_t v129 = v45;
  }
  char v57 = v123;
  if (v123)
  {
LABEL_34:
    if (v121) {
      goto LABEL_46;
    }
  }
LABEL_35:
  if (v57) {
    a25 = v107;
  }
  if (a25 > 0.0)
  {
    id v72 = [self _quantityWithBeatsPerMinute:a25];
    id v73 = [objc_allocWithZone((Class)FIUIFormattingManager) init];
    id v74 = [v73 localizedStringWithHeartRate:v72 unitStyle:3];
    if (v74)
    {
      char v75 = v74;
      uint64_t v76 = sub_100109D30();
      uint64_t v78 = v77;
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v78 = 0;
    }
    int64_t v79 = v129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v79 = sub_10009EE24(0, *((void *)v79 + 2) + 1, 1, v79);
    }
    unint64_t v81 = *((void *)v79 + 2);
    unint64_t v80 = *((void *)v79 + 3);
    if (v81 >= v80 >> 1) {
      int64_t v79 = sub_10009EE24((double *)(v80 > 1), v81 + 1, 1, v79);
    }
    *((void *)v79 + 2) = v81 + 1;
    uint64_t v82 = &v79[2 * v81];
    *((void *)v82 + 4) = v76;
    *((void *)v82 + 5) = v78;

    uint64_t v129 = v79;
  }
LABEL_46:
  if (v49 & 1) != 0 && (a18)
  {
    int64_t v83 = v129;
  }
  else
  {
    id v84 = [self kilocalories];
    sub_10002E54C();
    sub_100108D70();
    uint64_t v85 = v109;
    sub_100108D80();
    int64_t v86 = v115;
    sub_100109000();
    sub_100109500();
    sub_10002E58C();
    uint64_t v87 = (uint64_t)v118;
    sub_100108FD0();
    uint64_t v88 = sub_100004BD4((uint64_t *)&unk_10015F290);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
    uint64_t v89 = v108;
    sub_100108CE0();
    sub_10000B9CC(v87, (uint64_t *)&unk_10015F250);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v86, v117);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v85, v114);
    sub_1000C7244();
    uint64_t v90 = v112;
    sub_100108DA0();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v89, v90);
    uint64_t v91 = v127;
    uint64_t v92 = v128;
    int64_t v83 = v129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v83 = sub_10009EE24(0, *((void *)v83 + 2) + 1, 1, v83);
    }
    unint64_t v94 = *((void *)v83 + 2);
    unint64_t v93 = *((void *)v83 + 3);
    if (v94 >= v93 >> 1) {
      int64_t v83 = sub_10009EE24((double *)(v93 > 1), v94 + 1, 1, v83);
    }
    *((void *)v83 + 2) = v94 + 1;
    uint64_t v95 = &v83[2 * v94];
    *((void *)v95 + 4) = v91;
    *((void *)v95 + 5) = v92;
    uint64_t v129 = v83;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v124, v125);
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v83 = sub_10009EE24(0, *((void *)v83 + 2) + 1, 1, v83);
  }
  unint64_t v97 = *((void *)v83 + 2);
  unint64_t v96 = *((void *)v83 + 3);
  if (v97 >= v96 >> 1) {
    int64_t v83 = sub_10009EE24((double *)(v96 > 1), v97 + 1, 1, v83);
  }
  *((void *)v83 + 2) = v97 + 1;
  uint64_t v98 = &v83[2 * v97];
  *((void *)v98 + 4) = a19;
  *((void *)v98 + 5) = a20;
  uint64_t v129 = v83;
  if (v126)
  {
    uint64_t v99 = sub_1000C59C0(v120, v126, (uint64_t)v83);
    if ((v100 & 1) == 0 && !v99)
    {
      sub_1000C57F8(0);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v101 = sub_100042280(8236, 0xE200000000000000, (uint64_t)v129);
  swift_bridgeObjectRelease();
  return v101;
}

uint64_t sub_1000C66C8()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A180);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  BOOL v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16WorkoutIconAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100025470((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_10015A180);
    return 0;
  }
  unint64_t v47 = _s16WorkoutIconAssetC15WorkoutIconDataVMa;
  sub_1000C7304((uint64_t)v3, (uint64_t)v7, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v4[7];
  uint64_t v44 = (uint64_t)v7 + v4[6];
  uint64_t v45 = (uint64_t)v7 + v10;
  uint64_t v46 = v8;
  uint64_t v11 = v4[9];
  uint64_t v12 = (char *)v7 + v4[8];
  uint64_t v13 = *(void *)v12;
  int v43 = v12[8];
  uint64_t v41 = *(uint64_t *)((char *)v7 + v11);
  uint64_t v42 = v13;
  int v40 = *((unsigned __int8 *)v7 + v11 + 8);
  uint64_t v14 = (uint64_t *)((char *)v7 + v4[11]);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  double v17 = (char *)v7 + v4[12];
  uint64_t v38 = *(void *)v17;
  uint64_t v39 = v15;
  char v18 = v17[8];
  uint64_t v19 = (double *)((char *)v7 + v4[13]);
  double v20 = *v19;
  unsigned __int8 v21 = *((unsigned char *)v19 + 8);
  uint64_t v22 = v4[17];
  uint64_t v23 = (double *)((char *)v7 + v4[16]);
  double v24 = *v23;
  unsigned __int8 v25 = *((unsigned char *)v23 + 8);
  uint64_t v26 = *(uint64_t *)((char *)v7 + v22);
  unsigned __int8 v27 = *((unsigned char *)v7 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1000C5A60(0, 0, v46, v9, v44, v45, v42, v43, v28, v29, v30, v31, v32, v33, v34, v35, v41, v40, v39,
          v16,
          v38,
          v18,
          v20,
          v21,
          v24,
          v25,
          v26,
          v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000C736C((uint64_t)v7, v47);
  return v36;
}

uint64_t sub_1000C69A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100004BD4(&qword_10015A180);
  __chkstk_darwin(v5 - 8);
  BOOL v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (int *)_s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)&v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16WorkoutIconAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, int *))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  swift_retain();
  sub_100025470((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v7, &qword_10015A180);
    return 0;
  }
  uint64_t v53 = _s16WorkoutIconAssetC15WorkoutIconDataVMa;
  sub_1000C7304((uint64_t)v7, (uint64_t)v11, _s16WorkoutIconAssetC15WorkoutIconDataVMa);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = v8[7];
  uint64_t v50 = (uint64_t)v11 + v8[6];
  uint64_t v51 = (uint64_t)v11 + v14;
  uint64_t v52 = v12;
  uint64_t v15 = v8[9];
  uint64_t v16 = (char *)v11 + v8[8];
  uint64_t v17 = *(void *)v16;
  int v49 = v16[8];
  uint64_t v47 = *(uint64_t *)((char *)v11 + v15);
  uint64_t v48 = v17;
  int v46 = *((unsigned __int8 *)v11 + v15 + 8);
  uint64_t v18 = v8[12];
  uint64_t v19 = (uint64_t *)((char *)v11 + v8[11]);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v44 = a2;
  uint64_t v45 = v20;
  uint64_t v43 = *(uint64_t *)((char *)v11 + v18);
  int v42 = *((unsigned __int8 *)v11 + v18 + 8);
  uint64_t v22 = (double *)((char *)v11 + v8[13]);
  double v23 = *v22;
  unsigned __int8 v24 = *((unsigned char *)v22 + 8);
  uint64_t v25 = v8[17];
  uint64_t v26 = (double *)((char *)v11 + v8[16]);
  double v27 = *v26;
  unsigned __int8 v28 = *((unsigned char *)v26 + 8);
  uint64_t v29 = *(uint64_t *)((char *)v11 + v25);
  unsigned __int8 v30 = *((unsigned char *)v11 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1000C5A60(a1, v44, v52, v13, v50, v51, v48, v49, v31, v32, v33, v34, v35, v36, v37, v38, v47, v46, v45,
          v21,
          v43,
          v42,
          v23,
          v24,
          v27,
          v28,
          v29,
          v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000C736C((uint64_t)v11, v53);
  return v39;
}

uint64_t sub_1000C6C94(uint64_t a1, uint64_t a2)
{
  return sub_1000C69A4(a1, a2);
}

uint64_t sub_1000C6CB8()
{
  return sub_1000C66C8();
}

uint64_t sub_1000C6CDC()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A218);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100025AD8((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_10015A218);
    return 0;
  }
  sub_1000C7304((uint64_t)v3, (uint64_t)v7, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  uint64_t v8 = *((void *)v7 + 2);
  uint64_t v9 = *((void *)v7 + 3);
  uint64_t v10 = v4[8];
  double v31 = &v7[v4[7]];
  double v32 = &v7[v10];
  uint64_t v33 = v8;
  uint64_t v11 = v4[10];
  uint64_t v12 = &v7[v4[9]];
  uint64_t v13 = *(void *)v12;
  int v14 = v12[8];
  uint64_t v15 = *(void *)&v7[v11];
  char v16 = v7[v11 + 8];
  uint64_t v17 = (uint64_t *)&v7[v4[12]];
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1000C5A60(0, 0, v33, v9, (uint64_t)v31, (uint64_t)v32, v13, v14, v20, v21, v22, v23, v24, v25, v26, v27, v15, v16, v18,
          v19,
          0,
          1,
          0.0,
          1u,
          0.0,
          1u,
          0,
          1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000C736C((uint64_t)v7, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  return v28;
}

uint64_t sub_1000C6F64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100004BD4(&qword_10015A218);
  __chkstk_darwin(v5 - 8);
  BOOL v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  swift_retain();
  sub_100025AD8((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v7, &qword_10015A218);
    return 0;
  }
  int v40 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa;
  sub_1000C7304((uint64_t)v7, (uint64_t)v11, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
  uint64_t v12 = *((void *)v11 + 2);
  uint64_t v38 = a2;
  uint64_t v39 = v12;
  uint64_t v13 = *((void *)v11 + 3);
  uint64_t v14 = v8[8];
  double v36 = &v11[v8[7]];
  double v37 = &v11[v14];
  uint64_t v15 = v8[10];
  char v16 = &v11[v8[9]];
  uint64_t v17 = *(void *)v16;
  int v18 = v16[8];
  uint64_t v19 = *(void *)&v11[v15];
  char v20 = v11[v15 + 8];
  double v21 = (uint64_t *)&v11[v8[12]];
  uint64_t v22 = a1;
  uint64_t v24 = *v21;
  uint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1000C5A60(v22, v38, v39, v13, (uint64_t)v36, (uint64_t)v37, v17, v18, v25, v26, v27, v28, v29, v30, v31, v32, v19, v20, v24,
          v23,
          0,
          1,
          0.0,
          1u,
          0.0,
          1u,
          0,
          1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000C736C((uint64_t)v11, v40);
  return v33;
}

uint64_t sub_1000C71FC(uint64_t a1, uint64_t a2)
{
  return sub_1000C6F64(a1, a2);
}

uint64_t sub_1000C7220()
{
  return sub_1000C6CDC();
}

unint64_t sub_1000C7244()
{
  unint64_t result = qword_10015A1B0;
  if (!qword_10015A1B0)
  {
    sub_100012F08(&qword_10015A1A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A1B0);
  }
  return result;
}

char *sub_1000C72A0(uint64_t a1)
{
  return sub_10009E5BC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

double *sub_1000C72B4(uint64_t a1)
{
  return sub_10009E908(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_1000C72C8(unint64_t a1)
{
  return sub_10009EA18(0, *(void *)(a1 + 16), 0, a1);
}

double *sub_1000C72DC(uint64_t a1)
{
  return sub_10009EA4C(0, *(void *)(a1 + 16), 0, (double *)a1);
}

double *sub_1000C72F0(uint64_t a1)
{
  return sub_10009EE24(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_1000C7304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C736C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000C73CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v7 = sub_100004BD4(&qword_10015E698);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000C7D44();
  sub_10010AE60();
  LOBYTE(v14) = 0;
  sub_10010ABF0();
  if (!v5)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    char v16 = 1;
    sub_100045CC0();
    sub_10010AC00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000C755C()
{
  if (*v0) {
    return 0x74706D6F7270;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1000C758C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C7AA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000C75B4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1000C75C0(uint64_t a1)
{
  unint64_t v2 = sub_1000C7D44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C75FC(uint64_t a1)
{
  unint64_t v2 = sub_1000C7D44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C7638@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000C7B7C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1000C7670(void *a1)
{
  return sub_1000C73CC(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000C769C()
{
  return swift_release();
}

id sub_1000C76AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15ReflectionAssetCMa();
  return [super dealloc];
}

uint64_t sub_1000C76F4()
{
  return _s15ReflectionAssetCMa();
}

uint64_t _s15ReflectionAssetCMa()
{
  uint64_t result = qword_10015E638;
  if (!qword_10015E638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000C7748()
{
  return swift_updateClassMetadata2();
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwxx(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 24);
  if (v1 >> 60 != 15) {
    return sub_100007084(*(void *)(result + 16), v1);
  }
  return result;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = (uint64_t *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v5 = *v3;
    sub_100006F28(*v3, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_100006F28(*v5, a2[3]);
      uint64_t v9 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v6;
      sub_100007084(v9, v10);
      return a1;
    }
    sub_100069AD4(a1 + 16);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *unint64_t v4 = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_100006F28(*v5, a2[3]);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_100007084(v8, v6);
      return a1;
    }
    sub_100069AD4(a1 + 16);
  }
  *unint64_t v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 24) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataVMa()
{
  return &_s15ReflectionAssetC14ReflectionDataVN;
}

unint64_t sub_1000C7A24()
{
  unint64_t result = qword_10015E648;
  if (!qword_10015E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E648);
  }
  return result;
}

uint64_t sub_1000C7A78()
{
  return swift_retain();
}

uint64_t sub_1000C7A88(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling15ReflectionAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000C7AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000C7B7C(void *a1)
{
  uint64_t v3 = sub_100004BD4(&qword_10015E688);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10000B718(a1, v7);
  sub_1000C7D44();
  sub_10010AE50();
  if (!v1)
  {
    v9[16] = 0;
    uint64_t v7 = sub_10010AB50();
    v9[15] = 1;
    sub_100045AA0();
    sub_10010AB60();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_10000B7B0((uint64_t)a1);
  return v7;
}

unint64_t sub_1000C7D44()
{
  unint64_t result = qword_10015E690;
  if (!qword_10015E690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E690);
  }
  return result;
}

unsigned char *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C7E64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOMa()
{
  return &_s15ReflectionAssetC14ReflectionDataV10CodingKeysON;
}

unint64_t sub_1000C7EA0()
{
  unint64_t result = qword_10015E6A0;
  if (!qword_10015E6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E6A0);
  }
  return result;
}

unint64_t sub_1000C7EF8()
{
  unint64_t result = qword_10015E6A8;
  if (!qword_10015E6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E6A8);
  }
  return result;
}

unint64_t sub_1000C7F50()
{
  unint64_t result = qword_10015E6B0;
  if (!qword_10015E6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E6B0);
  }
  return result;
}

uint64_t sub_1000C7FA4@<X0>(char *a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001091E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (id *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  sub_1000241BC(v1, (uint64_t)v11, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v5);
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v11 = (id *)((char *)v11 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48));
      goto LABEL_4;
    default:
LABEL_4:
      sub_1000CBD9C((uint64_t)v11, (uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      sub_1000241BC((uint64_t)v17, (uint64_t)v15, type metadata accessor for AssetAttachment.AssetType.FilePathType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v19 = v23;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v23, v15, v5);
      }
      else
      {
        type metadata accessor for Journaling();
        sub_1000CEC08((uint64_t)v4);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_1000192F8((uint64_t)v4);
          uint64_t v20 = 1;
          uint64_t v19 = v23;
          goto LABEL_10;
        }
        double v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v21(v8, v4, v5);
        uint64_t v19 = v23;
        v21(v23, v8, v5);
      }
      uint64_t v20 = 0;
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v19, v20, 1, v5);
      return sub_100075298((uint64_t)v17, type metadata accessor for AssetAttachment.AssetType.FilePathType);
  }
}

uint64_t sub_1000C836C()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E6B8);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015E6B8);
  if (qword_100158C30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E060);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000C8434()
{
  sub_100075298(v0 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000C84C0()
{
  return type metadata accessor for AssetAttachment(0);
}

uint64_t type metadata accessor for AssetAttachment(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015E6F8);
}

uint64_t sub_1000C84E8()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AssetAttachment.AssetType(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015E800);
}

char *sub_1000C85B0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = *a2;
        *(void *)a1 = *a2;
        uint64_t v14 = v13;
        goto LABEL_18;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 4u:
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v8;
        swift_bridgeObjectRetain();
        uint64_t v9 = *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = (char **)((char *)a2 + v9);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_1001091E0();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        }
        else
        {
          uint64_t v15 = v11[1];
          *(void *)uint64_t v10 = *v11;
          *((void *)v10 + 1) = v15;
          swift_bridgeObjectRetain();
        }
        goto LABEL_17;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v6 = sub_1001091E0();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        }
        else
        {
LABEL_16:
          uint64_t v16 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v16;
          swift_bridgeObjectRetain();
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for AssetAttachment.AssetType.FilePathType(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015E8A8);
}

void sub_1000C8938(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_6;
    case 1u:
      uint64_t v2 = *a1;

      break;
    case 4u:
      swift_bridgeObjectRelease();
      a1 = (void **)((char *)a1 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48));
LABEL_6:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v3 = sub_1001091E0();
        unsigned int v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
        v4(a1, v3);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

void *sub_1000C8A64(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unsigned int v4 = *(void **)a2;
      *a1 = *(void *)a2;
      id v5 = v4;
      goto LABEL_15;
    case 2u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_8;
    case 3u:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_8;
      }
      goto LABEL_11;
    case 4u:
      uint64_t v7 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)(a2 + v8);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1001091E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      }
      else
      {
        uint64_t v13 = v10[1];
        void *v9 = *v10;
        v9[1] = v13;
        swift_bridgeObjectRetain();
      }
      goto LABEL_14;
    default:
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_8:
        uint64_t v6 = sub_1001091E0();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      }
      else
      {
LABEL_11:
        uint64_t v12 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
      }
LABEL_14:
      swift_storeEnumTagMultiPayload();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

void **sub_1000C8D7C(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_100075298((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        id v10 = v9;
        goto LABEL_16;
      case 2u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 3u:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v5 = *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
        uint64_t v6 = (void **)((char *)a1 + v5);
        uint64_t v7 = (void **)((char *)a2 + v5);
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v8 = sub_1001091E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        }
        else
        {
          *uint64_t v6 = *v7;
          v6[1] = v7[1];
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      default:
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v4 = sub_1001091E0();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        }
        else
        {
LABEL_12:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
LABEL_15:
        swift_storeEnumTagMultiPayload();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *sub_1000C90E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 2u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 3u:
      uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_7:
        uint64_t v7 = sub_1001091E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_11:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      goto LABEL_13;
    case 4u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
      uint64_t v9 = (char *)a1 + v8;
      id v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = sub_1001091E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1000C942C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100075298((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_8;
      case 2u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_8;
        }
        goto LABEL_12;
      case 3u:
        uint64_t v6 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_8:
          uint64_t v7 = sub_1001091E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_12:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        goto LABEL_14;
      case 4u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
        uint64_t v9 = (char *)a1 + v8;
        id v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v12 = sub_1001091E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000C97A8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000C97B8()
{
  uint64_t result = type metadata accessor for AssetAttachment.AssetType.FilePathType(319);
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t v5 = v3;
    uint64_t v6 = v3;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1000C9868(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001091E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000C9968(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1001091E0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_1000C99F8(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1001091E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000C9AA8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100075298((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1001091E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000C9B84(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001091E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1000C9C3C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100075298((uint64_t)a1, type metadata accessor for AssetAttachment.AssetType.FilePathType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001091E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000C9D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1000C9D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000C9D68()
{
  uint64_t result = sub_1001091E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000C9DFC(void *a1)
{
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001091E0();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v103 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath);
  if (!*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath + 8)) {
    return v19;
  }
  id v104 = v14;
  uint64_t v105 = v18;
  double v107 = (char *)&v103 - v15;
  uint64_t v108 = v17;
  uint64_t v110 = v13;
  uint64_t v111 = v16;
  uint64_t v20 = self;
  swift_bridgeObjectRetain();
  id v106 = v20;
  id v21 = [v20 defaultManager];
  sub_100109160();
  NSString v22 = sub_100109CF0();
  swift_bridgeObjectRelease();
  LODWORD(v20) = [v21 fileExistsAtPath:v22];

  uint64_t v109 = a1;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    sub_1000A73E4();
    swift_allocError();
    unsigned char *v43 = 0;
    swift_willThrow();
    uint64_t v44 = v110;
LABEL_31:
    uint64_t v93 = v111;
    uint64_t v94 = v108;
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_100109960();
    sub_100007CB8(v95, (uint64_t)qword_10015E6B8);
    (*(void (**)(uint64_t, void *, uint64_t))(v93 + 16))(v94, v109, v44);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v96 = sub_100109940();
    os_log_type_t v97 = sub_10010A2D0();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = swift_slowAlloc();
      uint64_t v109 = (void *)swift_slowAlloc();
      uint64_t v110 = swift_slowAlloc();
      uint64_t v114 = v110;
      *(_DWORD *)uint64_t v98 = 136315394;
      sub_1000CBE04((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v99 = sub_10010AC60();
      v113._countAndFlagsBits = sub_1000C50D4(v99, v100, &v114);
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v44);
      *(_WORD *)(v98 + 12) = 2112;
      swift_errorRetain();
      uint64_t v101 = _swift_stdlib_bridgeErrorToNSError();
      v113._countAndFlagsBits = v101;
      sub_10010A730();
      *uint64_t v109 = v101;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v96, v97, "JournalEntryAssetMO error saving attachment file with source URL %s: %@", (uint8_t *)v98, 0x16u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v44);
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  id v23 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v24 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v25 = [v23 initWithString:v24];

  NSString v26 = sub_100109CF0();
  id v27 = [v25 stringByAppendingPathComponent:v26];

  uint64_t v28 = sub_100109D30();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();

  uint64_t v114 = v28;
  unint64_t v115 = v30;
  uint64_t v31 = sub_100109080();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (v34)
  {
    v113._countAndFlagsBits = 46;
    v113._object = (void *)0xE100000000000000;
    v116._countAndFlagsBits = sub_100109080();
    sub_100109E00(v116);
    swift_bridgeObjectRelease();
    sub_100109E00(v113);
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v110;
  uint64_t v36 = v111;
  type metadata accessor for Journaling();
  swift_bridgeObjectRetain();
  sub_1000CEC08((uint64_t)v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v35) == 1)
  {
    sub_1000192F8((uint64_t)v5);
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_100109960();
    sub_100007CB8(v37, (uint64_t)qword_10015E6B8);
    uint64_t v39 = v114;
    unint64_t v38 = v115;
    swift_bridgeObjectRetain();
    int v40 = sub_100109940();
    os_log_type_t v41 = sub_10010A2D0();
    if (os_log_type_enabled(v40, v41))
    {
      int v42 = (uint8_t *)swift_slowAlloc();
      v113._countAndFlagsBits = swift_slowAlloc();
      *(_DWORD *)int v42 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_1000C50D4(v39, v38, &v113._countAndFlagsBits);
      sub_10010A730();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Error is saveAttachmentFile. Failed to create targetURL. relativePath: %s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v107, v5, v35);
  id v45 = [v106 defaultManager];
  sub_100109130();
  sub_1001090F0(v46);
  uint64_t v48 = v47;
  int v49 = *(void (**)(char *, uint64_t))(v36 + 8);
  v49(v12, v35);
  sub_100004BD4(&qword_10015E8E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122230;
  *(void *)(inited + 32) = NSFileProtectionKey;
  uint64_t v51 = qword_100158A68;
  uint64_t v52 = NSFileProtectionKey;
  if (v51 != -1) {
    swift_once();
  }
  uint64_t v53 = (void *)qword_10016DEB0;
  type metadata accessor for URLFileProtection(0);
  *(void *)(inited + 64) = v54;
  *(void *)(inited + 40) = v53;
  id v55 = v53;
  sub_10007B8A8(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1000CBE04(&qword_100159128, type metadata accessor for FileAttributeKey);
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  v113._countAndFlagsBits = 0;
  unsigned int v57 = [v45 createDirectoryAtURL:v48 withIntermediateDirectories:1 attributes:isa error:&v113];

  id v58 = (id)v113._countAndFlagsBits;
  if (!v57)
  {
    uint64_t v66 = v58;
    swift_bridgeObjectRelease();
    sub_100108FC0();

    swift_willThrow();
    unint64_t v67 = v107;
LABEL_30:
    uint64_t v44 = v110;
    v49(v67, v110);
    goto LABEL_31;
  }
  id v59 = [v106 defaultManager];
  uint64_t v60 = v107;
  sub_1001090F0(v61);
  uint64_t v63 = v62;
  v113._countAndFlagsBits = 0;
  unsigned int v64 = [v59 removeItemAtURL:v62 error:&v113];

  if (v64)
  {
    id v65 = (id)v113._countAndFlagsBits;
  }
  else
  {
    id v68 = (id)v113._countAndFlagsBits;
    sub_100108FC0();

    swift_willThrow();
    swift_errorRelease();
  }
  id v69 = [v106 defaultManager];
  sub_1001090F0(v70);
  id v72 = v71;
  sub_1001090F0(v73);
  char v75 = v74;
  v113._countAndFlagsBits = 0;
  unsigned int v76 = [v69 copyItemAtURL:v72 toURL:v74 error:&v113];

  if (!v76)
  {
    id v92 = (id)v113._countAndFlagsBits;
    swift_bridgeObjectRelease();
    sub_100108FC0();

    swift_willThrow();
    unint64_t v67 = v60;
    goto LABEL_30;
  }
  id v77 = (id)v113._countAndFlagsBits;
  sub_10005A630();
  if (qword_100158C10 != -1) {
    swift_once();
  }
  uint64_t v78 = sub_100109960();
  sub_100007CB8(v78, (uint64_t)qword_10015E6B8);
  uint64_t v79 = v110;
  unint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v111 + 16);
  unint64_t v81 = v104;
  v80((uint64_t)v104, v60, v110);
  uint64_t v82 = v105;
  v80((uint64_t)v105, v60, v79);
  int64_t v83 = sub_100109940();
  os_log_type_t v84 = sub_10010A2F0();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    v113._countAndFlagsBits = v111;
    *(_DWORD *)uint64_t v85 = 136315394;
    uint64_t v109 = (void *)(v85 + 4);
    sub_1000CBE04((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v86 = sub_10010AC60();
    uint64_t v112 = sub_1000C50D4(v86, v87, &v113._countAndFlagsBits);
    sub_10010A730();
    swift_bridgeObjectRelease();
    v49(v81, v79);
    *(_WORD *)(v85 + 12) = 2048;
    uint64_t v88 = sub_10002497C();
    if (v89) {
      uint64_t v90 = 0;
    }
    else {
      uint64_t v90 = v88;
    }
    v49(v82, v79);
    uint64_t v112 = v90;
    sub_10010A730();
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "JournalEntryAssetMO saved file %s with size %ld", (uint8_t *)v85, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v91 = v107;
  }
  else
  {
    v49(v82, v79);

    v49(v81, v79);
    uint64_t v91 = v60;
  }
  v49(v91, v79);
  return v114;
}

uint64_t sub_1000CABBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5, void *a6)
{
  uint64_t v86 = a5;
  uint64_t v83 = a1;
  uint64_t v11 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001091E0();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v78 - v18;
  __chkstk_darwin(v17);
  uint64_t v25 = *(void *)&v6[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath];
  NSString v24 = *(void **)&v6[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachmentsDirectoryPath + 8];
  if (v24)
  {
    uint64_t v81 = a2;
    uint64_t v84 = v23;
    id v82 = v6;
    uint64_t v79 = v22;
    unint64_t v80 = v21;
    uint64_t v85 = (char *)&v78 - v20;
    v89._uint64_t countAndFlagsBits = 47;
    v89._object = (void *)0xE100000000000000;
    swift_bridgeObjectRetain();
    v90._uint64_t countAndFlagsBits = a3;
    v90._object = a4;
    sub_100109E00(v90);
    uint64_t countAndFlagsBits = v89._countAndFlagsBits;
    object = v89._object;
    v89._uint64_t countAndFlagsBits = v25;
    v89._object = v24;
    swift_bridgeObjectRetain();
    v91._uint64_t countAndFlagsBits = countAndFlagsBits;
    v91._object = object;
    sub_100109E00(v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v88 = v89;
    if (a6)
    {
      v89._uint64_t countAndFlagsBits = 46;
      v89._object = (void *)0xE100000000000000;
      v92._uint64_t countAndFlagsBits = (uint64_t)v86;
      v92._object = a6;
      sub_100109E00(v92);
      sub_100109E00(v89);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = v14;
    type metadata accessor for Journaling();
    swift_bridgeObjectRetain();
    sub_1000CEC08((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v29 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v13, 1, v14) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1000192F8((uint64_t)v13);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v85, v13, v14);
    id v30 = [self defaultManager];
    sub_100109130();
    sub_1001090F0(v31);
    unint64_t v33 = v32;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v29 + 8);
    v34(v19, v14);
    sub_100004BD4(&qword_10015E8E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100122230;
    *(void *)(inited + 32) = NSFileProtectionKey;
    uint64_t v36 = qword_100158A68;
    uint64_t v37 = NSFileProtectionKey;
    if (v36 != -1) {
      swift_once();
    }
    unint64_t v38 = (void *)qword_10016DEB0;
    type metadata accessor for URLFileProtection(0);
    *(void *)(inited + 64) = v39;
    *(void *)(inited + 40) = v38;
    id v40 = v38;
    sub_10007B8A8(inited);
    type metadata accessor for FileAttributeKey(0);
    sub_1000CBE04(&qword_100159128, type metadata accessor for FileAttributeKey);
    Class isa = sub_100109B60().super.isa;
    swift_bridgeObjectRelease();
    v89._uint64_t countAndFlagsBits = 0;
    unsigned int v42 = [v30 createDirectoryAtURL:v33 withIntermediateDirectories:1 attributes:isa error:&v89];

    id v43 = (id)v89._countAndFlagsBits;
    if (!v42)
    {
      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      sub_100108FC0();

      swift_willThrow();
      v34(v85, v14);
      if (qword_100158C10 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_100109960();
      sub_100007CB8(v45, (uint64_t)qword_10015E6B8);
      id v46 = v82;
      swift_errorRetain();
      id v47 = v46;
      swift_errorRetain();
      uint64_t v48 = sub_100109940();
      os_log_type_t v49 = sub_10010A2D0();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 138412546;
        v88._uint64_t countAndFlagsBits = (uint64_t)v47;
        id v52 = v47;
        sub_10010A730();
        void *v51 = v47;

        *(_WORD *)(v50 + 12) = 2112;
        swift_errorRetain();
        uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
        v88._uint64_t countAndFlagsBits = v53;
        sub_10010A730();
        v51[1] = v53;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "%@, error saving attachment file from data: %@", (uint8_t *)v50, 0x16u);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
      return 0;
    }
    sub_100109260();
    if (qword_100158C10 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_100109960();
    sub_100007CB8(v55, (uint64_t)qword_10015E6B8);
    unint64_t v56 = v85;
    unsigned int v57 = *(void (**)(uint64_t, char *, uint64_t))(v84 + 16);
    id v58 = v79;
    v57((uint64_t)v79, v85, v28);
    id v59 = v80;
    v57((uint64_t)v80, v56, v28);
    id v60 = v82;
    double v61 = sub_100109940();
    os_log_type_t v62 = sub_10010A2F0();
    int v63 = v62;
    uint64_t v86 = v61;
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v81 = v28;
      uint64_t v65 = v64;
      uint64_t v66 = (void *)swift_slowAlloc();
      id v82 = v66;
      uint64_t v84 = swift_slowAlloc();
      v89._uint64_t countAndFlagsBits = v84;
      *(_DWORD *)uint64_t v65 = 138412802;
      LODWORD(v83) = v63;
      uint64_t v87 = (uint64_t)v60;
      id v67 = v60;
      sub_10010A730();
      *uint64_t v66 = v60;

      *(_WORD *)(v65 + 12) = 2080;
      sub_1000CBE04((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v68 = v81;
      uint64_t v69 = sub_10010AC60();
      uint64_t v87 = sub_1000C50D4(v69, v70, &v89._countAndFlagsBits);
      sub_10010A730();
      swift_bridgeObjectRelease();
      v34(v58, v68);
      *(_WORD *)(v65 + 22) = 2048;
      uint64_t v71 = v80;
      uint64_t v72 = sub_10002497C();
      id v74 = v86;
      if (v73) {
        uint64_t v75 = 0;
      }
      else {
        uint64_t v75 = v72;
      }
      v34(v71, v68);
      uint64_t v87 = v75;
      sub_10010A730();
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v83, "%@ - saved file [from data] %s with size %ld", (uint8_t *)v65, 0x20u);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unsigned int v76 = v85;
      uint64_t v77 = v68;
    }
    else
    {
      v34(v59, v28);

      v34(v58, v28);
      unsigned int v76 = v56;
      uint64_t v77 = v28;
    }
    v34(v76, v77);
    return v88._countAndFlagsBits;
  }
  return v25;
}

void sub_1000CB5E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v26 = a8;
  uint64_t v27 = a5;
  int v29 = a7;
  uint64_t v28 = a6;
  uint64_t v12 = sub_1001094F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = sub_1000CF4AC(a2, a3, a4);
  if (v16)
  {
    uint64_t v17 = v16;
    NSString v18 = sub_100109CF0();
    [v17 setFilePath:v18];

    [v17 setNeedsProcessing:v29 & 1];
    return;
  }
  v24[1] = a3;
  v24[2] = a4;
  id v25 = a1;
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v20 = [v19 initWithContext:v26];
  sub_1001094E0();
  Class isa = sub_100109480().super.isa;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  [v20 setId:isa];

  NSString v22 = sub_100109CF0();
  [v20 setFilePath:v22];

  [v20 setNeedsProcessing:v29 & 1];
  if (a2 < -32768)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a2 >= 0x8000)
  {
LABEL_8:
    __break(1u);
    return;
  }
  [v20 setIndex:(__int16)a2];
  NSString v23 = sub_100109CF0();
  [v20 setName:v23];

  [v25 addFileAttachmentsObject:v20];
}

uint64_t sub_1000CB83C(void *a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v5 = [a1 filePath];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_100109D30();
    uint64_t v9 = v8;

    signed int v10 = [a1 index];
    id v11 = [a1 name];
    uint64_t v43 = v2;
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_100109D30();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v41 = v10;
    id v23 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    uint64_t v42 = v7;
    NSString v24 = sub_100109CF0();
    swift_bridgeObjectRelease();
    id v25 = [v23 initWithString:v24];

    id v26 = [v25 lastPathComponent];
    sub_100109D30();

    id v27 = objc_allocWithZone((Class)NSString);
    NSString v28 = sub_100109CF0();
    swift_bridgeObjectRelease();
    id v29 = [v27 initWithString:v28];

    id v30 = [v29 stringByDeletingPathExtension];
    uint64_t v31 = sub_100109D30();
    uint64_t v33 = v32;

    if (v15)
    {
      if (v13 == 0x6567616D69 && v15 == 0xE500000000000000 || (sub_10010ACA0() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v4 = v42;
LABEL_14:
        uint64_t v34 = v4;
LABEL_17:
        uint64_t v36 = v41;
        v34[1] = v9;
        type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        type metadata accessor for AssetAttachment(0);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v36;
        sub_1000CBD9C((uint64_t)v4, v37 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
        unint64_t v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
        *unint64_t v38 = v31;
        v38[1] = v33;
        return v37;
      }
      uint64_t v35 = v42;
      if (v13 == 0x6F65646976 && v15 == 0xE500000000000000 || (sub_10010ACA0() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        *uint64_t v4 = v35;
        goto LABEL_14;
      }
      if (v13 == 0x6F69647561 && v15 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();

LABEL_30:
        *uint64_t v4 = v35;
        goto LABEL_14;
      }
      char v40 = sub_10010ACA0();

      if (v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {

      uint64_t v35 = v42;
    }
    uint64_t v34 = (uint64_t *)((char *)v4 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48));
    *uint64_t v4 = v13;
    v4[1] = v15;
    *uint64_t v34 = v35;
    goto LABEL_17;
  }
  if (qword_100158C10 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100109960();
  sub_100007CB8(v16, (uint64_t)qword_10015E6B8);
  id v17 = a1;
  NSString v18 = sub_100109940();
  os_log_type_t v19 = sub_10010A2D0();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    id v21 = (void *)swift_slowAlloc();
    *(_DWORD *)id v20 = 138412290;
    id v44 = v17;
    id v22 = v17;
    sub_10010A730();
    *id v21 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "AssetAttachment.init error, missing filePath. AttachmentMO: %@", v20, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1000CBD9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000CBE04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Logger.byoLoggerWith(subsystem:category:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_100109950();
}

uint64_t sub_1000CBEC8(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E018);
}

uint64_t sub_1000CBEEC(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E030);
}

uint64_t sub_1000CBF18(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E048);
}

uint64_t sub_1000CBF3C(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E060);
}

uint64_t sub_1000CBF58(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E078);
}

uint64_t sub_1000CBF84(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E090);
}

uint64_t sub_1000CBFA8(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E0A8);
}

uint64_t sub_1000CBFD4(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E0C0);
}

uint64_t sub_1000CBFF0(uint64_t a1)
{
  return sub_1000CC008(a1, qword_10016E0D8);
}

uint64_t sub_1000CC008(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100109960();
  sub_100007C54(v3, a2);
  sub_100007CB8(v3, (uint64_t)a2);
  return sub_100109950();
}

uint64_t static Logger.appLoggerWith(category:)()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (v1)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();

  return sub_100109950();
}

uint64_t sub_1000CC148()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10016E0F0);
  sub_100007CB8(v0, (uint64_t)qword_10016E0F0);
  return sub_100109950();
}

uint64_t sub_1000CC1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1000CC1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1000CDCA0(&qword_1001591F0, type metadata accessor for Key);
  uint64_t v9 = sub_100109B70();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

id sub_1000CC2BC(void *a1, void *a2)
{
  if (!a2)
  {
    id v8 = [self systemFontOfSize:0.0];
    goto LABEL_9;
  }
  uint64_t v4 = self;
  id v5 = a2;
  id v6 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
  id v7 = [v6 fontDescriptorWithSymbolicTraits:0x8000];

  if (!v7)
  {

LABEL_7:
    id v8 = [self preferredFontForTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v5];
    goto LABEL_8;
  }
  id v8 = [self fontWithDescriptor:v7 size:0.0];

  if (!v8) {
    goto LABEL_7;
  }
LABEL_8:

LABEL_9:
  id v9 = [v8 fontDescriptor];
  unsigned int v10 = [v9 symbolicTraits];

  id v11 = [a1 fontDescriptor];
  unsigned int v12 = [v11 symbolicTraits];

  uint64_t v13 = v12 | v10;
  id v14 = [v8 fontDescriptor];
  id v15 = [v14 fontDescriptorWithSymbolicTraits:v13];

  if (v15)
  {
    id v16 = [self fontWithDescriptor:v15 size:0.0];

    id v8 = v15;
  }
  else
  {
    id v16 = a1;
  }

  return v16;
}

uint64_t sub_1000CC4DC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9, void *a10)
{
  double v12 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v89 = a1 + 64;
  double v94 = COERCE_DOUBLE(&_swiftEmptyDictionarySingleton);
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v91 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v24 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v25 = v24 | (v17 << 6);
LABEL_8:
      uint64_t v26 = *(void *)(a1 + 56);
      *(void *)&v98[0] = *(void *)(*(void *)(a1 + 48) + 8 * v25);
      id v27 = *(void **)&v98[0];
      sub_100037A20(v26 + 32 * v25, (uint64_t)v98 + 8);
      id v28 = v27;
      goto LABEL_27;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
    }
    if (v29 < v91)
    {
      unint64_t v30 = *(void *)(v89 + 8 * v29);
      if (v30) {
        goto LABEL_12;
      }
      int64_t v31 = v17 + 2;
      ++v17;
      if (v29 + 1 < v91)
      {
        unint64_t v30 = *(void *)(v89 + 8 * v31);
        if (v30) {
          goto LABEL_15;
        }
        int64_t v17 = v29 + 1;
        if (v29 + 2 < v91)
        {
          unint64_t v30 = *(void *)(v89 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          int64_t v31 = v29 + 3;
          int64_t v17 = v29 + 2;
          if (v29 + 3 < v91)
          {
            unint64_t v30 = *(void *)(v89 + 8 * v31);
            if (v30)
            {
LABEL_15:
              int64_t v29 = v31;
LABEL_12:
              unint64_t v16 = (v30 - 1) & v30;
              unint64_t v25 = __clz(__rbit64(v30)) + (v29 << 6);
              int64_t v17 = v29;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v29 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                goto LABEL_76;
              }
              if (v29 >= v91) {
                break;
              }
              unint64_t v30 = *(void *)(v89 + 8 * v29);
              ++v31;
              if (v30) {
                goto LABEL_12;
              }
            }
            int64_t v17 = v91 - 1;
          }
        }
      }
    }
    unint64_t v16 = 0;
    uint64_t v99 = 0;
    memset(v98, 0, sizeof(v98));
LABEL_27:
    sub_1000857F0((uint64_t)v98, (uint64_t)&v100);
    uint64_t v32 = (void *)v100;
    if (!(void)v100) {
      break;
    }
    sub_10002426C((long long *)((char *)&v100 + 8), v98);
    uint64_t v33 = sub_100109D30();
    uint64_t v35 = v34;
    if (v33 == sub_100109D30() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_33;
      }
    }
    sub_100037A20((uint64_t)v98, (uint64_t)&v96);
    uint64_t v38 = sub_10001CB98(0, &qword_10015B8C0);
    if (swift_dynamicCast())
    {
      id v18 = v95[0];
      id v19 = sub_1000CC2BC(v95[0], a6);
      uint64_t v97 = v38;
      *(void *)&long long v96 = v19;
      sub_10002426C(&v96, v95);
      id v20 = v32;
      id v21 = v19;
      double v22 = v94;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v93 = v22;
      sub_1000FEF90(v95, v20, isUniquelyReferenced_nonNull_native);
      double v12 = v93;
      double v94 = v93;

      goto LABEL_5;
    }
LABEL_33:
    uint64_t v39 = sub_100109D30();
    uint64_t v41 = v40;
    if (v39 == sub_100109D30() && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v43 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0) {
        goto LABEL_45;
      }
    }
    sub_100037A20((uint64_t)v98, (uint64_t)&v96);
    uint64_t v44 = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
    if (swift_dynamicCast())
    {
      id v45 = v95[0];
      *(void *)&long long v96 = 0;
      v95[0] = 0;
      uint64_t v92 = 0;
      double v93 = 0.0;
      [v45 getRed:&v96 green:v95 blue:&v93 alpha:&v92];
      double v46 = *(double *)&v96;
      if (*(double *)&v96 <= 0.001 && (double v46 = *(double *)v95, *(double *)v95 <= 0.001) && (double v46 = v93, v93 <= 0.001)
        || (*(void *)&long long v96 = 0,
            v95[0] = 0,
            uint64_t v92 = 0,
            double v93 = 0.0,
            objc_msgSend(v45, "getRed:green:blue:alpha:", &v96, v95, &v93, &v92, v46),
            *(double *)&v96 >= 0.99)
        && *(double *)v95 >= 0.99
        && v93 >= 0.99)
      {
        uint64_t v97 = v44;
        *(void *)&long long v96 = a7;
        sub_10002426C(&v96, v95);
        uint64_t v53 = NSForegroundColorAttributeName;
        id v60 = a7;
        double v61 = v94;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        double v93 = v61;
        sub_1000FEF90(v95, v53, v62);
        double v12 = v93;
        double v94 = v93;

        goto LABEL_53;
      }
    }
LABEL_45:
    uint64_t v47 = sub_100109D30();
    uint64_t v49 = v48;
    if (v47 == sub_100109D30() && v49 == v50)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v51 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0) {
        goto LABEL_51;
      }
    }
    sub_100037A20((uint64_t)v98, (uint64_t)&v96);
    sub_10001CB98(0, (unint64_t *)&unk_10015B8C8);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_51:
      sub_100037A20((uint64_t)v98, (uint64_t)&v96);
      id v57 = v32;
      double v58 = v94;
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      v95[0] = *(id *)&v58;
      sub_1000FEF90(&v96, v57, v59);
      double v12 = *(double *)v95;
      double v94 = *(double *)v95;

      goto LABEL_5;
    }
    id v45 = v95[0];
    id v52 = sub_100084670();
    [v52 setParagraphSpacingBefore:a4];
    sub_1000DB240();
    uint64_t v97 = sub_10001CB98(0, &qword_10015B8F0);
    *(void *)&long long v96 = v52;
    sub_10002426C(&v96, v95);
    uint64_t v53 = NSParagraphStyleAttributeName;
    id v54 = v52;
    double v55 = v94;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    double v93 = v55;
    sub_1000FEF90(v95, v53, v56);
    double v12 = v93;
    double v94 = v93;

LABEL_53:
LABEL_5:
    swift_bridgeObjectRelease();
    sub_10000B7B0((uint64_t)v98);
  }
  swift_release();
  if (!*(void *)(*(void *)&v12 + 16))
  {
    long long v100 = 0u;
    long long v101 = 0u;
    uint64_t v65 = a8;
LABEL_62:
    sub_100017700((uint64_t)&v100);
    *((void *)&v101 + 1) = sub_10001CB98(0, (unint64_t *)&qword_10015B8E0);
    *(void *)&long long v100 = a7;
    sub_10002426C(&v100, v98);
    id v68 = a7;
    uint64_t v69 = NSForegroundColorAttributeName;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v12;
    sub_1000FEF90(v98, v69, v70);
    double v67 = *(double *)&v96;
    double v94 = *(double *)&v96;

    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)&v67 + 16)) {
      goto LABEL_63;
    }
LABEL_61:
    long long v100 = 0u;
    long long v101 = 0u;
    goto LABEL_68;
  }
  int v63 = NSForegroundColorAttributeName;
  uint64_t v64 = sub_1000FCC0C();
  uint64_t v65 = a8;
  if (v66)
  {
    sub_100037A20(*(void *)(*(void *)&v12 + 56) + 32 * v64, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (!*((void *)&v101 + 1)) {
    goto LABEL_62;
  }
  sub_100017700((uint64_t)&v100);
  double v67 = v94;
  if (!*(void *)(*(void *)&v94 + 16)) {
    goto LABEL_61;
  }
LABEL_63:
  uint64_t v71 = NSFontAttributeName;
  uint64_t v72 = sub_1000FCC0C();
  if (v73)
  {
    sub_100037A20(*(void *)(*(void *)&v67 + 56) + 32 * v72, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (*((void *)&v101 + 1))
  {
LABEL_67:
    sub_100017700((uint64_t)&v100);
    goto LABEL_73;
  }
LABEL_68:
  sub_100017700((uint64_t)&v100);
  if (v65)
  {
    *((void *)&v101 + 1) = sub_10001CB98(0, &qword_10015B8C0);
    *(void *)&long long v100 = v65;
    sub_10002426C(&v100, v98);
    id v74 = v65;
    uint64_t v75 = NSFontAttributeName;
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_1000FEF90(v98, v75, v76);
    double v94 = *(double *)&v96;
  }
  else
  {
    if (!a9)
    {
      uint64_t v83 = NSFontAttributeName;
      sub_1000CD02C((uint64_t)v83, (uint64_t (*)(uint64_t))sub_1000FCC0C, (void (*)(uint64_t, uint64_t))sub_1000CD3D0, (void (*)(void))sub_1001007B8, &v100);

      goto LABEL_67;
    }
    *((void *)&v101 + 1) = sub_10001CB98(0, &qword_10015B8C0);
    *(void *)&long long v100 = a9;
    sub_10002426C(&v100, v98);
    uint64_t v77 = NSFontAttributeName;
    id v78 = a9;
    char v79 = swift_isUniquelyReferenced_nonNull_native();
    *(double *)&long long v96 = v67;
    sub_1000FEF90(v98, v77, v79);
    double v94 = *(double *)&v96;
  }
  swift_bridgeObjectRelease();
LABEL_73:
  id v80 = NSAdaptiveImageGlyphAttributeName;
  sub_1000CD02C((uint64_t)v80, (uint64_t (*)(uint64_t))sub_1000FCC0C, (void (*)(uint64_t, uint64_t))sub_1000CD3D0, (void (*)(void))sub_1001007B8, &v100);

  sub_100017700((uint64_t)&v100);
  type metadata accessor for Key(0);
  sub_1000CDCA0(&qword_1001591F0, type metadata accessor for Key);
  swift_bridgeObjectRetain();
  Class isa = sub_100109B60().super.isa;
  swift_bridgeObjectRelease();
  [a10 setAttributes:isa range:a2];

  return swift_bridgeObjectRelease();
}

double sub_1000CCFAC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000CD02C(a1, (uint64_t (*)(uint64_t))sub_1000FCC0C, (void (*)(uint64_t, uint64_t))sub_1000CD3D0, (void (*)(void))sub_100100598, a2);
}

double sub_1000CCFEC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000CD02C(a1, (uint64_t (*)(uint64_t))sub_1000FCC0C, (void (*)(uint64_t, uint64_t))sub_1000CD3D0, (void (*)(void))sub_1001007B8, a2);
}

double sub_1000CD02C@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  id v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v9;
    uint64_t v17 = *v9;
    uint64_t *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      uint64_t v15 = v17;
    }

    sub_10002426C((_OWORD *)(*(void *)(v15 + 56) + 32 * v12), a5);
    a3(v12, v15);
    uint64_t *v9 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

unint64_t sub_1000CD148(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10010A7E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10010ADC0();
        sub_100109DB0();
        swift_bridgeObjectRelease();
        double result = sub_10010AE20();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          id v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *id v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *unint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x1000CD3B8);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1000CD3D0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10010A7E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_100109D30();
        sub_10010ADC0();
        id v11 = v10;
        sub_100109DB0();
        Swift::Int v12 = sub_10010AE20();

        double result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (_OWORD *)(v17 + 32 * v3);
          uint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *BOOL v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000CD5C4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_10010A7E0();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1000CDCA0((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = sub_100109C00();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            BOOL v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1000CD8BC(void *a1, void *a2, void *a3, double a4)
{
  if (!a2) {
    return 0;
  }
  id v7 = a2;
  id v8 = [v7 string];
  sub_100109D30();

  id v9 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v10 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  id v12 = [self labelColor];
  id v13 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v14 = [v13 fontDescriptorWithSymbolicTraits:0x8000];

  if (v14)
  {
    id v15 = [self fontWithDescriptor:v14 size:0.0];
  }
  else
  {
    id v15 = 0;
  }
  uint64_t result = (uint64_t)[v7 length];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = result;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = v12;
    *(double *)(v18 + 32) = a4;
    *(void *)(v18 + 40) = a3;
    *(void *)(v18 + 48) = v15;
    *(void *)(v18 + 56) = v11;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1000CDC1C;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_1000CDC60;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000CC1EC;
    aBlock[3] = &unk_100144E08;
    BOOL v20 = _Block_copy(aBlock);
    id v21 = v15;
    id v16 = v11;
    swift_retain();
    id v22 = a1;
    id v23 = v12;
    id v24 = a3;
    swift_release();
    [v7 enumerateAttributesInRange:0 options:v26 usingBlock:v20];

    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CDBC4()
{
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000CDC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000CC4DC(a1, a2, a3, *(double *)(v4 + 32), a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 40), *(void **)(v4 + 48), *(void **)(v4 + 56));
}

uint64_t sub_1000CDC50()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CDC60()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000CDC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000CDC98()
{
  return swift_release();
}

uint64_t sub_1000CDCA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id CanvasGridCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = [objc_allocWithZone(v5) initWithFrame:a1 collectionViewLayout:a2];

  return v7;
}

uint64_t property wrapper backing initializer of CanvasGridCollectionView.isExpanded()
{
  uint64_t v0 = sub_10010A630();
  __chkstk_darwin(v0);
  sub_10010A620();
  return sub_10010A5E0();
}

uint64_t sub_1000CDE14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10010A5F0();
  swift_release();
  swift_release();
  return v1;
}

id CanvasGridCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = sub_10010A630();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100004BD4(&qword_10015E8E8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = &v5[OBJC_IVAR____TtC21JournalShareExtension24CanvasGridCollectionView__isExpanded];
  char v27 = 0;
  uint64_t v17 = v5;
  sub_10010A620();
  sub_10010A5E0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);

  uint64_t v18 = (objc_class *)type metadata accessor for CanvasGridCollectionView();
  v26.receiver = v17;
  v26.super_class = v18;
  id v19 = [super initWithFrame:a1 collectionViewLayout:a2];
  type metadata accessor for MosaicCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v21 = v19;
  NSString v22 = sub_100109CF0();
  [v21 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v22];

  id v23 = [self clearColor];
  [v21 setBackgroundColor:v23];

  [v21 setScrollEnabled:0];
  [v21 setClipsToBounds:0];

  return v21;
}

uint64_t type metadata accessor for CanvasGridCollectionView()
{
  uint64_t result = qword_10015E920;
  if (!qword_10015E920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id CanvasGridCollectionView.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id CanvasGridCollectionView.init(coder:)(void *a1)
{
  uint64_t v3 = sub_10010A630();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100004BD4(&qword_10015E8E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = &v1[OBJC_IVAR____TtC21JournalShareExtension24CanvasGridCollectionView__isExpanded];
  char v19 = 0;
  id v9 = v1;
  sub_10010A620();
  sub_10010A5E0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v7, v4);

  NSString v10 = (objc_class *)type metadata accessor for CanvasGridCollectionView();
  v18.receiver = v9;
  v18.super_class = v10;
  [super initWithCoder:a1];
  if (v11)
  {
    type metadata accessor for MosaicCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v13 = v11;
    NSString v14 = sub_100109CF0();
    [v13 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v14];

    id v15 = [self clearColor];
    [v13 setBackgroundColor:v15];

    [v13 setScrollEnabled:0];
    [v13 setClipsToBounds:0];
  }
  return v11;
}

double CanvasGridCollectionView.intrinsicContentSize.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10010A5F0();
  swift_release();
  swift_release();
  if ((v2 & 1) == 0) {
    return sub_1000CE5CC();
  }
  [v0 contentSize];
  return result;
}

double sub_1000CE5CC()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = sub_100109630();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)[v1 numberOfSections] >= 1
    && (uint64_t)[v1 numberOfItemsInSection:0] >= 6
    && (sub_1001095F0(),
        Class isa = sub_100109600().super.isa,
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2),
        id v7 = [v1 layoutAttributesForItemAtIndexPath:isa],
        isa,
        v7))
  {
    [v1 contentSize];
    double v9 = v8;
    [v7 frame];
    CGRectGetMaxY(v13);
  }
  else
  {
    [v1 contentSize];
    return v10;
  }
  return v9;
}

id CanvasGridCollectionView.contentSize.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasGridCollectionView();
  return [super contentSize];
}

id CanvasGridCollectionView.contentSize.setter(double a1, double a2)
{
  uint64_t v5 = (objc_class *)type metadata accessor for CanvasGridCollectionView();
  v15.receiver = v2;
  v15.super_class = v5;
  [super contentSize];
  double v7 = v6;
  double v9 = v8;
  v14.receiver = v2;
  v14.super_class = v5;
  [super setContentSize:a1, a2];
  id result = [v2 contentSize];
  if (v12 != v7 || v11 != v9) {
    return [v2 invalidateIntrinsicContentSize];
  }
  return result;
}

id CanvasGridCollectionView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasGridCollectionView();
  [super dealloc];
}

uint64_t sub_1000CE9F8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10010A5F0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000CEA7C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_10010A600();
}

uint64_t sub_1000CEAF0()
{
  return type metadata accessor for CanvasGridCollectionView();
}

void sub_1000CEAF8()
{
  sub_1000CEB88();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000CEB88()
{
  if (!qword_10015E930)
  {
    sub_10010A630();
    unint64_t v0 = sub_10010A610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E930);
    }
  }
}

uint64_t sub_1000CEC08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000502A4((uint64_t)v4);
  uint64_t v5 = sub_1001091E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000B9CC((uint64_t)v4, (uint64_t *)&unk_100159D40);
    uint64_t v7 = 1;
  }
  else
  {
    sub_100109110();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

id sub_1000CED64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001094F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v11 = (char *)&v27 - v10;
  id result = [v0 entry];
  if (result)
  {
    CGRect v13 = result;
    uint64_t v14 = sub_1000CF7B0();
    uint64_t v16 = v15;

    if (v16)
    {
      id v17 = [v1 id];
      if (v17)
      {
        objc_super v18 = v17;
        sub_1001094B0();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
      }
      sub_100041BC8((uint64_t)v9, (uint64_t)v11);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
        sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015A850);
        uint64_t v23 = sub_100109470();
        uint64_t v25 = v24;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        uint64_t v29 = 47;
        unint64_t v30 = 0xE100000000000000;
        v31._uint64_t countAndFlagsBits = v23;
        v31._object = v25;
        sub_100109E00(v31);
        swift_bridgeObjectRelease();
        uint64_t v27 = v14;
        uint64_t v28 = v16;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_100109E90();
        uint64_t v28 = v26;
        sub_100109DF0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (id)v27;
      }
      swift_bridgeObjectRelease();
      sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015A850);
      if (qword_100158C68 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_100109960();
      sub_100007CB8(v19, (uint64_t)qword_10015E938);
      BOOL v20 = sub_100109940();
      os_log_type_t v21 = sub_10010A2D0();
      if (os_log_type_enabled(v20, v21))
      {
        NSString v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "JournalEntryAssetMO.attachmentDirectoryPath is nil since id is nil", v22, 2u);
        swift_slowDealloc();
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1000CF110()
{
  uint64_t v0 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001091E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v19 - v8;
  sub_1000CED64();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    return sub_10000B9CC((uint64_t)v2, (uint64_t *)&unk_100159D40);
  }
  type metadata accessor for Journaling();
  sub_1000CEC08((uint64_t)v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_10000B9CC((uint64_t)v2, (uint64_t *)&unk_100159D40);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
  if (qword_100158C68 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100109960();
  sub_100007CB8(v11, (uint64_t)qword_10015E938);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  double v12 = sub_100109940();
  os_log_type_t v13 = sub_10010A2F0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    v19[1] = v14 + 4;
    sub_10005B1FC();
    uint64_t v15 = sub_10010AC60();
    v19[2] = sub_1000C50D4(v15, v16, &v20);
    sub_10010A730();
    swift_bridgeObjectRelease();
    id v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Deleting asset attachments directory: %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v3);
  }

  sub_1000CFA84((uint64_t)v9);
  return ((uint64_t (*)(char *, uint64_t))v17)(v9, v3);
}

id sub_1000CF4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100108FF0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v3 fileAttachments];
  if (!v11)
  {
    sub_1000CFFB4();
    id v11 = (id)sub_10010A5A0();
  }
  sub_10010A5B0();

  sub_100108FE0();
  if (!v27)
  {
    id v12 = 0;
    goto LABEL_19;
  }
  uint64_t v22 = v8;
  uint64_t v23 = v7;
  while (1)
  {
    sub_10002426C(&v26, &v25);
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_6;
    }
    id v12 = v24;
    if ((int)[v24 index] == a1)
    {
      id v13 = [v12 name];
      if (v13) {
        break;
      }
    }
LABEL_5:

LABEL_6:
    sub_100108FE0();
    if (!v27)
    {
      id v12 = 0;
      goto LABEL_17;
    }
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_100109D30();
  uint64_t v17 = v16;

  if (v15 != a2 || v17 != a3)
  {
    char v19 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_17;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v8 = v22;
  uint64_t v7 = v23;
LABEL_19:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t sub_1000CF6E8()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E938);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015E938);
  if (qword_100158C28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E048);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000CF7B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001094F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v20 - v10;
  id v12 = [v1 id];
  if (v12)
  {
    id v13 = v12;
    sub_1001094B0();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
  }
  sub_100041BC8((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
  {
    sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015A850);
    if (qword_100158C68 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100109960();
    sub_100007CB8(v14, (uint64_t)qword_10015E938);
    uint64_t v15 = sub_100109940();
    os_log_type_t v16 = sub_10010A2D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "JournalEntryMO.attachmentDirectoryPath is nil since id is nil", v17, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
    sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015A850);
    uint64_t v18 = sub_100109470();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v18;
}

void sub_1000CFA84(uint64_t a1)
{
  uint64_t v2 = sub_1001091E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = self;
  id v7 = [v6 defaultManager];
  sub_100109160();
  NSString v8 = sub_100109CF0();
  swift_bridgeObjectRelease();
  unsigned __int8 v9 = [v7 fileExistsAtPath:v8];

  if (v9)
  {
    id v10 = [v6 defaultManager];
    sub_1001090F0(v11);
    id v13 = v12;
    id v31 = 0;
    unsigned int v14 = [v10 removeItemAtURL:v12 error:&v31];

    id v15 = v31;
    if (v14)
    {
      id v16 = v15;
    }
    else
    {
      v30[1] = v31;
      id v23 = v31;
      sub_100108FC0();

      swift_willThrow();
      if (qword_100158C68 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_100109960();
      sub_100007CB8(v24, (uint64_t)qword_10015E938);
      swift_errorRetain();
      swift_errorRetain();
      long long v25 = sub_100109940();
      os_log_type_t v26 = sub_10010A2D0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 138412290;
        swift_errorRetain();
        uint64_t v29 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v31 = v29;
        sub_10010A730();
        *uint64_t v28 = v29;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "JournalEntryAssetMO.purgeAssetStorage, failed to delete file: %@", v27, 0xCu);
        sub_100004BD4((uint64_t *)&unk_100159D70);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    if (qword_100158C68 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100109960();
    sub_100007CB8(v17, (uint64_t)qword_10015E938);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    uint64_t v18 = sub_100109940();
    os_log_type_t v19 = sub_10010A2D0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      id v31 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_10005B1FC();
      uint64_t v21 = sub_10010AC60();
      v30[3] = sub_1000C50D4(v21, v22, (uint64_t *)&v31);
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "JournalEntryAssetMO.purgeStoredFiles.deleteFile file doesn't exist: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

unint64_t sub_1000CFFB4()
{
  unint64_t result = qword_10015A838;
  if (!qword_10015A838)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015A838);
  }
  return result;
}

uint64_t sub_1000CFFF4()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015E950);
  sub_100007CB8(v0, (uint64_t)qword_10015E950);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

uint64_t AttachmentDownloadOperation.main@Sendable ()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_100004BD4((uint64_t *)&unk_100159D40);
  v2[6] = swift_task_alloc();
  uint64_t v3 = sub_1001091E0();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1000D01F0, 0, 0);
}

uint64_t sub_1000D01F0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + qword_10015E978);
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  unint64_t v5 = sub_1000C4CEC();
  *uint64_t v4 = v0;
  v4[1] = sub_1000D02F8;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10015E988, v3, v5);
}

uint64_t sub_1000D02F8()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000D08C8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000D0414;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000D0414()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[2];
  if (!sub_10010A670()) {
    goto LABEL_7;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_7:
    if (qword_100158C70 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100109960();
    sub_100007CB8(v17, (uint64_t)qword_10015E950);
    uint64_t v18 = v1;
    os_log_type_t v19 = sub_100109940();
    os_log_type_t v20 = sub_10010A2E0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      id v22 = [v18 debugDescription];
      uint64_t v23 = sub_100109D30();
      unint64_t v25 = v24;

      v0[3] = sub_1000C50D4(v23, v25, &v33);
      sub_10010A730();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "error getting DataConfig.JournalEntryAssetFileAttachment.file: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_19;
  }
  id v3 = [v2 fileURL];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    sub_100109140();

    unsigned __int8 v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v9(v8, v5, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
    {
      uint64_t v10 = v0[10];
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[7];
      uint64_t v13 = v0[4];
      swift_unknownObjectRelease();
      v9(v10, v11, v12);
      uint64_t v14 = sub_100004BD4(&qword_10015E990);
      uint64_t v15 = *(int *)(v14 + 48);
      v9(v13, v10, v12);
      uint64_t v16 = 0;
      *(void *)(v13 + v15) = v1;
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
  }
  sub_1000192F8(v0[6]);
  if (qword_100158C70 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_100109960();
  sub_100007CB8(v26, (uint64_t)qword_10015E950);
  uint64_t v27 = sub_100109940();
  os_log_type_t v28 = sub_10010A2E0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "ckAsset.fileURL is nil", v29, 2u);
    swift_slowDealloc();
    unint64_t v30 = v1;
  }
  else
  {
    unint64_t v30 = v27;
    uint64_t v27 = v1;
  }
  swift_unknownObjectRelease();

LABEL_19:
  uint64_t v14 = sub_100004BD4(&qword_10015E990);
  uint64_t v16 = 1;
LABEL_20:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v0[4], v16, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1000D08C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000D0954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_1000D0978, 0, 0);
}

uint64_t sub_1000D0978()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_10015E998);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000C4A90;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10000E354;
  v0[13] = &unk_100144E40;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000D0A84(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000090F0;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_1000D0978, 0, 0);
}

void AttachmentDownloadOperation.init()()
{
}

void sub_1000D0B74()
{
}

void sub_1000D0BA4()
{
  uint64_t v1 = *(void **)(v0 + qword_10015E978);
}

id AttachmentDownloadOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttachmentDownloadOperation();
  return [super dealloc];
}

void sub_1000D0C3C(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_10015E978);
}

uint64_t type metadata accessor for AttachmentDownloadOperation()
{
  uint64_t result = qword_10015E9D0;
  if (!qword_10015E9D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000D0CF4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000D0D40()
{
  return type metadata accessor for AttachmentDownloadOperation();
}

unint64_t sub_1000D0D48@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000D4558(*a1);
  *a2 = result;
  return result;
}

void sub_1000D0D74(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1000D0D80()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v1 = 0.0;
  if (Strong)
  {
    objc_super v2 = Strong;
    id v3 = [Strong view];

    if (!v3)
    {
      __break(1u);
      goto LABEL_12;
    }
    id v4 = [v3 window];

    if (v4)
    {
      [v4 frame];
      double v6 = v5;
      [v4 safeAreaInsets];
      double v8 = v6 - v7;
      [v4 safeAreaInsets];
      double v10 = v9;

      double v1 = v8 - v10 + -10.0;
    }
  }
  uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v11) {
    return;
  }
  uint64_t v12 = v11;
  id v13 = [v11 view];

  if (!v13)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v14 = [v13 window];

  if (v14)
  {
    [v14 safeAreaInsets];

    if (v1 > 0.0) {
      sub_1000D0EF4(0);
    }
  }
}

void sub_1000D0EF4(void *a1)
{
  if (a1)
  {
    [a1 maximumDetentValue];
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v6 = Strong;
      id v7 = [Strong view];

      if (!v7)
      {
LABEL_13:
        __break(1u);
        return;
      }
      id v8 = [v7 window];

      if (v8)
      {
        [v8 frame];
        [v8 safeAreaInsets];
        [v8 safeAreaInsets];
      }
    }
  }
  double v1 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v1) {
    return;
  }
  objc_super v2 = v1;
  id v3 = [v1 view];

  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v4 = [v3 window];

  if (v4)
  {
    [v4 safeAreaInsets];
  }
}

uint64_t sub_1000D109C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1000D10F0(char a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (!v2) {
    return;
  }
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint);
  if (!v3) {
    return;
  }
  BOOL v4 = a1 != 2;
  BOOL v5 = a1 == 2;
  id v20 = v2;
  id v6 = v3;
  [v20 setActive:v5];
  [v6 setActive:v4];
  double v7 = 0.0;
  switch(v8)
  {
    case 1:
      double bottom = *(double *)(v1
                         + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_lastReportedKeyboardHeight);
      if (bottom > 0.0) {
        goto LABEL_15;
      }
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (!Strong)
      {
        double bottom = UIEdgeInsetsZero.bottom;
        goto LABEL_15;
      }
      uint64_t v16 = Strong;
      id v17 = [Strong view];

      if (v17)
      {
        [v17 safeAreaInsets];
        double bottom = v18;

LABEL_15:
        double v7 = -2.0 - bottom;
        goto LABEL_16;
      }
      goto LABEL_20;
    case 2:
      goto LABEL_16;
    case 3:
      sub_1000D0D80();
      double v7 = -2.0 - v19;
      goto LABEL_16;
    default:
      double v9 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v9)
      {
        double v10 = v9;
        id v11 = [v9 view];

        if (!v11)
        {
          __break(1u);
LABEL_20:
          __break(1u);
          JUMPOUT(0x1000D1300);
        }
        [v11 safeAreaInsets];
        double v13 = v12;

        double v7 = -v13;
      }
      else
      {
        double v7 = -UIEdgeInsetsZero.bottom;
      }
LABEL_16:
      [v6 setConstant:v7];

      return;
  }
}

void sub_1000D1310()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v2 = Strong;
    [Strong frame];
  }
  if (*(unsigned __int8 *)(v0
                                        + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl)
     - 2 >= 2)
  {
    if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl)) {
      goto LABEL_12;
    }
    if (*(double *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_lastReportedKeyboardHeight) <= 0.0) {
      goto LABEL_12;
    }
    id v6 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v6) {
      goto LABEL_12;
    }
    double v7 = v6;
    id v5 = [v6 view];

    if (v5) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  sub_1000D0D80();
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    BOOL v4 = v3;
    id v5 = [v3 view];

    if (v5)
    {
LABEL_6:
      [v5 safeAreaInsets];

      goto LABEL_12;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
LABEL_12:
  int v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    double v9 = v8;
    [v8 contentInset];
    [v9 setContentInset:];
  }
  double v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    id v11 = v10;
    [v10 verticalScrollIndicatorInsets];
    [v11 setVerticalScrollIndicatorInsets];
  }
}

id sub_1000D153C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v11 = (void *)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_dismissSuggestionSheet);
  *id v11 = a5;
  v11[1] = a6;
  swift_retain();
  swift_release();
  if (!a4)
  {
    double v18 = (id *)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
    unint64_t v24 = *(void **)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
    *(void *)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint) = 0;

    id v23 = 0;
    goto LABEL_6;
  }
  id v12 = [a4 bottomAnchor];
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v14 = result;
  id v15 = [result keyboardLayoutGuide];

  id v16 = [v15 topAnchor];
  id v17 = [v12 constraintEqualToAnchor:v16 constant:-2.0];

  double v18 = (id *)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  double v19 = *(void **)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  *(void *)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint) = v17;

  id v20 = [a4 bottomAnchor];
  id result = [a1 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v21 = result;
  id v22 = [result bottomAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
LABEL_6:
  uint64_t v25 = OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint;
  uint64_t v26 = *(void **)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint);
  *(void *)(v6 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint) = v23;

  if (*v18) {
    [*v18 setActive:0];
  }
  id result = *(id *)(v6 + v25);
  if (result)
  {
    return [result setActive:1];
  }
  return result;
}

void sub_1000D17BC()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 addObserver:v0 selector:"keyboardWillShow:" name:UIKeyboardWillShowNotification object:0];

  id v3 = [v1 defaultCenter];
  [v3 addObserver:v0 selector:"keyboardDidShow" name:UIKeyboardDidShowNotification object:0];

  id v4 = [v1 defaultCenter];
  [v4 addObserver:v0 selector:"keyboardDidHide" name:UIKeyboardDidHideNotification object:0];

  id v5 = [v1 defaultCenter];
  [v5 addObserver:v0 selector:"textViewDidBeginEditing:" name:UITextViewTextDidBeginEditingNotification object:0];
}

void sub_1000D1914()
{
  uint64_t v1 = sub_100108E50();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) != 1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      unsigned __int8 v7 = [Strong isFirstResponder];

      if (v7) {
        goto LABEL_6;
      }
    }
    int v8 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      double v9 = v8;
      unsigned int v10 = [v8 isFirstResponder];

      if (v10)
      {
LABEL_6:
        id v11 = sub_100109940();
        os_log_type_t v12 = sub_10010A2F0();
        if (os_log_type_enabled(v11, v12))
        {
          double v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)double v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "keyboardDidBeginEditing - Hardware keyboard detected!", v13, 2u);
          swift_slowDealloc();
        }

        long long v20 = 0u;
        long long v21 = 0u;
        sub_100004BD4(&qword_100159FF8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100122230;
        v19[1] = sub_100109D30();
        v19[2] = v15;
        id v16 = UIKeyboardWillShowNotification;
        sub_10010A860();
        type metadata accessor for CGRect(0);
        *(void *)(inited + 96) = v17;
        uint64_t v18 = swift_allocObject();
        *(void *)(inited + 72) = v18;
        *(_OWORD *)(v18 + 16) = 0u;
        *(_OWORD *)(v18 + 32) = 0u;
        sub_10007B4AC(inited);
        sub_100108E20();
        sub_1000D1C80();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        sub_1000D269C();
      }
    }
  }
}

void sub_1000D1C80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100108E40();
  if (!v2)
  {
    long long v68 = 0u;
    long long v69 = 0u;
LABEL_21:
    sub_10000B9CC((uint64_t)&v68, &qword_10015A8A0);
    return;
  }
  uint64_t v3 = v2;
  uint64_t v66 = sub_100109D30();
  uint64_t v67 = v4;
  sub_10010A860();
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_1000FCC10((uint64_t)&aBlock), (v6 & 1) != 0))
  {
    sub_100037A20(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000AE3FC((uint64_t)&aBlock);
  if (!*((void *)&v69 + 1)) {
    goto LABEL_21;
  }
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  unsigned __int8 v7 = v63;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (v9 = Strong, unsigned __int8 v10 = [Strong isFirstResponder], v9, (v10 & 1) == 0))
  {
    id v11 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v11) {
      return;
    }
    os_log_type_t v12 = v11;
    unsigned int v13 = [v11 isFirstResponder];

    if (!v13) {
      return;
    }
  }
  char v14 = *(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_lastReportedKeyboardHeight) = v7;
  uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v15 || (id v16 = v15, v17 = [v15 isEditing], v16, !v17))
  {
    id v31 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v31) {
      goto LABEL_57;
    }
    uint64_t v32 = v31;
    unsigned int v33 = [v31 isEditing];

    if (!v33) {
      goto LABEL_57;
    }
    uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v34) {
      goto LABEL_57;
    }
    double v19 = v34;
    id v35 = [v34 items];
    if (v35)
    {
      uint64_t v36 = v35;
      sub_10001CB98(0, (unint64_t *)&qword_10015EEE8);
      unint64_t v37 = sub_100109F30();

      if (v37 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_10010AA80();
        swift_bridgeObjectRelease();
        if (!v38) {
          goto LABEL_56;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v38) {
          goto LABEL_56;
        }
      }
      double v58 = v19;
      char v59 = v14;
      if (v38 >= 1)
      {
        for (uint64_t i = 0; i != v38; ++i)
        {
          if ((v37 & 0xC000000000000001) != 0) {
            id v41 = (id)sub_10010A920();
          }
          else {
            id v41 = *(id *)(v37 + 8 * i + 32);
          }
          uint64_t v40 = v41;
          id v42 = [v41 customView:v58];
          if (v42)
          {
            id v43 = v42;
            self;
            uint64_t v44 = swift_dynamicCastObjCClass();
            if (v44)
            {
              id v45 = (void *)v44;
              id v43 = v43;
              [v45 setSelected:[v45 tag] == 1];
              if ([v45 tag] == (id)9) {
                [v45 setEnabled:1];
              }

              uint64_t v40 = v43;
            }

            uint64_t v40 = v43;
          }
        }
        goto LABEL_51;
      }
LABEL_66:
      __break(1u);
      return;
    }
LABEL_52:

    goto LABEL_57;
  }
  uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    double v19 = v18;
    id v20 = [v18 items];
    if (v20)
    {
      long long v21 = v20;
      sub_10001CB98(0, (unint64_t *)&qword_10015EEE8);
      unint64_t v22 = sub_100109F30();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_10010AA80();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v23)
        {
LABEL_18:
          double v58 = v19;
          char v59 = v14;
          if (v23 >= 1)
          {
            for (uint64_t j = 0; j != v23; ++j)
            {
              if ((v22 & 0xC000000000000001) != 0) {
                id v26 = (id)sub_10010A920();
              }
              else {
                id v26 = *(id *)(v22 + 8 * j + 32);
              }
              uint64_t v25 = v26;
              id v27 = [v26 customView:v58];
              if (v27)
              {
                id v28 = v27;
                self;
                uint64_t v29 = swift_dynamicCastObjCClass();
                if (v29)
                {
                  unint64_t v30 = (void *)v29;
                  id v28 = v28;
                  objc_msgSend(v30, "setSelected:", objc_msgSend(v30, "tag") == 0);
                  if ([v30 tag] == (id)9) {
                    [v30 setEnabled:0];
                  }

                  uint64_t v25 = v28;
                }

                uint64_t v25 = v28;
              }
            }
LABEL_51:

            swift_bridgeObjectRelease();
            char v14 = v59;
            goto LABEL_57;
          }
          __break(1u);
          goto LABEL_66;
        }
      }
LABEL_56:

      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
    goto LABEL_52;
  }
LABEL_57:
  double v46 = *(void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_dismissSuggestionSheet);
  swift_retain();
  v46(1);
  swift_release();
  uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v47)
  {
    uint64_t v48 = v47;
    id v49 = [v47 sheetPresentationController];
    if (v49)
    {
      uint64_t v50 = v49;
      [v49 setDelegate:0];
    }
    uint64_t v64 = (void (*)())nullsub_1;
    uint64_t v65 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    char v62 = sub_10001DEE8;
    int v63 = &unk_100144FD8;
    char v51 = _Block_copy(&aBlock);
    swift_release();
    [v48 dismissViewControllerAnimated:1 completion:v51];
    _Block_release(v51);
  }
  swift_unknownObjectWeakAssign();
  if ((v14 & 0xFE) == 2)
  {
    id v52 = sub_100109940();
    os_log_type_t v53 = sub_10010A2F0();
    if (os_log_type_enabled(v52, v53))
    {
      id v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "keyboardWillShow - Animating bottom constraint to keyboard constant.", v54, 2u);
      swift_slowDealloc();
    }

    double v55 = self;
    uint64_t v64 = sub_1000D4624;
    uint64_t v65 = v1;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    char v62 = sub_10001DEE8;
    int v63 = &unk_100145000;
    char v56 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_release();
    uint64_t v64 = (void (*)())nullsub_1;
    uint64_t v65 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v61 = 1107296256;
    char v62 = sub_1000D109C;
    int v63 = &unk_100145028;
    id v57 = _Block_copy(&aBlock);
    swift_release();
    [v55 animateWithDuration:0 delay:v56 options:v57 animations:0.2 completion:0.0];
    _Block_release(v57);
    _Block_release(v56);
    swift_release();
  }
}

void sub_1000D2498(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
  if (v1)
  {
    uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint);
    if (v2)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 setActive:1];
      [v4 setActive:0];
      [v4 setConstant:0.0];
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v6 = Strong;
    id v7 = [Strong view];

    if (v7)
    {
      [v7 layoutIfNeeded];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000D269C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) == 1)
  {
    uint64_t v1 = v0;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v3 = Strong;
      unsigned __int8 v4 = [Strong isFirstResponder];

      if (v4) {
        goto LABEL_6;
      }
    }
    unint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      char v6 = v5;
      unsigned int v7 = [v5 isFirstResponder];

      if (v7)
      {
LABEL_6:
        int v8 = sub_100109940();
        os_log_type_t v9 = sub_10010A2F0();
        if (os_log_type_enabled(v8, v9))
        {
          unsigned __int8 v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned __int8 v10 = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "keyboardDidShow - Changing to keyboard constraint.", v10, 2u);
          swift_slowDealloc();
        }

        id v11 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
        if (v11)
        {
          os_log_type_t v12 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint);
          if (v12)
          {
            id v13 = v11;
            id v14 = v12;
            [v13 setActive:1];
            [v14 setActive:0];
            [v14 setConstant:0.0];
          }
        }
        sub_1000D1310();
        uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
        id v16 = v15;
        if (v15)
        {
          id v17 = [v15 presentedViewController];

          if (v17)
          {
            self;
            id v16 = (void *)swift_dynamicCastObjCClass();
            if (!v16) {
          }
            }
          else
          {
            id v16 = 0;
          }
        }

        uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v18)
        {
          double v19 = v18;
          id v20 = [v18 items];

          if (v20)
          {
            sub_10001CB98(0, (unint64_t *)&qword_10015EEE8);
            unint64_t v21 = sub_100109F30();

            if (v21 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v22 = sub_10010AA80();
              if (v22) {
                goto LABEL_20;
              }
            }
            else
            {
              uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v22)
              {
LABEL_20:
                if (v22 < 1)
                {
                  __break(1u);
                  return;
                }
                for (uint64_t i = 0; i != v22; ++i)
                {
                  if ((v21 & 0xC000000000000001) != 0) {
                    id v24 = (id)sub_10010A920();
                  }
                  else {
                    id v24 = *(id *)(v21 + 8 * i + 32);
                  }
                  uint64_t v25 = v24;
                  [v24 setIsAccessibilityElement:v16 == 0];
                }
              }
            }
            swift_bridgeObjectRelease_n();
          }
        }
      }
    }
  }
}

void sub_1000D29C8()
{
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) != 1) {
    return;
  }
  uint64_t v2 = v0;
  id v3 = sub_100109940();
  os_log_type_t v4 = sub_10010A2F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "keyboardDidHide", v5, 2u);
    swift_slowDealloc();
  }

  sub_1000D10F0(0);
  *(unsigned char *)(v2 + v1) = 0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v7 = Strong;
    id v8 = [Strong items];
    if (v8)
    {
      os_log_type_t v9 = v8;
      sub_10001CB98(0, (unint64_t *)&qword_10015EEE8);
      unint64_t v10 = sub_100109F30();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_10010AA80();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
LABEL_8:
          if (v11 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v14 = (id)sub_10010A920();
            }
            else {
              id v14 = *(id *)(v10 + 8 * i + 32);
            }
            id v13 = v14;
            id v15 = [v14 customView];
            if (v15)
            {
              id v16 = v15;
              self;
              uint64_t v17 = swift_dynamicCastObjCClass();
              if (v17)
              {
                uint64_t v18 = (void *)v17;
                id v16 = v16;
                [v18 setSelected:0];
                if ([v18 tag] == (id)9) {
                  [v18 setEnabled:0];
                }

                id v13 = v16;
              }

              id v13 = v16;
            }
          }
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
LABEL_25:

  sub_1000D1310();
}

uint64_t sub_1000D2C9C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

uint64_t sub_1000D2CE0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_logger;
  uint64_t v2 = sub_100109960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator____lazy_storage___pickerPresentationHandler));
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_1000D2DD8()
{
  sub_1000D2CE0();

  return swift_deallocClassInstance();
}

uint64_t sub_1000D2E30()
{
  return type metadata accessor for CanvasLayoutCoordinator();
}

uint64_t type metadata accessor for CanvasLayoutCoordinator()
{
  uint64_t result = qword_10015EB50;
  if (!qword_10015EB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000D2E84()
{
  uint64_t result = sub_100109960();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000D2F64()
{
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  sub_100109950();
  *(void *)(v0
            + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator____lazy_storage___pickerPresentationHandler) = 0;
  id v3 = (void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_dismissSuggestionSheet);
  *id v3 = nullsub_1;
  v3[1] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_lastReportedKeyboardHeight) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) = 0;
  return v0;
}

void sub_1000D30EC()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    id v4 = [Strong transitionCoordinator];

    if (v4)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) == 3)
      {
        unint64_t v5 = sub_100109940();
        os_log_type_t v6 = sub_10010A2F0();
        if (os_log_type_enabled(v5, v6))
        {
          unsigned int v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned int v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, v6, "pickerWillPresent - Animating bottom constraint to picker constant.", v7, 2u);
          swift_slowDealloc();
        }

        uint64_t v8 = swift_allocObject();
        swift_weakInit();
        id v16 = sub_1000D4614;
        uint64_t v17 = v8;
        os_log_type_t v12 = _NSConcreteStackBlock;
        uint64_t v13 = 1107296256;
        id v14 = sub_1000D34C8;
        id v15 = &unk_100144F88;
        os_log_type_t v9 = _Block_copy(&v12);
        swift_release();
        uint64_t v10 = swift_allocObject();
        swift_weakInit();
        id v16 = sub_1000D461C;
        uint64_t v17 = v10;
        os_log_type_t v12 = _NSConcreteStackBlock;
        uint64_t v13 = 1107296256;
        id v14 = sub_1000D34C8;
        id v15 = &unk_100144FB0;
        uint64_t v11 = _Block_copy(&v12);
        swift_release();
        [v4 animateAlongsideTransition:v9 completion:v11];
        _Block_release(v11);
        _Block_release(v9);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_1000D3360()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void **)(Strong + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarKeyboardConstraint);
    if (v1
      && (id v2 = *(void **)(Strong
                        + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint)) != 0)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 setActive:0];
      [v4 setActive:1];
      sub_1000D0D80();
      [v4 setConstant:-2.0 - v5];
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    os_log_type_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (v6)
    {
      id v7 = [v6 view];

      if (v7)
      {
        [v7 layoutIfNeeded];
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1000D34C8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1000D3528(void *a1)
{
  uint64_t result = (uint64_t)[a1 isCancelled];
  if ((result & 1) == 0)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      if ((*(unsigned char *)(result + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) & 0xFE) == 2)
      {
        uint64_t v2 = sub_100109940();
        os_log_type_t v3 = sub_10010A2F0();
        if (os_log_type_enabled(v2, v3))
        {
          id v4 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v4 = 0;
          _os_log_impl((void *)&_mh_execute_header, v2, v3, "pickerDidPresent", v4, 2u);
          swift_slowDealloc();
        }

        sub_1000D1310();
      }
      return swift_release();
    }
  }
  return result;
}

void sub_1000D3630()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v3 = Strong;
    id v4 = [Strong transitionCoordinator];

    if (v4)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) == 3)
      {
        double v5 = sub_100109940();
        os_log_type_t v6 = sub_10010A2F0();
        if (os_log_type_enabled(v5, v6))
        {
          id v7 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, v6, "pickerDismissGestureStarted", v7, 2u);
          swift_slowDealloc();
        }

        *(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) = 1;
        id v15 = (uint64_t (*)(void *))nullsub_1;
        uint64_t v16 = 0;
        uint64_t v11 = _NSConcreteStackBlock;
        uint64_t v12 = 1107296256;
        uint64_t v13 = sub_1000D34C8;
        id v14 = &unk_100144F10;
        uint64_t v8 = _Block_copy(&v11);
        uint64_t v9 = swift_allocObject();
        swift_weakInit();
        id v15 = sub_1000D460C;
        uint64_t v16 = v9;
        uint64_t v11 = _NSConcreteStackBlock;
        uint64_t v12 = 1107296256;
        uint64_t v13 = sub_1000D34C8;
        id v14 = &unk_100144F60;
        uint64_t v10 = _Block_copy(&v11);
        swift_release();
        [v4 animateAlongsideTransition:v8 completion:v10];
        _Block_release(v10);
        _Block_release(v8);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_1000D3888(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000D38F8([a1 isCancelled] ^ 1);
    return swift_release();
  }
  return result;
}

void sub_1000D38F8(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) == 3)
  {
    uint64_t v3 = v1;
    uint64_t v4 = OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_isTrackingPickerDismissGesture;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) == 1)
    {
      os_log_type_t v6 = sub_100109940();
      os_log_type_t v7 = sub_10010A2F0();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 67109120;
        sub_10010A730();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "pickerDismissGestureEnded didDismiss=%{BOOL}d", v8, 8u);
        swift_slowDealloc();
      }

      *(unsigned char *)(v3 + v4) = 0;
      if (a1)
      {
        *(unsigned char *)(v3 + v2) = 0;
        swift_unknownObjectWeakAssign();
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v10 = Strong;
          id v11 = [Strong items];
          if (v11)
          {
            uint64_t v12 = v11;
            sub_10001CB98(0, (unint64_t *)&qword_10015EEE8);
            unint64_t v13 = sub_100109F30();

            if (v13 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v14 = sub_10010AA80();
              swift_bridgeObjectRelease();
              if (v14) {
                goto LABEL_10;
              }
            }
            else
            {
              uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v14)
              {
LABEL_10:
                uint64_t v22 = v10;
                if (v14 < 1)
                {
                  __break(1u);
                  return;
                }
                for (uint64_t i = 0; i != v14; ++i)
                {
                  if ((v13 & 0xC000000000000001) != 0) {
                    id v17 = (id)sub_10010A920();
                  }
                  else {
                    id v17 = *(id *)(v13 + 8 * i + 32);
                  }
                  uint64_t v16 = v17;
                  id v18 = [v17 customView:v22];
                  if (v18)
                  {
                    id v19 = v18;
                    self;
                    uint64_t v20 = swift_dynamicCastObjCClass();
                    if (v20)
                    {
                      unint64_t v21 = (void *)v20;
                      id v19 = v19;
                      [v21 setSelected:0];
                      if ([v21 tag] == (id)9) {
                        [v21 setEnabled:0];
                      }

                      uint64_t v16 = v19;
                    }

                    uint64_t v16 = v19;
                  }
                }
                goto LABEL_26;
              }
            }

LABEL_26:
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
LABEL_27:
        sub_1000D10F0(0);
        sub_1000D1310();
      }
    }
  }
}

void sub_1000D3BE8(double a1, double a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = Strong;
    id v6 = [Strong presentingViewController];

    if (v6)
    {
      id v7 = [v6 view];

      if (!v7)
      {
        __break(1u);
        return;
      }
      id v20 = [v7 window];

      uint64_t v8 = v20;
      if (v20)
      {
        uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_toolbarBottomConstraint);
        if (!v9
          || *(unsigned char *)(v2 + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_focusedControl) != 3
          || *(unsigned char *)(v2
                      + OBJC_IVAR____TtC21JournalShareExtension23CanvasLayoutCoordinator_isTrackingPickerDismissGesture) != 1
          || (~*(void *)&a2 & 0x7FF0000000000000) == 0 && (*(void *)&a2 & 0xFFFFFFFFFFFFFLL) != 0)
        {
LABEL_17:

          return;
        }
        id v19 = v9;
        [v20 frame];
        double v11 = v10 - a2;
        sub_1000D0D80();
        if (v12 < v11) {
          double v11 = v12;
        }
        [v20 safeAreaInsets];
        if (v11 > v13) {
          double v14 = v11;
        }
        else {
          double v14 = v13;
        }
        [v19 constant];
        if (v15 == -v14)
        {

          uint64_t v8 = v19;
          goto LABEL_17;
        }
        uint64_t v16 = sub_100109940();
        os_log_type_t v17 = sub_10010A2C0();
        if (os_log_type_enabled(v16, v17))
        {
          id v18 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v18 = 134217984;
          sub_10010A730();
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "pickerFrameChanged %f", v18, 0xCu);
          swift_slowDealloc();
        }

        [v19 setConstant:-v14];
      }
    }
  }
}

uint64_t sub_1000D3F50(uint64_t a1, void *a2)
{
  swift_unownedRetainStrong();
  [a2 _currentPresentedViewFrame];
  sub_1000D3BE8(v3, v4);
  return swift_release();
}

uint64_t sub_1000D3FA8(uint64_t a1, uint64_t a2)
{
  sub_10010A050();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_1000D4594();
  if (v2) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_10010A8D0(66);
    v8._object = (void *)0x8000000100112670;
    v8._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    sub_100109E00(v8);
    v9._uint64_t countAndFlagsBits = sub_10010AED0();
    sub_100109E00(v9);
    swift_bridgeObjectRelease();
    v10._uint64_t countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    sub_100109E00(v10);
    uint64_t result = sub_10010AA60();
    __break(1u);
  }
  return result;
}

id sub_1000D41C8(void *a1)
{
  id result = [a1 selectedDetentIdentifier];
  if (result)
  {
    uint64_t v2 = result;
    swift_unownedRetainStrong();
    if (swift_unknownObjectWeakLoadStrong()
      && (sub_10001CB98(0, (unint64_t *)&unk_10015BAD0),
          sub_100004BD4(&qword_10015EEE0),
          (swift_dynamicCast() & 1) != 0))
    {
      uint64_t v3 = *((void *)&v6 + 1);
      if (*((void *)&v6 + 1))
      {
        uint64_t v4 = v7;
        sub_10000B718(&v5, *((uint64_t *)&v6 + 1));
        (*(void (**)(void *, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
        sub_10000B7B0((uint64_t)&v5);
LABEL_8:

        return (id)swift_release();
      }
    }
    else
    {
      uint64_t v7 = 0;
      long long v5 = 0u;
      long long v6 = 0u;
    }
    sub_10000B9CC((uint64_t)&v5, (uint64_t *)&unk_10015EED0);
    goto LABEL_8;
  }
  return result;
}

id sub_1000D4390()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PickerPresentationHandler();
  [super dealloc];
}

uint64_t type metadata accessor for PickerPresentationHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CanvasLayoutCoordinator.ControlType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D44C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasLayoutCoordinator.ControlType()
{
  return &type metadata for CanvasLayoutCoordinator.ControlType;
}

unint64_t sub_1000D4504()
{
  unint64_t result = qword_10015EEC8;
  if (!qword_10015EEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EEC8);
  }
  return result;
}

unint64_t sub_1000D4558(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_1000D4568()
{
  return sub_1000D3F50(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000D4584()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D4594()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000D45BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000D45CC()
{
  return swift_release();
}

uint64_t sub_1000D45D4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D460C(void *a1)
{
  return sub_1000D3888(a1);
}

void sub_1000D4614()
{
}

uint64_t sub_1000D461C(void *a1)
{
  return sub_1000D3528(a1);
}

void sub_1000D4624()
{
  sub_1000D2498(v0);
}

uint64_t sub_1000D462C()
{
  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1000D466C(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D47A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_10015F0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_1000D569C();
  sub_10010AE60();
  LOBYTE(v14) = 0;
  sub_10010ABC0();
  if (!v2)
  {
    uint64_t v9 = _s10VideoAssetC9VideoDataVMa(0);
    LOBYTE(v14) = 1;
    sub_100109460();
    sub_1000D562C(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v14) = 2;
    sub_10010ABC0();
    LOBYTE(v14) = 3;
    sub_10010ABE0();
    LOBYTE(v14) = 4;
    sub_10010ABE0();
    Swift::String v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_1000D562C(&qword_10015BE98, type metadata accessor for CGSize);
    sub_10010AC00();
    LOBYTE(v14) = 6;
    sub_10010ABC0();
    LOBYTE(v14) = 7;
    sub_10010ABC0();
    LOBYTE(v14) = 8;
    sub_10010ABC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000D4B0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100004BD4(&qword_10015F0D8);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10VideoAssetC9VideoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_10000B718(a1, a1[3]);
  sub_1000D569C();
  uint64_t v44 = v9;
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = sub_10010AB20();
  v11[1] = v17;
  sub_100109460();
  LOBYTE(v46) = 1;
  sub_1000D562C(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10010AB60();
  id v18 = (int *)v45;
  sub_10000B800(v13, (uint64_t)v11 + *(int *)(v45 + 20), (uint64_t *)&unk_10015CDE0);
  LOBYTE(v46) = 2;
  uint64_t v19 = sub_10010AB20();
  id v20 = (uint64_t *)((char *)v11 + v18[6]);
  *id v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = sub_10010AB40();
  uint64_t v23 = (char *)v11 + v18[7];
  *(void *)uint64_t v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = sub_10010AB40();
  id v26 = (char *)v11 + v18[8];
  *(void *)id v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_1000D562C(&qword_10015BE88, type metadata accessor for CGSize);
  sub_10010AB60();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = sub_10010AB20();
  id v31 = (uint64_t *)((char *)v11 + v18[10]);
  *id v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = sub_10010AB20();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = sub_10010AB20();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  uint64_t v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *uint64_t v40 = v37;
  v40[1] = v39;
  sub_1000D56F0((uint64_t)v11, v15);
  sub_10000B7B0(v12);
  return sub_1000D5754((uint64_t)v11);
}

unint64_t sub_1000D5130()
{
  return sub_1000D466C(*v0);
}

uint64_t sub_1000D5138(uint64_t a1)
{
  unint64_t v2 = sub_1000D569C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D5174(uint64_t a1)
{
  unint64_t v2 = sub_1000D569C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D51B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D4B0C(a1, a2);
}

uint64_t sub_1000D51C8(void *a1)
{
  return sub_1000D47A0(a1);
}

id sub_1000D51E0(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for VideoThumbnailCacheOperation());
  swift_bridgeObjectRetain();
  return sub_1000F780C(v6, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_1000D5270()
{
  return swift_release();
}

id sub_1000D5280()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10VideoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000D52C8()
{
  return _s10VideoAssetCMa(0);
}

uint64_t _s10VideoAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_10015EFD8);
}

uint64_t sub_1000D52F0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000D5334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D5348);
}

uint64_t sub_1000D5348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000D5408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D541C);
}

uint64_t sub_1000D541C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10VideoAssetC9VideoDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015F040);
}

void sub_1000D54E8()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000D559C()
{
  return sub_1000D562C(&qword_10015A3D8, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa);
}

uint64_t sub_1000D55E4()
{
  return sub_1000D562C(&qword_10015F098, (void (*)(uint64_t))_s10VideoAssetC9VideoDataVMa);
}

uint64_t sub_1000D562C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D5674()
{
  return swift_retain();
}

uint64_t sub_1000D5684(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VideoAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_1000D569C()
{
  unint64_t result = qword_10015F0E0;
  if (!qword_10015F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0E0);
  }
  return result;
}

uint64_t sub_1000D56F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VideoAssetC9VideoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D5754(uint64_t a1)
{
  uint64_t v2 = _s10VideoAssetC9VideoDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1000D57B0(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12, char *a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v125 = a8;
  uint64_t v124 = a7;
  uint64_t v131 = a6;
  uint64_t v122 = a5;
  uint64_t v121 = a4;
  id v133 = a3;
  uint64_t v132 = a2;
  uint64_t v115 = a18;
  sub_10000B800(a18, (uint64_t)v136, &qword_10015DCB0);
  double v119 = *(double *)v136;
  double v118 = *(double *)&v136[1];
  double v117 = *(double *)&v136[2];
  double v116 = *(double *)&v136[3];
  uint64_t v114 = a17;
  sub_10000B800(a17, (uint64_t)v135, &qword_10015DCB0);
  CGFloat v19 = *(double *)v135;
  CGFloat v20 = *(double *)&v135[1];
  CGFloat v21 = *(double *)&v135[2];
  CGFloat v22 = *(double *)&v135[3];
  uint64_t v113 = a16;
  sub_10000B800(a16, (uint64_t)v134, &qword_10015DCB0);
  CGFloat x = v134[0];
  CGFloat y = v134[1];
  CGFloat width = v134[2];
  CGFloat height = v134[3];
  uint64_t v123 = sub_100004BD4(&qword_10015A3C0);
  __chkstk_darwin(v123);
  uint64_t v126 = (uint64_t)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v28 - 8);
  uint64_t v130 = (uint64_t)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = _s10VideoAssetC9VideoDataVMa(0);
  __chkstk_darwin(v120);
  uint64_t v110 = (uint64_t *)((char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v128);
  uint64_t v32 = (char *)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1001091E0();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v112 = (char *)&v107 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1001094F0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v107 - v44;
  sub_1001094E0();
  long long v46 = (char *)objc_allocWithZone((Class)_s10VideoAssetCMa(0));
  *(void *)&v46[OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VideoAsset_metadata] = 0;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v45, v39);
  uint64_t v47 = (uint64_t)v43;
  uint64_t v48 = v37;
  uint64_t v49 = v36;
  uint64_t v50 = (char *)sub_10003B8A4(v47, 2, a1);
  char v51 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v127 = v39;
  v51(v45, v39);
  sub_1000248D8(v132, (uint64_t)v35, (uint64_t *)&unk_100159D40);
  int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v49);
  uint64_t v129 = v50;
  uint64_t v111 = v51;
  if (v52 == 1)
  {
    os_log_type_t v53 = v32;
    id v54 = v50;
    sub_10000B9CC((uint64_t)v35, (uint64_t *)&unk_100159D40);
  }
  else
  {
    double v55 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    char v56 = v112;
    v55(v112, v35, v49);
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v32, v56, v49);
    type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v108 = v50;
    sub_1001094E0();
    uint64_t v109 = v49;
    uint64_t v57 = sub_100109470();
    uint64_t v59 = v58;
    v51(v45, v127);
    type metadata accessor for AssetAttachment(0);
    uint64_t v60 = v48;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = 0;
    os_log_type_t v53 = v32;
    sub_1000D6390((uint64_t)v32, v61 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    char v62 = (uint64_t *)(v61 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
    uint64_t *v62 = v57;
    v62[1] = v59;
    int v63 = &v108[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    sub_100109F10();
    if (*(void *)((*(void *)v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v63 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_100109F70();
    sub_100109FA0();
    sub_100109F50();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v112, v109);
    uint64_t v50 = v129;
  }
  uint64_t v64 = v111;
  if (v133)
  {
    id v65 = v133;
    *(void *)os_log_type_t v53 = v133;
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v50;
    id v67 = v65;
    sub_1001094E0();
    uint64_t v68 = sub_100109470();
    uint64_t v70 = v69;
    v64(v45, v127);
    type metadata accessor for AssetAttachment(0);
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = 0;
    sub_1000D6390((uint64_t)v53, v71 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    uint64_t v72 = (uint64_t *)(v71 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_fileNameID);
    *uint64_t v72 = v68;
    v72[1] = v70;
    char v73 = &v66[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    sub_100109F10();
    if (*(void *)((*(void *)v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v73 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_100109F70();
    sub_100109FA0();
    sub_100109F50();
    swift_endAccess();
  }
  sub_1000248D8(v131, v130, (uint64_t *)&unk_10015CDE0);
  sub_10000B800(v113, (uint64_t)v139, &qword_10015DCB0);
  if (v139[32] == 1)
  {
    CGFloat x = CGRectZero.origin.x;
    CGFloat y = CGRectZero.origin.y;
    CGFloat width = CGRectZero.size.width;
    CGFloat height = CGRectZero.size.height;
  }
  v140.origin.CGFloat x = x;
  v140.origin.CGFloat y = y;
  v140.size.CGFloat width = width;
  v140.size.CGFloat height = height;
  id v74 = NSStringFromCGRect(v140);
  uint64_t v128 = sub_100109D30();
  uint64_t v127 = v75;

  sub_10000B800(v114, (uint64_t)v138, &qword_10015DCB0);
  if (v138[32] == 1)
  {
    CGFloat v19 = CGRectZero.origin.x;
    CGFloat v20 = CGRectZero.origin.y;
    CGFloat v21 = CGRectZero.size.width;
    CGFloat v22 = CGRectZero.size.height;
  }
  LODWORD(v114) = a15;
  uint64_t v113 = a14;
  uint64_t v112 = a13;
  LODWORD(v111) = a12;
  v141.origin.CGFloat x = v19;
  v141.origin.CGFloat y = v20;
  v141.size.CGFloat width = v21;
  v141.size.CGFloat height = v22;
  char v76 = NSStringFromCGRect(v141);
  uint64_t v77 = sub_100109D30();
  uint64_t v79 = v78;

  sub_10000B800(v115, (uint64_t)v137, &qword_10015DCB0);
  CGFloat v80 = v119;
  CGFloat v81 = v118;
  CGFloat v82 = v117;
  CGFloat v83 = v116;
  if (v137[32] == 1)
  {
    CGFloat v80 = CGRectZero.origin.x;
    CGFloat v81 = CGRectZero.origin.y;
    CGFloat v82 = CGRectZero.size.width;
    CGFloat v83 = CGRectZero.size.height;
  }
  uint64_t v84 = NSStringFromCGRect(*(CGRect *)&v80);
  uint64_t v85 = sub_100109D30();
  uint64_t v87 = v86;

  sub_10000B9CC(v131, (uint64_t *)&unk_10015CDE0);
  sub_10000B9CC(v132, (uint64_t *)&unk_100159D40);
  uint64_t v88 = (uint64_t)v110;
  uint64_t v89 = v122;
  void *v110 = v121;
  *(void *)(v88 + 8) = v89;
  Swift::String v90 = (int *)v120;
  sub_10000B800(v130, v88 + *(int *)(v120 + 20), (uint64_t *)&unk_10015CDE0);
  int64_t v91 = (void *)(v88 + v90[6]);
  uint64_t v92 = v125;
  void *v91 = v124;
  v91[1] = v92;
  uint64_t v93 = v88 + v90[7];
  *(void *)uint64_t v93 = a9;
  *(unsigned char *)(v93 + 8) = a10 & 1;
  uint64_t v94 = v88 + v90[8];
  *(void *)uint64_t v94 = a11;
  *(unsigned char *)(v94 + 8) = v111 & 1;
  uint64_t v95 = v88 + v90[9];
  uint64_t v96 = v113;
  *(void *)uint64_t v95 = v112;
  *(void *)(v95 + 8) = v96;
  *(unsigned char *)(v95 + 16) = v114 & 1;
  uint64_t v97 = (uint64_t *)(v88 + v90[10]);
  uint64_t v98 = v127;
  *uint64_t v97 = v128;
  v97[1] = v98;
  uint64_t v99 = (uint64_t *)(v88 + v90[11]);
  *uint64_t v99 = v77;
  v99[1] = v79;
  long long v100 = (uint64_t *)(v88 + v90[12]);
  uint64_t *v100 = v85;
  v100[1] = v87;
  uint64_t v101 = v126;
  sub_1000D6390(v88, v126, _s10VideoAssetC9VideoDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100004BD4(&qword_10015F0F0);
  uint64_t v102 = swift_allocObject();
  uint64_t v103 = v102 + *(void *)(*(void *)v102 + 104);
  uint64_t v104 = sub_100004BD4(&qword_10015A3D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v103, 1, 1, v104);
  *(_OWORD *)(v102 + *(void *)(*(void *)v102 + 112)) = xmmword_100121E30;
  sub_10000B800(v101, v102 + *(void *)(*(void *)v102 + 120), &qword_10015A3C0);
  uint64_t v105 = v129;
  *(void *)&v129[OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VideoAsset_metadata] = v102;

  swift_release();
  return v105;
}

uint64_t sub_1000D6390(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *_s10VideoAssetC9VideoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D64C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10VideoAssetC9VideoDataV10CodingKeysOMa()
{
  return &_s10VideoAssetC9VideoDataV10CodingKeysON;
}

unint64_t sub_1000D6500()
{
  unint64_t result = qword_10015F0F8;
  if (!qword_10015F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0F8);
  }
  return result;
}

unint64_t sub_1000D6558()
{
  unint64_t result = qword_10015F100;
  if (!qword_10015F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F100);
  }
  return result;
}

unint64_t sub_1000D65B0()
{
  unint64_t result = qword_10015F108;
  if (!qword_10015F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F108);
  }
  return result;
}

uint64_t _s10ReflectionV14ReflectionTypeOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s10ReflectionV14ReflectionTypeOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1000D6654(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000D6670(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *_s10ReflectionV14ReflectionTypeOMa()
{
  return &_s10ReflectionV14ReflectionTypeON;
}

uint64_t sub_1000D66A0()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_10010AA80();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  _s15ReflectionAssetCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v6 = (id)sub_10010A920();
    }
    else {
      id v6 = *(id *)(v2 + 8 * v5);
    }
    uint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if ([v6 isKindOfClass:ObjCClassFromMetadata]) {
      break;
    }

    ++v5;
    if (v8 == v3) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

uint64_t sub_1000D6800(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v7 = a1;
    switch(a1)
    {
      case 1:
        unint64_t v2 = (objc_class *)[self mainBundle];
        v9._uint64_t countAndFlagsBits = 0x80000001001128C0;
        v3._uint64_t countAndFlagsBits = 0x6D6F64736977;
        v3._object = (void *)0xE600000000000000;
        goto LABEL_3;
      case 2:
        unint64_t v2 = (objc_class *)[self mainBundle];
        v9._uint64_t countAndFlagsBits = 0x8000000100112880;
        v3._uint64_t countAndFlagsBits = 0x6475746974617267;
        v3._object = (void *)0xE900000000000065;
        goto LABEL_12;
      case 3:
        unint64_t v2 = (objc_class *)[self mainBundle];
        v9._uint64_t countAndFlagsBits = 0x8000000100112840;
        v3._uint64_t countAndFlagsBits = 0x7373656E646E696BLL;
        v3._object = (void *)0xE800000000000000;
        goto LABEL_12;
      case 4:
        unint64_t v2 = (objc_class *)[self mainBundle];
        v9._uint64_t countAndFlagsBits = 0x8000000100112800;
        v3._uint64_t countAndFlagsBits = 0x65736F70727570;
        v3._object = (void *)0xE700000000000000;
        goto LABEL_12;
      case 5:
        unint64_t v2 = (objc_class *)[self mainBundle];
        v9._uint64_t countAndFlagsBits = 0x80000001001127C0;
        v3._uint64_t countAndFlagsBits = 0x6E65696C69736572;
        v3._object = (void *)25955;
        goto LABEL_11;
      case 6:
        unint64_t v2 = (objc_class *)[self mainBundle];
        v9._uint64_t countAndFlagsBits = 0x8000000100112780;
        v3._uint64_t countAndFlagsBits = 0x6976697461657263;
        v3._object = (void *)31092;
LABEL_11:
        v3._object = (void *)((uint64_t)v3._object & 0xFFFFFFFFFFFFLL | 0xEA00000000000000);
LABEL_12:
        v4.value._uint64_t countAndFlagsBits = 0;
        v4.value._object = 0;
        v5.super.Class isa = v2;
        v6._uint64_t countAndFlagsBits = 0;
        v6._object = (void *)0xE000000000000000;
        goto LABEL_13;
      default:
        return v7;
    }
  }
  unint64_t v2 = (objc_class *)[self mainBundle];
  v9._uint64_t countAndFlagsBits = 0x8000000100112740;
  v3._uint64_t countAndFlagsBits = 0x726568746FLL;
  v3._object = (void *)0xE500000000000000;
LABEL_3:
  v4.value._uint64_t countAndFlagsBits = 0;
  v4.value._object = 0;
  v5.super.Class isa = v2;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
LABEL_13:
  uint64_t v7 = sub_100108F60(v3, v4, v5, v6, v9);

  return v7;
}

uint64_t sub_1000D6B28()
{
  return sub_1000D6800(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1000D6B34(void *a1)
{
  sub_1000F3030(&v10);
  unint64_t v2 = v13;
  if (v13 >> 60 == 11)
  {
    id v3 = objc_allocWithZone((Class)NSAttributedString);
    NSString v4 = sub_100109CF0();
    [v3 initWithString:v4];

    return 0;
  }
  else
  {
    uint64_t v6 = v10;
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    if (v11) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = v10;
    }
    if (v13 >> 60 == 15)
    {
    }
    else
    {
      sub_1000084E0(v12, v13);
      sub_100081C44(v8, v2);

      sub_10002EED0(v6, v7, v8, v2);
    }
    sub_10002EED0(v6, v7, v8, v2);
  }
  return v5;
}

uint64_t _s10ReflectionVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void _s10ReflectionVwxx(uint64_t a1)
{
}

uint64_t _s10ReflectionVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  id v4 = *(void **)(a1 + 16);
  uint64_t v5 = (void *)a2[2];
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  return a1;
}

uint64_t _s10ReflectionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t _s10ReflectionVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s10ReflectionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s10ReflectionVMa()
{
  return &_s10ReflectionVN;
}

double sub_1000D6E04(char a1)
{
  unint64_t v2 = self;
  id v3 = [v2 mainScreen];
  [v3 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v29.origin.CGFloat x = v5;
  v29.origin.CGFloat y = v7;
  v29.size.CGFloat width = v9;
  v29.size.CGFloat height = v11;
  double Width = CGRectGetWidth(v29);
  if (qword_100158968 != -1) {
    swift_once();
  }
  double v13 = Width - (*(double *)&qword_10016DD60 + *(double *)&qword_10016DD60);
  if (qword_100158998 != -1) {
    swift_once();
  }
  double v14 = *(double *)&qword_10016DD90;
  double v15 = v13 - *(double *)&qword_10016DD90;
  double v28 = v15 * 0.5;
  double v16 = *(double *)&qword_10016DD90 * 0.5;
  id v17 = [v2 mainScreen];
  [v17 bounds];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;

  v30.origin.CGFloat x = v19;
  v30.origin.CGFloat y = v21;
  v30.size.CGFloat width = v23;
  v30.size.CGFloat height = v25;
  double v26 = CGRectGetWidth(v30);
  if (qword_100158978 != -1) {
    swift_once();
  }
  switch(a1)
  {
    case 2:
      double v15 = v28 - v14;
      break;
    case 3:
      double v15 = v28 - v14;
      break;
    case 4:
      double v15 = v15 * 0.25 - v16;
      break;
    case 5:
      double v15 = v26 - (*(double *)&qword_10016DD70 + *(double *)&qword_10016DD70);
      break;
    default:
      return v15;
  }
  return v15;
}

uint64_t sub_1000D7054()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >> 60 == 15) {
    return 0;
  }
  uint64_t v2 = *(void *)v0;
  sub_100006F28(*(void *)v0, *(void *)(v0 + 8));
  unint64_t v3 = sub_1000D7290();
  if (!v3)
  {
    sub_100008508(v2, v1);
    return 0;
  }
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_5;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    double v8 = _swiftEmptyArrayStorage;
    sub_100008508(v2, v1);
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_10010AA80();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_5:
  if (v5 >= 1)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        sub_10010A920();
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_100109F10();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_100109F70();
          }
          sub_100109FA0();
          sub_100109F50();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      unint64_t v9 = v4 + 32;
      do
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRetain();
          sub_100109F10();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_100109F70();
          }
          sub_100109FA0();
          sub_100109F50();
        }
        v9 += 8;
        --v5;
      }
      while (v5);
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D7290()
{
  sub_10001CB98(0, &qword_10015F2F8);
  sub_10001CB98(0, (unint64_t *)&unk_10015F300);
  sub_10001CB98(0, &qword_10015C8F8);
  unint64_t v0 = sub_10010A370();
  unint64_t v1 = v0;
  if (v0)
  {
    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_100004BD4(&qword_10015CE18);
      uint64_t v3 = sub_10010AA70();
      swift_bridgeObjectRelease_n();
      return v3;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10010ACB0();
      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

unint64_t sub_1000D75C0(char a1)
{
  unint64_t result = 0x7461446574756F72;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 3:
      unint64_t result = 0x6D69547472617473;
      break;
    case 4:
      unint64_t result = 0x656D6954646E65;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
    case 7:
      unint64_t result = 0x736569726F6C6163;
      break;
    case 8:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D76DC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015F2E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000DAC24();
  sub_10010AE60();
  long long v10 = *v3;
  char v11 = 0;
  sub_100045CC0();
  sub_10010AC00();
  if (!v2)
  {
    LOBYTE(v10) = 1;
    sub_10010ABC0();
    LOBYTE(v10) = 2;
    sub_10010ABE0();
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    LOBYTE(v10) = 3;
    sub_100109460();
    sub_1000DAB14(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    LOBYTE(v10) = 4;
    sub_10010AC00();
    LOBYTE(v10) = 5;
    sub_10010ABE0();
    LOBYTE(v10) = 6;
    sub_10010ABE0();
    LOBYTE(v10) = 7;
    sub_10010ABC0();
    LOBYTE(v10) = 8;
    sub_10010ABC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000D7A0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v40 - v8;
  uint64_t v43 = sub_100004BD4(&qword_10015F2C0);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  __chkstk_darwin(v44);
  double v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v45 = a1;
  sub_10000B718(a1, v14);
  sub_1000DAC24();
  double v15 = v11;
  sub_10010AE50();
  if (v2) {
    return sub_10000B7B0((uint64_t)v45);
  }
  uint64_t v16 = (uint64_t)v9;
  uint64_t v17 = (uint64_t)v7;
  uint64_t v18 = v41;
  uint64_t v19 = v42;
  char v47 = 0;
  sub_100045AA0();
  uint64_t v20 = v43;
  CGFloat v21 = v15;
  sub_10010AB60();
  *(_OWORD *)double v13 = v46;
  LOBYTE(v46) = 1;
  *((void *)v13 + 2) = sub_10010AB20();
  *((void *)v13 + 3) = v22;
  LOBYTE(v46) = 2;
  *((void *)v13 + 4) = sub_10010AB40();
  v13[40] = v23 & 1;
  uint64_t v24 = sub_100109460();
  LOBYTE(v46) = 3;
  sub_1000DAB14(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v40 = v24;
  sub_10010AB60();
  sub_10000B800(v16, (uint64_t)&v13[v44[7]], (uint64_t *)&unk_10015CDE0);
  LOBYTE(v46) = 4;
  sub_10010AB60();
  CGFloat v25 = v44;
  sub_10000B800(v17, (uint64_t)&v13[v44[8]], (uint64_t *)&unk_10015CDE0);
  LOBYTE(v46) = 5;
  uint64_t v26 = sub_10010AB40();
  uint64_t v27 = &v13[v25[9]];
  *(void *)uint64_t v27 = v26;
  v27[8] = v28 & 1;
  LOBYTE(v46) = 6;
  uint64_t v29 = sub_10010AB40();
  CGRect v30 = &v13[v25[10]];
  *(void *)CGRect v30 = v29;
  v30[8] = v31 & 1;
  LOBYTE(v46) = 7;
  uint64_t v32 = sub_10010AB20();
  uint64_t v33 = (uint64_t *)&v13[v25[11]];
  *uint64_t v33 = v32;
  v33[1] = v34;
  LOBYTE(v46) = 8;
  uint64_t v35 = sub_10010AB20();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v20);
  uint64_t v38 = (uint64_t *)&v13[v44[12]];
  *uint64_t v38 = v35;
  v38[1] = v37;
  sub_1000DABC0((uint64_t)v13, v19);
  sub_10000B7B0((uint64_t)v45);
  return sub_100089A58((uint64_t)v13);
}

unint64_t sub_1000D7FCC()
{
  return sub_1000D75C0(*v0);
}

uint64_t sub_1000D7FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000DAE84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000D7FFC(uint64_t a1)
{
  unint64_t v2 = sub_1000DAC24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D8038(uint64_t a1)
{
  unint64_t v2 = sub_1000DAC24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D8074@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000D7A0C(a1, a2);
}

uint64_t sub_1000D808C(void *a1)
{
  return sub_1000D76DC(a1);
}

id sub_1000D80A4(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v24 = a4;
  int v11 = a3 & 1;
  uint64_t v12 = sub_100004BD4(&qword_10015A218);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_allocWithZone((Class)type metadata accessor for WorkoutRouteThumbnailCacheOperation());
  id v16 = v6;
  swift_bridgeObjectRetain();
  id v17 = a6;
  id v18 = v15;
  sub_1000F2E08((uint64_t)v14);
  sub_10000B800((uint64_t)v14, (uint64_t)v18 + qword_10016DEF8, &qword_10015A218);

  uint64_t v19 = (void *)sub_10010A440();
  uint64_t v20 = v16;
  id v21 = sub_1000F780C(v20, a1, a2, v11, v24, a5, v19);

  return v21;
}

uint64_t sub_1000D8204(uint64_t a1, char a2)
{
  return sub_10007AEE8(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id, a1, 2, 0, 0, 1, a2);
}

uint64_t sub_1000D8230()
{
  return swift_release();
}

id sub_1000D8240()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s17WorkoutRouteAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000D8288()
{
  return _s17WorkoutRouteAssetCMa(0);
}

uint64_t _s17WorkoutRouteAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015F138);
}

uint64_t sub_1000D82B0()
{
  return swift_updateClassMetadata2();
}

_OWORD *sub_1000D82F4(_OWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_100006F28(*(void *)a2, *(void *)(a2 + 8));
      *(void *)uint64_t v4 = v9;
      *((void *)v4 + 1) = v7;
    }
    uint64_t v10 = *(void *)(a2 + 24);
    *((void *)v4 + 2) = *(void *)(a2 + 16);
    *((void *)v4 + 3) = v10;
    *((void *)v4 + 4) = *(void *)(a2 + 32);
    *((unsigned char *)v4 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (const void *)(a2 + v11);
    uint64_t v14 = sub_100109460();
    uint64_t v15 = *(void *)(v14 - 8);
    id v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (const void *)(a2 + v18);
    if (v16((const void *)(a2 + v18), 1, v14))
    {
      uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = *(unsigned char *)(v25 + 8);
    uint64_t v26 = (char *)v4 + v23;
    uint64_t v27 = a2 + v23;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = *(unsigned char *)(v27 + 8);
    uint64_t v28 = a3[11];
    uint64_t v29 = a3[12];
    CGRect v30 = (void *)((char *)v4 + v28);
    char v31 = (void *)(a2 + v28);
    uint64_t v32 = v31[1];
    *CGRect v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (void *)((char *)v4 + v29);
    uint64_t v34 = (void *)(a2 + v29);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000D85B8(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_100007084(*a1, v4);
  }
  swift_bridgeObjectRelease();
  int v5 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_100109460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (char *)a1 + *(int *)(a2 + 32);
  if (!v8(v9, 1, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D86FC(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_100006F28(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100109460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  if (v14((char *)a2 + v16, 1, v12))
  {
    uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = (uint64_t)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = (uint64_t)a2 + v21;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (uint64_t *)((char *)a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  char v31 = (void *)(a1 + v27);
  uint64_t v32 = (uint64_t *)((char *)a2 + v27);
  uint64_t v33 = v32[1];
  *char v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000D8970(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_100006F28(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_100069AD4(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)a2;
  sub_100006F28(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v6;
  sub_100007084(v9, v10);
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_100109460();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_13:
    uint64_t v20 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_14:
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v17((void *)(a1 + v21), 1, v15);
  int v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v22, v23, v15);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_19;
  }
  if (v25)
  {
LABEL_19:
    uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v22, v23, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_20:
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000D8D20(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  return a1;
}

uint64_t sub_1000D8F40(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_100069AD4(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_100007084(v8, v6);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_100109460();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_11:
    uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_12:
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  int v22 = v15((void *)(a1 + v19), 1, v13);
  int v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v20, v21, v13);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v20, v13);
    goto LABEL_17;
  }
  if (v23)
  {
LABEL_17:
    uint64_t v24 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v20, v21, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
LABEL_18:
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000D928C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D92A0);
}

uint64_t sub_1000D92A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000D9360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D9374);
}

uint64_t sub_1000D9374(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_10015F1A8);
}

void sub_1000D9440()
{
  sub_100012D38();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000D94FC()
{
  return swift_retain();
}

uint64_t sub_1000D950C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata) = a1;
  return swift_release();
}

void sub_1000D9524()
{
  uint64_t v1 = sub_100109CE0();
  __chkstk_darwin(v1 - 8);
  Swift::Int v137 = (char *)v118 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100109520();
  __chkstk_darwin(v3 - 8);
  uint64_t v138 = (char *)v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015F250);
  __chkstk_darwin(v5 - 8);
  uint64_t v132 = (char *)v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015A198);
  uint64_t v130 = *(void *)(v7 - 8);
  uint64_t v131 = v7;
  __chkstk_darwin(v7);
  uint64_t v127 = (char *)v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100004BD4((uint64_t *)&unk_10015F260);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v123 = (char *)v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4(&qword_10015A1A0);
  uint64_t v128 = *(void *)(v10 - 8);
  uint64_t v129 = v10;
  __chkstk_darwin(v10);
  uint64_t v124 = (char *)v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100004BD4((uint64_t *)&unk_10015F270);
  uint64_t v141 = *(void *)(v139 - 8);
  uint64_t v12 = __chkstk_darwin(v139);
  uint64_t v134 = (char *)v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  CGRect v140 = (char *)v118 - v14;
  uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v135 = (uint64_t)v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v136 = (char *)v118 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v118 - v20;
  uint64_t v22 = sub_100109880();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004BD4(&qword_10015A218);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)v118 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (int *)_s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v30 = *((void *)v29 - 1);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)v118 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v142 = (uint64_t)v118 - v34;
  uint64_t v133 = v0;
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v30 + 56))(v28, 1, 1, v29);
    goto LABEL_6;
  }
  swift_retain();
  sub_100025AD8((uint64_t)v28);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29) == 1)
  {
LABEL_6:
    sub_10000B9CC((uint64_t)v28, &qword_10015A218);
    return;
  }
  uint64_t v35 = v142;
  sub_1000DAB5C((uint64_t)v28, v142);
  sub_1001097F0();
  id v36 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class isa = sub_1001097B0().super.isa;
  id v38 = [v36 initWithContentType:isa];

  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v39 = *(void *)(v35 + 16);
  if (!*(void *)(v35 + 24))
  {
    uint64_t v40 = (objc_class *)[self mainBundle];
    v117._uint64_t countAndFlagsBits = 0x800000010010DDC0;
    v144._uint64_t countAndFlagsBits = 0x74756F6B726F57;
    v144._object = (void *)0xE700000000000000;
    v145.value._uint64_t countAndFlagsBits = v39;
    v145.value._object = 0;
    v41.super.Class isa = v40;
    v146._uint64_t countAndFlagsBits = 0;
    v146._object = (void *)0xE000000000000000;
    sub_100108F60(v144, v145, v41, v146, v117);
  }
  uint64_t v42 = v139;
  swift_bridgeObjectRetain();
  NSString v43 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v38 setDisplayName:v43];

  uint64_t v119 = v142 + v29[7];
  sub_10006BBA8(v119, (uint64_t)v21);
  uint64_t v44 = sub_100109460();
  uint64_t v45 = *(void *)(v44 - 8);
  long long v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v118[1] = v45 + 48;
  v118[0] = v46;
  Class v47 = 0;
  if (v46(v21, 1, v44) != 1)
  {
    Class v47 = sub_1001093D0().super.isa;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v44);
  }
  uint64_t v120 = v45;
  uint64_t v121 = v44;
  [v38 setTimestamp:v47];

  id v48 = [objc_allocWithZone((Class)FIUIFormattingManager) init];
  uint64_t v49 = (uint64_t *)(v142 + v29[12]);
  uint64_t v50 = v49[1];
  if (v50)
  {
    uint64_t v51 = *v49;
    swift_bridgeObjectRetain();
    int v52 = sub_10009E5BC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v54 = *((void *)v52 + 2);
    unint64_t v53 = *((void *)v52 + 3);
    if (v54 >= v53 >> 1) {
      int v52 = sub_10009E5BC((char *)(v53 > 1), v54 + 1, 1, v52);
    }
    *((void *)v52 + 2) = v54 + 1;
    double v55 = &v52[16 * v54];
    *((void *)v55 + 4) = v51;
    *((void *)v55 + 5) = v50;
    uint64_t v42 = v139;
  }
  else
  {
    int v52 = (char *)_swiftEmptyArrayStorage;
  }
  double v56 = *(double *)(v142 + 32);
  int v57 = *(unsigned __int8 *)(v142 + 40);
  sub_1000DABC0(v142, (uint64_t)v33);
  if (v57 == 1) {
    double v56 = sub_1000DA5A8((uint64_t)v33);
  }
  sub_100089A58((uint64_t)v33);
  id v58 = [v48 stringWithDuration:2 durationFormat:v56];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = sub_100109D30();
    uint64_t v62 = v61;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v52 = sub_10009E5BC(0, *((void *)v52 + 2) + 1, 1, v52);
    }
    unint64_t v64 = *((void *)v52 + 2);
    unint64_t v63 = *((void *)v52 + 3);
    if (v64 >= v63 >> 1) {
      int v52 = sub_10009E5BC((char *)(v63 > 1), v64 + 1, 1, v52);
    }
    *((void *)v52 + 2) = v64 + 1;
    id v65 = &v52[16 * v64];
    *((void *)v65 + 4) = v60;
    *((void *)v65 + 5) = v62;
  }
  uint64_t v66 = v142 + v29[9];
  char v67 = *(unsigned char *)(v66 + 8);
  id v122 = v48;
  if ((v67 & 1) == 0)
  {
    double v69 = *(double *)v66;
    id v70 = [objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierHeartRate];
    if (v70)
    {
      uint64_t v71 = v70;
      id v72 = [v70 canonicalUnit];

      if (v72)
      {
        id v73 = [self quantityWithUnit:v72 doubleValue:v69 / 60.0];

        id v74 = [v48 localizedStringWithHeartRate:v73 unitStyle:1];
        if (v74)
        {
          sub_100109D30();

          uint64_t v75 = sub_100109D80();
          uint64_t v77 = v76;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v52 = sub_10009E5BC(0, *((void *)v52 + 2) + 1, 1, v52);
          }
          unint64_t v79 = *((void *)v52 + 2);
          unint64_t v78 = *((void *)v52 + 3);
          if (v79 >= v78 >> 1) {
            int v52 = sub_10009E5BC((char *)(v78 > 1), v79 + 1, 1, v52);
          }
          uint64_t v68 = v42;
          *((void *)v52 + 2) = v79 + 1;
          CGFloat v80 = &v52[16 * v79];
          *((void *)v80 + 4) = v75;
          *((void *)v80 + 5) = v77;
          goto LABEL_33;
        }
LABEL_50:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v68 = v42;
LABEL_33:
  uint64_t v81 = v142;
  id v82 = [self kilocalories];
  sub_10001CB98(0, (unint64_t *)&qword_10015F280);
  CGFloat v83 = v140;
  sub_100108D70();
  uint64_t v84 = (uint64_t *)(v81 + v29[11]);
  uint64_t v85 = *v84;
  uint64_t v86 = v84[1];
  uint64_t v87 = v141;
  uint64_t v88 = v134;
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v134, v83, v68);
  if (v86)
  {
    uint64_t v89 = *(void (**)(char *, uint64_t))(v87 + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    Swift::String v90 = v123;
    sub_100108D90();
    int64_t v91 = v127;
    sub_100109000();
    sub_100109500();
    sub_10002E58C();
    uint64_t v92 = (uint64_t)v132;
    sub_100108FD0();
    uint64_t v93 = sub_100004BD4((uint64_t *)&unk_10015F290);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 0, 1, v93);
    uint64_t v139 = (uint64_t)v38;
    uint64_t v94 = v124;
    sub_100108CE0();
    sub_10000B9CC(v92, (uint64_t *)&unk_10015F250);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v91, v131);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v90, v126);
    sub_10002E5E0((unint64_t *)&qword_10015A1B0, &qword_10015A1A0);
    uint64_t v95 = v129;
    sub_100108DA0();
    uint64_t v96 = v94;
    id v38 = (id)v139;
    (*(void (**)(char *, uint64_t))(v128 + 8))(v96, v95);
    uint64_t v85 = sub_100109D80();
    uint64_t v86 = v97;
    swift_bridgeObjectRelease();
    uint64_t v89 = *(void (**)(char *, uint64_t))(v87 + 8);
  }
  v89(v88, v68);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v52 = sub_10009E5BC(0, *((void *)v52 + 2) + 1, 1, v52);
  }
  unint64_t v99 = *((void *)v52 + 2);
  unint64_t v98 = *((void *)v52 + 3);
  if (v99 >= v98 >> 1) {
    int v52 = sub_10009E5BC((char *)(v98 > 1), v99 + 1, 1, v52);
  }
  *((void *)v52 + 2) = v99 + 1;
  long long v100 = &v52[16 * v99];
  *((void *)v100 + 4) = v85;
  *((void *)v100 + 5) = v86;
  uint64_t v143 = v52;
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_10002E5E0((unint64_t *)&qword_10015A188, (uint64_t *)&unk_10015F2A0);
  sub_100109C30();
  swift_bridgeObjectRelease();
  NSString v101 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v38 setContentDescription:v101];

  uint64_t v102 = v135;
  sub_10006BBA8(v119, v135);
  uint64_t v103 = v121;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118[0])(v102, 1, v121) == 1)
  {
    uint64_t v104 = *(void **)(v133 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    uint64_t v105 = v136;
    uint64_t v106 = v120;
    if (v104 && (id v107 = [v104 entry]) != 0)
    {
      uint64_t v108 = v107;
      sub_100072EE4(v105);

      uint64_t v109 = 0;
    }
    else
    {
      uint64_t v109 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56))(v105, v109, 1, v103);
    sub_10000B9CC(v102, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    uint64_t v110 = v120;
    uint64_t v105 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v120 + 32))(v136, v102, v103);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v105, 0, 1, v103);
  }
  sub_100109C80();
  sub_100109510();
  uint64_t v111 = sub_100109D60();
  uint64_t v113 = v112;
  sub_100004BD4((uint64_t *)&unk_10015F2B0);
  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = xmmword_100122230;
  *(void *)(v114 + 32) = sub_100084A54(v111, v113, (uint64_t)v105);
  *(void *)(v114 + 40) = v115;
  Class v116 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v38 setAlternateNames:v116];

  swift_bridgeObjectRelease();
  sub_10000B9CC((uint64_t)v105, (uint64_t *)&unk_10015CDE0);
  v89(v140, v68);
  sub_100089A58(v142);
}

double sub_1000DA5A8(uint64_t a1)
{
  uint64_t v2 = sub_1001095C0();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2);
  uint64_t v31 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100108F10();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_100109460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  sub_10006BBA8(a1 + *(int *)(v19 + 28), (uint64_t)v11);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v20(v11, 1, v12) == 1)
  {
    sub_100109450();
    sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  }
  sub_10006BBA8(a1 + *(int *)(v19 + 32), (uint64_t)v9);
  if (v20(v9, 1, v12) == 1)
  {
    sub_100109450();
    sub_10000B9CC((uint64_t)v9, (uint64_t *)&unk_10015CDE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v9, v12);
  }
  uint64_t v21 = v31;
  sub_1001095A0();
  sub_100004BD4(&qword_10015A1B8);
  uint64_t v22 = sub_1001095B0();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100122230;
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, enum case for Calendar.Component.second(_:), v22);
  sub_10002E234(v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v26 = v32;
  sub_100109560();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v36);
  uint64_t v27 = sub_100108EE0();
  LOBYTE(v21) = v28;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v34);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v16, v12);
  v29(v18, v12);
  double result = (double)v27;
  if (v21) {
    return 0.0;
  }
  return result;
}

void sub_1000DAA60()
{
}

uint64_t sub_1000DAA84()
{
  return sub_1000DAB14(&qword_10015A220, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
}

uint64_t sub_1000DAACC()
{
  return sub_1000DAB14(&qword_10015F210, (void (*)(uint64_t))_s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
}

uint64_t sub_1000DAB14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DAB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000DAC24()
{
  unint64_t result = qword_10015F2C8;
  if (!qword_10015F2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F2C8);
  }
  return result;
}

unsigned char *_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DAD44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysOMa()
{
  return &_s17WorkoutRouteAssetC16WorkoutRouteDataV10CodingKeysON;
}

unint64_t sub_1000DAD80()
{
  unint64_t result = qword_10015F310;
  if (!qword_10015F310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F310);
  }
  return result;
}

unint64_t sub_1000DADD8()
{
  unint64_t result = qword_10015F318;
  if (!qword_10015F318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F318);
  }
  return result;
}

unint64_t sub_1000DAE30()
{
  unint64_t result = qword_10015F320;
  if (!qword_10015F320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F320);
  }
  return result;
}

uint64_t sub_1000DAE84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446574756F72 && a2 == 0xE900000000000061;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010010DE10 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xED0000746E727542 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736569726F6C6163 && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

id sub_1000DB240()
{
  BOOL v2 = v0;
  id result = [v0 tabStops];
  if (!result)
  {
    __break(1u);
    return result;
  }
  unsigned int v4 = result;
  sub_1000DB5CC();
  unint64_t v5 = sub_100109F30();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v19 = v2;
        unint64_t v20 = v5 & 0xC000000000000001;
        unint64_t v21 = v5;
        if ((v5 & 0xC000000000000001) != 0) {
          id v7 = (id)sub_10010A920();
        }
        else {
          id v7 = *(id *)(v5 + 32);
        }
        uint64_t v1 = v7;
        sub_10007BE38((uint64_t)_swiftEmptyArrayStorage);
        id v8 = objc_allocWithZone((Class)NSTextTab);
        type metadata accessor for OptionKey(0);
        sub_1000DB60C();
        Class isa = sub_100109B60().super.isa;
        swift_bridgeObjectRelease();
        [v8 initWithTextAlignment:2 location:isa options:26.0];

        sub_100109F10();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_9;
        }
      }
      sub_100109F70();
LABEL_9:
      sub_100109FA0();
      sub_100109F50();

      uint64_t v10 = v6 - 1;
      if (v6 != 1)
      {
        uint64_t v11 = 0;
        double v12 = 36.0;
        do
        {
          if (v20) {
            id v13 = (id)sub_10010A920();
          }
          else {
            id v13 = *(id *)(v21 + 8 * v11 + 40);
          }
          uint64_t v14 = v13;
          id v15 = [v13 alignment];
          sub_10007BE38((uint64_t)_swiftEmptyArrayStorage);
          id v16 = objc_allocWithZone((Class)NSTextTab);
          Class v17 = sub_100109B60().super.isa;
          swift_bridgeObjectRelease();
          [v16 initWithTextAlignment:v15 location:v17 options:v12];

          sub_100109F10();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_100109F70();
          }
          sub_100109FA0();
          sub_100109F50();

          double v12 = v12 + 10.0;
          ++v11;
        }
        while (v10 != v11);
      }
      swift_bridgeObjectRelease();
      BOOL v2 = v19;
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  Class v18 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v2 setTabStops:v18];

  return [v2 setDefaultTabInterval:10.0];
}

unint64_t sub_1000DB5CC()
{
  unint64_t result = qword_10015F330;
  if (!qword_10015F330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015F330);
  }
  return result;
}

unint64_t sub_1000DB60C()
{
  unint64_t result = qword_1001591E0;
  if (!qword_1001591E0)
  {
    type metadata accessor for OptionKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001591E0);
  }
  return result;
}

uint64_t type metadata accessor for QueryContainer()
{
  return self;
}

uint64_t sub_1000DB688()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10016E128);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10016E128);
  if (qword_100158C60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E0F0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000DB750(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for JurassicShareSheetAlert()
{
  return self;
}

void sub_1000DB7DC(void *a1, uint64_t a2, uint64_t a3)
{
  v26._object = a1;
  type metadata accessor for JurassicAlertController();
  unint64_t v5 = self;
  uint64_t v6 = (objc_class *)[v5 mainBundle];
  v36._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v26._uint64_t countAndFlagsBits = 0x80000001001129E0;
  v36._object = (void *)0x80000001001129B0;
  v39.value._uint64_t countAndFlagsBits = 0;
  v39.value._object = 0;
  v7.super.Class isa = v6;
  v42._uint64_t countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  sub_100108F60(v36, v39, v7, v42, v26);

  NSString v8 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v9 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:0 message:v8 preferredStyle:0];

  uint64_t v10 = (objc_class *)[v5 mainBundle];
  v27._uint64_t countAndFlagsBits = 0x8000000100112A00;
  v37._uint64_t countAndFlagsBits = 0x2064726163736944;
  v37._object = (void *)0xED00007972746E45;
  v40.value._uint64_t countAndFlagsBits = 0;
  v40.value._object = 0;
  v11.super.Class isa = v10;
  v43._uint64_t countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  sub_100108F60(v37, v40, v11, v43, v27);

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  swift_retain();
  NSString v13 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1000DBCA8;
  uint64_t v35 = v12;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1000DB750;
  uint64_t v33 = &unk_100145310;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  id v15 = self;
  id v16 = [v15 actionWithTitle:v13 style:2 handler:v14];
  _Block_release(v14);

  [v9 addAction:v16];
  Class v17 = (objc_class *)[v5 mainBundle];
  v28._uint64_t countAndFlagsBits = 0x8000000100112A40;
  v38._uint64_t countAndFlagsBits = 0x696445207065654BLL;
  v38._object = (void *)0xEC000000676E6974;
  v41.value._uint64_t countAndFlagsBits = 0;
  v41.value._object = 0;
  v18.super.Class isa = v17;
  v44._uint64_t countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  sub_100108F60(v38, v41, v18, v44, v28);

  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  swift_retain();
  NSString v20 = sub_100109CF0();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1000DBCEC;
  uint64_t v35 = v19;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1000DB750;
  uint64_t v33 = &unk_100145360;
  unint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = [v15 actionWithTitle:v20 style:1 handler:v21];
  _Block_release(v21);

  [v9 addAction:v22];
  id v23 = [v9 view];
  if (v23)
  {
    unint64_t v24 = v23;
    id v25 = [self systemIndigoColor];
    [v24 setTintColor:v25];

    [v29 presentViewController:v9 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000DBC70()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DBCA8()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1000DBCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DBCE4()
{
  return swift_release();
}

uint64_t sub_1000DBCEC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

void sub_1000DBD18(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = self;
  NSBundle v7 = (objc_class *)[v6 mainBundle];
  v21._uint64_t countAndFlagsBits = 0x8000000100112A80;
  v24._object = (void *)0x8000000100112A60;
  v24._uint64_t countAndFlagsBits = 0xD000000000000018;
  v26.value._uint64_t countAndFlagsBits = 0;
  v26.value._object = 0;
  v8.super.Class isa = v7;
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  sub_100108F60(v24, v26, v8, v28, v21);

  id v9 = (objc_class *)[v6 mainBundle];
  v25._uint64_t countAndFlagsBits = 0xD000000000000039;
  v22._uint64_t countAndFlagsBits = 0x8000000100112AE0;
  v25._object = (void *)0x8000000100112AA0;
  v27.value._uint64_t countAndFlagsBits = 0;
  v27.value._object = 0;
  v10.super.Class isa = v9;
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  sub_100108F60(v25, v27, v10, v29, v22);

  type metadata accessor for JurassicAlertController();
  NSString v11 = sub_100109CF0();
  swift_bridgeObjectRelease();
  NSString v12 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v13 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v11 message:v12 preferredStyle:1];

  if (qword_1001589B0 != -1) {
    swift_once();
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v15 = sub_100109CF0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000DC08C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB750;
  aBlock[3] = &unk_1001453B0;
  id v16 = _Block_copy(aBlock);
  swift_release();
  id v17 = [self actionWithTitle:v15 style:1 handler:v16];
  _Block_release(v16);

  [v13 addAction:v17];
  id v18 = [v13 view];
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = [self systemIndigoColor];
    [v19 setTintColor:v20];

    [a1 presentViewController:v13 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000DC08C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1000DC0CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12UnknownAssetCMa();
  return [super dealloc];
}

uint64_t sub_1000DC104()
{
  return _s12UnknownAssetCMa();
}

uint64_t _s12UnknownAssetCMa()
{
  uint64_t result = qword_10015F498;
  if (!qword_10015F498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_1000DC158@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1000FCC10(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_100037A20(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1000DC1BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_10010ACA0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  id v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_10010ACA0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DC284(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_didThumbnailFinishLoading) = a1;
  return sub_1000DC6F4();
}

uint64_t sub_1000DC298()
{
  uint64_t v1 = OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType;
  char v2 = 1;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      char v3 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
        char v2 = 1;
        switch(*(unsigned char *)(v0 + v1))
        {
          case 2:
            goto LABEL_8;
          default:
            char v4 = sub_10010ACA0();
            swift_bridgeObjectRelease();
            if (v4) {
              goto LABEL_5;
            }
            char v2 = 1;
            switch(*(unsigned char *)(v0 + v1))
            {
              case 5:
                goto LABEL_8;
              default:
                char v2 = sub_10010ACA0();
                break;
            }
            break;
        }
        goto LABEL_8;
      }
LABEL_5:
      char v2 = 1;
      break;
    default:
LABEL_8:
      swift_bridgeObjectRelease();
      break;
  }
  return v2 & 1;
}

void sub_1000DC574()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView]];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView];
  [v0 addSubview:v1];
  [v1 setContentMode:2];
  [v1 setAlpha:0.0];
  [v0 setIsAccessibilityElement:1];
  NSString v2 = sub_100109CF0();
  [v0 setAccessibilityIdentifier:v2];

  [v0 setAccessibilityIgnoresInvertColors:1];
  [v0 setClipsToBounds:0];
  id v3 = [self defaultCenter];
  NSString v4 = sub_100109CF0();
  [v3 addObserver:v0 selector:"handleAllowedVideosNotification:" name:v4 object:0];
}

uint64_t sub_1000DC6F4()
{
  uint64_t v0 = sub_100109A70();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100109AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008D298();
  NSBundle v8 = (void *)sub_10010A410();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000DEB0C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_100145478;
  NSBundle v10 = _Block_copy(aBlock);
  swift_release();
  sub_100109A90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000599F4();
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1000DC974()
{
  uint64_t v0 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC21JournalShareExtension18VideoAssetGridView_durationLabel;
    id v6 = [*(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension18VideoAssetGridView_durationLabel) superview];

    uint64_t v7 = *(void **)&v4[v5];
    if (v6)
    {
      [v4 bringSubviewToFront:v7];
    }
    else
    {
      uint64_t v8 = qword_100158940;
      id v9 = v7;
      if (v8 != -1) {
        swift_once();
      }
      [v9 setFont:qword_10016DD38];

      NSBundle v10 = *(void **)&v4[v5];
      uint64_t v11 = self;
      id v12 = v10;
      id v13 = [v11 whiteColor];
      [v12 setTextColor:v13];

      uint64_t v14 = *(void **)&v4[v5];
      [v14 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
      [v14 setAdjustsFontForContentSizeCategory:1];
      [v14 setAdjustsFontSizeToFitWidth:1];
      [v4 addSubview:v14];
      uint64_t v15 = qword_100158980;
      id v16 = v14;
      if (v15 != -1) {
        swift_once();
      }
      id v17 = (double *)&unk_10016D000;
      double v18 = *(double *)&qword_10016DD78;
      id v19 = [v16 superview];
      id v20 = &selRef_layoutAttributesForCellWithIndexPath_;
      if (v19)
      {
        Swift::String v21 = v19;
        [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v22 = [v16 trailingAnchor];
        id v23 = [v21 trailingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        [v24 setConstant:-v18];
        if (v24)
        {
          id v24 = v24;
          [v24 setActive:1];

          Swift::String v21 = v24;
        }

        id v17 = (double *)&unk_10016D000;
        id v20 = &selRef_layoutAttributesForCellWithIndexPath_;
      }
      else
      {
        id v24 = 0;
      }

      double v25 = v17[431];
      id v26 = *(id *)&v4[v5];
      id v27 = [v26 superview];
      if (v27)
      {
        Swift::String v28 = v27;
        [v26 v20[45]];
        id v29 = [v26 leadingAnchor];
        id v30 = [v28 leadingAnchor];
        id v31 = [v29 constraintGreaterThanOrEqualToAnchor:v30];

        [v31 setConstant:v25];
        if (v31)
        {
          id v31 = v31;
          [v31 setActive:1];

          Swift::String v28 = v31;
        }
      }
      else
      {
        id v31 = 0;
      }

      double v32 = v17[431];
      uint64_t v33 = qword_100158990;
      id v34 = *(id *)&v4[v5];
      if (v33 != -1) {
        swift_once();
      }
      id v35 = sub_10009D208(0, 1, v32 - *(double *)&qword_10016DD88);
    }
    uint64_t v36 = sub_10010A080();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v2, 1, 1, v36);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10010A060();
    swift_retain();
    uint64_t v38 = sub_10010A050();
    Swift::String_optional v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    v39[4] = v37;
    swift_release();
    sub_1000E0A88((uint64_t)v2, (uint64_t)&unk_10015F4F0, (uint64_t)v39);
    swift_release();
  }
}

uint64_t sub_1000DCEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  uint64_t v5 = sub_100109A70();
  v4[32] = v5;
  v4[33] = *(void *)(v5 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v6 = sub_100109AC0();
  v4[35] = v6;
  v4[36] = *(void *)(v6 - 8);
  v4[37] = swift_task_alloc();
  sub_100004BD4((uint64_t *)&unk_100159D40);
  v4[38] = swift_task_alloc();
  uint64_t v7 = sub_1001091E0();
  v4[39] = v7;
  v4[40] = *(void *)(v7 - 8);
  v4[41] = swift_task_alloc();
  sub_10010A060();
  v4[42] = sub_10010A050();
  uint64_t v9 = sub_100109FF0();
  v4[43] = v9;
  v4[44] = v8;
  return _swift_task_switch(sub_1000DD0A0, v9, v8);
}

uint64_t sub_1000DD0A0()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = *(void **)&Strong[OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView];
    if (v3)
    {
      id v4 = v3;
      id v5 = [v4 layer];
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {

      }
      id v7 = [v6 player];
      id v8 = [v7 currentItem];

      if (v8)
      {
        v0[45] = [v8 asset];

        sub_100004BD4(&qword_10015F4F8);
        uint64_t v9 = sub_100109650();
        v0[46] = v9;
        NSBundle v10 = (void *)swift_task_alloc();
        v0[47] = v10;
        *NSBundle v10 = v0;
        v10[1] = sub_1000DD42C;
        return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 20, v9);
      }
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11
    && (id v12 = (void *)v11,
        id v13 = *(void **)(v11 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset),
        id v14 = v13,
        v12,
        v13))
  {
    uint64_t v15 = v0[39];
    uint64_t v16 = v0[40];
    id v17 = (char *)v0[38];
    sub_100021028(0, 1, v17);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) != 1)
    {
      (*(void (**)(void, void, void))(v0[40] + 32))(v0[41], v0[38], v0[39]);
      id v23 = (uint64_t (*)(uint64_t))((char *)&dword_10015C1D0 + dword_10015C1D0);
      double v18 = (void *)swift_task_alloc();
      v0[49] = v18;
      *double v18 = v0;
      v18[1] = sub_1000DD7E8;
      uint64_t v19 = v0[41];
      return v23(v19);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[40] + 56))(v0[38], 1, 1, v0[39]);
  }
  uint64_t v20 = v0[38];
  swift_release();
  sub_10000B9CC(v20, (uint64_t *)&unk_100159D40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1000DD42C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_1000DDC9C;
  }
  else
  {

    swift_release();
    uint64_t v3 = *(void *)(v2 + 344);
    uint64_t v4 = *(void *)(v2 + 352);
    id v5 = sub_1000DD550;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000DD550()
{
  uint64_t v12 = v0[37];
  uint64_t v1 = v0[34];
  uint64_t v15 = v0[36];
  uint64_t v16 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v14 = v0[33];
  swift_release();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[22];
  sub_10008D298();
  uint64_t v5 = v0[21];
  id v13 = (void *)sub_10010A410();
  uint64_t v6 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v8 = (void *)swift_allocObject();
  uint64_t v8[2] = v6;
  v8[3] = v3;
  v8[4] = v5;
  v8[5] = v4;
  v0[12] = sub_1000DED10;
  v0[13] = v8;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10001DEE8;
  v0[11] = &unk_100145540;
  uint64_t v9 = _Block_copy(v0 + 8);
  swift_retain();
  sub_100109A90();
  v0[30] = _swiftEmptyArrayStorage;
  sub_1000599F4();
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v16);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSBundle v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000DD7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = (void *)*v4;
  swift_task_dealloc();
  if (v3)
  {
    swift_errorRelease();
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_1000DDBEC;
  }
  else
  {
    v8[50] = a2;
    v8[51] = a3;
    v8[52] = a1;
    uint64_t v9 = v8[43];
    uint64_t v10 = v8[44];
    uint64_t v11 = sub_1000DD928;
  }
  return _swift_task_switch(v11, v9, v10);
}

uint64_t sub_1000DD928()
{
  uint64_t v1 = v0[50];
  uint64_t v11 = v0[52];
  uint64_t v12 = v0[51];
  uint64_t v18 = v0[39];
  uint64_t v19 = v0[41];
  uint64_t v13 = v0[37];
  uint64_t v15 = v0[36];
  uint64_t v2 = v0[34];
  uint64_t v16 = v0[35];
  uint64_t v17 = v0[40];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[33];
  swift_release();
  sub_10008D298();
  uint64_t v14 = (void *)sub_10010A410();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v11;
  v7[4] = v1;
  v7[5] = v12;
  v0[6] = sub_1000DEC40;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10001DEE8;
  v0[5] = &unk_1001454F0;
  id v8 = _Block_copy(v0 + 2);
  swift_retain();
  sub_100109A90();
  v0[29] = _swiftEmptyArrayStorage;
  sub_1000599F4();
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1000DDBEC()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000DDC9C()
{
  uint64_t v1 = *(void **)(v0 + 360);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1000DDD48(uint64_t a1, CMTimeValue a2, uint64_t a3, CMTimeEpoch a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v8 = (void *)Strong;
  id v9 = *(id *)(Strong + OBJC_IVAR____TtC21JournalShareExtension18VideoAssetGridView_durationLabel);

  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double Seconds = CMTimeGetSeconds(&v22);
  v22.value = a2;
  *(void *)&v22.timescale = a3;
  v22.epoch = a4;
  double v11 = CMTimeGetSeconds(&v22);
  id v12 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  uint64_t v13 = v12;
  if (v11 < 60.0)
  {
    [v12 setAllowedUnits:192];
    uint64_t v14 = &selRef_setZeroFormattingBehavior_;
    uint64_t v15 = 0x10000;
LABEL_6:
    [v13 *v14 v15];
    goto LABEL_7;
  }
  if (v11 > 3600.0)
  {
    uint64_t v14 = &selRef_setAllowedUnits_;
    uint64_t v15 = 224;
    goto LABEL_6;
  }
LABEL_7:
  id v16 = [v13 stringFromTimeInterval:v11];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_100109D30();
    unint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    sub_1000DEC60(1uLL, v18, v20);
    swift_bridgeObjectRelease();
    sub_100109D90();
    swift_bridgeObjectRelease();
  }
  NSString v21 = sub_100109CF0();
  swift_bridgeObjectRelease();
  [v9 setText:v21];
}

void sub_1000DDF58()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_fallbackView);
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension16JournalAssetView_sizeType);
  id v4 = v2;
  sub_1000FBD78(1, v3);

  uint64_t v5 = OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView;
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_playerView);
  if (v6)
  {
    id v7 = v6;
    id v8 = [v7 layer];
    self;
    id v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {

    }
    id v10 = [v9 player];
    if (v10)
    {
      [v10 rate];
      float v12 = v11;

      if (v12 > 0.0 && (sub_1000DC298() & 1) == 0)
      {
        uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_thumbnailView);
        id v14 = [v13 image];

        if (v14 && ([v13 isHidden] & 1) == 0 && (objc_msgSend(v13, "alpha"), v15 == 1.0))
        {
          sub_10001EBB8();
        }
        else
        {
          id v16 = *(void **)(v1 + v5);
          if (v16)
          {
            id v17 = v16;
            id v18 = [v17 layer];
            self;
            unint64_t v19 = (void *)swift_dynamicCastObjCClass();
            if (!v19) {

            }
            id v20 = [v19 player];
            [v20 pause];

            NSString v21 = *(void **)(v1 + v5);
            if (v21)
            {
              id v22 = v21;
              id v23 = [v22 layer];
              self;
              uint64_t v24 = (void *)swift_dynamicCastObjCClass();
              if (!v24) {

              }
              id v25 = [v24 player];
              if (v25)
              {
                CMTimeScale timescale = kCMTimeZero.timescale;
                CMTimeFlags flags = kCMTimeZero.flags;
                CMTimeEpoch epoch = kCMTimeZero.epoch;
                CMTimeValue value = kCMTimeZero.value;
                CMTimeScale v37 = timescale;
                CMTimeFlags v38 = flags;
                CMTimeEpoch v39 = epoch;
                CMTimeEpoch v31 = epoch;
                CMTimeValue v32 = kCMTimeZero.value;
                CMTimeScale v33 = timescale;
                CMTimeFlags v34 = flags;
                CMTimeValue v28 = kCMTimeZero.value;
                CMTimeScale v29 = timescale;
                CMTimeFlags v30 = flags;
                [v25 seekToTime:&value toleranceBefore:&v32 toleranceAfter:&v28];
              }
            }
          }
          sub_10001ED7C();
        }
      }
    }
  }
}

uint64_t sub_1000DE24C()
{
  uint64_t v1 = sub_100109A70();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109AC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded) = 1;
    id v10 = *(void **)(v0 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset);
    if (v10)
    {
      uint64_t v18 = v2;
      uint64_t v11 = qword_100158900;
      id v12 = v10;
      if (v11 != -1) {
        swift_once();
      }
      v17[1] = qword_10016DCA0;
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = v12;
      aBlock[4] = sub_100024404;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001DEE8;
      aBlock[3] = &unk_100145428;
      double v15 = _Block_copy(aBlock);
      id v16 = v12;
      swift_retain();
      sub_100109A90();
      unint64_t v19 = _swiftEmptyArrayStorage;
      sub_1000599F4();
      sub_100004BD4((uint64_t *)&unk_10015A5E0);
      sub_100019AF4();
      sub_10010A7D0();
      sub_10010A420();
      _Block_release(v15);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

void sub_1000DE564()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100108E40();
  if (v2)
  {
    uint64_t v3 = v2;
    sub_10010A860();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1000FCC10((uint64_t)v15), (v5 & 1) != 0))
    {
      sub_100037A20(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1000AE3FC((uint64_t)v15);
    if (*((void *)&v17 + 1))
    {
      sub_100004BD4((uint64_t *)&unk_10015F2A0);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_videoAsset);
        if (v6)
        {
          id v7 = v6;
          uint64_t v8 = sub_100109470();
          char v10 = sub_1000DC1BC(v8, v9, (void *)0xD000000000000019);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0
            || (*(unsigned char *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_isLoaded) & 1) == 0)
          {
          }
          else
          {
            uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction);
            uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction);
            *uint64_t v11 = 0;
            v11[1] = 0;
            sub_10002422C(v12);
            sub_10001ED7C();
            sub_10001EBB8();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction);
          uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC21JournalShareExtension14VideoAssetView_finishPlayingAction);
          *uint64_t v13 = 0;
          v13[1] = 0;
          sub_10002422C(v14);
          sub_10001ED7C();
          sub_10001EBB8();
        }
      }
    }
    else
    {
      sub_10000B9CC((uint64_t)&v16, &qword_10015A8A0);
    }
  }
}

void sub_1000DE988()
{
}

id sub_1000DE998()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoAssetGridView();
  [super dealloc];
}

uint64_t sub_1000DE9E0()
{
  return type metadata accessor for VideoAssetGridView();
}

uint64_t type metadata accessor for VideoAssetGridView()
{
  uint64_t result = qword_10015F4D8;
  if (!qword_10015F4D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DEA34()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000DEA7C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000DEAB4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DEAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DEB04()
{
  return swift_release();
}

void sub_1000DEB0C()
{
}

uint64_t sub_1000DEB14()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000DEB54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1000090F0;
  return sub_1000DCEC4(a1, v4, v5, v6);
}

uint64_t sub_1000DEC08()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000DEC40()
{
  sub_1000DDD48(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1000DEC60(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_100109DE0();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_100109EA0();
}

uint64_t sub_1000DED34()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015F500);
  sub_100007CB8(v0, (uint64_t)qword_10015F500);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    sub_100109D30();
  }
  swift_bridgeObjectRetain();
  sub_100109950();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DEE30()
{
  v1[3] = v0;
  sub_100004BD4(&qword_10015A240);
  v1[4] = swift_task_alloc();
  sub_100004BD4(&qword_10015A3A0);
  v1[5] = swift_task_alloc();
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000DEF7C;
  return sub_1000F7CC4();
}

uint64_t sub_1000DEF7C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000DF07C, 0, 0);
}

uint64_t sub_1000DF07C()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v1);
  }
  uint64_t v2 = v0[4];
  sub_1000248D8(v0[3] + qword_10016E140, v2, &qword_10015A240);
  uint64_t v3 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  if (v4 == 1)
  {
    sub_10000B9CC(v0[4], &qword_10015A240);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
LABEL_5:
    sub_10000B9CC(v0[5], &qword_10015A3A0);
    if (qword_100158C80 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_100109960();
    sub_100007CB8(v9, (uint64_t)qword_10015F500);
    char v10 = sub_100109940();
    os_log_type_t v11 = sub_10010A2D0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "no visits data", v12, 2u);
      swift_slowDealloc();
    }

    goto LABEL_10;
  }
  sub_1000248D8(v0[4], v0[5], &qword_10015A3A0);
  sub_1000E03BC(v8, _s15GenericMapAssetC14GenericMapDataVMa);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1) {
    goto LABEL_5;
  }
  sub_10006BC10(v0[5], v0[8]);
  double v15 = (void *)swift_task_alloc();
  v0[11] = v15;
  *double v15 = v0;
  v15[1] = sub_1000DF360;
  uint64_t v16 = v0[3];
  v15[16] = v0[8];
  v15[17] = v16;
  return _swift_task_switch(sub_1000DFB90, 0, 0);
}

uint64_t sub_1000DF360(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000DF460, 0, 0);
}

uint64_t sub_1000DF460()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(unsigned __int8 *)(*(void *)(v0 + 24) + qword_100160338);
    *(unsigned char *)(v0 + 120) = v2;
    switch(v2)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v3 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if (v3)
        {
LABEL_9:
          sub_1000E03BC(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
          uint64_t v1 = *(void *)(v0 + 96);
          goto LABEL_10;
        }
        sub_10006C4F0();
        double v5 = v4;
        id v6 = [self mainScreen];
        [v6 scale];
        double v8 = v7;

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 104) = v9;
        void *v9 = v0;
        v9[1] = sub_1000DF6E0;
        uint64_t result = sub_10007C2BC(v5 * v8);
        break;
    }
  }
  else
  {
    sub_1000E03BC(*(void *)(v0 + 64), _s10VisitAssetC9VisitDataVMa);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v11(v1);
  }
  return result;
}

uint64_t sub_1000DF6E0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000DF7E0, 0, 0);
}

uint64_t sub_1000DF7E0()
{
  uint64_t v1 = (void *)v0[14];
  if (v1)
  {
    char v12 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v12)
    {
      sub_1000E03BC(v0[8], _s10VisitAssetC9VisitDataVMa);

      goto LABEL_15;
    }
    if (qword_100158BF8 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[8];
    sub_1000F97C4(v1, *(void *)(v0[3] + qword_100160308), *(void *)(v0[3] + qword_100160308 + 8));

    uint64_t v11 = v13;
  }
  else
  {
    if (qword_100158C80 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)v0[3];
    uint64_t v3 = sub_100109960();
    sub_100007CB8(v3, (uint64_t)qword_10015F500);
    id v4 = v2;
    double v5 = sub_100109940();
    os_log_type_t v6 = sub_10010A2D0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    double v8 = v0[3];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v0[2] = v8;
      char v10 = v8;
      sub_10010A730();
      *uint64_t v17 = v8;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%@ - error creating thumbnail from MKMap", v9, 0xCu);
      sub_100004BD4((uint64_t *)&unk_100159D70);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      double v5 = v8;
    }

    uint64_t v11 = v0[8];
  }
  sub_1000E03BC(v11, _s10VisitAssetC9VisitDataVMa);
LABEL_15:
  uint64_t v14 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_1000DFB70(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return _swift_task_switch(sub_1000DFB90, 0, 0);
}

uint64_t sub_1000DFB90()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  sub_100004BD4((uint64_t *)&unk_10015F6A0);
  uint64_t v3 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100122230;
  sub_10006A6C8(v1, v5 + v4);
  *(void *)(v0 + 144) = sub_1000C3594(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(unsigned char *)(v0 + 192) = *(unsigned char *)(v2 + qword_100160338);
  *(void *)(v0 + 152) = *(void *)(v2 + qword_100160348);
  sub_10010A060();
  *(void *)(v0 + 160) = sub_10010A050();
  uint64_t v7 = sub_100109FF0();
  return _swift_task_switch(sub_1000DFD30, v7, v6);
}

uint64_t sub_1000DFD30()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 192);
  swift_release();
  *(void *)(v0 + 168) = sub_1000B2C6C(v2, 0, v3, v1, 0);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000DFDCC, 0, 0);
}

uint64_t sub_1000DFDCC()
{
  id v1 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v0[21]];
  v0[22] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000DFEF0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10000E354;
  v0[13] = &unk_100145568;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000DFEF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1000E0000;
  }
  else {
    uint64_t v2 = sub_10007A650;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000E0000()
{
  swift_willThrow();
  if (qword_100158C80 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100109960();
  sub_100007CB8(v1, (uint64_t)qword_10015F500);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_100109940();
  os_log_type_t v3 = sub_10010A2D0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[22];
  uint64_t v6 = v0[21];
  if (v4)
  {
    char v12 = (void *)v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    double v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v9;
    sub_10010A730();
    *double v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "MKMapSnapshotter: Unable to create Location Preview Map Snapshot with error: %@", v7, 0xCu);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v6 = v2;
  }
  swift_errorRelease();

  char v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_1000E0228()
{
  return sub_10000B9CC(v0 + qword_10016E140, &qword_10015A240);
}

uint64_t sub_1000E0254(uint64_t a1)
{
  return sub_10000B9CC(a1 + qword_10016E140, &qword_10015A240);
}

uint64_t type metadata accessor for GenericMapThumbnailCacheOperation()
{
  uint64_t result = qword_10015F540;
  if (!qword_10015F540) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000E02CC()
{
  sub_1000E035C();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_1000E035C()
{
  if (!qword_10015F558)
  {
    _s15GenericMapAssetC14GenericMapDataVMa(255);
    unint64_t v0 = sub_10010A700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F558);
    }
  }
}

uint64_t sub_1000E03B4()
{
  return type metadata accessor for GenericMapThumbnailCacheOperation();
}

uint64_t sub_1000E03BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1000E0544()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15MOMapAnnotationCMa();
  return [super dealloc];
}

uint64_t _s15MOMapAnnotationCMa()
{
  return self;
}

id sub_1000E060C(unsigned __int8 a1)
{
  id result = [v1 items];
  if (!result) {
    return result;
  }
  BOOL v4 = result;
  sub_1000E0A24();
  unint64_t v5 = sub_100109F30();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        JUMPOUT(0x1000E08C8);
      }
      uint64_t v7 = 0;
      unint64_t v8 = v5 & 0xC000000000000001;
      if (a1 == 128) {
        uint64_t v9 = 7;
      }
      else {
        uint64_t v9 = 8;
      }
      uint64_t v10 = 4;
      if (a1 != 96) {
        uint64_t v10 = 5;
      }
      uint64_t v24 = v10;
      uint64_t v25 = v9;
      if (a1 == 64) {
        uint64_t v11 = 2;
      }
      else {
        uint64_t v11 = 3;
      }
      uint64_t v22 = a1 & 1;
      uint64_t v23 = v11;
      unint64_t v27 = v5;
      uint64_t v28 = v6;
      unint64_t v26 = v5 & 0xC000000000000001;
      do
      {
        if (v8) {
          id v13 = (id)sub_10010A920();
        }
        else {
          id v13 = *(id *)(v5 + 8 * v7 + 32);
        }
        uint64_t v14 = v13;
        id v15 = [v13 customView:v22];
        if (v15)
        {
          char v12 = v15;
          self;
          uint64_t v16 = swift_dynamicCastObjCClass();
          if (v16)
          {
            uint64_t v17 = (void *)v16;
            if (a1 > 0xFDu)
            {
              id v19 = v12;
              BOOL v20 = 0;
            }
            else
            {
              uint64_t v18 = 9;
              switch(a1 >> 5)
              {
                case 1:
                  uint64_t v18 = 6;
                  break;
                case 2:
                  uint64_t v18 = v23;
                  break;
                case 3:
                  uint64_t v18 = v24;
                  break;
                case 4:
                  uint64_t v18 = v25;
                  break;
                case 5:
                  break;
                default:
                  uint64_t v18 = v22;
                  break;
              }
              id v21 = v12;
              BOOL v20 = [v17 tag] == (id)v18;
              unint64_t v8 = v26;
              unint64_t v5 = v27;
              uint64_t v6 = v28;
            }
            [v17 setSelected:v20];
            if ([v17 tag] == (id)9) {
              [v17 setEnabled:(a1 & 0xE1) == 1];
            }

            uint64_t v14 = v12;
          }
        }
        else
        {
          char v12 = v14;
        }
        ++v7;
      }
      while (v6 != v7);
    }
  }

  return (id)swift_bridgeObjectRelease();
}

id sub_1000E09B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasPickerToolbar();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasPickerToolbar()
{
  return self;
}

unint64_t sub_1000E0A24()
{
  unint64_t result = qword_10015EEE8;
  if (!qword_10015EEE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015EEE8);
  }
  return result;
}

uint64_t sub_1000E0A64(unint64_t a1, char a2)
{
  uint64_t result = 254;
  if ((a2 & 1) == 0 && a1 <= 9) {
    return byte_1001270B6[a1];
  }
  return result;
}

uint64_t sub_1000E0A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10010A080();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_10010A070();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10000B9CC(a1, &qword_10015A5F0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100109FF0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1000E0C10()
{
  uint64_t v0 = sub_100004BD4(&qword_10015BC68);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004BD4(&qword_10015BC70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100108F10();
  sub_100007C54(v6, qword_10016E148);
  sub_100007CB8(v6, (uint64_t)qword_10016E148);
  uint64_t v7 = sub_1001095C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = sub_1001095E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return sub_100108F00();
}

uint64_t sub_1000E0E00(uint64_t a1, int a2)
{
  int v27 = a2;
  uint64_t v4 = sub_100109530();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  uint64_t v9 = sub_100109460();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v2 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_endDate, 1, 1, v9);
  *(void *)(v2 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask) = 0;
  uint64_t v11 = v2 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_backgroundTaskID;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_backgroundingSemaphore;
  *(void *)(v2 + v12) = dispatch_semaphore_create(0);
  id v13 = [self mainBundle];
  id v14 = [v13 bundleIdentifier];

  if (v14)
  {
    sub_100109D30();
  }
  sub_100109950();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Calendar.Identifier.gregorian(_:), v4);
  sub_100109540();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = a1;
  sub_1000248D8(a1, v2 + 16, &qword_10015F950);
  uint64_t v16 = (id *)&NSExtensionHostDidEnterBackgroundNotification;
  if ((v27 & 1) == 0) {
    uint64_t v16 = (id *)&UISceneDidEnterBackgroundNotification;
  }
  id v17 = *v16;
  uint64_t v18 = self;
  id v19 = [v18 defaultCenter];
  [v19 addObserver:v2 selector:"appDidEnterBackground:" name:v17 object:0];

  id v20 = [v18 defaultCenter];
  [v20 addObserver:v2 selector:"appWillBeTerminated" name:UIApplicationWillTerminateNotification object:0];

  id v21 = [v18 defaultCenter];
  uint64_t v22 = qword_100158B88;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  [v21 addObserver:v2 selector:"userBecameActive" name:qword_10016DFA8 object:0];

  swift_release();
  id v23 = [v18 defaultCenter];
  uint64_t v24 = qword_100158B90;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  [v23 addObserver:v2 selector:"userBecameInactive" name:qword_10016DFB0 object:0];

  swift_release();
  sub_10000B9CC(v15, &qword_10015F950);
  return v2;
}

uint64_t sub_1000E1248()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100108E30();
  if (!v12) {
    return sub_10000B9CC((uint64_t)&v11, &qword_10015A8A0);
  }
  sub_10002426C(&v11, v13);
  sub_100037A20((uint64_t)v13, (uint64_t)&v11);
  sub_100109760();
  if (swift_dynamicCast())
  {
  }
  else
  {
    uint64_t v9 = v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
    swift_beginAccess();
    sub_1000248D8(v9, (uint64_t)v7, (uint64_t *)&unk_10015CDE0);
    LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
    sub_10000B9CC((uint64_t)v7, (uint64_t *)&unk_10015CDE0);
    if (v9 != 1)
    {
      sub_100109430();
      sub_1000E2874((uint64_t)v4, 60.0);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  return sub_10000B7B0((uint64_t)v13);
}

uint64_t sub_1000E1558()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_1000248D8(v8, (uint64_t)v7, (uint64_t *)&unk_10015CDE0);
  uint64_t v9 = sub_100109460();
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9);
  uint64_t result = sub_10000B9CC((uint64_t)v7, (uint64_t *)&unk_10015CDE0);
  if (v8 != 1)
  {
    uint64_t v11 = sub_10010A080();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    sub_10010A060();
    swift_retain();
    uint64_t v12 = sub_10010A050();
    id v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v1;
    sub_10004C59C((uint64_t)v4, (uint64_t)&unk_10015F9A8, (uint64_t)v13);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E174C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_100109460();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_10010A060();
  v4[6] = sub_10010A050();
  uint64_t v7 = sub_100109FF0();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1000E1840, v7, v6);
}

uint64_t sub_1000E1840()
{
  sub_100109430();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000E18E4;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_1000E4050(v2, 0);
}

uint64_t sub_1000E18E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1000E60E8, v6, v5);
}

void sub_1000E1A80()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_1000248D8(v8, (uint64_t)v7, (uint64_t *)&unk_10015CDE0);
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
  sub_10000B9CC((uint64_t)v7, (uint64_t *)&unk_10015CDE0);
  if (v8 == 1)
  {
    sub_100109430();
    sub_1000E24F4((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v9 = sub_100109940();
    os_log_type_t v10 = sub_10010A2B0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v18 = v16;
      *(_DWORD *)uint64_t v11 = 136315138;
      v15[1] = v11 + 4;
      sub_100109430();
      uint64_t v12 = sub_1001093A0();
      unint64_t v14 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      uint64_t v17 = sub_1000C50D4(v12, v14, &v18);
      sub_10010A730();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "User became active at %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000E3D78();
  }
}

uint64_t sub_1000E1D78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_1000248D8(v12, (uint64_t)v11, (uint64_t *)&unk_10015CDE0);
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  uint64_t result = sub_10000B9CC((uint64_t)v11, (uint64_t *)&unk_10015CDE0);
  if (v12 != 1)
  {
    unint64_t v14 = sub_100109940();
    os_log_type_t v15 = sub_10010A2B0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v27 = v24;
      *(_DWORD *)uint64_t v16 = 136315138;
      id v23 = v16 + 4;
      sub_100109430();
      uint64_t v17 = sub_1001093A0();
      uint64_t v25 = v4;
      unint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v26 = sub_1000C50D4(v17, v19, &v27);
      sub_10010A730();
      uint64_t v4 = v25;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "User became inactive at %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v20 = sub_10010A080();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    sub_10010A060();
    swift_retain();
    uint64_t v21 = sub_10010A050();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v1;
    sub_10004C59C((uint64_t)v4, (uint64_t)&unk_10015F998, (uint64_t)v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E2114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_100109460();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_10010A060();
  v4[6] = sub_10010A050();
  uint64_t v7 = sub_100109FF0();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1000E2208, v7, v6);
}

uint64_t sub_1000E2208()
{
  sub_100109430();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000E22AC;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_1000E4050(v2, 1);
}

uint64_t sub_1000E22AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1000E2430, v6, v5);
}

uint64_t sub_1000E2430()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E24B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

void sub_1000E24F4(uint64_t a1)
{
  v24[0] = a1;
  uint64_t v2 = sub_100109460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v24 - v11;
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v24 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_1000248D8(v15, (uint64_t)v14, (uint64_t *)&unk_10015CDE0);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2);
  sub_10000B9CC((uint64_t)v14, (uint64_t *)&unk_10015CDE0);
  if (v16 == 1)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v18 = v24[0];
    v17(v12, v24[0], v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    sub_100012FA4((uint64_t)v12, (uint64_t)v9);
    swift_beginAccess();
    sub_1000E5588((uint64_t)v9, v15);
    swift_endAccess();
    v17(v5, v18, v2);
    unint64_t v19 = sub_100109940();
    os_log_type_t v20 = sub_10010A2B0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v22 = sub_1001093A0();
      v24[1] = sub_1000C50D4(v22, v23, v25);
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Started mindfulness session %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

void sub_1000E2874(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v6 - 8);
  Swift::String_optional v41 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100109460();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v3 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_1000248D8(v18, (uint64_t)v17, (uint64_t *)&unk_10015CDE0);
  LODWORD(v18) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8);
  sub_10000B9CC((uint64_t)v17, (uint64_t *)&unk_10015CDE0);
  if (v18 != 1)
  {
    uint64_t v37 = v10;
    CMTimeEpoch v39 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v40 = v9 + 16;
    v39(v14, a1, v8);
    unint64_t v19 = sub_100109940();
    os_log_type_t v20 = sub_10010A2B0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v38 = a1;
    if (v21)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      uint64_t v36 = v3;
      *(_DWORD *)uint64_t v22 = 136315138;
      id v35 = (void (*)(uint64_t, char *, uint64_t))(v22 + 4);
      uint64_t v23 = sub_1001093A0();
      uint64_t v42 = sub_1000C50D4(v23, v24, aBlock);
      uint64_t v3 = v36;
      sub_10010A730();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Paused mindfulness session at %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v38;
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    uint64_t v25 = sub_10010A080();
    uint64_t v26 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v41, 1, 1, v25);
    v39(v12, a1, v8);
    sub_10010A060();
    swift_retain();
    uint64_t v27 = sub_10010A050();
    uint64_t v28 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v36 = v28 | 7;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v27;
    *(void *)(v29 + 24) = &protocol witness table for MainActor;
    *(double *)(v29 + 32) = a2;
    *(void *)(v29 + 40) = v3;
    id v35 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    v35(v29 + ((v28 + 48) & ~v28), v12, v8);
    *(void *)(v3 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask) = sub_1000E0A88(v26, (uint64_t)&unk_10015F960, v29);
    swift_release();
    id v30 = [self processInfo];
    NSString v31 = sub_100109CF0();
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    v39(v12, v38, v8);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v32;
    v35(v33 + ((v28 + 24) & ~v28), v12, v8);
    aBlock[4] = (uint64_t)sub_1000E5CC8;
    aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000D109C;
    aBlock[3] = (uint64_t)&unk_1001455F8;
    CMTimeFlags v34 = _Block_copy(aBlock);
    swift_release();
    [v30 performExpiringActivityWithReason:v31 usingBlock:v34];
    _Block_release(v34);
  }
}

uint64_t sub_1000E2E4C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  uint64_t v7 = sub_10010AA20();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = *(void *)(v7 - 8);
  *(void *)(v6 + 56) = swift_task_alloc();
  sub_10010A060();
  *(void *)(v6 + 64) = sub_10010A050();
  uint64_t v9 = sub_100109FF0();
  *(void *)(v6 + 72) = v9;
  *(void *)(v6 + 80) = v8;
  return _swift_task_switch(sub_1000E2F44, v9, v8);
}

uint64_t sub_1000E2F44()
{
  uint64_t v1 = sub_10010AEA0();
  uint64_t v3 = v2;
  sub_10010AA10();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10015F978 + dword_10015F978);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000E3020;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1000E3020()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[5];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v2[9];
    uint64_t v8 = v2[10];
    return _swift_task_switch(sub_1000E3384, v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v9 = (void *)swift_task_alloc();
    v2[13] = v9;
    void *v9 = v3;
    v9[1] = sub_1000E31F8;
    uint64_t v10 = v2[4];
    return sub_1000E4050(v10, 0);
  }
}

uint64_t sub_1000E31F8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_1000E3318, v3, v2);
}

uint64_t sub_1000E3318()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E3384()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1000E33F0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100109460();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    uint64_t v14 = sub_10010A080();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
    sub_10010A060();
    swift_retain();
    uint64_t v15 = sub_10010A050();
    unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = &protocol witness table for MainActor;
    *(unsigned char *)(v17 + 32) = a1 & 1;
    *(void *)(v17 + 40) = v13;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
    sub_10004C59C((uint64_t)v11, (uint64_t)&unk_10015F970, v17);
    swift_release();
    id v18 = *(id *)(v13 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_backgroundingSemaphore);
    sub_10010A480();
    swift_release();
  }
}

uint64_t sub_1000E3644(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = a6;
  *(unsigned char *)(v6 + 88) = a4;
  sub_10010A060();
  *(void *)(v6 + 32) = sub_10010A050();
  uint64_t v8 = sub_100109FF0();
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = v7;
  return _swift_task_switch(sub_1000E36E0, v8, v7);
}

uint64_t sub_1000E36E0()
{
  if (*(unsigned char *)(v0 + 88) == 1)
  {
    uint64_t v1 = sub_100109940();
    os_log_type_t v2 = sub_10010A2F0();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Process is being suspended so ending the background timer early", v3, 2u);
      swift_slowDealloc();
    }

    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1000E3910;
    uint64_t v5 = *(void *)(v0 + 24);
    return sub_1000E4050(v5, 0);
  }
  else
  {
    uint64_t v7 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask);
    *(void *)(v0 + 64) = v7;
    if (v7)
    {
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v8;
      uint64_t v9 = sub_100004BD4(&qword_100159850);
      *uint64_t v8 = v0;
      v8[1] = sub_1000E3AA4;
      return Task.value.getter(v9, v7, (char *)&type metadata for () + 8, v9, &protocol self-conformance witness table for Error);
    }
    else
    {
      swift_release();
      sub_10010A490();
      uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
      return v10();
    }
  }
}

uint64_t sub_1000E3910()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1000E3A30, v3, v2);
}

uint64_t sub_1000E3A30()
{
  swift_release();
  sub_10010A490();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E3AA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1000E3C60;
  }
  else {
    uint64_t v5 = sub_1000E3BE0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000E3BE0()
{
  swift_release();
  swift_release();
  sub_10010A490();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E3C60()
{
  swift_release();
  uint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2B0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Sleep task was canceled", v3, 2u);
    swift_slowDealloc();
  }
  swift_release();
  swift_errorRelease();

  sub_10010A490();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1000E3D78()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask;
  if (!*(void *)(v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask)) {
    goto LABEL_4;
  }
  swift_retain();
  if (swift_task_isCancelled())
  {
    swift_release();
LABEL_4:
    sub_100109430();
    sub_1000E24F4((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return;
  }
  if (*(void *)(v0 + v5))
  {
    swift_retain();
    sub_100004BD4(&qword_100159850);
    sub_10010A0A0();
    swift_release();
    *(void *)(v0 + v5) = 0;
    swift_release();
  }
  uint64_t v13 = sub_100109940();
  os_log_type_t v6 = sub_10010A2B0();
  if (os_log_type_enabled(v13, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v12 = v7 + 4;
    sub_100109430();
    uint64_t v8 = sub_1001093A0();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v14 = sub_1000C50D4(v8, v10, &v15);
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v6, "Resumed mindfulness session at %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v11 = v13;
  }
}

uint64_t sub_1000E4050(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 544) = a2;
  *(void *)(v3 + 320) = a1;
  *(void *)(v3 + 328) = v2;
  uint64_t v4 = sub_1001095B0();
  *(void *)(v3 + 336) = v4;
  *(void *)(v3 + 344) = *(void *)(v4 - 8);
  *(void *)(v3 + 352) = swift_task_alloc();
  uint64_t v5 = sub_100109460();
  *(void *)(v3 + 360) = v5;
  *(void *)(v3 + 368) = *(void *)(v5 - 8);
  *(void *)(v3 + 376) = swift_task_alloc();
  *(void *)(v3 + 384) = swift_task_alloc();
  *(void *)(v3 + 392) = swift_task_alloc();
  *(void *)(v3 + 400) = swift_task_alloc();
  *(void *)(v3 + 408) = swift_task_alloc();
  *(void *)(v3 + 416) = swift_task_alloc();
  *(void *)(v3 + 424) = swift_task_alloc();
  *(void *)(v3 + 432) = swift_task_alloc();
  sub_100004BD4((uint64_t *)&unk_10015CDE0);
  *(void *)(v3 + 440) = swift_task_alloc();
  *(void *)(v3 + 448) = swift_task_alloc();
  *(void *)(v3 + 456) = swift_task_alloc();
  *(void *)(v3 + 464) = swift_task_alloc();
  *(void *)(v3 + 472) = swift_task_alloc();
  *(void *)(v3 + 480) = swift_task_alloc();
  sub_10010A060();
  *(void *)(v3 + 488) = sub_10010A050();
  uint64_t v7 = sub_100109FF0();
  *(void *)(v3 + 496) = v7;
  *(void *)(v3 + 504) = v6;
  return _swift_task_switch(sub_1000E426C, v7, v6);
}

uint64_t sub_1000E426C()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v5 = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  *(void *)(v0 + 512) = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  sub_1000248D8(v6, v1, (uint64_t *)&unk_10015CDE0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  LODWORD(v2) = v7(v1, 1, v2);
  sub_10000B9CC(v1, (uint64_t *)&unk_10015CDE0);
  if (v2 == 1)
  {
    swift_release();
    uint64_t v8 = sub_100109940();
    os_log_type_t v9 = sub_10010A2D0();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      uint64_t v11 = "Not currently in a mindfulness session, so nothing will be logged to Health";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v11, v10, 2u);
      swift_slowDealloc();
      goto LABEL_22;
    }
    goto LABEL_22;
  }
  uint64_t v87 = v6;
  uint64_t v12 = *(void *)(v0 + 328);
  uint64_t v13 = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask;
  if (*(void *)(v12 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_pauseTask))
  {
    swift_retain();
    sub_100004BD4(&qword_100159850);
    sub_10010A0A0();
    swift_release();
    *(void *)(v12 + v13) = 0;
    swift_release();
  }
  uint64_t v14 = *(void *)(v0 + 464);
  uint64_t v15 = *(void *)(v0 + 472);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 368);
  uint64_t v18 = *(void *)(v0 + 328);
  if (*(unsigned char *)(v0 + 544) == 1) {
    sub_1001093C0();
  }
  else {
    (*(void (**)(void, void, void))(v16 + 16))(*(void *)(v0 + 472), *(void *)(v0 + 320), *(void *)(v0 + 360));
  }
  uint64_t v19 = v17;
  os_log_type_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v20(v15, 0, 1, v19);
  sub_100012FA4(v15, v14);
  uint64_t v21 = v18 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_endDate;
  swift_beginAccess();
  sub_1000E5588(v14, v21);
  swift_endAccess();
  *(void *)(v0 + 520) = v20;
  uint64_t v22 = *(void *)(v0 + 456);
  uint64_t v23 = *(void *)(v0 + 360);
  sub_1000248D8(v87, v22, (uint64_t *)&unk_10015CDE0);
  if (v7(v22, 1, v23) == 1)
  {
    uint64_t v24 = *(void *)(v0 + 456);
    swift_release();
    uint64_t v25 = (uint64_t *)&unk_10015CDE0;
LABEL_11:
    sub_10000B9CC(v24, v25);
    goto LABEL_19;
  }
  uint64_t v26 = *(void *)(v0 + 448);
  uint64_t v27 = *(void *)(v0 + 360);
  uint64_t v28 = *(void *)(v0 + 328);
  uint64_t v29 = *(void (**)(void, void, uint64_t))(*(void *)(v0 + 368) + 32);
  v29(*(void *)(v0 + 432), *(void *)(v0 + 456), v27);
  uint64_t v30 = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_endDate;
  *(void *)(v0 + 528) = OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_endDate;
  uint64_t v31 = v28 + v30;
  swift_beginAccess();
  sub_1000248D8(v31, v26, (uint64_t *)&unk_10015CDE0);
  if (v7(v26, 1, v27) == 1)
  {
    uint64_t v32 = *(void *)(v0 + 448);
    (*(void (**)(void, void))(*(void *)(v0 + 368) + 8))(*(void *)(v0 + 432), *(void *)(v0 + 360));
    swift_release();
    sub_10000B9CC(v32, (uint64_t *)&unk_10015CDE0);
    goto LABEL_19;
  }
  uint64_t v85 = v31;
  uint64_t v24 = v0 + 16;
  uint64_t v33 = *(void *)(v0 + 328);
  v29(*(void *)(v0 + 424), *(void *)(v0 + 448), *(void *)(v0 + 360));
  sub_1000248D8(v33 + 16, v0 + 16, &qword_10015F950);
  if (!*(void *)(v0 + 40))
  {
    uint64_t v46 = *(void *)(v0 + 424);
    uint64_t v45 = *(void *)(v0 + 432);
    uint64_t v47 = *(void *)(v0 + 360);
    uint64_t v48 = *(void *)(v0 + 368);
    swift_release();
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v49(v46, v47);
    v49(v45, v47);
    uint64_t v25 = &qword_10015F950;
    goto LABEL_11;
  }
  uint64_t v84 = v20;
  uint64_t v86 = (void *)(v0 + 56);
  sub_10004BEA4((long long *)(v0 + 16), v0 + 56);
  if (qword_100158C88 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)(v0 + 440);
  uint64_t v35 = *(void *)(v0 + 360);
  uint64_t v36 = sub_100108F10();
  sub_100007CB8(v36, (uint64_t)qword_10016E148);
  sub_100109580();
  if (v7(v34, 1, v35) == 1)
  {
    uint64_t v37 = *(void *)(v0 + 432);
    uint64_t v38 = *(void *)(v0 + 440);
    uint64_t v39 = *(void *)(v0 + 424);
    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v40 = *(void *)(v0 + 368);
    swift_release();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v42(v39, v41);
    v42(v37, v41);
    sub_10000B9CC(v38, (uint64_t *)&unk_10015CDE0);
    sub_10000B7B0((uint64_t)v86);
LABEL_19:
    uint64_t v8 = sub_100109940();
    os_log_type_t v9 = sub_10010A2D0();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      uint64_t v11 = "endDate, healthManager, or minimumStartDate was nil";
      goto LABEL_21;
    }
LABEL_22:

LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v43 = *(uint64_t (**)(void))(v0 + 8);
    return v43();
  }
  uint64_t v50 = *(void *)(v0 + 352);
  uint64_t v52 = *(void *)(v0 + 336);
  uint64_t v51 = *(void *)(v0 + 344);
  v29(*(void *)(v0 + 416), *(void *)(v0 + 440), *(void *)(v0 + 360));
  (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v50, enum case for Calendar.Component.second(_:), v52);
  uint64_t v53 = sub_100109590();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  if ((unint64_t)(v53 + 1) > 1)
  {
    uint64_t v58 = *(void *)(v0 + 424);
    uint64_t v57 = *(void *)(v0 + 432);
    uint64_t v60 = *(void *)(v0 + 376);
    uint64_t v59 = *(void *)(v0 + 384);
    uint64_t v62 = *(void *)(v0 + 360);
    uint64_t v61 = *(void *)(v0 + 368);
    swift_release();
    unint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
    v63(v59, v57, v62);
    v63(v60, v58, v62);
    unint64_t v64 = sub_100109940();
    os_log_type_t v65 = sub_10010A2D0();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v67 = *(void *)(v0 + 424);
    uint64_t v83 = *(void *)(v0 + 432);
    uint64_t v68 = *(void *)(v0 + 416);
    uint64_t v70 = *(void *)(v0 + 376);
    uint64_t v69 = *(void *)(v0 + 384);
    uint64_t v71 = *(void *)(v0 + 360);
    uint64_t v72 = *(void *)(v0 + 368);
    if (v66)
    {
      uint64_t v82 = *(void *)(v0 + 416);
      uint64_t v73 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(_DWORD *)uint64_t v73 = 136315394;
      uint64_t v74 = sub_1001093A0();
      *(void *)(v0 + 312) = sub_1000C50D4(v74, v75, &v88);
      sub_10010A730();
      swift_bridgeObjectRelease();
      uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v76(v69, v71);
      *(_WORD *)(v73 + 12) = 2080;
      uint64_t v77 = sub_1001093A0();
      *(void *)(v0 + 288) = sub_1000C50D4(v77, v78, &v88);
      sub_10010A730();
      swift_bridgeObjectRelease();
      v76(v70, v71);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "The Mindfulness session duration was less than a minute, so it won't be logged into Health (start: %s, end: %s", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v76(v82, v71);
      v76(v67, v71);
      v76(v83, v71);
    }
    else
    {

      unint64_t v79 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v79(v70, v71);
      v79(v69, v71);
      v79(v68, v71);
      v79(v67, v71);
      v79(v83, v71);
    }
    uint64_t v80 = *(void *)(v0 + 472);
    uint64_t v81 = *(void *)(v0 + 360);
    v84(v80, 1, 1, v81);
    swift_beginAccess();
    sub_1000E5588(v80, v87);
    swift_endAccess();
    v84(v80, 1, 1, v81);
    swift_beginAccess();
    sub_1000E5588(v80, v85);
    swift_endAccess();
    sub_10000B7B0((uint64_t)v86);
    goto LABEL_23;
  }
  sub_10000B718(v86, *(void *)(v0 + 80));
  unint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v54;
  *unint64_t v54 = v0;
  v54[1] = sub_1000E4CEC;
  uint64_t v55 = *(void *)(v0 + 424);
  uint64_t v56 = *(void *)(v0 + 432);
  return sub_10000C554(v56, v55);
}

uint64_t sub_1000E4CEC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 504);
  uint64_t v3 = *(void *)(v1 + 496);
  return _swift_task_switch(sub_1000E4E0C, v3, v2);
}

uint64_t sub_1000E4E0C()
{
  Swift::String v44 = v0;
  uint64_t v1 = v0[53];
  uint64_t v41 = v0[54];
  uint64_t v3 = v0[50];
  uint64_t v2 = v0[51];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[45];
  uint64_t v6 = v0[46];
  uint64_t v7 = v0[40];
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8(v2, v7, v5);
  v8(v3, v1, v5);
  v8(v4, v41, v5);
  os_log_type_t v9 = sub_100109940();
  os_log_type_t v10 = sub_10010A2B0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v40 = v0[53];
    uint64_t v42 = v0[54];
    uint64_t v39 = v0[52];
    os_log_type_t type = v10;
    uint64_t v11 = v0[51];
    uint64_t v37 = v0[50];
    uint64_t v12 = v0[49];
    uint64_t v13 = v0[45];
    uint64_t v14 = v0[46];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = sub_1001093A0();
    v0[37] = sub_1000C50D4(v16, v17, &v43);
    sub_10010A730();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v18(v11, v13);
    *(_WORD *)(v15 + 12) = 2048;
    sub_1001093B0();
    v0[38] = v19;
    sub_10010A730();
    v18(v37, v13);
    v18(v12, v13);
    _os_log_impl((void *)&_mh_execute_header, v9, type, "Ended mindfulness session at %s and logged a mindfulness session for %f seconds", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v18(v39, v13);
    v18(v40, v13);
    v18(v42, v13);
  }
  else
  {
    uint64_t v21 = v0[53];
    uint64_t v20 = v0[54];
    uint64_t v23 = v0[51];
    uint64_t v22 = v0[52];
    uint64_t v25 = v0[49];
    uint64_t v24 = v0[50];
    uint64_t v26 = v0[45];
    uint64_t v27 = v0[46];

    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v28(v24, v26);
    v28(v25, v26);
    v28(v23, v26);
    v28(v22, v26);
    v28(v21, v26);
    v28(v20, v26);
  }
  uint64_t v29 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[65];
  uint64_t v30 = v0[59];
  uint64_t v31 = v0[45];
  uint64_t v32 = v0[41];
  uint64_t v33 = v32 + v0[66];
  uint64_t v34 = v32 + v0[64];
  v29(v30, 1, 1, v31);
  swift_beginAccess();
  sub_1000E5588(v30, v34);
  swift_endAccess();
  v29(v30, 1, 1, v31);
  swift_beginAccess();
  sub_1000E5588(v30, v33);
  swift_endAccess();
  sub_10000B7B0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_1000E52BC()
{
  sub_10000B9CC(v0 + 16, &qword_10015F950);
  sub_10000B9CC(v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_startDate, (uint64_t *)&unk_10015CDE0);
  sub_10000B9CC(v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_endDate, (uint64_t *)&unk_10015CDE0);
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_logger;
  uint64_t v2 = sub_100109960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC21JournalShareExtension18MindfulnessManager_calendar;
  uint64_t v4 = sub_1001095C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1000E5400()
{
  return type metadata accessor for MindfulnessManager();
}

uint64_t type metadata accessor for MindfulnessManager()
{
  uint64_t result = qword_10015F7D8;
  if (!qword_10015F7D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000E5454()
{
  sub_100012D38();
  if (v0 <= 0x3F)
  {
    sub_100109960();
    if (v1 <= 0x3F)
    {
      sub_1001095C0();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1000E5588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E55F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_10010AA00();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_1000E56F4, 0, 0);
}

uint64_t sub_1000E56F4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_10010AA20();
  uint64_t v5 = sub_1000E5F30(&qword_10015F980, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  sub_10010AD30();
  sub_1000E5F30(&qword_10015F988, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  sub_10010AA30();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1000E5894;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_1000E5894()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1000E5A50, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1000E5A50()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E5AC0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100109460() - 8);
  uint64_t v5 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  double v7 = v1[4];
  uint64_t v8 = *((void *)v1 + 5);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000090F0;
  return sub_1000E2E4C(v7, a1, v5, v6, v8, v9);
}

uint64_t sub_1000E5BC4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E5BFC()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000E5CC8(char a1)
{
  uint64_t v3 = *(void *)(sub_100109460() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1000E33F0(a1, v4, v5);
}

uint64_t sub_1000E5D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E5D4C()
{
  return swift_release();
}

uint64_t sub_1000E5D58()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000E5E2C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100109460() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000090F0;
  return sub_1000E3644(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1000E5F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E5F7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_1000091E4;
  return sub_1000E2114(a1, v4, v5, v6);
}

uint64_t sub_1000E6034(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_1000091E4;
  return sub_1000E174C(a1, v4, v5, v6);
}

Swift::Int sub_1000E60EC()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  double v4 = v0[3];
  uint64_t v5 = (void *)*((void *)v0 + 4);
  sub_10010ADC0();
  sub_1000E7960(v1, v2, v3, v4);
  if (v5)
  {
    sub_10010ADE0(1u);
    id v6 = v5;
    sub_10010A6B0();
  }
  else
  {
    sub_10010ADE0(0);
  }
  return sub_10010AE20();
}

void sub_1000E6188()
{
  double v1 = *(void **)(v0 + 32);
  sub_1000E7960(*(double *)v0, *(double *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24));
  if (v1)
  {
    sub_10010ADE0(1u);
    id v2 = v1;
    sub_10010A6B0();
  }
  else
  {
    sub_10010ADE0(0);
  }
}

Swift::Int sub_1000E6224()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  double v4 = v0[3];
  uint64_t v5 = (void *)*((void *)v0 + 4);
  sub_10010ADC0();
  sub_1000E7960(v1, v2, v3, v4);
  if (v5)
  {
    sub_10010ADE0(1u);
    id v6 = v5;
    sub_10010A6B0();
  }
  else
  {
    sub_10010ADE0(0);
  }
  return sub_10010AE20();
}

BOOL sub_1000E62BC(uint64_t a1, uint64_t a2)
{
  double v2 = *(void **)(a1 + 32);
  double v3 = *(void **)(a2 + 32);
  BOOL result = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  if (result)
  {
    if (v2)
    {
      if (v3)
      {
        sub_1000E79E0();
        id v5 = v3;
        id v6 = v2;
        char v7 = sub_10010A6A0();

        if (v7) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

id sub_1000E634C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_quoteAreas] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_barInset] = 0;
  *(void *)&v4[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_topInset] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for BlockQuoteLayerView();
  [super initWithFrame:a1, a2, a3, a4];
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 clearColor];
  [v11 setBackgroundColor:v12];

  [v11 setContentMode:5];
  return v11;
}

void sub_1000E6514(void *a1, CGFloat a2, double a3, CGFloat a4)
{
  sub_1001096B0();
  double v9 = v8;
  sub_1001096B0();
  double v11 = v10;
  id v12 = (double **)(v4 + OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_quoteAreas);
  swift_beginAccess();
  NSUInteger v13 = swift_bridgeObjectRetain();
  char v14 = sub_1000E7C08(v13, v9, v11);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = *v12;
    uint64_t v16 = *((void *)*v12 + 2);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      id v17 = a1;
      uint64_t v18 = (id *)(v15 + 8);
      while (1)
      {
        id v19 = *v18;
        CGFloat v21 = *((double *)v18 - 2);
        CGFloat v20 = *((double *)v18 - 1);
        CGFloat v23 = *((double *)v18 - 4);
        CGFloat v22 = *((double *)v18 - 3);
        id v24 = *v18;
        v39.origin.CGFloat x = v23;
        v39.origin.CGFloat y = v22;
        v39.size.CGFloat width = v21;
        v39.size.CGFloat height = v20;
        v40.origin.CGFloat x = a2;
        v40.origin.CGFloat y = v9;
        v40.size.CGFloat width = a4;
        v40.size.CGFloat height = v11;
        if (!CGRectEqualToRect(v39, v40)) {
          goto LABEL_4;
        }
        if (!v19)
        {
          if (!a1)
          {
LABEL_12:
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_5;
        }
        if (a1)
        {
          sub_1000E79E0();
          id v25 = v17;
          id v26 = v24;
          char v27 = sub_10010A6A0();

          if (v27) {
            goto LABEL_12;
          }
        }
        else
        {
LABEL_4:
        }
LABEL_5:
        v18 += 5;
        if (!--v16)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_15;
        }
      }
    }
    id v17 = a1;
LABEL_15:
    swift_beginAccess();
    uint64_t v28 = *v12;
    id v29 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *id v12 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v28 = sub_10009EA4C(0, *((void *)v28 + 2) + 1, 1, v28);
      *id v12 = v28;
    }
    unint64_t v32 = *((void *)v28 + 2);
    unint64_t v31 = *((void *)v28 + 3);
    if (v32 >= v31 >> 1)
    {
      uint64_t v28 = sub_10009EA4C((double *)(v31 > 1), v32 + 1, 1, v28);
      *id v12 = v28;
    }
    *((void *)v28 + 2) = v32 + 1;
    uint64_t v33 = &v28[5 * v32];
    v33[4] = a2;
    v33[5] = v9;
    v33[6] = a4;
    v33[7] = v11;
    *((void *)v33 + 8) = a1;
    uint64_t v34 = (uint64_t)*v12;
    swift_endAccess();
    uint64_t v38 = (double *)v34;
    swift_bridgeObjectRetain_n();
    sub_1000E6EF8((uint64_t *)&v38);
    swift_bridgeObjectRelease();
    *id v12 = v38;
    swift_bridgeObjectRelease();
    uint64_t v35 = (double *)swift_bridgeObjectRetain();
    sub_1000E7F1C(v35);
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    *id v12 = v37;

    swift_bridgeObjectRelease();
  }
}

void sub_1000E67F4(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v53 = sub_100109660();
  uint64_t v10 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (objc_class *)type metadata accessor for BlockQuoteLayerView();
  v54.receiver = v4;
  v54.super_class = v12;
  [super drawRect:a1, a2, a3, a4];
  NSUInteger v13 = UIGraphicsGetCurrentContext();
  if (v13)
  {
    char v14 = v13;
    CGContextSaveGState(v13);
    uint64_t v15 = &v5[OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_quoteAreas];
    swift_beginAccess();
    uint64_t v51 = v15;
    uint64_t v16 = *(void *)v15;
    uint64_t v50 = *(void *)(v16 + 16);
    if (v50)
    {
      id v17 = self;
      uint64_t v47 = OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_topInset;
      id v48 = v17;
      uint64_t v46 = OBJC_IVAR____TtC21JournalShareExtension19BlockQuoteLayerView_barInset;
      unsigned int v45 = enum case for CGPathFillRule.winding(_:);
      Swift::String v44 = (void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = (void (**)(char *, uint64_t))(v10 + 8);
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      unint64_t v19 = 0;
      uint64_t v49 = v16;
      do
      {
        BOOL v23 = 0;
        uint64_t v24 = v16 + v18;
        double v25 = *(double *)(v16 + v18 + 40);
        uint64_t v26 = *(void *)v51;
        unint64_t v27 = *(void *)(*(void *)v51 + 16);
        if (v18)
        {
          uint64_t v28 = &selRef_layoutAttributesForCellWithIndexPath_;
          if ((uint64_t)v19 <= (uint64_t)v27) {
            BOOL v23 = vabdd_f64(*(double *)(v26 + v18) + *(double *)(v26 + v18 + 16), v25) < 1.0;
          }
        }
        else
        {
          uint64_t v28 = &selRef_layoutAttributesForCellWithIndexPath_;
        }
        double v29 = *(double *)(v24 + 56);
        unint64_t v30 = v19 + 1;
        if (v19 >= v27 || v30 >= v27 || vabdd_f64(*(double *)(v26 + v18 + 80), v25 + v29) >= 1.0)
        {
          if (v23) {
            uint64_t v31 = -4;
          }
          else {
            uint64_t v31 = -1;
          }
        }
        else if (v23)
        {
          uint64_t v31 = -16;
        }
        else
        {
          uint64_t v31 = -13;
        }
        unint64_t v32 = *(void **)(v24 + 64);
        double v33 = v25 + *(double *)&v5[v47];
        double v34 = *(double *)&v5[v46];
        id v35 = v32;
        id v36 = [v48 bezierPathWithRoundedRect:v31 byRoundingCorners:v34 cornerRadii:v33 4.0 v29 2.0 2.0];
        uint64_t v37 = (const CGPath *)[v36 CGPath];

        CGContextAddPath(v14, v37);
        if (qword_100158938 != -1) {
          swift_once();
        }
        id v38 = [qword_10016DD30 v28[375] 0.45];
        if (v32)
        {
          CGRect v39 = v5;
          id v40 = v35;
          id v41 = [v40 v28[375] 0.45];

          id v5 = v39;
          id v38 = v41;
        }
        CGFloat v20 = (CGColor *)[v38 CGColor];
        CGContextSetFillColorWithColor(v14, v20);

        CGContextClosePath(v14);
        CGFloat v22 = v52;
        uint64_t v21 = v53;
        (*v44)(v52, v45, v53);
        sub_10010A240();

        (*v43)(v22, v21);
        v18 += 40;
        unint64_t v19 = v30;
        uint64_t v16 = v49;
      }
      while (v50 != v30);
      swift_bridgeObjectRelease();
    }
    CGContextRestoreGState(v14);
  }
}

id sub_1000E6C9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlockQuoteLayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for BlockQuoteLayerView()
{
  return self;
}

void destroy for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1)
{
}

uint64_t initializeWithCopy for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  id v5 = v4;
  return a1;
}

void *assignWithCopy for BlockQuoteLayerView.BlockQuoteArea(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  long long v3 = (void *)a1[4];
  uint64_t v4 = (void *)a2[4];
  a1[4] = v4;
  id v5 = v4;

  return a1;
}

uint64_t assignWithTake for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for BlockQuoteLayerView.BlockQuoteArea(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BlockQuoteLayerView.BlockQuoteArea(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)BOOL result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlockQuoteLayerView.BlockQuoteArea()
{
  return &type metadata for BlockQuoteLayerView.BlockQuoteArea;
}

unint64_t sub_1000E6EA4()
{
  unint64_t result = qword_10015F9F0;
  if (!qword_10015F9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F9F0);
  }
  return result;
}

Swift::Int sub_1000E6EF8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000C16F0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000E6F64(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000E6F64(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_10010AC50(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v93 = *a1;
      uint64_t v94 = *a1 + 72;
      uint64_t v95 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v97 = *(double *)(v93 + 40 * i + 8);
        uint64_t v98 = v95;
        uint64_t v99 = v94;
        do
        {
          if (v97 >= *(double *)(v99 - 64)) {
            break;
          }
          if (!v93) {
            goto LABEL_141;
          }
          uint64_t v100 = v99 - 32;
          NSString v101 = (_OWORD *)(v99 - 72);
          uint64_t v102 = *(void *)(v99 - 40);
          *(void *)(v99 - 40) = *(void *)v99;
          v99 -= 40;
          uint64_t v103 = *(void *)(v99 + 8);
          long long v104 = *(_OWORD *)(v99 + 24);
          long long v105 = v101[1];
          *(_OWORD *)uint64_t v100 = *v101;
          *(_OWORD *)(v100 + 16) = v105;
          *(void *)(v100 + 32) = v102;
          *(void *)(v99 - 32) = v103;
          *(double *)(v99 - 24) = v97;
          *(_OWORD *)(v99 - 16) = v104;
        }
        while (!__CFADD__(v98++, 1));
        v94 += 40;
        --v95;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  Class v116 = a1;
  if (v3 < 2)
  {
    double v9 = _swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
      id v12 = _swiftEmptyArrayStorage;
LABEL_103:
      id v107 = v12;
      double v118 = v9;
      if (v13 >= 2)
      {
        uint64_t v108 = *v116;
        do
        {
          unint64_t v109 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v108) {
            goto LABEL_145;
          }
          uint64_t v110 = v107;
          double v111 = v107[2 * v109 + 4];
          double v112 = v107[2 * v13 + 3];
          sub_1000E76A4((double *)(v108 + 40 * *(void *)&v111), (double *)(v108 + 40 * *(void *)&v107[2 * v13 + 2]), v108 + 40 * *(void *)&v112, __dst);
          if (v1) {
            break;
          }
          if (*(uint64_t *)&v112 < *(uint64_t *)&v111) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v110 = sub_1000C0C44((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_134;
          }
          uint64_t v113 = &v110[2 * v109 + 4];
          *uint64_t v113 = v111;
          v113[1] = v112;
          unint64_t v114 = *((void *)v110 + 2);
          if (v13 > v114) {
            goto LABEL_135;
          }
          memmove(&v110[2 * v13 + 2], &v110[2 * v13 + 4], 16 * (v114 - v13));
          id v107 = v110;
          *((void *)v110 + 2) = v114 - 1;
          unint64_t v13 = v114 - 1;
        }
        while (v114 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      void v118[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    double v118 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_100109F80();
    *(void *)(v8 + 16) = v7;
    double v118 = (double *)v8;
    __dst = (double *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v117 = *a1 + 88;
  uint64_t v115 = *a1 + 32;
  id v12 = _swiftEmptyArrayStorage;
  Swift::Int v119 = v6;
  Swift::Int v120 = v3;
  uint64_t v121 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 40 * v10 + 8);
      double v16 = *(double *)(v11 + 40 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        id v17 = (double *)(v117 + 40 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 5;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 40 * v10;
          uint64_t v21 = 40 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = *(void *)(v11 + v21 + 32);
              uint64_t v26 = v11 + v20;
              long long v27 = *(_OWORD *)(v11 + v21);
              long long v28 = *(_OWORD *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v20 - 8);
              long long v30 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v30;
              *(void *)(v24 + 32) = v29;
              *(_OWORD *)(v26 - 40) = v27;
              *(_OWORD *)(v26 - 24) = v28;
              *(void *)(v26 - 8) = v25;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v31 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v31 >= v3) {
      Swift::Int v31 = v3;
    }
    if (v31 < v14) {
      break;
    }
    if (v10 != v31)
    {
      uint64_t v32 = v115 + 40 * v10;
      do
      {
        double v33 = *(double *)(v11 + 40 * v10 + 8);
        Swift::Int v34 = v14;
        uint64_t v35 = v32;
        do
        {
          if (v33 >= *(double *)(v35 - 64)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v36 = v35 - 32;
          uint64_t v37 = (_OWORD *)(v35 - 72);
          uint64_t v38 = *(void *)(v35 - 40);
          *(void *)(v35 - 40) = *(void *)v35;
          v35 -= 40;
          uint64_t v39 = *(void *)(v35 + 8);
          long long v40 = *(_OWORD *)(v35 + 24);
          long long v41 = v37[1];
          *(_OWORD *)uint64_t v36 = *v37;
          *(_OWORD *)(v36 + 16) = v41;
          *(void *)(v36 + 32) = v38;
          *(void *)(v35 - 32) = v39;
          *(double *)(v35 - 24) = v33;
          *(_OWORD *)(v35 - 16) = v40;
          ++v34;
        }
        while (v10 != v34);
        ++v10;
        v32 += 40;
      }
      while (v10 != v31);
      Swift::Int v10 = v31;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v12 = sub_1000C073C(0, *((void *)v12 + 2) + 1, 1, (uint64_t)v12);
    }
    unint64_t v43 = *((void *)v12 + 2);
    unint64_t v42 = *((void *)v12 + 3);
    unint64_t v13 = v43 + 1;
    uint64_t v11 = v121;
    if (v43 >= v42 >> 1)
    {
      uint64_t v92 = sub_1000C073C((double *)(v42 > 1), v43 + 1, 1, (uint64_t)v12);
      uint64_t v11 = v121;
      id v12 = v92;
    }
    *((void *)v12 + 2) = v13;
    Swift::String v44 = v12 + 4;
    unsigned int v45 = &v12[2 * v43 + 4];
    *(void *)unsigned int v45 = v14;
    *((void *)v45 + 1) = v10;
    if (v43)
    {
      while (1)
      {
        unint64_t v46 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v51 = &v44[2 * v13];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_120;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_121;
          }
          unint64_t v58 = v13 - 2;
          uint64_t v59 = &v44[2 * v13 - 4];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_123;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_126;
          }
          if (v63 >= v54)
          {
            uint64_t v81 = &v44[2 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_130;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v75 = *((void *)v12 + 4);
            uint64_t v76 = *((void *)v12 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_77;
          }
          uint64_t v48 = *((void *)v12 + 4);
          uint64_t v47 = *((void *)v12 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_122;
        }
        unint64_t v58 = v13 - 2;
        unint64_t v64 = &v44[2 * v13 - 4];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_125;
        }
        uint64_t v70 = &v44[2 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_128;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_129;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_83:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v69) {
          goto LABEL_124;
        }
        uint64_t v77 = &v44[2 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_127;
        }
        if (v80 < v68) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v86 = v12;
        uint64_t v87 = &v44[2 * v85];
        uint64_t v88 = *(void *)v87;
        uint64_t v89 = &v44[2 * v46];
        double v90 = v89[1];
        sub_1000E76A4((double *)(v11 + 40 * *(void *)v87), (double *)(v11 + 40 * *(void *)v89), v11 + 40 * *(void *)&v90, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (*(uint64_t *)&v90 < v88) {
          goto LABEL_117;
        }
        if (v46 > *((void *)v86 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v87 = v88;
        v44[2 * v85 + 1] = v90;
        unint64_t v91 = *((void *)v86 + 2);
        if (v46 >= v91) {
          goto LABEL_119;
        }
        id v12 = v86;
        unint64_t v13 = v91 - 1;
        memmove(&v44[2 * v46], v89 + 2, 16 * (v91 - 1 - v46));
        *((void *)v86 + 2) = v91 - 1;
        uint64_t v11 = v121;
        if (v91 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v119;
    Swift::Int v3 = v120;
    if (v10 >= v120)
    {
      double v9 = v118;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_10010AA50();
  __break(1u);
  return result;
}

uint64_t sub_1000E76A4(double *__src, double *a2, unint64_t a3, double *__dst)
{
  int v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v29 = __src;
  long long v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[5 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      double v18 = &v4[5 * v11];
      long long v27 = (char *)v18;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v19 = a3 - 40;
        do
        {
          uint64_t v20 = (double *)(v19 + 40);
          if (*(v18 - 4) >= *(v6 - 4))
          {
            long long v27 = (char *)(v18 - 5);
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 5);
              long long v25 = *(_OWORD *)(v18 - 3);
              *(double *)(v19 + 32) = *(v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
              *(_OWORD *)(v19 + 16) = v25;
            }
            uint64_t v21 = v6;
            v18 -= 5;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 5;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              long long v22 = *(_OWORD *)v21;
              long long v23 = *(_OWORD *)(v6 - 3);
              *(double *)(v19 + 32) = *(v6 - 1);
              *(_OWORD *)unint64_t v19 = v22;
              *(_OWORD *)(v19 + 16) = v23;
            }
            uint64_t v29 = v6 - 5;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 40;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1000C0A34((void **)&v29, (const void **)&v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[5 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    id v12 = &v4[5 * v9];
    long long v27 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v6[1] >= v13[1])
        {
          int v4 = v13 + 5;
          double v15 = v13;
          Swift::Int v14 = v6;
          if (v7 == v13)
          {
            v13 += 5;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 5;
          }
        }
        else
        {
          Swift::Int v14 = v6 + 5;
          double v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        long long v17 = *((_OWORD *)v15 + 1);
        v7[4] = v15[4];
        *(_OWORD *)uint64_t v7 = v16;
        *((_OWORD *)v7 + 1) = v17;
LABEL_18:
        v7 += 5;
        if (v13 < v12)
        {
          Swift::Int v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        long long v28 = v4;
        uint64_t v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

void sub_1000E7960(double a1, double a2, double a3, double a4)
{
  CGRect v11 = CGRectStandardize(*(CGRect *)&a1);
  CGFloat y = v11.origin.y;
  CGFloat width = v11.size.width;
  CGFloat height = v11.size.height;
  if ((*(void *)&v11.origin.x & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    CGFloat x = v11.origin.x;
  }
  else {
    CGFloat x = 0.0;
  }
  sub_10010AE00(*(Swift::UInt64 *)&x);
  if ((*(void *)&y & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)&y;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  sub_10010AE00(v8);
  if ((*(void *)&width & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = *(void *)&width;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  sub_10010AE00(v9);
  if ((*(void *)&height & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = *(void *)&height;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  sub_10010AE00(v10);
}

unint64_t sub_1000E79E0()
{
  unint64_t result = qword_10015B8E0;
  if (!qword_10015B8E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015B8E0);
  }
  return result;
}

uint64_t sub_1000E7A20(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_10009EA18(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(_s30MOSuggestionAssetMapsClustererC7ClusterVMa() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

NSUInteger sub_1000E7C08(NSUInteger result, double a2, double a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    if (a2 > -9.22337204e18)
    {
      if (a2 >= 9.22337204e18)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if ((*(void *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&a3 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_35;
      }
      if (a3 <= -9.22337204e18)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (a3 >= 9.22337204e18)
      {
LABEL_37:
        __break(1u);
        return result;
      }
      NSUInteger v4 = (uint64_t)a2;
      int64_t v5 = (uint64_t)a3;
      uint64_t result = swift_bridgeObjectRetain();
      Swift::Int v6 = (double *)(result + 56);
      while (1)
      {
        double v7 = *(v6 - 2);
        if (v7 <= -9.22337204e18) {
          break;
        }
        if (v7 >= 9.22337204e18) {
          goto LABEL_29;
        }
        double v8 = *v6;
        if ((*(void *)&v7 & 0x7FF0000000000000) == 0x7FF0000000000000
          || (*(void *)v6 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_30;
        }
        if (v8 <= -9.22337204e18) {
          goto LABEL_31;
        }
        if (v8 >= 9.22337204e18) {
          goto LABEL_32;
        }
        v10.length = (uint64_t)v8;
        BOOL v11 = (uint64_t)v7 == v4 && v10.length == v5;
        if (v11
          || (v14.location = v4,
              v14.length = v5,
              v10.location = (uint64_t)v7,
              NSRange v12 = NSIntersectionRange(v14, v10),
              uint64_t result = v12.location,
              (uint64_t)v12.length >= v5))
        {
          uint64_t v13 = 1;
          goto LABEL_25;
        }
        v6 += 5;
        if (!--v3)
        {
          uint64_t v13 = 0;
LABEL_25:
          swift_bridgeObjectRelease();
          return v13;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
  return 0;
}

uint64_t sub_1000E7DA4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  NSUInteger v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    NSUInteger v4 = sub_10009EA4C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)v4 + 2);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = &v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= &v16[5 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = *((void *)v4 + 2);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *((void *)v4 + 2) = v18;
LABEL_20:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_10010AAD0();
  __break(1u);
  return result;
}

void sub_1000E7F1C(double *a1)
{
  uint64_t v77 = a1;
  unint64_t v1 = *((void *)a1 + 2);
  if (!v1)
  {
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v2 = a1 + 4;
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  uint64_t v72 = v2;
  while (1)
  {
    uint64_t v6 = v3 + 1;
    if (v3 + 1 >= v1) {
      goto LABEL_5;
    }
    uint64_t v7 = (double *)&v2[5 * v3];
    double v8 = *v7;
    double v9 = v7[1];
    double v10 = v7[2];
    double v11 = v7[3];
    NSRange v12 = (double *)&v2[5 * v6];
    double v13 = *v12;
    double v14 = v12[1];
    double v15 = v12[2];
    double v16 = v12[3];
    sub_10009DD68(*v12, v14, v15, v16, v8, v9, v10, v11);
    if (v17)
    {
      uint64_t v18 = v77;
      uint64_t v19 = *((void *)v77 + 2);
      if (v19)
      {
        CGFloat v20 = v77[4];
        CGFloat v21 = v77[5];
        CGFloat v22 = v77[6];
        CGFloat v23 = v77[7];
        swift_bridgeObjectRetain();
        v78.origin.CGFloat x = v20;
        v78.origin.CGFloat y = v21;
        v78.size.CGFloat width = v22;
        v78.size.CGFloat height = v23;
        v80.origin.CGFloat x = v8;
        v80.origin.CGFloat y = v9;
        v80.size.CGFloat width = v10;
        v80.size.CGFloat height = v11;
        if (CGRectEqualToRect(v78, v80))
        {
          uint64_t v5 = 0;
        }
        else
        {
          if (v19 == 1)
          {
LABEL_53:
            swift_bridgeObjectRelease();
            uint64_t v5 = v19;
LABEL_54:
            int64_t v4 = *((void *)v18 + 2);
            uint64_t v2 = v72;
            if (v4 < v5) {
              goto LABEL_78;
            }
            goto LABEL_4;
          }
          uint64_t v68 = v77 + 12;
          uint64_t v5 = 1;
          while (1)
          {
            v84.origin.CGFloat x = v8;
            v84.origin.CGFloat y = v9;
            v84.size.CGFloat width = v10;
            v84.size.CGFloat height = v11;
            if (CGRectEqualToRect(*(CGRect *)(v68 - 3), v84)) {
              break;
            }
            uint64_t v69 = v5 + 1;
            if (__OFADD__(v5, 1)) {
              goto LABEL_71;
            }
            ++v5;
            v68 += 5;
            if (v69 == v19) {
              goto LABEL_53;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_83;
        }
        if (v24 != v19)
        {
          uint64_t v25 = 40 * v5 + 104;
          unint64_t v26 = v5 + 1;
          while ((v24 & 0x8000000000000000) == 0)
          {
            if (v26 >= *((void *)v18 + 2)) {
              goto LABEL_67;
            }
            long long v28 = (char *)v18 + v25;
            v81.origin.CGFloat x = v8;
            v81.origin.CGFloat y = v9;
            v81.size.CGFloat width = v10;
            v81.size.CGFloat height = v11;
            if (!CGRectEqualToRect(*(CGRect *)((char *)v18 + v25 - 32), v81))
            {
              if (v26 != v5)
              {
                if (v5 < 0) {
                  goto LABEL_72;
                }
                unint64_t v29 = *((void *)v18 + 2);
                if (v5 >= v29) {
                  goto LABEL_73;
                }
                if (v26 >= v29) {
                  goto LABEL_74;
                }
                uint64_t v30 = (uint64_t)&v18[5 * v5 + 4];
                long long v73 = *(_OWORD *)(v30 + 16);
                long long v75 = *(_OWORD *)v30;
                Swift::Int v31 = *(void **)(v30 + 32);
                uint64_t v32 = *((void *)v28 - 4);
                uint64_t v33 = *((void *)v28 - 3);
                uint64_t v34 = *((void *)v28 - 2);
                uint64_t v35 = *((void *)v28 - 1);
                uint64_t v36 = *(void **)((char *)v18 + v25);
                id v37 = v36;
                id v38 = v31;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v18 = sub_1000C72DC((uint64_t)v18);
                }
                uint64_t v39 = &v18[5 * v5];
                long long v40 = (void *)*((void *)v39 + 8);
                *((void *)v39 + 4) = v32;
                *((void *)v39 + 5) = v33;
                *((void *)v39 + 6) = v34;
                *((void *)v39 + 7) = v35;
                *((void *)v39 + 8) = v36;

                if (v26 >= *((void *)v18 + 2)) {
                  goto LABEL_75;
                }
                long long v41 = (void *)((char *)v18 + v25);
                unint64_t v42 = *(void **)((char *)v18 + v25);
                *((_OWORD *)v41 - 2) = v75;
                *((_OWORD *)v41 - 1) = v73;
                void *v41 = v31;

                uint64_t v77 = v18;
              }
              BOOL v27 = __OFADD__(v5++, 1);
              if (v27) {
                goto LABEL_68;
              }
            }
            ++v26;
            v25 += 40;
            if (v26 == *((void *)v18 + 2)) {
              goto LABEL_54;
            }
          }
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        goto LABEL_54;
      }
      goto LABEL_3;
    }
    sub_10009DD68(v8, v9, v10, v11, v13, v14, v15, v16);
    if ((v43 & 1) == 0) {
      goto LABEL_5;
    }
    Swift::String v44 = v77;
    uint64_t v45 = *((void *)v77 + 2);
    if (v45) {
      break;
    }
LABEL_3:
    int64_t v4 = 0;
    uint64_t v5 = 0;
LABEL_4:
    sub_1000E7DA4(v5, v4);
LABEL_5:
    uint64_t v3 = v6;
    if (v6 == v1) {
      goto LABEL_64;
    }
  }
  CGFloat v46 = v77[4];
  CGFloat v47 = v77[5];
  CGFloat v48 = v77[6];
  CGFloat v49 = v77[7];
  swift_bridgeObjectRetain();
  v79.origin.CGFloat x = v46;
  v79.origin.CGFloat y = v47;
  v79.size.CGFloat width = v48;
  v79.size.CGFloat height = v49;
  v82.origin.CGFloat x = v13;
  v82.origin.CGFloat y = v14;
  v82.size.CGFloat width = v15;
  v82.size.CGFloat height = v16;
  if (CGRectEqualToRect(v79, v82))
  {
    uint64_t v5 = 0;
    goto LABEL_31;
  }
  if (v45 == 1)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    uint64_t v5 = v45;
    goto LABEL_62;
  }
  uint64_t v70 = v77 + 12;
  uint64_t v5 = 1;
  while (1)
  {
    v85.origin.CGFloat x = v13;
    v85.origin.CGFloat y = v14;
    v85.size.CGFloat width = v15;
    v85.size.CGFloat height = v16;
    if (CGRectEqualToRect(*(CGRect *)(v70 - 3), v85)) {
      break;
    }
    uint64_t v71 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_77;
    }
    ++v5;
    v70 += 5;
    if (v71 == v45) {
      goto LABEL_61;
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v50 = v5 + 1;
  if (__OFADD__(v5, 1)) {
    goto LABEL_84;
  }
  if (v50 == v45)
  {
LABEL_62:
    int64_t v4 = *((void *)v44 + 2);
    uint64_t v2 = v72;
    if (v4 < v5)
    {
      __break(1u);
LABEL_64:
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_4;
  }
  uint64_t v51 = 40 * v5 + 104;
  unint64_t v52 = v5 + 1;
  while ((v50 & 0x8000000000000000) == 0)
  {
    if (v52 >= *((void *)v44 + 2)) {
      goto LABEL_70;
    }
    uint64_t v55 = (char *)v44 + v51;
    v83.origin.CGFloat x = v13;
    v83.origin.CGFloat y = v14;
    v83.size.CGFloat width = v15;
    v83.size.CGFloat height = v16;
    if (!CGRectEqualToRect(*(CGRect *)((char *)v44 + v51 - 32), v83))
    {
      if (v52 != v5)
      {
        if (v5 < 0) {
          goto LABEL_79;
        }
        unint64_t v56 = *((void *)v44 + 2);
        if (v5 >= v56) {
          goto LABEL_80;
        }
        if (v52 >= v56) {
          goto LABEL_81;
        }
        uint64_t v57 = (uint64_t)&v44[5 * v5 + 4];
        long long v74 = *(_OWORD *)(v57 + 16);
        long long v76 = *(_OWORD *)v57;
        unint64_t v58 = *(void **)(v57 + 32);
        uint64_t v59 = *((void *)v55 - 4);
        uint64_t v60 = *((void *)v55 - 3);
        uint64_t v61 = *((void *)v55 - 2);
        uint64_t v62 = *((void *)v55 - 1);
        uint64_t v63 = *(void **)((char *)v44 + v51);
        id v64 = v63;
        id v65 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v44 = sub_1000C72DC((uint64_t)v44);
        }
        uint64_t v66 = &v44[5 * v5];
        BOOL v67 = (void *)*((void *)v66 + 8);
        *((void *)v66 + 4) = v59;
        *((void *)v66 + 5) = v60;
        *((void *)v66 + 6) = v61;
        *((void *)v66 + 7) = v62;
        *((void *)v66 + 8) = v63;

        if (v52 >= *((void *)v44 + 2)) {
          goto LABEL_82;
        }
        uint64_t v53 = (void *)((char *)v44 + v51);
        uint64_t v54 = *(void **)((char *)v44 + v51);
        *((_OWORD *)v53 - 2) = v76;
        *((_OWORD *)v53 - 1) = v74;
        *uint64_t v53 = v58;

        uint64_t v77 = v44;
      }
      BOOL v27 = __OFADD__(v5++, 1);
      if (v27) {
        goto LABEL_76;
      }
    }
    ++v52;
    v51 += 40;
    if (v52 == *((void *)v44 + 2)) {
      goto LABEL_62;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
}

uint64_t sub_1000E8454()
{
  return sub_10010A350();
}

uint64_t sub_1000E86F8(uint64_t a1)
{
  sub_1000248D8(a1, (uint64_t)v20, &qword_10015A8A0);
  uint64_t v3 = v21;
  if (v21)
  {
    int64_t v4 = sub_10000B718(v20, v21);
    uint64_t v5 = *(void *)(v3 - 8);
    __chkstk_darwin(v4);
    uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_10010AC90();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
    sub_10000B7B0((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = 0;
  }
  double v9 = (objc_class *)_s16MultiPinMapAssetCMa();
  v19.receiver = v1;
  v19.super_class = v9;
  unsigned int v10 = [super isEqual:v8];
  swift_unknownObjectRelease();
  if (!v10) {
    goto LABEL_17;
  }
  sub_1000248D8(a1, (uint64_t)v20, &qword_10015A8A0);
  if (!v21)
  {
    sub_10000B9CC((uint64_t)v20, &qword_10015A8A0);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    char v16 = 0;
    return v16 & 1;
  }
  double v11 = (char *)v18[1];
  if (!*(void *)&v1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), NSRange v12 = (double *)sub_10002530C(), swift_release(), v12 == (double *)1)
    || (uint64_t v13 = swift_bridgeObjectRetain(), sub_10002E774(v13), !v12))
  {
    swift_bridgeObjectRelease();
    NSRange v12 = _swiftEmptyArrayStorage;
  }
  if (!*(void *)&v11[OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata]
    || (swift_retain(), double v14 = (double *)sub_10002530C(), swift_release(), v14 == (double *)1)
    || (uint64_t v15 = swift_bridgeObjectRetain(), sub_10002E774(v15), !v14))
  {
    swift_bridgeObjectRelease();
    double v14 = _swiftEmptyArrayStorage;
  }
  char v16 = sub_1000E8C90((uint64_t)v12, (uint64_t)v14);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

id sub_1000E89B4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_10010AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10010AA80();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)sub_10010A920())
  {
    double v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)sub_10010A920();
LABEL_22:
    uint64_t v13 = v12;
    _s5AssetCMa();
    char v14 = sub_10010A6A0();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)sub_10010A920();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        objc_super v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)sub_10010A920();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = sub_10010A6A0();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        BOOL v27 = *v25++;
        unint64_t v26 = v27;
        long long v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_10010A6A0();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E8C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  unsigned int v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_10006A6C8(a1 + v12, (uint64_t)v10);
        sub_10006A6C8(a2 + v12, (uint64_t)v7);
        char v15 = sub_10006AE24((uint64_t)v10, v7);
        sub_10006A72C((uint64_t)v7);
        sub_10006A72C((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1000E8E70(void *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  v13[1] = a5;
  _OWORD v13[2] = a3;
  uint64_t v8 = sub_100004BD4(&qword_10015FAC0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000EB2A8();
  sub_10010AE60();
  uint64_t v17 = a2;
  char v16 = 0;
  sub_100004BD4(&qword_10015FAB0);
  sub_1000EB2FC(&qword_10015FAC8, &qword_10015BBD8);
  sub_10010AC00();
  if (!v5)
  {
    char v15 = 1;
    sub_10010ABD0();
    char v14 = 2;
    sub_10010ABF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000E9064()
{
  uint64_t v1 = 0x6D696C537369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F697369766572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6144737469736976;
  }
}

uint64_t sub_1000E90C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000EAED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000E90E8(uint64_t a1)
{
  unint64_t v2 = sub_1000EB2A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000E9124(uint64_t a1)
{
  unint64_t v2 = sub_1000EB2A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000E9160@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000EB02C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1000E919C(void *a1)
{
  return sub_1000E8E70(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1000E91C4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata))
  {
    swift_retain();
    uint64_t v3 = sub_10002530C();
    char v5 = v4;
    a1 = swift_release();
    if (v3 != 1)
    {
      a1 = sub_10002E774(v3);
      if (v5) {
        return 1;
      }
    }
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v7 = v6;
  sub_100004BD4(&qword_10015A8C8);
  sub_10010A4B0();

  return v9 & 1;
}

uint64_t sub_1000E92F0()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A3A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata;
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  uint64_t v5 = sub_10002530C();
  swift_release();
  if (v5 == 1) {
    return 0;
  }
  if (!v5
    || !*(void *)(v5 + 16)
    || (uint64_t v7 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8),
        uint64_t v8 = (uint64_t *)(v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))),
        (uint64_t v9 = v8[1]) == 0)
    || !*(void *)(v0 + v4))
  {
LABEL_15:
    sub_100004BD4(&qword_100159730);
    uint64_t inited = swift_initStackObject();
    uint64_t v17 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_100122220;
    if (v5)
    {
      if (*(void *)(v5 + 16))
      {
        uint64_t v18 = *(void *)(_s10VisitAssetC9VisitDataVMa(0) - 8);
        uint64_t v19 = *(void *)(v5
                        + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
        uint64_t v20 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
      }
      v17[4] = v19;
      v17[5] = v20;
      uint64_t v22 = *(void *)(v5 + 16);
      uint64_t v23 = _s10VisitAssetC9VisitDataVMa(0);
      uint64_t v24 = *(void *)(v23 - 8);
      if (v22)
      {
        sub_10006A6C8(v5+ ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80)), (uint64_t)v3);
        uint64_t v25 = 0;
      }
      else
      {
        uint64_t v25 = 1;
      }
      uint64_t v21 = v17 + 6;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v3, v25, 1, v23);
      sub_10002E774(v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v3, 1, v23) != 1)
      {
        uint64_t v27 = *((void *)v3 + 2);
        uint64_t v26 = *((void *)v3 + 3);
        swift_bridgeObjectRetain();
        sub_10006A72C((uint64_t)v3);
        *uint64_t v21 = v27;
        goto LABEL_27;
      }
      sub_10000B9CC((uint64_t)v3, &qword_10015A3A0);
    }
    else
    {
      uint64_t v21 = (void *)(inited + 48);
      *(void *)(inited + 32) = 0;
      *(void *)(inited + 40) = 0;
    }
    uint64_t v26 = 0;
    *uint64_t v21 = 0;
LABEL_27:
    v17[7] = v26;
    uint64_t v6 = sub_100042280(8236, 0xE200000000000000, (uint64_t)v17);
    swift_setDeallocating();
    sub_100004BD4(&qword_100159738);
    swift_arrayDestroy();
    return v6;
  }
  uint64_t v29 = *v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_10002530C();
  int v30 = v11;
  swift_release();
  if (v10 == 1
    || (uint64_t v12 = swift_bridgeObjectRetain(), sub_10002E774(v12), !v10)
    || (unint64_t v13 = *(void *)(v10 + 16), swift_bridgeObjectRelease(), v13 < 2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_10002E774(v5);
  if (qword_100158A00 != -1) {
    swift_once();
  }
  sub_100004BD4(&qword_10015A190);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100122220;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v15 = sub_100094324();
  *(void *)(v14 + 32) = v29;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 96) = &type metadata for Int;
  *(void *)(v14 + 104) = &protocol witness table for Int;
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = v13 - 1;
  uint64_t v6 = sub_100109D00();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_1000E973C(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for MultiPinMapThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  id v15 = a6;
  char v16 = (char *)v13;
  uint64_t v17 = sub_1000F2CE4();
  uint64_t v18 = &v16[qword_10016DED0];
  *(void *)uint64_t v18 = v17;
  *((void *)v18 + 1) = v19;
  *((void *)v18 + 2) = v20;
  v18[24] = v21;

  return sub_1000F780C(v14, a1, a2, v12, a4, a5, v15);
}

uint64_t sub_1000E9800(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = sub_1001094F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id, v7);
  id v11 = [a3 userInterfaceStyle];
  if (*(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata))
  {
    uint64_t v22 = a1;
    char v12 = a2;
    swift_retain();
    uint64_t v13 = sub_10002530C();
    uint64_t v15 = v14;
    char v17 = v16;
    swift_release();
    if (v13 == 1)
    {
      uint64_t v15 = 0;
      char v18 = 1;
    }
    else
    {
      char v18 = v17 & 1;
      sub_10002E774(v13);
    }
    a2 = v12;
    a1 = v22;
  }
  else
  {
    uint64_t v15 = 0;
    char v18 = 1;
  }
  uint64_t v19 = sub_10007AEE8((uint64_t)v10, a1, (uint64_t)v11, 0, v15, v18, a2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v19;
}

uint64_t sub_1000E99D0()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1000E9A10()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16MultiPinMapAssetCMa();
  [super dealloc];
}

uint64_t sub_1000E9A94()
{
  return _s16MultiPinMapAssetCMa();
}

uint64_t _s16MultiPinMapAssetCMa()
{
  uint64_t result = qword_10015FA20;
  if (!qword_10015FA20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E9AE8()
{
  return swift_updateClassMetadata2();
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 _s16MultiPinMapAssetC15MultiPinMapDataVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16MultiPinMapAssetC15MultiPinMapDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataVMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataVN;
}

uint64_t sub_1000E9D04()
{
  return swift_retain();
}

uint64_t sub_1000E9D14(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000E9D2C()
{
  return sub_1000E92F0();
}

int *sub_1000E9D50(uint64_t a1)
{
  uint64_t v135 = a1;
  uint64_t v1 = sub_100109520();
  __chkstk_darwin(v1 - 8);
  uint64_t v134 = (char *)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100109CE0();
  __chkstk_darwin(v3 - 8);
  uint64_t v133 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100004BD4(&qword_10015FA70);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v131 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100004BD4(&qword_10015FA78);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v126 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_10015FA80);
  uint64_t v130 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v127 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100109880();
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v121 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100109460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::Int v137 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  char v16 = (char *)&v121 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v136 = (char *)&v121 - v18;
  __chkstk_darwin(v17);
  uint64_t v141 = (char *)&v121 - v19;
  v159 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v20 = *((void *)v159 - 1);
  uint64_t v21 = __chkstk_darwin(v159);
  uint64_t v138 = (uint64_t *)((char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v142 = (uint64_t)&v121 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char **)((char *)&v121 - v25);
  uint64_t v27 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v140 = (uint64_t)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  BOOL v152 = (char *)&v121 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v121 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v151 = (uint64_t)&v121 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v121 - v38;
  uint64_t v144 = (uint64_t)&v121 - v38;
  __chkstk_darwin(v37);
  uint64_t v143 = (uint64_t)&v121 - v40;
  long long v41 = *(void (**)(void))(v11 + 56);
  v41();
  Swift::String_optional v145 = v41;
  uint64_t v146 = v11 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41)(v39, 1, 1, v10);
  uint64_t v42 = *(void *)(v135 + 16);
  uint64_t v132 = v7;
  if (!v42)
  {
    uint64_t v96 = _swiftEmptyArrayStorage;
    char v147 = _swiftEmptyArrayStorage;
    uint64_t v91 = v125;
    uint64_t v92 = v124;
    uint64_t v93 = v123;
    uint64_t v94 = v122;
    uint64_t v95 = v121;
    goto LABEL_48;
  }
  uint64_t v43 = v135 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v44 = *(void *)(v20 + 72);
  uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v149 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v150 = v44;
  uint64_t v139 = (void (**)(char *, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  uint64_t v46 = v43;
  char v147 = _swiftEmptyArrayStorage;
  uint64_t v154 = v26;
  v155 = _swiftEmptyArrayStorage;
  uint64_t v153 = v16;
  uint64_t v47 = (uint64_t)v152;
  uint64_t v157 = v34;
  uint64_t v158 = v45;
  CGFloat v48 = v16;
  do
  {
    uint64_t v156 = v46;
    sub_10006A6C8(v46, (uint64_t)v26);
    uint64_t v49 = v26[1];
    if (v49)
    {
      uint64_t v50 = *v26;
      swift_bridgeObjectRetain();
      uint64_t v51 = (char *)v155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v51 = sub_10009E5BC(0, *((void *)v51 + 2) + 1, 1, v51);
      }
      unint64_t v53 = *((void *)v51 + 2);
      unint64_t v52 = *((void *)v51 + 3);
      if (v53 >= v52 >> 1) {
        uint64_t v51 = sub_10009E5BC((char *)(v52 > 1), v53 + 1, 1, v51);
      }
      *((void *)v51 + 2) = v53 + 1;
      v155 = (double *)v51;
      uint64_t v54 = &v51[16 * v53];
      *((void *)v54 + 4) = v50;
      *((void *)v54 + 5) = v49;
      CGFloat v48 = v153;
      uint64_t v34 = v157;
      uint64_t v45 = v158;
    }
    uint64_t v55 = (char *)v26 + v159[13];
    unint64_t v56 = *((void *)v55 + 1);
    if (v56 >> 60 != 15)
    {
      uint64_t v57 = *(void *)v55;
      sub_100006F28(*(void *)v55, *((void *)v55 + 1));
      unint64_t v58 = (void *)sub_1000E8454();
      sub_100008508(v57, v56);
      if (!v58)
      {
        uint64_t v34 = v157;
        uint64_t v45 = v158;
        goto LABEL_30;
      }
      id v59 = [v58 _addressFormattedAsSinglelineAddress];
      if (v59)
      {
        uint64_t v60 = v59;
        uint64_t v61 = sub_100109D30();
        uint64_t v63 = v62;

        uint64_t v64 = v142;
        sub_10006A6C8((uint64_t)v26, v142);
        id v65 = v138;
        if (v63)
        {
          uint64_t v66 = v64;
LABEL_21:
          sub_10006A72C(v66);
          goto LABEL_24;
        }
      }
      else
      {
        sub_10006A6C8((uint64_t)v26, v142);
        id v65 = v138;
      }
      id v67 = [v58 name];
      if (v67)
      {
        uint64_t v68 = v67;
        uint64_t v61 = sub_100109D30();
        uint64_t v63 = v69;

        sub_10006BC10(v142, (uint64_t)v65);
        uint64_t v34 = v157;
        uint64_t v45 = v158;
        if (v63)
        {
          uint64_t v66 = (uint64_t)v65;
          goto LABEL_21;
        }
      }
      else
      {
        sub_10006BC10(v142, (uint64_t)v65);
        uint64_t v34 = v157;
        uint64_t v45 = v158;
      }
      uint64_t v61 = *v65;
      uint64_t v63 = v65[1];
      swift_bridgeObjectRetain();
      sub_10006A72C((uint64_t)v65);
      if (!v63)
      {
LABEL_29:

        CGFloat v48 = v153;
        goto LABEL_30;
      }
LABEL_24:
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v70 = (char *)v147;
      }
      else {
        uint64_t v70 = sub_10009E5BC(0, *((void *)v147 + 2) + 1, 1, (char *)v147);
      }
      unint64_t v72 = *((void *)v70 + 2);
      unint64_t v71 = *((void *)v70 + 3);
      if (v72 >= v71 >> 1) {
        uint64_t v70 = sub_10009E5BC((char *)(v71 > 1), v72 + 1, 1, v70);
      }
      *((void *)v70 + 2) = v72 + 1;
      char v147 = (double *)v70;
      long long v73 = &v70[16 * v72];
      *((void *)v73 + 4) = v61;
      *((void *)v73 + 5) = v63;
      uint64_t v34 = v157;
      uint64_t v45 = v158;
      goto LABEL_29;
    }
LABEL_30:
    uint64_t v74 = v151;
    sub_1000248D8((uint64_t)v26 + v159[7], v151, (uint64_t *)&unk_10015CDE0);
    long long v75 = *v45;
    if ((*v45)(v74, 1, v10) == 1)
    {
      sub_10000B9CC(v74, (uint64_t *)&unk_10015CDE0);
    }
    else
    {
      uint64_t v148 = v42;
      long long v76 = *v149;
      uint64_t v77 = v141;
      (*v149)(v141, v74, v10);
      uint64_t v78 = v143;
      sub_1000248D8(v143, (uint64_t)v34, (uint64_t *)&unk_10015CDE0);
      if (v75((uint64_t)v34, 1, v10) == 1)
      {
        sub_10000B9CC(v78, (uint64_t *)&unk_10015CDE0);
        sub_10000B9CC((uint64_t)v34, (uint64_t *)&unk_10015CDE0);
        v76((char *)v78, (uint64_t)v77, v10);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v145)(v78, 0, 1, v10);
        uint64_t v45 = v158;
        uint64_t v42 = v148;
        uint64_t v26 = v154;
        uint64_t v47 = (uint64_t)v152;
      }
      else
      {
        CGRect v79 = v136;
        v76(v136, (uint64_t)v34, v10);
        char v80 = sub_1001093F0();
        CGRect v81 = *v139;
        (*v139)(v79, v10);
        if (v80)
        {
          uint64_t v82 = v143;
          sub_10000B9CC(v143, (uint64_t *)&unk_10015CDE0);
          v76((char *)v82, (uint64_t)v77, v10);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v145)(v82, 0, 1, v10);
        }
        else
        {
          v81(v77, v10);
        }
        uint64_t v47 = (uint64_t)v152;
        CGFloat v48 = v153;
        uint64_t v34 = v157;
        uint64_t v45 = v158;
        uint64_t v42 = v148;
        uint64_t v26 = v154;
      }
    }
    sub_1000248D8((uint64_t)v26 + v159[8], v47, (uint64_t *)&unk_10015CDE0);
    if (v75(v47, 1, v10) == 1)
    {
      sub_10006A72C((uint64_t)v26);
      sub_10000B9CC(v47, (uint64_t *)&unk_10015CDE0);
    }
    else
    {
      CGRect v83 = *v149;
      (*v149)(v48, v47, v10);
      uint64_t v84 = v144;
      uint64_t v85 = v140;
      sub_1000248D8(v144, v140, (uint64_t *)&unk_10015CDE0);
      if (v75(v85, 1, v10) == 1)
      {
        uint64_t v86 = (uint64_t)v154;
        sub_10006A72C((uint64_t)v154);
        sub_10000B9CC(v84, (uint64_t *)&unk_10015CDE0);
        sub_10000B9CC(v85, (uint64_t *)&unk_10015CDE0);
        v83((char *)v84, (uint64_t)v48, v10);
        uint64_t v26 = (void *)v86;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v145)(v84, 0, 1, v10);
        uint64_t v47 = (uint64_t)v152;
        uint64_t v34 = v157;
        uint64_t v45 = v158;
      }
      else
      {
        uint64_t v87 = v137;
        v83(v137, v85, v10);
        char v88 = sub_1001093E0();
        uint64_t v89 = *v139;
        (*v139)(v87, v10);
        sub_10006A72C((uint64_t)v154);
        if (v88)
        {
          uint64_t v90 = v144;
          sub_10000B9CC(v144, (uint64_t *)&unk_10015CDE0);
          v83((char *)v90, (uint64_t)v48, v10);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v145)(v90, 0, 1, v10);
        }
        else
        {
          v89(v48, v10);
        }
        uint64_t v47 = (uint64_t)v152;
        uint64_t v34 = v157;
        uint64_t v45 = v158;
        uint64_t v26 = v154;
      }
    }
    uint64_t v46 = v156 + v150;
    --v42;
  }
  while (v42);
  swift_bridgeObjectRelease();
  uint64_t v91 = v125;
  uint64_t v92 = v124;
  uint64_t v93 = v123;
  uint64_t v94 = v122;
  uint64_t v95 = v121;
  uint64_t v96 = v155;
LABEL_48:
  sub_100109780();
  id v97 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class isa = sub_1001097B0().super.isa;
  v159 = (int *)[v97 initWithContentType:isa];

  (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v93);
  uint64_t v160 = v96;
  uint64_t v99 = v128;
  uint64_t v100 = v126;
  uint64_t v101 = v129;
  (*(void (**)(char *, void, uint64_t))(v128 + 104))(v126, enum case for ListFormatStyle.ListType.and<A, B>(_:), v129);
  uint64_t v102 = v131;
  (*(void (**)(char *, void, uint64_t))(v92 + 104))(v131, enum case for ListFormatStyle.Width.narrow<A, B>(_:), v91);
  sub_100004BD4((uint64_t *)&unk_10015F2A0);
  sub_10002E5E0(&qword_10015FA88, (uint64_t *)&unk_10015F2A0);
  uint64_t v103 = v127;
  sub_100108CF0();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v102, v91);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
  sub_10002E5E0(&qword_10015FA90, &qword_10015FA80);
  uint64_t v104 = v132;
  sub_100109EB0();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v103, v104);
  swift_bridgeObjectRelease();
  uint64_t v105 = v161;
  unint64_t v106 = v162;
  uint64_t v160 = v147;
  sub_10002E5E0((unint64_t *)&qword_10015A188, (uint64_t *)&unk_10015F2A0);
  uint64_t v107 = sub_100109C30();
  unint64_t v109 = v108;
  swift_bridgeObjectRelease();
  uint64_t v110 = v107;
  double v111 = v159;
  sub_100083154(v105, v106, v110, v109);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100109C80();
  sub_100109510();
  uint64_t v112 = sub_100109D60();
  uint64_t v114 = v113;
  sub_100004BD4((uint64_t *)&unk_10015F2B0);
  uint64_t v115 = swift_allocObject();
  *(_OWORD *)(v115 + 16) = xmmword_100122230;
  uint64_t v116 = v112;
  uint64_t v117 = v143;
  *(void *)(v115 + 32) = sub_100084A54(v116, v114, v143);
  *(void *)(v115 + 40) = v118;
  Class v119 = sub_100109F20().super.isa;
  swift_bridgeObjectRelease();
  [v111 setAlternateNames:v119];
  swift_bridgeObjectRelease();

  sub_10000B9CC(v144, (uint64_t *)&unk_10015CDE0);
  sub_10000B9CC(v117, (uint64_t *)&unk_10015CDE0);
  return v111;
}

int *sub_1000EADD8()
{
  if (!*(void *)(*v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata)) {
    return 0;
  }
  swift_retain();
  unint64_t v1 = sub_10002530C();
  swift_release();
  if (v1 <= 1) {
    return 0;
  }
  uint64_t v3 = sub_1000E9D50(v1);
  sub_10002E774(v1);
  return v3;
}

unint64_t sub_1000EAE7C()
{
  unint64_t result = qword_10015FA30;
  if (!qword_10015FA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FA30);
  }
  return result;
}

uint64_t sub_1000EAED0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144737469736976 && a2 == 0xEA00000000006174;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D696C537369 && a2 == 0xE600000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000EB02C(void *a1)
{
  uint64_t v3 = sub_100004BD4(&qword_10015FAA0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10000B718(a1, v7);
  sub_1000EB2A8();
  sub_10010AE50();
  if (v1)
  {
    sub_10000B7B0((uint64_t)a1);
  }
  else
  {
    sub_100004BD4(&qword_10015FAB0);
    v9[15] = 0;
    sub_1000EB2FC(&qword_10015FAB8, &qword_10015A3A8);
    sub_10010AB60();
    uint64_t v7 = v10;
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_10010AB30();
    v9[13] = 2;
    sub_10010AB50();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_10000B7B0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1000EB2A8()
{
  unint64_t result = qword_10015FAA8;
  if (!qword_10015FAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FAA8);
  }
  return result;
}

uint64_t sub_1000EB2FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(&qword_10015FAB0);
    sub_1000EB37C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EB37C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EB3C0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003A62C(*(void *)(v1 + 16), a1);
}

unsigned char *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EB4A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysOMa()
{
  return &_s16MultiPinMapAssetC15MultiPinMapDataV10CodingKeysON;
}

unint64_t sub_1000EB4E4()
{
  unint64_t result = qword_10015FAD0;
  if (!qword_10015FAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FAD0);
  }
  return result;
}

unint64_t sub_1000EB53C()
{
  unint64_t result = qword_10015FAD8;
  if (!qword_10015FAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FAD8);
  }
  return result;
}

unint64_t sub_1000EB594()
{
  unint64_t result = qword_10015FAE0;
  if (!qword_10015FAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FAE0);
  }
  return result;
}

uint64_t sub_1000EB5E8()
{
  uint64_t v1 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004BD4(&qword_100160018);
  __chkstk_darwin(v4);
  unsigned int v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 112));
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  uint64_t v10 = *v7;
  if (v9 >> 60 == 11)
  {
    sub_1000248D8(v0 + *(void *)(*(void *)v0 + 120), (uint64_t)v6, &qword_100160018);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1000F1D40((uint64_t)v6, (uint64_t)v3);
      uint64_t v10 = sub_1000EBA98();
      unint64_t v12 = v11;
      sub_1000F1DA4((uint64_t)v3);
    }
    else
    {
      uint64_t v10 = *v6;
      unint64_t v12 = v6[1];
    }
    uint64_t v13 = *v7;
    unint64_t v14 = v7[1];
    *uint64_t v7 = v10;
    v7[1] = v12;
    sub_1000084E0(v10, v12);
    sub_1000084F4(v13, v14);
  }
  sub_10000851C(v8, v9);
  return v10;
}

uint64_t sub_1000EB7A4()
{
  sub_100108D60();
  swift_allocObject();
  sub_100108D50();
  sub_100004BD4(&qword_10015A2B0);
  sub_1000F265C();
  uint64_t v0 = sub_100108D40();
  swift_release();
  return v0;
}

uint64_t sub_1000EBA98()
{
  uint64_t v0 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  uint64_t v1 = __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  sub_100108D60();
  swift_allocObject();
  sub_100108D50();
  sub_1000F1E00(&qword_100160020, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
  uint64_t v2 = sub_100108D40();
  swift_release();
  return v2;
}

void sub_1000EBE08()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StreakEventAsset_metadata))
  {
    swift_retain();
    uint64_t v2 = sub_1000EB5E8();
    unint64_t v4 = v3;
    swift_release();
    uint64_t v5 = (id *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    if (!v6) {
      goto LABEL_13;
    }
    if (v4 >> 60 != 15)
    {
      id v7 = v6;
      sub_1000084E0(v2, v4);
      v8.super.Class isa = sub_100109240().super.isa;
      sub_100008508(v2, v4);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = (id *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    unsigned int v6 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
    if (!v6)
    {
      uint64_t v2 = 0;
      unint64_t v4 = 0xF000000000000000;
      goto LABEL_13;
    }
    uint64_t v2 = 0;
    unint64_t v4 = 0xF000000000000000;
  }
  id v7 = v6;
  v8.super.Class isa = 0;
LABEL_8:
  [v7 setAssetMetaData:v8.super.isa];

  if (*v5)
  {
    id v9 = *v5;
    [v9 setIsUploadedToCloud:0];
    sub_100008508(v2, v4);

    return;
  }
LABEL_13:

  sub_100008508(v2, v4);
}

uint64_t sub_1000EBF8C()
{
  v1[2] = v0;
  uint64_t v2 = sub_10010A4C0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_1000EC05C, 0, 0);
}

uint64_t sub_1000EC05C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = *(void **)(*(void *)(v0 + 16) + 24);
  *(void *)(v0 + 56) = v3;
  *(_DWORD *)(v0 + 144) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v4 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v4(v1);
  v3;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000EC174;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000EC174()
{
  uint64_t v2 = *(void **)v1;
  unint64_t v3 = *(void **)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void *)(*(void *)v1 + 32);
  uint64_t v6 = *(void *)(*(void *)v1 + 24);
  v2[11] = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v2[12] = v7;
  v2[13] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v6);

  swift_release();
  if (v0) {
    NSData v8 = sub_1000EC668;
  }
  else {
    NSData v8 = sub_1000EC334;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1000EC334()
{
  id v1 = [*(id *)(v0 + 56) parentContext];
  *(void *)(v0 + 112) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 64);
    uint64_t v4 = *(unsigned int *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 120) = v8;
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v2;
    v3(v5, v4, v6);
    swift_retain();
    v2;
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v9;
    void *v9 = v0;
    v9[1] = sub_1000EC4CC;
    return NSManagedObjectContext.perform<A>(schedule:_:)();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1000EC4CC()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1000EC748;
  }
  else {
    uint64_t v5 = sub_1000EC6D4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000EC668()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000EC6D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000EC748()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1000EC7BC(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  sub_1000F1F14(v1, 0x6F72685465766173, 0xEF2928656C626177, 0x6E6F6320706D6574, 0xEC00000074786574);

  id v4 = 0;
  if ([v1 save:&v4]) {
    return v4;
  }
  id v3 = v4;
  sub_100108FC0();

  return (id)swift_willThrow();
}

id sub_1000EC8B4(uint64_t a1, void *a2)
{
  sub_1000F1F14(a2, 0x6F72685465766173, 0xEF2928656C626177, 0xD000000000000013, 0x8000000100113210);
  id v5 = 0;
  if ([a2 save:&v5]) {
    return v5;
  }
  id v4 = v5;
  sub_100108FC0();

  return (id)swift_willThrow();
}

uint64_t sub_1000EC9A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1000EC9C8()
{
  uint64_t v0 = sub_100109960();
  sub_100007C54(v0, qword_10015FAE8);
  uint64_t v1 = sub_100007CB8(v0, (uint64_t)qword_10015FAE8);
  if (qword_100158C18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007CB8(v0, (uint64_t)qword_10016E018);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000ECA90()
{
  type metadata accessor for EntryCRUDActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_10016E178 = v0;
  return result;
}

id Journaling.EntryViewModel.id.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_id);
}

uint64_t (*variable initialization expression of Journaling.EntryViewModel.didChange())()
{
  return nullsub_1;
}

uint64_t sub_1000ECAF8(void *a1, char a2, int a3, void *a4)
{
  uint64_t v5 = v4;
  id v162 = a1;
  id v163 = a4;
  int v164 = a3;
  int v166 = a2 & 1;
  uint64_t v6 = sub_100004BD4(&qword_10015D8B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v143 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100004BD4(&qword_100160038);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (uint64_t *)((char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = sub_100004BD4(&qword_100160040);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v144 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v161 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v160 = (char *)&v134 - v14;
  __chkstk_darwin(v13);
  uint64_t v151 = (char *)&v134 - v15;
  uint64_t v16 = sub_100109460();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  v165 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v150 = (char *)&v134 - v20;
  uint64_t v21 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  Swift::Int v137 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v159 = (char *)&v134 - v25;
  __chkstk_darwin(v24);
  uint64_t v148 = (char *)&v134 - v26;
  uint64_t v27 = sub_1001094F0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v134 = (char *)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v134 - v31;
  *(void *)(v4 + 56) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v33 = *(void (**)(void))(v28 + 56);
  uint64_t v147 = v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uuid;
  v33();
  uint64_t v34 = (void *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_didChange);
  *uint64_t v34 = nullsub_1;
  v34[1] = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_cancelable) = 0;
  uint64_t v35 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_changeEventPublisher;
  uint64_t v139 = sub_100004BD4(&qword_100158CE8);
  swift_allocObject();
  *(void *)(v4 + v35) = sub_1001099E0();
  uint64_t v153 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_title;
  *(void *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_title) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged) = 0;
  uint64_t v154 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text;
  *(void *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text) = 0;
  uint64_t v152 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_prompts;
  *(void *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_prompts) = 0;
  uint64_t v149 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_dateSource;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_dateSource) = 5;
  uint64_t v155 = v4 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleId;
  v167 = v33;
  uint64_t v168 = v28 + 56;
  v33();
  uint64_t v36 = *(void (**)(void))(v17 + 56);
  uint64_t v156 = v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleDate;
  v36();
  uint64_t v158 = v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleEndDate;
  v36();
  *(void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assets) = _swiftEmptyArrayStorage;
  *(void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsWithSlimAsset) = _swiftEmptyArrayStorage;
  uint64_t v37 = v16;
  uint64_t v157 = v36;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v36)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalUpdatedDate, 1, 1, v16);
  sub_1001094E0();
  uint64_t v136 = v28;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v38 = (char *)(v28 + 32);
  uint64_t v39 = v40;
  uint64_t v135 = v32;
  uint64_t v41 = v27;
  v40((char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uniqueID), v32, v27);
  *(unsigned char *)(v5 + 16) = v166;
  id v42 = v162;
  id v43 = [v162 objectID];
  *(void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uint64_t (*v30)(uint64_t, uint64_t, id) = v43;
  *(unsigned char *)(v5 + 40) = v164;
  id v44 = v163;
  *(void *)(v5 + 24) = v163;
  *(void *)(v5 + 32) = v42;
  id v163 = v44;
  id v162 = v42;
  id v45 = [v162 id];
  if (v45)
  {
    uint64_t v46 = v45;
    uint64_t v47 = v148;
    sub_1001094B0();

    uint64_t v48 = 0;
    uint64_t v49 = (uint64_t)v47;
  }
  else
  {
    uint64_t v49 = (uint64_t)v148;
    uint64_t v48 = 1;
  }
  uint64_t v138 = v39;
  uint64_t v148 = v38;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v49, v48, 1, v41);
  uint64_t v50 = v147;
  swift_beginAccess();
  sub_10002440C(v49, v50, (uint64_t *)&unk_10015A850);
  swift_endAccess();
  id v51 = [*(id *)(v5 + 32) entryDate];
  if (v51)
  {
    unint64_t v52 = v51;
    unint64_t v53 = v165;
    sub_100109420();

    uint64_t v54 = *(void (**)(char *, unsigned char *, uint64_t))(v17 + 32);
    uint64_t v55 = (uint64_t)v151;
    uint64_t v56 = v37;
    v54(v151, v53, v37);
    uint64_t v57 = v37;
    unint64_t v58 = v157;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v157)(v55, 0, 1, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v55, 1, v56) != 1)
    {
      id v59 = v150;
      v54(v150, (unsigned char *)v55, v56);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v55 = (uint64_t)v151;
    uint64_t v56 = v37;
    uint64_t v60 = v37;
    unint64_t v58 = v157;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v157)(v151, 1, 1, v60);
  }
  id v59 = v150;
  sub_100109450();
  sub_10000B9CC(v55, (uint64_t *)&unk_10015CDE0);
  uint64_t v54 = *(void (**)(char *, unsigned char *, uint64_t))(v17 + 32);
LABEL_9:
  v54((char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_date), v59, v56);
  id v61 = [*(id *)(v5 + 32) dateSource];
  if (v61)
  {
    uint64_t v62 = v61;
    uint64_t v63 = sub_100109D30();
    id v65 = v64;
  }
  else
  {
    uint64_t v63 = 0;
    id v65 = (void *)0xE000000000000000;
  }
  char v66 = sub_1000854BC(v63, v65);
  *(unsigned char *)(v5 + v149) = v66;
  id v67 = *(id *)(v5 + 32);
  uint64_t v68 = v165;
  sub_100072EE4(v165);

  v54((char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_displayDate), v68, v56);
  uint64_t v69 = *(void **)(v5 + 32);
  unsigned __int8 v70 = [v69 flagged];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked) = v70;
  id v71 = [v69 prompt];
  if (v71)
  {
    uint64_t v72 = sub_100109250();
    unint64_t v74 = v73;

    id v71 = sub_100081C44(v72, v74);
    sub_100007084(v72, v74);
  }
  uint64_t v75 = (uint64_t)v160;
  long long v76 = *(void **)(v5 + v152);
  *(void *)(v5 + v152) = v71;

  id v77 = [*(id *)(v5 + 32) title];
  if (v77)
  {
    uint64_t v78 = sub_100109250();
    unint64_t v80 = v79;

    id v77 = sub_100081C44(v78, v80);
    sub_100007084(v78, v80);
  }
  CGRect v81 = *(void **)(v5 + v153);
  *(void *)(v5 + v153) = v77;

  id v82 = [*(id *)(v5 + 32) text];
  if (v82)
  {
    uint64_t v83 = sub_100109250();
    unint64_t v85 = v84;

    id v82 = sub_100081C44(v83, v85);
    sub_100007084(v83, v85);
  }
  uint64_t v86 = (uint64_t)v161;
  uint64_t v87 = (uint64_t)v159;
  char v88 = *(void **)(v5 + v154);
  *(void *)(v5 + v154) = v82;

  uint64_t v89 = *(void **)(v5 + 32);
  unsigned __int8 v90 = [v89 showTitle];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_showTitle) = v90;
  id v91 = [v89 bundleId];
  if (v91)
  {
    uint64_t v92 = v91;
    sub_1001094B0();

    uint64_t v93 = 0;
  }
  else
  {
    uint64_t v93 = 1;
  }
  uint64_t v94 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v87, v93, 1, v41);
  uint64_t v95 = v155;
  swift_beginAccess();
  sub_10002440C(v87, v95, (uint64_t *)&unk_10015A850);
  swift_endAccess();
  id v96 = [*(id *)(v5 + 32) bundleDate];
  if (v96)
  {
    id v97 = v96;
    sub_100109420();

    uint64_t v94 = 0;
  }
  uint64_t v98 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v75, v94, 1, v56);
  uint64_t v99 = v156;
  swift_beginAccess();
  sub_10002440C(v75, v99, (uint64_t *)&unk_10015CDE0);
  swift_endAccess();
  id v100 = [*(id *)(v5 + 32) bundleEndDate];
  if (v100)
  {
    uint64_t v101 = v100;
    sub_100109420();

    uint64_t v98 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v86, v98, 1, v56);
  uint64_t v102 = v158;
  swift_beginAccess();
  sub_10002440C(v86, v102, (uint64_t *)&unk_10015CDE0);
  swift_endAccess();
  uint64_t v103 = *(void **)(v5 + 32);
  unsigned __int8 v104 = [v103 showPhotoMemoryBanner];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_showPhotoMemoryBanner) = v104;
  unsigned __int8 v105 = [v103 flagged];
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalBookmarkFromEntryMO) = v105;
  sub_1000B88CC();
  if (v166)
  {
    if (v164) {
      [v103 setIsDraft:1];
    }
    id v106 = [v103 id];
    uint64_t v107 = v138;
    if (v106)
    {
      unint64_t v108 = v106;
      unint64_t v109 = v135;
      sub_1001094B0();

      uint64_t v110 = (uint64_t)v137;
      v107(v137, v109, v41);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v167)(v110, 0, 1, v41);
      uint64_t v111 = v136;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v110, 1, v41) != 1)
      {
        uint64_t v112 = v134;
        v107(v134, (char *)v110, v41);
        uint64_t v113 = sub_100109470();
        sub_1000AA32C(v113, v114);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v41);
LABEL_38:
        id v124 = [self defaultCenter];
        [v124 addObserver:v5 selector:"contextObjectsDidChangeWithNotification:" name:NSManagedObjectContextObjectsDidChangeNotification object:*(void *)(v5 + 24)];

        uint64_t v170 = *(void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_changeEventPublisher);
        sub_100004BD4(&qword_100160048);
        uint64_t v125 = v140;
        sub_10001CB98(0, (unint64_t *)&qword_10015A5D0);
        swift_retain();
        uint64_t *v125 = sub_10010A410();
        sub_10010A3C0();
        uint64_t v126 = v141;
        uint64_t v127 = v142;
        (*(void (**)(uint64_t *, void, uint64_t))(v141 + 104))(v125, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v142);
        uint64_t v128 = sub_10010A3B0();
        uint64_t v129 = (uint64_t)v143;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v143, 1, 1, v128);
        sub_10002E5E0(&qword_100160050, &qword_100158CE8);
        sub_1000F2618(&qword_10015D8D0, (unint64_t *)&qword_10015A5D0);
        uint64_t v130 = v144;
        sub_100109A10();
        sub_10000B9CC(v129, &qword_10015D8B8);
        (*(void (**)(uint64_t *, uint64_t))(v126 + 8))(v125, v127);
        swift_release();
        swift_allocObject();
        swift_weakInit();
        sub_10002E5E0(&qword_100160058, &qword_100160040);
        uint64_t v131 = v146;
        uint64_t v132 = sub_100109A30();

        swift_release();
        (*(void (**)(char *, uint64_t))(v145 + 8))(v130, v131);
        *(void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_cancelable) = v132;
        swift_release();
        return v5;
      }
    }
    else
    {
      uint64_t v110 = (uint64_t)v137;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v167)(v137, 1, 1, v41);
    }
    sub_10000B9CC(v110, (uint64_t *)&unk_10015A850);
    if (qword_100158C90 != -1) {
      swift_once();
    }
    uint64_t v115 = sub_100109960();
    sub_100007CB8(v115, (uint64_t)qword_10015FAE8);
    swift_retain_n();
    uint64_t v116 = sub_100109940();
    os_log_type_t v117 = sub_10010A2D0();
    if (os_log_type_enabled(v116, v117))
    {
      uint64_t v118 = (uint8_t *)swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      *(_DWORD *)uint64_t v118 = 136315138;
      uint64_t v170 = v119;
      id v120 = [*(id *)(v5 + 32) debugDescription];
      uint64_t v121 = sub_100109D30();
      unint64_t v123 = v122;

      uint64_t v169 = sub_1000C50D4(v121, v123, &v170);
      sub_10010A730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v116, v117, "Error getting entry id for in-progress register %s", v118, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    goto LABEL_38;
  }

  return v5;
}

uint64_t sub_1000EDD10(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = &_swiftEmptySetSingleton;
    uint64_t v10 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v1 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v5; ++i)
      {
        uint64_t v7 = swift_bridgeObjectRetain();
        sub_1000EDE50(v7);
      }
      swift_bridgeObjectRelease();
      uint64_t v4 = v10;
    }
    if (v4[2])
    {
      uint64_t v8 = sub_10010A060();
      __chkstk_darwin(v8);
      v9[2] = v3;
      v9[3] = v4;
      sub_1000D3FA8((uint64_t)sub_1000F2858, (uint64_t)v9);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000EDE50(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_10003E15C(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t Journaling.EntryViewModel.deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  sub_100024244(v0 + 48);
  sub_10000B9CC(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uuid, (uint64_t *)&unk_10015A850);

  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uniqueID;
  uint64_t v3 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  uint64_t v4 = v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_date;
  uint64_t v5 = sub_100109460();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_displayDate, v5);
  sub_10000B9CC(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleId, (uint64_t *)&unk_10015A850);
  sub_10000B9CC(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleDate, (uint64_t *)&unk_10015CDE0);
  sub_10000B9CC(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bundleEndDate, (uint64_t *)&unk_10015CDE0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000B9CC(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalUpdatedDate, (uint64_t *)&unk_10015CDE0);
  return v0;
}

uint64_t Journaling.EntryViewModel.__deallocating_deinit()
{
  Journaling.EntryViewModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000EE248(uint64_t a1)
{
  if (sub_100083064(1u, a1) || sub_100083064(4u, a1))
  {
    swift_bridgeObjectRetain();
    sub_1000B88CC();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (sub_100083064(0, a1) && (sub_1000EFDF8() & 1) == 0) {
    sub_1000F0BC8(0);
  }
  uint64_t v3 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_didChange);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    int64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    v7(v1, a1, ObjectType, v5);
    swift_bridgeObjectRelease_n();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000EE3B8()
{
  v1[13] = v0;
  sub_100004BD4((uint64_t *)&unk_10015A850);
  v1[14] = swift_task_alloc();
  uint64_t v2 = sub_1001094F0();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v3 = sub_10010A4C0();
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  if (qword_100158C98 != -1) {
    swift_once();
  }
  v1[21] = qword_10016E178;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[22] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000EE56C;
  return sub_1000BBBC4();
}

uint64_t sub_1000EE56C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  return _swift_task_switch(sub_1000EE67C, v1, 0);
}

uint64_t sub_1000EE67C()
{
  if (qword_100158C90 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100109960();
  v0[23] = sub_100007CB8(v1, (uint64_t)qword_10015FAE8);
  swift_retain_n();
  uint64_t v2 = sub_100109940();
  os_log_type_t v3 = sub_10010A2F0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[13];
  if (v4)
  {
    os_log_type_t v14 = v3;
    uint64_t v6 = swift_slowAlloc();
    int64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543618;
    unint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_id);
    v0[10] = v8;
    id v9 = v8;
    sub_10010A730();
    *int64_t v7 = v8;
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2048;
    int64_t v10 = (void *)(v5 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    if (*v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_10010AA80();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_release();
    v0[12] = v11;
    sub_10010A730();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v2, v14, "%{public}@ (finishEditingAndSave) assets.count: %ld", (uint8_t *)v6, 0x16u);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  int64_t v12 = (void *)swift_task_alloc();
  v0[24] = v12;
  *int64_t v12 = v0;
  v12[1] = sub_1000EE94C;
  return sub_1000EF654();
}

uint64_t sub_1000EE94C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  return _swift_task_switch(sub_1000EEA5C, v1, 0);
}

uint64_t sub_1000EEA5C()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  v0[25] = *(void *)(v0[13] + 24);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  swift_retain();
  BOOL v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *BOOL v4 = v0;
  v4[1] = sub_1000EEB58;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1000EEB58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  uint64_t v4 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1000EECE8, v1, 0);
}

uint64_t sub_1000EECE8()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_100160028 + dword_100160028);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000EED8C;
  return v3();
}

uint64_t sub_1000EED8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v4 = sub_1000EF164;
  }
  else {
    uint64_t v4 = sub_1000EEEB8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1000EEEB8()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[13] + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_1000248D8(v4, v3, (uint64_t *)&unk_10015A850);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000B9CC(v0[14], (uint64_t *)&unk_10015A850);
    swift_retain_n();
    uint64_t v5 = sub_100109940();
    os_log_type_t v6 = sub_10010A2D0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[13];
    if (v7)
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      uint64_t v22 = v10;
      id v11 = [*(id *)(v8 + 32) debugDescription];
      uint64_t v12 = sub_100109D30();
      unint64_t v14 = v13;

      v0[9] = sub_1000C50D4(v12, v14, &v22);
      sub_10010A730();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error getting entry id for in-progress deregister %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    uint64_t v16 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v17 = v0[15];
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v15, v0[14], v17);
    uint64_t v18 = sub_100109470();
    sub_1000AA178(v18, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1000EF164()
{
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = sub_100109940();
  os_log_type_t v2 = sub_10010A2D0();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = (void *)v0[25];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412546;
    v0[11] = v3;
    id v6 = v3;
    sub_10010A730();
    *uint64_t v5 = v3;
    swift_release_n();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v7;
    sub_10010A730();
    v5[1] = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "(finishEditingAndSave) Error saving editing context %@: %@", (uint8_t *)v4, 0x16u);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000EF3B4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if ([v1 isDraft] && (objc_msgSend(v1, "isRemovedFromCloud") & 1) == 0) {
    [v1 setIsDraft:0];
  }
  return sub_1000F0714();
}

void sub_1000EF428()
{
  uint64_t v0 = sub_100108DD0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v5 = Strong;
  id v6 = *(void **)(Strong + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_title);
  if (!v6)
  {
LABEL_9:
    [*(id *)(v5 + 32) setTitle:0];
    sub_1000F0468();
    swift_release();
    return;
  }
  id v7 = v6;
  id v8 = [v7 string];
  uint64_t v9 = sub_100109D30();
  uint64_t v11 = v10;

  v22[1] = v9;
  v22[2] = v11;
  sub_100108DC0();
  sub_10005058C();
  uint64_t v12 = sub_10010A760();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {

    goto LABEL_9;
  }
  id v16 = *(id *)(v5 + 32);
  uint64_t v17 = sub_1000823F0();
  if (v18 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v20 = v17;
    unint64_t v21 = v18;
    Class isa = sub_100109240().super.isa;
    sub_100008508(v20, v21);
  }
  [v16 setTitle:isa];

  sub_1000F0468();
  swift_release();
}

uint64_t sub_1000EF654()
{
  v1[2] = v0;
  uint64_t v2 = sub_10010A4C0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  if (qword_100158C98 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10016E178;
  v1[6] = qword_10016E178;
  return _swift_task_switch(sub_1000EF74C, v3, 0);
}

uint64_t sub_1000EF74C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
  v0[7] = v2;
  uint64_t v3 = v0[5];
  if (v2)
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = v0[4];
    id v6 = v2;
    id v7 = (void *)sub_1000CD8BC(0, v2, 0, 0.0);
    v0[8] = v7;
    uint64_t v8 = swift_allocObject();
    v0[9] = v8;
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v7;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
    swift_retain();
    id v9 = v7;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[10] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1000EF8F8;
    return NSManagedObjectContext.perform<A>(schedule:_:)();
  }
  else
  {
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1000EF8F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1000EFA88, v1, 0);
}

uint64_t sub_1000EFA88()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);

  *(unsigned char *)(v2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged) = 0;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1000EFB04(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (a2)
  {
    uint64_t v4 = sub_1000823F0();
    if (v5 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v7 = v4;
      unint64_t v8 = v5;
      Class isa = sub_100109240().super.isa;
      sub_100008508(v7, v8);
    }
    [v2 setText:isa];

    id v9 = [a2 string];
    sub_100109D30();

    uint64_t v10 = sub_100109DC0();
    swift_bridgeObjectRelease();
    if (v10 >= 0x8000)
    {
      if (qword_100158C90 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_100109960();
      sub_100007CB8(v11, (uint64_t)qword_10015FAE8);
      uint64_t v12 = sub_100109940();
      os_log_type_t v13 = sub_10010A2D0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 134218240;
        swift_beginAccess();
        sub_10010A730();
        *(_WORD *)(v14 + 12) = 512;
        LOWORD(v10) = 0x7FFF;
        sub_10010A730();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "EntryViewModel: reducing textLength stored property value of (%ld) to Int16.max (%hd)", (uint8_t *)v14, 0x10u);
        swift_slowDealloc();
      }
      else
      {

        LOWORD(v10) = 0x7FFF;
      }
      goto LABEL_20;
    }
    if (v10 < -32768)
    {
      __break(1u);
      goto LABEL_23;
    }
    if ((_WORD)v10)
    {
LABEL_20:
      [v2 setTextLength:(__int16)v10];
      goto LABEL_21;
    }
  }
  else
  {
    [*(id *)(a1 + 32) setText:0];
  }
  uint64_t v15 = sub_1000BA550();
  if ((unint64_t)v15 >> 62)
  {
LABEL_23:
    uint64_t v16 = sub_10010AA80();
    goto LABEL_15;
  }
  uint64_t v16 = *(void *)(((unint64_t)v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  swift_bridgeObjectRelease();
  if (v16 || (id v17 = [v2 title]) == 0)
  {
    LOWORD(v10) = 0;
    goto LABEL_20;
  }
  unint64_t v18 = v17;
  uint64_t v19 = sub_100109250();
  unint64_t v21 = v20;

  sub_100007084(v19, v21);
  [v2 setTextLength:1];
LABEL_21:
  sub_1000F0468();
}

uint64_t sub_1000EFDF8()
{
  uint64_t v1 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_textChanged)) {
    return 0;
  }
  uint64_t v3 = v0;
  sub_100004BD4(&qword_100159448);
  sub_10010A4B0();
  uint64_t v4 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text;
  unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
  id v6 = v5;
  uint64_t v7 = (void *)sub_1000CD8BC(0, v5, 0, 0.0);

  id v8 = 0;
  if (v15 >> 60 != 15)
  {
    sub_100006F28(v14, v15);
    id v8 = sub_100081C44(v14, v15);
    sub_100008508(v14, v15);
  }
  id v9 = (void *)sub_1000CD8BC(0, v8, 0, 0.0);

  if (v9)
  {
    if (v7)
    {
      sub_10001CB98(0, &qword_10015B6F0);
      id v10 = v7;
      id v11 = v9;
      char v12 = sub_10010A6A0();

      if (v12)
      {

LABEL_10:
        sub_100008508(v14, v15);
        return 0;
      }
    }
    else
    {
      id v11 = v9;
    }
    if (*(void *)(v3 + v4))
    {
      if ((objc_msgSend(v11, "isEqualToAttributedString:") & 1) == 0) {
        *(unsigned char *)(v3 + v1) = 1;
      }
    }
  }
  else if (!v7)
  {
    goto LABEL_10;
  }
  os_log_type_t v13 = *(void **)(v3 + v4);
  *(void *)(v3 + v4) = v9;

  sub_100008508(v14, v15);
  *(unsigned char *)(v3 + v1) = 0;
  return 1;
}

void sub_1000EFFD4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*(id *)(a1 + 32) text];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_100109250();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1000F004C(void *a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
  id v4 = v3;
  uint64_t v5 = (void *)sub_1000CD8BC(0, v3, 0, 0.0);

  unint64_t v6 = (void *)sub_1000CD8BC(0, a1, 0, 0.0);
  unint64_t v7 = v6;
  if (!v5)
  {
    if (!v6)
    {
      char v10 = 0;
      return v10 & 1;
    }

    goto LABEL_7;
  }
  if (!v6)
  {

LABEL_7:
    char v10 = 1;
    return v10 & 1;
  }
  sub_10001CB98(0, &qword_10015B6F0);
  id v8 = v5;
  char v9 = sub_10010A6A0();

  char v10 = v9 ^ 1;
  return v10 & 1;
}

uint64_t sub_1000F012C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 32);
    Class isa = *(Class *)(result + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_prompts);
    if (isa)
    {
      id v3 = v1;
      id v4 = isa;
      uint64_t v5 = sub_1000823F0();
      unint64_t v7 = v6;

      if (v7 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = sub_100109240().super.isa;
        sub_100008508(v5, v7);
      }
    }
    else
    {
      id v8 = v1;
    }
    [v1 setPrompt:isa];

    sub_1000F0468();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000F021C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    [*(id *)(result + 32) setFlagged:*(unsigned __int8 *)(result + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked)];
    sub_1000F0468();
    uint64_t v2 = *(void (**)(uint64_t))(v1
                                        + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_didChange);
    uint64_t v3 = swift_retain();
    v2(v3);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000F02C4(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked);
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked) = result;
  if (v2 != (result & 1))
  {
    uint64_t v3 = *(void **)(v1 + 24);
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1000F1EE4;
    *(void *)(v5 + 24) = v4;
    v7[4] = sub_1000DC08C;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000EC9A0;
    v7[3] = &unk_1001459D0;
    unint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
    [v3 performBlockAndWait:v6];
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      v7[0] = sub_10002E8DC((uint64_t)&off_100140278);
      sub_1001099D0();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

void sub_1000F0468()
{
  uint64_t v1 = sub_100109460();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = &v21[-v10];
  __chkstk_darwin(v9);
  os_log_type_t v13 = &v21[-v12];
  uint64_t v14 = *(void **)(v0 + 32);
  [v14 setIsUploadedToCloud:0];
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    uint64_t v15 = v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalUpdatedDate;
    swift_beginAccess();
    sub_1000248D8(v15, (uint64_t)v13, (uint64_t *)&unk_10015CDE0);
    int v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1);
    sub_10000B9CC((uint64_t)v13, (uint64_t *)&unk_10015CDE0);
    if (v16 == 1)
    {
      id v17 = [v14 updatedDate];
      if (v17)
      {
        unint64_t v18 = v17;
        sub_100109420();

        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v19 = 1;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, v19, 1, v1);
      sub_100012FA4((uint64_t)v11, (uint64_t)v8);
      swift_beginAccess();
      sub_10002440C((uint64_t)v8, v15, (uint64_t *)&unk_10015CDE0);
      swift_endAccess();
    }
  }
  sub_100109430();
  Class isa = sub_1001093D0().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  [v14 setUpdatedDate:isa];
}

uint64_t sub_1000F0714()
{
  uint64_t v1 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100109460();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001094F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v32 - v17;
  id v19 = [*(id *)(v0 + 32) id];
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  unint64_t v20 = v19;
  uint64_t v32 = v8;
  sub_1001094B0();

  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v11, v16, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    uint64_t v25 = (uint64_t *)&unk_10015A850;
    uint64_t v26 = (uint64_t)v11;
    return sub_10000B9CC(v26, v25);
  }
  v21(v18, v11, v12);
  uint64_t v22 = v0;
  uint64_t v23 = v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalUpdatedDate;
  swift_beginAccess();
  sub_1000248D8(v23, (uint64_t)v3, (uint64_t *)&unk_10015CDE0);
  uint64_t v24 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v3, 1, v4) != 1)
  {
    uint64_t v28 = v32;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v32, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
    uint64_t v29 = (uint64_t)v33;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v33, v28, v4);
    id v30 = objc_allocWithZone((Class)_s16StreakEventAssetCMa(0));
    uint64_t v31 = sub_100102B84(2u, v16, v29);

    sub_1000EBE08();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  uint64_t v25 = (uint64_t *)&unk_10015CDE0;
  uint64_t v26 = (uint64_t)v3;
  return sub_10000B9CC(v26, v25);
}

uint64_t sub_1000F0B64@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Journaling.EntryViewModel();
  uint64_t result = sub_1001099C0();
  *a1 = result;
  return result;
}

id sub_1000F0BA4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_id);
  *a1 = v2;
  return v2;
}

uint64_t sub_1000F0BBC(uint64_t *a1, uint64_t *a2)
{
  return _s21JournalShareExtension10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_1000F0BC8(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  sub_10010ADC0();
  sub_10010ADD0(a1);
  Swift::Int v4 = sub_10010AE20();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 11;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 11;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000409D8();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_1000F0CEC(v6);
  *uint64_t v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1000F0CEC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10010A7E0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        sub_10010ADC0();
        sub_10010ADD0(v10);
        unint64_t v11 = sub_10010AE20() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t _s21JournalShareExtension10JournalingC14EntryViewModelC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = sub_100109460();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v4 = __chkstk_darwin(v70);
  uint64_t v69 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v68 = (char *)&v66 - v6;
  uint64_t v7 = sub_1001094F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v72 = (unint64_t *)((char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100004BD4(&qword_10015A010);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v66 - v18;
  uint64_t v73 = a1;
  uint64_t v20 = a1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_1000248D8(v20, (uint64_t)v19, (uint64_t *)&unk_10015A850);
  uint64_t v74 = a2;
  uint64_t v21 = a2 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  uint64_t v22 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1000248D8((uint64_t)v19, (uint64_t)v13, (uint64_t *)&unk_10015A850);
  sub_1000248D8(v21, v22, (uint64_t *)&unk_10015A850);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v13, 1, v7) != 1)
  {
    sub_1000248D8((uint64_t)v13, (uint64_t)v17, (uint64_t *)&unk_10015A850);
    if (v23(v22, 1, v7) != 1)
    {
      uint64_t v24 = v72;
      (*(void (**)(unint64_t *, uint64_t, uint64_t))(v8 + 32))(v72, v22, v7);
      sub_1000F1E00(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v25 = sub_100109C70();
      uint64_t v26 = *(void (**)(unint64_t *, uint64_t))(v8 + 8);
      v26(v24, v7);
      sub_10000B9CC((uint64_t)v19, (uint64_t *)&unk_10015A850);
      v26((unint64_t *)v17, v7);
      sub_10000B9CC((uint64_t)v13, (uint64_t *)&unk_10015A850);
      if ((v25 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    sub_10000B9CC((uint64_t)v19, (uint64_t *)&unk_10015A850);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
LABEL_6:
    sub_10000B9CC((uint64_t)v13, &qword_10015A010);
    goto LABEL_15;
  }
  sub_10000B9CC((uint64_t)v19, (uint64_t *)&unk_10015A850);
  if (v23(v22, 1, v7) != 1) {
    goto LABEL_6;
  }
  sub_10000B9CC((uint64_t)v13, (uint64_t *)&unk_10015A850);
LABEL_8:
  sub_10001CB98(0, &qword_10015A8C0);
  uint64_t v28 = v73;
  uint64_t v27 = v74;
  if (sub_10010A6A0())
  {
    uint64_t v29 = *(void **)(v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_title);
    id v30 = *(void **)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_title);
    if (v29)
    {
      uint64_t v31 = v71;
      if (!v30) {
        goto LABEL_15;
      }
      sub_10001CB98(0, &qword_10015B6F0);
      id v32 = v30;
      id v33 = v29;
      char v34 = sub_10010A6A0();

      if ((v34 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v31 = v71;
      if (v30) {
        goto LABEL_15;
      }
    }
    if (*(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_showTitle) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_showTitle))
    {
      uint64_t v37 = *(void **)(v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
      uint64_t v38 = *(void **)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_text);
      if (v37)
      {
        if (!v38) {
          goto LABEL_15;
        }
        sub_10001CB98(0, &qword_10015B6F0);
        id v39 = v38;
        id v40 = v37;
        char v41 = sub_10010A6A0();

        if ((v41 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v38)
      {
        goto LABEL_15;
      }
      id v42 = *(void **)(v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_prompts);
      id v43 = *(void **)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_prompts);
      if (v42)
      {
        if (!v43) {
          goto LABEL_15;
        }
        sub_10001CB98(0, &qword_10015B6F0);
        id v44 = v43;
        id v45 = v42;
        char v46 = sub_10010A6A0();

        if ((v46 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else if (v43)
      {
        goto LABEL_15;
      }
      if (*(unsigned __int8 *)(v28
                              + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_showPhotoMemoryBanner) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_showPhotoMemoryBanner))
      {
        uint64_t v47 = (unint64_t *)(v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll);
        swift_beginAccess();
        unint64_t v48 = *v47;
        uint64_t v49 = (uint64_t *)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_assetsAll);
        swift_beginAccess();
        uint64_t v50 = *v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v51 = sub_1000E89B4(v48, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v51)
        {
          id v67 = v49;
          uint64_t v72 = v47;
          uint64_t v52 = v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_date;
          swift_beginAccess();
          unint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
          uint64_t v54 = v68;
          uint64_t v55 = v52;
          uint64_t v56 = v70;
          v53(v68, v55, v70);
          uint64_t v57 = v56;
          uint64_t v58 = v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_date;
          swift_beginAccess();
          id v59 = v69;
          v53(v69, v58, v57);
          LOBYTE(v58) = sub_100109410();
          uint64_t v62 = *(void (**)(char *, uint64_t))(v31 + 8);
          uint64_t v61 = v31 + 8;
          uint64_t v60 = v62;
          v62(v59, v57);
          v62(v54, v57);
          if (v58)
          {
            uint64_t v71 = v61;
            v53(v54, v28 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_displayDate, v57);
            v53(v59, v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_displayDate, v57);
            char v63 = sub_100109410();
            v60(v59, v57);
            v60(v54, v57);
            if ((v63 & 1) != 0
              && *(unsigned __int8 *)(v28
                                    + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_bookmarked)
              && *(unsigned __int8 *)(v28
                                    + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalBookmarkFromEntryMO) == *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14EntryViewModel_originalBookmarkFromEntryMO))
            {
              unint64_t v64 = *v72;
              uint64_t v65 = *v67;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unsigned __int8 v35 = sub_1000E89B4(v64, v65);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v35 & 1;
            }
          }
        }
      }
    }
  }
LABEL_15:
  unsigned __int8 v35 = 0;
  return v35 & 1;
}

uint64_t sub_1000F16E0()
{
  return sub_1000F2618(&qword_10015FB10, &qword_10015DFA8);
}

uint64_t type metadata accessor for EntryCRUDActor.ActorType()
{
  return self;
}

uint64_t sub_1000F1748()
{
  return type metadata accessor for Journaling.EntryViewModel();
}

uint64_t type metadata accessor for Journaling.EntryViewModel()
{
  uint64_t result = qword_10015FBE0;
  if (!qword_10015FBE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000F179C()
{
  sub_1000F19A4(319, (unint64_t *)&qword_100159FC8, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_1001094F0();
    if (v1 <= 0x3F)
    {
      sub_100109460();
      if (v2 <= 0x3F)
      {
        sub_1000F19A4(319, (unint64_t *)&qword_10015A7C0, (void (*)(uint64_t))&type metadata accessor for Date);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1000F19A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10010A700();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s14EntryViewModelC4ModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F1AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC4ModeOMa()
{
  return &_s14EntryViewModelC4ModeON;
}

uint64_t _s14EntryViewModelC15EntryPropertiesOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14EntryViewModelC15EntryPropertiesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F1C58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EntryViewModelC15EntryPropertiesOMa()
{
  return &_s14EntryViewModelC15EntryPropertiesON;
}

unint64_t sub_1000F1C94()
{
  unint64_t result = qword_100160008;
  if (!qword_100160008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160008);
  }
  return result;
}

unint64_t sub_1000F1CEC()
{
  unint64_t result = qword_100160010;
  if (!qword_100160010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160010);
  }
  return result;
}

uint64_t sub_1000F1D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F1DA4(uint64_t a1)
{
  uint64_t v2 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F1E00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F1E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F1EAC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F1EE4()
{
  return sub_1000F021C();
}

uint64_t sub_1000F1EEC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F1EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F1F0C()
{
  return swift_release();
}

void sub_1000F1F14(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  id v7 = [a1 insertedObjects];
  sub_10001CB98(0, &qword_10015A880);
  sub_1000F2618((unint64_t *)&qword_10015DF98, &qword_10015A880);
  uint64_t v8 = sub_10010A150();

  id v9 = [a1 deletedObjects];
  uint64_t v10 = sub_10010A150();

  id v11 = [a1 updatedObjects];
  uint64_t v12 = sub_10010A150();

  if (qword_1001588D0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100109960();
  sub_100007CB8(v13, (uint64_t)qword_100159B78);
  swift_bridgeObjectRetain_n();
  id v14 = a1;
  uint64_t v15 = sub_100109940();
  os_log_type_t v16 = sub_10010A2F0();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v27 = a3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000C50D4(a2, v27, &v28);
    sub_10010A730();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2112;
    id v18 = v14;
    sub_10010A730();
    *uint64_t v23 = v14;

    _os_log_impl((void *)&_mh_execute_header, v15, v16, "(%s) context:%@", (uint8_t *)v17, 0x16u);
    sub_100004BD4((uint64_t *)&unk_100159D70);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v27;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = sub_100109940();
  os_log_type_t v20 = sub_10010A2F0();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = a3;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136316162;
    swift_bridgeObjectRetain();
    sub_1000C50D4(a2, v21, &v28);
    sub_10010A730();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1000C50D4(a4, a5, &v28);
    sub_10010A730();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2048;
    if ((v8 & 0xC000000000000001) != 0) {
      sub_10010A810();
    }
    swift_bridgeObjectRelease();
    sub_10010A730();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2048;
    if ((v10 & 0xC000000000000001) != 0) {
      sub_10010A810();
    }
    swift_bridgeObjectRelease();
    sub_10010A730();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 42) = 2048;
    if ((v12 & 0xC000000000000001) != 0) {
      sub_10010A810();
    }
    swift_bridgeObjectRelease();
    sub_10010A730();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "(%s) for %s insertedObjects.count:%ld deletedObjects.count:%ld updatedObjects.count:%ld", (uint8_t *)v22, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1000F2544(uint64_t *a1@<X8>)
{
  sub_1000EFFD4(v1, a1);
}

void sub_1000F2564()
{
  sub_1000EFB04(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000F2580()
{
  return sub_1000EF3B4(v0);
}

id sub_1000F259C()
{
  return sub_1000EC7BC(v0);
}

uint64_t sub_1000F25BC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000F25FC()
{
  return sub_1000EC8B4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000F2618(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001CB98(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000F265C()
{
  unint64_t result = qword_100160030;
  if (!qword_100160030)
  {
    sub_100012F08(&qword_10015A2B0);
    sub_1000F1E00(&qword_10015BF70, (void (*)(uint64_t))&type metadata accessor for UUID);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160030);
  }
  return result;
}

void sub_1000F2708(void *a1)
{
}

void sub_1000F2730()
{
}

void sub_1000F2738(void *a1)
{
}

void sub_1000F2760(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = *(void **)(v4 + *a2);
  *(void *)(v4 + *a2) = a1;
  id v8 = a1;

  id v9 = *(void **)(v4 + 24);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  v12[4] = a3;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10001DEE8;
  uint64_t v12[3] = a4;
  id v11 = _Block_copy(v12);
  swift_release();
  [v9 performBlock:v11];
  _Block_release(v11);
}

uint64_t sub_1000F2848()
{
  return sub_1000F012C();
}

uint64_t sub_1000F2850(uint64_t *a1)
{
  return sub_1000EDD10(a1);
}

uint64_t sub_1000F2858()
{
  return sub_1000EE248(*(void *)(v0 + 24));
}

uint64_t sub_1000F2898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A3F0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling10AudioAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10AudioAsset_metadata)) {
    goto LABEL_6;
  }
  id v7 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_100109250();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100004BD4(&qword_1001601B0);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100004BD4(&qword_100159B58);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_100121E30;
      sub_10000B800((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_10015A3F0);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_100024FD8(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s10AudioAssetC9AudioDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1000F2AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A230);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling15GenericMapAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling15GenericMapAsset_metadata)) {
    goto LABEL_6;
  }
  id v7 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_100109250();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100004BD4(&qword_100160188);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100004BD4(&qword_10015A240);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_100121E30;
      sub_10000B800((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_10015A230);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_1000257A4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1000F2CE4()
{
  uint64_t v1 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata;
  if (*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v2)
  {
    id v3 = [v2 assetMetaData];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_100109250();
      uint64_t v7 = v6;

      sub_100004BD4(&qword_100160190);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 64) = v5;
      *(void *)(v8 + 72) = v7;
      *(void *)(v8 + 80) = 0;
      *(_WORD *)(v8 + 88) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 0;
      *(void *)(v8 + 16) = 2;
      *(unsigned char *)(v8 + 40) = 0;
      *(_OWORD *)(v8 + 48) = xmmword_100121E30;
      *(void *)(v0 + v1) = v8;
      swift_release();
    }
  }
  if (!*(void *)(v0 + v1)) {
    return 1;
  }
LABEL_6:
  swift_retain();
  uint64_t v9 = sub_10002530C();
  swift_release();
  return v9;
}

uint64_t sub_1000F2E08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A208);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling17WorkoutRouteAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_100109250();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100004BD4(&qword_100160198);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100004BD4(&qword_10015A218);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_100121E30;
      sub_10000B800((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_10015A208);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_100025AD8(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

id sub_1000F3030@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling15ReflectionAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling15ReflectionAsset_metadata)) {
    goto LABEL_6;
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (result)
  {
    id result = [result assetMetaData];
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_100109250();
      uint64_t v8 = v7;

      sub_100004BD4(&qword_1001601A0);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 32) = 0;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 80) = 0;
      *(void *)(v9 + 88) = 0;
      *(void *)(v9 + 64) = v6;
      *(void *)(v9 + 72) = v8;
      *(unsigned char *)(v9 + 96) = 0;
      *(_OWORD *)(v9 + 40) = xmmword_100127640;
      *(void *)(v9 + 56) = 0xB000000000000000;
      *(void *)(v1 + v3) = v9;
      id result = (id)swift_release();
    }
  }
  if (*(void *)(v1 + v3))
  {
LABEL_6:
    swift_retain();
    sub_100027E14(a1);
    return (id)swift_release();
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1000F3154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A2C8);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10PhotoAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_100109250();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100004BD4(&qword_10015DCB8);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100004BD4(&qword_10015A2D8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_100121E30;
      sub_10000B800((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_10015A2C8);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_100027AE0(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s10PhotoAssetC9PhotoDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1000F337C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A3C0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VideoAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling10VideoAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_100109250();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100004BD4(&qword_10015F0F0);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100004BD4(&qword_10015A3D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_100121E30;
      sub_10000B800((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_10015A3C0);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_1000277AC(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s10VideoAssetC9VideoDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1000F35A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004BD4(&qword_10015A370);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling14LivePhotoAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO);
  if (v7)
  {
    id v8 = [v7 assetMetaData];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_100109250();
      uint64_t v12 = v11;

      *uint64_t v5 = v10;
      v5[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_100004BD4(&qword_1001601A8);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 104);
      uint64_t v15 = sub_100004BD4(&qword_10015A380);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      *(_OWORD *)(v13 + *(void *)(*(void *)v13 + 112)) = xmmword_100121E30;
      sub_10000B800((uint64_t)v5, v13 + *(void *)(*(void *)v13 + 120), &qword_10015A370);
      *(void *)(v1 + v6) = v13;
      swift_release();
    }
  }
  if (*(void *)(v1 + v6))
  {
LABEL_6:
    swift_retain();
    sub_100027478(a1);
    return swift_release();
  }
  else
  {
    uint64_t v17 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_1000F37CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_100004BD4(&qword_10015A3A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004BD4(&qword_100160170);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000F6BF8();
  sub_10010AE50();
  if (!v2)
  {
    _s10VisitAssetC9VisitDataVMa(0);
    sub_1000F6A80(&qword_10015A3A8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
    sub_10010AB60();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_10000B800((uint64_t)v6, (uint64_t)v12, &qword_10015A3A0);
    sub_1000F6B90((uint64_t)v12, v15, _s15GenericMapAssetC14GenericMapDataVMa);
  }
  return sub_10000B7B0((uint64_t)a1);
}

uint64_t sub_1000F3A2C()
{
  return 0x6144737469736976;
}

uint64_t sub_1000F3A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6144737469736976 && a2 == 0xEA00000000006174)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10010ACA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000F3AEC(uint64_t a1)
{
  unint64_t v2 = sub_1000F6BF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F3B28(uint64_t a1)
{
  unint64_t v2 = sub_1000F6BF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000F3B64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F37CC(a1, a2);
}

uint64_t sub_1000F3B7C(void *a1)
{
  uint64_t v2 = sub_100004BD4(&qword_100160180);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_1000F6BF8();
  sub_10010AE60();
  _s10VisitAssetC9VisitDataVMa(0);
  sub_1000F6A80(&qword_10015BBD8, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
  sub_10010AC00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1000F3CF0(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  uint64_t v13 = sub_100004BD4(&qword_10015A240);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone((Class)type metadata accessor for GenericMapThumbnailCacheOperation());
  uint64_t v17 = v6;
  swift_bridgeObjectRetain();
  id v18 = a6;
  id v19 = v16;
  sub_1000F2AC0((uint64_t)v15);
  sub_10000B800((uint64_t)v15, (uint64_t)v19 + qword_10016E140, &qword_10015A240);

  return sub_1000F780C(v17, a1, a2, v12, a4, a5, v18);
}

uint64_t sub_1000F3E10(uint64_t a1, char a2, id a3)
{
  uint64_t v6 = v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_id;
  id v7 = [a3 userInterfaceStyle];

  return sub_10007AEE8(v6, a1, (uint64_t)v7, 0, 0, 1, a2);
}

uint64_t sub_1000F3E88()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A3A0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)&v23[-v5];
  uint64_t v7 = sub_100004BD4(&qword_10015A240);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling15GenericMapAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  swift_retain();
  sub_1000257A4((uint64_t)v9);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_10000B9CC((uint64_t)v9, &qword_10015A240);
    return 0;
  }
  sub_1000F6B90((uint64_t)v9, (uint64_t)v13, _s15GenericMapAssetC14GenericMapDataVMa);
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100122220;
  sub_1000F6AC8((uint64_t)v13, (uint64_t)v6);
  uint64_t v15 = _s10VisitAssetC9VisitDataVMa(0);
  id v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  if (v16(v6, 1, v15) == 1)
  {
    sub_10000B9CC((uint64_t)v6, &qword_10015A3A0);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v17 = *v6;
    uint64_t v18 = v6[1];
    swift_bridgeObjectRetain();
    sub_1000F6B30((uint64_t)v6, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  sub_1000F6AC8((uint64_t)v13, (uint64_t)v4);
  if (v16((uint64_t *)v4, 1, v15) == 1)
  {
    sub_10000B9CC((uint64_t)v4, &qword_10015A3A0);
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v20 = *((void *)v4 + 2);
    uint64_t v21 = *((void *)v4 + 3);
    swift_bridgeObjectRetain();
    sub_1000F6B30((uint64_t)v4, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 48) = v20;
  *(void *)(inited + 56) = v21;
  uint64_t v19 = sub_100042280(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  sub_1000F6B30((uint64_t)v13, _s15GenericMapAssetC14GenericMapDataVMa);
  return v19;
}

uint64_t sub_1000F4238()
{
  return swift_release();
}

id sub_1000F4248()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15GenericMapAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1000F4290()
{
  return _s15GenericMapAssetCMa(0);
}

uint64_t _s15GenericMapAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_100160088);
}

uint64_t sub_1000F42B8()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_1000F42FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100004BD4(&qword_10015A3A0) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)_s10VisitAssetC9VisitDataVMa(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = v7[7];
      uint64_t v50 = v8;
      __dst = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_100109460();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
        memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v19 = v7[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v17((char *)a2 + v19, 1, v15))
      {
        uint64_t v22 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
      }
      uint64_t v23 = v7[9];
      uint64_t v24 = (char *)a1 + v23;
      char v25 = (char *)a2 + v23;
      if (v17((char *)a2 + v23, 1, v15))
      {
        uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v24, v25, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
      }
      uint64_t v27 = v7[10];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v7[11];
      uint64_t v31 = (char *)a1 + v30;
      id v32 = (char *)a2 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v7[12];
      char v34 = (char *)a1 + v33;
      unsigned __int8 v35 = (char *)a2 + v33;
      unint64_t v36 = *((void *)v35 + 1);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)char v34 = *(_OWORD *)v35;
      }
      else
      {
        uint64_t v37 = *(void *)v35;
        sub_100006F28(*(void *)v35, *((void *)v35 + 1));
        *(void *)char v34 = v37;
        *((void *)v34 + 1) = v36;
      }
      uint64_t v38 = v7[13];
      id v39 = (char *)a1 + v38;
      id v40 = (char *)a2 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)id v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_100006F28(*(void *)v40, *((void *)v40 + 1));
        *(void *)id v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      uint64_t v43 = v7[15];
      id v44 = (char *)a1 + v43;
      id v45 = (char *)a2 + v43;
      *(void *)id v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v7[16];
      uint64_t v47 = (char *)a1 + v46;
      unint64_t v48 = (char *)a2 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v50 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1000F4794(uint64_t a1)
{
  objc_super v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[7];
    uint64_t v5 = sub_100109460();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v8 = a1 + v2[8];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = a1 + v2[9];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
    if (!result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    }
    uint64_t v10 = (uint64_t *)(a1 + v2[12]);
    unint64_t v11 = v10[1];
    if (v11 >> 60 != 15) {
      uint64_t result = sub_100007084(*v10, v11);
    }
    uint64_t v12 = (uint64_t *)(a1 + v2[13]);
    unint64_t v13 = v12[1];
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      return sub_100007084(v14, v13);
    }
  }
  return result;
}

void *sub_1000F4988(void *a1, void *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100004BD4(&qword_10015A3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = v4[7];
    uint64_t v47 = v5;
    __dst = (char *)a1 + v10;
    unint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_100109460();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = v4[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      uint64_t v19 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    uint64_t v20 = v4[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v14((char *)a2 + v20, 1, v12))
    {
      uint64_t v23 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v22, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    uint64_t v24 = v4[10];
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(void *)char v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v4[11];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v4[12];
    uint64_t v31 = (char *)a1 + v30;
    id v32 = (char *)a2 + v30;
    unint64_t v33 = *((void *)v32 + 1);
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v34 = *(void *)v32;
      sub_100006F28(*(void *)v32, *((void *)v32 + 1));
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
    }
    uint64_t v35 = v4[13];
    unint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    unint64_t v38 = *((void *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v39 = *(void *)v37;
      sub_100006F28(*(void *)v37, *((void *)v37 + 1));
      *(void *)unint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
    }
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v40 = v4[15];
    unint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    *(void *)unint64_t v41 = *(void *)v42;
    v41[8] = v42[8];
    uint64_t v43 = v4[16];
    id v44 = (char *)a1 + v43;
    id v45 = (char *)a2 + v43;
    *(void *)id v44 = *(void *)v45;
    v44[8] = v45[8];
    (*(void (**)(void *, void, uint64_t, int *))(v47 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1000F4DE0(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1000F6B30((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v4[7];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = sub_100109460();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
    int v22 = v21(v17, 1, v19);
    int v23 = v21(v18, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        goto LABEL_28;
      }
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_28:
        uint64_t v59 = v4[8];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        int v62 = v21(&a1[v59], 1, v19);
        int v63 = v21(v61, 1, v19);
        if (v62)
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v60, v61, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v60, 0, 1, v19);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v60, v61, v19);
LABEL_34:
            uint64_t v65 = v4[9];
            uint64_t v66 = &a1[v65];
            id v67 = &a2[v65];
            int v68 = v21(&a1[v65], 1, v19);
            int v69 = v21(v67, 1, v19);
            if (v68)
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v66, v67, v19);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v66, 0, 1, v19);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v66, v67, v19);
LABEL_40:
                uint64_t v71 = v4[10];
                uint64_t v72 = &a1[v71];
                uint64_t v73 = &a2[v71];
                uint64_t v74 = *(void *)v73;
                v72[8] = v73[8];
                *(void *)uint64_t v72 = v74;
                uint64_t v75 = v4[11];
                long long v76 = &a1[v75];
                id v77 = &a2[v75];
                uint64_t v78 = *(void *)v77;
                v76[8] = v77[8];
                *(void *)long long v76 = v78;
                uint64_t v79 = v4[12];
                unint64_t v80 = (uint64_t *)&a1[v79];
                CGRect v81 = (uint64_t *)&a2[v79];
                unint64_t v82 = *(void *)&a2[v79 + 8];
                if (*(void *)&a1[v79 + 8] >> 60 == 15)
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v83 = *v81;
                    sub_100006F28(v83, v82);
                    *unint64_t v80 = v83;
                    v80[1] = v82;
                    goto LABEL_47;
                  }
                }
                else
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v84 = *v81;
                    sub_100006F28(v84, v82);
                    uint64_t v85 = *v80;
                    unint64_t v86 = v80[1];
                    *unint64_t v80 = v84;
                    v80[1] = v82;
                    sub_100007084(v85, v86);
LABEL_47:
                    uint64_t v87 = v4[13];
                    char v88 = (uint64_t *)&a1[v87];
                    uint64_t v89 = (uint64_t *)&a2[v87];
                    unint64_t v90 = *(void *)&a2[v87 + 8];
                    if (*(void *)&a1[v87 + 8] >> 60 == 15)
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v91 = *v89;
                        sub_100006F28(v91, v90);
                        uint64_t *v88 = v91;
                        v88[1] = v90;
LABEL_54:
                        a1[v4[14]] = a2[v4[14]];
                        uint64_t v95 = v4[15];
                        id v96 = &a1[v95];
                        id v97 = &a2[v95];
                        uint64_t v98 = *(void *)v97;
                        v96[8] = v97[8];
                        *(void *)id v96 = v98;
                        uint64_t v99 = v4[16];
                        id v100 = &a1[v99];
                        uint64_t v101 = &a2[v99];
                        uint64_t v102 = *(void *)v101;
                        v100[8] = v101[8];
                        *(void *)id v100 = v102;
                        return a1;
                      }
                    }
                    else
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v92 = *v89;
                        sub_100006F28(v92, v90);
                        uint64_t v93 = *v88;
                        unint64_t v94 = v88[1];
                        uint64_t *v88 = v92;
                        v88[1] = v90;
                        sub_100007084(v93, v94);
                        goto LABEL_54;
                      }
                      sub_100069AD4((uint64_t)v88);
                    }
                    *(_OWORD *)char v88 = *(_OWORD *)v89;
                    goto LABEL_54;
                  }
                  sub_100069AD4((uint64_t)v80);
                }
                *(_OWORD *)unint64_t v80 = *(_OWORD *)v81;
                goto LABEL_47;
              }
              (*(void (**)(char *, uint64_t))(v20 + 8))(v66, v19);
            }
            uint64_t v70 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
            memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
        }
        uint64_t v64 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    }
    uint64_t v58 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v17, v18, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v15 = sub_100004BD4(&qword_10015A3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  uint64_t v9 = v4[7];
  __dst = &a1[v9];
  uint64_t v10 = &a2[v9];
  uint64_t v11 = sub_100109460();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v24 = v4[8];
  char v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  }
  uint64_t v28 = v4[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v13(&a2[v28], 1, v11))
  {
    uint64_t v31 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  }
  uint64_t v32 = v4[10];
  unint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)unint64_t v33 = v35;
  uint64_t v36 = v4[11];
  uint64_t v37 = &a1[v36];
  unint64_t v38 = &a2[v36];
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = v4[12];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  unint64_t v43 = *((void *)v42 + 1);
  if (v43 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
  }
  else
  {
    uint64_t v44 = *(void *)v42;
    sub_100006F28(*(void *)v42, *((void *)v42 + 1));
    *(void *)unint64_t v41 = v44;
    *((void *)v41 + 1) = v43;
  }
  uint64_t v45 = v4[13];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  unint64_t v48 = *((void *)v47 + 1);
  if (v48 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  else
  {
    uint64_t v49 = *(void *)v47;
    sub_100006F28(*(void *)v47, *((void *)v47 + 1));
    *(void *)uint64_t v46 = v49;
    *((void *)v46 + 1) = v48;
  }
  a1[v4[14]] = a2[v4[14]];
  uint64_t v50 = v4[15];
  unsigned __int8 v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)unsigned __int8 v51 = v53;
  uint64_t v54 = v4[16];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_1000F57A0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100004BD4(&qword_10015A3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = v4[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100109460();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = v4[8];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v13((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = v4[9];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v13((char *)a2 + v19, 1, v11))
    {
      uint64_t v22 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    uint64_t v23 = v4[10];
    uint64_t v24 = (char *)a1 + v23;
    char v25 = (char *)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v4[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *(_OWORD *)((char *)a1 + v4[13]) = *(_OWORD *)((char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v29 = v4[15];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = v4[16];
    unint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    v33[8] = v34[8];
    *(void *)unint64_t v33 = *(void *)v34;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1000F5B5C(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1000F6B30((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    uint64_t v18 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v4[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_100109460();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_22:
        uint64_t v50 = v4[8];
        unsigned __int8 v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        int v53 = v26(&a1[v50], 1, v24);
        int v54 = v26(v52, 1, v24);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v51, v52, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v51, 0, 1, v24);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v51, v52, v24);
LABEL_28:
            uint64_t v56 = v4[9];
            uint64_t v57 = &a1[v56];
            uint64_t v58 = &a2[v56];
            int v59 = v26(&a1[v56], 1, v24);
            int v60 = v26(v58, 1, v24);
            if (v59)
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v58, v24);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v57, 0, 1, v24);
                goto LABEL_34;
              }
            }
            else
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v57, v58, v24);
LABEL_34:
                uint64_t v62 = v4[10];
                int v63 = &a1[v62];
                uint64_t v64 = &a2[v62];
                *(void *)int v63 = *(void *)v64;
                v63[8] = v64[8];
                uint64_t v65 = v4[11];
                uint64_t v66 = &a1[v65];
                id v67 = &a2[v65];
                *(void *)uint64_t v66 = *(void *)v67;
                v66[8] = v67[8];
                uint64_t v68 = v4[12];
                int v69 = (uint64_t *)&a1[v68];
                uint64_t v70 = (uint64_t *)&a2[v68];
                unint64_t v71 = *(void *)&a1[v68 + 8];
                if (v71 >> 60 != 15)
                {
                  unint64_t v72 = v70[1];
                  if (v72 >> 60 != 15)
                  {
                    uint64_t v73 = *v69;
                    *int v69 = *v70;
                    v69[1] = v72;
                    sub_100007084(v73, v71);
LABEL_39:
                    uint64_t v74 = v4[13];
                    uint64_t v75 = (uint64_t *)&a1[v74];
                    long long v76 = (uint64_t *)&a2[v74];
                    unint64_t v77 = *(void *)&a1[v74 + 8];
                    if (v77 >> 60 != 15)
                    {
                      unint64_t v78 = v76[1];
                      if (v78 >> 60 != 15)
                      {
                        uint64_t v79 = *v75;
                        *uint64_t v75 = *v76;
                        v75[1] = v78;
                        sub_100007084(v79, v77);
                        goto LABEL_44;
                      }
                      sub_100069AD4((uint64_t)v75);
                    }
                    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
LABEL_44:
                    a1[v4[14]] = a2[v4[14]];
                    uint64_t v80 = v4[15];
                    CGRect v81 = &a1[v80];
                    unint64_t v82 = &a2[v80];
                    *(void *)CGRect v81 = *(void *)v82;
                    v81[8] = v82[8];
                    uint64_t v83 = v4[16];
                    uint64_t v84 = &a1[v83];
                    uint64_t v85 = &a2[v83];
                    *(void *)uint64_t v84 = *(void *)v85;
                    v84[8] = v85[8];
                    return a1;
                  }
                  sub_100069AD4((uint64_t)v69);
                }
                *(_OWORD *)int v69 = *(_OWORD *)v70;
                goto LABEL_39;
              }
              (*(void (**)(char *, uint64_t))(v25 + 8))(v57, v24);
            }
            uint64_t v61 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
            memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v24);
        }
        uint64_t v55 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v49 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v22, v23, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v17 = sub_100004BD4(&qword_10015A3A0);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v10 = v4[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_100109460();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v29 = v4[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (v15(&a2[v29], 1, v13))
  {
    uint64_t v32 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v30, v31, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  }
  uint64_t v33 = v4[9];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v15(&a2[v33], 1, v13))
  {
    uint64_t v36 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v34, v35, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v34, 0, 1, v13);
  }
  uint64_t v37 = v4[10];
  unint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  *(void *)unint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = v4[11];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  v41[8] = v42[8];
  *(void *)unint64_t v41 = *(void *)v42;
  *(_OWORD *)&a1[v4[12]] = *(_OWORD *)&a2[v4[12]];
  *(_OWORD *)&a1[v4[13]] = *(_OWORD *)&a2[v4[13]];
  a1[v4[14]] = a2[v4[14]];
  uint64_t v43 = v4[15];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  v44[8] = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  uint64_t v46 = v4[16];
  uint64_t v47 = &a1[v46];
  unint64_t v48 = &a2[v46];
  v47[8] = v48[8];
  *(void *)uint64_t v47 = *(void *)v48;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1000F63D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F63E8);
}

uint64_t sub_1000F63E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A3A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000F6458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F646C);
}

uint64_t sub_1000F646C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A3A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s15GenericMapAssetC14GenericMapDataVMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_1001600F0);
}

void sub_1000F6500()
{
  sub_1000F658C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000F658C()
{
  if (!qword_100160100)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    unint64_t v0 = sub_10010A700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160100);
    }
  }
}

uint64_t sub_1000F65E4()
{
  return swift_retain();
}

uint64_t sub_1000F65F4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling15GenericMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1000F660C()
{
  return sub_1000F3E88();
}

int *sub_1000F6630()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A3A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4(&qword_10015A240);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling15GenericMapAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_6;
  }
  swift_retain();
  sub_1000257A4((uint64_t)v10);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    uint64_t v15 = &qword_10015A240;
    uint64_t v16 = (uint64_t)v10;
    goto LABEL_7;
  }
  sub_1000F6B90((uint64_t)v10, (uint64_t)v14, _s15GenericMapAssetC14GenericMapDataVMa);
  sub_1000F6AC8((uint64_t)v14, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    sub_1000F6B90((uint64_t)v3, (uint64_t)v7, _s10VisitAssetC9VisitDataVMa);
    sub_100004BD4((uint64_t *)&unk_10015F6A0);
    unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_100122230;
    sub_10006A6C8((uint64_t)v7, v20 + v19);
    uint64_t v17 = sub_1000E9D50(v20);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1000F6B30((uint64_t)v7, _s10VisitAssetC9VisitDataVMa);
    sub_1000F6B30((uint64_t)v14, _s15GenericMapAssetC14GenericMapDataVMa);
    return v17;
  }
  sub_1000F6B30((uint64_t)v14, _s15GenericMapAssetC14GenericMapDataVMa);
  uint64_t v15 = &qword_10015A3A0;
  uint64_t v16 = (uint64_t)v3;
LABEL_7:
  sub_10000B9CC(v16, v15);
  return 0;
}

int *sub_1000F69CC()
{
  return sub_1000F6630();
}

uint64_t sub_1000F69F0()
{
  return sub_1000F6A80(&qword_10015A248, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_1000F6A38()
{
  return sub_1000F6A80(&qword_100160130, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_1000F6A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F6AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_10015A3A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F6B30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F6B90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000F6BF8()
{
  unint64_t result = qword_100160178;
  if (!qword_100160178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160178);
  }
  return result;
}

unsigned char *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000F6CE8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOMa()
{
  return &_s15GenericMapAssetC14GenericMapDataV10CodingKeysON;
}

unint64_t sub_1000F6D24()
{
  unint64_t result = qword_1001601B8;
  if (!qword_1001601B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001601B8);
  }
  return result;
}

unint64_t sub_1000F6D7C()
{
  unint64_t result = qword_1001601C0;
  if (!qword_1001601C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001601C0);
  }
  return result;
}

unint64_t sub_1000F6DD4()
{
  unint64_t result = qword_1001601C8;
  if (!qword_1001601C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001601C8);
  }
  return result;
}

uint64_t sub_1000F6E28()
{
  return swift_initClassMetadata2();
}

char *sub_1000F6E70()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = qword_1001601D0;
  sub_100004BD4(&qword_1001602E8);
  sub_1000F6FEC();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  unsigned int v4 = v0;
  *(void *)&v0[v2] = [objc_allocWithZone(ObjCClassFromMetadata) init];

  v7.receiver = v4;
  v7.super_class = ObjectType;
  uint64_t v5 = (char *)[super init];
  [*(id *)&v5[qword_1001601D0] setCountLimit:500];
  return v5;
}

char *sub_1000F6F30()
{
  return sub_1000F6E70();
}

uint64_t sub_1000F6F54(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  swift_unknownObjectRetain();
  id v5 = a1;
  sub_10010A7B0();

  swift_unknownObjectRelease();
  return sub_10000B7B0((uint64_t)&v7);
}

void sub_1000F6FC4(uint64_t a1)
{
}

uint64_t type metadata accessor for MemoryCache()
{
  return sub_100008550();
}

unint64_t sub_1000F6FEC()
{
  unint64_t result = qword_1001602F0;
  if (!qword_1001602F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001602F0);
  }
  return result;
}

uint64_t sub_1000F702C(UIImage *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v5 = sub_100109070();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  sub_1000F753C((uint64_t)v13);
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
  sub_10005058C();
  sub_1001091C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  uint64_t v17 = UIImageHEICRepresentation(v24);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_100109250();
    unint64_t v21 = v20;

    sub_1000FB500();
    sub_100007084(v19, v21);
  }
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

id sub_1000F726C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100109070();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001091E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - v13;
  sub_1000F753C((uint64_t)v12);
  v23[0] = a1;
  v23[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_10005058C();
  sub_1001091C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  id v16 = [self defaultManager];
  sub_100109160();
  NSString v17 = sub_100109CF0();
  swift_bridgeObjectRelease();
  unsigned int v18 = [v16 fileExistsAtPath:v17];

  if (v18)
  {
    sub_100109060();
    id v19 = objc_allocWithZone((Class)UIImage);
    NSString v20 = sub_100109CF0();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithContentsOfFile:v20];

    v15(v14, v8);
  }
  else
  {
    v15(v14, v8);
    return 0;
  }
  return v21;
}

uint64_t sub_1000F753C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100109070();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001091E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v16 - v11;
  if (qword_100158A68 != -1) {
    swift_once();
  }
  if (qword_10016DEA8)
  {
    sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, (uint64_t)v10);
    unsigned int v18 = enum case for URL.DirectoryHint.inferFromPath(_:);
    NSString v17 = *(void (**)(char *))(v3 + 104);
    v17(v5);
    v16[1] = sub_10005058C();
    sub_1001091B0();
    v16[0] = a1;
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v5, v2);
    uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
    v14(v10, v6);
    ((void (*)(char *, void, uint64_t))v17)(v5, v18, v2);
    sub_1001091B0();
    v13(v5, v2);
    return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
  }
  else
  {
    return sub_1001090B0();
  }
}

id sub_1000F780C(unsigned char *a1, int a2, uint64_t a3, int a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  uint64_t v42 = a3;
  uint64_t v43 = a5;
  LODWORD(v44) = a4;
  int v41 = a2;
  uint64_t v12 = sub_1001098E0();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v48 = v12;
  __chkstk_darwin(v12);
  uint64_t v46 = &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = sub_100109960();
  uint64_t v14 = *(void *)(v45 - 8);
  uint64_t v15 = __chkstk_darwin(v45);
  NSString v17 = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  id v19 = &v40[-v18];
  v8[qword_100160310] = a1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_type];
  *(void *)&v8[qword_100160318] = *(void *)&a1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_attachments];
  NSString v20 = &a1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_sourceAttachments];
  swift_beginAccess();
  *(void *)&v8[qword_100160320] = *v20;
  id v21 = *(void **)&a1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_assetMO];
  uint64_t v22 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21) {
    id v23 = [v21 objectID];
  }
  else {
    id v23 = 0;
  }
  *(void *)&v8[qword_100160328] = v23;
  uint64_t v24 = *(void **)&a1[OBJC_IVAR____TtCC21JournalShareExtension10Journaling5Asset_context];
  *(void *)&v8[qword_100160330] = v24;
  v8[qword_100160338] = v41;
  uint64_t v25 = &v8[qword_100160340];
  uint64_t v26 = v43;
  *(void *)uint64_t v25 = v42;
  v25[8] = v44 & 1;
  int v27 = (uint64_t *)&v8[qword_100160308];
  uint64_t *v27 = v26;
  v27[1] = (uint64_t)a6;
  *(void *)&v8[qword_100160348] = a7;
  unint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  id v28 = v24;
  swift_bridgeObjectRetain();
  id v44 = a7;
  sub_10010A8D0(26);
  swift_bridgeObjectRelease();
  unint64_t v50 = 0xD000000000000018;
  unint64_t v51 = 0x8000000100113380;
  v52._uint64_t countAndFlagsBits = v26;
  v52._object = a6;
  sub_100109E00(v52);
  swift_bridgeObjectRelease();
  id v29 = [self mainBundle];
  id v30 = [v29 bundleIdentifier];

  if (v30)
  {
    sub_100109D30();
  }
  sub_100109950();
  uint64_t v31 = &v8[qword_100160350];
  uint64_t v32 = v45;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(&v8[qword_100160350], v19, v45);
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v17, v31, v32);
  uint64_t v33 = v46;
  sub_1001098C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(&v8[qword_100160358], v33, v48);

  uint64_t v34 = (objc_class *)type metadata accessor for ThumbnailCacheOperation();
  v49.receiver = v8;
  v49.super_class = v34;
  id v35 = [super init];
  uint64_t v36 = sub_100109940();
  os_log_type_t v37 = sub_10010A2C0();
  if (os_log_type_enabled(v36, v37))
  {
    unint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Initialized", v38, 2u);
    swift_slowDealloc();
  }

  return v35;
}

uint64_t sub_1000F7CC4()
{
  v1[6] = v0;
  uint64_t v2 = sub_1001098F0();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_10010A4C0();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = sub_1001098B0();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return _swift_task_switch(sub_1000F7E58, 0, 0);
}

uint64_t sub_1000F7E58()
{
  v0[18] = qword_100160358;
  sub_1001098A0();
  uint64_t v1 = sub_1001098D0();
  os_signpost_type_t v2 = sub_10010A460();
  if (sub_10010A6E0())
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v7 = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v3, v0[17], v4);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    os_signpost_id_t v9 = sub_100109890();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v9, "Image attachment loading", "", v8, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    uint64_t v10 = v0[14];

    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    unint64_t v7 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[14];
  v0[19] = v6;
  v0[20] = v7;
  v6(v11, v12, v13);
  sub_100109920();
  swift_allocObject();
  v0[21] = sub_100109910();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[22] = v15;
  v0[23] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v12, v13);
  if (qword_100158BF8 != -1) {
    swift_once();
  }
  uint64_t v16 = (uint64_t *)(v0[6] + qword_100160308);
  uint64_t v17 = *v16;
  v0[24] = *v16;
  uint64_t v18 = v16[1];
  v0[25] = v18;
  id v19 = sub_1000F726C(v17, v18);
  NSString v20 = (UIImage *)[v19 imageByPreparingForDisplay];

  if (v20)
  {
    id v21 = sub_100109940();
    os_log_type_t v22 = sub_10010A2F0();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cache hit.", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  id v25 = sub_1000F9E9C();
  uint64_t v26 = v0[6];
  if (v25)
  {
    int v27 = v25;
    sub_10005B1BC();
    NSString v20 = sub_10007C9CC(v27);
    switch(*(unsigned char *)(v26 + qword_100160338))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v42 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          sub_1000F97C4(v20, v17, v18);
        }
        break;
    }
    uint64_t v43 = sub_100109940();
    os_log_type_t v44 = sub_10010A2F0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Image file attachment found.", v45, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

    goto LABEL_45;
  }
  if (sub_10008215C(*(unsigned char *)(v26 + qword_100160310)) == 0x6F746F6870 && v28 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v29 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      id v46 = (id)v0[6];
      uint64_t v47 = sub_100109940();
      os_log_type_t v48 = sub_10010A2D0();
      BOOL v49 = os_log_type_enabled(v47, v48);
      unint64_t v50 = (char *)v0[6];
      if (v49)
      {
        unint64_t v51 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v51 = 134217984;
        unint64_t v52 = *(void *)&v50[qword_100160318];
        if (v52 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = sub_10010AA80();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        int v54 = (void *)v0[6];
        v0[4] = v53;
        sub_10010A730();

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "did not find image file attachment, attachments.count=%ld", v51, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
      NSString v20 = 0;
      uint64_t v24 = v0[6];
      goto LABEL_45;
    }
  }
  v0[26] = qword_100160350;
  id v30 = sub_100109940();
  os_log_type_t v31 = sub_10010A2F0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Will try to get image from Core Data (legacy support)", v32, 2u);
    swift_slowDealloc();
  }
  uint64_t v33 = v0[6];

  uint64_t v34 = *(void **)(v33 + qword_100160330);
  v0[27] = v34;
  if (!v34)
  {
    uint64_t v39 = sub_100109940();
    os_log_type_t v40 = sub_10010A2D0();
    if (os_log_type_enabled(v39, v40))
    {
      int v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "context is nil", v41, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];
    goto LABEL_38;
  }
  id v35 = *(void **)(v0[6] + qword_100160328);
  v0[28] = v35;
  if (!v35)
  {
    uint64_t v39 = v34;
    uint64_t v55 = sub_100109940();
    os_log_type_t v56 = sub_10010A2D0();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "assetID is nil", v57, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[6];

LABEL_38:
    NSString v20 = 0;
LABEL_45:
    sub_1000F9B7C(v24, "Image attachment loading", 24, 2);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v65 = (uint64_t (*)(UIImage *))v0[1];
    return v65(v20);
  }
  id v36 = v34;
  id v37 = v35;
  if ([v36 concurrencyType] == (id)1)
  {
    id v38 = v36;
  }
  else
  {
    id v38 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
    [v38 setParentContext:v36];
  }
  v0[29] = v38;
  uint64_t v58 = (void *)v0[6];
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[10]);
  int v59 = (void *)swift_allocObject();
  v0[30] = v59;
  v59[2] = v38;
  v59[3] = v37;
  v59[4] = v58;
  id v60 = v37;
  v38;
  id v61 = v58;
  uint64_t v62 = (void *)swift_task_alloc();
  v0[31] = v62;
  uint64_t v63 = sub_100004BD4(&qword_100159448);
  void *v62 = v0;
  v62[1] = sub_1000F87D8;
  uint64_t v64 = v0[12];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v64, sub_1000FAAB4, v59, v63);
}

uint64_t sub_1000F87D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1000F894C, 0, 0);
}

uint64_t sub_1000F894C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v4 = *(void **)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 48);

    uint64_t v6 = v5;
LABEL_24:
    sub_1000F9B7C(v6, "Image attachment loading", 24, 2);
    uint64_t v11 = 0;
    goto LABEL_25;
  }
  id v7 = objc_allocWithZone((Class)UIImage);
  sub_100006F28(v2, v1);
  Class isa = sub_100109240().super.isa;
  id v9 = [v7 initWithData:isa];
  sub_100008508(v2, v1);

  if (!v9)
  {
    sub_100006F28(v2, v1);
    uint64_t v12 = sub_100109940();
    uint64_t v13 = sub_10010A2D0();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      uint64_t v15 = v14;
      uint64_t v16 = 0;
      switch(v1 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v2) - v2;
          if (__OFSUB__(HIDWORD(v2), v2))
          {
            __break(1u);
LABEL_29:
            __break(1u);
            JUMPOUT(0x1000F8F30);
          }
          uint64_t v16 = (int)v16;
LABEL_22:
          id v37 = *(void **)(v0 + 224);
          id v36 = *(void **)(v0 + 232);
          id v38 = *(void **)(v0 + 216);
          *(void *)(v0 + 40) = v16;
          sub_10010A730();
          sub_100008508(v2, v1);
          _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v13, "can't create image from data (size: %{bytes}ld)", v15, 0xCu);
          swift_slowDealloc();

          sub_100008508(v2, v1);
          break;
        case 2uLL:
          uint64_t v34 = *(void *)(v2 + 16);
          uint64_t v33 = *(void *)(v2 + 24);
          BOOL v35 = __OFSUB__(v33, v34);
          uint64_t v16 = v33 - v34;
          if (!v35) {
            goto LABEL_22;
          }
          goto LABEL_29;
        case 3uLL:
          goto LABEL_22;
        default:
          uint64_t v16 = BYTE6(v1);
          goto LABEL_22;
      }
    }
    else
    {
      uint64_t v17 = *(void **)(v0 + 224);
      uint64_t v18 = *(void **)(v0 + 216);

      sub_100008508(v2, v1);
      sub_100008508(v2, v1);
    }
    uint64_t v6 = *(void *)(v0 + 48);
    goto LABEL_24;
  }
  uint64_t v10 = *(void *)(v0 + 48);
  sub_10005B1BC();
  uint64_t v11 = sub_10007C9CC(v9);
  switch(*(unsigned char *)(v10 + qword_100160338))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v19 = sub_10010ACA0();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        sub_1000F97C4(v11, *(void *)(v0 + 192), *(void *)(v0 + 200));
      }
      break;
  }
  NSString v20 = (void *)(v0 + 120);
  id v21 = sub_1001098D0();
  sub_100109900();
  os_signpost_type_t v22 = sub_10010A450();
  if (sub_10010A6E0())
  {
    os_signpost_type_t v47 = v22;
    uint64_t v24 = *(void *)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v25 = *(void *)(v0 + 56);
    swift_retain();
    sub_100109930();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v26 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
      uint64_t v26 = "";
    }
    format = (char *)v26;
    NSString v20 = (void *)(v0 + 128);
    uint64_t v43 = *(void **)(v0 + 224);
    os_log_type_t v44 = *(void **)(v0 + 232);
    uint64_t v45 = *(void **)(v0 + 216);
    id v46 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v42 = *(void *)(v0 + 104);
    (*(void (**)(void, uint64_t))(v0 + 152))(*(void *)(v0 + 128), v29);
    id v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v30 = 0;
    os_signpost_id_t v31 = sub_100109890();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v47, v31, "Image attachment loading", format, v30, 2u);
    swift_slowDealloc();

    sub_100008508(v2, v1);
    v46(v29, v42);
  }
  else
  {
    int v27 = *(void **)(v0 + 224);
    uint64_t v28 = *(void **)(v0 + 216);

    sub_100008508(v2, v1);
  }
  uint64_t v32 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 176))(*v20, *(void *)(v0 + 104));
  sub_1000F9B7C(v32, "Image attachment loading", 24, 2);
LABEL_25:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(UIImage *))(v0 + 8);
  return v39(v11);
}

uint64_t ThumbnailCacheOperation.main@Sendable ()()
{
  *(void *)(v1 + 128) = v0;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *v0) + 0xF0) + **(int **)((swift_isaMask & *v0) + 0xF0));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000F9060;
  return v4();
}

uint64_t sub_1000F9060(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000F9160, 0, 0);
}

uint64_t sub_1000F9160()
{
  uint64_t v13 = v0;
  sub_10010A0B0();
  uint64_t v1 = *(os_unfair_lock_s **)(v0[16] + qword_10015AD08);
  uint64_t v2 = (void *)swift_task_alloc();
  *uint64_t v2 = sub_10005B1BC();
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = sub_10004CC78;
  *(void *)(v4 + 24) = KeyPath;
  uint64_t v5 = (unsigned __int8 *)&v1[4];
  v1 += 10;
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_1000FA8B0(v5, v12);
  os_unfair_lock_unlock(v1);
  char v6 = v12[0];
  swift_release_n();
  swift_task_dealloc();
  id v7 = (void *)v0[18];
  if ((v6 & 1) != 0 || !v7)
  {
    id v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = v0[18];
    return v9(v10);
  }
  else
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1000F93C0;
    uint64_t v8 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1000F9768;
    v0[13] = &unk_100145C00;
    v0[14] = v8;
    [v7 prepareForDisplayWithCompletionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_1000F93C0()
{
  return _swift_task_switch(sub_1000F94A0, 0, 0);
}

uint64_t sub_1000F94A0()
{
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = *(void **)(v0 + 144);
  if (v1)
  {

    uint64_t v2 = v1;
  }
  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1000F9518()
{
  sub_100012F08(&qword_100159850);
  sub_10010AE40();
  swift_getFunctionTypeMetadata1();
  sub_100109FE0();

  return swift_getWitnessTable();
}

uint64_t sub_1000F95B0()
{
  return 8;
}

void *sub_1000F95BC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000F95C8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000F9658;
  return ThumbnailCacheOperation.main@Sendable ()();
}

uint64_t sub_1000F9658(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  char v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1000F9768(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_1000FB708((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t sub_1000F97C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100109A70();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100109AC0();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100158C00 != -1) {
    swift_once();
  }
  v18[1] = qword_10016DFF8;
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_1000FAB54;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DEE8;
  aBlock[3] = &unk_100145C90;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a1;
  swift_bridgeObjectRetain();
  sub_100109A90();
  NSString v20 = _swiftEmptyArrayStorage;
  sub_100037A8C((unint64_t *)&qword_100159D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100004BD4((uint64_t *)&unk_10015A5E0);
  sub_100019AF4();
  sub_10010A7D0();
  sub_10010A420();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_1000F9AE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a2;
    sub_1000F702C(v8, a3, a4);
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000F9B7C(uint64_t a1, const char *a2, uint64_t a3, int a4)
{
  int v23 = a4;
  uint64_t v24 = (char *)a2;
  uint64_t v4 = sub_1001098F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001098B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = sub_1001098D0();
  sub_100109900();
  int v22 = sub_10010A450();
  uint64_t result = sub_10010A6E0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  if ((v23 & 1) == 0)
  {
    if (!v24)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  if ((unint64_t)v24 >> 32)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v24 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v24 >> 16 > 0x10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v24 = &v25;
LABEL_10:
  swift_retain();
  sub_100109930();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v17 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v17 = "";
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v18 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v18 = 0;
  os_signpost_id_t v19 = sub_100109890();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v22, v19, v24, v17, v18, 2u);
  swift_slowDealloc();

  NSString v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v8);
}

id sub_1000F9E9C()
{
  uint64_t v1 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001091E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v32 - v9;
  id v11 = v0;
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000FAB78(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  if (!v13) {
    return 0;
  }
  sub_1000C7FA4(v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    switch(*((unsigned char *)v11 + qword_100160338))
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v14 = sub_10010ACA0();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0
          || (sub_10006C4F0(),
              double v16 = v15,
              id v17 = [self mainScreen],
              [v17 scale],
              double v19 = v18,
              v17,
              (id v20 = sub_100059A54(v16 * v19)) == 0))
        {
LABEL_9:
          sub_100109150(1);
          id v22 = objc_allocWithZone((Class)UIImage);
          NSString v23 = sub_100109CF0();
          swift_bridgeObjectRelease();
          id v21 = [v22 initWithContentsOfFile:v23 cache:1];

          if (!v21)
          {
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
            uint64_t v24 = sub_100109940();
            os_log_type_t v25 = sub_10010A2D0();
            if (os_log_type_enabled(v24, v25))
            {
              uint64_t v26 = (uint8_t *)swift_slowAlloc();
              uint64_t v33 = swift_slowAlloc();
              uint64_t v35 = v33;
              *(_DWORD *)uint64_t v26 = 136315138;
              v32[1] = v26 + 4;
              sub_100037A8C((unint64_t *)&qword_10015B638, (void (*)(uint64_t))&type metadata accessor for URL);
              uint64_t v27 = sub_10010AC60();
              uint64_t v34 = sub_1000C50D4(v27, v28, &v35);
              sub_10010A730();
              swift_bridgeObjectRelease();
              uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
              v29(v8, v4);
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "getImageStoredInFile can't create image from %s", v26, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_release();
              v29(v10, v4);
            }
            else
            {
              swift_release();
              id v30 = *(void (**)(char *, uint64_t))(v5 + 8);
              v30(v8, v4);

              v30(v10, v4);
            }
            return 0;
          }
        }
        else
        {
          id v21 = v20;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        swift_release();
        return v21;
    }
  }
  swift_release();
  sub_10000B9CC((uint64_t)v3, (uint64_t *)&unk_100159D40);
  return 0;
}

void sub_1000FA414(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  type metadata accessor for JournalEntryAssetMO();
  if (!swift_dynamicCastClass())
  {

    char v14 = sub_100109940();
    os_log_type_t v15 = sub_10010A2D0();
    if (os_log_type_enabled(v14, v15))
    {
      double v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to retrieve assetMO based on NSManagedObjectID", v16, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  id v5 = sub_10003D050(0);
  if (!v5 || (uint64_t v6 = v5, v7 = [v5 data], v6, !v7))
  {
    id v11 = sub_100109940();
    os_log_type_t v12 = sub_10010A2F0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "data attachment [0] is nil", v13, 2u);
      swift_slowDealloc();
    }

LABEL_11:
    uint64_t v8 = 0;
    unint64_t v10 = 0xF000000000000000;
    goto LABEL_12;
  }
  uint64_t v8 = sub_100109250();
  unint64_t v10 = v9;

LABEL_12:
  *a3 = v8;
  a3[1] = v10;
}

void ThumbnailCacheOperation.init()()
{
}

void sub_1000FA60C()
{
}

uint64_t sub_1000FA63C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + qword_100160350;
  uint64_t v2 = sub_100109960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_100160358;
  uint64_t v4 = sub_1001098E0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

id ThumbnailCacheOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThumbnailCacheOperation();
  return [super dealloc];
}

uint64_t sub_1000FA788(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = a1 + qword_100160350;
  uint64_t v3 = sub_100109960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_100160358;
  uint64_t v5 = sub_1001098E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

char *sub_1000FA8A0()
{
  return &v1;
}

uint64_t sub_1000FA8B0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, *((void *)a1 + 1), *((void *)a1 + 2));
  *a2 = result & 1;
  return result;
}

uint64_t type metadata accessor for ThumbnailCacheOperation()
{
  uint64_t result = qword_100160388;
  if (!qword_100160388) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000FA948()
{
  uint64_t result = sub_100109960();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001098E0();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1000FAA64()
{
  return type metadata accessor for ThumbnailCacheOperation();
}

uint64_t sub_1000FAA6C()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000FAAB4(uint64_t *a1@<X8>)
{
  sub_1000FA414(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000FAAD4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FAB0C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000FAB54()
{
  return sub_1000F9AE0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000FAB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FAB70()
{
  return swift_release();
}

uint64_t sub_1000FAB78(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100004BD4(&qword_10015A000);
  __chkstk_darwin(v6 - 8);
  id v61 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100109880();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v60 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v63 = &v50[-v12];
  uint64_t v64 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  uint64_t v13 = __chkstk_darwin(v64);
  unint64_t v71 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v73 = &v50[-v15];
  uint64_t v16 = sub_100004BD4((uint64_t *)&unk_100159D40);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  int v59 = &v50[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v68 = &v50[-v19];
  uint64_t v76 = sub_1001091E0();
  uint64_t v20 = *(void *)(v76 - 8);
  uint64_t v21 = __chkstk_darwin(v76);
  uint64_t v55 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v67 = &v50[-v23];
  uint64_t v78 = type metadata accessor for AssetAttachment.AssetType(0);
  uint64_t v24 = __chkstk_darwin(v78);
  int v69 = (id *)&v50[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v27 = (id *)&v50[-v26];
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v28)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v58 = v8;
    uint64_t v54 = v3;
    unint64_t v77 = a1 & 0xC000000000000001;
    uint64_t v74 = *(void *)(a2 + qword_100160340);
    int v75 = *(unsigned __int8 *)(a2 + qword_100160340 + 8);
    uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    uint64_t v65 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v66 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v53 = (void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32);
    unint64_t v52 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
    os_log_type_t v56 = (void (**)(unsigned char *, uint64_t))(v20 + 8);
    uint64_t v8 = 4;
    unint64_t v62 = a1;
    uint64_t v29 = (uint64_t)v71;
LABEL_7:
    uint64_t v20 = v28;
    a2 = v8 - 4;
    if (v77) {
      break;
    }
    uint64_t v9 = *(void *)(a1 + 8 * v8);
    swift_retain();
    uint64_t v3 = v8 - 3;
    if (!__OFADD__(a2, 1)) {
      goto LABEL_12;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10010AA80();
    if (!v28) {
      goto LABEL_41;
    }
  }
  uint64_t v9 = sub_10010A920();
  uint64_t v3 = v8 - 3;
  if (__OFADD__(a2, 1)) {
    goto LABEL_39;
  }
LABEL_12:
  uint64_t v30 = v9 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType;
  sub_1000241BC(v9 + OBJC_IVAR____TtC21JournalShareExtension15AssetAttachment_assetType, (uint64_t)v27, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (v75) {
        goto LABEL_38;
      }
      goto LABEL_16;
    case 2u:
    case 3u:
      sub_1000240FC((uint64_t)v27);
      goto LABEL_5;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v32 = v30;
      uint64_t v33 = v69;
      sub_1000241BC(v32, (uint64_t)v69, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t)v33;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v36 = (uint64_t)v68;
          uint64_t v37 = v76;
          (*v65)((uint64_t)v68, 1, 1, v76);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v35 = (uint64_t)v33 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
          goto LABEL_22;
        default:
LABEL_22:
          id v38 = v73;
          sub_100024158(v35, (uint64_t)v73);
          sub_1000241BC((uint64_t)v38, v29, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v39 = v29;
            uint64_t v36 = (uint64_t)v68;
            uint64_t v37 = v76;
            (*v66)(v68, v39, v76);
            uint64_t v40 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            int v41 = v59;
            sub_1000CEC08((uint64_t)v59);
            swift_bridgeObjectRelease();
            uint64_t v37 = v76;
            if ((*v70)((uint64_t)v41, 1, v76) == 1)
            {
              sub_10000B9CC((uint64_t)v41, (uint64_t *)&unk_100159D40);
              uint64_t v40 = 1;
              a1 = v62;
              uint64_t v36 = (uint64_t)v68;
            }
            else
            {
              uint64_t v42 = *v66;
              uint64_t v43 = v55;
              (*v66)(v55, (uint64_t)v41, v76);
              os_log_type_t v44 = v68;
              v42(v68, (uint64_t)v43, v76);
              uint64_t v36 = (uint64_t)v44;
              uint64_t v37 = v76;
              uint64_t v40 = 0;
              a1 = v62;
            }
          }
          (*v65)(v36, v40, 1, v37);
          sub_1000240FC((uint64_t)v73);
          break;
      }
      uint64_t v72 = (uint64_t)v27 + *(int *)(sub_100004BD4((uint64_t *)&unk_10015CDF0) + 48);
      if ((*v70)(v36, 1, v37) == 1)
      {
        sub_10000B9CC(v36, (uint64_t *)&unk_100159D40);
LABEL_35:
        sub_1000240FC(v72);
        swift_release();
        uint64_t v29 = (uint64_t)v71;
        goto LABEL_6;
      }
      (*v66)(v67, v36, v37);
      sub_100109080();
      swift_bridgeObjectRetain();
      uint64_t v45 = v60;
      sub_1001097D0();
      uint64_t v46 = (uint64_t)v61;
      sub_100109790();
      uint64_t v47 = v58;
      if ((*v57)(v46, 1, v58) == 1)
      {
        sub_10000B9CC(v46, &qword_10015A000);
        swift_bridgeObjectRelease();
        (*v56)(v67, v76);
        a1 = v62;
        goto LABEL_35;
      }
      (*v53)(v63, v46, v47);
      sub_100109820();
      int v51 = sub_100109860();
      uint64_t v48 = *v52;
      (*v52)(v45, v47);
      v48(v63, v47);
      swift_bridgeObjectRelease();
      (*v56)(v67, v76);
      a1 = v62;
      if ((v51 & 1) == 0) {
        goto LABEL_35;
      }
      uint64_t v29 = (uint64_t)v71;
      if ((v75 & 1) == 0)
      {
        uint64_t v31 = *(void *)(v9 + 16);
        sub_1000240FC(v72);
LABEL_17:
        if (v31 == v74) {
          goto LABEL_38;
        }
LABEL_5:
        swift_release();
LABEL_6:
        ++v8;
        if (v3 == v28) {
          goto LABEL_41;
        }
        goto LABEL_7;
      }
      sub_1000240FC(v72);
LABEL_38:
      swift_bridgeObjectRelease();
      return v9;
    default:
      sub_1000240FC((uint64_t)v27);
      if (v75) {
        goto LABEL_38;
      }
LABEL_16:
      uint64_t v31 = *(void *)(v9 + 16);
      goto LABEL_17;
  }
}

uint64_t sub_1000FB500()
{
  return sub_100109260();
}

uint64_t sub_1000FB708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_100159DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FB770()
{
  uint64_t v1 = sub_1001091E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self mainBundle];
  id v6 = [v5 bundleURL];

  sub_100109140();
  uint64_t v7 = *(void *)(v0 + 24);
  v9[0] = *(void *)(v0 + 16);
  v9[1] = v7;
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = 0x646D6F6D2ELL;
  v10._object = (void *)0xE500000000000000;
  sub_100109E00(v10);
  sub_100109110();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1000FB8D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100109070();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001091E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v15 - v11;
  if (qword_100158A68 != -1) {
    swift_once();
  }
  if (qword_10016DEA8)
  {
    sub_10004FBE0(qword_10016DEA0, (void *)qword_10016DEA8, (uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
    sub_10005058C();
    sub_1001091B0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    sub_1001090D0();
  }
  uint64_t v13 = *(void *)(v1 + 40);
  v15[0] = *(void *)(v1 + 32);
  v15[1] = v13;
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = 0x6574696C71732ELL;
  v16._object = (void *)0xE700000000000000;
  sub_100109E00(v16);
  sub_100109110();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_1000FBB68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStackConfiguration()
{
  return self;
}

id sub_1000FBBDC(uint64_t a1)
{
  return sub_1000FBBFC(a1, 224, &qword_100160590);
}

id sub_1000FBBEC(uint64_t a1)
{
  return sub_1000FBBFC(a1, 112, &qword_100160598);
}

id sub_1000FBBFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v5 setAllowedUnits:a2];
  [v5 setZeroFormattingBehavior:10];
  id result = [v5 setUnitsStyle:3];
  *a3 = v5;
  return result;
}

uint64_t static FormatStyle<>.mediaTimeShort(for:)(double a1)
{
  uint64_t v2 = sub_10010AE90();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3600.0) {
    sub_10010AE80();
  }
  else {
    sub_10010AE70();
  }
  sub_100108D00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000FBD78(char a1, char a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100004BD4(&qword_10015A5F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10010A080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10010A060();
  swift_retain();
  uint64_t v10 = sub_10010A050();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  *(void *)(v11 + 32) = v9;
  *(unsigned char *)(v11 + 40) = a2;
  *(unsigned char *)(v11 + 41) = a1;
  *(void *)(v11 + 48) = ObjectType;
  swift_release();
  sub_10004C59C((uint64_t)v7, (uint64_t)&unk_1001606E0, v11);
  return swift_release();
}

id sub_1000FBEEC()
{
  id result = [self configurationWithPointSize:4 weight:3 scale:46.0];
  qword_10016E238 = (uint64_t)result;
  return result;
}

void sub_1000FBF38()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  id v1 = [self configurationWithFont:v0 scale:-1];

  qword_10016E240 = (uint64_t)v1;
}

id sub_1000FBFBC()
{
  if (qword_100158920 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10016DD18;
  qword_10016E248 = qword_10016DD18;

  return v0;
}

unint64_t sub_1000FC020(char a1)
{
  unint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F65646976;
      break;
    case 2:
      unint64_t result = 0x636973756DLL;
      break;
    case 3:
      unint64_t result = 0x7374736163646F70;
      break;
    case 4:
      unint64_t result = 1802465122;
      break;
    case 5:
      unint64_t result = 0x6D726F6665766177;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x722E657275676966;
      break;
    case 8:
      unint64_t result = 0x772E657275676966;
      break;
    case 9:
      unint64_t result = 0x6574756F72;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x6F6E2E636973756DLL;
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1000FC1AC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v31.receiver = v11;
  v31.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  [v12 setContentMode:2];
  uint64_t v13 = qword_100158CC0;
  uint64_t v14 = (char *)v12;
  if (v13 != -1) {
    swift_once();
  }
  [v14 setBackgroundColor:qword_10016E248];

  uint64_t v15 = OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView;
  Swift::String v16 = *(void **)&v14[OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView];
  [v16 setContentMode:2];
  [v16 setTintColor:qword_10016E248];
  [v14 addSubview:v16];
  id v17 = v16;
  id v18 = [v17 superview];
  uint64_t v19 = &selRef_layoutAttributesForCellWithIndexPath_;
  if (v18)
  {
    uint64_t v20 = v18;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v17 centerYAnchor];
    id v22 = [v20 centerYAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:0.0];
    if (v23)
    {
      id v23 = v23;
      [v23 setActive:1];

      uint64_t v20 = v23;
    }

    uint64_t v19 = &selRef_layoutAttributesForCellWithIndexPath_;
  }
  else
  {
    id v23 = 0;
  }

  id v24 = *(id *)&v14[v15];
  id v25 = [v24 superview];
  if (v25)
  {
    uint64_t v26 = v25;
    [v24 v19[45] 0];
    id v27 = [v24 centerXAnchor];
    id v28 = [v26 centerXAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    if (v29)
    {
      id v29 = v29;
      [v29 setActive:1];
    }
  }
  else
  {
    id v29 = 0;
    uint64_t v26 = v14;
  }

  return v14;
}

uint64_t sub_1000FC5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 121) = a6;
  *(unsigned char *)(v6 + 120) = a5;
  *(void *)(v6 + 40) = a4;
  sub_10010A060();
  *(void *)(v6 + 48) = sub_10010A050();
  uint64_t v8 = sub_100109FF0();
  *(void *)(v6 + 56) = v8;
  *(void *)(v6 + 64) = v7;
  return _swift_task_switch(sub_1000FC64C, v8, v7);
}

uint64_t sub_1000FC64C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (((1 << *(unsigned char *)(v0 + 120)) & 0x1A) != 0)
    {
      uint64_t v3 = qword_100158CD0;
      uint64_t v4 = &qword_1001605A8;
    }
    else
    {
      uint64_t v3 = qword_100158CC8;
      uint64_t v4 = &qword_1001605A0;
    }
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v7 = *v4;
    *(void *)(v0 + 80) = v7;
    *(void *)(v0 + 88) = *(void *)(v2
                                     + OBJC_IVAR____TtC21JournalShareExtension23CanvasFallbackAssetView_symbolImageView);
    *(void *)(v0 + 96) = sub_1000FC020(*(unsigned char *)(v0 + 121));
    *(void *)(v0 + 104) = v8;
    swift_retain();
    return _swift_task_switch(sub_1000FC7B4, v7, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1000FC7B4()
{
  sub_1000FC8C4(v0[12], v0[13]);
  v0[14] = v1;
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  return _swift_task_switch(sub_1000FC82C, v2, v3);
}

uint64_t sub_1000FC82C()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[11];
  uint64_t v3 = (void *)v0[9];
  swift_release();
  [v2 setImage:v1];

  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1000FC8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t *)(v2 + 120);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 120);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1000FCF10(a1, a2);
    if (v9)
    {
      *(id *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void **)(v3 + 112);
  swift_bridgeObjectRetain();
  id v11 = v10;
  NSString v12 = sub_100109CF0();
  swift_bridgeObjectRelease();
  id v13 = [self _systemImageNamed:v12 withConfiguration:v11];

  if (v13)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v14 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_1000FF278((uint64_t)v14, a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v6 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000FCA64()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1000FCAA4(uint64_t a1)
{
  return sub_1000FCAFC(a1, &qword_100158CB0, (void **)&qword_10016E238, &qword_1001605A0);
}

uint64_t sub_1000FCAD0(uint64_t a1)
{
  return sub_1000FCAFC(a1, &qword_100158CB8, (void **)&qword_10016E240, &qword_1001605A8);
}

uint64_t sub_1000FCAFC(uint64_t a1, void *a2, void **a3, uint64_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v6 = *a3;
  type metadata accessor for CanvasFallbackAssetView.SymbolImageCache();
  uint64_t v7 = swift_allocObject();
  id v8 = v6;
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v7 + 112) = v8;
  *(void *)(v7 + 120) = &_swiftEmptyDictionarySingleton;
  *a4 = v7;
  return result;
}

id sub_1000FCB80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasFallbackAssetView()
{
  return self;
}

uint64_t type metadata accessor for CanvasFallbackAssetView.SymbolImageCache()
{
  return self;
}

unint64_t sub_1000FCC10(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_10010A840(*(void *)(v2 + 40));

  return sub_1000FF6C0(a1, v4);
}

unint64_t sub_1000FCC54(uint64_t a1)
{
  sub_100109D30();
  sub_10010ADC0();
  sub_100109DB0();
  Swift::Int v2 = sub_10010AE20();
  swift_bridgeObjectRelease();
  return sub_1000FFD70(a1, v2);
}

unint64_t sub_1000FCCE4(double a1, double a2)
{
  sub_10010ADC0();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_10010AE00(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  sub_10010AE00(v5);
  Swift::Int v6 = sub_10010AE20();

  return sub_1000FF788(v6, a1, a2);
}

unint64_t sub_1000FCD70(unsigned __int8 a1)
{
  sub_10010ADC0();
  sub_100109DB0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10010AE20();

  return sub_1000FF7FC(a1, v2);
}

unint64_t sub_1000FCEA0(char a1)
{
  char v2 = a1 & 1;
  sub_10010ADC0();
  sub_10010ADD0(a1 & 1);
  Swift::Int v3 = sub_10010AE20();

  return sub_1000FFA74(v2, v3);
}

unint64_t sub_1000FCF10(uint64_t a1, uint64_t a2)
{
  sub_10010ADC0();
  sub_100109DB0();
  Swift::Int v4 = sub_10010AE20();

  return sub_1000FFB30(a1, a2, v4);
}

unint64_t sub_1000FCF88(uint64_t a1)
{
  sub_10010ADC0();
  type metadata accessor for CFString(0);
  sub_100100DCC(&qword_1001606B8, type metadata accessor for CFString);
  sub_1001096E0();
  Swift::Int v2 = sub_10010AE20();

  return sub_1000FFC14(a1, v2);
}

unint64_t sub_1000FD03C(double a1, double a2)
{
  sub_10010ADC0();
  CLLocationCoordinate2D.hash(into:)(a1, a2);
  Swift::Int v4 = sub_10010AE20();

  return sub_1000FF788(v4, a1, a2);
}

unint64_t sub_1000FD0B0(uint64_t a1)
{
  sub_1001094F0();
  sub_100100DCC((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_100109C00();

  return sub_1000FFEE8(a1, v2);
}

uint64_t sub_1000FD148(uint64_t a1, char a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BD4(&qword_1001606D0);
  uint64_t result = sub_10010AAB0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v23 >= v12) {
          goto LABEL_39;
        }
        unint64_t v24 = v33[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v12) {
            goto LABEL_39;
          }
          unint64_t v24 = v33[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                Swift::Int v3 = v2;
                goto LABEL_46;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v32;
              }
              Swift::Int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v33[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v12) {
                  goto LABEL_39;
                }
                unint64_t v24 = v33[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v22);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      sub_10010ADC0();
      if ((v34 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = v34;
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      sub_10010AE00(v14);
      if ((*((void *)&v34 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v15 = *((void *)&v34 + 1);
      }
      else {
        Swift::UInt64 v15 = 0;
      }
      sub_10010AE00(v15);
      uint64_t result = sub_10010AE20();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v34;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v34;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v19) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *Swift::Int v3 = v7;
  return result;
}

unint64_t sub_1000FD444(uint64_t a1, char a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BD4(&qword_1001606C8);
  Swift::Int v6 = (void *)sub_10010AAB0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1000FF3E8(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  *Swift::Int v3 = v6;
  return result;
}

uint64_t sub_1000FD628(uint64_t a1, char a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BD4(&qword_10015C610);
  uint64_t result = sub_10010AAB0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                Swift::Int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v31 = -1 << v29;
              }
              Swift::Int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_10010ADC0();
      sub_10010ADD0(v26);
      uint64_t result = sub_10010AE20();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *Swift::Int v3 = v7;
  return result;
}

uint64_t sub_1000FD8F4(uint64_t a1, char a2, uint64_t *a3)
{
  Swift::Int v4 = v3;
  uint64_t v6 = *v3;
  sub_100004BD4(a3);
  char v36 = a2;
  uint64_t v7 = sub_10010AAB0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    int64_t v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(void **)(*(void *)(v6 + 48) + 8 * v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v17);
    if (v36)
    {
      sub_10002426C(v23, v37);
    }
    else
    {
      sub_100037A20((uint64_t)v23, (uint64_t)v37);
      id v24 = v22;
    }
    sub_100109D30();
    sub_10010ADC0();
    sub_100109DB0();
    Swift::Int v25 = sub_10010AE20();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v8 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_10002426C(v37, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v19 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v19 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *Swift::Int v4 = v8;
  return result;
}

uint64_t sub_1000FDC2C(uint64_t a1, char a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BD4(&qword_10015C5D8);
  char v43 = a2;
  uint64_t result = sub_10010AAB0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int v41 = (void *)(v5 + 64);
    uint64_t v42 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v8 << 6);
      }
      else
      {
        int64_t v23 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v23 >= v40) {
          goto LABEL_39;
        }
        unint64_t v24 = v41[v23];
        ++v8;
        if (!v24)
        {
          int64_t v8 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_39;
          }
          unint64_t v24 = v41[v8];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_39:
              if ((v43 & 1) == 0)
              {
                uint64_t result = swift_release();
                Swift::Int v3 = v2;
                goto LABEL_46;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
              if (v39 >= 64) {
                bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v41 = -1 << v39;
              }
              Swift::Int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v8 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v40) {
                  goto LABEL_39;
                }
                unint64_t v24 = v41[v8];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v8 = v25;
          }
        }
LABEL_36:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v8 << 6);
      }
      long long v30 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
      uint64_t v31 = *(void *)(v5 + 56) + 104 * v22;
      long long v47 = *(_OWORD *)v31;
      long long v48 = *(_OWORD *)(v31 + 16);
      long long v49 = v30;
      char v32 = *(unsigned char *)(v31 + 32);
      uint64_t v33 = *(void *)(v31 + 40);
      uint64_t v34 = *(void *)(v31 + 48);
      char v46 = *(unsigned char *)(v31 + 56);
      uint64_t v35 = *(void *)(v31 + 72);
      uint64_t v36 = *(void *)(v31 + 80);
      uint64_t v37 = *(void *)(v31 + 96);
      uint64_t v44 = *(void *)(v31 + 88);
      uint64_t v45 = *(void *)(v31 + 64);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v38 = (id)v48;
        swift_bridgeObjectRetain();
      }
      sub_10010ADC0();
      if ((v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v49;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      sub_10010AE00(v13);
      if ((*((void *)&v49 + 1) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v14 = *((void *)&v49 + 1);
      }
      else {
        Swift::UInt64 v14 = 0;
      }
      sub_10010AE00(v14);
      uint64_t result = sub_10010AE20();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        long long v19 = v49;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        long long v19 = v49;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
      uint64_t v20 = *(void *)(v7 + 56) + 104 * v18;
      *(_OWORD *)uint64_t v20 = v47;
      *(_OWORD *)(v20 + 16) = v48;
      *(unsigned char *)(v20 + 32) = v32;
      *(void *)(v20 + 40) = v33;
      *(void *)(v20 + 48) = v34;
      *(unsigned char *)(v20 + 56) = v46;
      *(void *)(v20 + 64) = v45;
      *(void *)(v20 + 72) = v35;
      *(void *)(v20 + 80) = v36;
      *(void *)(v20 + 88) = v44;
      *(void *)(v20 + 96) = v37;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v42;
    }
  }
  uint64_t result = swift_release();
LABEL_46:
  *Swift::Int v3 = v7;
  return result;
}

uint64_t sub_1000FDFCC(uint64_t a1, char a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BD4(&qword_10015C620);
  char v35 = a2;
  uint64_t v6 = sub_10010AAB0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_10002426C(v22, v36);
    }
    else
    {
      sub_100037A20((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_100109D30();
    sub_10010ADC0();
    sub_100109DB0();
    Swift::Int v24 = sub_10010AE20();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_10002426C(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *Swift::Int v3 = v7;
  return result;
}

uint64_t sub_1000FE308(uint64_t a1, int a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = sub_1001094F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100004BD4(&qword_1001606C0);
  int v42 = a2;
  uint64_t v10 = sub_10010AAB0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    int64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    char v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              Swift::Int v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_100100DCC((unint64_t *)&qword_10015A860, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_100109C00();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *Swift::Int v3 = v11;
  return result;
}

uint64_t sub_1000FE72C(uint64_t a1, char a2)
{
  Swift::Int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004BD4(&qword_1001606B0);
  char v38 = a2;
  uint64_t v6 = sub_10010AAB0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          Swift::Int v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_10010ADC0();
    sub_100109DB0();
    uint64_t result = sub_10010AE20();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  Swift::Int v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *Swift::Int v3 = v7;
  return result;
}

void sub_1000FEA3C(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000FCCE4(a3, a4);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a2 & 1) == 0)
  {
    sub_1001000A8();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    int64_t v22 = (double *)(v18[6] + 16 * v12);
    *int64_t v22 = a3;
    v22[1] = a4;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      void v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_1000FD148(v15, a2 & 1);
  unint64_t v20 = sub_1000FCCE4(a3, a4);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    int64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CGSize(0);
  sub_10010AD20();
  __break(1u);
}

uint64_t sub_1000FEB7C(uint64_t a1, unsigned __int8 a2, char a3)
{
  Swift::Int v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000FCD70(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100100250();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000FD444(result, a3 & 1);
  uint64_t result = sub_1000FCD70(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_10010AD20();
  __break(1u);
  return result;
}

void sub_1000FECB4(uint64_t a1, char a2, char a3)
{
  Swift::Int v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000FCEA0(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1001003F4();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1000FD628(v13, a3 & 1);
  unint64_t v18 = sub_1000FCEA0(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_10010AD20();
  __break(1u);
}

_OWORD *sub_1000FEDEC(_OWORD *a1, void *a2, char a3)
{
  return sub_1000FEE2C(a1, a2, a3, &qword_10015C638, type metadata accessor for AttributeName);
}

_OWORD *sub_1000FEE0C(_OWORD *a1, void *a2, char a3)
{
  return sub_1000FEE2C(a1, a2, a3, &qword_10015C5F0, type metadata accessor for TraitKey);
}

_OWORD *sub_1000FEE2C(_OWORD *a1, void *a2, char a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v8 = (void **)v5;
  uint64_t v11 = (void *)*v5;
  unint64_t v13 = sub_1000FCC54((uint64_t)a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1001007C4(a4);
      goto LABEL_7;
    }
    sub_1000FD8F4(v16, a3 & 1, a4);
    unint64_t v22 = sub_1000FCC54((uint64_t)a2);
    if ((v17 & 1) == (v23 & 1))
    {
      unint64_t v13 = v22;
      char v19 = *v8;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a5(0);
    uint64_t result = (_OWORD *)sub_10010AD20();
    __break(1u);
    return result;
  }
LABEL_7:
  char v19 = *v8;
  if (v17)
  {
LABEL_8:
    uint64_t v20 = (_OWORD *)(v19[7] + 32 * v13);
    sub_10000B7B0((uint64_t)v20);
    return sub_10002426C(a1, v20);
  }
LABEL_13:
  sub_1000FF5A0(v13, (uint64_t)a2, a1, v19);

  return a2;
}

_OWORD *sub_1000FEF90(_OWORD *a1, void *a2, char a3)
{
  Swift::Int v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v9 = sub_1000FCC54((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1001007C4(&qword_10015C620);
      goto LABEL_7;
    }
    sub_1000FDFCC(v12, a3 & 1);
    unint64_t v18 = sub_1000FCC54((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      BOOL v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_10010AD20();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_10000B7B0((uint64_t)v16);
    return sub_10002426C(a1, v16);
  }
LABEL_13:
  sub_1000FF5A0(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1000FF0DC(uint64_t a1, uint64_t a2, char a3)
{
  Swift::Int v4 = (void **)v3;
  uint64_t v8 = sub_1001094F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1000FD0B0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100100984();
    goto LABEL_7;
  }
  sub_1000FE308(result, a3 & 1);
  uint64_t result = sub_1000FD0B0(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_10010AD20();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1000FF608(v14, (uint64_t)v11, a1, v20);
}

void sub_1000FF278(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000FCF10(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100100C18();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1000FE72C(v15, a4 & 1);
  unint64_t v20 = sub_1000FCF10(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_10010AD20();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

unint64_t sub_1000FF3E8(char a1, uint64_t a2, void *a3)
{
  sub_10010ADC0();
  sub_100109DB0();
  swift_bridgeObjectRelease();
  sub_10010AE20();
  unint64_t result = sub_10010A7F0();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1000FF55C(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

_OWORD *sub_1000FF5A0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  unint64_t result = sub_10002426C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1000FF608(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1001094F0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1000FF6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100100E14(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_10010A850();
      sub_1000AE3FC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1000FF788(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      BOOL v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1000FF7FC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 0x656772614C78;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x69576D756964656DLL;
          unint64_t v7 = 0xEA00000000006564;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x656772616CLL;
          break;
        case 3:
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6C6C616D73;
          break;
        case 5:
          unint64_t v7 = 0xEA00000000006E65;
          uint64_t v8 = 0x657263536C6C7566;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656772614C78;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEA00000000006564;
          if (v8 == 0x69576D756964656DLL) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x656772616CLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          if (v8 != 0x6D756964656DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6C6C616D73;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xEA00000000006E65;
          if (v8 != 0x657263536C6C7566) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1000FFA74(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1000FFB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10010ACA0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10010ACA0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1000FFC14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_100100DCC(&qword_1001606B8, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1001096D0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1001096D0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1000FFD70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_100109D30();
    uint64_t v8 = v7;
    if (v6 == sub_100109D30() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_100109D30();
          uint64_t v15 = v14;
          if (v13 == sub_100109D30() && v15 == v16) {
            break;
          }
          char v18 = sub_10010ACA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1000FFEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_100100DCC(&qword_10015A020, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v15 = sub_100109C70();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

id sub_1001000A8()
{
  uint64_t v1 = v0;
  sub_100004BD4(&qword_1001606D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10010AAA0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100100250()
{
  uint64_t v1 = v0;
  sub_100004BD4(&qword_1001606C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10010AAA0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001003F4()
{
  uint64_t v1 = v0;
  sub_100004BD4(&qword_10015C610);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10010AAA0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100100598()
{
  return sub_1001007C4(&qword_10015C638);
}

void *sub_1001005A4()
{
  sub_100004BD4(&qword_10015C5D8);
  uint64_t v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_10010AAA0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v35 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v5 + 8 * v8);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v33 - 1) & v33;
    unint64_t v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = 104 * v14;
    uint64_t v17 = *(void *)(v1 + 56) + v16;
    char v18 = *(unsigned char *)(v17 + 32);
    uint64_t v19 = *(void *)(v17 + 40);
    uint64_t v20 = *(void *)(v17 + 48);
    char v21 = *(unsigned char *)(v17 + 56);
    uint64_t v23 = *(void *)(v17 + 64);
    uint64_t v22 = *(void *)(v17 + 72);
    uint64_t v24 = *(void *)(v17 + 80);
    uint64_t v25 = *(void *)(v17 + 88);
    uint64_t v26 = *(void *)(v17 + 96);
    long long v28 = *(_OWORD *)v17;
    long long v27 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)(*(void *)(v3 + 48) + v15) = *(_OWORD *)(*(void *)(v1 + 48) + v15);
    uint64_t v29 = *(void *)(v3 + 56) + v16;
    *(_OWORD *)uint64_t v29 = v28;
    *(_OWORD *)(v29 + 16) = v27;
    *(unsigned char *)(v29 + 32) = v18;
    *(void *)(v29 + 40) = v19;
    *(void *)(v29 + 48) = v20;
    *(unsigned char *)(v29 + 56) = v21;
    *(void *)(v29 + 64) = v23;
    *(void *)(v29 + 72) = v22;
    *(void *)(v29 + 80) = v24;
    *(void *)(v29 + 88) = v25;
    *(void *)(v29 + 96) = v26;
    uint64_t v30 = (void *)v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v30;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v12) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v5 + 8 * v34);
  if (v33)
  {
    int64_t v8 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v8);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001007B8()
{
  return sub_1001007C4(&qword_10015C620);
}

id sub_1001007C4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100004BD4(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10010AAA0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v7 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    char v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 32 * v16;
    sub_100037A20(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    sub_10002426C(v23, (_OWORD *)(*(void *)(v5 + 56) + v19));
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v7 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100100984()
{
  uint64_t v1 = sub_1001094F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004BD4(&qword_1001606C0);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10010AAA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100100C18()
{
  uint64_t v1 = v0;
  sub_100004BD4(&qword_1001606B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10010AAA0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100100DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100100E14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100100E70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100100EA8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100100EE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 41);
  char v8 = *(unsigned char *)(v1 + 40);
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000090F0;
  return sub_1000FC5AC(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_100100FC4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  v32[1] = 0;
  uint64_t v6 = sub_100109AF0();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100109B30();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100109B20();
  *(void *)uint64_t v35 = sub_1001094D0();
  *(_WORD *)&v35[8] = v13;
  v35[10] = v14;
  v35[11] = v15;
  v35[12] = v16;
  v35[13] = v17;
  char v36 = v18;
  char v37 = v19;
  sub_100109B00();
  uint64_t v20 = sub_1001014C0(a1, a2);
  uint64_t v22 = v20;
  unint64_t v23 = v21;
  uint64_t v34 = v6;
  switch(v21 >> 62)
  {
    case 1uLL:
      v32[0] = v10;
      if (v20 >> 32 < (int)v20) {
        __break(1u);
      }
      sub_100006F28(v20, v21);
      sub_100101F58((int)v22, v22 >> 32);
      sub_100007084(v22, v23);
      sub_100007084(v22, v23);
      uint64_t v10 = v32[0];
      break;
    case 2uLL:
      uint64_t v24 = v10;
      v32[0] = v9;
      uint64_t v25 = a3;
      uint64_t v27 = *(void *)(v20 + 16);
      uint64_t v26 = *(void *)(v20 + 24);
      sub_100006F28(v20, v21);
      swift_retain();
      swift_retain();
      uint64_t v28 = v27;
      uint64_t v10 = v24;
      uint64_t v29 = v26;
      a3 = v25;
      uint64_t v9 = v32[0];
      sub_100101F58(v28, v29);
      swift_release();
      swift_release();
      sub_100007084(v22, v23);
      sub_100007084(v22, v23);
      break;
    case 3uLL:
      sub_100102008();
      memset(v35, 0, sizeof(v35));
      goto LABEL_7;
    default:
      *(void *)uint64_t v35 = v20;
      *(_WORD *)&v35[8] = v21;
      v35[10] = BYTE2(v21);
      v35[11] = BYTE3(v21);
      v35[12] = BYTE4(v21);
      v35[13] = BYTE5(v21);
      sub_100102008();
LABEL_7:
      sub_100109AD0();
      sub_100007084(v22, v23);
      sub_100007084(v22, v23);
      break;
  }
  sub_100109B10();
  sub_100004BD4(&qword_1001606E8);
  sub_100109AE0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  sub_1001094C0();
  uint64_t v30 = sub_1001094F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a3, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1001014C0(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_100004BD4(&qword_1001606F8);
  if (swift_dynamicCast())
  {
    sub_10004BEA4(v38, (uint64_t)&v41);
    sub_10000B718(&v41, v43);
    sub_100108F50();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    sub_10000B7B0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_100102060((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_10010A980();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    char v8 = sub_100102310(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = sub_100109E10();
    goto LABEL_17;
  }
LABEL_69:
  char v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_100102374(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_100101AB8((void *(*)(uint64_t *__return_ptr, char *, char *))sub_100102414);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_100109220();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_100101A3C(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_100109E50();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_10010A980();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_100101A3C(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_100109E20();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_100109230();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  char v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_100109230();
    sub_100008508(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_100008508((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_1001019E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(_WORD *)(a2 + 4) = *(_WORD *)(result + 4);
  *(unsigned char *)(a2 + 6) = *(unsigned char *)(result + 6) & 0xF | 0x50;
  *(unsigned char *)(a2 + 7) = *(unsigned char *)(result + 7);
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(result + 8) & 0x3F | 0x80;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)(result + 9);
  *(_WORD *)(a2 + 13) = *(_WORD *)(result + 13);
  *(unsigned char *)(a2 + 15) = *(unsigned char *)(result + 15);
  return result;
}

uint64_t sub_100101A3C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_100109E60();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_100109E30();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

char *sub_100101AB8(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_100127A40;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_100108E80() && __OFSUB__((int)v4, sub_100108EB0())) {
        goto LABEL_24;
      }
      sub_100108EC0();
      swift_allocObject();
      uint64_t v13 = sub_100108E60();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_100101EA4((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1001091F0();
      uint64_t result = sub_100101EA4(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_100101DBC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_10010214C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_100102210((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_10010228C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_100101E34(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_100101EA4(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_100108E80();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_100108EB0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_100108EA0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_100101F58(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100108E80();
  if (!result || (uint64_t result = sub_100108EB0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_100108EA0();
      sub_100109B30();
      sub_100102008();
      return sub_100109AD0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_100102008()
{
  unint64_t result = qword_1001606F0;
  if (!qword_1001606F0)
  {
    sub_100109B30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001606F0);
  }
  return result;
}

uint64_t sub_100102060(uint64_t a1)
{
  uint64_t v2 = sub_100004BD4(&qword_100160700);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001020C0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    unint64_t result = sub_10010A8E0();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10010214C(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_100102210(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_100108EC0();
  swift_allocObject();
  uint64_t result = sub_100108E70();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_100109210();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_10010228C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_100108EC0();
  swift_allocObject();
  uint64_t result = sub_100108E70();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_100102310(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_10010214C(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_100102210((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_10010228C((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_100102374(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_100108EC0();
      swift_allocObject();
      sub_100108E90();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_100109210();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_100102414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  uint64_t result = sub_100101E34((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100102480, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_100102480@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1001020C0(a1, a2);
}

uint64_t sub_1001024A0(void *a1)
{
  uint64_t v3 = sub_100004BD4(&qword_100160820);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000B718(a1, a1[3]);
  sub_100103D74();
  sub_10010AE60();
  v8[15] = 0;
  sub_1001094F0();
  sub_100103D04(&qword_10015BF70, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10010AC00();
  if (!v1)
  {
    _s16StreakEventAssetC12MetadataTypeVMa(0);
    v8[14] = 1;
    sub_100109460();
    sub_100103D04(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1001026A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_100109460();
  uint64_t v24 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_10015A850);
  __chkstk_darwin(v5 - 8);
  unsigned int v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100004BD4(&qword_100160810);
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16StreakEventAssetC12MetadataTypeVMa(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001094F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_10000B718(a1, a1[3]);
  sub_100103D74();
  uint64_t v13 = v28;
  sub_10010AE50();
  if (v13)
  {
    sub_10000B7B0((uint64_t)a1);
    return sub_1000728DC((uint64_t)v11);
  }
  else
  {
    uint64_t v28 = v9;
    uint64_t v14 = v25;
    char v30 = 0;
    sub_100103D04(&qword_10015A2C0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = (uint64_t)v26;
    sub_10010AB60();
    sub_100103DC8(v15, (uint64_t)v11);
    char v29 = 1;
    sub_100103D04(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v16 = v4;
    uint64_t v17 = v22;
    uint64_t v18 = v27;
    sub_10010AB90();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v18);
    uint64_t v19 = v23;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v11[*(int *)(v28 + 20)], v16, v17);
    sub_1000F1E48((uint64_t)v11, v19);
    sub_10000B7B0((uint64_t)a1);
    return sub_1000F1DA4((uint64_t)v11);
  }
}

uint64_t sub_100102A80()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x44497972746E65;
  }
}

uint64_t sub_100102AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001040A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100102ADC(uint64_t a1)
{
  unint64_t v2 = sub_100103D74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100102B18(uint64_t a1)
{
  unint64_t v2 = sub_100103D74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100102B54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001026A0(a1, a2);
}

uint64_t sub_100102B6C(void *a1)
{
  return sub_1001024A0(a1);
}

char *sub_100102B84(unsigned __int8 a1, char *a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v31 = sub_100004BD4(&qword_100160018);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001094F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v29 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v30 = v3;
  *(void *)(v3 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StreakEventAsset_metadata) = 0;
  if (a1 > 1u)
  {
    sub_1001094E0();
  }
  else
  {
    unint64_t v18 = sub_100109470();
    unint64_t v20 = v19;
    sub_1001094C0();
    sub_100100FC4(v18, v20, (uint64_t)v12);
  }
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v17, v15, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v17, v8);
  uint64_t v22 = (char *)sub_10003B8A4((uint64_t)v12, 19, 9);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  v21(v7, a2, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v23 = &v7[*(int *)(_s16StreakEventAssetC12MetadataTypeVMa(0) + 20)];
  uint64_t v24 = sub_100109460();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, v32, v24);
  swift_storeEnumTagMultiPayload();
  sub_100004BD4(&qword_100160828);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v25 + *(void *)(*(void *)v25 + 104);
  uint64_t v27 = sub_100004BD4(&qword_100160830);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_OWORD *)(v25 + *(void *)(*(void *)v25 + 112)) = xmmword_100121E30;
  sub_100103E30((uint64_t)v7, v25 + *(void *)(*(void *)v25 + 120));
  *(void *)&v22[OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StreakEventAsset_metadata] = v25;
  swift_release();
  return v22;
}

uint64_t sub_100102F90()
{
  return swift_release();
}

id sub_100102FA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16StreakEventAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100102FE8()
{
  return _s16StreakEventAssetCMa(0);
}

uint64_t _s16StreakEventAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_100160730);
}

uint64_t sub_100103010()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_100103054(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001094F0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100004BD4((uint64_t *)&unk_10015A850);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_100109460();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_100103208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001094F0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_100109460();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *sub_100103308(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015A850);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_100109460();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_10010346C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015A850);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100109460();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_100103634(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015A850);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_100109460();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_100103798(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1001094F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_10015A850);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_100109460();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_100103960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100103974);
}

uint64_t sub_100103974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100109460();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100103A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100103A84);
}

uint64_t sub_100103A84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004BD4((uint64_t *)&unk_10015A850);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100109460();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s16StreakEventAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_100160798);
}

void sub_100103BAC()
{
  sub_100023D28();
  if (v0 <= 0x3F)
  {
    sub_100109460();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100103C74()
{
  return sub_100103D04(&qword_1001607D0, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_100103CBC()
{
  return sub_100103D04(&qword_100160020, (void (*)(uint64_t))_s16StreakEventAssetC12MetadataTypeVMa);
}

uint64_t sub_100103D04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100103D4C()
{
  return swift_retain();
}

uint64_t sub_100103D5C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling16StreakEventAsset_metadata) = a1;
  return swift_release();
}

unint64_t sub_100103D74()
{
  unint64_t result = qword_100160818;
  if (!qword_100160818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160818);
  }
  return result;
}

uint64_t sub_100103DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4((uint64_t *)&unk_10015A850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100103E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004BD4(&qword_100160018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100103F64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16StreakEventAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s16StreakEventAssetC12MetadataTypeV10CodingKeysON;
}

unint64_t sub_100103FA0()
{
  unint64_t result = qword_100160838;
  if (!qword_100160838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160838);
  }
  return result;
}

unint64_t sub_100103FF8()
{
  unint64_t result = qword_100160840;
  if (!qword_100160840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160840);
  }
  return result;
}

unint64_t sub_100104050()
{
  unint64_t result = qword_100160848;
  if (!qword_100160848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160848);
  }
  return result;
}

uint64_t sub_1001040A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_100104188(char a1)
{
  unint64_t result = 0x707954616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 1735290739;
      break;
    case 2:
      unint64_t result = 0x6D614E6D75626C61;
      break;
    case 3:
      unint64_t result = 0x614E747369747261;
      break;
    case 4:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 5:
      unint64_t result = 0x656D614E707061;
      break;
    case 6:
      unint64_t result = 0x6D69547472617473;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x726156726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001042AC(void *a1)
{
  int v3 = v1;
  uint64_t v5 = sub_100004BD4(&qword_1001609A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_100106C28();
  sub_10010AE60();
  LOBYTE(v14[0]) = *v3;
  char v16 = 0;
  sub_10000B978();
  sub_10010AC30();
  if (!v2)
  {
    LOBYTE(v14[0]) = 1;
    sub_10010ABC0();
    LOBYTE(v14[0]) = 2;
    sub_10010ABC0();
    LOBYTE(v14[0]) = 3;
    sub_10010ABC0();
    uint64_t v9 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    LOBYTE(v14[0]) = 4;
    sub_1001091E0();
    sub_100106BE0(&qword_100159718, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10010AC00();
    LOBYTE(v14[0]) = 5;
    sub_10010ABC0();
    LOBYTE(v14[0]) = 6;
    sub_100109460();
    sub_100106BE0(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10010AC00();
    uint64_t v10 = &v3[*(int *)(v9 + 44)];
    char v11 = v10[32];
    long long v12 = *((_OWORD *)v10 + 1);
    v14[0] = *(_OWORD *)v10;
    v14[1] = v12;
    char v15 = v11;
    char v16 = 7;
    sub_100004BD4(&qword_100160988);
    sub_100106D90(&qword_1001609A8);
    sub_10010AC00();
    LOBYTE(v14[0]) = v3[*(int *)(v9 + 48)];
    char v16 = 8;
    sub_100106DD8();
    sub_10010AC00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10010465C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4((uint64_t *)&unk_100159D40);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4(&qword_100160978);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = &v14[*(int *)(v12 + 44)];
  *(_OWORD *)char v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v15[32] = 1;
  uint64_t v45 = (int *)v12;
  char v46 = a1;
  uint64_t v16 = *(int *)(v12 + 48);
  uint64_t v17 = v14;
  v14[v16] = 3;
  sub_10000B718(a1, a1[3]);
  sub_100106C28();
  unint64_t v18 = v47;
  sub_10010AE50();
  if (v18) {
    return sub_10000B7B0((uint64_t)v46);
  }
  uint64_t v19 = (uint64_t)v7;
  long long v47 = v15;
  uint64_t v40 = v16;
  uint64_t v20 = v43;
  char v51 = 0;
  sub_10000B864();
  uint64_t v21 = v44;
  sub_10010AB90();
  uint64_t v22 = (uint64_t)v17;
  *uint64_t v17 = v48;
  LOBYTE(v48) = 1;
  uint64_t v23 = v20;
  *((void *)v17 + 1) = sub_10010AB20();
  *((void *)v17 + 2) = v24;
  LOBYTE(v48) = 2;
  uint64_t v25 = sub_10010AB20();
  uint64_t v26 = (uint64_t)v46;
  *((void *)v17 + 3) = v25;
  *((void *)v17 + 4) = v27;
  LOBYTE(v48) = 3;
  uint64_t v28 = sub_10010AB20();
  uint64_t v29 = v45;
  *((void *)v17 + 5) = v28;
  *((void *)v17 + 6) = v30;
  sub_1001091E0();
  LOBYTE(v48) = 4;
  sub_100106BE0(&qword_1001596F8, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_10010AB60();
  sub_10000B800(v19, (uint64_t)&v17[v29[8]], (uint64_t *)&unk_100159D40);
  LOBYTE(v48) = 5;
  uint64_t v31 = sub_10010AB20();
  uint64_t v32 = (uint64_t *)&v17[v29[9]];
  *uint64_t v32 = v31;
  v32[1] = v33;
  sub_100109460();
  LOBYTE(v48) = 6;
  sub_100106BE0(&qword_100159700, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v34 = (uint64_t)v42;
  sub_10010AB60();
  sub_10000B800(v34, v22 + v29[10], (uint64_t *)&unk_10015CDE0);
  sub_100004BD4(&qword_100160988);
  char v51 = 7;
  sub_100106D90(&qword_100160990);
  sub_10010AB60();
  char v35 = v50;
  long long v36 = v49;
  char v37 = v47;
  *(_OWORD *)long long v47 = v48;
  *((_OWORD *)v37 + 1) = v36;
  v37[32] = v35;
  char v51 = 8;
  sub_100106C7C();
  sub_10010AB60();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v21);
  uint64_t v38 = v41;
  *(unsigned char *)(v22 + v40) = v48;
  sub_100106CD0(v22, v38);
  sub_10000B7B0(v26);
  return sub_100106D34(v22);
}

uint64_t sub_100104D88(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = sub_100004BD4(&qword_100160A18);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004BD4(&qword_100160A20);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004BD4(&qword_100160A28);
  uint64_t v18 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004BD4(&qword_100160A30);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B718(a1, a1[3]);
  sub_100107B94();
  sub_10010AE60();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_100107C3C();
      sub_10010ABB0();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_100107BE8();
      char v15 = v21;
      sub_10010ABB0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_100107C90();
    sub_10010ABB0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1001050F4()
{
  return sub_100104188(*v0);
}

uint64_t sub_1001050FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10010710C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100105124(uint64_t a1)
{
  unint64_t v2 = sub_100106C28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100105160(uint64_t a1)
{
  unint64_t v2 = sub_100106C28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010519C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10010465C(a1, a2);
}

uint64_t sub_1001051B4(void *a1)
{
  return sub_1001042AC(a1);
}

uint64_t sub_1001051CC()
{
  uint64_t v1 = 1802658148;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B72614479726576;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746867696CLL;
  }
}

uint64_t sub_10010521C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001074E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100105244(uint64_t a1)
{
  unint64_t v2 = sub_100107B94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100105280(uint64_t a1)
{
  unint64_t v2 = sub_100107B94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001052BC(uint64_t a1)
{
  unint64_t v2 = sub_100107C3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001052F8(uint64_t a1)
{
  unint64_t v2 = sub_100107C3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100105334(uint64_t a1)
{
  unint64_t v2 = sub_100107C90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100105370(uint64_t a1)
{
  unint64_t v2 = sub_100107C90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001053AC(uint64_t a1)
{
  unint64_t v2 = sub_100107BE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001053E8(uint64_t a1)
{
  unint64_t v2 = sub_100107BE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100105424@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100107624(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_100105450(void *a1)
{
  return sub_100104D88(a1, *v1);
}

uint64_t sub_10010546C()
{
  uint64_t v1 = sub_100004BD4(&qword_10015A290);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling20ThirdPartyMediaAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  swift_retain();
  sub_100026ADC((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10000B9CC((uint64_t)v3, &qword_10015A290);
    return 0;
  }
  sub_100106E2C((uint64_t)v3, (uint64_t)v7);
  sub_100004BD4(&qword_100159730);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100121F30;
  *(void *)(inited + 32) = *((void *)v7 + 1);
  *(_OWORD *)(inited + 40) = *((_OWORD *)v7 + 1);
  uint64_t v9 = *((void *)v7 + 6);
  *(_OWORD *)(inited + 56) = *((_OWORD *)v7 + 2);
  *(void *)(inited + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100042280(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100004BD4(&qword_100159738);
  swift_arrayDestroy();
  sub_100106D34((uint64_t)v7);
  return v10;
}

uint64_t sub_1001056A8()
{
  return swift_release();
}

id sub_1001056B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s20ThirdPartyMediaAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_100105700()
{
  return _s20ThirdPartyMediaAssetCMa(0);
}

uint64_t _s20ThirdPartyMediaAssetCMa(uint64_t a1)
{
  return sub_10000B43C(a1, (uint64_t *)&unk_100160878);
}

uint64_t sub_100105728()
{
  return swift_updateClassMetadata2();
}

void *sub_10010576C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = a2[6];
    uint64_t v9 = a3[8];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[5] = a2[5];
    a1[6] = v8;
    uint64_t v11 = sub_1001091E0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)v4 + v17;
    uint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = sub_100109460();
    uint64_t v24 = *(void *)(v23 - 8);
    char v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v27 = a3[11];
    uint64_t v28 = a3[12];
    uint64_t v29 = (char *)v4 + v27;
    uint64_t v30 = (char *)a2 + v27;
    long long v31 = *((_OWORD *)v30 + 1);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v31;
    v29[32] = v30[32];
    *((unsigned char *)v4 + v28) = *((unsigned char *)a2 + v28);
  }
  return v4;
}

uint64_t sub_100105A3C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1001091E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t v8 = sub_100109460();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_100105BC0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = a3[8];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v10 = sub_1001091E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (const void *)(a2 + v15);
  uint64_t v21 = sub_100109460();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(unsigned char *)(v27 + 32) = *(unsigned char *)(v28 + 32);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  return a1;
}

uint64_t sub_100105E40(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_100109460();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  long long v29 = (long long *)(a2 + v27);
  long long v30 = *v29;
  long long v31 = v29[1];
  *(unsigned char *)(v28 + 32) = *((unsigned char *)v29 + 32);
  *(_OWORD *)uint64_t v28 = v30;
  *(_OWORD *)(v28 + 16) = v31;
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1001061B0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1001091E0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100109460();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t sub_1001063F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1001091E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100004BD4((uint64_t *)&unk_100159D40);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  int v24 = (void *)(a1 + v23);
  int v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_100109460();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(unsigned char *)(v34 + 32) = *(unsigned char *)(v35 + 32);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  return a1;
}

uint64_t sub_10010671C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100106730);
}

uint64_t sub_100106730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100004BD4((uint64_t *)&unk_100159D40);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 32);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 40);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_100106870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100106884);
}

uint64_t sub_100106884(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    uint64_t v8 = sub_100004BD4((uint64_t *)&unk_100159D40);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100004BD4((uint64_t *)&unk_10015CDE0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s20ThirdPartyMediaAssetC12MetadataTypeVMa(uint64_t a1)
{
  return sub_10000B43C(a1, qword_1001608E0);
}

void sub_1001069D8()
{
  sub_10000B5A0(319, (unint64_t *)&qword_100159658, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_10000B5A0(319, (unint64_t *)&qword_10015A7C0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100106B04()
{
  return swift_retain();
}

uint64_t sub_100106B14(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC21JournalShareExtension10Journaling20ThirdPartyMediaAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100106B2C()
{
  return sub_10010546C();
}

uint64_t sub_100106B50()
{
  return sub_100106BE0(&qword_10015A298, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa);
}

uint64_t sub_100106B98()
{
  return sub_100106BE0(&qword_100160938, (void (*)(uint64_t))_s20ThirdPartyMediaAssetC12MetadataTypeVMa);
}

uint64_t sub_100106BE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100106C28()
{
  unint64_t result = qword_100160980;
  if (!qword_100160980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160980);
  }
  return result;
}

unint64_t sub_100106C7C()
{
  unint64_t result = qword_100160998;
  if (!qword_100160998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160998);
  }
  return result;
}

uint64_t sub_100106CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100106D34(uint64_t a1)
{
  uint64_t v2 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100106D90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100012F08(&qword_100160988);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100106DD8()
{
  unint64_t result = qword_1001609B0;
  if (!qword_1001609B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609B0);
  }
  return result;
}

uint64_t sub_100106E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100106F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12MetadataTypeV10CodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantON;
}

unint64_t sub_100106FB0()
{
  unint64_t result = qword_1001609B8;
  if (!qword_1001609B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609B8);
  }
  return result;
}

unint64_t sub_100107008()
{
  unint64_t result = qword_1001609C0;
  if (!qword_1001609C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609C0);
  }
  return result;
}

unint64_t sub_100107060()
{
  unint64_t result = qword_1001609C8;
  if (!qword_1001609C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609C8);
  }
  return result;
}

unint64_t sub_1001070B8()
{
  unint64_t result = qword_1001609D0;
  if (!qword_1001609D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609D0);
  }
  return result;
}

uint64_t sub_10010710C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1735290739 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100113660 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726156726F6C6F63 && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1001074E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000 || (sub_10010ACA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B72614479726576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10010ACA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_100107624(void *a1)
{
  uint64_t v2 = sub_100004BD4(&qword_1001609D8);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  int v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100004BD4(&qword_1001609E0);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004BD4(&qword_1001609E8);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004BD4(&qword_1001609F0);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B718(a1, a1[3]);
  sub_100107B94();
  uint64_t v12 = (uint64_t)v30;
  sub_10010AE50();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  uint64_t v13 = v29;
  int v30 = a1;
  uint64_t v14 = v11;
  uint64_t v15 = sub_10010ABA0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_10010A950();
    swift_allocError();
    uint64_t v11 = v18;
    sub_100004BD4(&qword_10015D600);
    *uint64_t v11 = &_s20ThirdPartyMediaAssetC12ColorVariantON;
    sub_10010AB10();
    sub_10010A940();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    sub_10000B7B0((uint64_t)a1);
    return v11;
  }
  uint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_100107C3C();
      sub_10010AB00();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_100107BE8();
      sub_10010AB00();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_100107C90();
    sub_10010AB00();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  sub_10000B7B0((uint64_t)v30);
  return v11;
}

unint64_t sub_100107B94()
{
  unint64_t result = qword_1001609F8;
  if (!qword_1001609F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609F8);
  }
  return result;
}

unint64_t sub_100107BE8()
{
  unint64_t result = qword_100160A00;
  if (!qword_100160A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A00);
  }
  return result;
}

unint64_t sub_100107C3C()
{
  unint64_t result = qword_100160A08;
  if (!qword_100160A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A08);
  }
  return result;
}

unint64_t sub_100107C90()
{
  unint64_t result = qword_100160A10;
  if (!qword_100160A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A10);
  }
  return result;
}

unsigned char *_s20ThirdPartyMediaAssetC12ColorVariantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100107DB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO10CodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO10CodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO15LightCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO15LightCodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO14DarkCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO14DarkCodingKeysON;
}

ValueMetadata *_s20ThirdPartyMediaAssetC12ColorVariantO18VeryDarkCodingKeysOMa()
{
  return &_s20ThirdPartyMediaAssetC12ColorVariantO18VeryDarkCodingKeysON;
}

unint64_t sub_100107E1C()
{
  unint64_t result = qword_100160A38;
  if (!qword_100160A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A38);
  }
  return result;
}

unint64_t sub_100107E74()
{
  unint64_t result = qword_100160A40;
  if (!qword_100160A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A40);
  }
  return result;
}

unint64_t sub_100107ECC()
{
  unint64_t result = qword_100160A48;
  if (!qword_100160A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A48);
  }
  return result;
}

unint64_t sub_100107F24()
{
  unint64_t result = qword_100160A50;
  if (!qword_100160A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A50);
  }
  return result;
}

unint64_t sub_100107F7C()
{
  unint64_t result = qword_100160A58;
  if (!qword_100160A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A58);
  }
  return result;
}

unint64_t sub_100107FD4()
{
  unint64_t result = qword_100160A60;
  if (!qword_100160A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A60);
  }
  return result;
}

unint64_t sub_10010802C()
{
  unint64_t result = qword_100160A68;
  if (!qword_100160A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A68);
  }
  return result;
}

unint64_t sub_100108084()
{
  unint64_t result = qword_100160A70;
  if (!qword_100160A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A70);
  }
  return result;
}

unint64_t sub_1001080DC()
{
  unint64_t result = qword_100160A78;
  if (!qword_100160A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A78);
  }
  return result;
}

id SyncDataMO.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id JournalEntryAssetAttachmentMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetAttachmentMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetAttachmentMO()
{
  return self;
}

id JournalEntryAssetAttachmentMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetAttachmentMO();
  [super dealloc];
}

id static JournalEntryAssetAttachmentMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void *sub_100108308()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_100108314@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for JournalEntryAssetAttachmentMO();
  uint64_t result = sub_10010A8F0();
  *a1 = result;
  return result;
}

id JournalEntryAssetFileAttachmentMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetFileAttachmentMO()
{
  return self;
}

id JournalEntryAssetFileAttachmentMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetFileAttachmentMO();
  return [super dealloc];
}

id static JournalEntryAssetFileAttachmentMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

unint64_t sub_1001084DC()
{
  unint64_t result = qword_100160AD0;
  if (!qword_100160AD0)
  {
    sub_100012F08((uint64_t *)&unk_10015A850);
    sub_100108550();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AD0);
  }
  return result;
}

unint64_t sub_100108550()
{
  unint64_t result = qword_10015A860;
  if (!qword_10015A860)
  {
    sub_1001094F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A860);
  }
  return result;
}

uint64_t sub_1001085A8@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 id];
  if (v3)
  {
    unsigned int v4 = v3;
    sub_1001094B0();

    uint64_t v5 = sub_1001094F0();
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1001094F0();
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

id JournalEntryAssetMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryAssetMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryAssetMO()
{
  return self;
}

id JournalEntryAssetMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryAssetMO();
  return [super dealloc];
}

id static JournalEntryAssetMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id JournalEntryMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalEntryMO();
  [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalEntryMO()
{
  return self;
}

id JournalEntryMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryMO();
  return [super dealloc];
}

id static JournalEntryMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id JournalMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for JournalMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for JournalMO()
{
  return self;
}

id JournalMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalMO();
  return [super dealloc];
}

id static JournalMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

id SyncDataMO.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SyncDataMO();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for SyncDataMO()
{
  return self;
}

id SyncDataMO.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncDataMO();
  return [super dealloc];
}

id static SyncDataMO.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_100109CF0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_100108C78@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SyncDataMO();
  uint64_t result = sub_10010A8F0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_100108CE0()
{
  return static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
}

uint64_t sub_100108CF0()
{
  return static FormatStyle.list<A>(type:width:)();
}

uint64_t sub_100108D00()
{
  return static FormatStyle<>.time(pattern:)();
}

uint64_t sub_100108D10()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_100108D20()
{
  return JSONDecoder.init()();
}

uint64_t sub_100108D30()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_100108D40()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_100108D50()
{
  return JSONEncoder.init()();
}

uint64_t sub_100108D60()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_100108D70()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_100108D80()
{
  return static Measurement<>.FormatStyle.UnitWidth.wide.getter();
}

uint64_t sub_100108D90()
{
  return static Measurement<>.FormatStyle.UnitWidth.narrow.getter();
}

uint64_t sub_100108DA0()
{
  return Measurement<>.formatted<A>(_:)();
}

uint64_t sub_100108DB0()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t sub_100108DC0()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_100108DD0()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_100108DE0()
{
  return DateInterval.end.getter();
}

uint64_t sub_100108DF0()
{
  return DateInterval.start.getter();
}

uint64_t sub_100108E00()
{
  return type metadata accessor for DateInterval();
}

uint64_t sub_100108E10()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100108E20()
{
  return Notification.init(name:object:userInfo:)();
}

uint64_t sub_100108E30()
{
  return Notification.object.getter();
}

uint64_t sub_100108E40()
{
  return Notification.userInfo.getter();
}

uint64_t sub_100108E50()
{
  return type metadata accessor for Notification();
}

uint64_t sub_100108E60()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_100108E70()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_100108E80()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_100108E90()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_100108EA0()
{
  return __DataStorage._length.getter();
}

uint64_t sub_100108EB0()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_100108EC0()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_100108ED0()
{
  return DateComponents.day.setter();
}

uint64_t sub_100108EE0()
{
  return DateComponents.second.getter();
}

uint64_t sub_100108EF0()
{
  return DateComponents.second.setter();
}

uint64_t sub_100108F00()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_100108F10()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_100108F20()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_100108F30()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_100108F40()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_100108F50()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_100108F60(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_100108F70()
{
  return URLResourceValues.creationDate.getter();
}

uint64_t sub_100108F80()
{
  return URLResourceValues.fileSize.getter();
}

uint64_t sub_100108F90()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t sub_100108FA0()
{
  return IntegerFormatStyle.init(locale:)();
}

uint64_t sub_100108FB0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_100108FC0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_100108FD0()
{
  return FloatingPointFormatStyle.init(locale:)();
}

uint64_t sub_100108FE0()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t sub_100108FF0()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t sub_100109000()
{
  return static MeasurementFormatUnitUsage<>.workout.getter();
}

uint64_t sub_100109010()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t sub_100109020()
{
  return static FormatStyleCapitalizationContext.standalone.getter();
}

uint64_t sub_100109030()
{
  return static FormatStyleCapitalizationContext.unknown.getter();
}

uint64_t sub_100109040()
{
  return type metadata accessor for FormatStyleCapitalizationContext();
}

uint64_t sub_100109050()
{
  return URL.isFileURL.getter();
}

uint64_t sub_100109060()
{
  return URL.relativePath.getter();
}

uint64_t sub_100109070()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_100109080()
{
  return URL.pathExtension.getter();
}

uint64_t sub_100109090()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1001090A0()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t sub_1001090B0()
{
  return static URL.cachesDirectory.getter();
}

uint64_t sub_1001090C0()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t sub_1001090D0()
{
  return static URL.libraryDirectory.getter();
}

uint64_t sub_1001090E0()
{
  return static URL.temporaryDirectory.getter();
}

void sub_1001090F0(NSURL *retstr@<X8>)
{
}

void sub_100109100(Swift::String a1)
{
}

uint64_t sub_100109110()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_100109120()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t sub_100109130()
{
  return URL.deletingLastPathComponent()();
}

uint64_t sub_100109140()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109150(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_100109160()
{
  return URL.path.getter();
}

uint64_t sub_100109170()
{
  return URL.append<A>(path:directoryHint:)();
}

uint64_t sub_100109180()
{
  return URL.append<A>(component:directoryHint:)();
}

uint64_t sub_100109190()
{
  return URL.init(string:)();
}

uint64_t sub_1001091A0()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t sub_1001091B0()
{
  return URL.appending<A>(components:directoryHint:)();
}

uint64_t sub_1001091C0()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_1001091D0()
{
  return URL.formatted()()._countAndFlagsBits;
}

uint64_t sub_1001091E0()
{
  return type metadata accessor for URL();
}

void sub_1001091F0()
{
}

uint64_t sub_100109200()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_100109210()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_100109220()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t sub_100109230()
{
  return Data._Representation.append(contentsOf:)();
}

NSData sub_100109240()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_100109250()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109260()
{
  return Data.write(to:options:)();
}

uint64_t sub_100109270()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_100109280()
{
  return static Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_100109290()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t sub_1001092A0()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t sub_1001092B0()
{
  return Date.FormatStyle.day(_:)();
}

uint64_t sub_1001092C0()
{
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
}

uint64_t sub_1001092D0()
{
  return Date.FormatStyle.year(_:)();
}

uint64_t sub_1001092E0()
{
  return Date.FormatStyle.month(_:)();
}

uint64_t sub_1001092F0()
{
  return static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
}

uint64_t sub_100109300()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Day();
}

uint64_t sub_100109310()
{
  return static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
}

uint64_t sub_100109320()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Year();
}

uint64_t sub_100109330()
{
  return static Date.FormatStyle.Symbol.Month.abbreviated.getter();
}

uint64_t sub_100109340()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Month();
}

uint64_t sub_100109350()
{
  return static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
}

uint64_t sub_100109360()
{
  return static Date.FormatStyle.Symbol.Weekday.wide.getter();
}

uint64_t sub_100109370()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Weekday();
}

uint64_t sub_100109380()
{
  return Date.FormatStyle.weekday(_:)();
}

uint64_t sub_100109390()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t sub_1001093A0()
{
  return Date.debugDescription.getter();
}

uint64_t sub_1001093B0()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_1001093C0()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_1001093D0()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1001093E0()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1001093F0()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_100109400()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_100109410()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_100109420()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109430()
{
  return static Date.now.getter();
}

uint64_t sub_100109440()
{
  return Date.formatted<A>(_:)();
}

uint64_t sub_100109450()
{
  return Date.init()();
}

uint64_t sub_100109460()
{
  return type metadata accessor for Date();
}

uint64_t sub_100109470()
{
  return UUID.uuidString.getter();
}

NSUUID sub_100109480()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_1001094A0()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_1001094B0()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001094C0()
{
  return UUID.init(uuid:)();
}

uint64_t sub_1001094D0()
{
  return UUID.uuid.getter();
}

uint64_t sub_1001094E0()
{
  return UUID.init()();
}

uint64_t sub_1001094F0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_100109500()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_100109510()
{
  return static Locale.current.getter();
}

uint64_t sub_100109520()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100109530()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_100109540()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_100109550()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_100109560()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t sub_100109570()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t sub_100109580()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t sub_100109590()
{
  return Calendar.compare(_:to:toGranularity:)();
}

uint64_t sub_1001095A0()
{
  return static Calendar.current.getter();
}

uint64_t sub_1001095B0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1001095C0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1001095D0()
{
  return static TimeZone.autoupdatingCurrent.getter();
}

uint64_t sub_1001095E0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1001095F0()
{
  return IndexPath.init(arrayLiteral:)();
}

NSIndexPath sub_100109600()
{
  return IndexPath._bridgeToObjectiveC()();
}

uint64_t sub_100109610()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109620()
{
  return IndexPath.item.getter();
}

uint64_t sub_100109630()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_100109640()
{
  return static Selector.== infix(_:_:)();
}

uint64_t sub_100109650()
{
  return static AVPartialAsyncProperty<A>.duration.getter();
}

uint64_t sub_100109660()
{
  return type metadata accessor for CGPathFillRule();
}

uint64_t sub_100109680()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100109690()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1001096A0()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001096B0()
{
  return CGFloat.roundToScreenScale()();
}

uint64_t sub_1001096C0()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_1001096D0()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_1001096E0()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_1001096F0()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_100109700()
{
  return static RegexWordBoundaryKind.simple.getter();
}

uint64_t sub_100109710()
{
  return type metadata accessor for RegexWordBoundaryKind();
}

uint64_t sub_100109720()
{
  return Regex.init(_regexString:version:)();
}

uint64_t sub_100109730()
{
  return Regex.ignoresCase(_:)();
}

uint64_t sub_100109740()
{
  return Regex.wordBoundaryKind(_:)();
}

uint64_t sub_100109750()
{
  return Regex.Match.output.getter();
}

uint64_t sub_100109760()
{
  return type metadata accessor for ActivityScene();
}

uint64_t sub_100109770()
{
  return UTType.identifier.getter();
}

uint64_t sub_100109780()
{
  return static UTType.calendarEvent.getter();
}

uint64_t sub_100109790()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

uint64_t sub_1001097A0()
{
  return static UTType.audiovisualContent.getter();
}

UTType sub_1001097B0()
{
  return UTType._bridgeToObjectiveC()();
}

uint64_t sub_1001097C0()
{
  return static UTType.url.getter();
}

uint64_t sub_1001097D0()
{
  return static UTType.data.getter();
}

uint64_t sub_1001097E0()
{
  return static UTType.heic.getter();
}

uint64_t sub_1001097F0()
{
  return static UTType.item.getter();
}

uint64_t sub_100109800()
{
  return static UTType.text.getter();
}

uint64_t sub_100109810()
{
  return static UTType.audio.getter();
}

uint64_t sub_100109820()
{
  return static UTType.image.getter();
}

uint64_t sub_100109830()
{
  return static UTType.movie.getter();
}

uint64_t sub_100109840()
{
  return static UTType.video.getter();
}

uint64_t sub_100109850()
{
  return static UTType.contact.getter();
}

uint64_t sub_100109860()
{
  return UTType.conforms(to:)();
}

uint64_t sub_100109870()
{
  return static UTType.livePhoto.getter();
}

uint64_t sub_100109880()
{
  return type metadata accessor for UTType();
}

uint64_t sub_100109890()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_1001098A0()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t sub_1001098B0()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_1001098C0()
{
  return OSSignposter.init(logger:)();
}

uint64_t sub_1001098D0()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_1001098E0()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_1001098F0()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_100109900()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_100109910()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_100109920()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_100109930()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_100109940()
{
  return Logger.logObject.getter();
}

uint64_t sub_100109950()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100109960()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100109970()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

uint64_t sub_100109980()
{
  return UIMutableTraits.userInterfaceStyle.setter();
}

uint64_t sub_100109990()
{
  return type metadata accessor for UITraitLegibilityWeight();
}

uint64_t sub_1001099A0()
{
  return type metadata accessor for UITraitPreferredContentSizeCategory();
}

void sub_1001099B0()
{
}

uint64_t sub_1001099C0()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_1001099D0()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_1001099E0()
{
  return PassthroughSubject.init()();
}

uint64_t sub_1001099F0()
{
  return Subject<>.send()();
}

uint64_t sub_100109A00()
{
  return type metadata accessor for Published();
}

uint64_t sub_100109A10()
{
  return Publisher.collect<A>(_:options:)();
}

uint64_t sub_100109A20()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t sub_100109A30()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_100109A40()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t sub_100109A50()
{
  return AppStorage.wrappedValue.getter();
}

uint64_t sub_100109A60()
{
  return static Animation.easeIn(duration:)();
}

uint64_t sub_100109A70()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_100109A80()
{
  return static DispatchQoS.background.getter();
}

uint64_t sub_100109A90()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_100109AA0()
{
  return DispatchQoS.relativePriority.getter();
}

uint64_t sub_100109AB0()
{
  return static DispatchQoS.default.getter();
}

uint64_t sub_100109AC0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100109AD0()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_100109AE0()
{
  return Insecure.SHA1Digest.withUnsafeBytes<A>(_:)();
}

uint64_t sub_100109AF0()
{
  return type metadata accessor for Insecure.SHA1Digest();
}

uint64_t sub_100109B00()
{
  return Insecure.SHA1.update(bufferPointer:)();
}

uint64_t sub_100109B10()
{
  return Insecure.SHA1.finalize()();
}

uint64_t sub_100109B20()
{
  return Insecure.SHA1.init()();
}

uint64_t sub_100109B30()
{
  return type metadata accessor for Insecure.SHA1();
}

uint64_t sub_100109B40()
{
  return Array.init()();
}

uint64_t sub_100109B50()
{
  return CancellationError.init()();
}

NSDictionary sub_100109B60()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100109B70()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109B80()
{
  return Dictionary.removeValue(forKey:)();
}

uint64_t sub_100109B90()
{
  return Dictionary.init(minimumCapacity:)();
}

uint64_t sub_100109BA0()
{
  return type metadata accessor for Dictionary.Keys();
}

uint64_t sub_100109BB0()
{
  return Dictionary.count.getter();
}

void sub_100109BC0(Swift::Bool keepingCapacity)
{
}

uint64_t sub_100109BD0()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_100109BE0()
{
  return Dictionary.subscript.getter();
}

uint64_t sub_100109BF0()
{
  return Dictionary.subscript.setter();
}

uint64_t sub_100109C00()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_100109C10()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100109C20()
{
  return BidirectionalCollection<>.firstMatch<A, B>(of:)();
}

uint64_t sub_100109C30()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_100109C40()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t sub_100109C50()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_100109C60()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t sub_100109C70()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_100109C80()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100109C90()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

void sub_100109CA0(Swift::String a1)
{
}

uint64_t sub_100109CB0()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100109CC0()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_100109CD0()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t sub_100109CE0()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_100109CF0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100109D00()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_100109D10()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100109D20()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100109D30()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109D40()
{
  return String.init(format:_:)();
}

uint64_t sub_100109D50()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t sub_100109D60()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_100109D70()
{
  return String.init<A>(describing:)();
}

uint64_t sub_100109D80()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_100109D90()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_100109DA0()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100109DB0()
{
  return String.hash(into:)();
}

uint64_t sub_100109DC0()
{
  return String.count.getter();
}

uint64_t sub_100109DD0()
{
  return String.index(before:)();
}

uint64_t sub_100109DE0()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_100109DF0()
{
  return String.append<A>(contentsOf:)();
}

void sub_100109E00(Swift::String a1)
{
}

Swift::Int sub_100109E10()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_100109E20()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_100109E30()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_100109E50()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_100109E60()
{
  return String.UTF16View.index(_:offsetBy:)();
}

BOOL sub_100109E70(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

uint64_t sub_100109E80()
{
  return String.subscript.getter();
}

uint64_t sub_100109E90()
{
  return String.init<A>(_:)();
}

uint64_t sub_100109EA0()
{
  return String.subscript.getter();
}

uint64_t sub_100109EB0()
{
  return Sequence.formatted<A>(_:)();
}

uint64_t sub_100109EC0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100109F00()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100109F10()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_100109F20()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100109F30()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100109F40()
{
  return Array.description.getter();
}

uint64_t sub_100109F50()
{
  return specialized Array._endMutation()();
}

uint64_t sub_100109F60()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_100109F70()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100109F80()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_100109F90()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_100109FA0()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100109FB0()
{
  return Array.append(_:)();
}

uint64_t sub_100109FC0()
{
  return Array.endIndex.getter();
}

void sub_100109FD0(Swift::Bool keepingCapacity)
{
}

uint64_t sub_100109FE0()
{
  return type metadata accessor for Array();
}

uint64_t sub_100109FF0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10010A000()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10010A010()
{
  return type metadata accessor for CancellationError();
}

uint64_t sub_10010A020()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t sub_10010A050()
{
  return static MainActor.shared.getter();
}

uint64_t sub_10010A060()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_10010A070()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_10010A080()
{
  return type metadata accessor for TaskPriority();
}

void sub_10010A0A0()
{
}

uint64_t sub_10010A0B0()
{
  return static Task<>.checkCancellation()();
}

uint64_t sub_10010A0C0()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t sub_10010A0D0()
{
  return Double.write<A>(to:)();
}

uint64_t sub_10010A100()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10010A110()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10010A120()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

NSSet sub_10010A140()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_10010A150()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10010A160()
{
  return Set.description.getter();
}

uint64_t sub_10010A170()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10010A180()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_10010A1A0()
{
  return static Int._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10010A1B0()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10010A1C0()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10010A1E0()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

uint64_t sub_10010A1F0()
{
  return Collection.first.getter();
}

uint64_t sub_10010A200()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_10010A230()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_10010A240()
{
  return CGContextRef.fillPath(using:)();
}

uint64_t sub_10010A250()
{
  return CSSearchQuery.Results.Item.item.getter();
}

uint64_t sub_10010A260()
{
  return type metadata accessor for CSSearchQuery.Results.Item();
}

uint64_t sub_10010A270()
{
  return type metadata accessor for CSSearchQuery.Results.Iterator();
}

uint64_t sub_10010A280()
{
  return type metadata accessor for CSSearchQuery.Results();
}

uint64_t sub_10010A290()
{
  return CSSearchQuery.results.getter();
}

uint64_t sub_10010A2A0()
{
  return NSUndoManager.registerUndo<A>(withTarget:handler:)();
}

uint64_t sub_10010A2B0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10010A2C0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10010A2D0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10010A2E0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10010A2F0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10010A300()
{
  return NSItemProvider.loadObject<A>(ofClass:completionHandler:)();
}

uint64_t sub_10010A310()
{
  return NSItemProvider.canLoadObject<A>(ofClass:)();
}

uint64_t sub_10010A320()
{
  return NSItemProvider.loadFileRepresentation(for:openInPlace:completionHandler:)();
}

uint64_t sub_10010A330()
{
  return CGMutablePathRef.move(to:transform:)();
}

uint64_t sub_10010A340()
{
  return CGMutablePathRef.addLine(to:transform:)();
}

uint64_t sub_10010A350()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_10010A360()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t sub_10010A370()
{
  return static NSKeyedUnarchiver.unarchivedArrayOfObjects<A>(ofClass:from:)();
}

uint64_t sub_10010A380()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_10010A390()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t sub_10010A3A0()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_10010A3B0()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_10010A3C0()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t sub_10010A3D0()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t sub_10010A3E0()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t sub_10010A3F0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_10010A400()
{
  return OS_dispatch_queue.qos.getter();
}

uint64_t sub_10010A410()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_10010A420()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10010A430()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_10010A440()
{
  return UITraitCollection.modifyingTraits(_:)();
}

uint64_t sub_10010A450()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_10010A460()
{
  return static os_signpost_type_t.begin.getter();
}

void sub_10010A480()
{
}

Swift::Int sub_10010A490()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_10010A4A0()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t sub_10010A4B0()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t sub_10010A4C0()
{
  return type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
}

uint64_t sub_10010A4D0()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t sub_10010A500()
{
  return UITextFormattingViewController.FormattingDescriptor.init(attributes:)();
}

uint64_t sub_10010A510()
{
  return UITextFormattingViewController.FormattingDescriptor._blockquote.setter();
}

uint64_t sub_10010A520()
{
  return UITextFormattingViewController.FormattingDescriptor._bridgeToObjectiveC()();
}

uint64_t sub_10010A530()
{
  return UITextFormattingViewController.FormattingDescriptor.strikethroughPresent.setter();
}

uint64_t sub_10010A540()
{
  return UITextFormattingViewController.FormattingDescriptor.init(string:range:)();
}

uint64_t sub_10010A550()
{
  return type metadata accessor for UITextFormattingViewController.FormattingDescriptor();
}

uint64_t sub_10010A560()
{
  return static UITextFormattingViewController.ChangeValue._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10010A570()
{
  return type metadata accessor for UITextFormattingViewController.ChangeValue();
}

uint64_t sub_10010A580()
{
  return static UITextFormattingViewControllerComponent.component(_:_:)();
}

uint64_t sub_10010A590()
{
  return static UITextFormattingViewControllerComponentGroup.group(_:)();
}

uint64_t sub_10010A5A0()
{
  return NSSet.init(arrayLiteral:)();
}

uint64_t sub_10010A5B0()
{
  return NSSet.makeIterator()();
}

unint64_t sub_10010A5C0(Swift::Int64 value, Swift::Int32 timescale)
{
  return (unint64_t)CMTime.init(value:timescale:)(value, timescale);
}

unint64_t sub_10010A5D0(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  return (unint64_t)CMTime.init(seconds:preferredTimescale:)(seconds, preferredTimescale);
}

uint64_t sub_10010A5E0()
{
  return UIView.Invalidating.init(wrappedValue:_:)();
}

uint64_t sub_10010A5F0()
{
  return static UIView.Invalidating.subscript.getter();
}

uint64_t sub_10010A600()
{
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_10010A610()
{
  return type metadata accessor for UIView.Invalidating();
}

uint64_t sub_10010A620()
{
  return UIView.Invalidations.IntrinsicContentSize.init()();
}

uint64_t sub_10010A630()
{
  return type metadata accessor for UIView.Invalidations.IntrinsicContentSize();
}

uint64_t sub_10010A640()
{
  return UIView.registerForTraitChanges(_:action:)();
}

uint64_t sub_10010A650()
{
  return UIView.registerForTraitChanges<A>(_:handler:)();
}

uint64_t sub_10010A660()
{
  return static UIView.animate(_:changes:completion:)();
}

uint64_t sub_10010A670()
{
  return CKRecord.subscript.getter();
}

NSNumber sub_10010A680(Swift::Bool BOOLeanLiteral)
{
  return NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

Swift::Int sub_10010A690(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_10010A6A0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10010A6B0()
{
  return NSObject.hash(into:)();
}

uint64_t sub_10010A6C0()
{
  return CGPathRef.copy(dashingWithPhase:lengths:transform:)();
}

uint64_t sub_10010A6D0()
{
  return CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
}

uint64_t sub_10010A6E0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_10010A6F0()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_10010A700()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10010A710()
{
  return Optional<A>.hashValue.getter();
}

uint64_t sub_10010A720()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_10010A730()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10010A740()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10010A750()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_10010A760()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_10010A770()
{
  return StringProtocol.enumerateSubstrings<A>(in:options:_:)();
}

uint64_t sub_10010A780()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_10010A790()
{
  return StringProtocol.removingPercentEncoding.getter();
}

uint64_t sub_10010A7A0()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_10010A7B0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10010A7D0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10010A7E0()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_10010A7F0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_10010A800()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_10010A810()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_10010A820()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_10010A830()
{
  return __CocoaSet.Iterator.next()();
}

Swift::Int sub_10010A840(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_10010A850()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_10010A860()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10010A870()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10010A880()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10010A890()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_10010A8A0()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_10010A8C0()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

void sub_10010A8D0(Swift::Int a1)
{
}

uint64_t sub_10010A8E0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10010A8F0()
{
  return Identifiable<>.id.getter();
}

void sub_10010A900(Swift::Int a1)
{
}

uint64_t sub_10010A910()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10010A920()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10010A930()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10010A940()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_10010A950()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_10010A960()
{
  return static ManagedBuffer.create(minimumCapacity:makingHeaderWith:)();
}

uint64_t sub_10010A970()
{
  return type metadata accessor for ManagedBuffer();
}

uint64_t sub_10010A980()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10010A990()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t sub_10010A9B0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10010A9C0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10010A9D0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_10010A9E0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10010A9F0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10010AA00()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t sub_10010AA10()
{
  return ContinuousClock.init()();
}

uint64_t sub_10010AA20()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t sub_10010AA30()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t sub_10010AA40()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_10010AA50()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10010AA60()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10010AA70()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_10010AA80()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10010AA90()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t sub_10010AAA0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_10010AAB0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_10010AAC0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10010AAD0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10010AAE0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_10010AAF0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10010AB00()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10010AB10()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_10010AB20()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10010AB30()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10010AB40()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10010AB50()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10010AB60()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10010AB70()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10010AB80()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10010AB90()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10010ABA0()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_10010ABB0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10010ABC0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10010ABD0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10010ABE0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10010ABF0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10010AC00()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10010AC10()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10010AC20()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10010AC30()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_10010AC50(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10010AC60()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10010AC80()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_10010AC90()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_10010ACA0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10010ACB0()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_10010ACC0()
{
  return == infix<A>(_:_:)();
}

uint64_t sub_10010ACD0()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_10010ACE0()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_10010ACF0()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_10010AD00()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_10010AD10()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10010AD20()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10010AD30()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t sub_10010AD50()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_10010AD60()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_10010AD70()
{
  return Error._code.getter();
}

uint64_t sub_10010AD80()
{
  return Error._domain.getter();
}

uint64_t sub_10010AD90()
{
  return Error._userInfo.getter();
}

uint64_t sub_10010ADB0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10010ADC0()
{
  return Hasher.init(_seed:)();
}

void sub_10010ADD0(Swift::UInt a1)
{
}

void sub_10010ADE0(Swift::UInt8 a1)
{
}

void sub_10010ADF0(Swift::UInt32 a1)
{
}

void sub_10010AE00(Swift::UInt64 a1)
{
}

Swift::Int sub_10010AE10()
{
  return Hasher.finalize()();
}

Swift::Int sub_10010AE20()
{
  return Hasher._finalize()();
}

uint64_t sub_10010AE30()
{
  return Hasher.init()();
}

uint64_t sub_10010AE40()
{
  return type metadata accessor for Result();
}

uint64_t sub_10010AE50()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10010AE60()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10010AE70()
{
  return static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
}

uint64_t sub_10010AE80()
{
  return static Duration.TimeFormatStyle.Pattern.hourMinuteSecond.getter();
}

uint64_t sub_10010AE90()
{
  return type metadata accessor for Duration.TimeFormatStyle.Pattern();
}

uint64_t sub_10010AEA0()
{
  return static Duration.seconds(_:)();
}

uint64_t sub_10010AED0()
{
  return _typeName(_:qualified:)();
}

uint64_t CACornerRadiiEqualToRadii()
{
  return _CACornerRadiiEqualToRadii();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextClosePath(CGContextRef c)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateThumbnailAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return _CGImageSourceGetCount(isrc);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsNull(CGRect rect)
{
  return _CGRectIsNull(rect);
}

CGRect CGRectStandardize(CGRect rect)
{
  return _CGRectStandardize(rect);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return _CGSizeEqualToSize(size1, size2);
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return _CLLocationCoordinate2DIsValid(coord);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t HKStateOfMindDomainFromAssociation()
{
  return _HKStateOfMindDomainFromAssociation();
}

uint64_t HKUILocalizedStringForStateOfMindDomain()
{
  return _HKUILocalizedStringForStateOfMindDomain();
}

uint64_t HKUILocalizedStringForStateOfMindLabel()
{
  return _HKUILocalizedStringForStateOfMindLabel();
}

uint64_t HKUIStandardMapGreenColor()
{
  return _HKUIStandardMapGreenColor();
}

uint64_t HKUIStandardMapRedColor()
{
  return _HKUIStandardMapRedColor();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  CLLocationCoordinate2D v3 = _MKCoordinateForMapPoint(mapPoint);
  double longitude = v3.longitude;
  double latitude = v3.latitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

MKCoordinateRegion MKCoordinateRegionForMapRect(MKMapRect rect)
{
  return _MKCoordinateRegionForMapRect(rect);
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MKMapPoint v3 = _MKMapPointForCoordinate(coordinate);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersectsRect(rect1, rect2);
}

MKMapRect MKMapRectUnion(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectUnion(rect1, rect2);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  return _MKRoadWidthAtZoomScale(zoomScale);
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSRange v4 = _NSIntersectionRange(range1, range2);
  NSUInteger length = v4.length;
  NSUInteger location = v4.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return _NSStringFromCGRect(rect);
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _UIAccessibilityIsReduceMotionEnabled();
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImageHEICRepresentation(UIImage *image)
{
  return _UIImageHEICRepresentation(image);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UISColorLuminance()
{
  return _UISColorLuminance();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return _swift_getFunctionTypeMetadata1();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_task_getMainExecutor()
{
  return _swift_task_getMainExecutor();
}

uint64_t swift_task_isCancelled()
{
  return _swift_task_isCancelled();
}

uint64_t swift_task_isCurrentExecutor()
{
  return _swift_task_isCurrentExecutor();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unownedRetainStrong()
{
  return _swift_unownedRetainStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuiteName:];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}